WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
--On Thursday, February 14, 2002 12:06:40 -0800 Paul Menage <pmenage@ensim.com> wrote:

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#33: 
> static int path_lookup(const char *name, struct nameidata *nd, int flags)
                                                             ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#36: 
>     if(!path_init(name, flags, nd))
                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#39: 
>     return path_walk(name, nd);
                             ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/dcache.c:706:
+        struct dentry *dentry = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/dcache.c:706:
+        struct dentry *dentry = NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/dcache.c:707:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/dcache.c:707:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/dcache.c:708:
+        spin_lock(&dcache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/dcache.c:708:
+        spin_lock(&dcache_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: fs/dcache.c:709:
+        dentry = __d_lookup(parent, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/dcache.c:709:
+        dentry = __d_lookup(parent, name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/dcache.c:710:
+        spin_unlock(&dcache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/dcache.c:710:
+        spin_unlock(&dcache_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: fs/dcache.c:711:
+        return dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/dcache.c:711:
+        return dentry;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: fs/dcache.c:713:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: fs/dcache.c:713:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: fs/dcache.c:714:
+struct dentry * __d_lookup(struct dentry *parent, struct qstr *name)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/dcache.c:716:
+        unsigned int len = name->len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/dcache.c:716:
+        unsigned int len = name->len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/dcache.c:717:
+        unsigned int hash = name->hash;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/dcache.c:717:
+        unsigned int hash = name->hash;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/dcache.c:718:
+        const unsigned char *str = name->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/dcache.c:718:
+        const unsigned char *str = name->name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: fs/dcache.c:719:
+        struct list_head *head = d_hash(parent,hash);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/dcache.c:719:
+        struct list_head *head = d_hash(parent,hash);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: fs/dcache.c:719:
+        struct list_head *head = d_hash(parent,hash);
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: fs/dcache.c:720:
+        struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/dcache.c:720:
+        struct list_head *tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/dcache.c:721:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/dcache.c:721:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: fs/dcache.c:722:
+        tmp = head->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/dcache.c:722:
+        tmp = head->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: fs/dcache.c:723:
+        for (;;) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/dcache.c:723:
+        for (;;) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: fs/dcache.c:724:
+                struct dentry * dentry = list_entry(tmp, struct dentry, d_hash);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/dcache.c:724:
+                struct dentry * dentry = list_entry(tmp, struct dentry, d_hash);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#117: FILE: fs/dcache.c:724:
+                struct dentry * dentry = list_entry(tmp, struct dentry, d_hash);

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: fs/dcache.c:725:
+                if (tmp == head)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: fs/dcache.c:725:
+                struct dentry * dentry = list_entry(tmp, struct dentry, d_hash);
+                if (tmp == head)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/dcache.c:725:
+                if (tmp == head)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/dcache.c:726:
+                        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/dcache.c:726:
+                        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: fs/dcache.c:727:
+                tmp = tmp->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/dcache.c:727:
+                tmp = tmp->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: fs/dcache.c:728:
+                if (dentry->d_name.hash != hash)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/dcache.c:728:
+                if (dentry->d_name.hash != hash)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: fs/dcache.c:729:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/dcache.c:729:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: fs/dcache.c:730:
+                if (dentry->d_parent != parent)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/dcache.c:730:
+                if (dentry->d_parent != parent)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: fs/dcache.c:731:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/dcache.c:731:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: fs/dcache.c:732:
+                if (parent->d_op && parent->d_op->d_compare) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/dcache.c:732:
+                if (parent->d_op && parent->d_op->d_compare) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: fs/dcache.c:733:
+                        if (parent->d_op->d_compare(parent, &dentry->d_name, name))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/dcache.c:733:
+                        if (parent->d_op->d_compare(parent, &dentry->d_name, name))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: fs/dcache.c:734:
+                                continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/dcache.c:734:
+                                continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/dcache.c:735:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/dcache.c:735:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: fs/dcache.c:736:
+                        if (dentry->d_name.len != len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/dcache.c:736:
+                        if (dentry->d_name.len != len)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: fs/dcache.c:737:
+                                continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/dcache.c:737:
+                                continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/dcache.c:738:
+                        if (memcmp(dentry->d_name.name, str, len))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/dcache.c:738:
+                        if (memcmp(dentry->d_name.name, str, len))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: fs/dcache.c:739:
+                                continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/dcache.c:739:
+                                continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/dcache.c:740:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/dcache.c:740:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/dcache.c:741:
+                __dget_locked(dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/dcache.c:741:
+                __dget_locked(dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: fs/dcache.c:742:
+                dentry->d_vfs_flags |= DCACHE_REFERENCED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: fs/dcache.c:742:
+                dentry->d_vfs_flags |= DCACHE_REFERENCED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: fs/dcache.c:743:
+                return dentry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/dcache.c:743:
+                return dentry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: fs/dcache.c:744:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/dcache.c:744:
+        }$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#150: FILE: fs/exec.c:346:
+	err = path_init_walk(name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                                           ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#150: FILE: fs/exec.c:346:
+	err = path_init_walk(name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: fs/namei.c:265:
+	struct dentry *dentry = NULL;
+	if(flags & LOOKUP_LOCKED){

ERROR:SPACING: space required before the open brace '{'
#163: FILE: fs/namei.c:265:
+	if(flags & LOOKUP_LOCKED){

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: fs/namei.c:265:
+	if(flags & LOOKUP_LOCKED){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#167: FILE: fs/namei.c:269:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: fs/namei.c:278:
+	if(flags & LOOKUP_LOCKED)

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/namei.c:391:
+        struct vfsmount *mounted;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/namei.c:391:
+        struct vfsmount *mounted;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: fs/namei.c:394:
+        mounted = lookup_mnt(*mnt, *dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: fs/namei.c:394:
+        mounted = lookup_mnt(*mnt, *dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: fs/namei.c:395:
+        if (mounted) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/namei.c:395:
+        if (mounted) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: fs/namei.c:396:
+                *mnt = mntget(mounted);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: fs/namei.c:396:
+                *mnt = mntget(mounted);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: fs/namei.c:397:
+                spin_unlock(&dcache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: fs/namei.c:397:
+                spin_unlock(&dcache_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: fs/namei.c:398:
+                dput(*dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: fs/namei.c:398:
+                dput(*dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: fs/namei.c:399:
+                mntput(mounted->mnt_parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/namei.c:399:
+                mntput(mounted->mnt_parent);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: fs/namei.c:400:
+                *dentry = dget(mounted->mnt_root);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: fs/namei.c:400:
+                *dentry = dget(mounted->mnt_root);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: fs/namei.c:401:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: fs/namei.c:401:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: fs/namei.c:402:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: fs/namei.c:402:
+        }$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#216: FILE: fs/namei.c:413:
+static inline void undo_locked( struct nameidata *nd)
                                                   ^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#216: FILE: fs/namei.c:413:
+static inline void undo_locked( struct nameidata *nd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: fs/namei.c:415:
+        if(nd->flags & LOOKUP_LOCKED){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/namei.c:415:
+        if(nd->flags & LOOKUP_LOCKED){$

ERROR:SPACING: space required before the open brace '{'
#218: FILE: fs/namei.c:415:
+        if(nd->flags & LOOKUP_LOCKED){

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: fs/namei.c:415:
+        if(nd->flags & LOOKUP_LOCKED){

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: fs/namei.c:416:
+                dget(nd->dentry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/namei.c:416:
+                dget(nd->dentry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: fs/namei.c:417:
+                mntget(nd->mnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/namei.c:417:
+                mntget(nd->mnt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: fs/namei.c:418:
+                spin_unlock(&dcache_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/namei.c:418:
+                spin_unlock(&dcache_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: fs/namei.c:420:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/namei.c:420:
+        }$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#232: FILE: fs/namei.c:523:
+				undo_locked(nd);
 				            ^^

ERROR:SPACING: space required before the open brace '{'
#242: FILE: fs/namei.c:539:
+		if(nd->flags & LOOKUP_LOCKED){

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: fs/namei.c:539:
+		if(nd->flags & LOOKUP_LOCKED){

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#244: FILE: fs/namei.c:541:
+			dentry = cached_lookup(nd->dentry, &this, LOOKUP_CONTINUE|LOOKUP_LOCKED);
 			                                                         ^

ERROR:SPACING: space required before the open brace '{'
#246: FILE: fs/namei.c:543:
+		else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#246: FILE: fs/namei.c:543:
+		}
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#246: FILE: fs/namei.c:543:
+		else{

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#251: FILE: fs/namei.c:548:
+			undo_locked(nd);
 			            ^^

ERROR:SPACING: space required before the open brace '{'
#260: FILE: fs/namei.c:555:
+		if(d_mountpoint(dentry)){

ERROR:SPACING: space required before the open parenthesis '('
#260: FILE: fs/namei.c:555:
+		if(d_mountpoint(dentry)){

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#261: FILE: fs/namei.c:556:
+			undo_locked(nd);
 			            ^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#262: FILE: fs/namei.c:557:
+			while ( d_mountpoint(dentry) && __follow_down(&nd->mnt, &dentry));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#271: FILE: fs/namei.c:569:
+			undo_locked(nd);
 			            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#289: FILE: fs/namei.c:603:
+				undo_locked(nd);
 				            ^^

ERROR:SPACING: space required before the open parenthesis '('
#298: FILE: fs/namei.c:615:
+		if(nd->flags & LOOKUP_LOCKED)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#302: FILE: fs/namei.c:619:
+		undo_locked(nd);
 		            ^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#311: FILE: fs/namei.c:626:
+		while (d_mountpoint(dentry) && __follow_down(&nd->mnt, &dentry));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#311: FILE: fs/namei.c:626:
 		}
+		while (d_mountpoint(dentry) && __follow_down(&nd->mnt, &dentry));

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#319: FILE: fs/namei.c:663:
+		undo_locked(nd);
 		            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#322: FILE: fs/namei.c:666:
+		undo_locked(nd);
 		            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#327: FILE: fs/namei.c:670:
+	undo_locked(nd);
 	            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#336: FILE: fs/namei.c:778:
+int path_init_walk(const char *name, unsigned int flags, struct nameidata *nd)
                                                                            ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: fs/namei.c:780:
+        nd->last_type = LAST_ROOT; /* if there are only slashes... */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/namei.c:780:
+        nd->last_type = LAST_ROOT; /* if there are only slashes... */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: fs/namei.c:781:
+        nd->flags = flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: fs/namei.c:781:
+        nd->flags = flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: fs/namei.c:783:
+        if (*name=='/'){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: fs/namei.c:783:
+        if (*name=='/'){$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#341: FILE: fs/namei.c:783:
+        if (*name=='/'){
                  ^

ERROR:SPACING: space required before the open brace '{'
#341: FILE: fs/namei.c:783:
+        if (*name=='/'){

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: fs/namei.c:784:
+        ^Iread_lock(&current->fs->lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: fs/namei.c:784:
+        ^Iread_lock(&current->fs->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/namei.c:784:
+        ^Iread_lock(&current->fs->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: fs/namei.c:785:
+        ^Iif (current->fs->altroot && !(nd->flags & LOOKUP_NOALT)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: fs/namei.c:785:
+        ^Iif (current->fs->altroot && !(nd->flags & LOOKUP_NOALT)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/namei.c:785:
+        ^Iif (current->fs->altroot && !(nd->flags & LOOKUP_NOALT)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: fs/namei.c:787:
+                ^Ind->dentry = current->fs->altroot;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#345: FILE: fs/namei.c:787:
+                ^Ind->dentry = current->fs->altroot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: fs/namei.c:787:
+                ^Ind->dentry = current->fs->altroot;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: fs/namei.c:788:
+                ^Iread_unlock(&current->fs->lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#346: FILE: fs/namei.c:788:
+                ^Iread_unlock(&current->fs->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: fs/namei.c:788:
+                ^Iread_unlock(&current->fs->lock);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#348: FILE: fs/namei.c:790:
+                	if (__emul_lookup_dentry(name,nd))
                 	                              ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: fs/namei.c:790:
+                ^Iif (__emul_lookup_dentry(name,nd))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: fs/namei.c:790:
+                ^Iif (__emul_lookup_dentry(name,nd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: fs/namei.c:790:
+                ^Iif (__emul_lookup_dentry(name,nd))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: fs/namei.c:790:
+                	if (__emul_lookup_dentry(name,nd))
                 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: fs/namei.c:791:
+                        ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: fs/namei.c:791:
+                        ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: fs/namei.c:791:
+                        ^Ireturn 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: fs/namei.c:792:
+                ^Iread_lock(&current->fs->lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: fs/namei.c:792:
+                ^Iread_lock(&current->fs->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: fs/namei.c:792:
+                ^Iread_lock(&current->fs->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: fs/namei.c:794:
+        ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: fs/namei.c:794:
+        ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: fs/namei.c:794:
+        ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: fs/namei.c:795:
+    ^I^Ind->mnt = current->fs->rootmnt;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: fs/namei.c:795:
+    ^I^Ind->mnt = current->fs->rootmnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: fs/namei.c:795:
+    ^I^Ind->mnt = current->fs->rootmnt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: fs/namei.c:796:
+        ^Ind->dentry = current->fs->root;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: fs/namei.c:796:
+        ^Ind->dentry = current->fs->root;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: fs/namei.c:796:
+        ^Ind->dentry = current->fs->root;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: fs/namei.c:797:
+        ^Iread_unlock(&current->fs->lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: fs/namei.c:797:
+        ^Iread_unlock(&current->fs->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: fs/namei.c:797:
+        ^Iread_unlock(&current->fs->lock);$

ERROR:SPACING: space required before the open brace '{'
#357: FILE: fs/namei.c:799:
+	else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#357: FILE: fs/namei.c:799:
+	}
+	else{

CHECK:BRACES: Unbalanced braces around else statement
#357: FILE: fs/namei.c:799:
+	else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: fs/namei.c:800:
+        ^Iread_lock(&current->fs->lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: fs/namei.c:800:
+        ^Iread_lock(&current->fs->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: fs/namei.c:800:
+        ^Iread_lock(&current->fs->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: fs/namei.c:801:
+        ^Ind->mnt = current->fs->pwdmnt;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: fs/namei.c:801:
+        ^Ind->mnt = current->fs->pwdmnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: fs/namei.c:801:
+        ^Ind->mnt = current->fs->pwdmnt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: fs/namei.c:802:
+        ^Ind->dentry = current->fs->pwd;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#360: FILE: fs/namei.c:802:
+        ^Ind->dentry = current->fs->pwd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: fs/namei.c:802:
+        ^Ind->dentry = current->fs->pwd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: fs/namei.c:803:
+        ^Iread_unlock(&current->fs->lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#361: FILE: fs/namei.c:803:
+        ^Iread_unlock(&current->fs->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: fs/namei.c:803:
+        ^Iread_unlock(&current->fs->lock);$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#364: FILE: fs/namei.c:806:
+        return (path_walk(name, nd));
                                 ^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: fs/namei.c:806:
+        return (path_walk(name, nd));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: fs/namei.c:806:
+        return (path_walk(name, nd));$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#364: FILE: fs/namei.c:806:
+        return (path_walk(name, nd));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#376: FILE: fs/namei.c:1389:
+		error = path_init_walk(tmp, LOOKUP_PARENT, &nd);
 		                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#389: FILE: fs/namespace.c:378:
+	retval = path_init_walk(kname, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &nd);
 	                                                               ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#389: FILE: fs/namespace.c:378:
+	retval = path_init_walk(kname, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &nd);
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#399: FILE: fs/namespace.c:507:
+	err = path_init_walk(old_name, LOOKUP_POSITIVE|LOOKUP_FOLLOW, &old_nd);
 	                                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#409: FILE: fs/namespace.c:670:
+	retval = path_init_walk(dir_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                                                  ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#409: FILE: fs/namespace.c:670:
+	retval = path_init_walk(dir_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#419: FILE: fs/namespace.c:780:
+	error = path_init_walk(name, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &new_nd);
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#419: FILE: fs/namespace.c:780:
+	error = path_init_walk(name, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &new_nd);
 	                                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#429: FILE: fs/namespace.c:793:
+	error = path_init_walk(name, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &old_nd);
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#429: FILE: fs/namespace.c:793:
+	error = path_init_walk(name, LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &old_nd);
 	                                                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#439: FILE: fs/namespace.c:983:
+	error = path_init_walk("/dev", LOOKUP_FOLLOW|LOOKUP_POSITIVE, &devfs_nd);
 	                                            ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#449: FILE: fs/namespace.c:1006:
+	error = path_init_walk(put_old, LOOKUP_FOLLOW|LOOKUP_POSITIVE|LOOKUP_DIRECTORY, &nd);
 	                                                                                 ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#449: FILE: fs/namespace.c:1006:
+	error = path_init_walk(put_old, LOOKUP_FOLLOW|LOOKUP_POSITIVE|LOOKUP_DIRECTORY, &nd);
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#449: FILE: fs/namespace.c:1006:
+	error = path_init_walk(put_old, LOOKUP_FOLLOW|LOOKUP_POSITIVE|LOOKUP_DIRECTORY, &nd);
 	                                                             ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#462: FILE: fs/open.c:371:
+	error = path_init_walk(name,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                                            ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#462: FILE: fs/open.c:371:
+	error = path_init_walk(name,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#462: FILE: fs/open.c:371:
+	error = path_init_walk(name,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#462: FILE: fs/open.c:371:
+	error = path_init_walk(name,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#462: FILE: fs/open.c:371:
+	error = path_init_walk(name,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#462: FILE: fs/open.c:371:
+	error = path_init_walk(name,LOOKUP_POSITIVE|LOOKUP_FOLLOW|LOOKUP_DIRECTORY,&nd);
 	                                                                           ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#486: FILE: fs/super.c:551:
+	error = path_init_walk(dev_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                                                 ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#486: FILE: fs/super.c:551:
+	error = path_init_walk(dev_name, LOOKUP_FOLLOW|LOOKUP_POSITIVE, &nd);
 	                                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#497: FILE: include/linux/dcache.h:221:
+extern struct dentry * __d_lookup(struct dentry *, struct qstr *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#497: FILE: include/linux/dcache.h:221:
+extern struct dentry * __d_lookup(struct dentry *, struct qstr *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#497: FILE: include/linux/dcache.h:221:
+extern struct dentry * __d_lookup(struct dentry *, struct qstr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct qstr *' should also have an identifier name
#497: FILE: include/linux/dcache.h:221:
+extern struct dentry * __d_lookup(struct dentry *, struct qstr *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: include/linux/fs.h:1273:
+ *  - locked on when the dcache_lock is held $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#525: FILE: include/linux/fs.h:1312:
+extern int FASTCALL(path_init_walk(const char *, unsigned, struct nameidata *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#525: FILE: include/linux/fs.h:1312:
+extern int FASTCALL(path_init_walk(const char *, unsigned, struct nameidata *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#525: FILE: include/linux/fs.h:1312:
+extern int FASTCALL(path_init_walk(const char *, unsigned, struct nameidata *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#525: FILE: include/linux/fs.h:1312:
+extern int FASTCALL(path_init_walk(const char *, unsigned, struct nameidata *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#525: FILE: include/linux/fs.h:1312:
+extern int FASTCALL(path_init_walk(const char *, unsigned, struct nameidata *));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000476584.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 101 errors, 117 warnings, 19 checks, 424 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000476584.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
