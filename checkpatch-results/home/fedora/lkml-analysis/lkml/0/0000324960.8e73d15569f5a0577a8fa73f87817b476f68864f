WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
o  This patch modifies the sysfs_create_file and sysfs_create_bin_file keeping 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: fs/sysfs/file.c:14:
+int sysfs_init_file(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#69: FILE: fs/sysfs/file.c:80:
+	struct attribute * attr = sysfs_get_file_attr(file);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#70: FILE: fs/sysfs/file.c:81:
+	struct kobject * kobj;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: fs/sysfs/file.c:135:
+ *^Iis in the file's sysfs_dirent which is present in ->d_fsdata. The $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/sysfs/file.c:202:
+	struct attribute * attr = sysfs_get_file_attr(file);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: fs/sysfs/file.c:203:
+	struct kobject * kobj = sysfs_get_file_kobject(file->f_dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: fs/sysfs/file.c:242:
+	struct kobject * kobj = kobject_get(sysfs_get_file_kobject(file->f_dentry));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: fs/sysfs/file.c:243:
+	struct attribute * attr = sysfs_get_file_attr(file);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: fs/sysfs/file.c:324:
+	struct kobject * kobj = sysfs_get_file_kobject(filp->f_dentry);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#119: FILE: fs/sysfs/file.c:325:
+	struct attribute * attr = sysfs_get_file_attr(filp);
 	                                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: fs/sysfs/file.c:325:
+	struct attribute * attr = sysfs_get_file_attr(filp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: fs/sysfs/file.c:349:
+int sysfs_add_file(struct sysfs_dirent * parent_sd, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: fs/sysfs/file.c:349:
+int sysfs_add_file(struct sysfs_dirent * parent_sd, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: fs/sysfs/file.c:350:
+int sysfs_add_file(struct sysfs_dirent * parent_sd, 
+			const struct attribute * attr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: fs/sysfs/file.c:350:
+			const struct attribute * attr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: fs/sysfs/file.c:352:
+	struct sysfs_dirent * sd;

CHECK:SPACING: No space is necessary after a cast
#148: FILE: fs/sysfs/file.c:354:
+	sd = sysfs_alloc_dirent(parent_sd, (void *) attr, SYSFS_KOBJ_ATTR);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: fs/sysfs/file.c:386:
+	struct dentry * dir = kobj->s_dirent->s_dentry;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#222: FILE: fs/sysfs/bin.c:20:
+	struct sysfs_dirent * sd = dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: fs/sysfs/bin.c:21:
+	struct bin_attribute * attr = sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: fs/sysfs/bin.c:22:
+	struct kobject * kobj = sysfs_get_file_kobject(dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: fs/sysfs/bin.c:64:
+	struct sysfs_dirent * sd = dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: fs/sysfs/bin.c:65:
+	struct bin_attribute * attr = sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: fs/sysfs/bin.c:66:
+	struct kobject * kobj = sysfs_get_file_kobject(dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: fs/sysfs/bin.c:99:
+	struct kobject * kobj = kobject_get(sysfs_get_file_kobject(file->f_dentry));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: fs/sysfs/bin.c:100:
+	struct sysfs_dirent * sd = file->f_dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: fs/sysfs/bin.c:101:
+	struct bin_attribute * attr = sd->s_element;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: fs/sysfs/bin.c:128:
+	struct kobject * kobj = sysfs_get_file_kobject(file->f_dentry);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#266: FILE: fs/sysfs/bin.c:137:
+struct file_operations bin_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: fs/sysfs/bin.c:154:
+	struct sysfs_dirent * sd;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: fs/sysfs/inode.c:87:
+void sysfs_hash_and_remove(struct sysfs_dirent * parent_sd, const char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#348: FILE: fs/sysfs/inode.c:87:
+void sysfs_hash_and_remove(struct sysfs_dirent * parent_sd, const char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#351: FILE: fs/sysfs/inode.c:90:
+	struct dentry * dir = parent_sd->s_dentry;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: fs/sysfs/inode.c:105:
+			printk("sysfs:Removing %s (%d)\n", victim->d_name.name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: fs/sysfs/inode.c:106:
+			printk("sysfs:Removing %s (%d)\n", victim->d_name.name,
 				 atomic_read(&victim->d_count));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#386: FILE: fs/sysfs/inode.c:118:
+int sysfs_get_link_count(struct sysfs_dirent * sd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: fs/sysfs/inode.c:120:
+^Iint count = 1; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000324960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 4 warnings, 3 checks, 313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000324960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
