WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#50: FILE: fs/nfs/file.c:259:
+		printk(KERN_INFO "NFS: file locking over NFSv4 is not yet supported\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#84: FILE: fs/nfs/inode.c:297:
+			printk(KERN_NOTICE "NFS: NFSv4 not supported by mount program.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#88: FILE: fs/nfs/inode.c:301:
+		printk(KERN_NOTICE "NFS: NFSv4 not supported.\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#92: FILE: fs/nfs/inode.c:305:
+	}
+	else if (data->flags & NFS_MOUNT_VER3) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: include/linux/nfs_fs.h:450:
+        atomic_t                cl_count;       /* refcount */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: include/linux/nfs_fs.h:450:
+        atomic_t                cl_count;       /* refcount */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: include/linux/nfs_fs.h:451:
+        u64                     cl_clientid;    /* constant */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/linux/nfs_fs.h:451:
+        u64                     cl_clientid;    /* constant */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: include/linux/nfs_fs.h:453:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: include/linux/nfs_fs.h:454:
+         * Starts a list of lockowners, linked through lo_list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: include/linux/nfs_fs.h:456:
+        struct list_head        cl_lockowners;  /* protected by state_spinlock */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/linux/nfs_fs.h:456:
+        struct list_head        cl_lockowners;  /* protected by state_spinlock */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/linux/nfs_fs.h:460:
+extern int nfs4_proc_renew(struct nfs_server *server);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/nfs_fs.h:463:
+extern int nfs4_init_renewd(struct nfs_server *server);

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#141: FILE: include/linux/nfs_xdr.h:314:
+	u32 *				ac_resp_supported; /* response */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#142: FILE: include/linux/nfs_xdr.h:315:
+	u32 *				ac_resp_access;    /* response */

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#146: FILE: include/linux/nfs_xdr.h:319:
+	char *				cl_stateid;        /* request */

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#153: FILE: include/linux/nfs_xdr.h:326:
+	struct nfs_writeverf *		co_verifier;       /* response */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#161: FILE: include/linux/nfs_xdr.h:334:
+			const char *	text;

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#169: FILE: include/linux/nfs_xdr.h:342:
+	const char *			cr_name;           /* request */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#170: FILE: include/linux/nfs_xdr.h:343:
+	struct iattr *			cr_attrs;          /* request */

ERROR:POINTER_LOCATION: "foo	*	bar" should be "foo	*bar"
#171: FILE: include/linux/nfs_xdr.h:344:
+	struct nfs4_change_info	*	cr_cinfo;          /* response */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#173: FILE: include/linux/nfs_xdr.h:346:
+};
+#define cr_textlen			u.symlink.textlen

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: include/linux/nfs_xdr.h:352:
+        u32 *^I^I^I^Igt_bmval;          /* request */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: include/linux/nfs_xdr.h:352:
+        u32 *^I^I^I^Igt_bmval;          /* request */$

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#179: FILE: include/linux/nfs_xdr.h:352:
+        u32 *				gt_bmval;          /* request */

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: include/linux/nfs_xdr.h:353:
+        struct nfs_fattr *^I^Igt_attrs;          /* response */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: include/linux/nfs_xdr.h:353:
+        struct nfs_fattr *^I^Igt_attrs;          /* response */$

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#180: FILE: include/linux/nfs_xdr.h:353:
+        struct nfs_fattr *		gt_attrs;          /* response */

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#181: FILE: include/linux/nfs_xdr.h:354:
+	struct nfs_fsinfo *		gt_fsinfo;         /* response */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#185: FILE: include/linux/nfs_xdr.h:358:
+	struct nfs_fh *			gf_fhandle;       /* response */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#190: FILE: include/linux/nfs_xdr.h:363:
+	const char *			ln_name;          /* request */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#191: FILE: include/linux/nfs_xdr.h:364:
+	struct nfs4_change_info *	ln_cinfo;         /* response */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#195: FILE: include/linux/nfs_xdr.h:368:
+	struct qstr *			lo_name;          /* request */

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#203: FILE: include/linux/nfs_xdr.h:376:
+		struct iattr *		attrs;    /* UNCHECKED, GUARDED */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#206: FILE: include/linux/nfs_xdr.h:379:
+	struct qstr *			op_name;          /* request */

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#207: FILE: include/linux/nfs_xdr.h:380:
+	char *				op_stateid;       /* response */

ERROR:POINTER_LOCATION: "foo	*	bar" should be "foo	*bar"
#208: FILE: include/linux/nfs_xdr.h:381:
+	struct nfs4_change_info	*	op_cinfo;         /* response */

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#209: FILE: include/linux/nfs_xdr.h:382:
+	u32 *				op_rflags;        /* response */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#211: FILE: include/linux/nfs_xdr.h:384:
+};
+#define op_attrs     u.attrs

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#215: FILE: include/linux/nfs_xdr.h:388:
+	char *				oc_stateid;       /* request */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#219: FILE: include/linux/nfs_xdr.h:392:
+	struct nfs_fh *			pf_fhandle;       /* request */

ERROR:POINTER_LOCATION: "foo **			bar" should be "foo **bar"
#227: FILE: include/linux/nfs_xdr.h:400:
+	struct page **			rd_pages;   /* zero-copy data */

ERROR:POINTER_LOCATION: "foo **			bar" should be "foo **bar"
#237: FILE: include/linux/nfs_xdr.h:410:
+	struct page **			rd_pages;   /* zero-copy data */

ERROR:POINTER_LOCATION: "foo **			bar" should be "foo **bar"
#243: FILE: include/linux/nfs_xdr.h:416:
+	struct page **			rl_pages;   /* zero-copy data */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#248: FILE: include/linux/nfs_xdr.h:421:
+	const char *			rm_name;          /* request */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#249: FILE: include/linux/nfs_xdr.h:422:
+	struct nfs4_change_info *	rm_cinfo;         /* response */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#254: FILE: include/linux/nfs_xdr.h:427:
+	const char *			rn_oldname;       /* request */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#256: FILE: include/linux/nfs_xdr.h:429:
+	const char *			rn_newname;       /* request */

ERROR:POINTER_LOCATION: "foo	*	bar" should be "foo	*bar"
#257: FILE: include/linux/nfs_xdr.h:430:
+	struct nfs4_change_info	*	rn_src_cinfo;     /* response */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#258: FILE: include/linux/nfs_xdr.h:431:
+	struct nfs4_change_info *	rn_dst_cinfo;     /* response */

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#262: FILE: include/linux/nfs_xdr.h:435:
+	char *				st_stateid;       /* request */

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#263: FILE: include/linux/nfs_xdr.h:436:
+	struct iattr *			st_iap;           /* request */

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#268: FILE: include/linux/nfs_xdr.h:441:
+	char *				sc_name;	  /* request */

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#279: FILE: include/linux/nfs_xdr.h:452:
+	u32 *				wr_bytes_written; /* response */

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#280: FILE: include/linux/nfs_xdr.h:453:
+	struct nfs_writeverf *		wr_verf;          /* response */

ERROR:POINTER_LOCATION: "foo **			bar" should be "foo **bar"
#281: FILE: include/linux/nfs_xdr.h:454:
+	struct page **			wr_pages;   /* zero-copy data */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#313: FILE: include/linux/nfs_xdr.h:486:
+	struct nfs_server *	server;

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#321: FILE: include/linux/nfs_xdr.h:494:
+	u32 *			p;

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#322: FILE: include/linux/nfs_xdr.h:495:
+	u32 *			end;

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#330: FILE: include/linux/nfs_xdr.h:503:
+	char *			tag;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#390: FILE: fs/nfs/nfs4proc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#391: FILE: fs/nfs/nfs4proc.c:2:
+ *  fs/nfs/nfs4proc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: fs/nfs/nfs4proc.c:26:
+#define GET_OP(cp,name)		&cp->ops[cp->req_nops].u.name
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#415: FILE: fs/nfs/nfs4proc.c:26:
+#define GET_OP(cp,name)		&cp->ops[cp->req_nops].u.name

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cp' - possible side-effects?
#415: FILE: fs/nfs/nfs4proc.c:26:
+#define GET_OP(cp,name)		&cp->ops[cp->req_nops].u.name

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cp' may be better as '(cp)' to avoid precedence issues
#415: FILE: fs/nfs/nfs4proc.c:26:
+#define GET_OP(cp,name)		&cp->ops[cp->req_nops].u.name

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cp' - possible side-effects?
#416: FILE: fs/nfs/nfs4proc.c:27:
+#define OPNUM(cp)		cp->ops[cp->req_nops].opnum

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cp' may be better as '(cp)' to avoid precedence issues
#416: FILE: fs/nfs/nfs4proc.c:27:
+#define OPNUM(cp)		cp->ops[cp->req_nops].opnum

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#418: FILE: fs/nfs/nfs4proc.c:29:
+extern u32 *nfs4_decode_dirent(u32 *p, struct nfs_entry *entry, int plus);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: fs/nfs/nfs4proc.c:32:
+  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#421: FILE: fs/nfs/nfs4proc.c:32:
+static nfs4_stateid zero_stateid =
+  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: fs/nfs/nfs4proc.c:125:
+nfs4_setup_create_special(struct nfs4_compound *cp, struct qstr *name,
+			    dev_t dev, struct iattr *sattr,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#520: FILE: fs/nfs/nfs4proc.c:131:
+	BUG_ON(!(sattr->ia_valid & ATTR_MODE));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#521: FILE: fs/nfs/nfs4proc.c:132:
+	BUG_ON(!S_ISFIFO(mode) && !S_ISBLK(mode) && !S_ISCHR(mode) && !S_ISSOCK(mode));

CHECK:BRACES: braces {} should be used on all arms of this statement
#523: FILE: fs/nfs/nfs4proc.c:134:
+	if (S_ISFIFO(mode))
[...]
+	else if (S_ISBLK(mode)) {
[...]
+	else if (S_ISCHR(mode)) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#530: FILE: fs/nfs/nfs4proc.c:141:
+	}
+	else if (S_ISCHR(mode)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#535: FILE: fs/nfs/nfs4proc.c:146:
+	}
+	else

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: fs/nfs/nfs4proc.c:186:
+        | FATTR4_WORD0_MAXWRITE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: fs/nfs/nfs4proc.c:186:
+        | FATTR4_WORD0_MAXWRITE,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: fs/nfs/nfs4proc.c:225:
+        struct nfs4_getattr *getattr = GET_OP(cp, getattr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: fs/nfs/nfs4proc.c:225:
+        struct nfs4_getattr *getattr = GET_OP(cp, getattr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: fs/nfs/nfs4proc.c:227:
+        getattr->gt_bmval = bitmap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: fs/nfs/nfs4proc.c:227:
+        getattr->gt_bmval = bitmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: fs/nfs/nfs4proc.c:228:
+        getattr->gt_attrs = fattr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: fs/nfs/nfs4proc.c:228:
+        getattr->gt_attrs = fattr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: fs/nfs/nfs4proc.c:231:
+        OPNUM(cp) = OP_GETATTR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: fs/nfs/nfs4proc.c:231:
+        OPNUM(cp) = OP_GETATTR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: fs/nfs/nfs4proc.c:232:
+        cp->req_nops++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: fs/nfs/nfs4proc.c:232:
+        cp->req_nops++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: fs/nfs/nfs4proc.c:285:
+        OPNUM(cp) = OP_PUTROOTFH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: fs/nfs/nfs4proc.c:285:
+        OPNUM(cp) = OP_PUTROOTFH;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: fs/nfs/nfs4proc.c:286:
+        cp->req_nops++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: fs/nfs/nfs4proc.c:286:
+        cp->req_nops++;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#685: FILE: fs/nfs/nfs4proc.c:296:
+	BUG_ON(cp->flags);

CHECK:SPACING: No space is necessary after a cast
#692: FILE: fs/nfs/nfs4proc.c:303:
+		u32 *p = (u32 *) open->op_verifier;

WARNING:LINE_SPACING: Missing a blank line after declarations
#693: FILE: fs/nfs/nfs4proc.c:304:
+		u32 *p = (u32 *) open->op_verifier;
+		p[0] = jiffies;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#738: FILE: fs/nfs/nfs4proc.c:349:
+nfs4_setup_readdir(struct nfs4_compound *cp, u64 cookie, u32 *verifier,
+		     struct page **pages, unsigned int bufsize, struct dentry *dentry)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#743: FILE: fs/nfs/nfs4proc.c:354:
+	BUG_ON(bufsize < 80);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#765: FILE: fs/nfs/nfs4proc.c:376:
+	start = p = (u32 *)kmap(*pages);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: fs/nfs/nfs4proc.c:460:
+        OPNUM(cp) = OP_RESTOREFH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: fs/nfs/nfs4proc.c:460:
+        OPNUM(cp) = OP_RESTOREFH;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: fs/nfs/nfs4proc.c:461:
+        cp->req_nops++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: fs/nfs/nfs4proc.c:461:
+        cp->req_nops++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: fs/nfs/nfs4proc.c:467:
+        OPNUM(cp) = OP_SAVEFH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: fs/nfs/nfs4proc.c:467:
+        OPNUM(cp) = OP_SAVEFH;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: fs/nfs/nfs4proc.c:468:
+        cp->req_nops++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: fs/nfs/nfs4proc.c:468:
+        cp->req_nops++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: fs/nfs/nfs4proc.c:538:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#928: FILE: fs/nfs/nfs4proc.c:539:
+         * Generic lease processing: If this operation contains a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: fs/nfs/nfs4proc.c:551:
+         */$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#948: FILE: fs/nfs/nfs4proc.c:559:
+		printk("AAA updating last=%ld, tag=\"%.*s\"\n", cp->timestamp, (int)cp->taglen, cp->tag);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#948: FILE: fs/nfs/nfs4proc.c:559:
+		printk("AAA updating last=%ld, tag=\"%.*s\"\n", cp->timestamp, (int)cp->taglen, cp->tag);

WARNING:INDENTED_LABEL: labels should not be indented
#958: FILE: fs/nfs/nfs4proc.c:569:
+		rpc_proc: NFSPROC4_COMPOUND,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#959: FILE: fs/nfs/nfs4proc.c:570:
+		rpc_argp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#959: FILE: fs/nfs/nfs4proc.c:570:
+		rpc_argp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#960: FILE: fs/nfs/nfs4proc.c:571:
+		rpc_resp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#960: FILE: fs/nfs/nfs4proc.c:571:
+		rpc_resp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#961: FILE: fs/nfs/nfs4proc.c:572:
+		rpc_cred: cred,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#961: FILE: fs/nfs/nfs4proc.c:572:
+		rpc_cred: cred,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#974: FILE: fs/nfs/nfs4proc.c:585:
+	BUG_ON((fattr->valid & NFS_ATTR_FATTR) == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#975: FILE: fs/nfs/nfs4proc.c:586:
+	BUG_ON((fattr->valid & NFS_ATTR_FATTR_V4) == 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1004: FILE: fs/nfs/nfs4proc.c:615:
+	if ((status = nfs4_call_compound(&compound, NULL, 0)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1055: FILE: fs/nfs/nfs4proc.c:666:
+	unsigned char *		p;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1061: FILE: fs/nfs/nfs4proc.c:672:
+	if (!(server->nfs4_state = nfs4_get_client()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1071: FILE: fs/nfs/nfs4proc.c:682:
+	if ((status = nfs4_call_compound(&compound, NULL, 0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1083: FILE: fs/nfs/nfs4proc.c:694:
+	if ((status = nfs4_call_compound(&compound, NULL, 0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1092: FILE: fs/nfs/nfs4proc.c:703:
+	if ((status = nfs4_init_renewd(server)))

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#1096: FILE: fs/nfs/nfs4proc.c:707:
+	 * Now we do a seperate LOOKUP for each component of the mount path.
 	               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#1097: FILE: fs/nfs/nfs4proc.c:708:
+	 * The LOOKUPs are done seperately so that we can conveniently
 	                        ^^^^^^^^^^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1120: FILE: fs/nfs/nfs4proc.c:731:
+			printk(KERN_NOTICE "NFS: mount path %s does not exist!\n", server->mnt_path);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1120: FILE: fs/nfs/nfs4proc.c:731:
+			printk(KERN_NOTICE "NFS: mount path %s does not exist!\n", server->mnt_path);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1121: FILE: fs/nfs/nfs4proc.c:732:
+			printk(KERN_NOTICE "NFS: suggestion: try mounting '/' instead.\n");

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1148: FILE: fs/nfs/nfs4proc.c:759:
+	struct inode *		inode = dentry->d_inode;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1157: FILE: fs/nfs/nfs4proc.c:768:
+	if (size_change) {
[...]
+	else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1174: FILE: fs/nfs/nfs4proc.c:785:
+			printk(KERN_WARNING "nfs: raced in setattr, returning -EIO\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1179: FILE: fs/nfs/nfs4proc.c:790:
+	}
+	else

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1238: FILE: fs/nfs/nfs4proc.c:849:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1238: FILE: fs/nfs/nfs4proc.c:849:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1253: FILE: fs/nfs/nfs4proc.c:864:
+		if (req_access != resp_supported) {
[...]
+		else if (req_access != resp_access)
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1254: FILE: fs/nfs/nfs4proc.c:865:
+			printk(KERN_NOTICE "NFS: server didn't support all access bits!\n");

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1255: FILE: fs/nfs/nfs4proc.c:866:
+			status = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1257: FILE: fs/nfs/nfs4proc.c:868:
+		}
+		else if (req_access != resp_access)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1354: FILE: fs/nfs/nfs4proc.c:965:
+^Iint ^I^I^Istatus;$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1399: FILE: fs/nfs/nfs4proc.c:1010:
+	struct unlink_desc *	up;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1400: FILE: fs/nfs/nfs4proc.c:1011:
+	struct nfs4_compound *	cp;

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: fs/nfs/nfs4proc.c:1013:
+	up = (struct unlink_desc *) kmalloc(sizeof(*up), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1402: FILE: fs/nfs/nfs4proc.c:1013:
+	up = (struct unlink_desc *) kmalloc(sizeof(*up), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#1425: FILE: fs/nfs/nfs4proc.c:1036:
+		up = (struct unlink_desc *) msg->rpc_argp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1560: FILE: fs/nfs/nfs4proc.c:1171:
+                  u64 cookie, struct page *page, unsigned int count, int plus)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: fs/nfs/nfs4proc.c:1171:
+                  u64 cookie, struct page *page, unsigned int count, int plus)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1594: FILE: fs/nfs/nfs4proc.c:1205:
+	nfs4_setup_create_special(&compound, name, rdev,sattr, &dir_cinfo);
 	                                               ^

CHECK:SPACING: No space is necessary after a cast
#1625: FILE: fs/nfs/nfs4proc.c:1236:
+	struct nfs_read_data *data = (struct nfs_read_data *) task->tk_calldata;

WARNING:INDENTED_LABEL: labels should not be indented
#1637: FILE: fs/nfs/nfs4proc.c:1248:
+		rpc_proc: NFSPROC4_COMPOUND,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1638: FILE: fs/nfs/nfs4proc.c:1249:
+		rpc_argp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1638: FILE: fs/nfs/nfs4proc.c:1249:
+		rpc_argp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1639: FILE: fs/nfs/nfs4proc.c:1250:
+		rpc_resp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1639: FILE: fs/nfs/nfs4proc.c:1250:
+		rpc_resp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1640: FILE: fs/nfs/nfs4proc.c:1251:
+		rpc_cred: data->cred,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1640: FILE: fs/nfs/nfs4proc.c:1251:
+		rpc_cred: data->cred,

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1653: FILE: fs/nfs/nfs4proc.c:1264:
+	flags = RPC_TASK_ASYNC | (IS_SWAPFILE(inode)? NFS_RPC_SWAPFLAGS : 0);
 	                                            ^

CHECK:SPACING: No space is necessary after a cast
#1667: FILE: fs/nfs/nfs4proc.c:1278:
+	struct nfs_write_data *data = (struct nfs_write_data *) task->tk_calldata;

WARNING:INDENTED_LABEL: labels should not be indented
#1680: FILE: fs/nfs/nfs4proc.c:1291:
+		rpc_proc: NFSPROC4_COMPOUND,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1681: FILE: fs/nfs/nfs4proc.c:1292:
+		rpc_argp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1681: FILE: fs/nfs/nfs4proc.c:1292:
+		rpc_argp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1682: FILE: fs/nfs/nfs4proc.c:1293:
+		rpc_resp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1682: FILE: fs/nfs/nfs4proc.c:1293:
+		rpc_resp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1683: FILE: fs/nfs/nfs4proc.c:1294:
+		rpc_cred: data->cred,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1683: FILE: fs/nfs/nfs4proc.c:1294:
+		rpc_cred: data->cred,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1690: FILE: fs/nfs/nfs4proc.c:1301:
+	if (how & FLUSH_STABLE) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1695: FILE: fs/nfs/nfs4proc.c:1306:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1719: FILE: fs/nfs/nfs4proc.c:1330:
+	struct nfs_write_data *data = (struct nfs_write_data *) task->tk_calldata;

WARNING:INDENTED_LABEL: labels should not be indented
#1731: FILE: fs/nfs/nfs4proc.c:1342:
+		rpc_proc: NFSPROC4_COMPOUND,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1732: FILE: fs/nfs/nfs4proc.c:1343:
+		rpc_argp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1732: FILE: fs/nfs/nfs4proc.c:1343:
+		rpc_argp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1733: FILE: fs/nfs/nfs4proc.c:1344:
+		rpc_resp: cp,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1733: FILE: fs/nfs/nfs4proc.c:1344:
+		rpc_resp: cp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1734: FILE: fs/nfs/nfs4proc.c:1345:
+		rpc_cred: data->cred,
 		        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1734: FILE: fs/nfs/nfs4proc.c:1345:
+		rpc_cred: data->cred,

CHECK:SPACING: No space is necessary after a cast
#1768: FILE: fs/nfs/nfs4proc.c:1379:
+	struct nfs4_compound *cp = (struct nfs4_compound *) task->tk_msg.rpc_argp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1769: FILE: fs/nfs/nfs4proc.c:1380:
+	struct nfs4_compound *cp = (struct nfs4_compound *) task->tk_msg.rpc_argp;
+	process_lease(cp);

CHECK:SPACING: No space is necessary after a cast
#1787: FILE: fs/nfs/nfs4proc.c:1398:
+	rp = (struct renew_desc *) kmalloc(sizeof(*rp), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1787: FILE: fs/nfs/nfs4proc.c:1398:
+	rp = (struct renew_desc *) kmalloc(sizeof(*rp), GFP_KERNEL);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1810: FILE: fs/nfs/nfs4proc.c:1421:
+	getroot:	nfs4_proc_get_root,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1810: FILE: fs/nfs/nfs4proc.c:1421:
+	getroot:	nfs4_proc_get_root,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1811: FILE: fs/nfs/nfs4proc.c:1422:
+	getattr:	nfs4_proc_getattr,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1811: FILE: fs/nfs/nfs4proc.c:1422:
+	getattr:	nfs4_proc_getattr,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1812: FILE: fs/nfs/nfs4proc.c:1423:
+	setattr:	nfs4_proc_setattr,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1812: FILE: fs/nfs/nfs4proc.c:1423:
+	setattr:	nfs4_proc_setattr,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1813: FILE: fs/nfs/nfs4proc.c:1424:
+	lookup:		nfs4_proc_lookup,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1813: FILE: fs/nfs/nfs4proc.c:1424:
+	lookup:		nfs4_proc_lookup,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1814: FILE: fs/nfs/nfs4proc.c:1425:
+	access:		nfs4_proc_access,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1814: FILE: fs/nfs/nfs4proc.c:1425:
+	access:		nfs4_proc_access,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1815: FILE: fs/nfs/nfs4proc.c:1426:
+	readlink:	nfs4_proc_readlink,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1815: FILE: fs/nfs/nfs4proc.c:1426:
+	readlink:	nfs4_proc_readlink,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1816: FILE: fs/nfs/nfs4proc.c:1427:
+	read:		nfs4_proc_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1816: FILE: fs/nfs/nfs4proc.c:1427:
+	read:		nfs4_proc_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1817: FILE: fs/nfs/nfs4proc.c:1428:
+	write:		nfs4_proc_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1817: FILE: fs/nfs/nfs4proc.c:1428:
+	write:		nfs4_proc_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1818: FILE: fs/nfs/nfs4proc.c:1429:
+	commit:		NULL,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1818: FILE: fs/nfs/nfs4proc.c:1429:
+	commit:		NULL,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1819: FILE: fs/nfs/nfs4proc.c:1430:
+	create:		nfs4_proc_create,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1819: FILE: fs/nfs/nfs4proc.c:1430:
+	create:		nfs4_proc_create,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1820: FILE: fs/nfs/nfs4proc.c:1431:
+	remove:		nfs4_proc_remove,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1820: FILE: fs/nfs/nfs4proc.c:1431:
+	remove:		nfs4_proc_remove,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1821: FILE: fs/nfs/nfs4proc.c:1432:
+	unlink_setup:	nfs4_proc_unlink_setup,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#1821: FILE: fs/nfs/nfs4proc.c:1432:
+	unlink_setup:	nfs4_proc_unlink_setup,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1822: FILE: fs/nfs/nfs4proc.c:1433:
+	unlink_done:	nfs4_proc_unlink_done,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#1822: FILE: fs/nfs/nfs4proc.c:1433:
+	unlink_done:	nfs4_proc_unlink_done,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1823: FILE: fs/nfs/nfs4proc.c:1434:
+	rename:		nfs4_proc_rename,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1823: FILE: fs/nfs/nfs4proc.c:1434:
+	rename:		nfs4_proc_rename,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1824: FILE: fs/nfs/nfs4proc.c:1435:
+	link:		nfs4_proc_link,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1824: FILE: fs/nfs/nfs4proc.c:1435:
+	link:		nfs4_proc_link,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1825: FILE: fs/nfs/nfs4proc.c:1436:
+	symlink:	nfs4_proc_symlink,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1825: FILE: fs/nfs/nfs4proc.c:1436:
+	symlink:	nfs4_proc_symlink,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1826: FILE: fs/nfs/nfs4proc.c:1437:
+	mkdir:		nfs4_proc_mkdir,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1826: FILE: fs/nfs/nfs4proc.c:1437:
+	mkdir:		nfs4_proc_mkdir,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1827: FILE: fs/nfs/nfs4proc.c:1438:
+	rmdir:		nfs4_proc_remove,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1827: FILE: fs/nfs/nfs4proc.c:1438:
+	rmdir:		nfs4_proc_remove,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1828: FILE: fs/nfs/nfs4proc.c:1439:
+	readdir:	nfs4_proc_readdir,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1828: FILE: fs/nfs/nfs4proc.c:1439:
+	readdir:	nfs4_proc_readdir,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1829: FILE: fs/nfs/nfs4proc.c:1440:
+	mknod:		nfs4_proc_mknod,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1829: FILE: fs/nfs/nfs4proc.c:1440:
+	mknod:		nfs4_proc_mknod,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1830: FILE: fs/nfs/nfs4proc.c:1441:
+	statfs:		nfs4_proc_statfs,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1830: FILE: fs/nfs/nfs4proc.c:1441:
+	statfs:		nfs4_proc_statfs,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1831: FILE: fs/nfs/nfs4proc.c:1442:
+	decode_dirent:	nfs4_decode_dirent,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#1831: FILE: fs/nfs/nfs4proc.c:1442:
+	decode_dirent:	nfs4_decode_dirent,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1832: FILE: fs/nfs/nfs4proc.c:1443:
+	read_setup:	nfs4_proc_read_setup,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#1832: FILE: fs/nfs/nfs4proc.c:1443:
+	read_setup:	nfs4_proc_read_setup,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1833: FILE: fs/nfs/nfs4proc.c:1444:
+	write_setup:	nfs4_proc_write_setup,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#1833: FILE: fs/nfs/nfs4proc.c:1444:
+	write_setup:	nfs4_proc_write_setup,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1834: FILE: fs/nfs/nfs4proc.c:1445:
+	commit_setup:	nfs4_proc_commit_setup,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#1834: FILE: fs/nfs/nfs4proc.c:1445:
+	commit_setup:	nfs4_proc_commit_setup,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1845: FILE: fs/nfs/nfs4renewd.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1846: FILE: fs/nfs/nfs4renewd.c:2:
+ *  fs/nfs/nfs4renewd.c

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1886: FILE: fs/nfs/nfs4renewd.c:42:
+	printk("AAA renewd start lease=%ld last=%ld jiffies=%ld\n", lease, last, jiffies);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'renewd', this function's name, in a string
#1886: FILE: fs/nfs/nfs4renewd.c:42:
+	printk("AAA renewd start lease=%ld last=%ld jiffies=%ld\n", lease, last, jiffies);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#1887: FILE: fs/nfs/nfs4renewd.c:43:
+	if (!server->nfs4_state)
[...]
+	else if (jiffies < last + lease/3)
[...]
+	else {
[...]

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1889: FILE: fs/nfs/nfs4renewd.c:45:
+	else if (jiffies < last + lease/3)
 	                               ^

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1889: FILE: fs/nfs/nfs4renewd.c:45:
+	else if (jiffies < last + lease/3)

CHECK:BRACES: Unbalanced braces around else statement
#1891: FILE: fs/nfs/nfs4renewd.c:47:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1893: FILE: fs/nfs/nfs4renewd.c:49:
+		printk("AAA renewd queueing RENEW\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'renewd', this function's name, in a string
#1893: FILE: fs/nfs/nfs4renewd.c:49:
+		printk("AAA renewd queueing RENEW\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1900: FILE: fs/nfs/nfs4renewd.c:56:
+	printk("AAA renewd set timeout=%ld\n", timeout);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'renewd', this function's name, in a string
#1900: FILE: fs/nfs/nfs4renewd.c:56:
+	printk("AAA renewd set timeout=%ld\n", timeout);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1906: FILE: fs/nfs/nfs4renewd.c:62:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1936: FILE: fs/nfs/nfs4state.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1937: FILE: fs/nfs/nfs4state.c:2:
+ *  fs/nfs/nfs4state.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#1965: FILE: fs/nfs/nfs4state.c:30:
+        struct nfs4_client *clp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1965: FILE: fs/nfs/nfs4state.c:30:
+        struct nfs4_client *clp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1967: FILE: fs/nfs/nfs4state.c:32:
+        if ((clp = kmalloc(sizeof(*clp), GFP_KERNEL))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1967: FILE: fs/nfs/nfs4state.c:32:
+        if ((clp = kmalloc(sizeof(*clp), GFP_KERNEL))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1967: FILE: fs/nfs/nfs4state.c:32:
+        if ((clp = kmalloc(sizeof(*clp), GFP_KERNEL))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1968: FILE: fs/nfs/nfs4state.c:33:
+                atomic_set(&clp->cl_count, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1968: FILE: fs/nfs/nfs4state.c:33:
+                atomic_set(&clp->cl_count, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1969: FILE: fs/nfs/nfs4state.c:34:
+                clp->cl_clientid = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1969: FILE: fs/nfs/nfs4state.c:34:
+                clp->cl_clientid = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1970: FILE: fs/nfs/nfs4state.c:35:
+                INIT_LIST_HEAD(&clp->cl_lockowners);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1970: FILE: fs/nfs/nfs4state.c:35:
+                INIT_LIST_HEAD(&clp->cl_lockowners);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1971: FILE: fs/nfs/nfs4state.c:36:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1971: FILE: fs/nfs/nfs4state.c:36:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1972: FILE: fs/nfs/nfs4state.c:37:
+        return clp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1972: FILE: fs/nfs/nfs4state.c:37:
+        return clp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1978: FILE: fs/nfs/nfs4state.c:43:
+        BUG_ON(!clp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1978: FILE: fs/nfs/nfs4state.c:43:
+        BUG_ON(!clp);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1978: FILE: fs/nfs/nfs4state.c:43:
+        BUG_ON(!clp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1979: FILE: fs/nfs/nfs4state.c:44:
+        BUG_ON(!atomic_read(&clp->cl_count));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1979: FILE: fs/nfs/nfs4state.c:44:
+        BUG_ON(!atomic_read(&clp->cl_count));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1979: FILE: fs/nfs/nfs4state.c:44:
+        BUG_ON(!atomic_read(&clp->cl_count));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1981: FILE: fs/nfs/nfs4state.c:46:
+        if (atomic_dec_and_test(&clp->cl_count)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1981: FILE: fs/nfs/nfs4state.c:46:
+        if (atomic_dec_and_test(&clp->cl_count)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1982: FILE: fs/nfs/nfs4state.c:47:
+                BUG_ON(!list_empty(&clp->cl_lockowners));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1982: FILE: fs/nfs/nfs4state.c:47:
+                BUG_ON(!list_empty(&clp->cl_lockowners));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1982: FILE: fs/nfs/nfs4state.c:47:
+                BUG_ON(!list_empty(&clp->cl_lockowners));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1983: FILE: fs/nfs/nfs4state.c:48:
+                kfree(clp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1983: FILE: fs/nfs/nfs4state.c:48:
+                kfree(clp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1984: FILE: fs/nfs/nfs4state.c:49:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1984: FILE: fs/nfs/nfs4state.c:49:
+        }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1995: FILE: fs/nfs/nfs4xdr.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1996: FILE: fs/nfs/nfs4xdr.c:2:
+ *  fs/nfs/nfs4xdr.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2036: FILE: fs/nfs/nfs4xdr.c:42:
+extern int			nfs_stat_to_errno(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2036: FILE: fs/nfs/nfs4xdr.c:42:
+extern int			nfs_stat_to_errno(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2069: FILE: fs/nfs/nfs4xdr.c:75:
+#define ENCODE_HEAD						\
+	u32 *p;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2071: FILE: fs/nfs/nfs4xdr.c:77:
+#define ENCODE_TAIL						\
+	return 0

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2071: FILE: fs/nfs/nfs4xdr.c:77:
+#define ENCODE_TAIL						\
+	return 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2074: FILE: fs/nfs/nfs4xdr.c:80:
+#define WRITE32(n)               *p++ = htonl(n)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#2075: FILE: fs/nfs/nfs4xdr.c:81:
+#define WRITE64(n)               do {				\
+	*p++ = htonl((u32)((n) >> 32));				\
+	*p++ = htonl((u32)(n));					\
+} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2079: FILE: fs/nfs/nfs4xdr.c:85:
+#define WRITEMEM(ptr,nbytes)     do {				\
                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nbytes' - possible side-effects?
#2079: FILE: fs/nfs/nfs4xdr.c:85:
+#define WRITEMEM(ptr,nbytes)     do {				\
+	memcpy(p, ptr, nbytes);					\
+	p += XDR_QUADLEN(nbytes);				\
+} while (0)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2084: FILE: fs/nfs/nfs4xdr.c:90:
+#define RESERVE_SPACE(nbytes)	do { BUG_ON(cp->p + XDR_QUADLEN(nbytes) > cp->end); p = cp->p; } while (0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2084: FILE: fs/nfs/nfs4xdr.c:90:
+#define RESERVE_SPACE(nbytes)	do { BUG_ON(cp->p + XDR_QUADLEN(nbytes) > cp->end); p = cp->p; } while (0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2085: FILE: fs/nfs/nfs4xdr.c:91:
+#define ADJUST_ARGS()           cp->p = p

WARNING:LINE_SPACING: Missing a blank line after declarations
#2097: FILE: fs/nfs/nfs4xdr.c:103:
+	int status;
+	ENCODE_HEAD;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2108: FILE: fs/nfs/nfs4xdr.c:114:
+		if ((status = gss_get_name(GSS_OWNER, iap->ia_uid, &owner))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2109: FILE: fs/nfs/nfs4xdr.c:115:
+			printk(KERN_WARNING "nfs: couldn't resolve uid %d to string\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2116: FILE: fs/nfs/nfs4xdr.c:122:
+		if ((status = gss_get_name(GSS_GROUP, iap->ia_gid, &group))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2117: FILE: fs/nfs/nfs4xdr.c:123:
+			printk(KERN_WARNING "nfs4: couldn't resolve uid %d to string\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2158: FILE: fs/nfs/nfs4xdr.c:164:
+	}
+	else if (iap->ia_valid & ATTR_ATIME) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2169: FILE: fs/nfs/nfs4xdr.c:175:
+	}
+	else if (iap->ia_valid & ATTR_MTIME) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2223: FILE: fs/nfs/nfs4xdr.c:229:
+        ENCODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2223: FILE: fs/nfs/nfs4xdr.c:229:
+        ENCODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2225: FILE: fs/nfs/nfs4xdr.c:231:
+        RESERVE_SPACE(16);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2225: FILE: fs/nfs/nfs4xdr.c:231:
+        RESERVE_SPACE(16);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2226: FILE: fs/nfs/nfs4xdr.c:232:
+        WRITE32(OP_COMMIT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2226: FILE: fs/nfs/nfs4xdr.c:232:
+        WRITE32(OP_COMMIT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2227: FILE: fs/nfs/nfs4xdr.c:233:
+        WRITE64(commit->co_start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2227: FILE: fs/nfs/nfs4xdr.c:233:
+        WRITE64(commit->co_start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2228: FILE: fs/nfs/nfs4xdr.c:234:
+        WRITE32(commit->co_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2228: FILE: fs/nfs/nfs4xdr.c:234:
+        WRITE32(commit->co_len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2229: FILE: fs/nfs/nfs4xdr.c:235:
+        ADJUST_ARGS();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2229: FILE: fs/nfs/nfs4xdr.c:235:
+        ADJUST_ARGS();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2231: FILE: fs/nfs/nfs4xdr.c:237:
+        ENCODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2231: FILE: fs/nfs/nfs4xdr.c:237:
+        ENCODE_TAIL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2274: FILE: fs/nfs/nfs4xdr.c:280:
+        ENCODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2274: FILE: fs/nfs/nfs4xdr.c:280:
+        ENCODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2276: FILE: fs/nfs/nfs4xdr.c:282:
+        RESERVE_SPACE(16);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2276: FILE: fs/nfs/nfs4xdr.c:282:
+        RESERVE_SPACE(16);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2277: FILE: fs/nfs/nfs4xdr.c:283:
+        WRITE32(OP_GETATTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2277: FILE: fs/nfs/nfs4xdr.c:283:
+        WRITE32(OP_GETATTR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2278: FILE: fs/nfs/nfs4xdr.c:284:
+        WRITE32(2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2278: FILE: fs/nfs/nfs4xdr.c:284:
+        WRITE32(2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2279: FILE: fs/nfs/nfs4xdr.c:285:
+        WRITE32(getattr->gt_bmval[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2279: FILE: fs/nfs/nfs4xdr.c:285:
+        WRITE32(getattr->gt_bmval[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2280: FILE: fs/nfs/nfs4xdr.c:286:
+        WRITE32(getattr->gt_bmval[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2280: FILE: fs/nfs/nfs4xdr.c:286:
+        WRITE32(getattr->gt_bmval[1]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2281: FILE: fs/nfs/nfs4xdr.c:287:
+        ADJUST_ARGS();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2281: FILE: fs/nfs/nfs4xdr.c:287:
+        ADJUST_ARGS();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2283: FILE: fs/nfs/nfs4xdr.c:289:
+        ENCODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2283: FILE: fs/nfs/nfs4xdr.c:289:
+        ENCODE_TAIL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2316: FILE: fs/nfs/nfs4xdr.c:322:
+	int len = lookup->lo_name->len;
+	ENCODE_HEAD;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2330: FILE: fs/nfs/nfs4xdr.c:336:
+	static int global_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2333: FILE: fs/nfs/nfs4xdr.c:339:
+	int status;
+	ENCODE_HEAD;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2354: FILE: fs/nfs/nfs4xdr.c:360:
+		}
+		else if (open->op_attrs) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2358: FILE: fs/nfs/nfs4xdr.c:364:
+			if ((status = encode_attrs(cp, open->op_attrs)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2361: FILE: fs/nfs/nfs4xdr.c:367:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#2361: FILE: fs/nfs/nfs4xdr.c:367:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2401: FILE: fs/nfs/nfs4xdr.c:407:
+	int len = putfh->pf_fhandle->size;
+	ENCODE_HEAD;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2415: FILE: fs/nfs/nfs4xdr.c:421:
+        ENCODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2415: FILE: fs/nfs/nfs4xdr.c:421:
+        ENCODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2417: FILE: fs/nfs/nfs4xdr.c:423:
+        RESERVE_SPACE(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2417: FILE: fs/nfs/nfs4xdr.c:423:
+        RESERVE_SPACE(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2418: FILE: fs/nfs/nfs4xdr.c:424:
+        WRITE32(OP_PUTROOTFH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2418: FILE: fs/nfs/nfs4xdr.c:424:
+        WRITE32(OP_PUTROOTFH);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2419: FILE: fs/nfs/nfs4xdr.c:425:
+        ADJUST_ARGS();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2419: FILE: fs/nfs/nfs4xdr.c:425:
+        ADJUST_ARGS();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2421: FILE: fs/nfs/nfs4xdr.c:427:
+        ENCODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2421: FILE: fs/nfs/nfs4xdr.c:427:
+        ENCODE_TAIL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2429: FILE: fs/nfs/nfs4xdr.c:435:
+	int		replen;
+	ENCODE_HEAD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2458: FILE: fs/nfs/nfs4xdr.c:464:
+	int replen;
+	ENCODE_HEAD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2488: FILE: fs/nfs/nfs4xdr.c:494:
+	int replen;
+	ENCODE_HEAD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2579: FILE: fs/nfs/nfs4xdr.c:585:
+	int status;
+	ENCODE_HEAD;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2581: FILE: fs/nfs/nfs4xdr.c:587:
+        RESERVE_SPACE(20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2581: FILE: fs/nfs/nfs4xdr.c:587:
+        RESERVE_SPACE(20);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2582: FILE: fs/nfs/nfs4xdr.c:588:
+        WRITE32(OP_SETATTR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2582: FILE: fs/nfs/nfs4xdr.c:588:
+        WRITE32(OP_SETATTR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2584: FILE: fs/nfs/nfs4xdr.c:590:
+        ADJUST_ARGS();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2584: FILE: fs/nfs/nfs4xdr.c:590:
+        ADJUST_ARGS();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2586: FILE: fs/nfs/nfs4xdr.c:592:
+        if ((status = encode_attrs(cp, setattr->st_iap)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2586: FILE: fs/nfs/nfs4xdr.c:592:
+        if ((status = encode_attrs(cp, setattr->st_iap)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2586: FILE: fs/nfs/nfs4xdr.c:592:
+        if ((status = encode_attrs(cp, setattr->st_iap)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2589: FILE: fs/nfs/nfs4xdr.c:595:
+        ENCODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2589: FILE: fs/nfs/nfs4xdr.c:595:
+        ENCODE_TAIL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2597: FILE: fs/nfs/nfs4xdr.c:603:
+	u32 len1, len2, len3;
+	ENCODE_HEAD;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2624: FILE: fs/nfs/nfs4xdr.c:630:
+        ENCODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2624: FILE: fs/nfs/nfs4xdr.c:630:
+        ENCODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2626: FILE: fs/nfs/nfs4xdr.c:632:
+        RESERVE_SPACE(12);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2626: FILE: fs/nfs/nfs4xdr.c:632:
+        RESERVE_SPACE(12);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2627: FILE: fs/nfs/nfs4xdr.c:633:
+        WRITE32(OP_SETCLIENTID_CONFIRM);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2627: FILE: fs/nfs/nfs4xdr.c:633:
+        WRITE32(OP_SETCLIENTID_CONFIRM);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2628: FILE: fs/nfs/nfs4xdr.c:634:
+        WRITE64(cp->server->nfs4_state->cl_clientid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2628: FILE: fs/nfs/nfs4xdr.c:634:
+        WRITE64(cp->server->nfs4_state->cl_clientid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2629: FILE: fs/nfs/nfs4xdr.c:635:
+        ADJUST_ARGS();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2629: FILE: fs/nfs/nfs4xdr.c:635:
+        ADJUST_ARGS();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2631: FILE: fs/nfs/nfs4xdr.c:637:
+        ENCODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2631: FILE: fs/nfs/nfs4xdr.c:637:
+        ENCODE_TAIL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2638: FILE: fs/nfs/nfs4xdr.c:644:
+	struct xdr_buf *sndbuf = &req->rq_snd_buf;
+	ENCODE_HEAD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2661: FILE: fs/nfs/nfs4xdr.c:667:
+	int i, status = 0;
+	ENCODE_HEAD;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'encode_compound', this function's name, in a string
#2663: FILE: fs/nfs/nfs4xdr.c:669:
+	dprintk("encode_compound: tag=%.*s\n", (int)cp->taglen, cp->tag);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2747: FILE: fs/nfs/nfs4xdr.c:753:
+			BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2755: FILE: fs/nfs/nfs4xdr.c:761:
+}
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2759: FILE: fs/nfs/nfs4xdr.c:765:
+
+

CHECK:SPACING: No space is necessary after a cast
#2780: FILE: fs/nfs/nfs4xdr.c:786:
+	cp->end = (u32 *) ((char *)req->rq_svec[0].iov_base + req->rq_svec[0].iov_len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2789: FILE: fs/nfs/nfs4xdr.c:795:
+
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2803: FILE: fs/nfs/nfs4xdr.c:809:
+#define DECODE_TAIL				\
+	status = 0;				\
+out:						\
+	return status;				\
+xdr_error:					\
+	printk(KERN_NOTICE "xdr error! (%s:%d)\n", __FILE__, __LINE__); \
+	status = -EIO;				\
+	goto out

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2803: FILE: fs/nfs/nfs4xdr.c:809:
+#define DECODE_TAIL				\
+	status = 0;				\
+out:						\
+	return status;				\
+xdr_error:					\
+	printk(KERN_NOTICE "xdr error! (%s:%d)\n", __FILE__, __LINE__); \
+	status = -EIO;				\
+	goto out

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2808: FILE: fs/nfs/nfs4xdr.c:814:
+	printk(KERN_NOTICE "xdr error! (%s:%d)\n", __FILE__, __LINE__); \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2812: FILE: fs/nfs/nfs4xdr.c:818:
+#define READ32(x)         (x) = ntohl(*p++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#2813: FILE: fs/nfs/nfs4xdr.c:819:
+#define READ64(x)         do {			\
+	(x) = (u64)ntohl(*p++) << 32;		\
+	(x) |= ntohl(*p++);			\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#2817: FILE: fs/nfs/nfs4xdr.c:823:
+#define READTIME(x)       do {			\
+	p++;					\
+	(x) = (u64)ntohl(*p++) << 32;		\
+	(x) |= ntohl(*p++);			\
+} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2822: FILE: fs/nfs/nfs4xdr.c:828:
+#define COPYMEM(x,nbytes) do {			\
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nbytes' - possible side-effects?
#2822: FILE: fs/nfs/nfs4xdr.c:828:
+#define COPYMEM(x,nbytes) do {			\
+	memcpy((x), p, nbytes);			\
+	p += XDR_QUADLEN(nbytes);		\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nbytes' - possible side-effects?
#2827: FILE: fs/nfs/nfs4xdr.c:833:
+#define READ_BUF(nbytes)  do {			\
+	if (nbytes > (u32)((char *)cp->end - (char *)cp->p))  \
+		goto xdr_error;			\
+	p = cp->p;				\
+	cp->p += XDR_QUADLEN(nbytes);		\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nbytes' may be better as '(nbytes)' to avoid precedence issues
#2827: FILE: fs/nfs/nfs4xdr.c:833:
+#define READ_BUF(nbytes)  do {			\
+	if (nbytes > (u32)((char *)cp->end - (char *)cp->p))  \
+		goto xdr_error;			\
+	p = cp->p;				\
+	cp->p += XDR_QUADLEN(nbytes);		\
+} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#2827: FILE: fs/nfs/nfs4xdr.c:833:
+#define READ_BUF(nbytes)  do {			\
+	if (nbytes > (u32)((char *)cp->end - (char *)cp->p))  \
+		goto xdr_error;			\
+	p = cp->p;				\
+	cp->p += XDR_QUADLEN(nbytes);		\
+} while (0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2851: FILE: fs/nfs/nfs4xdr.c:857:
+	u32 supp, acc;
+	DECODE_HEAD;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2860: FILE: fs/nfs/nfs4xdr.c:866:
+			printk(KERN_NOTICE "NFS: server returned bad bits in access call!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2886: FILE: fs/nfs/nfs4xdr.c:892:
+        DECODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2886: FILE: fs/nfs/nfs4xdr.c:892:
+        DECODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2888: FILE: fs/nfs/nfs4xdr.c:894:
+        if (!nfserr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2888: FILE: fs/nfs/nfs4xdr.c:894:
+        if (!nfserr) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2889: FILE: fs/nfs/nfs4xdr.c:895:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2889: FILE: fs/nfs/nfs4xdr.c:895:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2890: FILE: fs/nfs/nfs4xdr.c:896:
+                COPYMEM(commit->co_verifier->verifier, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2890: FILE: fs/nfs/nfs4xdr.c:896:
+                COPYMEM(commit->co_verifier->verifier, 8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2891: FILE: fs/nfs/nfs4xdr.c:897:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2891: FILE: fs/nfs/nfs4xdr.c:897:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2893: FILE: fs/nfs/nfs4xdr.c:899:
+        DECODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2893: FILE: fs/nfs/nfs4xdr.c:899:
+        DECODE_TAIL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2900: FILE: fs/nfs/nfs4xdr.c:906:
+	u32 bmlen;
+	DECODE_HEAD;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2903: FILE: fs/nfs/nfs4xdr.c:909:
+		if ((status = decode_change_info(cp, create->cr_cinfo)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2918: FILE: fs/nfs/nfs4xdr.c:924:
+        struct nfs_fattr *nfp = getattr->gt_attrs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2918: FILE: fs/nfs/nfs4xdr.c:924:
+        struct nfs_fattr *nfp = getattr->gt_attrs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2920: FILE: fs/nfs/nfs4xdr.c:926:
+        u32 bmlen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2920: FILE: fs/nfs/nfs4xdr.c:926:
+        u32 bmlen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2921: FILE: fs/nfs/nfs4xdr.c:927:
+        u32 bmval0 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2921: FILE: fs/nfs/nfs4xdr.c:927:
+        u32 bmval0 = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2922: FILE: fs/nfs/nfs4xdr.c:928:
+        u32 bmval1 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2922: FILE: fs/nfs/nfs4xdr.c:928:
+        u32 bmval1 = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2923: FILE: fs/nfs/nfs4xdr.c:929:
+        u32 attrlen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2923: FILE: fs/nfs/nfs4xdr.c:929:
+        u32 attrlen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2924: FILE: fs/nfs/nfs4xdr.c:930:
+        u32 dummy32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2924: FILE: fs/nfs/nfs4xdr.c:930:
+        u32 dummy32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2925: FILE: fs/nfs/nfs4xdr.c:931:
+        u32 len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2925: FILE: fs/nfs/nfs4xdr.c:931:
+        u32 len = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2928: FILE: fs/nfs/nfs4xdr.c:934:
+        DECODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2928: FILE: fs/nfs/nfs4xdr.c:934:
+        DECODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2930: FILE: fs/nfs/nfs4xdr.c:936:
+        if (nfserr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2930: FILE: fs/nfs/nfs4xdr.c:936:
+        if (nfserr)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2931: FILE: fs/nfs/nfs4xdr.c:937:
+                goto success;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2931: FILE: fs/nfs/nfs4xdr.c:937:
+                goto success;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2933: FILE: fs/nfs/nfs4xdr.c:939:
+        READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2933: FILE: fs/nfs/nfs4xdr.c:939:
+        READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2934: FILE: fs/nfs/nfs4xdr.c:940:
+        READ32(bmlen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2934: FILE: fs/nfs/nfs4xdr.c:940:
+        READ32(bmlen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2935: FILE: fs/nfs/nfs4xdr.c:941:
+        if (bmlen > 2)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2935: FILE: fs/nfs/nfs4xdr.c:941:
+        if (bmlen > 2)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2936: FILE: fs/nfs/nfs4xdr.c:942:
+                goto xdr_error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2936: FILE: fs/nfs/nfs4xdr.c:942:
+                goto xdr_error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2938: FILE: fs/nfs/nfs4xdr.c:944:
+        READ_BUF((bmlen << 2) + 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2938: FILE: fs/nfs/nfs4xdr.c:944:
+        READ_BUF((bmlen << 2) + 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2939: FILE: fs/nfs/nfs4xdr.c:945:
+        if (bmlen > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2939: FILE: fs/nfs/nfs4xdr.c:945:
+        if (bmlen > 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2940: FILE: fs/nfs/nfs4xdr.c:946:
+                READ32(bmval0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2940: FILE: fs/nfs/nfs4xdr.c:946:
+                READ32(bmval0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2941: FILE: fs/nfs/nfs4xdr.c:947:
+        if (bmlen > 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2941: FILE: fs/nfs/nfs4xdr.c:947:
+        if (bmlen > 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2942: FILE: fs/nfs/nfs4xdr.c:948:
+                READ32(bmval1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2942: FILE: fs/nfs/nfs4xdr.c:948:
+                READ32(bmval1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2943: FILE: fs/nfs/nfs4xdr.c:949:
+        READ32(attrlen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2943: FILE: fs/nfs/nfs4xdr.c:949:
+        READ32(attrlen);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2962: FILE: fs/nfs/nfs4xdr.c:968:
+		fsinfo->bsize = fsinfo->rtmult = fsinfo->wtmult = 512;  /* ??? */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2966: FILE: fs/nfs/nfs4xdr.c:972:
+        if (bmval0 & FATTR4_WORD0_TYPE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2966: FILE: fs/nfs/nfs4xdr.c:972:
+        if (bmval0 & FATTR4_WORD0_TYPE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2967: FILE: fs/nfs/nfs4xdr.c:973:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2967: FILE: fs/nfs/nfs4xdr.c:973:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2968: FILE: fs/nfs/nfs4xdr.c:974:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2968: FILE: fs/nfs/nfs4xdr.c:974:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2969: FILE: fs/nfs/nfs4xdr.c:975:
+                READ32(type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2969: FILE: fs/nfs/nfs4xdr.c:975:
+                READ32(type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2970: FILE: fs/nfs/nfs4xdr.c:976:
+                if (type < NF4REG || type > NF4NAMEDATTR) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2970: FILE: fs/nfs/nfs4xdr.c:976:
+                if (type < NF4REG || type > NF4NAMEDATTR) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2971: FILE: fs/nfs/nfs4xdr.c:977:
+                        dprintk("read_attrs: bad type %d\n", type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2971: FILE: fs/nfs/nfs4xdr.c:977:
+                        dprintk("read_attrs: bad type %d\n", type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2972: FILE: fs/nfs/nfs4xdr.c:978:
+                        goto xdr_error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2972: FILE: fs/nfs/nfs4xdr.c:978:
+                        goto xdr_error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2973: FILE: fs/nfs/nfs4xdr.c:979:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2973: FILE: fs/nfs/nfs4xdr.c:979:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2976: FILE: fs/nfs/nfs4xdr.c:982:
+                dprintk("read_attrs: type=%d\n", (u32)nfp->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2976: FILE: fs/nfs/nfs4xdr.c:982:
+                dprintk("read_attrs: type=%d\n", (u32)nfp->type);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2977: FILE: fs/nfs/nfs4xdr.c:983:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2977: FILE: fs/nfs/nfs4xdr.c:983:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2978: FILE: fs/nfs/nfs4xdr.c:984:
+        if (bmval0 & FATTR4_WORD0_CHANGE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2978: FILE: fs/nfs/nfs4xdr.c:984:
+        if (bmval0 & FATTR4_WORD0_CHANGE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2979: FILE: fs/nfs/nfs4xdr.c:985:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2979: FILE: fs/nfs/nfs4xdr.c:985:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2980: FILE: fs/nfs/nfs4xdr.c:986:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2980: FILE: fs/nfs/nfs4xdr.c:986:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2981: FILE: fs/nfs/nfs4xdr.c:987:
+                READ64(nfp->change_attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2981: FILE: fs/nfs/nfs4xdr.c:987:
+                READ64(nfp->change_attr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2982: FILE: fs/nfs/nfs4xdr.c:988:
+                dprintk("read_attrs: changeid=%Ld\n", (u64)nfp->change_attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2982: FILE: fs/nfs/nfs4xdr.c:988:
+                dprintk("read_attrs: changeid=%Ld\n", (u64)nfp->change_attr);$

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#2982: FILE: fs/nfs/nfs4xdr.c:988:
+                dprintk("read_attrs: changeid=%Ld\n", (u64)nfp->change_attr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2983: FILE: fs/nfs/nfs4xdr.c:989:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2983: FILE: fs/nfs/nfs4xdr.c:989:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2984: FILE: fs/nfs/nfs4xdr.c:990:
+        if (bmval0 & FATTR4_WORD0_SIZE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2984: FILE: fs/nfs/nfs4xdr.c:990:
+        if (bmval0 & FATTR4_WORD0_SIZE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2985: FILE: fs/nfs/nfs4xdr.c:991:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2985: FILE: fs/nfs/nfs4xdr.c:991:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2986: FILE: fs/nfs/nfs4xdr.c:992:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2986: FILE: fs/nfs/nfs4xdr.c:992:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2987: FILE: fs/nfs/nfs4xdr.c:993:
+                READ64(nfp->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2987: FILE: fs/nfs/nfs4xdr.c:993:
+                READ64(nfp->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2988: FILE: fs/nfs/nfs4xdr.c:994:
+                dprintk("read_attrs: size=%Ld\n", (u64)nfp->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2988: FILE: fs/nfs/nfs4xdr.c:994:
+                dprintk("read_attrs: size=%Ld\n", (u64)nfp->size);$

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#2988: FILE: fs/nfs/nfs4xdr.c:994:
+                dprintk("read_attrs: size=%Ld\n", (u64)nfp->size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2989: FILE: fs/nfs/nfs4xdr.c:995:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2989: FILE: fs/nfs/nfs4xdr.c:995:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2990: FILE: fs/nfs/nfs4xdr.c:996:
+        if (bmval0 & FATTR4_WORD0_FSID) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2990: FILE: fs/nfs/nfs4xdr.c:996:
+        if (bmval0 & FATTR4_WORD0_FSID) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2991: FILE: fs/nfs/nfs4xdr.c:997:
+                READ_BUF(16);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2991: FILE: fs/nfs/nfs4xdr.c:997:
+                READ_BUF(16);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2992: FILE: fs/nfs/nfs4xdr.c:998:
+                len += 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2992: FILE: fs/nfs/nfs4xdr.c:998:
+                len += 16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2993: FILE: fs/nfs/nfs4xdr.c:999:
+                READ64(nfp->fsid_u.nfs4.major);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2993: FILE: fs/nfs/nfs4xdr.c:999:
+                READ64(nfp->fsid_u.nfs4.major);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2994: FILE: fs/nfs/nfs4xdr.c:1000:
+                READ64(nfp->fsid_u.nfs4.minor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2994: FILE: fs/nfs/nfs4xdr.c:1000:
+                READ64(nfp->fsid_u.nfs4.minor);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2995: FILE: fs/nfs/nfs4xdr.c:1001:
+                dprintk("read_attrs: fsid=0x%Lx/0x%Lx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2995: FILE: fs/nfs/nfs4xdr.c:1001:
+                dprintk("read_attrs: fsid=0x%Lx/0x%Lx\n",$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2995: FILE: fs/nfs/nfs4xdr.c:1001:
+                dprintk("read_attrs: fsid=0x%Lx/0x%Lx\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#2997: FILE: fs/nfs/nfs4xdr.c:1003:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2997: FILE: fs/nfs/nfs4xdr.c:1003:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2998: FILE: fs/nfs/nfs4xdr.c:1004:
+        if (bmval0 & FATTR4_WORD0_LEASE_TIME) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2998: FILE: fs/nfs/nfs4xdr.c:1004:
+        if (bmval0 & FATTR4_WORD0_LEASE_TIME) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2999: FILE: fs/nfs/nfs4xdr.c:1005:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2999: FILE: fs/nfs/nfs4xdr.c:1005:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3000: FILE: fs/nfs/nfs4xdr.c:1006:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3000: FILE: fs/nfs/nfs4xdr.c:1006:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3001: FILE: fs/nfs/nfs4xdr.c:1007:
+                READ32(fsinfo->lease_time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3001: FILE: fs/nfs/nfs4xdr.c:1007:
+                READ32(fsinfo->lease_time);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3002: FILE: fs/nfs/nfs4xdr.c:1008:
+                dprintk("read_attrs: lease_time=%d\n", fsinfo->lease_time);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3002: FILE: fs/nfs/nfs4xdr.c:1008:
+                dprintk("read_attrs: lease_time=%d\n", fsinfo->lease_time);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3003: FILE: fs/nfs/nfs4xdr.c:1009:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3003: FILE: fs/nfs/nfs4xdr.c:1009:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3004: FILE: fs/nfs/nfs4xdr.c:1010:
+        if (bmval0 & FATTR4_WORD0_FILEID) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3004: FILE: fs/nfs/nfs4xdr.c:1010:
+        if (bmval0 & FATTR4_WORD0_FILEID) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3005: FILE: fs/nfs/nfs4xdr.c:1011:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3005: FILE: fs/nfs/nfs4xdr.c:1011:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3006: FILE: fs/nfs/nfs4xdr.c:1012:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3006: FILE: fs/nfs/nfs4xdr.c:1012:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3007: FILE: fs/nfs/nfs4xdr.c:1013:
+                READ64(nfp->fileid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3007: FILE: fs/nfs/nfs4xdr.c:1013:
+                READ64(nfp->fileid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3008: FILE: fs/nfs/nfs4xdr.c:1014:
+                dprintk("read_attrs: fileid=%Ld\n", nfp->fileid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3008: FILE: fs/nfs/nfs4xdr.c:1014:
+                dprintk("read_attrs: fileid=%Ld\n", nfp->fileid);$

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#3008: FILE: fs/nfs/nfs4xdr.c:1014:
+                dprintk("read_attrs: fileid=%Ld\n", nfp->fileid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3009: FILE: fs/nfs/nfs4xdr.c:1015:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3009: FILE: fs/nfs/nfs4xdr.c:1015:
+        }$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3014: FILE: fs/nfs/nfs4xdr.c:1020:
+		dprintk("read_attrs: files_avail=0x%Lx\n", fsinfo->afiles);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3016: FILE: fs/nfs/nfs4xdr.c:1022:
+        if (bmval0 & FATTR4_WORD0_FILES_FREE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3016: FILE: fs/nfs/nfs4xdr.c:1022:
+        if (bmval0 & FATTR4_WORD0_FILES_FREE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3017: FILE: fs/nfs/nfs4xdr.c:1023:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3017: FILE: fs/nfs/nfs4xdr.c:1023:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3018: FILE: fs/nfs/nfs4xdr.c:1024:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3018: FILE: fs/nfs/nfs4xdr.c:1024:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3019: FILE: fs/nfs/nfs4xdr.c:1025:
+                READ64(fsinfo->ffiles);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3019: FILE: fs/nfs/nfs4xdr.c:1025:
+                READ64(fsinfo->ffiles);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3020: FILE: fs/nfs/nfs4xdr.c:1026:
+                dprintk("read_attrs: files_free=0x%Lx\n", fsinfo->ffiles);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3020: FILE: fs/nfs/nfs4xdr.c:1026:
+                dprintk("read_attrs: files_free=0x%Lx\n", fsinfo->ffiles);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3020: FILE: fs/nfs/nfs4xdr.c:1026:
+                dprintk("read_attrs: files_free=0x%Lx\n", fsinfo->ffiles);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3021: FILE: fs/nfs/nfs4xdr.c:1027:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3021: FILE: fs/nfs/nfs4xdr.c:1027:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3022: FILE: fs/nfs/nfs4xdr.c:1028:
+        if (bmval0 & FATTR4_WORD0_FILES_TOTAL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3022: FILE: fs/nfs/nfs4xdr.c:1028:
+        if (bmval0 & FATTR4_WORD0_FILES_TOTAL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3023: FILE: fs/nfs/nfs4xdr.c:1029:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3023: FILE: fs/nfs/nfs4xdr.c:1029:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3024: FILE: fs/nfs/nfs4xdr.c:1030:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3024: FILE: fs/nfs/nfs4xdr.c:1030:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3025: FILE: fs/nfs/nfs4xdr.c:1031:
+                READ64(fsinfo->tfiles);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3025: FILE: fs/nfs/nfs4xdr.c:1031:
+                READ64(fsinfo->tfiles);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3026: FILE: fs/nfs/nfs4xdr.c:1032:
+                dprintk("read_attrs: files_tot=0x%Lx\n", fsinfo->tfiles);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3026: FILE: fs/nfs/nfs4xdr.c:1032:
+                dprintk("read_attrs: files_tot=0x%Lx\n", fsinfo->tfiles);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3026: FILE: fs/nfs/nfs4xdr.c:1032:
+                dprintk("read_attrs: files_tot=0x%Lx\n", fsinfo->tfiles);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3027: FILE: fs/nfs/nfs4xdr.c:1033:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3027: FILE: fs/nfs/nfs4xdr.c:1033:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3028: FILE: fs/nfs/nfs4xdr.c:1034:
+        if (bmval0 & FATTR4_WORD0_MAXFILESIZE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3028: FILE: fs/nfs/nfs4xdr.c:1034:
+        if (bmval0 & FATTR4_WORD0_MAXFILESIZE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3029: FILE: fs/nfs/nfs4xdr.c:1035:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3029: FILE: fs/nfs/nfs4xdr.c:1035:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3030: FILE: fs/nfs/nfs4xdr.c:1036:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3030: FILE: fs/nfs/nfs4xdr.c:1036:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3031: FILE: fs/nfs/nfs4xdr.c:1037:
+                READ64(fsinfo->maxfilesize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3031: FILE: fs/nfs/nfs4xdr.c:1037:
+                READ64(fsinfo->maxfilesize);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3032: FILE: fs/nfs/nfs4xdr.c:1038:
+                dprintk("read_attrs: maxfilesize=0x%Lx\n", fsinfo->maxfilesize);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3032: FILE: fs/nfs/nfs4xdr.c:1038:
+                dprintk("read_attrs: maxfilesize=0x%Lx\n", fsinfo->maxfilesize);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3032: FILE: fs/nfs/nfs4xdr.c:1038:
+                dprintk("read_attrs: maxfilesize=0x%Lx\n", fsinfo->maxfilesize);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3033: FILE: fs/nfs/nfs4xdr.c:1039:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3033: FILE: fs/nfs/nfs4xdr.c:1039:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3040: FILE: fs/nfs/nfs4xdr.c:1046:
+        if (bmval0 & FATTR4_WORD0_MAXNAME) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3040: FILE: fs/nfs/nfs4xdr.c:1046:
+        if (bmval0 & FATTR4_WORD0_MAXNAME) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3041: FILE: fs/nfs/nfs4xdr.c:1047:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3041: FILE: fs/nfs/nfs4xdr.c:1047:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3042: FILE: fs/nfs/nfs4xdr.c:1048:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3042: FILE: fs/nfs/nfs4xdr.c:1048:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3043: FILE: fs/nfs/nfs4xdr.c:1049:
+                READ32(fsinfo->namelen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3043: FILE: fs/nfs/nfs4xdr.c:1049:
+                READ32(fsinfo->namelen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3044: FILE: fs/nfs/nfs4xdr.c:1050:
+                dprintk("read_attrs: maxname=%d\n", fsinfo->namelen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3044: FILE: fs/nfs/nfs4xdr.c:1050:
+                dprintk("read_attrs: maxname=%d\n", fsinfo->namelen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3045: FILE: fs/nfs/nfs4xdr.c:1051:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3045: FILE: fs/nfs/nfs4xdr.c:1051:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3046: FILE: fs/nfs/nfs4xdr.c:1052:
+        if (bmval0 & FATTR4_WORD0_MAXREAD) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3046: FILE: fs/nfs/nfs4xdr.c:1052:
+        if (bmval0 & FATTR4_WORD0_MAXREAD) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3047: FILE: fs/nfs/nfs4xdr.c:1053:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3047: FILE: fs/nfs/nfs4xdr.c:1053:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3048: FILE: fs/nfs/nfs4xdr.c:1054:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3048: FILE: fs/nfs/nfs4xdr.c:1054:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3049: FILE: fs/nfs/nfs4xdr.c:1055:
+                READ64(fsinfo->rtmax);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3049: FILE: fs/nfs/nfs4xdr.c:1055:
+                READ64(fsinfo->rtmax);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3050: FILE: fs/nfs/nfs4xdr.c:1056:
+		fsinfo->rtpref = fsinfo->dtpref = fsinfo->rtmax;

ERROR:CODE_INDENT: code indent should use tabs where possible
#3051: FILE: fs/nfs/nfs4xdr.c:1057:
+                dprintk("read_attrs: maxread=%d\n", fsinfo->rtmax);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3051: FILE: fs/nfs/nfs4xdr.c:1057:
+                dprintk("read_attrs: maxread=%d\n", fsinfo->rtmax);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3052: FILE: fs/nfs/nfs4xdr.c:1058:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3052: FILE: fs/nfs/nfs4xdr.c:1058:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3053: FILE: fs/nfs/nfs4xdr.c:1059:
+        if (bmval0 & FATTR4_WORD0_MAXWRITE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3053: FILE: fs/nfs/nfs4xdr.c:1059:
+        if (bmval0 & FATTR4_WORD0_MAXWRITE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3054: FILE: fs/nfs/nfs4xdr.c:1060:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3054: FILE: fs/nfs/nfs4xdr.c:1060:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3055: FILE: fs/nfs/nfs4xdr.c:1061:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3055: FILE: fs/nfs/nfs4xdr.c:1061:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3056: FILE: fs/nfs/nfs4xdr.c:1062:
+                READ64(fsinfo->wtmax);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3056: FILE: fs/nfs/nfs4xdr.c:1062:
+                READ64(fsinfo->wtmax);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3058: FILE: fs/nfs/nfs4xdr.c:1064:
+                dprintk("read_attrs: maxwrite=%d\n", fsinfo->wtmax);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3058: FILE: fs/nfs/nfs4xdr.c:1064:
+                dprintk("read_attrs: maxwrite=%d\n", fsinfo->wtmax);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3059: FILE: fs/nfs/nfs4xdr.c:1065:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3059: FILE: fs/nfs/nfs4xdr.c:1065:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3061: FILE: fs/nfs/nfs4xdr.c:1067:
+        if (bmval1 & FATTR4_WORD1_MODE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3061: FILE: fs/nfs/nfs4xdr.c:1067:
+        if (bmval1 & FATTR4_WORD1_MODE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3062: FILE: fs/nfs/nfs4xdr.c:1068:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3062: FILE: fs/nfs/nfs4xdr.c:1068:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3063: FILE: fs/nfs/nfs4xdr.c:1069:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3063: FILE: fs/nfs/nfs4xdr.c:1069:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3064: FILE: fs/nfs/nfs4xdr.c:1070:
+                READ32(dummy32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3064: FILE: fs/nfs/nfs4xdr.c:1070:
+                READ32(dummy32);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3066: FILE: fs/nfs/nfs4xdr.c:1072:
+                dprintk("read_attrs: mode=0%o\n", nfp->mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3066: FILE: fs/nfs/nfs4xdr.c:1072:
+                dprintk("read_attrs: mode=0%o\n", nfp->mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3067: FILE: fs/nfs/nfs4xdr.c:1073:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3067: FILE: fs/nfs/nfs4xdr.c:1073:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3068: FILE: fs/nfs/nfs4xdr.c:1074:
+        if (bmval1 & FATTR4_WORD1_NUMLINKS) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3068: FILE: fs/nfs/nfs4xdr.c:1074:
+        if (bmval1 & FATTR4_WORD1_NUMLINKS) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3069: FILE: fs/nfs/nfs4xdr.c:1075:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3069: FILE: fs/nfs/nfs4xdr.c:1075:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3070: FILE: fs/nfs/nfs4xdr.c:1076:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3070: FILE: fs/nfs/nfs4xdr.c:1076:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3071: FILE: fs/nfs/nfs4xdr.c:1077:
+                READ32(nfp->nlink);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3071: FILE: fs/nfs/nfs4xdr.c:1077:
+                READ32(nfp->nlink);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3072: FILE: fs/nfs/nfs4xdr.c:1078:
+                dprintk("read_attrs: nlinks=0%o\n", nfp->nlink);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3072: FILE: fs/nfs/nfs4xdr.c:1078:
+                dprintk("read_attrs: nlinks=0%o\n", nfp->nlink);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3073: FILE: fs/nfs/nfs4xdr.c:1079:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3073: FILE: fs/nfs/nfs4xdr.c:1079:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3074: FILE: fs/nfs/nfs4xdr.c:1080:
+        if (bmval1 & FATTR4_WORD1_OWNER) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3074: FILE: fs/nfs/nfs4xdr.c:1080:
+        if (bmval1 & FATTR4_WORD1_OWNER) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3075: FILE: fs/nfs/nfs4xdr.c:1081:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3075: FILE: fs/nfs/nfs4xdr.c:1081:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3076: FILE: fs/nfs/nfs4xdr.c:1082:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3076: FILE: fs/nfs/nfs4xdr.c:1082:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3077: FILE: fs/nfs/nfs4xdr.c:1083:
+                READ32(dummy32);    /* name length */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3077: FILE: fs/nfs/nfs4xdr.c:1083:
+                READ32(dummy32);    /* name length */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3078: FILE: fs/nfs/nfs4xdr.c:1084:
+                if (dummy32 > XDR_MAX_NETOBJ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3078: FILE: fs/nfs/nfs4xdr.c:1084:
+                if (dummy32 > XDR_MAX_NETOBJ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3080: FILE: fs/nfs/nfs4xdr.c:1086:
+                        goto xdr_error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3080: FILE: fs/nfs/nfs4xdr.c:1086:
+                        goto xdr_error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3081: FILE: fs/nfs/nfs4xdr.c:1087:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3081: FILE: fs/nfs/nfs4xdr.c:1087:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3082: FILE: fs/nfs/nfs4xdr.c:1088:
+                READ_BUF(dummy32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3082: FILE: fs/nfs/nfs4xdr.c:1088:
+                READ_BUF(dummy32);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3083: FILE: fs/nfs/nfs4xdr.c:1089:
+                len += (XDR_QUADLEN(dummy32) << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3083: FILE: fs/nfs/nfs4xdr.c:1089:
+                len += (XDR_QUADLEN(dummy32) << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3084: FILE: fs/nfs/nfs4xdr.c:1090:
+                if ((status = gss_get_num(GSS_OWNER, dummy32, (char *)p, &nfp->uid))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3084: FILE: fs/nfs/nfs4xdr.c:1090:
+                if ((status = gss_get_num(GSS_OWNER, dummy32, (char *)p, &nfp->uid))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3084: FILE: fs/nfs/nfs4xdr.c:1090:
+                if ((status = gss_get_num(GSS_OWNER, dummy32, (char *)p, &nfp->uid))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#3085: FILE: fs/nfs/nfs4xdr.c:1091:
+                        dprintk("read_attrs: gss_get_num failed!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3085: FILE: fs/nfs/nfs4xdr.c:1091:
+                        dprintk("read_attrs: gss_get_num failed!\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3086: FILE: fs/nfs/nfs4xdr.c:1092:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3086: FILE: fs/nfs/nfs4xdr.c:1092:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3087: FILE: fs/nfs/nfs4xdr.c:1093:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3087: FILE: fs/nfs/nfs4xdr.c:1093:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3088: FILE: fs/nfs/nfs4xdr.c:1094:
+                dprintk("read_attrs: uid=%d\n", (int)nfp->uid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3088: FILE: fs/nfs/nfs4xdr.c:1094:
+                dprintk("read_attrs: uid=%d\n", (int)nfp->uid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3089: FILE: fs/nfs/nfs4xdr.c:1095:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3089: FILE: fs/nfs/nfs4xdr.c:1095:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3090: FILE: fs/nfs/nfs4xdr.c:1096:
+        if (bmval1 & FATTR4_WORD1_OWNER_GROUP) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3090: FILE: fs/nfs/nfs4xdr.c:1096:
+        if (bmval1 & FATTR4_WORD1_OWNER_GROUP) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3091: FILE: fs/nfs/nfs4xdr.c:1097:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3091: FILE: fs/nfs/nfs4xdr.c:1097:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3092: FILE: fs/nfs/nfs4xdr.c:1098:
+                len += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3092: FILE: fs/nfs/nfs4xdr.c:1098:
+                len += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3093: FILE: fs/nfs/nfs4xdr.c:1099:
+                READ32(dummy32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3093: FILE: fs/nfs/nfs4xdr.c:1099:
+                READ32(dummy32);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3094: FILE: fs/nfs/nfs4xdr.c:1100:
+                if (dummy32 > XDR_MAX_NETOBJ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3094: FILE: fs/nfs/nfs4xdr.c:1100:
+                if (dummy32 > XDR_MAX_NETOBJ) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3095: FILE: fs/nfs/nfs4xdr.c:1101:
+                        dprintk("read_attrs: name too long!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3095: FILE: fs/nfs/nfs4xdr.c:1101:
+                        dprintk("read_attrs: name too long!\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3096: FILE: fs/nfs/nfs4xdr.c:1102:
+                        goto xdr_error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3096: FILE: fs/nfs/nfs4xdr.c:1102:
+                        goto xdr_error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3097: FILE: fs/nfs/nfs4xdr.c:1103:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3097: FILE: fs/nfs/nfs4xdr.c:1103:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3098: FILE: fs/nfs/nfs4xdr.c:1104:
+                READ_BUF(dummy32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3098: FILE: fs/nfs/nfs4xdr.c:1104:
+                READ_BUF(dummy32);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3099: FILE: fs/nfs/nfs4xdr.c:1105:
+                len += (XDR_QUADLEN(dummy32) << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3099: FILE: fs/nfs/nfs4xdr.c:1105:
+                len += (XDR_QUADLEN(dummy32) << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3100: FILE: fs/nfs/nfs4xdr.c:1106:
+                if ((status = gss_get_num(GSS_GROUP, dummy32, (char *)p, &nfp->gid))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3100: FILE: fs/nfs/nfs4xdr.c:1106:
+                if ((status = gss_get_num(GSS_GROUP, dummy32, (char *)p, &nfp->gid))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3100: FILE: fs/nfs/nfs4xdr.c:1106:
+                if ((status = gss_get_num(GSS_GROUP, dummy32, (char *)p, &nfp->gid))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#3101: FILE: fs/nfs/nfs4xdr.c:1107:
+                        dprintk("read_attrs: gss_get_num failed!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3101: FILE: fs/nfs/nfs4xdr.c:1107:
+                        dprintk("read_attrs: gss_get_num failed!\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3102: FILE: fs/nfs/nfs4xdr.c:1108:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3102: FILE: fs/nfs/nfs4xdr.c:1108:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3103: FILE: fs/nfs/nfs4xdr.c:1109:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3103: FILE: fs/nfs/nfs4xdr.c:1109:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3104: FILE: fs/nfs/nfs4xdr.c:1110:
+                dprintk("read_attrs: gid=%d\n", (int)nfp->gid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3104: FILE: fs/nfs/nfs4xdr.c:1110:
+                dprintk("read_attrs: gid=%d\n", (int)nfp->gid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3105: FILE: fs/nfs/nfs4xdr.c:1111:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3105: FILE: fs/nfs/nfs4xdr.c:1111:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3106: FILE: fs/nfs/nfs4xdr.c:1112:
+        if (bmval1 & FATTR4_WORD1_RAWDEV) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3106: FILE: fs/nfs/nfs4xdr.c:1112:
+        if (bmval1 & FATTR4_WORD1_RAWDEV) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3107: FILE: fs/nfs/nfs4xdr.c:1113:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3107: FILE: fs/nfs/nfs4xdr.c:1113:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3108: FILE: fs/nfs/nfs4xdr.c:1114:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3108: FILE: fs/nfs/nfs4xdr.c:1114:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3109: FILE: fs/nfs/nfs4xdr.c:1115:
+                READ32(dummy32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3109: FILE: fs/nfs/nfs4xdr.c:1115:
+                READ32(dummy32);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3111: FILE: fs/nfs/nfs4xdr.c:1117:
+                READ32(dummy32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3111: FILE: fs/nfs/nfs4xdr.c:1117:
+                READ32(dummy32);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3113: FILE: fs/nfs/nfs4xdr.c:1119:
+                dprintk("read_attrs: rdev=%d\n", nfp->rdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3113: FILE: fs/nfs/nfs4xdr.c:1119:
+                dprintk("read_attrs: rdev=%d\n", nfp->rdev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3114: FILE: fs/nfs/nfs4xdr.c:1120:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3114: FILE: fs/nfs/nfs4xdr.c:1120:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3115: FILE: fs/nfs/nfs4xdr.c:1121:
+        if (bmval1 & FATTR4_WORD1_SPACE_AVAIL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3115: FILE: fs/nfs/nfs4xdr.c:1121:
+        if (bmval1 & FATTR4_WORD1_SPACE_AVAIL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3116: FILE: fs/nfs/nfs4xdr.c:1122:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3116: FILE: fs/nfs/nfs4xdr.c:1122:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3117: FILE: fs/nfs/nfs4xdr.c:1123:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3117: FILE: fs/nfs/nfs4xdr.c:1123:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3118: FILE: fs/nfs/nfs4xdr.c:1124:
+                READ64(fsinfo->abytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3118: FILE: fs/nfs/nfs4xdr.c:1124:
+                READ64(fsinfo->abytes);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3119: FILE: fs/nfs/nfs4xdr.c:1125:
+                dprintk("read_attrs: savail=0x%Lx\n", fsinfo->abytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3119: FILE: fs/nfs/nfs4xdr.c:1125:
+                dprintk("read_attrs: savail=0x%Lx\n", fsinfo->abytes);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3119: FILE: fs/nfs/nfs4xdr.c:1125:
+                dprintk("read_attrs: savail=0x%Lx\n", fsinfo->abytes);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3120: FILE: fs/nfs/nfs4xdr.c:1126:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3120: FILE: fs/nfs/nfs4xdr.c:1126:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3122: FILE: fs/nfs/nfs4xdr.c:1128:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3122: FILE: fs/nfs/nfs4xdr.c:1128:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3123: FILE: fs/nfs/nfs4xdr.c:1129:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3123: FILE: fs/nfs/nfs4xdr.c:1129:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3124: FILE: fs/nfs/nfs4xdr.c:1130:
+                READ64(fsinfo->fbytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3124: FILE: fs/nfs/nfs4xdr.c:1130:
+                READ64(fsinfo->fbytes);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3125: FILE: fs/nfs/nfs4xdr.c:1131:
+                dprintk("read_attrs: sfree=0x%Lx\n", fsinfo->fbytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3125: FILE: fs/nfs/nfs4xdr.c:1131:
+                dprintk("read_attrs: sfree=0x%Lx\n", fsinfo->fbytes);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3125: FILE: fs/nfs/nfs4xdr.c:1131:
+                dprintk("read_attrs: sfree=0x%Lx\n", fsinfo->fbytes);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3126: FILE: fs/nfs/nfs4xdr.c:1132:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3126: FILE: fs/nfs/nfs4xdr.c:1132:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3127: FILE: fs/nfs/nfs4xdr.c:1133:
+        if (bmval1 & FATTR4_WORD1_SPACE_TOTAL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3127: FILE: fs/nfs/nfs4xdr.c:1133:
+        if (bmval1 & FATTR4_WORD1_SPACE_TOTAL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3128: FILE: fs/nfs/nfs4xdr.c:1134:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3128: FILE: fs/nfs/nfs4xdr.c:1134:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3129: FILE: fs/nfs/nfs4xdr.c:1135:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3129: FILE: fs/nfs/nfs4xdr.c:1135:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3130: FILE: fs/nfs/nfs4xdr.c:1136:
+                READ64(fsinfo->tbytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3130: FILE: fs/nfs/nfs4xdr.c:1136:
+                READ64(fsinfo->tbytes);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3131: FILE: fs/nfs/nfs4xdr.c:1137:
+                dprintk("read_attrs: stotal=0x%Lx\n", fsinfo->tbytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3131: FILE: fs/nfs/nfs4xdr.c:1137:
+                dprintk("read_attrs: stotal=0x%Lx\n", fsinfo->tbytes);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3131: FILE: fs/nfs/nfs4xdr.c:1137:
+                dprintk("read_attrs: stotal=0x%Lx\n", fsinfo->tbytes);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3132: FILE: fs/nfs/nfs4xdr.c:1138:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3132: FILE: fs/nfs/nfs4xdr.c:1138:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3133: FILE: fs/nfs/nfs4xdr.c:1139:
+        if (bmval1 & FATTR4_WORD1_SPACE_USED) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3133: FILE: fs/nfs/nfs4xdr.c:1139:
+        if (bmval1 & FATTR4_WORD1_SPACE_USED) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3134: FILE: fs/nfs/nfs4xdr.c:1140:
+                READ_BUF(8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3134: FILE: fs/nfs/nfs4xdr.c:1140:
+                READ_BUF(8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3135: FILE: fs/nfs/nfs4xdr.c:1141:
+                len += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3135: FILE: fs/nfs/nfs4xdr.c:1141:
+                len += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3136: FILE: fs/nfs/nfs4xdr.c:1142:
+                READ64(nfp->du.nfs3.used);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3136: FILE: fs/nfs/nfs4xdr.c:1142:
+                READ64(nfp->du.nfs3.used);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3137: FILE: fs/nfs/nfs4xdr.c:1143:
+                dprintk("read_attrs: sused=0x%Lx\n", nfp->du.nfs3.used);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3137: FILE: fs/nfs/nfs4xdr.c:1143:
+                dprintk("read_attrs: sused=0x%Lx\n", nfp->du.nfs3.used);$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3137: FILE: fs/nfs/nfs4xdr.c:1143:
+                dprintk("read_attrs: sused=0x%Lx\n", nfp->du.nfs3.used);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3138: FILE: fs/nfs/nfs4xdr.c:1144:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3138: FILE: fs/nfs/nfs4xdr.c:1144:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3139: FILE: fs/nfs/nfs4xdr.c:1145:
+        if (bmval1 & FATTR4_WORD1_TIME_ACCESS) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3139: FILE: fs/nfs/nfs4xdr.c:1145:
+        if (bmval1 & FATTR4_WORD1_TIME_ACCESS) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3140: FILE: fs/nfs/nfs4xdr.c:1146:
+                READ_BUF(12);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3140: FILE: fs/nfs/nfs4xdr.c:1146:
+                READ_BUF(12);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3141: FILE: fs/nfs/nfs4xdr.c:1147:
+                len += 12;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3141: FILE: fs/nfs/nfs4xdr.c:1147:
+                len += 12;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3142: FILE: fs/nfs/nfs4xdr.c:1148:
+                READTIME(nfp->atime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3142: FILE: fs/nfs/nfs4xdr.c:1148:
+                READTIME(nfp->atime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3143: FILE: fs/nfs/nfs4xdr.c:1149:
+                dprintk("read_attrs: atime=%d\n", (int)nfp->atime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3143: FILE: fs/nfs/nfs4xdr.c:1149:
+                dprintk("read_attrs: atime=%d\n", (int)nfp->atime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3144: FILE: fs/nfs/nfs4xdr.c:1150:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3144: FILE: fs/nfs/nfs4xdr.c:1150:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3145: FILE: fs/nfs/nfs4xdr.c:1151:
+        if (bmval1 & FATTR4_WORD1_TIME_METADATA) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3145: FILE: fs/nfs/nfs4xdr.c:1151:
+        if (bmval1 & FATTR4_WORD1_TIME_METADATA) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3146: FILE: fs/nfs/nfs4xdr.c:1152:
+                READ_BUF(12);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3146: FILE: fs/nfs/nfs4xdr.c:1152:
+                READ_BUF(12);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3147: FILE: fs/nfs/nfs4xdr.c:1153:
+                len += 12;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3147: FILE: fs/nfs/nfs4xdr.c:1153:
+                len += 12;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3148: FILE: fs/nfs/nfs4xdr.c:1154:
+                READTIME(nfp->ctime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3148: FILE: fs/nfs/nfs4xdr.c:1154:
+                READTIME(nfp->ctime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3149: FILE: fs/nfs/nfs4xdr.c:1155:
+                dprintk("read_attrs: ctime=%d\n", (int)nfp->ctime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3149: FILE: fs/nfs/nfs4xdr.c:1155:
+                dprintk("read_attrs: ctime=%d\n", (int)nfp->ctime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3150: FILE: fs/nfs/nfs4xdr.c:1156:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3150: FILE: fs/nfs/nfs4xdr.c:1156:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3151: FILE: fs/nfs/nfs4xdr.c:1157:
+        if (bmval1 & FATTR4_WORD1_TIME_MODIFY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3151: FILE: fs/nfs/nfs4xdr.c:1157:
+        if (bmval1 & FATTR4_WORD1_TIME_MODIFY) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3152: FILE: fs/nfs/nfs4xdr.c:1158:
+                READ_BUF(12);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3152: FILE: fs/nfs/nfs4xdr.c:1158:
+                READ_BUF(12);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3153: FILE: fs/nfs/nfs4xdr.c:1159:
+                len += 12;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3153: FILE: fs/nfs/nfs4xdr.c:1159:
+                len += 12;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3154: FILE: fs/nfs/nfs4xdr.c:1160:
+                READTIME(nfp->mtime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3154: FILE: fs/nfs/nfs4xdr.c:1160:
+                READTIME(nfp->mtime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3155: FILE: fs/nfs/nfs4xdr.c:1161:
+                dprintk("read_attrs: mtime=%d\n", (int)nfp->mtime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3155: FILE: fs/nfs/nfs4xdr.c:1161:
+                dprintk("read_attrs: mtime=%d\n", (int)nfp->mtime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3156: FILE: fs/nfs/nfs4xdr.c:1162:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3156: FILE: fs/nfs/nfs4xdr.c:1162:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3157: FILE: fs/nfs/nfs4xdr.c:1163:
+        if (len != attrlen)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3157: FILE: fs/nfs/nfs4xdr.c:1163:
+        if (len != attrlen)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3158: FILE: fs/nfs/nfs4xdr.c:1164:
+                goto xdr_error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3158: FILE: fs/nfs/nfs4xdr.c:1164:
+                goto xdr_error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3161: FILE: fs/nfs/nfs4xdr.c:1167:
+        DECODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3161: FILE: fs/nfs/nfs4xdr.c:1167:
+        DECODE_TAIL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3168: FILE: fs/nfs/nfs4xdr.c:1174:
+        DECODE_HEAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3168: FILE: fs/nfs/nfs4xdr.c:1174:
+        DECODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3170: FILE: fs/nfs/nfs4xdr.c:1176:
+        if (!nfserr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3170: FILE: fs/nfs/nfs4xdr.c:1176:
+        if (!nfserr) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3171: FILE: fs/nfs/nfs4xdr.c:1177:
+                READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3171: FILE: fs/nfs/nfs4xdr.c:1177:
+                READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3176: FILE: fs/nfs/nfs4xdr.c:1182:
+                READ_BUF(len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3176: FILE: fs/nfs/nfs4xdr.c:1182:
+                READ_BUF(len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3177: FILE: fs/nfs/nfs4xdr.c:1183:
+                COPYMEM(getfh->gf_fhandle->data, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3177: FILE: fs/nfs/nfs4xdr.c:1183:
+                COPYMEM(getfh->gf_fhandle->data, len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3178: FILE: fs/nfs/nfs4xdr.c:1184:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3178: FILE: fs/nfs/nfs4xdr.c:1184:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3180: FILE: fs/nfs/nfs4xdr.c:1186:
+        DECODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3180: FILE: fs/nfs/nfs4xdr.c:1186:
+        DECODE_TAIL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#3197: FILE: fs/nfs/nfs4xdr.c:1203:
+	u32 bmlen, delegation_type;
+	DECODE_HEAD;

WARNING:LINE_SPACING: Missing a blank line after declarations
#3238: FILE: fs/nfs/nfs4xdr.c:1244:
+	u32 throwaway;
+	DECODE_HEAD;

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#3255: FILE: fs/nfs/nfs4xdr.c:1261:
+decode_readdir(struct nfs4_compound *cp, int nfserr, struct rpc_rqst *req, struct nfs4_readdir *readdir)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3262: FILE: fs/nfs/nfs4xdr.c:1268:
+^Iint ^I^Ii;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#3263: FILE: fs/nfs/nfs4xdr.c:1269:
+	int 		i;
+	DECODE_HEAD;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3269: FILE: fs/nfs/nfs4xdr.c:1275:
+		BUG_ON(pglen > PAGE_CACHE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#3270: FILE: fs/nfs/nfs4xdr.c:1276:
+		p   = (u32 *) kmap(page);

CHECK:SPACING: No space is necessary after a cast
#3271: FILE: fs/nfs/nfs4xdr.c:1277:
+		end = (u32 *) ((char *)p + pglen + readdir->rd_pgbase);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#3280: FILE: fs/nfs/nfs4xdr.c:1286:
+				printk(KERN_WARNING "NFS: giant filename in readdir (len 0x%x)\n", len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3280: FILE: fs/nfs/nfs4xdr.c:1286:
+				printk(KERN_WARNING "NFS: giant filename in readdir (len 0x%x)\n", len);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#3289: FILE: fs/nfs/nfs4xdr.c:1295:
+				printk(KERN_WARNING "NFS: giant bitmap in readdir (len 0x%x)\n", len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3289: FILE: fs/nfs/nfs4xdr.c:1295:
+				printk(KERN_WARNING "NFS: giant bitmap in readdir (len 0x%x)\n", len);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3297: FILE: fs/nfs/nfs4xdr.c:1303:
+				if (!word)
[...]
+				else if (i == 0 && word == FATTR4_WORD0_FILEID) {
[...]

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3303: FILE: fs/nfs/nfs4xdr.c:1309:
+				printk(KERN_WARNING "NFS: unexpected bitmap word in readdir (0x%x)\n", word);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3303: FILE: fs/nfs/nfs4xdr.c:1309:
+				printk(KERN_WARNING "NFS: unexpected bitmap word in readdir (0x%x)\n", word);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3307: FILE: fs/nfs/nfs4xdr.c:1313:
+				printk(KERN_WARNING "NFS: unexpected attrlen in readdir\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3319: FILE: fs/nfs/nfs4xdr.c:1325:
+	printk(KERN_NOTICE "NFS: short packet in readdir reply!\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3321: FILE: fs/nfs/nfs4xdr.c:1327:
+	entry[0] = entry[1] = 0;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#3330: FILE: fs/nfs/nfs4xdr.c:1336:
+decode_readlink(struct nfs4_compound *cp, int nfserr, struct rpc_rqst *req, struct nfs4_readlink *readlink)

WARNING:REPEATED_WORD: Possible repeated word: 'and'
#3342: FILE: fs/nfs/nfs4xdr.c:1348:
+		 * and and null-terminate the text (the VFS expects

CHECK:SPACING: No space is necessary after a cast
#3345: FILE: fs/nfs/nfs4xdr.c:1351:
+		strlen = (u32 *) kmap(rcvbuf->pages[0]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3348: FILE: fs/nfs/nfs4xdr.c:1354:
+			printk(KERN_WARNING "nfs: server returned giant symlink!\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3378: FILE: fs/nfs/nfs4xdr.c:1384:
+		if ((status = decode_change_info(cp, rename->rn_src_cinfo)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3380: FILE: fs/nfs/nfs4xdr.c:1386:
+		if ((status = decode_change_info(cp, rename->rn_dst_cinfo)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#3390: FILE: fs/nfs/nfs4xdr.c:1396:
+        u32 bmlen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3390: FILE: fs/nfs/nfs4xdr.c:1396:
+        u32 bmlen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3391: FILE: fs/nfs/nfs4xdr.c:1397:
+        DECODE_HEAD;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#3391: FILE: fs/nfs/nfs4xdr.c:1397:
+        u32 bmlen;
+        DECODE_HEAD;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3391: FILE: fs/nfs/nfs4xdr.c:1397:
+        DECODE_HEAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3393: FILE: fs/nfs/nfs4xdr.c:1399:
+        READ_BUF(4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3393: FILE: fs/nfs/nfs4xdr.c:1399:
+        READ_BUF(4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3394: FILE: fs/nfs/nfs4xdr.c:1400:
+        READ32(bmlen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3394: FILE: fs/nfs/nfs4xdr.c:1400:
+        READ32(bmlen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3395: FILE: fs/nfs/nfs4xdr.c:1401:
+        if (bmlen > 10)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3395: FILE: fs/nfs/nfs4xdr.c:1401:
+        if (bmlen > 10)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3396: FILE: fs/nfs/nfs4xdr.c:1402:
+                goto xdr_error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3396: FILE: fs/nfs/nfs4xdr.c:1402:
+                goto xdr_error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3397: FILE: fs/nfs/nfs4xdr.c:1403:
+        READ_BUF(bmlen << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3397: FILE: fs/nfs/nfs4xdr.c:1403:
+        READ_BUF(bmlen << 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3399: FILE: fs/nfs/nfs4xdr.c:1405:
+        DECODE_TAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3399: FILE: fs/nfs/nfs4xdr.c:1405:
+        DECODE_TAIL;$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#3411: FILE: fs/nfs/nfs4xdr.c:1417:
+	}
+	else if (nfserr == NFSERR_CLID_INUSE) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3450: FILE: fs/nfs/nfs4xdr.c:1456:
+	u32 opnum, nfserr;
+	DECODE_HEAD;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#3487: FILE: fs/nfs/nfs4xdr.c:1493:
+		}
+		else if (nfserr) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3567: FILE: fs/nfs/nfs4xdr.c:1573:
+			BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3576: FILE: fs/nfs/nfs4xdr.c:1582:
+}
+/*

CHECK:SPACING: No space is necessary after a cast
#3598: FILE: fs/nfs/nfs4xdr.c:1604:
+	cp->end = (u32 *) ((u8 *) rqstp->rq_rvec->iov_base + rqstp->rq_rvec->iov_len);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3600: FILE: fs/nfs/nfs4xdr.c:1606:
+	if ((status = decode_compound(cp, rqstp)))

CHECK:SPACING: No space is necessary after a cast
#3626: FILE: fs/nfs/nfs4xdr.c:1632:
+	entry->name = (const char *) p;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#3650: FILE: fs/nfs/nfs4xdr.c:1656:
+# define MAX(a, b)	(((a) > (b))? (a) : (b))
                   	            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#3650: FILE: fs/nfs/nfs4xdr.c:1656:
+# define MAX(a, b)	(((a) > (b))? (a) : (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#3650: FILE: fs/nfs/nfs4xdr.c:1656:
+# define MAX(a, b)	(((a) > (b))? (a) : (b))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3654: FILE: fs/nfs/nfs4xdr.c:1660:
+    { "nfs4_" #proc,^I^I^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#3655: FILE: fs/nfs/nfs4xdr.c:1661:
+      (kxdrproc_t) nfs4_xdr_##argtype,				\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3655: FILE: fs/nfs/nfs4xdr.c:1661:
+      (kxdrproc_t) nfs4_xdr_##argtype,^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#3656: FILE: fs/nfs/nfs4xdr.c:1662:
+      (kxdrproc_t) nfs4_xdr_##restype,				\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3656: FILE: fs/nfs/nfs4xdr.c:1662:
+      (kxdrproc_t) nfs4_xdr_##restype,^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3657: FILE: fs/nfs/nfs4xdr.c:1663:
+      MAX(NFS4_##argtype##_sz,NFS4_##restype##_sz) << 2,^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3657: FILE: fs/nfs/nfs4xdr.c:1663:
+      MAX(NFS4_##argtype##_sz,NFS4_##restype##_sz) << 2,	\
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3658: FILE: fs/nfs/nfs4xdr.c:1664:
+      0^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3659: FILE: fs/nfs/nfs4xdr.c:1665:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3662: FILE: fs/nfs/nfs4xdr.c:1668:
+  PROC(null,^I^Ienc_void,^Idec_void),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3663: FILE: fs/nfs/nfs4xdr.c:1669:
+  PROC(compound,^Ienc_compound,^Idec_compound)$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(nfs4_procedures)
#3668: FILE: fs/nfs/nfs4xdr.c:1674:
+	nrprocs:		sizeof(nfs4_procedures)/sizeof(nfs4_procedures[0]),

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3668: FILE: fs/nfs/nfs4xdr.c:1674:
+	nrprocs:		sizeof(nfs4_procedures)/sizeof(nfs4_procedures[0]),
 	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3668: FILE: fs/nfs/nfs4xdr.c:1674:
+	nrprocs:		sizeof(nfs4_procedures)/sizeof(nfs4_procedures[0]),
 	        		                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#3668: FILE: fs/nfs/nfs4xdr.c:1674:
+	nrprocs:		sizeof(nfs4_procedures)/sizeof(nfs4_procedures[0]),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3669: FILE: fs/nfs/nfs4xdr.c:1675:
+	procs:			nfs4_procedures
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#3669: FILE: fs/nfs/nfs4xdr.c:1675:
+	procs:			nfs4_procedures

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 406 errors, 430 warnings, 55 checks, 3614 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
