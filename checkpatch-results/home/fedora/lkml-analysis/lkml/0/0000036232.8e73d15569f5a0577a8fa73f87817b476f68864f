WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
* Ocfs2 now supports ext2 file attributes. Thanks to Herbert Poetzl for that

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#72: 
 fs/ocfs2/uptodate.c          |   21 ++++++
          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#73: 
 fs/ocfs2/uptodate.h          |    2 
          ^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: fs/configfs/dir.c:99:
+	struct configfs_dirent * sd;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: fs/configfs/dir.c:104:
+			const unsigned char *existing = configfs_get_name(sd);
+			if (strcmp(existing, new))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: fs/configfs/dir.c:114:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: fs/ocfs2/aops.c:435:
+	 * require us to set back inode->i_size. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#313: FILE: fs/ocfs2/aops.c:453:
+	inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#314: FILE: fs/ocfs2/aops.c:454:
+	di->i_mtime = di->i_ctime = cpu_to_le64(inode->i_mtime.tv_sec);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#315: FILE: fs/ocfs2/aops.c:455:
+	di->i_mtime_nsec = di->i_ctime_nsec = cpu_to_le32(inode->i_mtime.tv_nsec);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#358: FILE: fs/ocfs2/buffer_head_io.c:103:
+	BUG_ON((flags & OCFS2_BH_READAHEAD) &&

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#387: FILE: fs/ocfs2/buffer_head_io.c:165:
+		 *    uptodate cache. The re-check from #2 catches the
 		      ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: fs/ocfs2/buffer_head_io.c:202:
+			 * done here. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#404: FILE: fs/ocfs2/buffer_head_io.c:204:
+			if ((flags & OCFS2_BH_READAHEAD)
+			    && ocfs2_buffer_read_ahead(inode, bh))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#418: FILE: fs/ocfs2/buffer_head_io.c:223:
+			 * buffer lock. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#420: FILE: fs/ocfs2/buffer_head_io.c:225:
+			if ((flags & OCFS2_BH_CACHED)
+			    && !(flags & OCFS2_BH_READAHEAD)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#421: FILE: fs/ocfs2/buffer_head_io.c:226:
+			    && !(flags & OCFS2_BH_READAHEAD)
+			    && ocfs2_buffer_uptodate(inode, bh)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#461: FILE: fs/ocfs2/buffer_head_io.c:247:
+			 * journal has it. */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#469: FILE: fs/ocfs2/buffer_head_io.c:255:
+				 * remove the clustered uptodate information
 				                        ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#471: FILE: fs/ocfs2/buffer_head_io.c:257:
+				 * uptodate. */
 				   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: fs/ocfs2/buffer_head_io.c:257:
+				 * uptodate. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#481: FILE: fs/ocfs2/buffer_head_io.c:267:
+		 * completed. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: fs/ocfs2/buffer_head_io.c:274:
+^Imlog(ML_BH_IO, "block=(%llu), nr=(%d), cached=%s, flags=0x%x\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: fs/ocfs2/dir.c:119:
+		 * make sure it's cluster-safe... */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#576: FILE: fs/ocfs2/dir.c:121:
+		if (!last_ra_blk
+		    || (((last_ra_blk - blk) << 9) <= (ra_sectors / 2))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: fs/ocfs2/dlm/dlmast.c:371:
+^I     "name=%.*s, namelen=%u\n", past->type == DLM_AST ? "" : "b", $

WARNING:SPLIT_STRING: quoted string split across lines
#615: FILE: fs/ocfs2/dlm/dlmast.c:371:
+	mlog(0, "got %sast for unknown lock!  cookie=%u:%llu, "
+	     "name=%.*s, namelen=%u\n", past->type == DLM_AST ? "" : "b", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#648: FILE: fs/ocfs2/dlmglue.c:2906:
 	mlog(level, "nlink %u, atime_packed 0x%llx, ctime_packed 0x%llx, "
+	     "mtime_packed 0x%llx iattr 0x%x\n", be16_to_cpu(lvb->lvb_inlink),

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#810: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#815: FILE: fs/ocfs2/ioctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#816: FILE: fs/ocfs2/ioctl.c:2:
+ * linux/fs/ocfs2/ioctl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#839: FILE: fs/ocfs2/ioctl.c:25:
+static int ocfs2_get_inode_attr(struct inode *inode, unsigned *flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#855: FILE: fs/ocfs2/ioctl.c:41:
+static int ocfs2_set_inode_attr(struct inode *inode, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#856: FILE: fs/ocfs2/ioctl.c:42:
+				unsigned mask)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#862: FILE: fs/ocfs2/ioctl.c:48:
+	unsigned oldflags;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#878: FILE: fs/ocfs2/ioctl.c:64:
+	if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#926: FILE: fs/ocfs2/ioctl.c:112:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,
                                                     ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#926: FILE: fs/ocfs2/ioctl.c:112:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#926: FILE: fs/ocfs2/ioctl.c:112:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: fs/ocfs2/ioctl.c:113:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,
+	unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#939: FILE: fs/ocfs2/ioctl.c:125:
+		return put_user(flags, (int __user *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#941: FILE: fs/ocfs2/ioctl.c:127:
+		if (get_user(flags, (int __user *) arg))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#957: FILE: fs/ocfs2/ioctl.h:1:
+/*

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#969: FILE: fs/ocfs2/ioctl.h:13:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,
                                                     ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#969: FILE: fs/ocfs2/ioctl.h:13:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#969: FILE: fs/ocfs2/ioctl.h:13:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: fs/ocfs2/ioctl.h:14:
+int ocfs2_ioctl(struct inode * inode, struct file * filp,
+	unsigned int cmd, unsigned long arg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dir->i_nlink >= OCFS2_LINK_MAX'
#1003: FILE: fs/ocfs2/namei.c:328:
+	if (S_ISDIR(mode) && (dir->i_nlink >= OCFS2_LINK_MAX)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1054: FILE: fs/ocfs2/namei.c:1976:
+			ocfs2_error(dir->i_sb, "reading directory %llu, "
+				    "offset %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: fs/ocfs2/uptodate.c:209:
+ * the block is stored in our inode metadata cache. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: fs/ocfs2/uptodate.c:210:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1122: FILE: fs/ocfs2/uptodate.c:232:
+/* $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 28 warnings, 14 checks, 924 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
