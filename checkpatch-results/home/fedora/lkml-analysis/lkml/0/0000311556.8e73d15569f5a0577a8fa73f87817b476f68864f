WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#32: FILE: include/linux/vlocator.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: include/linux/vlocator.h:13:
+ * controlled way. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#54: FILE: include/linux/vlocator.h:23:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#57: FILE: include/linux/vlocator.h:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#66: FILE: include/linux/vlocator.h:35:
+static __inline__

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#67: FILE: include/linux/vlocator.h:36:
+void vlocator_init (struct vlocator *vlocator)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: include/linux/vlocator.h:38:
+	atomic_set (&vlocator->refcount, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: include/linux/vlocator.h:39:
+	INIT_LIST_HEAD (&vlocator->hash_list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#73: FILE: include/linux/vlocator.h:42:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#76: FILE: include/linux/vlocator.h:45:
+struct vlocator_queue
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#77: FILE: include/linux/vlocator.h:46:
+	spinlock_t lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#79: FILE: include/linux/vlocator.h:48:
+	unsigned additions;

WARNING:INLINE: plain inline is preferred over __inline__
#82: FILE: include/linux/vlocator.h:51:
+static __inline__

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#83: FILE: include/linux/vlocator.h:52:
+void vlocator_queue_init (struct vlocator_queue *vlq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: include/linux/vlocator.h:55:
+	INIT_LIST_HEAD (&vlq->queue);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#95: FILE: include/linux/vlocator.h:64:
+struct vlocator_ops
+{

WARNING:SPACING: Unnecessary space before function pointer name
#96: FILE: include/linux/vlocator.h:65:
+	struct vlocator * (* alloc) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#96: FILE: include/linux/vlocator.h:65:
+	struct vlocator * (* alloc) (void);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#96: FILE: include/linux/vlocator.h:65:
+	struct vlocator * (* alloc) (void);
 	                   ^

WARNING:SPACING: Unnecessary space before function pointer name
#97: FILE: include/linux/vlocator.h:66:
+	void (* create) (struct vlocator *, struct page *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#97: FILE: include/linux/vlocator.h:66:
+	void (* create) (struct vlocator *, struct page *,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#97: FILE: include/linux/vlocator.h:66:
+	void (* create) (struct vlocator *, struct page *,
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vlocator *' should also have an identifier name
#97: FILE: include/linux/vlocator.h:66:
+	void (* create) (struct vlocator *, struct page *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#97: FILE: include/linux/vlocator.h:66:
+	void (* create) (struct vlocator *, struct page *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const union futex_key *' should also have an identifier name
#97: FILE: include/linux/vlocator.h:66:
+	void (* create) (struct vlocator *, struct page *,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#98: FILE: include/linux/vlocator.h:67:
+			 const union futex_key *, unsigned flags);

WARNING:SPACING: Unnecessary space before function pointer name
#99: FILE: include/linux/vlocator.h:68:
+	void (* release) (struct vlocator *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#99: FILE: include/linux/vlocator.h:68:
+	void (* release) (struct vlocator *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#99: FILE: include/linux/vlocator.h:68:
+	void (* release) (struct vlocator *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vlocator *' should also have an identifier name
#99: FILE: include/linux/vlocator.h:68:
+	void (* release) (struct vlocator *);

WARNING:SPACING: Unnecessary space before function pointer name
#100: FILE: include/linux/vlocator.h:69:
+	void (* free) (struct vlocator *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#100: FILE: include/linux/vlocator.h:69:
+	void (* free) (struct vlocator *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#100: FILE: include/linux/vlocator.h:69:
+	void (* free) (struct vlocator *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vlocator *' should also have an identifier name
#100: FILE: include/linux/vlocator.h:69:
+	void (* free) (struct vlocator *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#103: FILE: include/linux/vlocator.h:72:
+
+

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#105: FILE: include/linux/vlocator.h:74:
+#define vl_get(vlocator)			  \
+do { atomic_inc (&(vlocator)->refcount); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: include/linux/vlocator.h:75:
+do { atomic_inc (&(vlocator)->refcount); } while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: include/linux/vlocator.h:77:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#111: FILE: include/linux/vlocator.h:80:
+unsigned vl_put (struct vlocator *vlocator)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: include/linux/vlocator.h:80:
+unsigned vl_put (struct vlocator *vlocator)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: include/linux/vlocator.h:82:
+	return atomic_dec_and_test (&vlocator->refcount);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: include/linux/vlocator.h:85:
+extern int vl_find (struct page **ppage, struct vlocator **pvl,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/vlocator.h:85:
+extern int vl_find (struct page **ppage, struct vlocator **pvl,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#118: FILE: include/linux/vlocator.h:87:
+		    volatile const unsigned __user *uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: include/linux/vlocator.h:88:
+extern int vl_locate (struct page **ppage, struct vlocator **pvl,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/vlocator.h:88:
+extern int vl_locate (struct page **ppage, struct vlocator **pvl,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#121: FILE: include/linux/vlocator.h:90:
+		      volatile const unsigned __user *uaddr, unsigned flags);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#121: FILE: include/linux/vlocator.h:90:
+		      volatile const unsigned __user *uaddr, unsigned flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: include/linux/vlocator.h:91:
+extern int vl_dispose (const struct vlocator_ops *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/vlocator.h:91:
+extern int vl_dispose (const struct vlocator_ops *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct vlocator_ops *' should also have an identifier name
#122: FILE: include/linux/vlocator.h:91:
+extern int vl_dispose (const struct vlocator_ops *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile const unsigned __user *' should also have an identifier name
#122: FILE: include/linux/vlocator.h:91:
+extern int vl_dispose (const struct vlocator_ops *,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#123: FILE: include/linux/vlocator.h:92:
+		       volatile const unsigned __user *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: include/linux/vlocator.h:104:
+int allocated_get (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: include/linux/vlocator.h:106:
+	return atomic_read (&allocated_count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#139: FILE: include/linux/vlocator.h:108:
+}
+static inline

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: include/linux/vlocator.h:109:
+int allocated_inc (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: include/linux/vlocator.h:111:
+	atomic_inc (&allocated_count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#145: FILE: include/linux/vlocator.h:114:
+}
+static inline

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: include/linux/vlocator.h:115:
+int allocated_dec (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: include/linux/vlocator.h:117:
+	atomic_dec (&allocated_count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: include/linux/vlocator.h:121:
+static inline int allocated_get (void) { return 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: include/linux/vlocator.h:122:
+static inline int allocated_inc (void) { return 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: include/linux/vlocator.h:123:
+static inline int allocated_dec (void) { return 0; }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: include/linux/vlocator.h:126:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#163: FILE: kernel/vlocator.c:1:
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#178: FILE: kernel/vlocator.c:16:
+#include <asm/uaccess.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#186: FILE: kernel/vlocator.c:24:
+#define VL_HASH_QUEUES (1 << VL_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: kernel/vlocator.c:26:
+static struct list_head __vl_disposal = LIST_HEAD_INIT (__vl_disposal); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: kernel/vlocator.c:26:
+static struct list_head __vl_disposal = LIST_HEAD_INIT (__vl_disposal); 

WARNING:INLINE: plain inline is preferred over __inline__
#192: FILE: kernel/vlocator.c:30:
+static __inline__

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#193: FILE: kernel/vlocator.c:31:
+struct vlocator_queue * vl_hash (const union futex_key *k)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: kernel/vlocator.c:31:
+struct vlocator_queue * vl_hash (const union futex_key *k)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#195: FILE: kernel/vlocator.c:33:
+	unsigned index = futex_hash_key (k) & (VL_HASH_QUEUES - 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: kernel/vlocator.c:33:
+	unsigned index = futex_hash_key (k) & (VL_HASH_QUEUES - 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: kernel/vlocator.c:34:
+	unsigned index = futex_hash_key (k) & (VL_HASH_QUEUES - 1);
+	return &__vl_hash[index];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#199: FILE: kernel/vlocator.c:37:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#201: FILE: kernel/vlocator.c:39:
+static __inline__

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: kernel/vlocator.c:40:
+struct vlocator * __vlocator_find (struct vlocator_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#202: FILE: kernel/vlocator.c:40:
+struct vlocator * __vlocator_find (struct vlocator_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: kernel/vlocator.c:46:
+	list_for_each (itr, &vlq->queue) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#209: FILE: kernel/vlocator.c:47:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: kernel/vlocator.c:48:
+		if (match_futex_key (key, &vl->key))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#218: FILE: kernel/vlocator.c:56:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: kernel/vlocator.c:59:
+struct vlocator * __vlocator_find_r (struct vlocator_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: kernel/vlocator.c:59:
+struct vlocator * __vlocator_find_r (struct vlocator_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: kernel/vlocator.c:65:
+	list_for_each_prev (itr, &vlq->queue) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: kernel/vlocator.c:66:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: kernel/vlocator.c:67:
+		if (match_futex_key (key, &vl->key))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: kernel/vlocator.c:75:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: kernel/vlocator.c:77:
+ * return true). */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: kernel/vlocator.c:77:
+ * return true). */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INLINE: plain inline is preferred over __inline__
#240: FILE: kernel/vlocator.c:78:
+static __inline__

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#241: FILE: kernel/vlocator.c:79:
+unsigned __vlocator_rem (struct vlocator *v)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: kernel/vlocator.c:79:
+unsigned __vlocator_rem (struct vlocator *v)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#243: FILE: kernel/vlocator.c:81:
+	unsigned result = 0, refcount;

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: kernel/vlocator.c:82:
+	unsigned result = 0, refcount;
+	refcount = atomic_read (&v->refcount);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: kernel/vlocator.c:82:
+	refcount = atomic_read (&v->refcount);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: kernel/vlocator.c:84:
+		list_del (&v->hash_list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: kernel/vlocator.c:90:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: kernel/vlocator.c:91:
+/** Append @vlocator to queue @vlq. */ $

WARNING:INLINE: plain inline is preferred over __inline__
#254: FILE: kernel/vlocator.c:92:
+static __inline__

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: kernel/vlocator.c:93:
+void __vlocator_add (struct vlocator_queue *vlq, struct vlocator *v)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: kernel/vlocator.c:96:
+	list_add (&v->hash_list, &vlq->queue);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: kernel/vlocator.c:99:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: kernel/vlocator.c:106:
+ * good invention this GPL thingie :)  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#270: FILE: kernel/vlocator.c:108:
+int vl_setup (struct page **ppage, union futex_key *key,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#271: FILE: kernel/vlocator.c:109:
+	      volatile const unsigned __user *_uaddr)

CHECK:SPACING: No space is necessary after a cast
#275: FILE: kernel/vlocator.c:113:
+	unsigned long uaddr = (unsigned long) _uaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: kernel/vlocator.c:116:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: kernel/vlocator.c:117:
+	ftrace ("(%p, %p, %p)\n", ppage, key, _uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: kernel/vlocator.c:121:
+	if (unlikely ((key->both.offset % sizeof (u32)) != 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: kernel/vlocator.c:121:
+	if (unlikely ((key->both.offset % sizeof (u32)) != 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: kernel/vlocator.c:124:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: kernel/vlocator.c:126:
+	down_read (&mm->mmap_sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: kernel/vlocator.c:131:
+	vma = find_extend_vma (mm, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: kernel/vlocator.c:133:
+	if (unlikely (!vma))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vma'
#295: FILE: kernel/vlocator.c:133:
+	if (unlikely (!vma))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: kernel/vlocator.c:137:
+	if (unlikely ((vma->vm_flags & (VM_IO|VM_READ)) != VM_READ))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#299: FILE: kernel/vlocator.c:137:
+	if (unlikely ((vma->vm_flags & (VM_IO|VM_READ)) != VM_READ))
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: kernel/vlocator.c:149:
+	if (likely (!(vma->vm_flags & VM_MAYSHARE))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: kernel/vlocator.c:157:
+	if (likely (!(vma->vm_flags & VM_NONLINEAR))) {

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#340: FILE: kernel/vlocator.c:178:
+out_pin:
        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: kernel/vlocator.c:179:
+	spin_lock (&mm->page_table_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#342: FILE: kernel/vlocator.c:180:
+	page = follow_page (mm, uaddr, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: kernel/vlocator.c:181:
+	if (likely (page != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page != NULL'
#343: FILE: kernel/vlocator.c:181:
+	if (likely (page != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#343: FILE: kernel/vlocator.c:181:
+	if (likely (page != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: kernel/vlocator.c:184:
+		if (!PageReserved (page))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#347: FILE: kernel/vlocator.c:185:
+			get_page (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: kernel/vlocator.c:186:
+		spin_unlock (&mm->page_table_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: kernel/vlocator.c:189:
+	spin_unlock (&mm->page_table_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#356: FILE: kernel/vlocator.c:194:
+	result = get_user_pages (current, mm, uaddr, 1, 0, 0, &page, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: kernel/vlocator.c:199:
+	get_key_refs (key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: kernel/vlocator.c:202:
+	up_read (&current->mm->mmap_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#368: FILE: kernel/vlocator.c:206:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: kernel/vlocator.c:223:
+int vl_find (struct page **ppage, struct vlocator **pvl,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#387: FILE: kernel/vlocator.c:225:
+	     volatile const unsigned __user *uaddr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#394: FILE: kernel/vlocator.c:232:
+	unsigned need_page = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: kernel/vlocator.c:233:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: kernel/vlocator.c:234:
+	ftrace ("(%p, %p, %p, %p)\n", ppage, pvl, ops, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: kernel/vlocator.c:236:
+	result = vl_setup (&page, &key, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: kernel/vlocator.c:240:
+	vlq = vl_hash (&key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: kernel/vlocator.c:241:
+	spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: kernel/vlocator.c:242:
+	vl = __vlocator_find (vlq, &key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: kernel/vlocator.c:243:
+	if (likely (vl == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl == NULL'
#405: FILE: kernel/vlocator.c:243:
+	if (likely (vl == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vl"
#405: FILE: kernel/vlocator.c:243:
+	if (likely (vl == NULL))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#409: FILE: kernel/vlocator.c:247:
+	if (unlikely (vl->ops != ops))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl->ops != ops'
#409: FILE: kernel/vlocator.c:247:
+	if (unlikely (vl->ops != ops))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: kernel/vlocator.c:250:
+	vl_get (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: kernel/vlocator.c:257:
+	spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: kernel/vlocator.c:258:
+	drop_key_refs (&key);	     // Undo from ...

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#422: FILE: kernel/vlocator.c:260:
+		put_page (page);   // ... ufu_setup() (maybe)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#427: FILE: kernel/vlocator.c:265:
+
+

WARNING:TYPO_SPELLING: 'droped' may be misspelled - perhaps 'dropped'?
#447: FILE: kernel/vlocator.c:285:
+ * count. If we see the count changed after we droped the lock,
                                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: kernel/vlocator.c:289:
+int vl_locate (struct page **ppage, struct vlocator **pvl,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: kernel/vlocator.c:291:
+	       volatile const unsigned __user *uaddr, unsigned flags)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#453: FILE: kernel/vlocator.c:291:
+	       volatile const unsigned __user *uaddr, unsigned flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#460: FILE: kernel/vlocator.c:298:
+	unsigned need_page = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: kernel/vlocator.c:299:
+	unsigned additions0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: kernel/vlocator.c:300:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: kernel/vlocator.c:301:
+	ftrace ("(%p, %p, %p, %p, %x)\n", ppage, pvl, ops, uaddr, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: kernel/vlocator.c:303:
+	result = vl_setup (&page, &key, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#469: FILE: kernel/vlocator.c:307:
+	vlq = vl_hash (&key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: kernel/vlocator.c:308:
+	spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: kernel/vlocator.c:309:
+	vl = __vlocator_find (vlq, &key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#472: FILE: kernel/vlocator.c:310:
+	if (likely (vl != NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl != NULL'
#472: FILE: kernel/vlocator.c:310:
+	if (likely (vl != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vl"
#472: FILE: kernel/vlocator.c:310:
+	if (likely (vl != NULL))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: kernel/vlocator.c:313:
+	spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#480: FILE: kernel/vlocator.c:318:
+	if (unlikely (vl == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl == NULL'
#480: FILE: kernel/vlocator.c:318:
+	if (unlikely (vl == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vl"
#480: FILE: kernel/vlocator.c:318:
+	if (unlikely (vl == NULL))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: kernel/vlocator.c:319:
+^I^Igoto error_alloc;^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: kernel/vlocator.c:321:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#487: FILE: kernel/vlocator.c:325:
+	 * allocations wrapping up the counter in the middle *grin*]. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: kernel/vlocator.c:326:
+	spin_lock (&vlq->lock);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#489: FILE: kernel/vlocator.c:327:
+	if (additions0 == vlq->additions

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#490: FILE: kernel/vlocator.c:328:
+	if (additions0 == vlq->additions
+	    || (vl_alt = __vlocator_find_r (vlq, &key)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#490: FILE: kernel/vlocator.c:328:
+	    || (vl_alt = __vlocator_find_r (vlq, &key)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: kernel/vlocator.c:329:
+		ops->create (vl, page, &key, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#493: FILE: kernel/vlocator.c:331:
+		__vlocator_add (vlq, vl);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: kernel/vlocator.c:334:
+^I/* Allocation collision, get the new one, discard ours */  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#497: FILE: kernel/vlocator.c:335:
+	ops->free (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: kernel/vlocator.c:339:
+	if (unlikely (vl->ops != ops))  /* Check the type is correct */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl->ops != ops'
#501: FILE: kernel/vlocator.c:339:
+	if (unlikely (vl->ops != ops))  /* Check the type is correct */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: kernel/vlocator.c:343:
+	vl_get (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#512: FILE: kernel/vlocator.c:350:
+	spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#514: FILE: kernel/vlocator.c:352:
+	drop_key_refs (&key);	     // Undo from ...

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: kernel/vlocator.c:354:
+		put_page (page);   // ... ufu_setup() (maybe)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#521: FILE: kernel/vlocator.c:359:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: kernel/vlocator.c:365:
+ * rid of it). $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: kernel/vlocator.c:367:
+int vl_dispose (const struct vlocator_ops *vops,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#530: FILE: kernel/vlocator.c:368:
+		volatile const unsigned __user *uaddr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: kernel/vlocator.c:375:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#538: FILE: kernel/vlocator.c:376:
+	result = vl_setup (&page, &key, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: kernel/vlocator.c:379:
+	vlq = vl_hash (&key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#542: FILE: kernel/vlocator.c:380:
+	spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: kernel/vlocator.c:381:
+	vl = __vlocator_find (vlq, &key);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vl"
#544: FILE: kernel/vlocator.c:382:
+	if (vl == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#548: FILE: kernel/vlocator.c:386:
+	list_del (&vl->hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: kernel/vlocator.c:387:
+	spin_lock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#550: FILE: kernel/vlocator.c:388:
+	list_add_tail (&vl->hash_list, &__vl_disposal);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#551: FILE: kernel/vlocator.c:389:
+	spin_unlock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: kernel/vlocator.c:391:
+	spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: kernel/vlocator.c:392:
+	put_page (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: kernel/vlocator.c:393:
+	drop_key_refs (&key);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#560: FILE: kernel/vlocator.c:398:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: kernel/vlocator.c:400:
+static void vl_garbage_collector (void *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#565: FILE: kernel/vlocator.c:403:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: kernel/vlocator.c:405:
+ * Do garbage collection (called from the work-queue) and re-arm $

WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#572: FILE: kernel/vlocator.c:410:
+ * suport robustness; kernel based fulocks have to do robustness
    ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: kernel/vlocator.c:411:
+ * always. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: kernel/vlocator.c:415:
+void __vl_garbage_collect (struct list_head *list)

WARNING:LINE_SPACING: Missing a blank line after declarations
#581: FILE: kernel/vlocator.c:419:
+	struct vlocator *vl;
+	list_for_each_safe (itr, nxt, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#581: FILE: kernel/vlocator.c:419:
+	list_for_each_safe (itr, nxt, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#582: FILE: kernel/vlocator.c:420:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: kernel/vlocator.c:421:
+		if (__vlocator_rem (vl)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: kernel/vlocator.c:422:
+			vl->ops->release (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#585: FILE: kernel/vlocator.c:423:
+			vl->ops->free (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: kernel/vlocator.c:429:
+void vl_garbage_collector (void *dummy)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#593: FILE: kernel/vlocator.c:431:
+	unsigned cnt;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: kernel/vlocator.c:433:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: kernel/vlocator.c:437:
+		if (list_empty (&vlq->queue)) /* Some cheating always helps... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&vlq->queue'
#599: FILE: kernel/vlocator.c:437:
+		if (list_empty (&vlq->queue)) /* Some cheating always helps... */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#601: FILE: kernel/vlocator.c:439:
+		spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: kernel/vlocator.c:440:
+		__vl_garbage_collect (&vlq->queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: kernel/vlocator.c:441:
+		spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#606: FILE: kernel/vlocator.c:444:
+	spin_lock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: kernel/vlocator.c:445:
+	__vl_garbage_collect (&__vl_disposal);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#608: FILE: kernel/vlocator.c:446:
+	spin_unlock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: kernel/vlocator.c:448:
+	schedule_delayed_work (&vl_workqueue, VL_GC_PERIOD * HZ);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#613: FILE: kernel/vlocator.c:451:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: kernel/vlocator.c:454:
+int __init subsys_ufu_init (void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#618: FILE: kernel/vlocator.c:456:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#619: FILE: kernel/vlocator.c:457:
+	unsigned i;
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(__vl_hash)
#619: FILE: kernel/vlocator.c:457:
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#619: FILE: kernel/vlocator.c:457:
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#619: FILE: kernel/vlocator.c:457:
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#620: FILE: kernel/vlocator.c:458:
+		vlocator_queue_init (&__vl_hash[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#622: FILE: kernel/vlocator.c:460:
+	schedule_delayed_work (&vl_workqueue, VL_GC_PERIOD * HZ);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: kernel/vlocator.c:463:
+__initcall (subsys_ufu_init);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#625: FILE: kernel/vlocator.c:463:
+__initcall (subsys_ufu_init);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#627: FILE: kernel/vlocator.c:465:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 177 warnings, 40 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311556.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
