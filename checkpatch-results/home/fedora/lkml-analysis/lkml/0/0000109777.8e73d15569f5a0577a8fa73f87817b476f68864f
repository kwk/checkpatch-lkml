WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#38: FILE: drivers/leds/Kconfig:4:
+config NEW_LEDS
+	bool "LED Support"
+	help
+	  Say Y to enable Linux LED support.  This is not related to standard
+	  keyboard LEDs which are controlled via the input system.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: drivers/leds/Kconfig:10:
+config LEDS_CLASS
+	tristate "LED Class Support"
+	depends NEW_LEDS
+	help
+	  This option enables the led sysfs class in /sys/class/leds.  You'll
+	  need this to do anything useful with LEDs.  If unsure, say N.
+
+endmenu
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: include/linux/leds.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#95: FILE: include/linux/leds.h:29:
+#define LED_SUSPENDED       (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/leds.h:45:
+extern int led_device_register(struct device *dev, struct led_device *led_dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/leds.h:46:
+extern void led_device_unregister(struct led_device *led_dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/linux/leds.h:47:
+extern void led_device_suspend(struct led_device *led_dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/leds.h:48:
+extern void led_device_resume(struct led_device *led_dev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#158: FILE: drivers/leds/leds.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: drivers/leds/led-class.c:1:
+/*

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#233: FILE: drivers/leds/led-class.c:45:
+	unsigned long state = simple_strtoul(buf, &after, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/leds/led-class.c:46:
+	unsigned long state = simple_strtoul(buf, &after, 10);
+	if (after - buf > 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: drivers/leds/led-class.c:58:
+
+

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#279: FILE: drivers/leds/led-class.c:91:
+	if (unlikely(IS_ERR(led_dev->class_dev)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#293: FILE: drivers/leds/led-class.c:105:
+	printk(KERN_INFO "Registered led device: %s\n", led_dev->class_dev->class_id);

WARNING:TYPO_SPELLING: 'unreigister' may be misspelled - perhaps 'unregister'?
#300: FILE: drivers/leds/led-class.c:112:
+ * @led_dev: the led device to unreigister
                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#315: FILE: drivers/leds/led-class.c:127:
+EXPORT_SYMBOL_GPL(led_device_suspend);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#316: FILE: drivers/leds/led-class.c:128:
+EXPORT_SYMBOL_GPL(led_device_resume);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#317: FILE: drivers/leds/led-class.c:129:
+EXPORT_SYMBOL_GPL(led_device_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#318: FILE: drivers/leds/led-class.c:130:
+EXPORT_SYMBOL_GPL(led_device_unregister);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#344: FILE: drivers/leds/led-core.c:1:
+/*

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#367: FILE: drivers/leds/led-core.c:24:
+EXPORT_SYMBOL_GPL(leds_list);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109777.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 16 warnings, 6 checks, 293 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109777.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
