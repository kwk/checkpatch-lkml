WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
feature is present starting from Intel Core Duo and Intel Core Solo processors.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#64: FILE: arch/i386/kernel/cpu/intel.c:125:
+	if (c->cpuid_level > 9 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#65: FILE: arch/i386/kernel/cpu/intel.c:126:
+		unsigned eax = cpuid_eax(10);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#67: FILE: arch/i386/kernel/cpu/intel.c:128:
+		if ((eax & 0xff) && (((eax>>8) & 0xff) > 1))
 		                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/i386/kernel/nmi.c:286:
+^I ^Iif (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0 &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: arch/i386/kernel/nmi.c:286:
+^I ^Iif (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0 &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: arch/i386/kernel/nmi.c:287:
+	 	if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0 &&
+			((u64)cpu_khz * 1000) > 0x7fffffffULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: arch/i386/kernel/nmi.c:289:
+			u64 count = (u64)cpu_khz * 1000;
+			do_div(count, 0x7fffffffUL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eax.full
#164: FILE: arch/i386/kernel/nmi.c:679:
+	cpuid(10, &(eax.full), &ebx, &unused, &unused);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#165: FILE: arch/i386/kernel/nmi.c:680:
+	if ((eax.split.mask_length < (ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX+1)) ||
 	                                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eax.full
#216: FILE: arch/i386/kernel/nmi.c:731:
+	cpuid(10, &(eax.full), &ebx, &unused, &unused);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#217: FILE: arch/i386/kernel/nmi.c:732:
+	if ((eax.split.mask_length < (ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX+1)) ||
 	                                                                     ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#258: FILE: arch/i386/kernel/nmi.c:928:
 	 		}
+			else if (wd->perfctr_msr == MSR_P6_PERFCTR0 ||

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#264: FILE: arch/i386/kernel/nmi.c:933:
+				 * ArchPerfom/Core Duo also needs this */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: arch/x86_64/kernel/nmi.c:272:
+^I ^Iif (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: arch/x86_64/kernel/nmi.c:272:
+^I ^Iif (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0 &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: arch/x86_64/kernel/nmi.c:273:
+	 	if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0 &&
+			((u64)cpu_khz * 1000) > 0x7fffffffULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eax.full
#361: FILE: arch/x86_64/kernel/nmi.c:604:
+	cpuid(10, &(eax.full), &ebx, &unused, &unused);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#362: FILE: arch/x86_64/kernel/nmi.c:605:
+	if ((eax.split.mask_length < (ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX+1)) ||
 	                                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around eax.full
#414: FILE: arch/x86_64/kernel/nmi.c:657:
+	cpuid(10, &(eax.full), &ebx, &unused, &unused);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#415: FILE: arch/x86_64/kernel/nmi.c:658:
+	if ((eax.split.mask_length < (ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX+1)) ||
 	                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: arch/x86_64/kernel/nmi.c:822:
+^I ^I^I} else if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: arch/x86_64/kernel/nmi.c:822:
+^I ^I^I} else if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR0) {$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#464: FILE: arch/x86_64/kernel/nmi.c:829:
			wrmsrl(wd->perfctr_msr, -((u64)cpu_khz * 1000 / nmi_hz));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#476: FILE: arch/x86_64/kernel/nmi.c:1000:
+	if (c->cpuid_level > 9 ) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#477: FILE: arch/x86_64/kernel/nmi.c:1001:
+		unsigned eax = cpuid_eax(10);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#479: FILE: arch/x86_64/kernel/nmi.c:1003:
+		if ((eax & 0xff) && (((eax>>8) & 0xff) > 1))
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#494: FILE: include/asm-i386/cpufeature.h:75:
+#define X86_FEATURE_ARCH_PERFMON (3*32+11) /* Intel Architectural PerfMon */
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#494: FILE: include/asm-i386/cpufeature.h:75:
+#define X86_FEATURE_ARCH_PERFMON (3*32+11) /* Intel Architectural PerfMon */
                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#503: FILE: include/asm-i386/intel_arch_perfmon.h:1:
+#ifndef X86_INTEL_ARCH_PERFMON_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#512: FILE: include/asm-i386/intel_arch_perfmon.h:10:
+#define ARCH_PERFMON_EVENTSEL0_ENABLE      (1 << 22)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#513: FILE: include/asm-i386/intel_arch_perfmon.h:11:
+#define ARCH_PERFMON_EVENTSEL_INT          (1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#514: FILE: include/asm-i386/intel_arch_perfmon.h:12:
+#define ARCH_PERFMON_EVENTSEL_OS           (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#515: FILE: include/asm-i386/intel_arch_perfmon.h:13:
+#define ARCH_PERFMON_EVENTSEL_USR          (1 << 16)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#542: FILE: include/asm-x86_64/cpufeature.h:69:
+#define X86_FEATURE_ARCH_PERFMON (3*32+9) /* Intel Architectural PerfMon */
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#542: FILE: include/asm-x86_64/cpufeature.h:69:
+#define X86_FEATURE_ARCH_PERFMON (3*32+9) /* Intel Architectural PerfMon */
                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#551: FILE: include/asm-x86_64/intel_arch_perfmon.h:1:
+#ifndef X86_64_INTEL_ARCH_PERFMON_H

CHECK:BIT_MACRO: Prefer using the BIT macro
#560: FILE: include/asm-x86_64/intel_arch_perfmon.h:10:
+#define ARCH_PERFMON_EVENTSEL0_ENABLE      (1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#561: FILE: include/asm-x86_64/intel_arch_perfmon.h:11:
+#define ARCH_PERFMON_EVENTSEL_INT          (1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#562: FILE: include/asm-x86_64/intel_arch_perfmon.h:12:
+#define ARCH_PERFMON_EVENTSEL_OS           (1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#563: FILE: include/asm-x86_64/intel_arch_perfmon.h:13:
+#define ARCH_PERFMON_EVENTSEL_USR          (1 << 16)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074369.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 24 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000074369.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
