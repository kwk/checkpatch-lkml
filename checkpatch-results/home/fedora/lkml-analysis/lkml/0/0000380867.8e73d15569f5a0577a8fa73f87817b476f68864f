WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
 include/linux/i2c-proc.h    |  373 --------------------------------------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/drivers/i2c/Kconfig	Wed Apr  2 16:00:46 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#350: FILE: drivers/i2c/i2c-sensor.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#351: FILE: drivers/i2c/i2c-sensor.c:2:
+/*
+    i2c-sensor.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/i2c/i2c-sensor.c:3:
+                monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#367: FILE: drivers/i2c/i2c-sensor.c:18:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#368: FILE: drivers/i2c/i2c-sensor.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#382: FILE: drivers/i2c/i2c-sensor.c:33:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#384: FILE: drivers/i2c/i2c-sensor.c:35:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/i2c/i2c-sensor.c:38:
+int i2c_detect(struct i2c_adapter *adapter,
+		   struct i2c_address_data *address_data,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/i2c/i2c-sensor.c:39:
+		   i2c_found_addr_proc * found_proc)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!is_isa'
#397: FILE: drivers/i2c/i2c-sensor.c:48:
+	if ((!is_isa) &&
+	    !i2c_check_functionality(adapter, I2C_FUNC_SMBUS_QUICK))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#408: FILE: drivers/i2c/i2c-sensor.c:59:
+		/* If it is in one of the force entries, we don't do any
+		   detection at all */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: drivers/i2c/i2c-sensor.c:59:
+		   detection at all */

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#410: FILE: drivers/i2c/i2c-sensor.c:61:
+		for (i = 0; !found && (this_force = address_data->forces + i, this_force->force); i++) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#412: FILE: drivers/i2c/i2c-sensor.c:63:
+				if ( ((adapter_id == this_force->force[j]) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_id == this_force->force[j]'
#412: FILE: drivers/i2c/i2c-sensor.c:63:
+				if ( ((adapter_id == this_force->force[j]) ||
+				      ((this_force->force[j] == SENSORS_ANY_I2C_BUS) && !is_isa)) &&
+				      (addr == this_force->force[j + 1]) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'this_force->force[j] == SENSORS_ANY_I2C_BUS'
#412: FILE: drivers/i2c/i2c-sensor.c:63:
+				if ( ((adapter_id == this_force->force[j]) ||
+				      ((this_force->force[j] == SENSORS_ANY_I2C_BUS) && !is_isa)) &&
+				      (addr == this_force->force[j + 1]) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == this_force->force[j + 1]'
#412: FILE: drivers/i2c/i2c-sensor.c:63:
+				if ( ((adapter_id == this_force->force[j]) ||
+				      ((this_force->force[j] == SENSORS_ANY_I2C_BUS) && !is_isa)) &&
+				      (addr == this_force->force[j + 1]) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#414: FILE: drivers/i2c/i2c-sensor.c:65:
+				      (addr == this_force->force[j + 1]) ) {

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#415: FILE: drivers/i2c/i2c-sensor.c:66:
+					dev_dbg(&adapter->dev, "found force parameter for adapter %d, addr %04x\n", adapter_id, addr);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#416: FILE: drivers/i2c/i2c-sensor.c:67:
+					if ((err = found_proc(adapter, addr, this_force->kind)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#426: FILE: drivers/i2c/i2c-sensor.c:77:
+		/* If this address is in one of the ignores, we can forget about it
+		   right now */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#426: FILE: drivers/i2c/i2c-sensor.c:77:
+		   right now */

ERROR:SPACING: space prohibited after that open parenthesis '('
#428: FILE: drivers/i2c/i2c-sensor.c:79:
+			if ( ((adapter_id == address_data->ignore[i]) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_id == address_data->ignore[i]'
#428: FILE: drivers/i2c/i2c-sensor.c:79:
+			if ( ((adapter_id == address_data->ignore[i]) ||
+			      ((address_data->ignore[i] == SENSORS_ANY_I2C_BUS) &&
+			       !is_isa)) &&
+			      (addr == address_data->ignore[i + 1])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address_data->ignore[i] == SENSORS_ANY_I2C_BUS'
#428: FILE: drivers/i2c/i2c-sensor.c:79:
+			if ( ((adapter_id == address_data->ignore[i]) ||
+			      ((address_data->ignore[i] == SENSORS_ANY_I2C_BUS) &&
+			       !is_isa)) &&
+			      (addr == address_data->ignore[i + 1])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == address_data->ignore[i + 1]'
#428: FILE: drivers/i2c/i2c-sensor.c:79:
+			if ( ((adapter_id == address_data->ignore[i]) ||
+			      ((address_data->ignore[i] == SENSORS_ANY_I2C_BUS) &&
+			       !is_isa)) &&
+			      (addr == address_data->ignore[i + 1])) {

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#432: FILE: drivers/i2c/i2c-sensor.c:83:
+				dev_dbg(&adapter->dev, "found ignore parameter for adapter %d, addr %04x\n", adapter_id, addr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#437: FILE: drivers/i2c/i2c-sensor.c:88:
+			if ( ((adapter_id == address_data->ignore_range[i]) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_id == address_data->ignore_range[i]'
#437: FILE: drivers/i2c/i2c-sensor.c:88:
+			if ( ((adapter_id == address_data->ignore_range[i]) ||
+			      ((address_data-> ignore_range[i] == SENSORS_ANY_I2C_BUS) & 
+			       !is_isa)) &&
+			     (addr >= address_data->ignore_range[i + 1]) &&
+			     (addr <= address_data->ignore_range[i + 2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= address_data->ignore_range[i + 1]'
#437: FILE: drivers/i2c/i2c-sensor.c:88:
+			if ( ((adapter_id == address_data->ignore_range[i]) ||
+			      ((address_data-> ignore_range[i] == SENSORS_ANY_I2C_BUS) & 
+			       !is_isa)) &&
+			     (addr >= address_data->ignore_range[i + 1]) &&
+			     (addr <= address_data->ignore_range[i + 2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= address_data->ignore_range[i + 2]'
#437: FILE: drivers/i2c/i2c-sensor.c:88:
+			if ( ((adapter_id == address_data->ignore_range[i]) ||
+			      ((address_data-> ignore_range[i] == SENSORS_ANY_I2C_BUS) & 
+			       !is_isa)) &&
+			     (addr >= address_data->ignore_range[i + 1]) &&
+			     (addr <= address_data->ignore_range[i + 2])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/i2c/i2c-sensor.c:89:
+^I^I^I      ((address_data-> ignore_range[i] == SENSORS_ANY_I2C_BUS) & $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#438: FILE: drivers/i2c/i2c-sensor.c:89:
+			      ((address_data-> ignore_range[i] == SENSORS_ANY_I2C_BUS) & 
 			                    ^

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#442: FILE: drivers/i2c/i2c-sensor.c:93:
+				dev_dbg(&adapter->dev,  "found ignore_range parameter for adapter %d, addr %04x\n", adapter_id, addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: drivers/i2c/i2c-sensor.c:100:
+^I^I/* Now, we will do a detection, but only if it is in the normal or $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#450: FILE: drivers/i2c/i2c-sensor.c:101:
+		/* Now, we will do a detection, but only if it is in the normal or 
+		   probe entries */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#450: FILE: drivers/i2c/i2c-sensor.c:101:
+		   probe entries */

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#452: FILE: drivers/i2c/i2c-sensor.c:103:
+			for (i = 0; !found && (address_data->normal_isa[i] != SENSORS_ISA_END); i += 1) {

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#454: FILE: drivers/i2c/i2c-sensor.c:105:
+					dev_dbg(&adapter->dev, "found normal isa entry for adapter %d, addr %04x\n", adapter_id, addr);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#458: FILE: drivers/i2c/i2c-sensor.c:109:
+			for (i = 0; !found && (address_data->normal_isa_range[i] != SENSORS_ISA_END); i += 3) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= address_data->normal_isa_range[i]'
#459: FILE: drivers/i2c/i2c-sensor.c:110:
+				if ((addr >= address_data->normal_isa_range[i]) &&
+				    (addr <= address_data->normal_isa_range[i + 1]) &&
+				    ((addr - address_data->normal_isa_range[i]) % address_data->normal_isa_range[i + 2] == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= address_data->normal_isa_range[i + 1]'
#459: FILE: drivers/i2c/i2c-sensor.c:110:
+				if ((addr >= address_data->normal_isa_range[i]) &&
+				    (addr <= address_data->normal_isa_range[i + 1]) &&
+				    ((addr - address_data->normal_isa_range[i]) % address_data->normal_isa_range[i + 2] == 0)) {

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#461: FILE: drivers/i2c/i2c-sensor.c:112:
+				    ((addr - address_data->normal_isa_range[i]) % address_data->normal_isa_range[i + 2] == 0)) {

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#462: FILE: drivers/i2c/i2c-sensor.c:113:
+					dev_dbg(&adapter->dev, "found normal isa_range entry for adapter %d, addr %04x", adapter_id, addr);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#467: FILE: drivers/i2c/i2c-sensor.c:118:
+			for (i = 0; !found && (address_data->normal_i2c[i] != SENSORS_I2C_END); i += 1) {

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#470: FILE: drivers/i2c/i2c-sensor.c:121:
+					dev_dbg(&adapter->dev, "found normal i2c entry for adapter %d, addr %02x", adapter_id, addr);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#473: FILE: drivers/i2c/i2c-sensor.c:124:
+			for (i = 0; !found && (address_data->normal_i2c_range[i] != SENSORS_I2C_END); i += 2) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= address_data->normal_i2c_range[i]'
#474: FILE: drivers/i2c/i2c-sensor.c:125:
+				if ((addr >= address_data->normal_i2c_range[i]) &&
+				    (addr <= address_data->normal_i2c_range[i + 1])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= address_data->normal_i2c_range[i + 1]'
#474: FILE: drivers/i2c/i2c-sensor.c:125:
+				if ((addr >= address_data->normal_i2c_range[i]) &&
+				    (addr <= address_data->normal_i2c_range[i + 1])) {

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#476: FILE: drivers/i2c/i2c-sensor.c:127:
+					dev_dbg(&adapter->dev, "found normal i2c_range entry for adapter %d, addr %04x\n", adapter_id, addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_id == address_data->probe[i]'
#485: FILE: drivers/i2c/i2c-sensor.c:136:
+			if (((adapter_id == address_data->probe[i]) ||
+			     ((address_data->
+			       probe[i] == SENSORS_ANY_I2C_BUS) & !is_isa))
+			    && (addr == address_data->probe[i + 1])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == address_data->probe[i + 1]'
#485: FILE: drivers/i2c/i2c-sensor.c:136:
+			if (((adapter_id == address_data->probe[i]) ||
+			     ((address_data->
+			       probe[i] == SENSORS_ANY_I2C_BUS) & !is_isa))
+			    && (addr == address_data->probe[i + 1])) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'address_data->probe[i]'
#487: FILE: drivers/i2c/i2c-sensor.c:138:
+			     ((address_data->
+			       probe[i] == SENSORS_ANY_I2C_BUS) & !is_isa))

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#488: FILE: drivers/i2c/i2c-sensor.c:139:
+			       probe[i] == SENSORS_ANY_I2C_BUS) & !is_isa))
+			    && (addr == address_data->probe[i + 1])) {

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#489: FILE: drivers/i2c/i2c-sensor.c:140:
+				dev_dbg(&adapter->dev, "found probe parameter for adapter %d, addr %04x\n", adapter_id, addr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#494: FILE: drivers/i2c/i2c-sensor.c:145:
+			if ( ((adapter_id == address_data->probe_range[i]) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_id == address_data->probe_range[i]'
#494: FILE: drivers/i2c/i2c-sensor.c:145:
+			if ( ((adapter_id == address_data->probe_range[i]) ||
+			      ((address_data->probe_range[i] == SENSORS_ANY_I2C_BUS) & !is_isa)) &&
+			     (addr >= address_data->probe_range[i + 1]) &&
+			     (addr <= address_data->probe_range[i + 2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address_data->probe_range[i] == SENSORS_ANY_I2C_BUS'
#494: FILE: drivers/i2c/i2c-sensor.c:145:
+			if ( ((adapter_id == address_data->probe_range[i]) ||
+			      ((address_data->probe_range[i] == SENSORS_ANY_I2C_BUS) & !is_isa)) &&
+			     (addr >= address_data->probe_range[i + 1]) &&
+			     (addr <= address_data->probe_range[i + 2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= address_data->probe_range[i + 1]'
#494: FILE: drivers/i2c/i2c-sensor.c:145:
+			if ( ((adapter_id == address_data->probe_range[i]) ||
+			      ((address_data->probe_range[i] == SENSORS_ANY_I2C_BUS) & !is_isa)) &&
+			     (addr >= address_data->probe_range[i + 1]) &&
+			     (addr <= address_data->probe_range[i + 2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr <= address_data->probe_range[i + 2]'
#494: FILE: drivers/i2c/i2c-sensor.c:145:
+			if ( ((adapter_id == address_data->probe_range[i]) ||
+			      ((address_data->probe_range[i] == SENSORS_ANY_I2C_BUS) & !is_isa)) &&
+			     (addr >= address_data->probe_range[i + 1]) &&
+			     (addr <= address_data->probe_range[i + 2])) {

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#499: FILE: drivers/i2c/i2c-sensor.c:150:
+				dev_dbg(&adapter->dev, "found probe_range parameter for adapter %d, addr %04x\n", adapter_id, addr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#506: FILE: drivers/i2c/i2c-sensor.c:157:
+		/* OK, so we really should examine this address. First check
+		   whether there is some client here at all! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#506: FILE: drivers/i2c/i2c-sensor.c:157:
+		   whether there is some client here at all! */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#508: FILE: drivers/i2c/i2c-sensor.c:159:
+		    (i2c_smbus_xfer (adapter, addr, 0, 0, 0, I2C_SMBUS_QUICK, NULL) >= 0))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#509: FILE: drivers/i2c/i2c-sensor.c:160:
+			if ((err = found_proc(adapter, addr, -1)))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#524: FILE: drivers/i2c/i2c-sensor.c:175:
+EXPORT_SYMBOL(i2c_detect);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#913: FILE: include/linux/i2c-sensor.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#914: FILE: include/linux/i2c-sensor.h:2:
+/*
+    i2c-sensor.h - Part of the i2c package

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: include/linux/i2c-sensor.h:4:
+                               for hardware monitoring$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#930: FILE: include/linux/i2c-sensor.h:18:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#931: FILE: include/linux/i2c-sensor.h:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#940: FILE: include/linux/i2c-sensor.h:28:
+typedef void (*i2c_real_callback) (struct i2c_client * client,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#950: FILE: include/linux/i2c-sensor.h:38:
+/* A structure containing detect information.
+   Force variables overrule all other variables; they force a detection on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: include/linux/i2c-sensor.h:46:
+     the ISA bus, -1 for any I2C bus), the second is the address. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#967: FILE: include/linux/i2c-sensor.h:55:
+/* A structure containing the detect information.
+   normal_i2c: filled in by the module writer. Terminated by SENSORS_I2C_END.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#969: FILE: include/linux/i2c-sensor.h:57:
+   normal_i2c_range: filled in by the module writer. Terminated by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: include/linux/i2c-sensor.h:63:
+   normal_isa_range: filled in by the module writer. Terminated by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: include/linux/i2c-sensor.h:73:
+   probe_range: insmod parameter. Initialize this list with SENSORS_I2C_END $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: include/linux/i2c-sensor.h:76:
+     the ISA bus, -1 for any I2C bus), the second and third are addresses. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#994: FILE: include/linux/i2c-sensor.h:82:
+     addresses are never probed. This parameter overrules 'normal' and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#996: FILE: include/linux/i2c-sensor.h:84:
+   ignore_range: insmod parameter. Initialize this list with SENSORS_I2C_END $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#999: FILE: include/linux/i2c-sensor.h:87:
+     the ISA bus, -1 for any I2C bus), the second and third are addresses. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1030: FILE: include/linux/i2c-sensor.h:118:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: include/linux/i2c-sensor.h:118:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1031: FILE: include/linux/i2c-sensor.h:119:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: include/linux/i2c-sensor.h:119:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: include/linux/i2c-sensor.h:120:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: include/linux/i2c-sensor.h:120:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: include/linux/i2c-sensor.h:121:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: include/linux/i2c-sensor.h:121:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1034: FILE: include/linux/i2c-sensor.h:122:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: include/linux/i2c-sensor.h:122:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1035: FILE: include/linux/i2c-sensor.h:123:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: include/linux/i2c-sensor.h:123:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1036: FILE: include/linux/i2c-sensor.h:124:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: include/linux/i2c-sensor.h:124:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: include/linux/i2c-sensor.h:125:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: include/linux/i2c-sensor.h:125:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: include/linux/i2c-sensor.h:126:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: include/linux/i2c-sensor.h:126:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: include/linux/i2c-sensor.h:127:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: include/linux/i2c-sensor.h:127:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1040: FILE: include/linux/i2c-sensor.h:128:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: include/linux/i2c-sensor.h:128:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: include/linux/i2c-sensor.h:129:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: include/linux/i2c-sensor.h:129:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: include/linux/i2c-sensor.h:130:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: include/linux/i2c-sensor.h:130:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: include/linux/i2c-sensor.h:131:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: include/linux/i2c-sensor.h:131:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: include/linux/i2c-sensor.h:132:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: include/linux/i2c-sensor.h:132:
+                          SENSORS_I2C_END, SENSORS_I2C_END, SENSORS_I2C_END}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: include/linux/i2c-sensor.h:134:
+/* This is ugly. We need to evaluate SENSORS_MAX_OPTS before it is $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1047: FILE: include/linux/i2c-sensor.h:135:
+/* This is ugly. We need to evaluate SENSORS_MAX_OPTS before it is 
+   stringified */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1047: FILE: include/linux/i2c-sensor.h:135:
+   stringified */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1053: FILE: include/linux/i2c-sensor.h:141:
+/* SENSORS_MODULE_PARM creates a module parameter, and puts it in the
+   module header */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1053: FILE: include/linux/i2c-sensor.h:141:
+   module header */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1054: FILE: include/linux/i2c-sensor.h:142:
+#define SENSORS_MODULE_PARM(var,desc) \
                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#1054: FILE: include/linux/i2c-sensor.h:142:
+#define SENSORS_MODULE_PARM(var,desc) \
+  static unsigned short var[SENSORS_MAX_OPTS] = SENSORS_DEFAULTS; \
+  MODULE_PARM(var,SENSORS_MODPARM); \
+  MODULE_PARM_DESC(var,desc)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: include/linux/i2c-sensor.h:143:
+  static unsigned short var[SENSORS_MAX_OPTS] = SENSORS_DEFAULTS; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: include/linux/i2c-sensor.h:144:
+  MODULE_PARM(var,SENSORS_MODPARM); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1056: FILE: include/linux/i2c-sensor.h:144:
+  MODULE_PARM(var,SENSORS_MODPARM); \
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: include/linux/i2c-sensor.h:145:
+  MODULE_PARM_DESC(var,desc)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1057: FILE: include/linux/i2c-sensor.h:145:
+  MODULE_PARM_DESC(var,desc)
                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1060: FILE: include/linux/i2c-sensor.h:148:
+/* SENSORS_MODULE_PARM creates a 'force_*' module parameter, and puts it in
+   the module header */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1060: FILE: include/linux/i2c-sensor.h:148:
+   the module header */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: include/linux/i2c-sensor.h:150:
+  SENSORS_MODULE_PARM(force_ ## name, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1063: FILE: include/linux/i2c-sensor.h:151:
+                      "List of adapter,address pairs which are unquestionably" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: include/linux/i2c-sensor.h:151:
+                      "List of adapter,address pairs which are unquestionably" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1064: FILE: include/linux/i2c-sensor.h:152:
+                      " assumed to contain a `" # name "' chip")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: include/linux/i2c-sensor.h:152:
+                      " assumed to contain a `" # name "' chip")$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1066: FILE: include/linux/i2c-sensor.h:154:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: include/linux/i2c-sensor.h:157:
+  SENSORS_MODULE_PARM(probe, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: include/linux/i2c-sensor.h:158:
+                      "List of adapter,address pairs to scan additionally"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: include/linux/i2c-sensor.h:158:
+                      "List of adapter,address pairs to scan additionally"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: include/linux/i2c-sensor.h:159:
+  SENSORS_MODULE_PARM(probe_range, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: include/linux/i2c-sensor.h:160:
+                      "List of adapter,start-addr,end-addr triples to scan " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: include/linux/i2c-sensor.h:160:
+                      "List of adapter,start-addr,end-addr triples to scan " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: include/linux/i2c-sensor.h:161:
+                      "additionally"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: include/linux/i2c-sensor.h:161:
+                      "additionally"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: include/linux/i2c-sensor.h:162:
+  SENSORS_MODULE_PARM(ignore, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1075: FILE: include/linux/i2c-sensor.h:163:
+                      "List of adapter,address pairs not to scan"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: include/linux/i2c-sensor.h:163:
+                      "List of adapter,address pairs not to scan"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: include/linux/i2c-sensor.h:164:
+  SENSORS_MODULE_PARM(ignore_range, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1077: FILE: include/linux/i2c-sensor.h:165:
+                      "List of adapter,start-addr,end-addr triples not to " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: include/linux/i2c-sensor.h:165:
+                      "List of adapter,start-addr,end-addr triples not to " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1078: FILE: include/linux/i2c-sensor.h:166:
+                      "scan"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: include/linux/i2c-sensor.h:166:
+                      "scan"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: include/linux/i2c-sensor.h:167:
+  static struct i2c_address_data addr_data = \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1080: FILE: include/linux/i2c-sensor.h:168:
+                                       {normal_i2c, normal_i2c_range, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: include/linux/i2c-sensor.h:168:
+                                       {normal_i2c, normal_i2c_range, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1081: FILE: include/linux/i2c-sensor.h:169:
+                                        normal_isa, normal_isa_range, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: include/linux/i2c-sensor.h:169:
+                                        normal_isa, normal_isa_range, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1082: FILE: include/linux/i2c-sensor.h:170:
+                                        probe, probe_range, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: include/linux/i2c-sensor.h:170:
+                                        probe, probe_range, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1083: FILE: include/linux/i2c-sensor.h:171:
+                                        ignore, ignore_range, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: include/linux/i2c-sensor.h:171:
+                                        ignore, ignore_range, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: include/linux/i2c-sensor.h:172:
+                                        forces}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: include/linux/i2c-sensor.h:172:
+                                        forces}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: include/linux/i2c-sensor.h:174:
+/* The following functions create an enum with the chip names as elements. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1087: FILE: include/linux/i2c-sensor.h:175:
+/* The following functions create an enum with the chip names as elements. 
+   The first element of the enum is any_chip. These are the only macros

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1088: FILE: include/linux/i2c-sensor.h:176:
+   a module will want to use. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: include/linux/i2c-sensor.h:179:
+  enum chips { any_chip }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: include/linux/i2c-sensor.h:180:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1093: FILE: include/linux/i2c-sensor.h:181:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: include/linux/i2c-sensor.h:181:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1094: FILE: include/linux/i2c-sensor.h:182:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: include/linux/i2c-sensor.h:182:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: include/linux/i2c-sensor.h:183:
+  static struct i2c_force_data forces[] = {{force,any_chip},{NULL}}; \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1095: FILE: include/linux/i2c-sensor.h:183:
+  static struct i2c_force_data forces[] = {{force,any_chip},{NULL}}; \
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1095: FILE: include/linux/i2c-sensor.h:183:
+  static struct i2c_force_data forces[] = {{force,any_chip},{NULL}}; \
                                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: include/linux/i2c-sensor.h:184:
+  SENSORS_INSMOD$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1098: FILE: include/linux/i2c-sensor.h:186:
+#define SENSORS_INSMOD_1(chip1) \
+  enum chips { any_chip, chip1 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  static struct i2c_force_data forces[] = {{force,any_chip},\
+                                                 {force_ ## chip1,chip1}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: include/linux/i2c-sensor.h:187:
+  enum chips { any_chip, chip1 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: include/linux/i2c-sensor.h:188:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1101: FILE: include/linux/i2c-sensor.h:189:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: include/linux/i2c-sensor.h:189:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: include/linux/i2c-sensor.h:190:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: include/linux/i2c-sensor.h:190:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: include/linux/i2c-sensor.h:191:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: include/linux/i2c-sensor.h:192:
+  static struct i2c_force_data forces[] = {{force,any_chip},\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1104: FILE: include/linux/i2c-sensor.h:192:
+  static struct i2c_force_data forces[] = {{force,any_chip},\
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1105: FILE: include/linux/i2c-sensor.h:193:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: include/linux/i2c-sensor.h:193:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1105: FILE: include/linux/i2c-sensor.h:193:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1106: FILE: include/linux/i2c-sensor.h:194:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: include/linux/i2c-sensor.h:194:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: include/linux/i2c-sensor.h:195:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1109: FILE: include/linux/i2c-sensor.h:197:
+#define SENSORS_INSMOD_2(chip1,chip2) \
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1109: FILE: include/linux/i2c-sensor.h:197:
+#define SENSORS_INSMOD_2(chip1,chip2) \
+  enum chips { any_chip, chip1, chip2 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1109: FILE: include/linux/i2c-sensor.h:197:
+#define SENSORS_INSMOD_2(chip1,chip2) \
+  enum chips { any_chip, chip1, chip2 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: include/linux/i2c-sensor.h:198:
+  enum chips { any_chip, chip1, chip2 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: include/linux/i2c-sensor.h:199:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: include/linux/i2c-sensor.h:200:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: include/linux/i2c-sensor.h:200:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: include/linux/i2c-sensor.h:201:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: include/linux/i2c-sensor.h:201:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1114: FILE: include/linux/i2c-sensor.h:202:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: include/linux/i2c-sensor.h:203:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: include/linux/i2c-sensor.h:204:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1116: FILE: include/linux/i2c-sensor.h:204:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: include/linux/i2c-sensor.h:205:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: include/linux/i2c-sensor.h:205:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1117: FILE: include/linux/i2c-sensor.h:205:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1118: FILE: include/linux/i2c-sensor.h:206:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: include/linux/i2c-sensor.h:206:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: include/linux/i2c-sensor.h:206:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1119: FILE: include/linux/i2c-sensor.h:207:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1119: FILE: include/linux/i2c-sensor.h:207:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: include/linux/i2c-sensor.h:208:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: include/linux/i2c-sensor.h:210:
+#define SENSORS_INSMOD_3(chip1,chip2,chip3) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1122: FILE: include/linux/i2c-sensor.h:210:
+#define SENSORS_INSMOD_3(chip1,chip2,chip3) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1122: FILE: include/linux/i2c-sensor.h:210:
+#define SENSORS_INSMOD_3(chip1,chip2,chip3) \
+  enum chips { any_chip, chip1, chip2, chip3 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1122: FILE: include/linux/i2c-sensor.h:210:
+#define SENSORS_INSMOD_3(chip1,chip2,chip3) \
+  enum chips { any_chip, chip1, chip2, chip3 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip3' - possible side-effects?
#1122: FILE: include/linux/i2c-sensor.h:210:
+#define SENSORS_INSMOD_3(chip1,chip2,chip3) \
+  enum chips { any_chip, chip1, chip2, chip3 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: include/linux/i2c-sensor.h:211:
+  enum chips { any_chip, chip1, chip2, chip3 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1124: FILE: include/linux/i2c-sensor.h:212:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: include/linux/i2c-sensor.h:213:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1125: FILE: include/linux/i2c-sensor.h:213:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: include/linux/i2c-sensor.h:214:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: include/linux/i2c-sensor.h:214:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: include/linux/i2c-sensor.h:215:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: include/linux/i2c-sensor.h:216:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: include/linux/i2c-sensor.h:217:
+  SENSORS_MODULE_PARM_FORCE(chip3); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: include/linux/i2c-sensor.h:218:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1130: FILE: include/linux/i2c-sensor.h:218:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1131: FILE: include/linux/i2c-sensor.h:219:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: include/linux/i2c-sensor.h:219:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: include/linux/i2c-sensor.h:219:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: include/linux/i2c-sensor.h:220:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: include/linux/i2c-sensor.h:220:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1132: FILE: include/linux/i2c-sensor.h:220:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: include/linux/i2c-sensor.h:221:
+                                                 {force_ ## chip3,chip3}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: include/linux/i2c-sensor.h:221:
+                                                 {force_ ## chip3,chip3}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1133: FILE: include/linux/i2c-sensor.h:221:
+                                                 {force_ ## chip3,chip3}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: include/linux/i2c-sensor.h:222:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: include/linux/i2c-sensor.h:222:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1135: FILE: include/linux/i2c-sensor.h:223:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip3' - possible side-effects?
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip4' - possible side-effects?
#1137: FILE: include/linux/i2c-sensor.h:225:
+#define SENSORS_INSMOD_4(chip1,chip2,chip3,chip4) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: include/linux/i2c-sensor.h:226:
+  enum chips { any_chip, chip1, chip2, chip3, chip4 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1139: FILE: include/linux/i2c-sensor.h:227:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: include/linux/i2c-sensor.h:228:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1140: FILE: include/linux/i2c-sensor.h:228:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1141: FILE: include/linux/i2c-sensor.h:229:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1141: FILE: include/linux/i2c-sensor.h:229:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1142: FILE: include/linux/i2c-sensor.h:230:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: include/linux/i2c-sensor.h:231:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: include/linux/i2c-sensor.h:232:
+  SENSORS_MODULE_PARM_FORCE(chip3); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: include/linux/i2c-sensor.h:233:
+  SENSORS_MODULE_PARM_FORCE(chip4); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: include/linux/i2c-sensor.h:234:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1146: FILE: include/linux/i2c-sensor.h:234:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1147: FILE: include/linux/i2c-sensor.h:235:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: include/linux/i2c-sensor.h:235:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1147: FILE: include/linux/i2c-sensor.h:235:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1148: FILE: include/linux/i2c-sensor.h:236:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: include/linux/i2c-sensor.h:236:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1148: FILE: include/linux/i2c-sensor.h:236:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: include/linux/i2c-sensor.h:237:
+                                                 {force_ ## chip3,chip3}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: include/linux/i2c-sensor.h:237:
+                                                 {force_ ## chip3,chip3}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1149: FILE: include/linux/i2c-sensor.h:237:
+                                                 {force_ ## chip3,chip3}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: include/linux/i2c-sensor.h:238:
+                                                 {force_ ## chip4,chip4}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: include/linux/i2c-sensor.h:238:
+                                                 {force_ ## chip4,chip4}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1150: FILE: include/linux/i2c-sensor.h:238:
+                                                 {force_ ## chip4,chip4}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: include/linux/i2c-sensor.h:239:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: include/linux/i2c-sensor.h:239:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: include/linux/i2c-sensor.h:240:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip3' - possible side-effects?
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip4' - possible side-effects?
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip5' - possible side-effects?
#1154: FILE: include/linux/i2c-sensor.h:242:
+#define SENSORS_INSMOD_5(chip1,chip2,chip3,chip4,chip5) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1155: FILE: include/linux/i2c-sensor.h:243:
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1156: FILE: include/linux/i2c-sensor.h:244:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1157: FILE: include/linux/i2c-sensor.h:245:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1157: FILE: include/linux/i2c-sensor.h:245:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1158: FILE: include/linux/i2c-sensor.h:246:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: include/linux/i2c-sensor.h:246:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1159: FILE: include/linux/i2c-sensor.h:247:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1160: FILE: include/linux/i2c-sensor.h:248:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: include/linux/i2c-sensor.h:249:
+  SENSORS_MODULE_PARM_FORCE(chip3); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: include/linux/i2c-sensor.h:250:
+  SENSORS_MODULE_PARM_FORCE(chip4); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1163: FILE: include/linux/i2c-sensor.h:251:
+  SENSORS_MODULE_PARM_FORCE(chip5); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1164: FILE: include/linux/i2c-sensor.h:252:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1164: FILE: include/linux/i2c-sensor.h:252:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1165: FILE: include/linux/i2c-sensor.h:253:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: include/linux/i2c-sensor.h:253:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1165: FILE: include/linux/i2c-sensor.h:253:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1166: FILE: include/linux/i2c-sensor.h:254:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: include/linux/i2c-sensor.h:254:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1166: FILE: include/linux/i2c-sensor.h:254:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: include/linux/i2c-sensor.h:255:
+                                                 {force_ ## chip3,chip3}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1167: FILE: include/linux/i2c-sensor.h:255:
+                                                 {force_ ## chip3,chip3}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1167: FILE: include/linux/i2c-sensor.h:255:
+                                                 {force_ ## chip3,chip3}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1168: FILE: include/linux/i2c-sensor.h:256:
+                                                 {force_ ## chip4,chip4}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1168: FILE: include/linux/i2c-sensor.h:256:
+                                                 {force_ ## chip4,chip4}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1168: FILE: include/linux/i2c-sensor.h:256:
+                                                 {force_ ## chip4,chip4}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1169: FILE: include/linux/i2c-sensor.h:257:
+                                                 {force_ ## chip5,chip5}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1169: FILE: include/linux/i2c-sensor.h:257:
+                                                 {force_ ## chip5,chip5}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1169: FILE: include/linux/i2c-sensor.h:257:
+                                                 {force_ ## chip5,chip5}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1170: FILE: include/linux/i2c-sensor.h:258:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: include/linux/i2c-sensor.h:258:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: include/linux/i2c-sensor.h:259:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip3' - possible side-effects?
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip4' - possible side-effects?
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip5' - possible side-effects?
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip6' - possible side-effects?
#1173: FILE: include/linux/i2c-sensor.h:261:
+#define SENSORS_INSMOD_6(chip1,chip2,chip3,chip4,chip5,chip6) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: include/linux/i2c-sensor.h:262:
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1175: FILE: include/linux/i2c-sensor.h:263:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1176: FILE: include/linux/i2c-sensor.h:264:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1176: FILE: include/linux/i2c-sensor.h:264:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1177: FILE: include/linux/i2c-sensor.h:265:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: include/linux/i2c-sensor.h:265:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1178: FILE: include/linux/i2c-sensor.h:266:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: include/linux/i2c-sensor.h:267:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1180: FILE: include/linux/i2c-sensor.h:268:
+  SENSORS_MODULE_PARM_FORCE(chip3); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1181: FILE: include/linux/i2c-sensor.h:269:
+  SENSORS_MODULE_PARM_FORCE(chip4); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: include/linux/i2c-sensor.h:270:
+  SENSORS_MODULE_PARM_FORCE(chip5); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1183: FILE: include/linux/i2c-sensor.h:271:
+  SENSORS_MODULE_PARM_FORCE(chip6); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: include/linux/i2c-sensor.h:272:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1184: FILE: include/linux/i2c-sensor.h:272:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: include/linux/i2c-sensor.h:273:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: include/linux/i2c-sensor.h:273:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: include/linux/i2c-sensor.h:273:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1186: FILE: include/linux/i2c-sensor.h:274:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: include/linux/i2c-sensor.h:274:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: include/linux/i2c-sensor.h:274:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1187: FILE: include/linux/i2c-sensor.h:275:
+                                                 {force_ ## chip3,chip3}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: include/linux/i2c-sensor.h:275:
+                                                 {force_ ## chip3,chip3}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1187: FILE: include/linux/i2c-sensor.h:275:
+                                                 {force_ ## chip3,chip3}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: include/linux/i2c-sensor.h:276:
+                                                 {force_ ## chip4,chip4}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: include/linux/i2c-sensor.h:276:
+                                                 {force_ ## chip4,chip4}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1188: FILE: include/linux/i2c-sensor.h:276:
+                                                 {force_ ## chip4,chip4}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: include/linux/i2c-sensor.h:277:
+                                                 {force_ ## chip5,chip5}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: include/linux/i2c-sensor.h:277:
+                                                 {force_ ## chip5,chip5}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1189: FILE: include/linux/i2c-sensor.h:277:
+                                                 {force_ ## chip5,chip5}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1190: FILE: include/linux/i2c-sensor.h:278:
+                                                 {force_ ## chip6,chip6}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: include/linux/i2c-sensor.h:278:
+                                                 {force_ ## chip6,chip6}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1190: FILE: include/linux/i2c-sensor.h:278:
+                                                 {force_ ## chip6,chip6}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1191: FILE: include/linux/i2c-sensor.h:279:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1191: FILE: include/linux/i2c-sensor.h:279:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1192: FILE: include/linux/i2c-sensor.h:280:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
                                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip3' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip4' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip5' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip6' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip7' - possible side-effects?
#1194: FILE: include/linux/i2c-sensor.h:282:
+#define SENSORS_INSMOD_7(chip1,chip2,chip3,chip4,chip5,chip6,chip7) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1195: FILE: include/linux/i2c-sensor.h:283:
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1196: FILE: include/linux/i2c-sensor.h:284:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1197: FILE: include/linux/i2c-sensor.h:285:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1197: FILE: include/linux/i2c-sensor.h:285:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1198: FILE: include/linux/i2c-sensor.h:286:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1198: FILE: include/linux/i2c-sensor.h:286:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: include/linux/i2c-sensor.h:287:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1200: FILE: include/linux/i2c-sensor.h:288:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1201: FILE: include/linux/i2c-sensor.h:289:
+  SENSORS_MODULE_PARM_FORCE(chip3); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1202: FILE: include/linux/i2c-sensor.h:290:
+  SENSORS_MODULE_PARM_FORCE(chip4); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: include/linux/i2c-sensor.h:291:
+  SENSORS_MODULE_PARM_FORCE(chip5); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: include/linux/i2c-sensor.h:292:
+  SENSORS_MODULE_PARM_FORCE(chip6); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: include/linux/i2c-sensor.h:293:
+  SENSORS_MODULE_PARM_FORCE(chip7); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: include/linux/i2c-sensor.h:294:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1206: FILE: include/linux/i2c-sensor.h:294:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1207: FILE: include/linux/i2c-sensor.h:295:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: include/linux/i2c-sensor.h:295:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1207: FILE: include/linux/i2c-sensor.h:295:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1208: FILE: include/linux/i2c-sensor.h:296:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: include/linux/i2c-sensor.h:296:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1208: FILE: include/linux/i2c-sensor.h:296:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1209: FILE: include/linux/i2c-sensor.h:297:
+                                                 {force_ ## chip3,chip3}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: include/linux/i2c-sensor.h:297:
+                                                 {force_ ## chip3,chip3}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1209: FILE: include/linux/i2c-sensor.h:297:
+                                                 {force_ ## chip3,chip3}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1210: FILE: include/linux/i2c-sensor.h:298:
+                                                 {force_ ## chip4,chip4}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: include/linux/i2c-sensor.h:298:
+                                                 {force_ ## chip4,chip4}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1210: FILE: include/linux/i2c-sensor.h:298:
+                                                 {force_ ## chip4,chip4}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1211: FILE: include/linux/i2c-sensor.h:299:
+                                                 {force_ ## chip5,chip5}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: include/linux/i2c-sensor.h:299:
+                                                 {force_ ## chip5,chip5}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1211: FILE: include/linux/i2c-sensor.h:299:
+                                                 {force_ ## chip5,chip5}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: include/linux/i2c-sensor.h:300:
+                                                 {force_ ## chip6,chip6}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: include/linux/i2c-sensor.h:300:
+                                                 {force_ ## chip6,chip6}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1212: FILE: include/linux/i2c-sensor.h:300:
+                                                 {force_ ## chip6,chip6}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1213: FILE: include/linux/i2c-sensor.h:301:
+                                                 {force_ ## chip7,chip7}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1213: FILE: include/linux/i2c-sensor.h:301:
+                                                 {force_ ## chip7,chip7}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1213: FILE: include/linux/i2c-sensor.h:301:
+                                                 {force_ ## chip7,chip7}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1214: FILE: include/linux/i2c-sensor.h:302:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: include/linux/i2c-sensor.h:302:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: include/linux/i2c-sensor.h:303:
+  SENSORS_INSMOD$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip1' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip2' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip3' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip4' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip5' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip6' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip7' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'chip8' - possible side-effects?
#1217: FILE: include/linux/i2c-sensor.h:305:
+#define SENSORS_INSMOD_8(chip1,chip2,chip3,chip4,chip5,chip6,chip7,chip8) \
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \
+  SENSORS_MODULE_PARM(force, \
+                      "List of adapter,address pairs to boldly assume " \
+                      "to be present"); \
+  SENSORS_MODULE_PARM_FORCE(chip1); \
+  SENSORS_MODULE_PARM_FORCE(chip2); \
+  SENSORS_MODULE_PARM_FORCE(chip3); \
+  SENSORS_MODULE_PARM_FORCE(chip4); \
+  SENSORS_MODULE_PARM_FORCE(chip5); \
+  SENSORS_MODULE_PARM_FORCE(chip6); \
+  SENSORS_MODULE_PARM_FORCE(chip7); \
+  SENSORS_MODULE_PARM_FORCE(chip8); \
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
+                                                 {force_ ## chip1,chip1}, \
+                                                 {force_ ## chip2,chip2}, \
+                                                 {force_ ## chip3,chip3}, \
+                                                 {force_ ## chip4,chip4}, \
+                                                 {force_ ## chip5,chip5}, \
+                                                 {force_ ## chip6,chip6}, \
+                                                 {force_ ## chip7,chip7}, \
+                                                 {force_ ## chip8,chip8}, \
+                                                 {NULL}}; \
+  SENSORS_INSMOD

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: include/linux/i2c-sensor.h:306:
+  enum chips { any_chip, chip1, chip2, chip3, chip4, chip5, chip6, chip7, chip8 }; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: include/linux/i2c-sensor.h:307:
+  SENSORS_MODULE_PARM(force, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1220: FILE: include/linux/i2c-sensor.h:308:
+                      "List of adapter,address pairs to boldly assume " \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: include/linux/i2c-sensor.h:308:
+                      "List of adapter,address pairs to boldly assume " \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1221: FILE: include/linux/i2c-sensor.h:309:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: include/linux/i2c-sensor.h:309:
+                      "to be present"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: include/linux/i2c-sensor.h:310:
+  SENSORS_MODULE_PARM_FORCE(chip1); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: include/linux/i2c-sensor.h:311:
+  SENSORS_MODULE_PARM_FORCE(chip2); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: include/linux/i2c-sensor.h:312:
+  SENSORS_MODULE_PARM_FORCE(chip3); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: include/linux/i2c-sensor.h:313:
+  SENSORS_MODULE_PARM_FORCE(chip4); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: include/linux/i2c-sensor.h:314:
+  SENSORS_MODULE_PARM_FORCE(chip5); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: include/linux/i2c-sensor.h:315:
+  SENSORS_MODULE_PARM_FORCE(chip6); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: include/linux/i2c-sensor.h:316:
+  SENSORS_MODULE_PARM_FORCE(chip7); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: include/linux/i2c-sensor.h:317:
+  SENSORS_MODULE_PARM_FORCE(chip8); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: include/linux/i2c-sensor.h:318:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1230: FILE: include/linux/i2c-sensor.h:318:
+  static struct i2c_force_data forces[] = {{force,any_chip}, \
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1231: FILE: include/linux/i2c-sensor.h:319:
+                                                 {force_ ## chip1,chip1}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: include/linux/i2c-sensor.h:319:
+                                                 {force_ ## chip1,chip1}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1231: FILE: include/linux/i2c-sensor.h:319:
+                                                 {force_ ## chip1,chip1}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1232: FILE: include/linux/i2c-sensor.h:320:
+                                                 {force_ ## chip2,chip2}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: include/linux/i2c-sensor.h:320:
+                                                 {force_ ## chip2,chip2}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1232: FILE: include/linux/i2c-sensor.h:320:
+                                                 {force_ ## chip2,chip2}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: include/linux/i2c-sensor.h:321:
+                                                 {force_ ## chip3,chip3}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: include/linux/i2c-sensor.h:321:
+                                                 {force_ ## chip3,chip3}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1233: FILE: include/linux/i2c-sensor.h:321:
+                                                 {force_ ## chip3,chip3}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1234: FILE: include/linux/i2c-sensor.h:322:
+                                                 {force_ ## chip4,chip4}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: include/linux/i2c-sensor.h:322:
+                                                 {force_ ## chip4,chip4}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1234: FILE: include/linux/i2c-sensor.h:322:
+                                                 {force_ ## chip4,chip4}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1235: FILE: include/linux/i2c-sensor.h:323:
+                                                 {force_ ## chip5,chip5}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: include/linux/i2c-sensor.h:323:
+                                                 {force_ ## chip5,chip5}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1235: FILE: include/linux/i2c-sensor.h:323:
+                                                 {force_ ## chip5,chip5}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1236: FILE: include/linux/i2c-sensor.h:324:
+                                                 {force_ ## chip6,chip6}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: include/linux/i2c-sensor.h:324:
+                                                 {force_ ## chip6,chip6}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1236: FILE: include/linux/i2c-sensor.h:324:
+                                                 {force_ ## chip6,chip6}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1237: FILE: include/linux/i2c-sensor.h:325:
+                                                 {force_ ## chip7,chip7}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: include/linux/i2c-sensor.h:325:
+                                                 {force_ ## chip7,chip7}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1237: FILE: include/linux/i2c-sensor.h:325:
+                                                 {force_ ## chip7,chip7}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1238: FILE: include/linux/i2c-sensor.h:326:
+                                                 {force_ ## chip8,chip8}, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: include/linux/i2c-sensor.h:326:
+                                                 {force_ ## chip8,chip8}, \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1238: FILE: include/linux/i2c-sensor.h:326:
+                                                 {force_ ## chip8,chip8}, \
                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: include/linux/i2c-sensor.h:327:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: include/linux/i2c-sensor.h:327:
+                                                 {NULL}}; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1240: FILE: include/linux/i2c-sensor.h:328:
+  SENSORS_INSMOD$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1246: FILE: include/linux/i2c-sensor.h:334:
+/* Detect function. It iterates over all possible addresses itself. For
+   SMBus addresses, it will only call found_proc if some client is connected

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1248: FILE: include/linux/i2c-sensor.h:336:
+   done. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1249: FILE: include/linux/i2c-sensor.h:337:
+extern int i2c_detect(struct i2c_adapter *adapter,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: include/linux/i2c-sensor.h:338:
+extern int i2c_detect(struct i2c_adapter *adapter,
+			  struct i2c_address_data *address_data,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1251: FILE: include/linux/i2c-sensor.h:339:
+			  i2c_found_addr_proc * found_proc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1253: FILE: include/linux/i2c-sensor.h:341:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1255: FILE: include/linux/i2c-sensor.h:343:
+/* This macro is used to scale user-input to sensible values in almost all
+   chip drivers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1255: FILE: include/linux/i2c-sensor.h:343:
+   chip drivers. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1266: FILE: include/linux/i2c-sensor.h:354:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1275: FILE: include/linux/i2c-sensor.h:363:
+#define DEV_SENSORS 2		/* The id of the lm_sensors directory within the
+				   dev table */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1275: FILE: include/linux/i2c-sensor.h:363:
+				   dev table */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380867.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 197 errors, 219 warnings, 65 checks, 643 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380867.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
