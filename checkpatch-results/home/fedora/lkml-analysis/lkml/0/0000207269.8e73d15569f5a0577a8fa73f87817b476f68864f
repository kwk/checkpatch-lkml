ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#67: FILE: include/linux/security.h:1241:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: include/linux/security.h:1245:
+extern int security_init	(void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/security.h:1245:
+extern int security_init	(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#73: FILE: include/linux/security.h:1246:
+extern int register_security	(struct security_operations *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/security.h:1246:
+extern int register_security	(struct security_operations *ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: include/linux/security.h:1247:
+extern int unregister_security	(struct security_operations *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/security.h:1247:
+extern int unregister_security	(struct security_operations *ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: include/linux/security.h:1248:
+extern int mod_reg_security	(const char *name, struct security_operations =

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: include/linux/security.h:1248:
+extern int mod_reg_security	(const char *name, struct security_operations =

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct security_operations' should also have an identifier name
#75: FILE: include/linux/security.h:1248:
+extern int mod_reg_security	(const char *name, struct security_operations =

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#77: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#77: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=
                              	                                            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct security_operation' should also have an identifier name
#77: FILE: include/linux/security.h:1249:
+extern int mod_unreg_security	(const char *name, struct security_operation=

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'seop' may be better as '(seop)' to avoid precedence issues
#80: FILE: include/linux/security.h:1251:
+#define COND_SECURITY(seop, def) security_ops->seop

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: include/linux/security.h:1268:
+	return COND_SECURITY(ptrace (parent, child),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: include/linux/security.h:1269:
+			 cap_ptrace (parent, child));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: include/linux/security.h:1276:
+	return COND_SECURITY(capget (target, effective, inheritable, permitted),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: include/linux/security.h:1277:
+			 cap_capget (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: include/linux/security.h:1284:
+	return COND_SECURITY(capset_check (target, effective, inheritable, permit=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#120: FILE: include/linux/security.h:1284:
+	return COND_SECURITY(capset_check (target, effective, inheritable, permit=
 	                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: include/linux/security.h:1285:
+			 cap_capset_check (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: include/linux/security.h:1292:
+	COND_SECURITY(capset_set (target, effective, inheritable, permitted),

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: include/linux/security.h:1293:
+^I       ^I  cap_capset_set (target, effective, inheritable, permitted));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: include/linux/security.h:1293:
+^I       ^I  cap_capset_set (target, effective, inheritable, permitted));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: include/linux/security.h:1293:
+	COND_SECURITY(capset_set (target, effective, inheritable, permitted),
+	       	  cap_capset_set (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: include/linux/security.h:1293:
+	       	  cap_capset_set (target, effective, inheritable, permitted));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: include/linux/security.h:1297:
+	return COND_SECURITY(acct (file),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: include/linux/security.h:1308:
+	return COND_SECURITY(quotactl (cmds, type, id, sb),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: include/linux/security.h:1313:
+	return COND_SECURITY(quota_on (dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: include/linux/security.h:1333:
+	return COND_SECURITY(bprm_alloc_security (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: include/linux/security.h:1338:
+	COND_SECURITY(bprm_free_security (bprm),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: include/linux/security.h:1339:
+	COND_SECURITY(bprm_free_security (bprm),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: include/linux/security.h:1343:
+	COND_SECURITY(bprm_apply_creds (bprm, unsafe),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: include/linux/security.h:1344:
+	COND_SECURITY(bprm_apply_creds (bprm, unsafe),
+		  cap_bprm_apply_creds (bprm, unsafe));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: include/linux/security.h:1344:
+		  cap_bprm_apply_creds (bprm, unsafe));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: include/linux/security.h:1348:
+	COND_SECURITY(bprm_post_apply_creds (bprm),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: include/linux/security.h:1349:
+	COND_SECURITY(bprm_post_apply_creds (bprm),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: include/linux/security.h:1353:
+	return COND_SECURITY(bprm_set_security (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: include/linux/security.h:1354:
+			 cap_bprm_set_security (bprm));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: include/linux/security.h:1358:
+	return COND_SECURITY(bprm_check_security (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: include/linux/security.h:1363:
+	return COND_SECURITY(bprm_secureexec (bprm),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: include/linux/security.h:1364:
+			 cap_bprm_secureexec (bprm));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: include/linux/security.h:1368:
+	return COND_SECURITY(sb_alloc_security (sb),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: include/linux/security.h:1373:
+	COND_SECURITY(sb_free_security (sb),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: include/linux/security.h:1374:
+	COND_SECURITY(sb_free_security (sb),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: include/linux/security.h:1379:
+	return COND_SECURITY(sb_copy_data (type, orig, copy),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: include/linux/security.h:1389:
+	return COND_SECURITY(sb_statfs (sb),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#276: FILE: include/linux/security.h:1396:
+	return COND_SECURITY(sb_mount (dev_name, nd, type, flags, data),
 	                                         ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#284: FILE: include/linux/security.h:1402:
+	return COND_SECURITY(sb_check_sb (mnt, nd),
 	                                       ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: include/linux/security.h:1402:
+	return COND_SECURITY(sb_check_sb (mnt, nd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: include/linux/security.h:1412:
+	COND_SECURITY(sb_umount_close (mnt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: include/linux/security.h:1413:
+	COND_SECURITY(sb_umount_close (mnt),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: include/linux/security.h:1417:
+	COND_SECURITY(sb_umount_busy (mnt),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/linux/security.h:1418:
+	COND_SECURITY(sb_umount_busy (mnt),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: include/linux/security.h:1424:
+	COND_SECURITY(sb_post_remount (mnt, flags, data),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: include/linux/security.h:1429:
+	COND_SECURITY(sb_post_mountroot (),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: include/linux/security.h:1435:
+	COND_SECURITY(sb_post_addmount (mnt, mountpoint_nd),
+		  SE_NOP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: include/linux/security.h:1447:
+	COND_SECURITY(sb_post_pivotroot (old_nd, new_nd),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: include/linux/security.h:1451:
+	return COND_SECURITY(inode_alloc_security (inode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: include/linux/security.h:1456:
+	COND_SECURITY(inode_free_security (inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: include/linux/security.h:1457:
+	COND_SECURITY(inode_free_security (inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: include/linux/security.h:1464:
+	return COND_SECURITY(inode_create (dir, dentry, mode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: include/linux/security.h:1471:
+	COND_SECURITY(inode_post_create (dir, dentry, mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: include/linux/security.h:1472:
+	COND_SECURITY(inode_post_create (dir, dentry, mode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: include/linux/security.h:1478:
+	return COND_SECURITY(inode_link (old_dentry, dir, new_dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: include/linux/security.h:1485:
+	COND_SECURITY(inode_post_link (old_dentry, dir, new_dentry),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: include/linux/security.h:1486:
+	COND_SECURITY(inode_post_link (old_dentry, dir, new_dentry),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: include/linux/security.h:1491:
+	return COND_SECURITY(inode_unlink (dir, dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: include/linux/security.h:1498:
+	return COND_SECURITY(inode_symlink (dir, dentry, old_name),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: include/linux/security.h:1505:
+	COND_SECURITY(inode_post_symlink (dir, dentry, old_name),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: include/linux/security.h:1506:
+	COND_SECURITY(inode_post_symlink (dir, dentry, old_name),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#429: FILE: include/linux/security.h:1512:
+	return COND_SECURITY(inode_mkdir (dir, dentry, mode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#438: FILE: include/linux/security.h:1519:
+	COND_SECURITY(inode_post_mkdir (dir, dentry, mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: include/linux/security.h:1520:
+	COND_SECURITY(inode_post_mkdir (dir, dentry, mode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: include/linux/security.h:1525:
+	return COND_SECURITY(inode_rmdir (dir, dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#455: FILE: include/linux/security.h:1532:
+	return COND_SECURITY(inode_mknod (dir, dentry, mode, dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: include/linux/security.h:1539:
+	COND_SECURITY(inode_post_mknod (dir, dentry, mode, dev),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: include/linux/security.h:1540:
+	COND_SECURITY(inode_post_mknod (dir, dentry, mode, dev),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: include/linux/security.h:1547:
+	return COND_SECURITY(inode_rename (old_dir, old_dentry,

ERROR:SPACING: space required after that ',' (ctx:VxO)
#476: FILE: include/linux/security.h:1548:
+					   new_dir, new_dentry),=20
 					                       ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#476: FILE: include/linux/security.h:1548:
+					   new_dir, new_dentry),=20
 					                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#487: FILE: include/linux/security.h:1556:
+	COND_SECURITY(inode_post_rename (old_dir, old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: include/linux/security.h:1562:
+	return COND_SECURITY(inode_readlink (dentry),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#503: FILE: include/linux/security.h:1568:
+	return COND_SECURITY(inode_follow_link (dentry, nd),
 	                                                ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#503: FILE: include/linux/security.h:1568:
+	return COND_SECURITY(inode_follow_link (dentry, nd),

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#511: FILE: include/linux/security.h:1574:
+	return COND_SECURITY(inode_permission (inode, mask, nd),
 	                                                    ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#511: FILE: include/linux/security.h:1574:
+	return COND_SECURITY(inode_permission (inode, mask, nd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#519: FILE: include/linux/security.h:1580:
+	return COND_SECURITY(inode_setattr (dentry, attr),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#527: FILE: include/linux/security.h:1586:
+	return COND_SECURITY(inode_getattr (mnt, dentry),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#534: FILE: include/linux/security.h:1591:
+	COND_SECURITY(inode_delete (inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: include/linux/security.h:1592:
+	COND_SECURITY(inode_delete (inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: include/linux/security.h:1597:
+	return COND_SECURITY(inode_setxattr (dentry, name, value, size, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: include/linux/security.h:1598:
+			 cap_inode_setxattr (dentry, name, value, size, flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: include/linux/security.h:1604:
+	COND_SECURITY(inode_post_setxattr (dentry, name, value, size, flags),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#606: FILE: include/linux/security.h:1638:
+	return COND_SECURITY(file_permission (file, mask),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#613: FILE: include/linux/security.h:1643:
+	return COND_SECURITY(file_alloc_security (file),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#620: FILE: include/linux/security.h:1648:
+	COND_SECURITY(file_free_security (file),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: include/linux/security.h:1649:
+	COND_SECURITY(file_free_security (file),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#628: FILE: include/linux/security.h:1654:
+	return COND_SECURITY(file_ioctl (file, cmd, arg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#637: FILE: include/linux/security.h:1660:
+	return COND_SECURITY(file_mmap (file, prot, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: include/linux/security.h:1671:
+	return COND_SECURITY(file_lock (file, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: include/linux/security.h:1677:
+	return COND_SECURITY(file_fcntl (file, cmd, arg),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#676: FILE: include/linux/security.h:1689:
+	return COND_SECURITY(file_send_sigiotask (tsk, fown, sig),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: include/linux/security.h:1704:
+	return COND_SECURITY(task_alloc_security (p),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#704: FILE: include/linux/security.h:1709:
+	COND_SECURITY(task_free_security (p),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: include/linux/security.h:1710:
+	COND_SECURITY(task_free_security (p),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#712: FILE: include/linux/security.h:1715:
+	return COND_SECURITY(task_setuid (id0, id1, id2, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#722: FILE: include/linux/security.h:1721:
+	return COND_SECURITY(task_post_setuid (old_ruid, old_euid, old_suid, flag=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#722: FILE: include/linux/security.h:1721:
+	return COND_SECURITY(task_post_setuid (old_ruid, old_euid, old_suid, flag=
 	                                                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: include/linux/security.h:1722:
+			 cap_task_post_setuid (old_ruid, old_euid, old_suid, flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#731: FILE: include/linux/security.h:1727:
+	return COND_SECURITY(task_setgid (id0, id1, id2, flags),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#738: FILE: include/linux/security.h:1732:
+	return COND_SECURITY(task_setpgid (p, pgid),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: include/linux/security.h:1737:
+	return COND_SECURITY(task_getpgid (p),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#752: FILE: include/linux/security.h:1742:
+	return COND_SECURITY(task_getsid (p),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: include/linux/security.h:1747:
+	return COND_SECURITY(task_setgroups (group_info),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#798: FILE: include/linux/security.h:1776:
+	return COND_SECURITY(task_kill (p, info, sig),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#815: FILE: include/linux/security.h:1789:
+	return COND_SECURITY(task_prctl (option, arg2, arg3, arg4, arg5),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: include/linux/security.h:1795:
+	COND_SECURITY(task_reparent_to_init (p),
+		  cap_task_reparent_to_init (p));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: include/linux/security.h:1800:
+	COND_SECURITY(task_to_inode(p, inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#838: FILE: include/linux/security.h:1805:
+	return COND_SECURITY(ipc_permission (ipcp, flag),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#845: FILE: include/linux/security.h:1810:
+	return COND_SECURITY(msg_msg_alloc_security (msg),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: include/linux/security.h:1816:
+	COND_SECURITY(msg_msg_free_security(msg),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#859: FILE: include/linux/security.h:1820:
+	return COND_SECURITY(msg_queue_alloc_security (msq),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: include/linux/security.h:1825:
+	COND_SECURITY(msg_queue_free_security (msq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: include/linux/security.h:1826:
+	COND_SECURITY(msg_queue_free_security (msq),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#882: FILE: include/linux/security.h:1836:
+	return COND_SECURITY(msg_queue_msgctl (msq, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#900: FILE: include/linux/security.h:1850:
+	return COND_SECURITY(msg_queue_msgrcv (msq, msg, target, type, mode),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#907: FILE: include/linux/security.h:1855:
+	return COND_SECURITY(shm_alloc_security (shp),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#914: FILE: include/linux/security.h:1860:
+	COND_SECURITY(shm_free_security (shp),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: include/linux/security.h:1861:
+	COND_SECURITY(shm_free_security (shp),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#929: FILE: include/linux/security.h:1871:
+	return COND_SECURITY(shm_shmctl (shp, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#944: FILE: include/linux/security.h:1882:
+	return COND_SECURITY(sem_alloc_security (sma),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#951: FILE: include/linux/security.h:1887:
+	COND_SECURITY(sem_free_security (sma),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: include/linux/security.h:1888:
+	COND_SECURITY(sem_free_security (sma),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#966: FILE: include/linux/security.h:1897:
+	return COND_SECURITY(sem_semctl (sma, cmd),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#975: FILE: include/linux/security.h:1904:
+	return COND_SECURITY(sem_semop (sma, sops, nsops, alter),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#984: FILE: include/linux/security.h:1910:
+	COND_SECURITY(d_instantiate (dentry, inode),
+		  SE_NOP);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1138: FILE: include/linux/security.h:1929:
+	return COND_SECURITY(netlink_recv (skb),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1139: FILE: include/linux/security.h:1930:
+			 cap_netlink_recv (skb));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1143: FILE: include/linux/security.h:1932:
 }
+#ifdef CONFIG_SECURITY_NETWORK

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1144: FILE: include/linux/security.h:1933:
+static inline int security_unix_stream_connect(struct socket * sock,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1145: FILE: include/linux/security.h:1934:
+					       struct socket * other,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1145: FILE: include/linux/security.h:1934:
+					       struct socket * other,=20
 					                            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1145: FILE: include/linux/security.h:1934:
+					       struct socket * other,=20
 					                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1146: FILE: include/linux/security.h:1935:
+					       struct sock * newsk)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1158: FILE: include/linux/security.h:1940:
 }
+static inline int security_unix_may_send(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1158: FILE: include/linux/security.h:1940:
+static inline int security_unix_may_send(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1158: FILE: include/linux/security.h:1940:
+static inline int security_unix_may_send(struct socket * sock,=20
                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1158: FILE: include/linux/security.h:1940:
+static inline int security_unix_may_send(struct socket * sock,=20
                                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1159: FILE: include/linux/security.h:1941:
+					 struct socket * other)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1168: FILE: include/linux/security.h:1946:
 }
+static inline int security_socket_create (int family, int type,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1177: FILE: include/linux/security.h:1952:
 }
+static inline void security_socket_post_create(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1177: FILE: include/linux/security.h:1952:
+static inline void security_socket_post_create(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1177: FILE: include/linux/security.h:1952:
+static inline void security_socket_post_create(struct socket * sock,=20
                                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1177: FILE: include/linux/security.h:1952:
+static inline void security_socket_post_create(struct socket * sock,=20
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1179: FILE: include/linux/security.h:1954:
+					       int type,=20
 					               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1179: FILE: include/linux/security.h:1954:
+					       int type,=20
 					                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1184: FILE: include/linux/security.h:1958:
+	COND_SECURITY(socket_post_create(sock, family, type, protocol, kern),
+		  SE_NOP);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1190: FILE: include/linux/security.h:1960:
 }
+static inline int security_socket_bind(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1190: FILE: include/linux/security.h:1960:
+static inline int security_socket_bind(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1190: FILE: include/linux/security.h:1960:
+static inline int security_socket_bind(struct socket * sock,=20
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1190: FILE: include/linux/security.h:1960:
+static inline int security_socket_bind(struct socket * sock,=20
                                                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1191: FILE: include/linux/security.h:1961:
+				       struct sockaddr * address,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1191: FILE: include/linux/security.h:1961:
+				       struct sockaddr * address,=20
 				                                ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1191: FILE: include/linux/security.h:1961:
+				       struct sockaddr * address,=20
 				                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1192: FILE: include/linux/security.h:1962:
+				       struct sockaddr * address,=20
+				       int addrlen)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1201: FILE: include/linux/security.h:1967:
 }
+static inline int security_socket_connect(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1201: FILE: include/linux/security.h:1967:
+static inline int security_socket_connect(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1201: FILE: include/linux/security.h:1967:
+static inline int security_socket_connect(struct socket * sock,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1201: FILE: include/linux/security.h:1967:
+static inline int security_socket_connect(struct socket * sock,=20
                                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1202: FILE: include/linux/security.h:1968:
+					  struct sockaddr * address,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1202: FILE: include/linux/security.h:1968:
+					  struct sockaddr * address,=20
 					                           ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1202: FILE: include/linux/security.h:1968:
+					  struct sockaddr * address,=20
 					                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1203: FILE: include/linux/security.h:1969:
+					  struct sockaddr * address,=20
+					  int addrlen)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1211: FILE: include/linux/security.h:1974:
 }
+static inline int security_socket_listen(struct socket * sock, int backlog)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1211: FILE: include/linux/security.h:1974:
+static inline int security_socket_listen(struct socket * sock, int backlog)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1237: FILE: include/linux/security.h:1979:
 }
+static inline int security_socket_accept(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1237: FILE: include/linux/security.h:1979:
+static inline int security_socket_accept(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1237: FILE: include/linux/security.h:1979:
+static inline int security_socket_accept(struct socket * sock,=20
                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1237: FILE: include/linux/security.h:1979:
+static inline int security_socket_accept(struct socket * sock,=20
                                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1238: FILE: include/linux/security.h:1980:
+					 struct socket * newsock)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1250: FILE: include/linux/security.h:1985:
 }
+static inline void security_socket_post_accept(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1250: FILE: include/linux/security.h:1985:
+static inline void security_socket_post_accept(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1250: FILE: include/linux/security.h:1985:
+static inline void security_socket_post_accept(struct socket * sock,=20
                                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1250: FILE: include/linux/security.h:1985:
+static inline void security_socket_post_accept(struct socket * sock,=20
                                                                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1251: FILE: include/linux/security.h:1986:
+					       struct socket * newsock)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: include/linux/security.h:1989:
+	COND_SECURITY(socket_post_accept(sock, newsock),
+		  SE_NOP);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1264: FILE: include/linux/security.h:1991:
 }
+static inline int security_socket_sendmsg(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1264: FILE: include/linux/security.h:1991:
+static inline int security_socket_sendmsg(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1264: FILE: include/linux/security.h:1991:
+static inline int security_socket_sendmsg(struct socket * sock,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1264: FILE: include/linux/security.h:1991:
+static inline int security_socket_sendmsg(struct socket * sock,=20
                                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1265: FILE: include/linux/security.h:1992:
+					  struct msghdr * msg, int size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1280: FILE: include/linux/security.h:1997:
 }
+static inline int security_socket_recvmsg(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1280: FILE: include/linux/security.h:1997:
+static inline int security_socket_recvmsg(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1280: FILE: include/linux/security.h:1997:
+static inline int security_socket_recvmsg(struct socket * sock,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1280: FILE: include/linux/security.h:1997:
+static inline int security_socket_recvmsg(struct socket * sock,=20
                                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1281: FILE: include/linux/security.h:1998:
+					  struct msghdr * msg, int size,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1281: FILE: include/linux/security.h:1998:
+					  struct msghdr * msg, int size,=20
 					                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1281: FILE: include/linux/security.h:1998:
+					  struct msghdr * msg, int size,=20
 					                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1282: FILE: include/linux/security.h:1999:
+					  struct msghdr * msg, int size,=20
+					  int flags)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1296: FILE: include/linux/security.h:2004:
 }
+static inline int security_socket_getsockname(struct socket * sock)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1296: FILE: include/linux/security.h:2004:
+static inline int security_socket_getsockname(struct socket * sock)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1306: FILE: include/linux/security.h:2009:
 }
+static inline int security_socket_getpeername(struct socket * sock)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1306: FILE: include/linux/security.h:2009:
+static inline int security_socket_getpeername(struct socket * sock)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1321: FILE: include/linux/security.h:2014:
 }
+static inline int security_socket_getsockopt(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1321: FILE: include/linux/security.h:2014:
+static inline int security_socket_getsockopt(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1321: FILE: include/linux/security.h:2014:
+static inline int security_socket_getsockopt(struct socket * sock,=20
                                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1321: FILE: include/linux/security.h:2014:
+static inline int security_socket_getsockopt(struct socket * sock,=20
                                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1336: FILE: include/linux/security.h:2020:
 }
+static inline int security_socket_setsockopt(struct socket * sock,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1336: FILE: include/linux/security.h:2020:
+static inline int security_socket_setsockopt(struct socket * sock,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1336: FILE: include/linux/security.h:2020:
+static inline int security_socket_setsockopt(struct socket * sock,=20
                                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1336: FILE: include/linux/security.h:2020:
+static inline int security_socket_setsockopt(struct socket * sock,=20
                                                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1347: FILE: include/linux/security.h:2026:
 }
+static inline int security_socket_shutdown(struct socket * sock, int how)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1347: FILE: include/linux/security.h:2026:
+static inline int security_socket_shutdown(struct socket * sock, int how)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1363: FILE: include/linux/security.h:2031:
 }
+static inline int security_sock_rcv_skb (struct sock * sk,=20

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1363: FILE: include/linux/security.h:2031:
+static inline int security_sock_rcv_skb (struct sock * sk,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1363: FILE: include/linux/security.h:2031:
+static inline int security_sock_rcv_skb (struct sock * sk,=20
                                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1363: FILE: include/linux/security.h:2031:
+static inline int security_sock_rcv_skb (struct sock * sk,=20
                                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1364: FILE: include/linux/security.h:2032:
+					 struct sk_buff * skb)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1378: FILE: include/linux/security.h:2037:
 }
+static inline int security_socket_getpeersec(struct socket *sock, char __u=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1378: FILE: include/linux/security.h:2037:
+static inline int security_socket_getpeersec(struct socket *sock, char __u=
                                                                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1380: FILE: include/linux/security.h:2038:
+					     int __user *optlen, unsigned len)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1389: FILE: include/linux/security.h:2043:
 }
+static inline int security_sk_alloc(struct sock *sk, int family, int prior=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1389: FILE: include/linux/security.h:2043:
+static inline int security_sk_alloc(struct sock *sk, int family, int prior=
                                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1998: FILE: include/linux/security.h:2051:
+^I^I  ^I 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1998: FILE: include/linux/security.h:2051:
+^I^I  ^I 0);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 68 errors, 104 warnings, 55 checks, 1952 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207269.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
