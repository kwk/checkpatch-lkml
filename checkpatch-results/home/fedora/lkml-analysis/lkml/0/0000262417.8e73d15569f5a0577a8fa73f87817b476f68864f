WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#86: FILE: arch/i386/kernel/i386_ksyms.c:55:
+extern void asmlinkage __spin_lock_failed(spinlock_t *);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#87: FILE: arch/i386/kernel/i386_ksyms.c:56:
+extern void asmlinkage __spin_lock_failed_flags(spinlock_t *, unsigned long);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#87: FILE: arch/i386/kernel/i386_ksyms.c:56:
+extern void asmlinkage __spin_lock_failed_flags(spinlock_t *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#88: FILE: arch/i386/kernel/i386_ksyms.c:57:
+extern void asmlinkage __spin_lock_loop(spinlock_t *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#88: FILE: arch/i386/kernel/i386_ksyms.c:57:
+extern void asmlinkage __spin_lock_loop(spinlock_t *);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#89: FILE: arch/i386/kernel/i386_ksyms.c:58:
+extern void asmlinkage __spin_lock_loop_flags(spinlock_t *, unsigned long);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#89: FILE: arch/i386/kernel/i386_ksyms.c:58:
+extern void asmlinkage __spin_lock_loop_flags(spinlock_t *, unsigned long);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#90: FILE: arch/i386/kernel/i386_ksyms.c:59:
+EXPORT_SYMBOL(__spin_lock_failed);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#91: FILE: arch/i386/kernel/i386_ksyms.c:60:
+EXPORT_SYMBOL(__spin_lock_failed_flags);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#92: FILE: arch/i386/kernel/i386_ksyms.c:61:
+EXPORT_SYMBOL(__spin_lock_loop);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#93: FILE: arch/i386/kernel/i386_ksyms.c:62:
+EXPORT_SYMBOL(__spin_lock_loop_flags);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#121: FILE: arch/i386/lib/spinlock.c:1:
+#define PROC(name)	\

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#123: FILE: arch/i386/lib/spinlock.c:3:
+	".globl " #name"\n" \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#124: FILE: arch/i386/lib/spinlock.c:4:
+	#name":\n"

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#215: FILE: include/asm-i386/spinlock.h:153:
+		:"=m" (lock->lock) : : "memory"
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#229: FILE: include/asm-i386/spinlock.h:173:
+		:"=m" (lock->lock) : "r" (flags) : "memory"
 		^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262417.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 2 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262417.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
