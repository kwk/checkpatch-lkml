ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: drivers/pci/quirks.c:653:
+ * manager. (see the file prog/hotplug/README.p4b in the lm_sensors $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/pci/quirks.c:656:
+ * The SMBus PCI Device can be activated by setting a bit in the ICH LPC $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: drivers/pci/quirks.c:657:
+ * bridge. Unfortunately, this device has no subvendor/subdevice ID. So it $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#69: FILE: drivers/pci/quirks.c:662:
+static int __initdata asus_hides_smbus = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after asus_hides_smbus
#69: FILE: drivers/pci/quirks.c:662:
+static int __initdata asus_hides_smbus = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/pci/quirks.c:669:
+^Iif ((dev->device == PCI_DEVICE_ID_INTEL_82845_HB) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->device == PCI_DEVICE_ID_INTEL_82845_HB'
#76: FILE: drivers/pci/quirks.c:669:
+	if ((dev->device == PCI_DEVICE_ID_INTEL_82845_HB) && 
+	    (dev->subsystem_device == 0x8088)) /* P4B533 */

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->subsystem_device == 0x8088'
#76: FILE: drivers/pci/quirks.c:669:
+	if ((dev->device == PCI_DEVICE_ID_INTEL_82845_HB) && 
+	    (dev->subsystem_device == 0x8088)) /* P4B533 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->device == PCI_DEVICE_ID_INTEL_82845G_HB'
#79: FILE: drivers/pci/quirks.c:672:
+	if ((dev->device == PCI_DEVICE_ID_INTEL_82845G_HB) &&
+	    (dev->subsystem_device == 0x80b2)) /* P4PE */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->subsystem_device == 0x80b2'
#79: FILE: drivers/pci/quirks.c:672:
+	if ((dev->device == PCI_DEVICE_ID_INTEL_82845G_HB) &&
+	    (dev->subsystem_device == 0x80b2)) /* P4PE */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->device == PCI_DEVICE_ID_INTEL_82850_HB'
#82: FILE: drivers/pci/quirks.c:675:
+	if ((dev->device == PCI_DEVICE_ID_INTEL_82850_HB) &&
+	    (dev->subsystem_device == 0x8030)) /* P4T533 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->subsystem_device == 0x8030'
#82: FILE: drivers/pci/quirks.c:675:
+	if ((dev->device == PCI_DEVICE_ID_INTEL_82850_HB) &&
+	    (dev->subsystem_device == 0x8030)) /* P4T533 */

WARNING:RETURN_VOID: void function return statements are not generally useful
#86: FILE: drivers/pci/quirks.c:679:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/pci/quirks.c:684:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: drivers/pci/quirks.c:692:
+		if(val & 0x8)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#100: FILE: drivers/pci/quirks.c:693:
+			printk(KERN_INFO "PCI: i801 SMBus device continues to play 'hide and seek'! 0x%x\n", val);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#100: FILE: drivers/pci/quirks.c:693:
+			printk(KERN_INFO "PCI: i801 SMBus device continues to play 'hide and seek'! 0x%x\n", val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#102: FILE: drivers/pci/quirks.c:695:
+			printk(KERN_INFO "PCI: Enabled i801 SMBus device\n");

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#117: FILE: drivers/pci/quirks.c:780:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82845_HB,	asus_hides_smbus_hostbridge },

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#118: FILE: drivers/pci/quirks.c:781:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82845G_HB,	asus_hides_smbus_hostbridge },

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#119: FILE: drivers/pci/quirks.c:782:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82850_HB,	asus_hides_smbus_hostbridge },

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#120: FILE: drivers/pci/quirks.c:783:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82801DB_0,	asus_hides_smbus_lpc },

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#121: FILE: drivers/pci/quirks.c:784:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82801BA_0,	asus_hides_smbus_lpc },

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 6 checks, 71 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383829.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
