ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#67: 
--- a/arch/i386/config.in	Sat Sep 21 11:44:48 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/sched.h:163:
+extern void sched_balance_exec(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/sched.h:164:
+extern void sched_balance_fork(task_t *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/sched.h:165:
+extern void set_task_node(task_t *p, int node);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: include/linux/sched.h:169:
+#define set_task_node(p,n) {}
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: include/linux/sched.h:498:
+# define HOMENODE_INC(rq,node) (rq)->nr_homenode[node]++
                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#171: FILE: include/linux/sched.h:498:
+# define HOMENODE_INC(rq,node) (rq)->nr_homenode[node]++

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: include/linux/sched.h:499:
+# define HOMENODE_DEC(rq,node) (rq)->nr_homenode[node]--
                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#172: FILE: include/linux/sched.h:499:
+# define HOMENODE_DEC(rq,node) (rq)->nr_homenode[node]--

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: include/linux/sched.h:503:
+# define HOMENODE_INC(rq,node) {}
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: include/linux/sched.h:504:
+# define HOMENODE_DEC(rq,node) {}
                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#188: FILE: kernel/fork.c:704:
+		if (p->node_policy == NODPOL_FORK_ALL ||
[...]
+				sched_balance_fork(p);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: kernel/sched.c:332:
+	HOMENODE_INC(rq,p->node);
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: kernel/sched.c:340:
+	HOMENODE_DEC(rq,p->node);
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#236: FILE: kernel/sched.c:861:
+		if (weight >= MAX_CACHE_WEIGHT) weight=MAX_CACHE_WEIGHT-1;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#236: FILE: kernel/sched.c:861:
+		if (weight >= MAX_CACHE_WEIGHT) weight=MAX_CACHE_WEIGHT-1;
 		                                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#236: FILE: kernel/sched.c:861:
+		if (weight >= MAX_CACHE_WEIGHT) weight=MAX_CACHE_WEIGHT-1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: kernel/sched.c:863:
+		weight += POOL_WEIGHT(this_pool,tmp->node);
 		                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: kernel/sched.c:907:
+	runqueue_t *rq;
+	static int sched_push_task(task_t *p, int cpu_dest);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#264: FILE: kernel/sched.c:916:
+		int load = 0;
+		for (ii=pool_ptr[tgt_pool]; ii<pool_ptr[tgt_pool+1]; ii++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#264: FILE: kernel/sched.c:916:
+		for (ii=pool_ptr[tgt_pool]; ii<pool_ptr[tgt_pool+1]; ii++) {
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#264: FILE: kernel/sched.c:916:
+		for (ii=pool_ptr[tgt_pool]; ii<pool_ptr[tgt_pool+1]; ii++) {
 		                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#264: FILE: kernel/sched.c:916:
+		for (ii=pool_ptr[tgt_pool]; ii<pool_ptr[tgt_pool+1]; ii++) {
 		                                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#270: FILE: kernel/sched.c:922:
+		if (load < BALANCE_FACTOR/4) {
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#298: FILE: kernel/sched.c:2023:
+static atomic_t sched_node=ATOMIC_INIT(0);
                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: kernel/sched.c:2031:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#308: FILE: kernel/sched.c:2033:
+	for (n = pool_ptr[p->node]; n < pool_ptr[p->node+1]; n++) {
 	                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#329: FILE: kernel/sched.c:2054:
+	int n, best_node=0, min_load, pool_load, min_pool=p->node;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#329: FILE: kernel/sched.c:2054:
+	int n, best_node=0, min_load, pool_load, min_pool=p->node;
 	                                                 ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#340: FILE: kernel/sched.c:2065:
+	for (n = 0; n < NR_CPUS; n++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#341: FILE: kernel/sched.c:2066:
+		if (!cpu_online(n)) continue;

WARNING:IF_1: Consider removing the #if 1 and its #endif
#342: FILE: kernel/sched.c:2067:
+#if 1

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#357: FILE: kernel/sched.c:2082:
+		pool_load = (100*load[pool])/pool_nr_cpus[pool];
 		                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#357: FILE: kernel/sched.c:2082:
+		pool_load = (100*load[pool])/pool_nr_cpus[pool];
 		                            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pool_load < min_load'
#358: FILE: kernel/sched.c:2083:
+		if ((pool_load < min_load) && (pool_mask[pool] & mask)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#375: FILE: kernel/sched.c:2100:
+		if (new_node != current->node) {
+			set_task_node(current, new_node);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#405: FILE: kernel/sched.c:2292:
+	if (node < 0 || node >= numpools) return;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#449: FILE: kernel/sched.c:2427:
+		return -1;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#449: FILE: kernel/sched.c:2427:
+	else {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#481: FILE: kernel/sched.c:2619:
+			rq->nr_homenode[j]=0;
 			                  ^

CHECK:SPACING: No space is necessary after a cast
#514: FILE: kernel/sys.c:1375:
+			pid = (int) arg3;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: kernel/sys.c:1379:
+				error = put_user(child->node,(int *)arg2);
 				                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: kernel/sys.c:1381:
+				printk("prctl: could not find process %d\n",pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#520: FILE: kernel/sys.c:1381:
+				printk("prctl: could not find process %d\n",pid);
 				                                           ^

CHECK:SPACING: No space is necessary after a cast
#526: FILE: kernel/sys.c:1387:
+			pid = (int) arg3;

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#530: FILE: kernel/sys.c:1391:
+				if (child->uid == current->uid || \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#532: FILE: kernel/sys.c:1393:
+					printk("setting node of pid %d to %d\n",pid,(int)arg2);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#532: FILE: kernel/sys.c:1393:
+					printk("setting node of pid %d to %d\n",pid,(int)arg2);
 					                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#532: FILE: kernel/sys.c:1393:
+					printk("setting node of pid %d to %d\n",pid,(int)arg2);
 					                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#533: FILE: kernel/sys.c:1394:
+					set_task_node(child,(int)arg2);
 					                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#536: FILE: kernel/sys.c:1397:
+				printk("prctl: could not find pid %d\n",pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: kernel/sys.c:1397:
+				printk("prctl: could not find pid %d\n",pid);
 				                                       ^

CHECK:SPACING: No space is necessary after a cast
#543: FILE: kernel/sys.c:1404:
+			pid = (int) arg3;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: kernel/sys.c:1408:
+				error = put_user(child->node_policy,(int *)arg2);
 				                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#549: FILE: kernel/sys.c:1410:
+				printk("prctl: could not find pid %d\n",pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#549: FILE: kernel/sys.c:1410:
+				printk("prctl: could not find pid %d\n",pid);
 				                                       ^

CHECK:SPACING: No space is necessary after a cast
#555: FILE: kernel/sys.c:1416:
+			pid = (int) arg3;

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#559: FILE: kernel/sys.c:1420:
+				if (child->uid == current->uid || \

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#561: FILE: kernel/sys.c:1422:
+					printk("setting node policy of process %d to %d\n",pid,(int)arg2);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#561: FILE: kernel/sys.c:1422:
+					printk("setting node policy of process %d to %d\n",pid,(int)arg2);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#561: FILE: kernel/sys.c:1422:
+					printk("setting node policy of process %d to %d\n",pid,(int)arg2);
 					                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#561: FILE: kernel/sys.c:1422:
+					printk("setting node policy of process %d to %d\n",pid,(int)arg2);
 					                                                      ^

CHECK:SPACING: No space is necessary after a cast
#562: FILE: kernel/sys.c:1423:
+					child->node_policy = (int) arg2;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#565: FILE: kernel/sys.c:1426:
+				printk("prctl: could not find pid %d\n",pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: kernel/sys.c:1426:
+				printk("prctl: could not find pid %d\n",pid);
 				                                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431015.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 16 warnings, 16 checks, 452 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431015.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
