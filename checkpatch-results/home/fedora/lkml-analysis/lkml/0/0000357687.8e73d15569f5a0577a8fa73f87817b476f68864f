WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -X dontdiff -Naur linux-2.5.74-vanilla/include/asm-parisc/atomic.h linux-2.5.74-nx/include/asm-parisc/atomic.h

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#74: FILE: include/asm-parisc/atomic.h:202:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#74: FILE: include/asm-parisc/atomic.h:202:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#74: FILE: include/asm-parisc/atomic.h:202:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#82: FILE: include/asm-parisc/atomic.h:210:
+	#warning need to check implementation linux/include/asm-parisc/atomic.h: locked_add64() for 32-bit environment

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#82: FILE: include/asm-parisc/atomic.h:210:
+	#warning need to check implementation linux/include/asm-parisc/atomic.h: locked_add64() for 32-bit environment

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#86: FILE: include/asm-parisc/atomic.h:214:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#86: FILE: include/asm-parisc/atomic.h:214:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#86: FILE: include/asm-parisc/atomic.h:214:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#94: FILE: include/asm-parisc/atomic.h:222:
+	#warning need to check implementation linux/include/asm-parisc/atomic.h: locked_set64() for 32-bit environment

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#94: FILE: include/asm-parisc/atomic.h:222:
+	#warning need to check implementation linux/include/asm-parisc/atomic.h: locked_set64() for 32-bit environment

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#98: FILE: include/asm-parisc/atomic.h:226:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#98: FILE: include/asm-parisc/atomic.h:226:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#98: FILE: include/asm-parisc/atomic.h:226:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#103: FILE: include/asm-parisc/atomic.h:231:
+	u_int64_t tmp;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#108: FILE: include/asm-parisc/atomic.h:236:
+	#warning need to check implementation linux/include/asm-parisc/atomic.h: locked_get64() for 32-bit environment

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#108: FILE: include/asm-parisc/atomic.h:236:
+	#warning need to check implementation linux/include/asm-parisc/atomic.h: locked_get64() for 32-bit environment

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: include/asm-ppc/atomic.h:4:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/asm-ppc/atomic.h:4:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#135: FILE: include/asm-ppc/atomic.h:210:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#135: FILE: include/asm-ppc/atomic.h:210:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#135: FILE: include/asm-ppc/atomic.h:210:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#143: FILE: include/asm-ppc/atomic.h:218:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#143: FILE: include/asm-ppc/atomic.h:218:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#143: FILE: include/asm-ppc/atomic.h:218:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#151: FILE: include/asm-ppc/atomic.h:226:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#151: FILE: include/asm-ppc/atomic.h:226:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#151: FILE: include/asm-ppc/atomic.h:226:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#153: FILE: include/asm-ppc/atomic.h:228:
+	u_int64_t tmp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#185: FILE: include/asm-ppc64/atomic.h:192:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#185: FILE: include/asm-ppc64/atomic.h:192:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#185: FILE: include/asm-ppc64/atomic.h:192:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#193: FILE: include/asm-ppc64/atomic.h:200:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#193: FILE: include/asm-ppc64/atomic.h:200:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#193: FILE: include/asm-ppc64/atomic.h:200:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#201: FILE: include/asm-ppc64/atomic.h:208:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#201: FILE: include/asm-ppc64/atomic.h:208:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#201: FILE: include/asm-ppc64/atomic.h:208:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#203: FILE: include/asm-ppc64/atomic.h:210:
+	u_int64_t tmp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: include/asm-s390/atomic.h:11:
+ *  $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#231: FILE: include/asm-s390/atomic.h:172:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#231: FILE: include/asm-s390/atomic.h:172:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#231: FILE: include/asm-s390/atomic.h:172:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#239: FILE: include/asm-s390/atomic.h:180:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#239: FILE: include/asm-s390/atomic.h:180:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#239: FILE: include/asm-s390/atomic.h:180:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#247: FILE: include/asm-s390/atomic.h:188:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#247: FILE: include/asm-s390/atomic.h:188:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#247: FILE: include/asm-s390/atomic.h:188:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#249: FILE: include/asm-s390/atomic.h:190:
+	u_int64_t tmp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: include/asm-sh/atomic.h:9:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: include/asm-sh/atomic.h:9:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#281: FILE: include/asm-sh/atomic.h:109:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#281: FILE: include/asm-sh/atomic.h:109:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#281: FILE: include/asm-sh/atomic.h:109:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#289: FILE: include/asm-sh/atomic.h:117:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#289: FILE: include/asm-sh/atomic.h:117:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#289: FILE: include/asm-sh/atomic.h:117:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#297: FILE: include/asm-sh/atomic.h:125:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#297: FILE: include/asm-sh/atomic.h:125:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#297: FILE: include/asm-sh/atomic.h:125:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#299: FILE: include/asm-sh/atomic.h:127:
+	u_int64_t tmp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#330: FILE: include/asm-sparc/atomic.h:116:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#330: FILE: include/asm-sparc/atomic.h:116:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#330: FILE: include/asm-sparc/atomic.h:116:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#338: FILE: include/asm-sparc/atomic.h:124:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#338: FILE: include/asm-sparc/atomic.h:124:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#338: FILE: include/asm-sparc/atomic.h:124:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#346: FILE: include/asm-sparc/atomic.h:132:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#346: FILE: include/asm-sparc/atomic.h:132:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#346: FILE: include/asm-sparc/atomic.h:132:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#348: FILE: include/asm-sparc/atomic.h:134:
+	u_int64_t tmp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#377: FILE: include/asm-sparc64/atomic.h:41:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#377: FILE: include/asm-sparc64/atomic.h:41:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#377: FILE: include/asm-sparc64/atomic.h:41:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#382: FILE: include/asm-sparc64/atomic.h:46:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#382: FILE: include/asm-sparc64/atomic.h:46:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#382: FILE: include/asm-sparc64/atomic.h:46:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#387: FILE: include/asm-sparc64/atomic.h:51:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#387: FILE: include/asm-sparc64/atomic.h:51:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#387: FILE: include/asm-sparc64/atomic.h:51:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#409: FILE: include/asm-um/atomic.h:13:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#409: FILE: include/asm-um/atomic.h:13:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#409: FILE: include/asm-um/atomic.h:13:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#417: FILE: include/asm-um/atomic.h:21:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#417: FILE: include/asm-um/atomic.h:21:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#417: FILE: include/asm-um/atomic.h:21:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#425: FILE: include/asm-um/atomic.h:29:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#425: FILE: include/asm-um/atomic.h:29:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#425: FILE: include/asm-um/atomic.h:29:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#427: FILE: include/asm-um/atomic.h:31:
+	u_int64_t tmp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#458: FILE: include/asm-v850/atomic.h:96:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#458: FILE: include/asm-v850/atomic.h:96:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#458: FILE: include/asm-v850/atomic.h:96:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#466: FILE: include/asm-v850/atomic.h:104:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#466: FILE: include/asm-v850/atomic.h:104:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#466: FILE: include/asm-v850/atomic.h:104:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#474: FILE: include/asm-v850/atomic.h:112:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#474: FILE: include/asm-v850/atomic.h:112:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#474: FILE: include/asm-v850/atomic.h:112:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#476: FILE: include/asm-v850/atomic.h:114:
+	u_int64_t tmp;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#507: FILE: include/asm-x86_64/atomic.h:213:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#507: FILE: include/asm-x86_64/atomic.h:213:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#507: FILE: include/asm-x86_64/atomic.h:213:
+static inline void locked_add64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#512: FILE: include/asm-x86_64/atomic.h:218:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#512: FILE: include/asm-x86_64/atomic.h:218:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#512: FILE: include/asm-x86_64/atomic.h:218:
+static inline void locked_set64(u_int64_t* a, u_int64_t b, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#517: FILE: include/asm-x86_64/atomic.h:223:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#517: FILE: include/asm-x86_64/atomic.h:223:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#517: FILE: include/asm-x86_64/atomic.h:223:
+static inline u_int64_t locked_get64(u_int64_t* a, spinlock_t* lock)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357687.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 63 errors, 9 warnings, 38 checks, 417 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357687.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
