WARNING:TYPO_SPELLING: 'visisble' may be misspelled - perhaps 'visible'?
#23: 
There are a number of changes in kernel API visisble to userspace that
                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
just screwed as we just need a wrapper anyways to make complex programs like

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#116: FILE: include/linux/sched.h:406:
+#define PF_EXITING	(1UL<<0)	/* getting shut down */
                   	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: include/linux/sched.h:406:
+#define PF_EXITING	(1UL<<0)	/* getting shut down */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#117: FILE: include/linux/sched.h:407:
+#define PF_FORKNOEXEC	(1UL<<1)	/* forked but didn't exec */
                      	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: include/linux/sched.h:407:
+#define PF_FORKNOEXEC	(1UL<<1)	/* forked but didn't exec */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: include/linux/sched.h:408:
+#define PF_SUPERPRIV	(1UL<<2)	/* used super-user privileges */
                     	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#118: FILE: include/linux/sched.h:408:
+#define PF_SUPERPRIV	(1UL<<2)	/* used super-user privileges */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: include/linux/sched.h:409:
+#define PF_DUMPCORE	(1UL<<3)	/* dumped core */
                    	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#119: FILE: include/linux/sched.h:409:
+#define PF_DUMPCORE	(1UL<<3)	/* dumped core */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#120: FILE: include/linux/sched.h:410:
+#define PF_SIGNALED	(1UL<<4)	/* killed by a signal */
                    	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#120: FILE: include/linux/sched.h:410:
+#define PF_SIGNALED	(1UL<<4)	/* killed by a signal */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#121: FILE: include/linux/sched.h:411:
+#define PF_MEMALLOC	(1UL<<5)	/* Allocating memory */
                    	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#121: FILE: include/linux/sched.h:411:
+#define PF_MEMALLOC	(1UL<<5)	/* Allocating memory */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#122: FILE: include/linux/sched.h:412:
+#define PF_VFORK	(1UL<<6)	/* Wake up parent in mm_release */
                 	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#122: FILE: include/linux/sched.h:412:
+#define PF_VFORK	(1UL<<6)	/* Wake up parent in mm_release */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#123: FILE: include/linux/sched.h:413:
+#define PF_USEDFPU	(1UL<<7)	/* task used FPU this quantum (SMP) */
                   	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#123: FILE: include/linux/sched.h:413:
+#define PF_USEDFPU	(1UL<<7)	/* task used FPU this quantum (SMP) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#124: FILE: include/linux/sched.h:414:
+#define PF_ATOMICALLOC	(1UL<<8)	/* do not block during memalloc */
                       	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#124: FILE: include/linux/sched.h:414:
+#define PF_ATOMICALLOC	(1UL<<8)	/* do not block during memalloc */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#271: FILE: include/linux/sysctl.h:160:
+	NET_KHTTPD=17,
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#272: FILE: include/linux/sysctl.h:161:
+	NET_TUX=18
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: fs/proc/proc_misc.c:262:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: fs/proc/proc_misc.c:268:
+static int print_tux_procinfo (char *page)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#357: FILE: fs/proc/proc_misc.c:272:
+#define P(x) \
+	do { len += sprintf(page + len, #x ": %u\n", x); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: fs/proc/proc_misc.c:273:
+	do { len += sprintf(page + len, #x ": %u\n", x); } while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#415: FILE: fs/proc/proc_misc.c:397:
+	len += print_tux_procinfo(page+len);
 	                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000529239.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 20 checks, 333 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000529239.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
