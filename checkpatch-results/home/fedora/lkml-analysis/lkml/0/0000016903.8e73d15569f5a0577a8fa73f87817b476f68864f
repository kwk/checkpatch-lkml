WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#41: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: drivers/net/atl1/atl1_ethtool.c:1:
+/** atl1_ethtool.c - atl1 ethtool support

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#47: FILE: drivers/net/atl1/atl1_ethtool.c:2:
+/** atl1_ethtool.c - atl1 ethtool support
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: drivers/net/atl1/atl1_ethtool.c:21:
+this program; if not, write to the Free Software Foundation, Inc., 59$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#75: FILE: drivers/net/atl1/atl1_ethtool.c:30:
+#include <asm/uaccess.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#78: FILE: drivers/net/atl1/atl1_ethtool.c:33:
+extern char at_driver_version[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#79: FILE: drivers/net/atl1/atl1_ethtool.c:34:
+extern s32 at_up(struct at_adapter *adapter);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#80: FILE: drivers/net/atl1/atl1_ethtool.c:35:
+extern void at_down(struct at_adapter *adapter);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#81: FILE: drivers/net/atl1/atl1_ethtool.c:36:
+extern void at_reset(struct at_adapter *adapter);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#82: FILE: drivers/net/atl1/atl1_ethtool.c:37:
+extern s32 at_setup_ring_resources(struct at_adapter *adapter);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#83: FILE: drivers/net/atl1/atl1_ethtool.c:38:
+extern void at_free_ring_resources(struct at_adapter *adapter);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: drivers/net/atl1/atl1_ethtool.c:39:
+extern s32 at_phy_setup_autoneg_adv(struct at_hw *hw);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#85: FILE: drivers/net/atl1/atl1_ethtool.c:40:
+extern s32 at_write_phy_reg(struct at_hw *hw, u32 reg_addr, u16 phy_data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: drivers/net/atl1/atl1_ethtool.c:41:
+extern s32 at_get_speed_and_duplex(struct at_hw *hw, u16 * speed, u16 * duplex);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: drivers/net/atl1/atl1_ethtool.c:41:
+extern s32 at_get_speed_and_duplex(struct at_hw *hw, u16 * speed, u16 * duplex);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#86: FILE: drivers/net/atl1/atl1_ethtool.c:41:
+extern s32 at_get_speed_and_duplex(struct at_hw *hw, u16 * speed, u16 * duplex);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#95: FILE: drivers/net/atl1/atl1_ethtool.c:50:
+#define AT_STAT(m) sizeof(((struct at_adapter *)0)->m), \
+	offsetof(struct at_adapter, m)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#95: FILE: drivers/net/atl1/atl1_ethtool.c:50:
+#define AT_STAT(m) sizeof(((struct at_adapter *)0)->m), \
+	offsetof(struct at_adapter, m)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#95: FILE: drivers/net/atl1/atl1_ethtool.c:50:
+#define AT_STAT(m) sizeof(((struct at_adapter *)0)->m), \
+	offsetof(struct at_adapter, m)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#132: FILE: drivers/net/atl1/atl1_ethtool.c:87:
+#define AT_STATS_LEN sizeof(at_gstrings_stats) / sizeof(struct at_stats)

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#140: FILE: drivers/net/atl1/atl1_ethtool.c:95:
+	ecmd->supported = (SUPPORTED_10baseT_Half |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Full>
#141: FILE: drivers/net/atl1/atl1_ethtool.c:96:
+			   SUPPORTED_10baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Half>
#142: FILE: drivers/net/atl1/atl1_ethtool.c:97:
+			   SUPPORTED_100baseT_Half |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Full>
#143: FILE: drivers/net/atl1/atl1_ethtool.c:98:
+			   SUPPORTED_100baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#144: FILE: drivers/net/atl1/atl1_ethtool.c:99:
+			   SUPPORTED_1000baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10baseT_Half>
#153: FILE: drivers/net/atl1/atl1_ethtool.c:108:
+			    (ADVERTISED_10baseT_Half |

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10baseT_Full>
#154: FILE: drivers/net/atl1/atl1_ethtool.c:109:
+			     ADVERTISED_10baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_100baseT_Half>
#155: FILE: drivers/net/atl1/atl1_ethtool.c:110:
+			     ADVERTISED_100baseT_Half |

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_100baseT_Full>
#156: FILE: drivers/net/atl1/atl1_ethtool.c:111:
+			     ADVERTISED_100baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_1000baseT_Full>
#157: FILE: drivers/net/atl1/atl1_ethtool.c:112:
+			     ADVERTISED_1000baseT_Full);

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: drivers/net/atl1/atl1_ethtool.c:123:
+		u16 link_speed, link_duplex;
+		at_get_speed_and_duplex(hw, &link_speed, &link_duplex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/net/atl1/atl1_ethtool.c:139:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/net/atl1/atl1_ethtool.c:152:
+^I^Iprintk(KERN_DEBUG "%s: ethtool shutting down link adapter\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: drivers/net/atl1/atl1_ethtool.c:152:
+		printk(KERN_DEBUG "%s: ethtool shutting down link adapter\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/net/atl1/atl1_ethtool.c:153:
+		printk(KERN_DEBUG "%s: ethtool shutting down link adapter\n", 
+			at_driver_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#207: FILE: drivers/net/atl1/atl1_ethtool.c:162:
+				printk(KERN_WARNING

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#215: FILE: drivers/net/atl1/atl1_ethtool.c:170:
+			if (ecmd->duplex == DUPLEX_FULL) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#221: FILE: drivers/net/atl1/atl1_ethtool.c:176:
+			if (ecmd->duplex == DUPLEX_FULL) {
[...]
+			} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: drivers/net/atl1/atl1_ethtool.c:204:
+^I^Iprintk(KERN_WARNING $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#249: FILE: drivers/net/atl1/atl1_ethtool.c:204:
+		printk(KERN_WARNING 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: drivers/net/atl1/atl1_ethtool.c:205:
+^I^I^I"%s: invalid ethtool speed/duplex setting\n", $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#278: FILE: drivers/net/atl1/atl1_ethtool.c:233:
+	if (ret_val) {
+		hw->media_type = old_media_type;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/net/atl1/atl1_ethtool.c:237:
+^I^Iprintk(KERN_DEBUG "%s: ethtool starting link adapter\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#282: FILE: drivers/net/atl1/atl1_ethtool.c:237:
+		printk(KERN_DEBUG "%s: ethtool starting link adapter\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/net/atl1/atl1_ethtool.c:238:
+		printk(KERN_DEBUG "%s: ethtool starting link adapter\n", 
+			at_driver_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/net/atl1/atl1_ethtool.c:241:
+^I^Iprintk(KERN_DEBUG "%s: ethtool resetting link adapter\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#286: FILE: drivers/net/atl1/atl1_ethtool.c:241:
+		printk(KERN_DEBUG "%s: ethtool resetting link adapter\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/net/atl1/atl1_ethtool.c:242:
+		printk(KERN_DEBUG "%s: ethtool resetting link adapter\n", 
+			at_driver_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: drivers/net/atl1/atl1_ethtool.c:249:
+static void at_get_drvinfo(struct net_device *netdev,
+				struct ethtool_drvinfo *drvinfo)

ERROR:SPACING: exactly one space required after that #ifdef
#302: FILE: drivers/net/atl1/atl1_ethtool.c:257:
+#ifdef  ETHTOOL_GEEPROM

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/net/atl1/atl1_ethtool.c:263:
+static void at_get_wol(struct net_device *netdev,
+			    struct ethtool_wolinfo *wol)

WARNING:RETURN_VOID: void function return statements are not generally useful
#323: FILE: drivers/net/atl1/atl1_ethtool.c:278:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: drivers/net/atl1/atl1_ethtool.c:281:
+static int at_set_wol(struct net_device *netdev,
+			struct ethtool_wolinfo *wol)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: drivers/net/atl1/atl1_ethtool.c:300:
+static void at_get_ringparam(struct net_device *netdev,
+			    struct ethtool_ringparam *ring)

CHECK:SPACING: No space is necessary after a cast
#381: FILE: drivers/net/atl1/atl1_ethtool.c:336:
+	rfdr->count = (u16) max(ring->rx_pending, (u32) 32);

WARNING:MINMAX: max() should probably be max_t(u32, ring->rx_pending, 32)
#381: FILE: drivers/net/atl1/atl1_ethtool.c:336:
+	rfdr->count = (u16) max(ring->rx_pending, (u32) 32);

CHECK:SPACING: No space is necessary after a cast
#386: FILE: drivers/net/atl1/atl1_ethtool.c:341:
+	tpdr->count = (u16) max(ring->tx_pending, (u32) 16);

WARNING:MINMAX: max() should probably be max_t(u32, ring->tx_pending, 16)
#386: FILE: drivers/net/atl1/atl1_ethtool.c:341:
+	tpdr->count = (u16) max(ring->tx_pending, (u32) 16);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: drivers/net/atl1/atl1_ethtool.c:347:
+		if ((err = at_setup_ring_resources(adapter)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#396: FILE: drivers/net/atl1/atl1_ethtool.c:351:
+		 * then restore the new back again */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#408: FILE: drivers/net/atl1/atl1_ethtool.c:363:
+		if ((err = at_up(adapter)))

WARNING:INDENTED_LABEL: labels should not be indented
#413: FILE: drivers/net/atl1/atl1_ethtool.c:368:
+      err_setup_ring:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/net/atl1/atl1_ethtool.c:377:
+static void at_get_pauseparam(struct net_device *netdev,
+			     struct ethtool_pauseparam *epause)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/net/atl1/atl1_ethtool.c:446:
+			memcpy(p, at_gstrings_stats[i].stat_string,
+				ETH_GSTRING_LEN);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: drivers/net/atl1/atl1_ethtool.c:456:
+^Istruct at_hw *hw = &adapter->hw;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: drivers/net/atl1/atl1_ethtool.c:457:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#505: FILE: drivers/net/atl1/atl1_ethtool.c:460:
+		u16 phy_data;
+		at_down(adapter);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/net/atl1/atl1_ethtool.c:463:
+		if (hw->media_type == MEDIA_TYPE_AUTO_SENSOR ||
+			hw->media_type == MEDIA_TYPE_1000M_FULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/net/atl1/atl1_ethtool.c:473:
+^I^I^I^Ibreak;^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/net/atl1/atl1_ethtool.c:489:
+static void at_get_ethtool_stats(struct net_device *netdev,
+		struct ethtool_stats *stats, u64 *data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#540: FILE: drivers/net/atl1/atl1_ethtool.c:495:
+		char *p = (char *)adapter+at_gstrings_stats[i].stat_offset;
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: drivers/net/atl1/atl1_ethtool.c:496:
+		char *p = (char *)adapter+at_gstrings_stats[i].stat_offset;
+		data[i] = (at_gstrings_stats[i].sizeof_stat ==

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#545: FILE: drivers/net/atl1/atl1_ethtool.c:500:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#556: FILE: drivers/net/atl1/atl1_ethtool.c:511:
+^I.set_pauseparam ^I= at_set_pauseparam,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#582: FILE: drivers/net/atl1/atl1_hw.c:1:
+/** atl1_hw.c - atl1 hardware operations

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#583: FILE: drivers/net/atl1/atl1_hw.c:2:
+/** atl1_hw.c - atl1 hardware operations
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#602: FILE: drivers/net/atl1/atl1_hw.c:21:
+this program; if not, write to the Free Software Foundation, Inc., 59$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#615: FILE: drivers/net/atl1/atl1_hw.c:34:
+/**
+FIXME: are we keeping this?

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: drivers/net/atl1/atl1_hw.c:38:
+ * This is slow but compact code.  Do not use this routine $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/net/atl1/atl1_hw.c:41:
+ * Chips may use the upper or lower CRC bits, and may reverse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: drivers/net/atl1/atl1_hw.c:42:
+ * and/or invert them.  Select the endian-ness that results $

WARNING:LINE_SPACING: Missing a blank line after declarations
#629: FILE: drivers/net/atl1/atl1_hw.c:48:
+	u32 crc = ~0;		/* Initial value. */
+	while (--length >= 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#632: FILE: drivers/net/atl1/atl1_hw.c:51:
+		int bit;
+		for (bit = 8; --bit >= 0; current_octet >>= 1) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#633: FILE: drivers/net/atl1/atl1_hw.c:52:
+			if ((crc ^ current_octet) & 1) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#636: FILE: drivers/net/atl1/atl1_hw.c:55:
+			} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#643: FILE: drivers/net/atl1/atl1_hw.c:62:
+void at_read_pci_cfg(struct at_hw *hw, u32 reg, u16 * value)

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: drivers/net/atl1/atl1_hw.c:64:
+        struct at_adapter *adapter = hw->back;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/net/atl1/atl1_hw.c:64:
+        struct at_adapter *adapter = hw->back;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: drivers/net/atl1/atl1_hw.c:65:
+        pci_read_config_word(adapter->pdev, reg, value);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#646: FILE: drivers/net/atl1/atl1_hw.c:65:
+        struct at_adapter *adapter = hw->back;
+        pci_read_config_word(adapter->pdev, reg, value);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/net/atl1/atl1_hw.c:65:
+        pci_read_config_word(adapter->pdev, reg, value);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#649: FILE: drivers/net/atl1/atl1_hw.c:68:
+void at_write_pci_cfg(struct at_hw *hw, u32 reg, u16 * value)

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: drivers/net/atl1/atl1_hw.c:70:
+        struct at_adapter *adapter = hw->back;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/net/atl1/atl1_hw.c:70:
+        struct at_adapter *adapter = hw->back;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: drivers/net/atl1/atl1_hw.c:71:
+        pci_write_config_word(adapter->pdev, reg, *value);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#652: FILE: drivers/net/atl1/atl1_hw.c:71:
+        struct at_adapter *adapter = hw->back;
+        pci_write_config_word(adapter->pdev, reg, *value);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/net/atl1/atl1_hw.c:71:
+        pci_write_config_word(adapter->pdev, reg, *value);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: drivers/net/atl1/atl1_hw.c:79:
+s32 at_reset_hw(struct at_hw * hw)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: drivers/net/atl1/atl1_hw.c:96:
+^I * interrupts & Clear any pending interrupt events $

WARNING:MEMORY_BARRIER: memory barrier without comment
#688: FILE: drivers/net/atl1/atl1_hw.c:107:
+	wmb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#703: FILE: drivers/net/atl1/atl1_hw.c:122:
+	if (icr) {
+		return icr;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#710: FILE: drivers/net/atl1/atl1_hw.c:129:
+static inline bool eth_address_valid(u8 * p_addr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_addr[0] == 0'
#713: FILE: drivers/net/atl1/atl1_hw.c:132:
+	if (((p_addr[0] == 0) &&
+	     (p_addr[1] == 0) &&
+	     (p_addr[2] == 0) &&
+	     (p_addr[3] == 0) && (p_addr[4] == 0) && (p_addr[5] == 0)
+	    ) || (p_addr[0] & 1)) {	/* Multicast address or Broadcast Address */

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_addr[1] == 0'
#713: FILE: drivers/net/atl1/atl1_hw.c:132:
+	if (((p_addr[0] == 0) &&
+	     (p_addr[1] == 0) &&
+	     (p_addr[2] == 0) &&
+	     (p_addr[3] == 0) && (p_addr[4] == 0) && (p_addr[5] == 0)
+	    ) || (p_addr[0] & 1)) {	/* Multicast address or Broadcast Address */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_addr[2] == 0'
#713: FILE: drivers/net/atl1/atl1_hw.c:132:
+	if (((p_addr[0] == 0) &&
+	     (p_addr[1] == 0) &&
+	     (p_addr[2] == 0) &&
+	     (p_addr[3] == 0) && (p_addr[4] == 0) && (p_addr[5] == 0)
+	    ) || (p_addr[0] & 1)) {	/* Multicast address or Broadcast Address */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_addr[3] == 0'
#713: FILE: drivers/net/atl1/atl1_hw.c:132:
+	if (((p_addr[0] == 0) &&
+	     (p_addr[1] == 0) &&
+	     (p_addr[2] == 0) &&
+	     (p_addr[3] == 0) && (p_addr[4] == 0) && (p_addr[5] == 0)
+	    ) || (p_addr[0] & 1)) {	/* Multicast address or Broadcast Address */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_addr[4] == 0'
#713: FILE: drivers/net/atl1/atl1_hw.c:132:
+	if (((p_addr[0] == 0) &&
+	     (p_addr[1] == 0) &&
+	     (p_addr[2] == 0) &&
+	     (p_addr[3] == 0) && (p_addr[4] == 0) && (p_addr[5] == 0)
+	    ) || (p_addr[0] & 1)) {	/* Multicast address or Broadcast Address */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p_addr[5] == 0'
#713: FILE: drivers/net/atl1/atl1_hw.c:132:
+	if (((p_addr[0] == 0) &&
+	     (p_addr[1] == 0) &&
+	     (p_addr[2] == 0) &&
+	     (p_addr[3] == 0) && (p_addr[4] == 0) && (p_addr[5] == 0)
+	    ) || (p_addr[0] & 1)) {	/* Multicast address or Broadcast Address */

WARNING:LINE_SPACING: Missing a blank line after declarations
#731: FILE: drivers/net/atl1/atl1_hw.c:150:
+	u32 value;
+	value = AT_READ_REG(hw, REG_SPI_FLASH_CTRL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#740: FILE: drivers/net/atl1/atl1_hw.c:159:
+static bool read_eeprom(struct at_hw *hw, u32 offset, u32 * p_value)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#770: FILE: drivers/net/atl1/atl1_hw.c:189:
+s32 at_read_phy_reg(struct at_hw * hw, u16 reg_addr, u16 * phy_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#770: FILE: drivers/net/atl1/atl1_hw.c:189:
+s32 at_read_phy_reg(struct at_hw * hw, u16 reg_addr, u16 * phy_data)

CHECK:SPACING: No space is necessary after a cast
#775: FILE: drivers/net/atl1/atl1_hw.c:194:
+	val = ((u32) (reg_addr & MDIO_REG_ADDR_MASK)) << MDIO_REG_ADDR_SHIFT |

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: drivers/net/atl1/atl1_hw.c:195:
+^I    ^IMDIO_START | MDIO_SUP_PREAMBLE | MDIO_RW | MDIO_CLK_25_4 <<$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#776: FILE: drivers/net/atl1/atl1_hw.c:195:
+^I    ^IMDIO_START | MDIO_SUP_PREAMBLE | MDIO_RW | MDIO_CLK_25_4 <<$

ERROR:CODE_INDENT: code indent should use tabs where possible
#777: FILE: drivers/net/atl1/atl1_hw.c:196:
+ ^I^IMDIO_CLK_SEL_SHIFT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#777: FILE: drivers/net/atl1/atl1_hw.c:196:
+ ^I^IMDIO_CLK_SEL_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/net/atl1/atl1_hw.c:196:
+ ^I^IMDIO_CLK_SEL_SHIFT;$

WARNING:MEMORY_BARRIER: memory barrier without comment
#780: FILE: drivers/net/atl1/atl1_hw.c:199:
+	wmb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#785: FILE: drivers/net/atl1/atl1_hw.c:204:
+		if (!(val & (MDIO_START | MDIO_BUSY))) {
+			break;
+		}

WARNING:MEMORY_BARRIER: memory barrier without comment
#788: FILE: drivers/net/atl1/atl1_hw.c:207:
+		wmb();

CHECK:SPACING: No space is necessary after a cast
#791: FILE: drivers/net/atl1/atl1_hw.c:210:
+		*phy_data = (u16) val;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#803: FILE: drivers/net/atl1/atl1_hw.c:222:
+static bool spi_read(struct at_hw *hw, u32 addr, u32 * buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: drivers/net/atl1/atl1_hw.c:266:
+ * return 0 if get valid mac address, $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#861: FILE: drivers/net/atl1/atl1_hw.c:280:
+	addr[0] = addr[1] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#871: FILE: drivers/net/atl1/atl1_hw.c:290:
+					if (reg == REG_MAC_STA_ADDR)
[...]
+					else if (reg == (REG_MAC_STA_ADDR + 4)) {
[...]

CHECK:SPACING: No space is necessary after a cast
#879: FILE: drivers/net/atl1/atl1_hw.c:298:
+					reg = (u16) (control >> 16);

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#881: FILE: drivers/net/atl1/atl1_hw.c:300:
+					break;	/* assume data end while encount an invalid KEYWORD */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#889: FILE: drivers/net/atl1/atl1_hw.c:308:
+		*(u32 *) & eth_addr[2] = LONGSWAP(addr[0]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#889: FILE: drivers/net/atl1/atl1_hw.c:308:
+		*(u32 *) & eth_addr[2] = LONGSWAP(addr[0]);
 		         ^

CHECK:SPACING: No space is necessary after a cast
#890: FILE: drivers/net/atl1/atl1_hw.c:309:
+		*(u16 *) & eth_addr[0] = SHORTSWAP(*(u16 *) & addr[1]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#890: FILE: drivers/net/atl1/atl1_hw.c:309:
+		*(u16 *) & eth_addr[0] = SHORTSWAP(*(u16 *) & addr[1]);
 		         ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#890: FILE: drivers/net/atl1/atl1_hw.c:309:
+		*(u16 *) & eth_addr[0] = SHORTSWAP(*(u16 *) & addr[1]);
 		                                            ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#900: FILE: drivers/net/atl1/atl1_hw.c:319:
+	addr[0] = addr[1] = 0;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#907: FILE: drivers/net/atl1/atl1_hw.c:326:
+				if (reg == REG_MAC_STA_ADDR)
[...]
+				else if (reg == (REG_MAC_STA_ADDR + 4)) {
[...]

CHECK:SPACING: No space is necessary after a cast
#915: FILE: drivers/net/atl1/atl1_hw.c:334:
+				reg = (u16) (control >> 16);

CHECK:SPACING: No space is necessary after a cast
#925: FILE: drivers/net/atl1/atl1_hw.c:344:
+	*(u32 *) & eth_addr[2] = LONGSWAP(addr[0]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#925: FILE: drivers/net/atl1/atl1_hw.c:344:
+	*(u32 *) & eth_addr[2] = LONGSWAP(addr[0]);
 	         ^

CHECK:SPACING: No space is necessary after a cast
#926: FILE: drivers/net/atl1/atl1_hw.c:345:
+	*(u16 *) & eth_addr[0] = SHORTSWAP(*(u16 *) & addr[1]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#926: FILE: drivers/net/atl1/atl1_hw.c:345:
+	*(u16 *) & eth_addr[0] = SHORTSWAP(*(u16 *) & addr[1]);
 	         ^

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#926: FILE: drivers/net/atl1/atl1_hw.c:345:
+	*(u16 *) & eth_addr[0] = SHORTSWAP(*(u16 *) & addr[1]);
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: drivers/net/atl1/atl1_hw.c:354:
+ * Reads the adapter's MAC address from the EEPROM $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#938: FILE: drivers/net/atl1/atl1_hw.c:357:
+s32 at_read_mac_addr(struct at_hw * hw)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#967: FILE: drivers/net/atl1/atl1_hw.c:386:
+u32 at_hash_mc_addr(struct at_hw * hw, u8 * mc_addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#967: FILE: drivers/net/atl1/atl1_hw.c:386:
+u32 at_hash_mc_addr(struct at_hw * hw, u8 * mc_addr)

CHECK:SPACING: No space is necessary after a cast
#1019: FILE: drivers/net/atl1/atl1_hw.c:438:
+	val = ((u32) (phy_data & MDIO_DATA_MASK)) << MDIO_DATA_SHIFT |

WARNING:MEMORY_BARRIER: memory barrier without comment
#1025: FILE: drivers/net/atl1/atl1_hw.c:444:
+	wmb();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1030: FILE: drivers/net/atl1/atl1_hw.c:449:
+		if (!(val & (MDIO_START | MDIO_BUSY))) {
+			break;
+		}

WARNING:MEMORY_BARRIER: memory barrier without comment
#1033: FILE: drivers/net/atl1/atl1_hw.c:452:
+		wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#1051: FILE: drivers/net/atl1/atl1_hw.c:470:
+	s32 ret;
+	if ((ret = at_write_phy_reg(hw, 29, 0x0029)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1051: FILE: drivers/net/atl1/atl1_hw.c:470:
+	if ((ret = at_write_phy_reg(hw, 29, 0x0029)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1057: FILE: drivers/net/atl1/atl1_hw.c:476:
+/**
+TODO: do something or get rid of this

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1059: FILE: drivers/net/atl1/atl1_hw.c:478:
+s32 at_phy_enter_power_saving(struct at_hw * hw)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1066: FILE: drivers/net/atl1/atl1_hw.c:485:
+/*
+    ret_val = at_write_phy_reg(hw, ...);

WARNING:TYPO_SPELLING: 'regiser' may be misspelled - perhaps 'register'?
#1077: FILE: drivers/net/atl1/atl1_hw.c:496:
+ * Sets bit 15 and 12 of the MII Control regiser (for F001 bug)
                                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: drivers/net/atl1/atl1_hw.c:533:
+^I^Iprintk(KERN_DEBUG "%s: autoneg caused pcie phy link down\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1114: FILE: drivers/net/atl1/atl1_hw.c:533:
+		printk(KERN_DEBUG "%s: autoneg caused pcie phy link down\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: drivers/net/atl1/atl1_hw.c:534:
+		printk(KERN_DEBUG "%s: autoneg caused pcie phy link down\n", 
+			at_driver_name);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1120: FILE: drivers/net/atl1/atl1_hw.c:539:
+			if (!(val & (MDIO_START | MDIO_BUSY))) {
+				break;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/net/atl1/atl1_hw.c:545:
+^I^I^Iprintk(KERN_WARNING $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1126: FILE: drivers/net/atl1/atl1_hw.c:545:
+			printk(KERN_WARNING 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1127: FILE: drivers/net/atl1/atl1_hw.c:546:
+^I^I^I^I"%s: pcie link down at least for 25ms\n", $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1139: FILE: drivers/net/atl1/atl1_hw.c:558:
+s32 at_phy_setup_autoneg_adv(struct at_hw * hw)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1225: FILE: drivers/net/atl1/atl1_hw.c:644:
+^I^Iprintk(KERN_DEBUG "%s: error setting up autonegotiation\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1225: FILE: drivers/net/atl1/atl1_hw.c:644:
+		printk(KERN_DEBUG "%s: error setting up autonegotiation\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1226: FILE: drivers/net/atl1/atl1_hw.c:645:
+		printk(KERN_DEBUG "%s: error setting up autonegotiation\n", 
+			at_driver_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1232: FILE: drivers/net/atl1/atl1_hw.c:651:
+		printk(KERN_DEBUG "%s: error resetting the phy\n", at_driver_name);

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(flash_table)
#1248: FILE: drivers/net/atl1/atl1_hw.c:667:
+	if (hw->flash_vendor >= sizeof(flash_table) / sizeof(flash_table[0])) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1248: FILE: drivers/net/atl1/atl1_hw.c:667:
+	if (hw->flash_vendor >= sizeof(flash_table) / sizeof(flash_table[0])) {
+		hw->flash_vendor = 0;	/* ATMEL */
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1274: FILE: drivers/net/atl1/atl1_hw.c:693:
+ * post-reset uninitialized state. Initializes multicast table, $

WARNING:TYPO_SPELLING: 'Interrrupt' may be misspelled - perhaps 'Interrupt'?
#1290: FILE: drivers/net/atl1/atl1_hw.c:709:
+		/* enable GPHY LinkChange Interrrupt */
 		                          ^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1310: FILE: drivers/net/atl1/atl1_hw.c:729:
+s32 at_get_speed_and_duplex(struct at_hw * hw, u16 * speed, u16 * duplex)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1310: FILE: drivers/net/atl1/atl1_hw.c:729:
+s32 at_get_speed_and_duplex(struct at_hw * hw, u16 * speed, u16 * duplex)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1310: FILE: drivers/net/atl1/atl1_hw.c:729:
+s32 at_get_speed_and_duplex(struct at_hw * hw, u16 * speed, u16 * duplex)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1334: FILE: drivers/net/atl1/atl1_hw.c:753:
+		printk(KERN_DEBUG "%s: error getting speed\n", at_driver_name);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#1336: FILE: drivers/net/atl1/atl1_hw.c:755:
+		return AT_ERR_PHY_SPEED;
+		break;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1338: FILE: drivers/net/atl1/atl1_hw.c:757:
+	if (phy_data & MII_AT001_PSSR_DPLX) {
[...]
+	} else {
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1350: FILE: drivers/net/atl1/atl1_hw.c:769:
+	/* 00-0B-6A-F6-00-DC
+	   0:  6AF600DC   1: 000B

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1351: FILE: drivers/net/atl1/atl1_hw.c:770:
+	   low dword */

CHECK:SPACING: No space is necessary after a cast
#1352: FILE: drivers/net/atl1/atl1_hw.c:771:
+	value = (((u32) hw->mac_addr[2]) << 24) |

CHECK:SPACING: No space is necessary after a cast
#1353: FILE: drivers/net/atl1/atl1_hw.c:772:
+	    (((u32) hw->mac_addr[3]) << 16) |

CHECK:SPACING: No space is necessary after a cast
#1354: FILE: drivers/net/atl1/atl1_hw.c:773:
+	    (((u32) hw->mac_addr[4]) << 8) | (((u32) hw->mac_addr[5]));

WARNING:TYPO_SPELLING: 'hight' may be misspelled - perhaps 'height'?
#1356: FILE: drivers/net/atl1/atl1_hw.c:775:
+	/* hight dword */
 	   ^^^^^

CHECK:SPACING: No space is necessary after a cast
#1357: FILE: drivers/net/atl1/atl1_hw.c:776:
+	value = (((u32) hw->mac_addr[0]) << 8) | (((u32) hw->mac_addr[1]));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1362: FILE: drivers/net/atl1/atl1_hw.c:781:
+/*
+ * FIXME -- this function isn't called anywhere.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1368: FILE: drivers/net/atl1/atl1_hw.c:787:
+	u16 phy_data;
+	if (speed == SPEED_1000) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1384: FILE: drivers/net/atl1/atl1_hw.c:803:
+		printk(KERN_WARNING "%s: speed=%d, duplex=%d not supported\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1403: FILE: drivers/net/atl1/atl1_hw.c:822:
+		printk(KERN_DEBUG "%s: autoneg caused pcie phy link down\n", at_driver_name);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1408: FILE: drivers/net/atl1/atl1_hw.c:827:
+			if (!(val & (MDIO_START | MDIO_BUSY))) {
+				break;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1414: FILE: drivers/net/atl1/atl1_hw.c:833:
+^I^I^Iprintk(KERN_WARNING $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1414: FILE: drivers/net/atl1/atl1_hw.c:833:
+			printk(KERN_WARNING 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1415: FILE: drivers/net/atl1/atl1_hw.c:834:
+^I^I^I^I"%s: pcie link down at least for 25ms\n", $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1428: FILE: drivers/net/atl1/atl1_param.c:1:
+/** atl1_param.c - atl1 parameter parsing

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1429: FILE: drivers/net/atl1/atl1_param.c:2:
+/** atl1_param.c - atl1 parameter parsing
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1448: FILE: drivers/net/atl1/atl1_param.c:21:
+this program; if not, write to the Free Software Foundation, Inc., 59$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1474: FILE: drivers/net/atl1/atl1_param.c:47:
+static int __devinitdata int_mod_timer[AT_MAX_NIC+1] = AT_PARAM_INIT;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1474: FILE: drivers/net/atl1/atl1_param.c:47:
+static int __devinitdata int_mod_timer[AT_MAX_NIC+1] = AT_PARAM_INIT;
                                                  ^

WARNING:MISPLACED_INIT: __devinitdata should be placed after int_mod_timer[AT_MAX_NIC+1]
#1474: FILE: drivers/net/atl1/atl1_param.c:47:
+static int __devinitdata int_mod_timer[AT_MAX_NIC+1] = AT_PARAM_INIT;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1475: FILE: drivers/net/atl1/atl1_param.c:48:
+static int num_int_mod_timer = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1489: FILE: drivers/net/atl1/atl1_param.c:62:
+static int __devinitdata flash_vendor[AT_MAX_NIC+1] = AT_PARAM_INIT;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1489: FILE: drivers/net/atl1/atl1_param.c:62:
+static int __devinitdata flash_vendor[AT_MAX_NIC+1] = AT_PARAM_INIT;
                                                 ^

WARNING:MISPLACED_INIT: __devinitdata should be placed after flash_vendor[AT_MAX_NIC+1]
#1489: FILE: drivers/net/atl1/atl1_param.c:62:
+static int __devinitdata flash_vendor[AT_MAX_NIC+1] = AT_PARAM_INIT;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1490: FILE: drivers/net/atl1/atl1_param.c:63:
+static int num_flash_vendor = 0;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1522: FILE: drivers/net/atl1/atl1_param.c:95:
+static int __devinit at_validate_option(int *value, struct at_option *opt)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1533: FILE: drivers/net/atl1/atl1_param.c:106:
+			printk(KERN_INFO "%s: %s Enabled\n", at_driver_name, opt->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1536: FILE: drivers/net/atl1/atl1_param.c:109:
+			printk(KERN_INFO "%s: %s Disabled\n", at_driver_name, opt->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1542: FILE: drivers/net/atl1/atl1_param.c:115:
+			printk(KERN_INFO "%s: %s set to %i\n", at_driver_name, opt->name, *value);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1554: FILE: drivers/net/atl1/atl1_param.c:127:
+						printk(KERN_INFO "%s: %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1566: FILE: drivers/net/atl1/atl1_param.c:139:
+	printk(KERN_INFO "%s: invalid %s specified (%i) %s\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1581: FILE: drivers/net/atl1/atl1_param.c:154:
+void __devinit at_check_options(struct at_adapter *adapter)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1584: FILE: drivers/net/atl1/atl1_param.c:157:
+	int bd = adapter->bd_number;
+	if (bd >= AT_MAX_NIC) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1585: FILE: drivers/net/atl1/atl1_param.c:158:
+^I^Iprintk(KERN_NOTICE "%s: warning: no configuration for board #%i\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1585: FILE: drivers/net/atl1/atl1_param.c:158:
+		printk(KERN_NOTICE "%s: warning: no configuration for board #%i\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: drivers/net/atl1/atl1_param.c:159:
+		printk(KERN_NOTICE "%s: warning: no configuration for board #%i\n", 
+			at_driver_name, bd);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: drivers/net/atl1/atl1_param.c:160:
+^I^Iprintk(KERN_NOTICE "%s: using defaults for all values\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1587: FILE: drivers/net/atl1/atl1_param.c:160:
+		printk(KERN_NOTICE "%s: using defaults for all values\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1588: FILE: drivers/net/atl1/atl1_param.c:161:
+		printk(KERN_NOTICE "%s: using defaults for all values\n", 
+			at_driver_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1594: FILE: drivers/net/atl1/atl1_param.c:167:
+^I^I^I.err = "using default of " $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1598: FILE: drivers/net/atl1/atl1_param.c:171:
+			.arg = {.r =
+				{.min = MIN_INT_MOD_CNT,.max = MAX_INT_MOD_CNT}}

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1598: FILE: drivers/net/atl1/atl1_param.c:171:
+				{.min = MIN_INT_MOD_CNT,.max = MAX_INT_MOD_CNT}}
 				                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1601: FILE: drivers/net/atl1/atl1_param.c:174:
+		int val;
+		if (num_int_mod_timer > bd) {

CHECK:SPACING: No space is necessary after a cast
#1604: FILE: drivers/net/atl1/atl1_param.c:177:
+			adapter->imt = (u16) val;

CHECK:SPACING: No space is necessary after a cast
#1606: FILE: drivers/net/atl1/atl1_param.c:179:
+			adapter->imt = (u16) (opt.def);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1615: FILE: drivers/net/atl1/atl1_param.c:188:
+^I^I^I    ^I__MODULE_STRING(FLASH_VENDOR_DEFAULT),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1615: FILE: drivers/net/atl1/atl1_param.c:188:
+^I^I^I    ^I__MODULE_STRING(FLASH_VENDOR_DEFAULT),$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1618: FILE: drivers/net/atl1/atl1_param.c:191:
+			.arg = {.r =
+				{.min = FLASH_VENDOR_MIN,.max =

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1618: FILE: drivers/net/atl1/atl1_param.c:191:
+				{.min = FLASH_VENDOR_MIN,.max =
 				                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1622: FILE: drivers/net/atl1/atl1_param.c:195:
+		int val;
+		if (num_flash_vendor > bd) {

CHECK:SPACING: No space is necessary after a cast
#1625: FILE: drivers/net/atl1/atl1_param.c:198:
+			adapter->hw.flash_vendor = (u8) val;

CHECK:SPACING: No space is necessary after a cast
#1627: FILE: drivers/net/atl1/atl1_param.c:200:
+			adapter->hw.flash_vendor = (u8) (opt.def);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000016903.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 71 errors, 99 warnings, 60 checks, 1573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000016903.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
