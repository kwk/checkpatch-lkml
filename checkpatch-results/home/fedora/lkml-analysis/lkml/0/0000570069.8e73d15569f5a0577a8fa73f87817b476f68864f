WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -urN 2.3.30pre3/include/linux/rbtree.h 2.3.30pre3-rbtree/include/linux/rbtree.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#32: FILE: include/linux/rbtree.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#33: FILE: include/linux/rbtree.h:2:
+/*
+  Red Black Trees

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#35: FILE: include/linux/rbtree.h:4:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#47: FILE: include/linux/rbtree.h:16:
+  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#48: FILE: include/linux/rbtree.h:17:
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#50: FILE: include/linux/rbtree.h:19:
+  linux/include/linux/rbtree.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#135: FILE: include/linux/rbtree.h:104:
+typedef struct rb_node_s

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#136: FILE: include/linux/rbtree.h:105:
+typedef struct rb_node_s
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: include/linux/rbtree.h:106:
+	struct rb_node_s * rb_parent;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: include/linux/rbtree.h:110:
+	struct rb_node_s * rb_right;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: include/linux/rbtree.h:111:
+	struct rb_node_s * rb_left;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#144: FILE: include/linux/rbtree.h:113:
+}
+rb_node_t;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#146: FILE: include/linux/rbtree.h:115:
+typedef struct rb_root_s

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#147: FILE: include/linux/rbtree.h:116:
+typedef struct rb_root_s
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: include/linux/rbtree.h:117:
+	struct rb_node_s * rb_node;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#150: FILE: include/linux/rbtree.h:119:
+}
+rb_root_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#152: FILE: include/linux/rbtree.h:121:
+#define RB_ROOT	(rb_root_t) { NULL, }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'member' may be better as '(member)' to avoid precedence issues
#153: FILE: include/linux/rbtree.h:122:
+#define	rb_entry(ptr, type, member)					\
+	((type *)((char *)(ptr)-(unsigned long)(&((type *)0)->member)))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#154: FILE: include/linux/rbtree.h:123:
+	((type *)((char *)(ptr)-(unsigned long)(&((type *)0)->member)))
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: include/linux/rbtree.h:125:
+extern void rb_insert_color(rb_node_t *, rb_root_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rb_node_t *' should also have an identifier name
#156: FILE: include/linux/rbtree.h:125:
+extern void rb_insert_color(rb_node_t *, rb_root_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rb_root_t *' should also have an identifier name
#156: FILE: include/linux/rbtree.h:125:
+extern void rb_insert_color(rb_node_t *, rb_root_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/rbtree.h:126:
+extern void rb_erase(rb_node_t *, rb_root_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rb_node_t *' should also have an identifier name
#157: FILE: include/linux/rbtree.h:126:
+extern void rb_erase(rb_node_t *, rb_root_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rb_root_t *' should also have an identifier name
#157: FILE: include/linux/rbtree.h:126:
+extern void rb_erase(rb_node_t *, rb_root_t *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#175: FILE: lib/rbtree.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#176: FILE: lib/rbtree.c:2:
+/*
+  Red Black Trees

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: lib/rbtree.c:4:
+  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#190: FILE: lib/rbtree.c:16:
+  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#191: FILE: lib/rbtree.c:17:
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#193: FILE: lib/rbtree.c:19:
+  linux/lib/rbtree.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: lib/rbtree.c:24:
+static void __rb_rotate_left(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: lib/rbtree.c:24:
+static void __rb_rotate_left(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: lib/rbtree.c:26:
+	rb_node_t * right = node->rb_right;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: lib/rbtree.c:28:
+	if ((node->rb_right = right->rb_left))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#206: FILE: lib/rbtree.c:32:
+	if ((right->rb_parent = node->rb_parent))
+	{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#206: FILE: lib/rbtree.c:32:
+	if ((right->rb_parent = node->rb_parent))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#213: FILE: lib/rbtree.c:39:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: lib/rbtree.c:44:
+static void __rb_rotate_right(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: lib/rbtree.c:44:
+static void __rb_rotate_right(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: lib/rbtree.c:46:
+	rb_node_t * left = node->rb_left;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#222: FILE: lib/rbtree.c:48:
+	if ((node->rb_left = left->rb_right))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#226: FILE: lib/rbtree.c:52:
+	if ((left->rb_parent = node->rb_parent))
+	{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#226: FILE: lib/rbtree.c:52:
+	if ((left->rb_parent = node->rb_parent))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#233: FILE: lib/rbtree.c:59:
+	}
+	else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#238: FILE: lib/rbtree.c:64:
+void rb_insert_color(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#238: FILE: lib/rbtree.c:64:
+void rb_insert_color(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#240: FILE: lib/rbtree.c:66:
+	rb_node_t * parent, * gparent;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#240: FILE: lib/rbtree.c:66:
+	rb_node_t * parent, * gparent;
 	                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#242: FILE: lib/rbtree.c:68:
+	while ((parent = node->rb_parent) && parent->rb_color == RB_RED)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#246: FILE: lib/rbtree.c:72:
+		if (parent == gparent->rb_left)
+		{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: lib/rbtree.c:75:
+				register rb_node_t * uncle = gparent->rb_right;

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: lib/rbtree.c:76:
+				register rb_node_t * uncle = gparent->rb_right;
+				if (uncle && uncle->rb_color == RB_RED)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#250: FILE: lib/rbtree.c:76:
+				if (uncle && uncle->rb_color == RB_RED)
+				{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#260: FILE: lib/rbtree.c:86:
+			if (parent->rb_right == node)
+			{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: lib/rbtree.c:88:
+				register rb_node_t * tmp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#263: FILE: lib/rbtree.c:89:
+				register rb_node_t * tmp;
+				__rb_rotate_left(parent, root);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: lib/rbtree.c:100:
+				register rb_node_t * uncle = gparent->rb_left;

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: lib/rbtree.c:101:
+				register rb_node_t * uncle = gparent->rb_left;
+				if (uncle && uncle->rb_color == RB_RED)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#275: FILE: lib/rbtree.c:101:
+				if (uncle && uncle->rb_color == RB_RED)
+				{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#285: FILE: lib/rbtree.c:111:
+			if (parent->rb_left == node)
+			{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: lib/rbtree.c:113:
+				register rb_node_t * tmp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: lib/rbtree.c:114:
+				register rb_node_t * tmp;
+				__rb_rotate_right(parent, root);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: lib/rbtree.c:129:
+static void __rb_erase_color(rb_node_t * node, rb_node_t * parent,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: lib/rbtree.c:129:
+static void __rb_erase_color(rb_node_t * node, rb_node_t * parent,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: lib/rbtree.c:130:
+			     rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: lib/rbtree.c:132:
+	rb_node_t * other;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#308: FILE: lib/rbtree.c:134:
+	while ((!node || node->rb_color == RB_BLACK) && node != root->rb_node)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#310: FILE: lib/rbtree.c:136:
+		if (parent->rb_left == node)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#313: FILE: lib/rbtree.c:139:
+			if (other->rb_color == RB_RED)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#320: FILE: lib/rbtree.c:146:
+			if ((!other->rb_left ||
+			     other->rb_left->rb_color == RB_BLACK)
+			    && (!other->rb_right ||
+				other->rb_right->rb_color == RB_BLACK))
+			{

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#322: FILE: lib/rbtree.c:148:
+			     other->rb_left->rb_color == RB_BLACK)
+			    && (!other->rb_right ||

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#329: FILE: lib/rbtree.c:155:
+			else
+			{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#329: FILE: lib/rbtree.c:155:
+			}
+			else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#331: FILE: lib/rbtree.c:157:
+				if (!other->rb_right ||
+				    other->rb_right->rb_color == RB_BLACK)
+				{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#334: FILE: lib/rbtree.c:160:
+					register rb_node_t * o_left;

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: lib/rbtree.c:161:
+					register rb_node_t * o_left;
+					if ((o_left = other->rb_left))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#335: FILE: lib/rbtree.c:161:
+					if ((o_left = other->rb_left))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#350: FILE: lib/rbtree.c:176:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#350: FILE: lib/rbtree.c:176:
+		}
+		else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#353: FILE: lib/rbtree.c:179:
+			if (other->rb_color == RB_RED)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: lib/rbtree.c:186:
+			if ((!other->rb_left ||
+			     other->rb_left->rb_color == RB_BLACK)
+			    && (!other->rb_right ||
+				other->rb_right->rb_color == RB_BLACK))
+			{

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#362: FILE: lib/rbtree.c:188:
+			     other->rb_left->rb_color == RB_BLACK)
+			    && (!other->rb_right ||

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#369: FILE: lib/rbtree.c:195:
+			else
+			{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#369: FILE: lib/rbtree.c:195:
+			}
+			else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#371: FILE: lib/rbtree.c:197:
+				if (!other->rb_left ||
+				    other->rb_left->rb_color == RB_BLACK)
+				{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#374: FILE: lib/rbtree.c:200:
+					register rb_node_t * o_right;

WARNING:LINE_SPACING: Missing a blank line after declarations
#375: FILE: lib/rbtree.c:201:
+					register rb_node_t * o_right;
+					if ((o_right = other->rb_right))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#375: FILE: lib/rbtree.c:201:
+					if ((o_right = other->rb_right))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: lib/rbtree.c:221:
+void rb_erase(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: lib/rbtree.c:221:
+void rb_erase(rb_node_t * node, rb_root_t * root)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#397: FILE: lib/rbtree.c:223:
+	rb_node_t * child, * parent;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#397: FILE: lib/rbtree.c:223:
+	rb_node_t * child, * parent;
 	                   ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#404: FILE: lib/rbtree.c:230:
+	else
+	{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#406: FILE: lib/rbtree.c:232:
+		rb_node_t * old = node, * left;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#406: FILE: lib/rbtree.c:232:
+		rb_node_t * old = node, * left;
 		                        ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#417: FILE: lib/rbtree.c:243:
+		if (parent)
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#424: FILE: lib/rbtree.c:250:
+		}
+		else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#434: FILE: lib/rbtree.c:260:
+		if (old->rb_parent)
+		{

CHECK:BRACES: Unbalanced braces around else statement
#440: FILE: lib/rbtree.c:266:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#454: FILE: lib/rbtree.c:280:
+	if (parent)
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#461: FILE: lib/rbtree.c:287:
+	}
+	else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570069.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 75 errors, 19 warnings, 9 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570069.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
