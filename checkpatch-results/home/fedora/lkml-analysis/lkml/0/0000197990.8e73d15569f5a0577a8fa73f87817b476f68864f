WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#96: 
the fact that zeroed page ends up evicted from cache. Luckily, this is exactly

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#409: FILE: arch/i386/lib/mmx_page.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: arch/i386/lib/mmx_page.c:5:
+ *^IWe can use MMX just for prefetch in IRQ's. This may be a win. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: arch/i386/lib/mmx_page.c:10:
+ *^I^Iregister forwarding stalls on the filler. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: arch/i386/lib/mmx_page.c:15:
+ *^I22/09/2000 - Arjan van de Ven $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: arch/i386/lib/mmx_page.c:16:
+ *^I^IImproved for non-egineering-sample Athlons $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: arch/i386/lib/mmx_page.c:19:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/i386/lib/mmx_page.c:19:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/i386/lib/mmx_page.c:32:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#441: FILE: arch/i386/lib/mmx_page.c:33:
+	__asm__ __volatile__ (

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#445: FILE: arch/i386/lib/mmx_page.c:37:
+	for(i = 0; i < PAGE_SIZE/64; i++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#445: FILE: arch/i386/lib/mmx_page.c:37:
+	for(i = 0; i < PAGE_SIZE/64; i++)
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#445: FILE: arch/i386/lib/mmx_page.c:37:
+	for(i = 0; i < PAGE_SIZE/64; i++)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#447: FILE: arch/i386/lib/mmx_page.c:39:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#458: FILE: arch/i386/lib/mmx_page.c:50:
+		page+=64;
 		    ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#463: FILE: arch/i386/lib/mmx_page.c:55:
+	__asm__ __volatile__ (

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#478: FILE: arch/i386/lib/mmx_page.c:70:
+	__asm__ __volatile__ (

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#496: FILE: arch/i386/lib/mmx_page.c:88:
+	for(i = 0; i < (PAGE_SIZE-320)/64; i++)
+	{

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#496: FILE: arch/i386/lib/mmx_page.c:88:
+	for(i = 0; i < (PAGE_SIZE-320)/64; i++)
 	                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#496: FILE: arch/i386/lib/mmx_page.c:88:
+	for(i = 0; i < (PAGE_SIZE-320)/64; i++)
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#496: FILE: arch/i386/lib/mmx_page.c:88:
+	for(i = 0; i < (PAGE_SIZE-320)/64; i++)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#498: FILE: arch/i386/lib/mmx_page.c:90:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#526: FILE: arch/i386/lib/mmx_page.c:118:
+		from+=64;
 		    ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#527: FILE: arch/i386/lib/mmx_page.c:119:
+		to+=64;
 		  ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#529: FILE: arch/i386/lib/mmx_page.c:121:
+	for(i = (PAGE_SIZE-320)/64; i < PAGE_SIZE/64; i++)
+	{

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#529: FILE: arch/i386/lib/mmx_page.c:121:
+	for(i = (PAGE_SIZE-320)/64; i < PAGE_SIZE/64; i++)
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#529: FILE: arch/i386/lib/mmx_page.c:121:
+	for(i = (PAGE_SIZE-320)/64; i < PAGE_SIZE/64; i++)
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#529: FILE: arch/i386/lib/mmx_page.c:121:
+	for(i = (PAGE_SIZE-320)/64; i < PAGE_SIZE/64; i++)
 	                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#529: FILE: arch/i386/lib/mmx_page.c:121:
+	for(i = (PAGE_SIZE-320)/64; i < PAGE_SIZE/64; i++)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#531: FILE: arch/i386/lib/mmx_page.c:123:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#550: FILE: arch/i386/lib/mmx_page.c:142:
+		from+=64;
 		    ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#551: FILE: arch/i386/lib/mmx_page.c:143:
+		to+=64;
 		  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#556: FILE: arch/i386/lib/mmx_page.c:148:
+	__asm__ __volatile__ (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: arch/i386/lib/mmx_page.c:160:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: arch/i386/lib/mmx_page.c:162:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#571: FILE: arch/i386/lib/mmx_page.c:163:
+	__asm__ __volatile__ (

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#575: FILE: arch/i386/lib/mmx_page.c:167:
+	for(i = 0; i < PAGE_SIZE/128; i++)
+	{

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#575: FILE: arch/i386/lib/mmx_page.c:167:
+	for(i = 0; i < PAGE_SIZE/128; i++)
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: arch/i386/lib/mmx_page.c:167:
+	for(i = 0; i < PAGE_SIZE/128; i++)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#577: FILE: arch/i386/lib/mmx_page.c:169:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#596: FILE: arch/i386/lib/mmx_page.c:188:
+		page+=128;
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: arch/i386/lib/mmx_page.c:197:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: arch/i386/lib/mmx_page.c:198:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#606: FILE: arch/i386/lib/mmx_page.c:198:
+	
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#609: FILE: arch/i386/lib/mmx_page.c:201:
+	__asm__ __volatile__ (

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#627: FILE: arch/i386/lib/mmx_page.c:219:
+	for(i = 0; i < PAGE_SIZE/64; i++)
+	{

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#627: FILE: arch/i386/lib/mmx_page.c:219:
+	for(i = 0; i < PAGE_SIZE/64; i++)
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#627: FILE: arch/i386/lib/mmx_page.c:219:
+	for(i = 0; i < PAGE_SIZE/64; i++)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#629: FILE: arch/i386/lib/mmx_page.c:221:
+		__asm__ __volatile__ (

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#657: FILE: arch/i386/lib/mmx_page.c:249:
+		from+=64;
 		    ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#658: FILE: arch/i386/lib/mmx_page.c:250:
+		to+=64;
 		  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#666: FILE: arch/i386/lib/page_ops.c:1:
+#include <linux/kernel.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: arch/i386/lib/page_ops.c:5:
+#include <asm/hardirq.h> $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#672: FILE: arch/i386/lib/page_ops.c:7:
+void zero_page_mmx(void*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#673: FILE: arch/i386/lib/page_ops.c:8:
+void copy_page_mmx(void*, const void*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#673: FILE: arch/i386/lib/page_ops.c:8:
+void copy_page_mmx(void*, const void*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void*' should also have an identifier name
#673: FILE: arch/i386/lib/page_ops.c:8:
+void copy_page_mmx(void*, const void*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#674: FILE: arch/i386/lib/page_ops.c:9:
+void zero_page_3dnow(void*);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#674: FILE: arch/i386/lib/page_ops.c:9:
+void zero_page_3dnow(void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#674: FILE: arch/i386/lib/page_ops.c:9:
+void zero_page_3dnow(void*);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#675: FILE: arch/i386/lib/page_ops.c:10:
+void copy_page_3dnow(void*, const void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#675: FILE: arch/i386/lib/page_ops.c:10:
+void copy_page_3dnow(void*, const void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void*' should also have an identifier name
#675: FILE: arch/i386/lib/page_ops.c:10:
+void copy_page_3dnow(void*, const void*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#676: FILE: arch/i386/lib/page_ops.c:11:
+void zero_page_sse(void*);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#676: FILE: arch/i386/lib/page_ops.c:11:
+void zero_page_sse(void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#676: FILE: arch/i386/lib/page_ops.c:11:
+void zero_page_sse(void*);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#677: FILE: arch/i386/lib/page_ops.c:12:
+void copy_page_sse(void*, const void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#677: FILE: arch/i386/lib/page_ops.c:12:
+void copy_page_sse(void*, const void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void*' should also have an identifier name
#677: FILE: arch/i386/lib/page_ops.c:12:
+void copy_page_sse(void*, const void*);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#679: FILE: arch/i386/lib/page_ops.c:14:
+static void zero_page_slow(void * page)

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: arch/i386/lib/page_ops.c:17:
+	int d0, d1;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#682: FILE: arch/i386/lib/page_ops.c:17:
+	__asm__ __volatile__(

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#686: FILE: arch/i386/lib/page_ops.c:21:
+		:"a" (0),"1" (page),"0" (PAGE_SIZE/4)
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#686: FILE: arch/i386/lib/page_ops.c:21:
+		:"a" (0),"1" (page),"0" (PAGE_SIZE/4)
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#686: FILE: arch/i386/lib/page_ops.c:21:
+		:"a" (0),"1" (page),"0" (PAGE_SIZE/4)
 		                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#686: FILE: arch/i386/lib/page_ops.c:21:
+		:"a" (0),"1" (page),"0" (PAGE_SIZE/4)
 		                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#687: FILE: arch/i386/lib/page_ops.c:22:
+		:"memory"
 		^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: arch/i386/lib/page_ops.c:25:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: arch/i386/lib/page_ops.c:25:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#694: FILE: arch/i386/lib/page_ops.c:29:
+	int d0, d1, d2;
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#694: FILE: arch/i386/lib/page_ops.c:29:
+	__asm__ __volatile__(

CHECK:SPACING: No space is necessary after a cast
#698: FILE: arch/i386/lib/page_ops.c:33:
+		: "0" (PAGE_SIZE/4),"1" ((long) to),"2" ((long) from)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#698: FILE: arch/i386/lib/page_ops.c:33:
+		: "0" (PAGE_SIZE/4),"1" ((long) to),"2" ((long) from)
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: arch/i386/lib/page_ops.c:33:
+		: "0" (PAGE_SIZE/4),"1" ((long) to),"2" ((long) from)
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: arch/i386/lib/page_ops.c:33:
+		: "0" (PAGE_SIZE/4),"1" ((long) to),"2" ((long) from)
 		                                   ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#703: FILE: arch/i386/lib/page_ops.c:38:
+int change_pageops = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#711: FILE: arch/i386/lib/page_ops.c:46:
+	printk("Switched to " #a " clear/copy page ops\n"); \

ERROR:SPACING: space required before the open parenthesis '('
#712: FILE: arch/i386/lib/page_ops.c:47:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#716: FILE: arch/i386/lib/page_ops.c:51:
+	switch(change_pageops) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#717: FILE: arch/i386/lib/page_ops.c:52:
+	case 1: SW_TO(slow); break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#718: FILE: arch/i386/lib/page_ops.c:53:
+	case 2: SW_TO(mmx); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#719: FILE: arch/i386/lib/page_ops.c:54:
+	case 3: SW_TO(3dnow); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#720: FILE: arch/i386/lib/page_ops.c:55:
+	case 4: SW_TO(sse); break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#722: FILE: arch/i386/lib/page_ops.c:57:
+		printk("unimplemented!\n");

ERROR:SPACING: space required before the open parenthesis '('
#729: FILE: arch/i386/lib/page_ops.c:64:
+	if(unlikely(in_interrupt())) {

ERROR:SPACING: space required before the open parenthesis '('
#733: FILE: arch/i386/lib/page_ops.c:68:
+	if(!change_pageops) {

ERROR:SPACING: space required before the open parenthesis '('
#743: FILE: arch/i386/lib/page_ops.c:78:
+	if(unlikely(in_interrupt())) {

ERROR:SPACING: space required before the open parenthesis '('
#747: FILE: arch/i386/lib/page_ops.c:82:
+	if(!change_pageops) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#778: FILE: arch/i386/lib/sse_page.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#779: FILE: arch/i386/lib/sse_page.c:2:
+/*
+* linux/arch/i386/lib/sse.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#794: FILE: arch/i386/lib/sse_page.c:17:
+* along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#795: FILE: arch/i386/lib/sse_page.c:18:
+* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#804: FILE: arch/i386/lib/sse_page.c:27:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#806: FILE: arch/i386/lib/sse_page.c:29:
+/*
+*	SSE library helper functions

ERROR:SPACING: space required before the open parenthesis '('
#813: FILE: arch/i386/lib/sse_page.c:36:
+	} while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#815: FILE: arch/i386/lib/sse_page.c:38:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#819: FILE: arch/i386/lib/sse_page.c:42:
+	} while(0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#821: FILE: arch/i386/lib/sse_page.c:44:
+void zero_page_sse(void * page)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#828: FILE: arch/i386/lib/sse_page.c:51:
+	asm volatile(

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#833: FILE: arch/i386/lib/sse_page.c:56:
+	for(i = 0; i < PAGE_SIZE/16/4; i++) {
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#833: FILE: arch/i386/lib/sse_page.c:56:
+	for(i = 0; i < PAGE_SIZE/16/4; i++) {
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#833: FILE: arch/i386/lib/sse_page.c:56:
+	for(i = 0; i < PAGE_SIZE/16/4; i++) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#834: FILE: arch/i386/lib/sse_page.c:57:
+		asm volatile(

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#841: FILE: arch/i386/lib/sse_page.c:64:
+		page += 16*4;
 		          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#843: FILE: arch/i386/lib/sse_page.c:66:
+	asm volatile(

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#853: FILE: arch/i386/lib/sse_page.c:76:
+	unsigned char xmm_save[16*4];
 	                         ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#858: FILE: arch/i386/lib/sse_page.c:81:
+	asm volatile(

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#865: FILE: arch/i386/lib/sse_page.c:88:
+	for(i = 0; i < PAGE_SIZE/16/4; i++) {
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#865: FILE: arch/i386/lib/sse_page.c:88:
+	for(i = 0; i < PAGE_SIZE/16/4; i++) {
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#865: FILE: arch/i386/lib/sse_page.c:88:
+	for(i = 0; i < PAGE_SIZE/16/4; i++) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#866: FILE: arch/i386/lib/sse_page.c:89:
+		asm volatile(

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#877: FILE: arch/i386/lib/sse_page.c:100:
+		from += 16*4;
 		          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#878: FILE: arch/i386/lib/sse_page.c:101:
+		to += 16*4;
 		        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#880: FILE: arch/i386/lib/sse_page.c:103:
+	asm volatile(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#917: FILE: include/asm-i386/page.h:15:
+extern void clear_page(void*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#917: FILE: include/asm-i386/page.h:15:
+extern void clear_page(void*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#918: FILE: include/asm-i386/page.h:16:
+extern void copy_page(void*, const void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#918: FILE: include/asm-i386/page.h:16:
+extern void copy_page(void*, const void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void*' should also have an identifier name
#918: FILE: include/asm-i386/page.h:16:
+extern void copy_page(void*, const void*);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197990.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 27 warnings, 43 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197990.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
