WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#44: 
    Signed-off-by: Srinivasa DS <srinivasa@in.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space required before the open parenthesis '('
#76: FILE: arch/powerpc/kernel/rtas.c:885:
+	if(rtas_stop_self_args.token == RTAS_UNKNOWN_SERVICE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int is_cpu_hotplug_perm_disabled() should probably be int is_cpu_hotplug_perm_disabled(void)
#98: FILE: kernel/cpu.c:75:
+static int is_cpu_hotplug_perm_disabled()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:SPACING: space required before the open parenthesis '('
#128: FILE: kernel/cpu.c:276:
+	if(is_cpu_hotplug_perm_disabled()) {

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: kernel/cpu.c:330:
+	if(is_cpu_hotplug_perm_disabled()) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: include/linux/cpu.h:73:
+extern void disable_cpu_hotplug_perm(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000018606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 1 warnings, 1 checks, 93 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000018606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
