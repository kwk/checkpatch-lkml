WARNING:TYPO_SPELLING: 'freeed' may be misspelled - perhaps 'freed'?
#47: 
After release is actually called, the virtual device instance is freeed.
                                                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: core/disconnected.c:1:
+/* virtual device

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#56: FILE: core/disconnected.c:2:
+/* virtual device
+   hides a real device's f_ops,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#73: FILE: core/disconnected.c:19:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: core/disconnected.c:20:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#78: FILE: core/disconnected.c:24:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#93: FILE: core/disconnected.c:39:
+static struct file_operations snd_disconnect_f_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: core/disconnected.c:44:
+	struct snd_disconnected_file *df;
+	df = kmalloc(sizeof(struct snd_disconnected_file), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*df)...) over kmalloc(sizeof(struct snd_disconnected_file)...)
#98: FILE: core/disconnected.c:44:
+	df = kmalloc(sizeof(struct snd_disconnected_file), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!df"
#99: FILE: core/disconnected.c:45:
+	if (df == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#111: FILE: core/disconnected.c:57:
+	printk(KERN_INFO "%s rc3\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#111: FILE: core/disconnected.c:57:
+	printk(KERN_INFO "%s rc3\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: core/disconnected.c:60:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: core/disconnected.c:86:
+		struct snd_disconnected_file *_df;
+		_df = list_entry(entry, struct snd_disconnected_file, list);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "df"
#149: FILE: core/disconnected.c:95:
+	if (likely(df != NULL))	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: core/disconnected.c:97:
+		int err = df->f_op->release(inode, file);
+		fops_put(df->f_op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#153: FILE: core/disconnected.c:99:
+		printk(KERN_INFO "%s rc3\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#153: FILE: core/disconnected.c:99:
+		printk(KERN_INFO "%s rc3\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#157: FILE: core/disconnected.c:103:
+	panic("%s(%p, %p) failed!", __FUNCTION__, inode, file);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: core/disconnected.c:106:
+static unsigned int snd_disconnect_poll(struct file * file, poll_table * wait)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: core/disconnected.c:106:
+static unsigned int snd_disconnect_poll(struct file * file, poll_table * wait)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#181: FILE: core/disconnected.c:127:
+static struct file_operations snd_disconnect_f_ops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#182: FILE: core/disconnected.c:128:
+static struct file_operations snd_disconnect_f_ops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: core/disconnected.c:129:
+^I.owner = ^ITHIS_MODULE,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: core/disconnected.c:131:
+^I.read = ^Isnd_disconnect_read,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 15 warnings, 5 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031298.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
