WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#142: FILE: Documentation/power/devices.txt:159:
+actual policy of what to do with them beeing specific to a given
                                       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: Documentation/power/devices.txt:170:
+All events are: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'taht' may be misspelled - perhaps 'that'?
#157: FILE: Documentation/power/devices.txt:174:
+#disk and store it in memory, or do other activities taht require
                                                      ^^^^

WARNING:TYPO_SPELLING: 'forbiden' may be misspelled - perhaps 'forbidden'?
#159: FILE: Documentation/power/devices.txt:176:
+#are forbiden once the suspend dance is started.. event = ON, flags =
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'proably' may be misspelled - perhaps 'probably'?
#193: FILE: Documentation/power/devices.txt:210:
+Device detach requested from /sys -- deinitialize device; proably same as
                                                           ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: Documentation/power/swsusp.txt:24:
+line. Then you suspend by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: Documentation/power/swsusp.txt:124:
+ $

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#367: FILE: Documentation/power/swsusp.txt:193:
+A: Do selective suspend during runtime power managment, that's okay. But
                                              ^^^^^^^^^

WARNING:TYPO_SPELLING: 'unneccessarily' may be misspelled - perhaps 'unnecessarily'?
#397: FILE: Documentation/power/swsusp.txt:223:
+but it may be unneccessarily slow. If you want USB to stay simple,
               ^^^^^^^^^^^^^^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#783: FILE: arch/x86_64/kernel/time.c:2:
+ *  linux/arch/x86_64/kernel/time.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#825: FILE: arch/x86_64/kernel/time.c:807:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#842: FILE: arch/x86_64/kernel/time.c:896:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#864: FILE: arch/x86_64/kernel/time.c:919:
+	printk(KERN_INFO "Slept for %d:%d minutes\n", sleep_length/60, sleep_length%60);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#864: FILE: arch/x86_64/kernel/time.c:919:
+	printk(KERN_INFO "Slept for %d:%d minutes\n", sleep_length/60, sleep_length%60);
 	                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#864: FILE: arch/x86_64/kernel/time.c:919:
+	printk(KERN_INFO "Slept for %d:%d minutes\n", sleep_length/60, sleep_length%60);
 	                                                                           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#873: FILE: arch/x86_64/kernel/time.c:940:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#936: FILE: drivers/base/platform.c:241:
+static int platform_suspend(struct device * dev, pm_message_t state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#947: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, pm_message_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#947: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, pm_message_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pm_message_t' should also have an identifier name
#947: FILE: drivers/base/power/power.h:69:
+extern int suspend_device(struct device *, pm_message_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#955: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, pm_message_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#955: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, pm_message_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pm_message_t' should also have an identifier name
#955: FILE: drivers/base/power/power.h:76:
+extern int dpm_runtime_suspend(struct device *, pm_message_t);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#964: FILE: drivers/base/power/power.h:91:
+static inline int dpm_runtime_suspend(struct device * dev, pm_message_t state)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#999: FILE: drivers/base/power/runtime.c:47:
+int dpm_runtime_suspend(struct device * dev, pm_message_t state)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1017: FILE: drivers/base/power/runtime.c:76:
+void dpm_set_power_state(struct device * dev, pm_message_t state)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1049: FILE: drivers/base/power/suspend.c:38:
+int suspend_device(struct device * dev, pm_message_t state)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->power.power_state == PMSG_ON'
#1058: FILE: drivers/base/power/suspend.c:46:
+	if (dev->bus && dev->bus->suspend && (dev->power.power_state == PMSG_ON))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1123: FILE: drivers/ide/ide-disk.c:1422:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1211: FILE: drivers/input/keyboard/atkbd.c:992:
+	printk("Compaq Evo detected, mapping extra keys\n");

ERROR:SPACING: space prohibited before that close square bracket ']'
#1212: FILE: drivers/input/keyboard/atkbd.c:993:
+	atkbd_set2_keycode[0x80 | atkbd_unxlate_table[0x23] ] = 150;

ERROR:SPACING: space prohibited before that close square bracket ']'
#1213: FILE: drivers/input/keyboard/atkbd.c:994:
+	atkbd_set2_keycode[0x80 | atkbd_unxlate_table[0x1e] ] = 155;

ERROR:SPACING: space prohibited before that close square bracket ']'
#1214: FILE: drivers/input/keyboard/atkbd.c:995:
+	atkbd_set2_keycode[0x80 | atkbd_unxlate_table[0x1a] ] = 217;

ERROR:SPACING: space prohibited before that close square bracket ']'
#1215: FILE: drivers/input/keyboard/atkbd.c:996:
+	atkbd_set2_keycode[0x80 | atkbd_unxlate_table[0x1f] ] = 157;

WARNING:MISPLACED_INIT: __initdata should be placed after keyboard_dmi_table[]
#1219: FILE: drivers/input/keyboard/atkbd.c:1000:
+static struct dmi_system_id __initdata keyboard_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1238: FILE: drivers/input/keyboard/atkbd.c:1019:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1252: FILE: drivers/media/video/bttv-driver.c:3948:
+	if (0 != pci_set_power_state(pci_dev, device_to_pci_power(pci_dev, state))) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1310: FILE: drivers/net/8139cp.c:1626:
+	pci_set_power_state (cp->pdev, PCI_D3hot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1319: FILE: drivers/net/8139cp.c:1816:
+	if (cp->wol_enabled) pci_set_power_state (pdev, PCI_D0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1319: FILE: drivers/net/8139cp.c:1816:
+	if (cp->wol_enabled) pci_set_power_state (pdev, PCI_D0);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1328: FILE: drivers/net/8139cp.c:1866:
+		pci_set_power_state (cp->pdev, PCI_D0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1339: FILE: drivers/net/8139too.c:2611:
+	pci_set_power_state (pdev, PCI_D3hot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1348: FILE: drivers/net/8139too.c:2625:
+	pci_set_power_state (pdev, PCI_D0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1447: FILE: drivers/net/b44.c:1903:
+		printk(KERN_ERR PFX "%s: request_irq failed\n", dev->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1534: FILE: drivers/net/pci-skeleton.c:1925:
+	pci_set_power_state (pdev, PCI_D3hot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1543: FILE: drivers/net/pci-skeleton.c:1938:
+	pci_set_power_state (pdev, PCI_D0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1622: FILE: drivers/net/via-rhine.c:1974:
+        if (request_irq(dev->irq, rhine_interrupt, SA_SHIRQ, dev->name, dev))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1622: FILE: drivers/net/via-rhine.c:1974:
+        if (request_irq(dev->irq, rhine_interrupt, SA_SHIRQ, dev->name, dev))$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1623: FILE: drivers/net/via-rhine.c:1975:
+		printk(KERN_ERR "via-rhine %s: request_irq failed\n", dev->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1746: FILE: drivers/pci/pci-driver.c:298:
+static int pci_device_suspend(struct device * dev, pm_message_t state)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1791: FILE: drivers/pci/pci.c:320:
+	default: BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1791: FILE: drivers/pci/pci.c:320:
+	default: BUG();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1795: FILE: drivers/pci/pci.c:324:
+EXPORT_SYMBOL(pci_choose_state);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1827: FILE: drivers/usb/core/hcd-pci.c:358:
+		pci_set_power_state (dev, PCI_D0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1850: FILE: include/asm-i386/suspend.h:13:
+           in do_magic. swsusp_pg_dir should have identity mapping, so$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1850: FILE: include/asm-i386/suspend.h:13:
+	/* If you want to make non-PSE machine work, turn off paging
+           in do_magic. swsusp_pg_dir should have identity mapping, so

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#1851: FILE: include/asm-i386/suspend.h:14:
+           it could work...  */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1851: FILE: include/asm-i386/suspend.h:14:
+           it could work...  */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1862: FILE: include/linux/device.h:64:
+	int		(*suspend)(struct device * dev, pm_message_t state);

CHECK:SPACING: No space is necessary after a cast
#1896: FILE: include/linux/pci.h:485:
+#define PCI_D0	((pci_power_t __force) 0)

CHECK:SPACING: No space is necessary after a cast
#1897: FILE: include/linux/pci.h:486:
+#define PCI_D1	((pci_power_t __force) 1)

CHECK:SPACING: No space is necessary after a cast
#1898: FILE: include/linux/pci.h:487:
+#define PCI_D2	((pci_power_t __force) 2)

CHECK:SPACING: No space is necessary after a cast
#1899: FILE: include/linux/pci.h:488:
+#define PCI_D3hot	((pci_power_t __force) 3)

CHECK:SPACING: No space is necessary after a cast
#1900: FILE: include/linux/pci.h:489:
+#define PCI_D3cold	((pci_power_t __force) 4)

CHECK:SPACING: No space is necessary after a cast
#1964: FILE: include/linux/pm.h:37:
+#define PM_SUSPEND	((__force pm_request_t) 1)	/* enter D1-D3 */

CHECK:SPACING: No space is necessary after a cast
#1965: FILE: include/linux/pm.h:38:
+#define PM_RESUME	((__force pm_request_t) 2)	/* enter D0 */

CHECK:SPACING: No space is necessary after a cast
#1986: FILE: include/linux/pm.h:46:
+#define PM_UNKNOWN_DEV	((__force pm_request_t) 0)	/* generic */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1987: FILE: include/linux/pm.h:47:
+#define PM_SYS_DEV	((__force pm_request_t) 1)	/* system device (fan, KB controller, ...) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#1987: FILE: include/linux/pm.h:47:
+#define PM_SYS_DEV	((__force pm_request_t) 1)	/* system device (fan, KB controller, ...) */

CHECK:SPACING: No space is necessary after a cast
#1988: FILE: include/linux/pm.h:48:
+#define PM_PCI_DEV	((__force pm_request_t) 2)	/* PCI device */

CHECK:SPACING: No space is necessary after a cast
#1989: FILE: include/linux/pm.h:49:
+#define PM_USB_DEV	((__force pm_request_t) 3)	/* USB device */

CHECK:SPACING: No space is necessary after a cast
#1990: FILE: include/linux/pm.h:50:
+#define PM_SCSI_DEV	((__force pm_request_t) 4)	/* SCSI device */

CHECK:SPACING: No space is necessary after a cast
#1991: FILE: include/linux/pm.h:51:
+#define PM_ISA_DEV	((__force pm_request_t) 5)	/* ISA device */

CHECK:SPACING: No space is necessary after a cast
#1992: FILE: include/linux/pm.h:52:
+#define	PM_MTD_DEV	((__force pm_request_t) 6)	/* Memory Technology Device */

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#2054: FILE: include/linux/pm.h:156:
+ * managment. Please avoid using them.  */
    ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2054: FILE: include/linux/pm.h:156:
+ * managment. Please avoid using them.  */

CHECK:SPACING: No space is necessary after a cast
#2080: FILE: include/linux/pm.h:166:
+#define PM_SUSPEND_ON		((__force suspend_state_t) 0)

CHECK:SPACING: No space is necessary after a cast
#2081: FILE: include/linux/pm.h:167:
+#define PM_SUSPEND_STANDBY	((__force suspend_state_t) 1)

CHECK:SPACING: No space is necessary after a cast
#2082: FILE: include/linux/pm.h:168:
+#define PM_SUSPEND_MEM		((__force suspend_state_t) 3)

CHECK:SPACING: No space is necessary after a cast
#2083: FILE: include/linux/pm.h:169:
+#define PM_SUSPEND_DISK		((__force suspend_state_t) 4)

CHECK:SPACING: No space is necessary after a cast
#2084: FILE: include/linux/pm.h:170:
+#define PM_SUSPEND_MAX		((__force suspend_state_t) 5)

CHECK:SPACING: No space is necessary after a cast
#2088: FILE: include/linux/pm.h:174:
+#define	PM_DISK_FIRMWARE	((__force suspend_disk_method_t) 1)

CHECK:SPACING: No space is necessary after a cast
#2089: FILE: include/linux/pm.h:175:
+#define	PM_DISK_PLATFORM	((__force suspend_disk_method_t) 2)

CHECK:SPACING: No space is necessary after a cast
#2090: FILE: include/linux/pm.h:176:
+#define	PM_DISK_SHUTDOWN	((__force suspend_disk_method_t) 3)

CHECK:SPACING: No space is necessary after a cast
#2091: FILE: include/linux/pm.h:177:
+#define	PM_DISK_REBOOT		((__force suspend_disk_method_t) 4)

CHECK:SPACING: No space is necessary after a cast
#2092: FILE: include/linux/pm.h:178:
+#define	PM_DISK_MAX		((__force suspend_disk_method_t) 5)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2108: FILE: include/linux/pm.h:189:
+extern int pm_suspend(suspend_state_t state);

WARNING:TYPO_SPELLING: 'diferent' may be misspelled - perhaps 'different'?
#2129: FILE: include/linux/pm.h:211:
+ * We'll need to fix the drivers. So yes, putting 3 to all diferent defines is intentional,
                                                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#2130: FILE: include/linux/pm.h:212:
+ * and will go away as soon as drivers are fixed. Also note that typedef is neccessary,
                                                                             ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2136: FILE: include/linux/pm.h:218:
+#define PMSG_FREEZE	((__force pm_message_t) 3)

CHECK:SPACING: No space is necessary after a cast
#2137: FILE: include/linux/pm.h:219:
+#define PMSG_SUSPEND	((__force pm_message_t) 3)

CHECK:SPACING: No space is necessary after a cast
#2138: FILE: include/linux/pm.h:220:
+#define PMSG_ON		((__force pm_message_t) 0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2155: FILE: include/linux/pm.h:235:
+extern int device_suspend(pm_message_t state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2156: FILE: include/linux/pm.h:236:
+extern int device_power_down(pm_message_t state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2172: FILE: include/linux/sched.h:1036:
+extern void refrigerator(unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2173: FILE: include/linux/sched.h:1037:
+extern int freeze_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2174: FILE: include/linux/sched.h:1038:
+extern void thaw_processes(void);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2178: FILE: include/linux/sched.h:1042:
+	if (unlikely(current->flags & PF_FREEZE)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#2181: FILE: include/linux/sched.h:1045:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2186: FILE: include/linux/sched.h:1050:
+static inline int freeze_processes(void) { BUG(); }

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2203: FILE: include/linux/suspend.h:34:
+extern void mark_free_pages(struct zone *zone);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2209: FILE: include/linux/suspend.h:39:
+extern int pm_prepare_console(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2210: FILE: include/linux/suspend.h:40:
+extern void pm_restore_console(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2273: FILE: kernel/power/disk.c:54:
+ ^I^Idevice_power_down(PMSG_SUSPEND);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2273: FILE: kernel/power/disk.c:54:
+ ^I^Idevice_power_down(PMSG_SUSPEND);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2273: FILE: kernel/power/disk.c:54:
+ ^I^Idevice_power_down(PMSG_SUSPEND);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2294: FILE: kernel/power/disk.c:90:
+	int i;
+	for (i=0; i<5; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2294: FILE: kernel/power/disk.c:90:
+	for (i=0; i<5; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2294: FILE: kernel/power/disk.c:90:
+	for (i=0; i<5; i++) {
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2299: FILE: kernel/power/disk.c:95:
+		printk("Freeing memory...  ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2302: FILE: kernel/power/disk.c:98:
+			printk("\b%c", p[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2307: FILE: kernel/power/disk.c:103:
+		printk("\bdone (%li pages freed)\n", pages);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2309: FILE: kernel/power/disk.c:105:
+		schedule_timeout(HZ/5);
 		                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2322: FILE: kernel/power/disk.c:150:
+	if ((error = device_suspend(PMSG_FREEZE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2323: FILE: kernel/power/disk.c:151:
+		printk("Some devices failed to suspend\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2411: FILE: kernel/power/main.c:68:
+	if ((error = device_suspend(PMSG_SUSPEND)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2428: FILE: kernel/power/main.c:88:
+	if ((error = device_power_down(PMSG_SUSPEND)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2552: FILE: kernel/power/swsusp.c:299:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2552: FILE: kernel/power/swsusp.c:299:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2552: FILE: kernel/power/swsusp.c:299:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages );

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2556: FILE: kernel/power/swsusp.c:301:
+		if (!(i%mod))
 		       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2557: FILE: kernel/power/swsusp.c:302:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2557: FILE: kernel/power/swsusp.c:302:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2557: FILE: kernel/power/swsusp.c:302:
+			printk( "\b\b\b\b%3d%%", i / mod );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2562: FILE: kernel/power/swsusp.c:306:
+	printk("\b\b\b\bdone\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2587: FILE: kernel/power/swsusp.c:448:
+		BUG_ON(PageNosave(page));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2697: FILE: kernel/power/swsusp.c:576:
+				struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2698: FILE: kernel/power/swsusp.c:577:
+				struct page * page;
+				page = pfn_to_page(zone_pfn + zone->zone_start_pfn);

CHECK:SPACING: No space is necessary after a cast
#2699: FILE: kernel/power/swsusp.c:578:
+				pbe->orig_address = (long) page_address(page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2708: FILE: kernel/power/swsusp.c:586:
+	BUG_ON(pages_copied > nr_copy_pages);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2723: FILE: kernel/power/swsusp.c:659:
+	struct pbe * p;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2760: FILE: kernel/power/swsusp.c:693:
+	BUG_ON(PageNosave(virt_to_page(pagedir_save)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2761: FILE: kernel/power/swsusp.c:694:
+	BUG_ON(PageNosaveFree(virt_to_page(pagedir_save)));

CHECK:SPACING: No space is necessary after a cast
#2763: FILE: kernel/power/swsusp.c:696:
+	free_pages((unsigned long) pagedir_save, pagedir_order);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2772: FILE: kernel/power/swsusp.c:755:
+		printk("suspend: Allocating pagedir failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2777: FILE: kernel/power/swsusp.c:759:
+		printk("suspend: Allocating image pages failed.\n");

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#2890: FILE: kernel/power/swsusp.c:1034:
+		yield();

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#2908: FILE: kernel/power/swsusp.c:1110:
+		pr_debug(KERN_ERR "swsusp: Suspend partition has wrong signature?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2925: FILE: kernel/power/swsusp.c:1138:
+	printk( "Reading image data (%d pages):     ", nr_copy_pages );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2925: FILE: kernel/power/swsusp.c:1138:
+	printk( "Reading image data (%d pages):     ", nr_copy_pages );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2925: FILE: kernel/power/swsusp.c:1138:
+	printk( "Reading image data (%d pages):     ", nr_copy_pages );

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2929: FILE: kernel/power/swsusp.c:1140:
+		if (!(i%mod))
 		       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2930: FILE: kernel/power/swsusp.c:1141:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2930: FILE: kernel/power/swsusp.c:1141:
+			printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2930: FILE: kernel/power/swsusp.c:1141:
+			printk( "\b\b\b\b%3d%%", i / mod );

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2961: FILE: kernel/signal.c:1487:
+	BUG_ON(sig == -1);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3038: FILE: mm/page_alloc.c:457:
+			for (i=0; i < (1<<order); i++)
 			      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3038: FILE: mm/page_alloc.c:457:
+			for (i=0; i < (1<<order); i++)
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3039: FILE: mm/page_alloc.c:458:
+				SetPageNosaveFree(pfn_to_page(start_pfn+i));
 				                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#3051: FILE: mm/page_alloc.c:1575:
+			printk(KERN_CRIT "BUG: wrong zone alignment, it will crash\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 62 warnings, 52 checks, 2685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225232.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
