WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/current-dontdiff --minimal linux-2.5.25/arch/i386/kernel/apic.c working-2.5.25-hotcpu/arch/i386/kernel/apic.c

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#90: FILE: arch/i386/kernel/apm.c:1590:
+	if ((num_possible_cpus() == 1) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/i386/kernel/mtrr.c:1058:
+    atomic_set (&undone_count, num_booting_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: arch/i386/kernel/mtrr.c:1058:
+    atomic_set (&undone_count, num_booting_cpus() - 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/mtrr.c:1067:
+    atomic_set (&undone_count, num_booting_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: arch/i386/kernel/mtrr.c:1067:
+    atomic_set (&undone_count, num_booting_cpus() - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/i386/kernel/mtrr.c:1074:
+    atomic_set (&undone_count, num_booting_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: arch/i386/kernel/mtrr.c:1074:
+    atomic_set (&undone_count, num_booting_cpus() - 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/i386/kernel/nmi.c:85:
+           as they come up. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: arch/i386/kernel/nmi.c:85:
+	/* FIXME: Only boot CPU is online at this stage.  Check CPUs
+           as they come up. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: arch/i386/kernel/nmi.c:85:
+           as they come up. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#183: FILE: arch/i386/kernel/smpboot.c:34:
+*		Rusty Russell	:	Hacked into shape for new "hotplug" boot process. */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#202: FILE: arch/i386/kernel/smpboot.c:64:
+volatile unsigned long cpu_callout_map;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#285: FILE: arch/i386/kernel/smpboot.c:219:
+	printk("checking TSC synchronization across %u CPUs: ", num_booting_cpus());

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#294: FILE: arch/i386/kernel/smpboot.c:240:
+		while (atomic_read(&tsc_count_start) != num_booting_cpus()-1)
 		                                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#303: FILE: arch/i386/kernel/smpboot.c:259:
+		while (atomic_read(&tsc_count_stop) != num_booting_cpus()-1)
 		                                                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#350: FILE: arch/i386/kernel/smpboot.c:326:
+		while (atomic_read(&tsc_count_stop) != num_booting_cpus()) mb();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:MEMORY_BARRIER: memory barrier without comment
#350: FILE: arch/i386/kernel/smpboot.c:326:
+		while (atomic_read(&tsc_count_stop) != num_booting_cpus()) mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#379: FILE: arch/i386/kernel/smpboot.c:462:
+	wmb();

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#449: FILE: arch/i386/kernel/smpboot.c:1143:
+			if (cpu_callout_map & (1<<cpu))
 			                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#458: FILE: arch/i386/kernel/smpboot.c:1166:
+			if (!test_bit(cpu, &cpu_callout_map)) continue;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#485: FILE: arch/i386/kernel/smpboot.c:1203:
+/* These are wrappers to interface to the new boot process.  Someone
+   who understands all this stuff should rewrite it properly. --RR 15/Jul/02 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#485: FILE: arch/i386/kernel/smpboot.c:1203:
+   who understands all this stuff should rewrite it properly. --RR 15/Jul/02 */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#491: FILE: arch/i386/kernel/smpboot.c:1209:
+int __devinit __cpu_up(unsigned int cpu)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#495: FILE: arch/i386/kernel/smpboot.c:1213:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:MEMORY_BARRIER: memory barrier without comment
#504: FILE: arch/i386/kernel/smpboot.c:1222:
+		mb();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#520: FILE: include/asm-i386/apic.h:79:
+extern void setup_boot_APIC_clock (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: include/asm-i386/apic.h:79:
+extern void setup_boot_APIC_clock (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#521: FILE: include/asm-i386/apic.h:80:
+extern void setup_secondary_APIC_clock (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/asm-i386/apic.h:80:
+extern void setup_secondary_APIC_clock (void);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#545: FILE: include/asm-i386/smp.h:88:
+#define cpu_possible(cpu) (phys_cpu_present_map & (1<<(cpu)))
                                                     ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#555: FILE: include/asm-i386/smp.h:116:
+extern volatile unsigned long cpu_callout_map;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446544.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 22 warnings, 6 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446544.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
