Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -Nru linux-2.5.54-bk1/drivers/i2c/busses/Kconfig linux-2.5.54/drivers/i2c/busses/Kconfig

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#57: FILE: drivers/i2c/busses/Kconfig:56:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/i2c/busses/i2c-isa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#76: FILE: drivers/i2c/busses/i2c-isa.c:2:
+/*
+    i2c-isa.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/i2c/busses/i2c-isa.c:3:
+            monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/i2c/busses/i2c-isa.c:4:
+    Copyright (c) 1998, 1999  Frodo Looijaard <frodol@dds.nl> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: drivers/i2c/busses/i2c-isa.c:17:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: drivers/i2c/busses/i2c-isa.c:18:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: drivers/i2c/busses/i2c-isa.c:22:
+/* This implements an i2c algorithm/adapter for ISA bus. Not that this is
+   on first sight very useful; almost no functionality is preserved.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#99: FILE: drivers/i2c/busses/i2c-isa.c:25:
+   of this. */

WARNING:MISPLACED_INIT: __initdata should be placed after isa_initialized
#130: FILE: drivers/i2c/busses/i2c-isa.c:56:
+static int __initdata isa_initialized;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LINE_SPACING: Missing a blank line after declarations
#141: FILE: drivers/i2c/busses/i2c-isa.c:67:
+	int res;
+	if (isa_initialized) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isa_init', this function's name, in a string
#143: FILE: drivers/i2c/busses/i2c-isa.c:69:
+		    ": i2c-isa.o: Oops, isa_init called a second time!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#147: FILE: drivers/i2c/busses/i2c-isa.c:73:
+	if ((res = i2c_add_adapter(&isa_adapter))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#148: FILE: drivers/i2c/busses/i2c-isa.c:74:
+		printk(KERN_ERR DRV_NAME

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: drivers/i2c/busses/i2c-isa.c:80:
+	printk("i2c-isa.o: ISA bus access for i2c modules initialized.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: drivers/i2c/busses/i2c-isa.c:92:
+	int res;
+	if (isa_initialized >= 1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#167: FILE: drivers/i2c/busses/i2c-isa.c:93:
+		if ((res = i2c_del_adapter(&isa_adapter))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#167: FILE: drivers/i2c/busses/i2c-isa.c:93:
+		if ((res = i2c_del_adapter(&isa_adapter))) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#171: FILE: drivers/i2c/busses/i2c-isa.c:97:
+			return res;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: drivers/i2c/busses/i2c-isa.c:97:
+		} else

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#201: FILE: drivers/i2c/chips/Kconfig:51:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/i2c/chips/Kconfig:52:
+^I  in the lm_sensors package, which you can download at $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#218: FILE: drivers/i2c/chips/w83781d.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#219: FILE: drivers/i2c/chips/w83781d.c:2:
+/*
+    w83781d.c - Part of lm_sensors, Linux kernel modules for hardware

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/i2c/chips/w83781d.c:3:
+                monitoring$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#236: FILE: drivers/i2c/chips/w83781d.c:19:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#237: FILE: drivers/i2c/chips/w83781d.c:20:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#241: FILE: drivers/i2c/chips/w83781d.c:24:
+/*
+    Supports following chips:

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#265: FILE: drivers/i2c/chips/w83781d.c:48:
+#include <asm/io.h>

WARNING:TYPO_SPELLING: 'Celcius' may be misspelled - perhaps ''?
#280: FILE: drivers/i2c/chips/w83781d.c:63:
+#define W83781D_SYSCTL_TEMP1 1200	/* Degrees Celcius * 10 */
                                  	           ^^^^^^^

WARNING:TYPO_SPELLING: 'Celcius' may be misspelled - perhaps ''?
#281: FILE: drivers/i2c/chips/w83781d.c:64:
+#define W83781D_SYSCTL_TEMP2 1201	/* Degrees Celcius * 10 */
                                  	           ^^^^^^^

WARNING:TYPO_SPELLING: 'Celcius' may be misspelled - perhaps ''?
#282: FILE: drivers/i2c/chips/w83781d.c:65:
+#define W83781D_SYSCTL_TEMP3 1202	/* Degrees Celcius * 10 */
                                  	           ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#318: FILE: drivers/i2c/chips/w83781d.c:101:
+/*
+    The part below contains common code for decoding VID pins.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#327: FILE: drivers/i2c/chips/w83781d.c:110:
+/*
+    Legal val values 00 - 1F.

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: drivers/i2c/chips/w83781d.c:122:
+	switch(vrm) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#340: FILE: drivers/i2c/chips/w83781d.c:123:
+	switch(vrm) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/i2c/chips/w83781d.c:127:
+^I^I                       1850 - val * 25);$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#353: FILE: drivers/i2c/chips/w83781d.c:136:
+				/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/i2c/chips/w83781d.c:140:
+^I^I                     2050 - (val) * 50);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#361: FILE: drivers/i2c/chips/w83781d.c:144:
+
+

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#373: FILE: drivers/i2c/chips/w83781d.c:156:
+SENSORS_MODULE_PARM(force_subclients, "List of subclient addresses: " \

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/i2c/chips/w83781d.c:157:
+                      "{bus, clientaddr, subclientaddr1, subclientaddr2}");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/i2c/chips/w83781d.c:157:
+                      "{bus, clientaddr, subclientaddr1, subclientaddr2}");$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#391: FILE: drivers/i2c/chips/w83781d.c:174:
+#define W83781D_REG_IN_MAX(nr) ((nr < 7) ? (0x2b + (nr) * 2) : \
+					   (0x554 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#391: FILE: drivers/i2c/chips/w83781d.c:174:
+#define W83781D_REG_IN_MAX(nr) ((nr < 7) ? (0x2b + (nr) * 2) : \
+					   (0x554 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#393: FILE: drivers/i2c/chips/w83781d.c:176:
+#define W83781D_REG_IN_MIN(nr) ((nr < 7) ? (0x2c + (nr) * 2) : \
+					   (0x555 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#393: FILE: drivers/i2c/chips/w83781d.c:176:
+#define W83781D_REG_IN_MIN(nr) ((nr < 7) ? (0x2c + (nr) * 2) : \
+					   (0x555 + (((nr) - 7) * 2)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#395: FILE: drivers/i2c/chips/w83781d.c:178:
+#define W83781D_REG_IN(nr)     ((nr < 7) ? (0x20 + (nr)) : \
+					   (0x550 + (nr) - 7))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#395: FILE: drivers/i2c/chips/w83781d.c:178:
+#define W83781D_REG_IN(nr)     ((nr < 7) ? (0x20 + (nr)) : \
+					   (0x550 + (nr) - 7))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#448: FILE: drivers/i2c/chips/w83781d.c:231:
+};
+#define W83781D_REG_PWM(nr) (regpwm[(nr) - 1])

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#454: FILE: drivers/i2c/chips/w83781d.c:237:
+/* The following are undocumented in the data sheets however we
+   received the information in an email from Winbond tech support */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#454: FILE: drivers/i2c/chips/w83781d.c:237:
+   received the information in an email from Winbond tech support */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#467: FILE: drivers/i2c/chips/w83781d.c:250:
+/* Conversions. Rounding and limit checking is only done on the TO_REG
+   variants. Note that you should be a bit careful with which arguments

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#469: FILE: drivers/i2c/chips/w83781d.c:252:
+   Fixing this is just not worth it. */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#470: FILE: drivers/i2c/chips/w83781d.c:253:
+#define IN_TO_REG(val)  (SENSORS_LIMIT((((val) * 10 + 8)/16),0,255))
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: drivers/i2c/chips/w83781d.c:253:
+#define IN_TO_REG(val)  (SENSORS_LIMIT((((val) * 10 + 8)/16),0,255))
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: drivers/i2c/chips/w83781d.c:253:
+#define IN_TO_REG(val)  (SENSORS_LIMIT((((val) * 10 + 8)/16),0,255))
                                                               ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#473: FILE: drivers/i2c/chips/w83781d.c:256:
+extern inline u8 FAN_TO_REG(long rpm, int div)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                     ^

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                        ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                 ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#482: FILE: drivers/i2c/chips/w83781d.c:265:
+#define FAN_FROM_REG(val,div) ((val)==0?-1:(val)==255?0:1350000/((val)*(div)))

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#484: FILE: drivers/i2c/chips/w83781d.c:267:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#484: FILE: drivers/i2c/chips/w83781d.c:267:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#484: FILE: drivers/i2c/chips/w83781d.c:267:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#484: FILE: drivers/i2c/chips/w83781d.c:267:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#484: FILE: drivers/i2c/chips/w83781d.c:267:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
                                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#484: FILE: drivers/i2c/chips/w83781d.c:267:
+#define TEMP_TO_REG(val) (SENSORS_LIMIT(((val)<0?(((val)-5)/10):\
+                                                 ((val)+5)/10),0,255))

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: drivers/i2c/chips/w83781d.c:268:
+                                                 ((val)+5)/10),0,255))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/i2c/chips/w83781d.c:268:
+                                                 ((val)+5)/10),0,255))$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#485: FILE: drivers/i2c/chips/w83781d.c:268:
+                                                 ((val)+5)/10),0,255))
                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#485: FILE: drivers/i2c/chips/w83781d.c:268:
+                                                 ((val)+5)/10),0,255))
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: drivers/i2c/chips/w83781d.c:268:
+                                                 ((val)+5)/10),0,255))
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: drivers/i2c/chips/w83781d.c:268:
+                                                 ((val)+5)/10),0,255))
                                                                 ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#486: FILE: drivers/i2c/chips/w83781d.c:269:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                   ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#486: FILE: drivers/i2c/chips/w83781d.c:269:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#486: FILE: drivers/i2c/chips/w83781d.c:269:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#486: FILE: drivers/i2c/chips/w83781d.c:269:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#486: FILE: drivers/i2c/chips/w83781d.c:269:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)
                                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#486: FILE: drivers/i2c/chips/w83781d.c:269:
+#define TEMP_FROM_REG(val) (((val)>0x80?(val)-0x100:(val))*10)

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: drivers/i2c/chips/w83781d.c:272:
+                                              0,0xffff))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/i2c/chips/w83781d.c:272:
+                                              0,0xffff))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: drivers/i2c/chips/w83781d.c:272:
+                                              0,0xffff))
                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#492: FILE: drivers/i2c/chips/w83781d.c:275:
+#define AS99127_TEMP_ADD_TO_REG(val) (SENSORS_LIMIT((((((val) + 2)*4)/10) \
                                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#492: FILE: drivers/i2c/chips/w83781d.c:275:
+#define AS99127_TEMP_ADD_TO_REG(val) (SENSORS_LIMIT((((((val) + 2)*4)/10) \
                                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/i2c/chips/w83781d.c:276:
+                                               << 7),0,0xffff))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/i2c/chips/w83781d.c:276:
+                                               << 7),0,0xffff))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: drivers/i2c/chips/w83781d.c:276:
+                                               << 7),0,0xffff))
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: drivers/i2c/chips/w83781d.c:276:
+                                               << 7),0,0xffff))
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: drivers/i2c/chips/w83781d.c:281:
+#define PWM_TO_REG(val) (SENSORS_LIMIT((val),0,255))
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: drivers/i2c/chips/w83781d.c:281:
+#define PWM_TO_REG(val) (SENSORS_LIMIT((val),0,255))
                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#502: FILE: drivers/i2c/chips/w83781d.c:285:
+#define BEEP_ENABLE_TO_REG(val)   ((val)?1:0)
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#502: FILE: drivers/i2c/chips/w83781d.c:285:
+#define BEEP_ENABLE_TO_REG(val)   ((val)?1:0)
                                           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#503: FILE: drivers/i2c/chips/w83781d.c:286:
+#define BEEP_ENABLE_FROM_REG(val) ((val)?1:0)
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#503: FILE: drivers/i2c/chips/w83781d.c:286:
+#define BEEP_ENABLE_FROM_REG(val) ((val)?1:0)
                                           ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#507: FILE: drivers/i2c/chips/w83781d.c:290:
+extern inline u8 DIV_TO_REG(long val, enum chips type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: drivers/i2c/chips/w83781d.c:293:
+	int i;
+	val = SENSORS_LIMIT(val, 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: drivers/i2c/chips/w83781d.c:294:
+	val = SENSORS_LIMIT(val, 1,
+		((type == w83781d || type == as99127f) ? 8 : 128)) >> 1;

CHECK:SPACING: No space is necessary after a cast
#517: FILE: drivers/i2c/chips/w83781d.c:300:
+	return ((u8) i);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#521: FILE: drivers/i2c/chips/w83781d.c:304:
+#define W83781D_INIT_IN_0 (vid==3500?280:vid/10)
                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#521: FILE: drivers/i2c/chips/w83781d.c:304:
+#define W83781D_INIT_IN_0 (vid==3500?280:vid/10)
                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#521: FILE: drivers/i2c/chips/w83781d.c:304:
+#define W83781D_INIT_IN_0 (vid==3500?280:vid/10)
                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#521: FILE: drivers/i2c/chips/w83781d.c:304:
+#define W83781D_INIT_IN_0 (vid==3500?280:vid/10)
                                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#522: FILE: drivers/i2c/chips/w83781d.c:305:
+#define W83781D_INIT_IN_1 (vid==3500?280:vid/10)
                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#522: FILE: drivers/i2c/chips/w83781d.c:305:
+#define W83781D_INIT_IN_1 (vid==3500?280:vid/10)
                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#522: FILE: drivers/i2c/chips/w83781d.c:305:
+#define W83781D_INIT_IN_1 (vid==3500?280:vid/10)
                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#522: FILE: drivers/i2c/chips/w83781d.c:305:
+#define W83781D_INIT_IN_1 (vid==3500?280:vid/10)
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#524: FILE: drivers/i2c/chips/w83781d.c:307:
+#define W83781D_INIT_IN_3 (((500)   * 100)/168)
                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#525: FILE: drivers/i2c/chips/w83781d.c:308:
+#define W83781D_INIT_IN_4 (((1200)  * 10)/38)
                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#526: FILE: drivers/i2c/chips/w83781d.c:309:
+#define W83781D_INIT_IN_5 (((-1200) * -604)/2100)
                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#527: FILE: drivers/i2c/chips/w83781d.c:310:
+#define W83781D_INIT_IN_6 (((-500)  * -604)/909)
                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#528: FILE: drivers/i2c/chips/w83781d.c:311:
+#define W83781D_INIT_IN_7 (((500)   * 100)/168)
                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#532: FILE: drivers/i2c/chips/w83781d.c:315:
+#define W83782D_INIT_IN_5 ((((-1200) + 1491) * 100)/514)
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#533: FILE: drivers/i2c/chips/w83781d.c:316:
+#define W83782D_INIT_IN_6 ((( (-500)  + 771) * 100)/314)
                                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#533: FILE: drivers/i2c/chips/w83781d.c:316:
+#define W83782D_INIT_IN_6 ((( (-500)  + 771) * 100)/314)

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: drivers/i2c/chips/w83781d.c:321:
+        (W83781D_INIT_IN_0 - W83781D_INIT_IN_0 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/i2c/chips/w83781d.c:321:
+        (W83781D_INIT_IN_0 - W83781D_INIT_IN_0 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: drivers/i2c/chips/w83781d.c:322:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/i2c/chips/w83781d.c:322:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: drivers/i2c/chips/w83781d.c:324:
+        (W83781D_INIT_IN_0 + W83781D_INIT_IN_0 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/i2c/chips/w83781d.c:324:
+        (W83781D_INIT_IN_0 + W83781D_INIT_IN_0 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: drivers/i2c/chips/w83781d.c:325:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/i2c/chips/w83781d.c:325:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: drivers/i2c/chips/w83781d.c:327:
+        (W83781D_INIT_IN_1 - W83781D_INIT_IN_1 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/i2c/chips/w83781d.c:327:
+        (W83781D_INIT_IN_1 - W83781D_INIT_IN_1 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: drivers/i2c/chips/w83781d.c:328:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/i2c/chips/w83781d.c:328:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: drivers/i2c/chips/w83781d.c:330:
+        (W83781D_INIT_IN_1 + W83781D_INIT_IN_1 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/i2c/chips/w83781d.c:330:
+        (W83781D_INIT_IN_1 + W83781D_INIT_IN_1 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: drivers/i2c/chips/w83781d.c:331:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: drivers/i2c/chips/w83781d.c:331:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/i2c/chips/w83781d.c:333:
+        (W83781D_INIT_IN_2 - W83781D_INIT_IN_2 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/i2c/chips/w83781d.c:333:
+        (W83781D_INIT_IN_2 - W83781D_INIT_IN_2 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: drivers/i2c/chips/w83781d.c:334:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/i2c/chips/w83781d.c:334:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: drivers/i2c/chips/w83781d.c:336:
+        (W83781D_INIT_IN_2 + W83781D_INIT_IN_2 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/i2c/chips/w83781d.c:336:
+        (W83781D_INIT_IN_2 + W83781D_INIT_IN_2 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: drivers/i2c/chips/w83781d.c:337:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: drivers/i2c/chips/w83781d.c:337:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: drivers/i2c/chips/w83781d.c:339:
+        (W83781D_INIT_IN_3 - W83781D_INIT_IN_3 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/i2c/chips/w83781d.c:339:
+        (W83781D_INIT_IN_3 - W83781D_INIT_IN_3 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: drivers/i2c/chips/w83781d.c:340:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: drivers/i2c/chips/w83781d.c:340:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: drivers/i2c/chips/w83781d.c:342:
+        (W83781D_INIT_IN_3 + W83781D_INIT_IN_3 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/i2c/chips/w83781d.c:342:
+        (W83781D_INIT_IN_3 + W83781D_INIT_IN_3 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: drivers/i2c/chips/w83781d.c:343:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/i2c/chips/w83781d.c:343:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: drivers/i2c/chips/w83781d.c:345:
+        (W83781D_INIT_IN_4 - W83781D_INIT_IN_4 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: drivers/i2c/chips/w83781d.c:345:
+        (W83781D_INIT_IN_4 - W83781D_INIT_IN_4 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: drivers/i2c/chips/w83781d.c:346:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: drivers/i2c/chips/w83781d.c:346:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/i2c/chips/w83781d.c:348:
+        (W83781D_INIT_IN_4 + W83781D_INIT_IN_4 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/i2c/chips/w83781d.c:348:
+        (W83781D_INIT_IN_4 + W83781D_INIT_IN_4 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: drivers/i2c/chips/w83781d.c:349:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/i2c/chips/w83781d.c:349:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: drivers/i2c/chips/w83781d.c:351:
+        (W83781D_INIT_IN_5 - W83781D_INIT_IN_5 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: drivers/i2c/chips/w83781d.c:351:
+        (W83781D_INIT_IN_5 - W83781D_INIT_IN_5 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: drivers/i2c/chips/w83781d.c:352:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/i2c/chips/w83781d.c:352:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: drivers/i2c/chips/w83781d.c:354:
+        (W83781D_INIT_IN_5 + W83781D_INIT_IN_5 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/i2c/chips/w83781d.c:354:
+        (W83781D_INIT_IN_5 + W83781D_INIT_IN_5 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: drivers/i2c/chips/w83781d.c:355:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/i2c/chips/w83781d.c:355:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: drivers/i2c/chips/w83781d.c:357:
+        (W83781D_INIT_IN_6 - W83781D_INIT_IN_6 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/i2c/chips/w83781d.c:357:
+        (W83781D_INIT_IN_6 - W83781D_INIT_IN_6 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: drivers/i2c/chips/w83781d.c:358:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: drivers/i2c/chips/w83781d.c:358:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: drivers/i2c/chips/w83781d.c:360:
+        (W83781D_INIT_IN_6 + W83781D_INIT_IN_6 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/i2c/chips/w83781d.c:360:
+        (W83781D_INIT_IN_6 + W83781D_INIT_IN_6 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: drivers/i2c/chips/w83781d.c:361:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/i2c/chips/w83781d.c:361:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: drivers/i2c/chips/w83781d.c:363:
+        (W83781D_INIT_IN_7 - W83781D_INIT_IN_7 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/i2c/chips/w83781d.c:363:
+        (W83781D_INIT_IN_7 - W83781D_INIT_IN_7 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: drivers/i2c/chips/w83781d.c:364:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/i2c/chips/w83781d.c:364:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: drivers/i2c/chips/w83781d.c:366:
+        (W83781D_INIT_IN_7 + W83781D_INIT_IN_7 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/i2c/chips/w83781d.c:366:
+        (W83781D_INIT_IN_7 + W83781D_INIT_IN_7 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: drivers/i2c/chips/w83781d.c:367:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/i2c/chips/w83781d.c:367:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: drivers/i2c/chips/w83781d.c:369:
+        (W83781D_INIT_IN_8 - W83781D_INIT_IN_8 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/i2c/chips/w83781d.c:369:
+        (W83781D_INIT_IN_8 - W83781D_INIT_IN_8 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/i2c/chips/w83781d.c:370:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/i2c/chips/w83781d.c:370:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/i2c/chips/w83781d.c:372:
+        (W83781D_INIT_IN_8 + W83781D_INIT_IN_8 * W83781D_INIT_IN_PERCENTAGE \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/i2c/chips/w83781d.c:372:
+        (W83781D_INIT_IN_8 + W83781D_INIT_IN_8 * W83781D_INIT_IN_PERCENTAGE \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: drivers/i2c/chips/w83781d.c:373:
+         / 100)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/i2c/chips/w83781d.c:373:
+         / 100)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: drivers/i2c/chips/w83781d.c:378:
+        (((-1200 * (100 + W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/i2c/chips/w83781d.c:378:
+        (((-1200 * (100 + W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#595: FILE: drivers/i2c/chips/w83781d.c:378:
+        (((-1200 * (100 + W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)
                                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: drivers/i2c/chips/w83781d.c:380:
+        ((W83782D_INIT_IN_MIN_5_TMP > 0) ? W83782D_INIT_IN_MIN_5_TMP : 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/i2c/chips/w83781d.c:380:
+        ((W83782D_INIT_IN_MIN_5_TMP > 0) ? W83782D_INIT_IN_MIN_5_TMP : 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: drivers/i2c/chips/w83781d.c:382:
+        (((-1200 * (100 - W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/i2c/chips/w83781d.c:382:
+        (((-1200 * (100 - W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#599: FILE: drivers/i2c/chips/w83781d.c:382:
+        (((-1200 * (100 - W83781D_INIT_IN_PERCENTAGE)) + (1491 * 100))/514)
                                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: drivers/i2c/chips/w83781d.c:384:
+        ((( -500 * (100 + W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/i2c/chips/w83781d.c:384:
+        ((( -500 * (100 + W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#601: FILE: drivers/i2c/chips/w83781d.c:384:
+        ((( -500 * (100 + W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)
                                                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#601: FILE: drivers/i2c/chips/w83781d.c:384:
+        ((( -500 * (100 + W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: drivers/i2c/chips/w83781d.c:386:
+        ((W83782D_INIT_IN_MIN_6_TMP > 0) ? W83782D_INIT_IN_MIN_6_TMP : 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/i2c/chips/w83781d.c:386:
+        ((W83782D_INIT_IN_MIN_6_TMP > 0) ? W83782D_INIT_IN_MIN_6_TMP : 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/i2c/chips/w83781d.c:388:
+        ((( -500 * (100 - W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/i2c/chips/w83781d.c:388:
+        ((( -500 * (100 - W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#605: FILE: drivers/i2c/chips/w83781d.c:388:
+        ((( -500 * (100 - W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)
                                                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#605: FILE: drivers/i2c/chips/w83781d.c:388:
+        ((( -500 * (100 - W83781D_INIT_IN_PERCENTAGE)) +  (771 * 100))/314)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#619: FILE: drivers/i2c/chips/w83781d.c:402:
+/* There are some complications in a module like this. First off, W83781D chips
+   may be both present on the SMBus and the ISA bus, and we have to handle

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#627: FILE: drivers/i2c/chips/w83781d.c:410:
+   for this yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#630: FILE: drivers/i2c/chips/w83781d.c:413:
+/* This module may seem overly long and complicated. In fact, it is not so
+   bad. Quite a lot of bookkeeping is done. A real driver can often cut

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#631: FILE: drivers/i2c/chips/w83781d.c:414:
+   some corners. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#634: FILE: drivers/i2c/chips/w83781d.c:417:
+/* For each registered W83781D, we need to keep some data in memory. That
+   data is pointed to by w83781d_list[NR]->data. The structure itself is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#636: FILE: drivers/i2c/chips/w83781d.c:419:
+   allocated. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#667: FILE: drivers/i2c/chips/w83781d.c:450:
+	u16 sens[3];		/* 782D/783S only.
+				   1 = pentium diode; 2 = 3904 diode;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: drivers/i2c/chips/w83781d.c:452:
+^I^I^I^I   Default = 3435. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#670: FILE: drivers/i2c/chips/w83781d.c:453:
+				   Other Betas unimplemented */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#690: FILE: drivers/i2c/chips/w83781d.c:473:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#719: FILE: drivers/i2c/chips/w83781d.c:502:
+static int w83781d_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#724: FILE: drivers/i2c/chips/w83781d.c:507:
+^I.flags ^I^I= I2C_DF_NOTIFY,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#732: FILE: drivers/i2c/chips/w83781d.c:515:
+/* These files are created for each detected chip. This is just a template;
+   though at first sight, you might think we could use a statically

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: drivers/i2c/chips/w83781d.c:517:
+   is done through one of the 'extra' fields which are initialized $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#735: FILE: drivers/i2c/chips/w83781d.c:518:
+   when a new copy is allocated. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1033: FILE: drivers/i2c/chips/w83781d.c:816:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1035: FILE: drivers/i2c/chips/w83781d.c:818:
+/* This function is called when:
+     * w83781d_driver is inserted (when this module is loaded), for each

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1037: FILE: drivers/i2c/chips/w83781d.c:820:
+     * when a new adapter is inserted (and w83781d_driver is still present) */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1055: FILE: drivers/i2c/chips/w83781d.c:838:
+	if (!is_isa
[...]
+					I2C_FUNC_SMBUS_BYTE_DATA)) goto

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1056: FILE: drivers/i2c/chips/w83781d.c:839:
+	if (!is_isa
+	    && !i2c_check_functionality(adapter,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1067: FILE: drivers/i2c/chips/w83781d.c:850:
+	/* Probe whether there is anything available on this address. Already
+	   done for SMBus clients */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1067: FILE: drivers/i2c/chips/w83781d.c:850:
+	   done for SMBus clients */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1070: FILE: drivers/i2c/chips/w83781d.c:853:
+		if (is_isa) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1073: FILE: drivers/i2c/chips/w83781d.c:856:
+			/* We need the timeouts for at least some LM78-like chips. But only
+			   if we read 'undefined' registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1073: FILE: drivers/i2c/chips/w83781d.c:856:
+			   if we read 'undefined' registers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1094: FILE: drivers/i2c/chips/w83781d.c:877:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1095: FILE: drivers/i2c/chips/w83781d.c:878:
+	   But it allows us to access w83781d_{read,write}_value. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1097: FILE: drivers/i2c/chips/w83781d.c:880:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#1097: FILE: drivers/i2c/chips/w83781d.c:880:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#1104: FILE: drivers/i2c/chips/w83781d.c:887:
+	data = (struct w83781d_data *) (new_client + 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1115: FILE: drivers/i2c/chips/w83781d.c:898:
+	/* The w8378?d may be stuck in some other bank than bank 0. This may
+	   make reading other information impossible. Specify a force=... or

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1117: FILE: drivers/i2c/chips/w83781d.c:900:
+	   bank. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1119: FILE: drivers/i2c/chips/w83781d.c:902:
+		if (w83781d_read_value(new_client, W83781D_REG_CONFIG) &
+		    0x80) goto ERROR1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0xa3'
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0xc3'
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x94'
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x5c'
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x12'
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 != 0x06'
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1124: FILE: drivers/i2c/chips/w83781d.c:907:
+		if ((!(val1 & 0x07)) &&
[...]
+			 && (val2 != 0x06)))) goto ERROR1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: drivers/i2c/chips/w83781d.c:908:
+^I^I    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1126: FILE: drivers/i2c/chips/w83781d.c:909:
+		    (((!(val1 & 0x80)) && (val2 != 0xa3) && (val2 != 0xc3) 
+			 && (val2 != 0x94))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1127: FILE: drivers/i2c/chips/w83781d.c:910:
+			 && (val2 != 0x94))
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1128: FILE: drivers/i2c/chips/w83781d.c:911:
+		     || ((val1 & 0x80) && (val2 != 0x5c) && (val2 != 0x12)
+			 && (val2 != 0x06)))) goto ERROR1;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!is_isa'
#1130: FILE: drivers/i2c/chips/w83781d.c:913:
+		if ((!is_isa) && (((!(val1 & 0x80)) && (val2 == 0xa3)) ||
+				  ((val1 & 0x80) && (val2 == 0x5c)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 == 0xa3'
#1130: FILE: drivers/i2c/chips/w83781d.c:913:
+		if ((!is_isa) && (((!(val1 & 0x80)) && (val2 == 0xa3)) ||
+				  ((val1 & 0x80) && (val2 == 0x5c)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val2 == 0x5c'
#1130: FILE: drivers/i2c/chips/w83781d.c:913:
+		if ((!is_isa) && (((!(val1 & 0x80)) && (val2 == 0xa3)) ||
+				  ((val1 & 0x80) && (val2 == 0x5c)))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1139: FILE: drivers/i2c/chips/w83781d.c:922:
+	/* We have either had a force parameter, or we have already detected the
+	   Winbond. Put it now into bank 0 and Vendor ID High Byte */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1139: FILE: drivers/i2c/chips/w83781d.c:922:
+	   Winbond. Put it now into bank 0 and Vendor ID High Byte */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1159: FILE: drivers/i2c/chips/w83781d.c:942:
+		if (val1 == 0x10 && vendid == winbond)
[...]
+		else if (val1 == 0x30 && vendid == winbond)
[...]
+		else if (val1 == 0x40 && vendid == winbond && !is_isa)
[...]
+		else if (val1 == 0x20 && vendid == winbond)
[...]
+		else if (val1 == 0x30 && vendid == asus && !is_isa)
[...]
+		else if (val1 == 0x60 && vendid == winbond && is_isa)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1171: FILE: drivers/i2c/chips/w83781d.c:954:
+		else {

WARNING:LONG_LINE_STRING: line length of 109 exceeds 100 columns
#1174: FILE: drivers/i2c/chips/w83781d.c:957:
+				    (KERN_WARNING "w83781d.o: Ignoring 'force' parameter for unknown chip at"

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPLIT_STRING: quoted string split across lines
#1175: FILE: drivers/i2c/chips/w83781d.c:958:
+				    (KERN_WARNING "w83781d.o: Ignoring 'force' parameter for unknown chip at"
+				     "adapter %d, address 0x%02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#1175: FILE: drivers/i2c/chips/w83781d.c:958:
+				    (KERN_WARNING "w83781d.o: Ignoring 'force' parameter for unknown chip at"
+				     "adapter %d, address 0x%02x\n",

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#1200: FILE: drivers/i2c/chips/w83781d.c:983:
+		pr_debug(KERN_ERR "w83781d.o: Internal error: unknown kind (%d)?!?",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: drivers/i2c/chips/w83781d.c:984:
+		pr_debug(KERN_ERR "w83781d.o: Internal error: unknown kind (%d)?!?",
+		       kind);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1218: FILE: drivers/i2c/chips/w83781d.c:1001:
+	if ((err = i2c_attach_client(new_client)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1223: FILE: drivers/i2c/chips/w83781d.c:1006:
+		if (!(data->lm75 = kmalloc(2 * sizeof(struct i2c_client),

ERROR:SPACING: space required before the open parenthesis '('
#1229: FILE: drivers/i2c/chips/w83781d.c:1012:
+		if(force_subclients[0] == id && force_subclients[1] == address) {

ERROR:SPACING: space required before the open parenthesis '('
#1230: FILE: drivers/i2c/chips/w83781d.c:1013:
+			for(i = 2; i <= 3; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#1231: FILE: drivers/i2c/chips/w83781d.c:1014:
+				if(force_subclients[i] < 0x48 ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1233: FILE: drivers/i2c/chips/w83781d.c:1016:
+					printk(KERN_ERR "w83781d.o: Invalid subclient address %d; must be 0x48-0x4f\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1234: FILE: drivers/i2c/chips/w83781d.c:1017:
+^I^I^I^I^I        force_subclients[i]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1234: FILE: drivers/i2c/chips/w83781d.c:1017:
+					printk(KERN_ERR "w83781d.o: Invalid subclient address %d; must be 0x48-0x4f\n",
+					        force_subclients[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: drivers/i2c/chips/w83781d.c:1022:
+^I^I^I                    W83781D_REG_I2C_SUBADDR,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1240: FILE: drivers/i2c/chips/w83781d.c:1023:
+^I^I^I                    (force_subclients[2] & 0x07) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1241: FILE: drivers/i2c/chips/w83781d.c:1024:
+^I^I^I                    ((force_subclients[3] & 0x07) <<4));$

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#1241: FILE: drivers/i2c/chips/w83781d.c:1024:
+			                    ((force_subclients[3] & 0x07) <<4));
 			                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1245: FILE: drivers/i2c/chips/w83781d.c:1028:
+^I^I^I^I^I          W83781D_REG_I2C_SUBADDR);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/i2c/chips/w83781d.c:1028:
+			val1 = w83781d_read_value(new_client,
+					          W83781D_REG_I2C_SUBADDR);

ERROR:SPACING: space required before the open parenthesis '('
#1249: FILE: drivers/i2c/chips/w83781d.c:1032:
+			if(force_subclients[0] == id &&

ERROR:SPACING: space required before the open parenthesis '('
#1255: FILE: drivers/i2c/chips/w83781d.c:1038:
+			if(data->lm75[0].addr == data->lm75[1].addr) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1256: FILE: drivers/i2c/chips/w83781d.c:1039:
+				printk(KERN_ERR "w83781d.o: Duplicate addresses 0x%x for subclients.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1257: FILE: drivers/i2c/chips/w83781d.c:1040:
+				printk(KERN_ERR "w83781d.o: Duplicate addresses 0x%x for subclients.\n",
+					data->lm75[0].addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->lm75[i]
#1279: FILE: drivers/i2c/chips/w83781d.c:1062:
+			if ((err = i2c_attach_client(&(data->lm75[i])))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1279: FILE: drivers/i2c/chips/w83781d.c:1062:
+			if ((err = i2c_attach_client(&(data->lm75[i])))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1280: FILE: drivers/i2c/chips/w83781d.c:1063:
+				printk(KERN_ERR "w83781d.o: Subclient %d registration at address 0x%x failed.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kind == as99127f'
#1294: FILE: drivers/i2c/chips/w83781d.c:1077:
+	if ((i = i2c_register_entry(new_client,
+					type_name,
+					(kind == as99127f) ?
+					   as99127f_dir_table_template :
+					(kind == w83781d) ?
+					   w83781d_dir_table_template :
+					(kind == w83783s) ?
+					   w83783s_dir_table_template :
+					(kind == w83697hf) ?
+					   w83697hf_dir_table_template :
+					(is_isa || kind == w83627hf) ?
+					   w83782d_isa_dir_table_template :
+					   w83782d_i2c_dir_table_template,
+					THIS_MODULE)) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kind == w83781d'
#1294: FILE: drivers/i2c/chips/w83781d.c:1077:
+	if ((i = i2c_register_entry(new_client,
+					type_name,
+					(kind == as99127f) ?
+					   as99127f_dir_table_template :
+					(kind == w83781d) ?
+					   w83781d_dir_table_template :
+					(kind == w83783s) ?
+					   w83783s_dir_table_template :
+					(kind == w83697hf) ?
+					   w83697hf_dir_table_template :
+					(is_isa || kind == w83627hf) ?
+					   w83782d_isa_dir_table_template :
+					   w83782d_i2c_dir_table_template,
+					THIS_MODULE)) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kind == w83783s'
#1294: FILE: drivers/i2c/chips/w83781d.c:1077:
+	if ((i = i2c_register_entry(new_client,
+					type_name,
+					(kind == as99127f) ?
+					   as99127f_dir_table_template :
+					(kind == w83781d) ?
+					   w83781d_dir_table_template :
+					(kind == w83783s) ?
+					   w83783s_dir_table_template :
+					(kind == w83697hf) ?
+					   w83697hf_dir_table_template :
+					(is_isa || kind == w83627hf) ?
+					   w83782d_isa_dir_table_template :
+					   w83782d_i2c_dir_table_template,
+					THIS_MODULE)) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kind == w83697hf'
#1294: FILE: drivers/i2c/chips/w83781d.c:1077:
+	if ((i = i2c_register_entry(new_client,
+					type_name,
+					(kind == as99127f) ?
+					   as99127f_dir_table_template :
+					(kind == w83781d) ?
+					   w83781d_dir_table_template :
+					(kind == w83783s) ?
+					   w83783s_dir_table_template :
+					(kind == w83697hf) ?
+					   w83697hf_dir_table_template :
+					(is_isa || kind == w83627hf) ?
+					   w83782d_isa_dir_table_template :
+					   w83782d_i2c_dir_table_template,
+					THIS_MODULE)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1294: FILE: drivers/i2c/chips/w83781d.c:1077:
+	if ((i = i2c_register_entry(new_client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/i2c/chips/w83781d.c:1078:
+	if ((i = i2c_register_entry(new_client,
+					type_name,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1318: FILE: drivers/i2c/chips/w83781d.c:1101:
+/* OK, this is not exactly good programming practice, usually. But it is
+   very code-efficient in this case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1318: FILE: drivers/i2c/chips/w83781d.c:1101:
+   very code-efficient in this case. */

WARNING:INDENTED_LABEL: labels should not be indented
#1320: FILE: drivers/i2c/chips/w83781d.c:1103:
+      ERROR7:

WARNING:INDENTED_LABEL: labels should not be indented
#1326: FILE: drivers/i2c/chips/w83781d.c:1109:
+      ERROR6:

WARNING:INDENTED_LABEL: labels should not be indented
#1332: FILE: drivers/i2c/chips/w83781d.c:1115:
+      ERROR5:

CHECK:SPACING: No space is necessary after a cast
#1334: FILE: drivers/i2c/chips/w83781d.c:1117:
+		kfree(((struct w83781d_data *) (new_client->data))->lm75);

WARNING:INDENTED_LABEL: labels should not be indented
#1335: FILE: drivers/i2c/chips/w83781d.c:1118:
+      ERROR4:

WARNING:INDENTED_LABEL: labels should not be indented
#1337: FILE: drivers/i2c/chips/w83781d.c:1120:
+      ERROR3:

WARNING:INDENTED_LABEL: labels should not be indented
#1340: FILE: drivers/i2c/chips/w83781d.c:1123:
+      ERROR1:

WARNING:INDENTED_LABEL: labels should not be indented
#1342: FILE: drivers/i2c/chips/w83781d.c:1125:
+      ERROR0:

CHECK:SPACING: No space is necessary after a cast
#1350: FILE: drivers/i2c/chips/w83781d.c:1133:
+	i2c_deregister_entry(((struct w83781d_data *) (client->data))->

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1353: FILE: drivers/i2c/chips/w83781d.c:1136:
+	if ((err = i2c_detach_client(client))) {

ERROR:SPACING: space required before the open parenthesis '('
#1359: FILE: drivers/i2c/chips/w83781d.c:1142:
+	if(i2c_is_isa_client(client)) {

CHECK:SPACING: No space is necessary after a cast
#1366: FILE: drivers/i2c/chips/w83781d.c:1149:
+		if((((struct w83781d_data *) (client->data))->type) != w83783s)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'client->data'
#1366: FILE: drivers/i2c/chips/w83781d.c:1149:
+		if((((struct w83781d_data *) (client->data))->type) != w83783s)

ERROR:SPACING: space required before the open parenthesis '('
#1366: FILE: drivers/i2c/chips/w83781d.c:1149:
+		if((((struct w83781d_data *) (client->data))->type) != w83783s)

CHECK:SPACING: No space is necessary after a cast
#1371: FILE: drivers/i2c/chips/w83781d.c:1154:
+		kfree(((struct w83781d_data *) (client->data))->lm75);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1384: FILE: drivers/i2c/chips/w83781d.c:1167:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: drivers/i2c/chips/w83781d.c:1174:
+   bank switches. ISA access must always be locked explicitly! $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1391: FILE: drivers/i2c/chips/w83781d.c:1174:
+/* The SMBus locks itself, usually, but nothing may access the Winbond between
+   bank switches. ISA access must always be locked explicitly! 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: drivers/i2c/chips/w83781d.c:1176:
+   would slow down the W83781D access and should not be necessary. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1395: FILE: drivers/i2c/chips/w83781d.c:1178:
+   nowhere else be necessary! */

CHECK:SPACING: No space is necessary after a cast
#1401: FILE: drivers/i2c/chips/w83781d.c:1184:
+	down(&(((struct w83781d_data *) (client->data))->lock));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1404: FILE: drivers/i2c/chips/w83781d.c:1187:
+		word_sized = (((reg & 0xff00) == 0x100)
+			      || ((reg & 0xff00) == 0x200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1405: FILE: drivers/i2c/chips/w83781d.c:1188:
+			      || ((reg & 0xff00) == 0x200))
+		    && (((reg & 0x00ff) == 0x50)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1406: FILE: drivers/i2c/chips/w83781d.c:1189:
+		    && (((reg & 0x00ff) == 0x50)
+			|| ((reg & 0x00ff) == 0x53)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1407: FILE: drivers/i2c/chips/w83781d.c:1190:
+			|| ((reg & 0x00ff) == 0x53)
+			|| ((reg & 0x00ff) == 0x55));

CHECK:SPACING: No space is necessary after a cast
#1439: FILE: drivers/i2c/chips/w83781d.c:1222:
+			    &(((struct w83781d_data *) (client->data))->

CHECK:SPACING: No space is necessary after a cast
#1468: FILE: drivers/i2c/chips/w83781d.c:1251:
+	up(&(((struct w83781d_data *) (client->data))->lock));

CHECK:SPACING: No space is necessary after a cast
#1477: FILE: drivers/i2c/chips/w83781d.c:1260:
+	down(&(((struct w83781d_data *) (client->data))->lock));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1480: FILE: drivers/i2c/chips/w83781d.c:1263:
+		word_sized = (((reg & 0xff00) == 0x100)
+			      || ((reg & 0xff00) == 0x200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1481: FILE: drivers/i2c/chips/w83781d.c:1264:
+			      || ((reg & 0xff00) == 0x200))
+		    && (((reg & 0x00ff) == 0x53)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1482: FILE: drivers/i2c/chips/w83781d.c:1265:
+		    && (((reg & 0x00ff) == 0x53)
+			|| ((reg & 0x00ff) == 0x55));

CHECK:SPACING: No space is necessary after a cast
#1514: FILE: drivers/i2c/chips/w83781d.c:1297:
+			cl = &(((struct w83781d_data *) (client->data))->

CHECK:SPACING: No space is necessary after a cast
#1536: FILE: drivers/i2c/chips/w83781d.c:1319:
+	up(&(((struct w83781d_data *) (client->data))->lock));

ERROR:SPACING: space required before the open parenthesis '('
#1548: FILE: drivers/i2c/chips/w83781d.c:1331:
+	if(init && type != as99127f) { /* this resets registers we don't have

ERROR:CODE_INDENT: code indent should use tabs where possible
#1549: FILE: drivers/i2c/chips/w83781d.c:1332:
+^I^I^I                  documentation for on the as99127f */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1549: FILE: drivers/i2c/chips/w83781d.c:1332:
+	if(init && type != as99127f) { /* this resets registers we don't have
+			                  documentation for on the as99127f */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1549: FILE: drivers/i2c/chips/w83781d.c:1332:
+			                  documentation for on the as99127f */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1553: FILE: drivers/i2c/chips/w83781d.c:1336:
+		/* Reset all except Watchdog values and last conversion values
+		   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1553: FILE: drivers/i2c/chips/w83781d.c:1336:
+		   This sets fan-divs to 2, among others */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1556: FILE: drivers/i2c/chips/w83781d.c:1339:
+		/* Restore the register and disable power-on abnormal beep.
+		   This saves FAN 1/2/3 input/output values set by BIOS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1556: FILE: drivers/i2c/chips/w83781d.c:1339:
+		   This saves FAN 1/2/3 input/output values set by BIOS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1559: FILE: drivers/i2c/chips/w83781d.c:1342:
+		/* Disable master beep-enable (reset turns it on).
+		   Individual beeps should be reset to off but for some reason

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1560: FILE: drivers/i2c/chips/w83781d.c:1343:
+		   disabling this bit helps some people not get beeped */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != w83781d'
#1572: FILE: drivers/i2c/chips/w83781d.c:1355:
+	if ((type != w83781d) && (type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != as99127f'
#1572: FILE: drivers/i2c/chips/w83781d.c:1355:
+	if ((type != w83781d) && (type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 2'
#1585: FILE: drivers/i2c/chips/w83781d.c:1368:
+			if ((type == w83783s || type == w83697hf) && (i == 2))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1591: FILE: drivers/i2c/chips/w83781d.c:1374:
+/*
+   Fill up the RT Tables.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1601: FILE: drivers/i2c/chips/w83781d.c:1384:
+/*
+    Auto-indexing doesn't seem to work...

WARNING:LINE_SPACING: Missing a blank line after declarations
#1606: FILE: drivers/i2c/chips/w83781d.c:1389:
+			int j;
+			for (j = 0; j < 32; j++) {

ERROR:SPACING: space required before the open parenthesis '('
#1618: FILE: drivers/i2c/chips/w83781d.c:1401:
+	if(init) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83782d'
#1664: FILE: drivers/i2c/chips/w83781d.c:1447:
+		if ((type == w83782d) || (type == w83627hf) ||
+		    (type == w83697hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83627hf'
#1664: FILE: drivers/i2c/chips/w83781d.c:1447:
+		if ((type == w83782d) || (type == w83627hf) ||
+		    (type == w83697hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == w83697hf'
#1664: FILE: drivers/i2c/chips/w83781d.c:1447:
+		if ((type == w83782d) || (type == w83627hf) ||
+		    (type == w83697hf)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1675: FILE: drivers/i2c/chips/w83781d.c:1458:
+			w83781d_write_value(client, W83781D_REG_VBAT,
+			    (w83781d_read_value(client, W83781D_REG_VBAT) | 0x01));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1683: FILE: drivers/i2c/chips/w83781d.c:1466:
+			w83781d_write_value(client, W83781D_REG_FAN_MIN(3),
+				    FAN_TO_REG(W83781D_INIT_FAN_MIN_3, 2));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1729: FILE: drivers/i2c/chips/w83781d.c:1512:
+^I^I           should have been reset to 0xff) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1729: FILE: drivers/i2c/chips/w83781d.c:1512:
+			/* enable PWM2 control (can't hurt since PWM reg
+		           should have been reset to 0xff) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1729: FILE: drivers/i2c/chips/w83781d.c:1512:
+		           should have been reset to 0xff) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1732: FILE: drivers/i2c/chips/w83781d.c:1515:
+^I^I           alarm indication will work correctly */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1732: FILE: drivers/i2c/chips/w83781d.c:1515:
+			/* enable comparator mode for temp2 and temp3 so
+		           alarm indication will work correctly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1732: FILE: drivers/i2c/chips/w83781d.c:1515:
+		           alarm indication will work correctly */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#1751: FILE: drivers/i2c/chips/w83781d.c:1534:
+	if ((jiffies - data->last_updated > HZ + HZ / 2) ||
+	    (jiffies < data->last_updated) || !data->valid) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1752: FILE: drivers/i2c/chips/w83781d.c:1535:
+	    (jiffies < data->last_updated) || !data->valid) {

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_DEBUG
#1753: FILE: drivers/i2c/chips/w83781d.c:1536:
+		pr_debug(KERN_DEBUG "Starting device update\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 1'
#1756: FILE: drivers/i2c/chips/w83781d.c:1539:
+			if ((data->type == w83783s || data->type == w83697hf)
+			    && (i == 1))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1757: FILE: drivers/i2c/chips/w83781d.c:1540:
+			if ((data->type == w83783s || data->type == w83697hf)
+			    && (i == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83782d'
#1767: FILE: drivers/i2c/chips/w83781d.c:1550:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83697hf'
#1767: FILE: drivers/i2c/chips/w83781d.c:1550:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83627hf'
#1767: FILE: drivers/i2c/chips/w83781d.c:1550:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 6'
#1767: FILE: drivers/i2c/chips/w83781d.c:1550:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1768: FILE: drivers/i2c/chips/w83781d.c:1551:
+			if ((data->type != w83782d) && (data->type != w83697hf)
+			    && (data->type != w83627hf) && (i == 6))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83783s'
#1783: FILE: drivers/i2c/chips/w83781d.c:1566:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+				        && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83627hf'
#1783: FILE: drivers/i2c/chips/w83781d.c:1566:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+				        && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == as99127f'
#1783: FILE: drivers/i2c/chips/w83781d.c:1566:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+				        && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83697hf'
#1783: FILE: drivers/i2c/chips/w83781d.c:1566:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+				        && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83782d'
#1783: FILE: drivers/i2c/chips/w83781d.c:1566:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)
+				        && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1784: FILE: drivers/i2c/chips/w83781d.c:1567:
+				if (((data->type == w83783s)
+				     || (data->type == w83627hf)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1785: FILE: drivers/i2c/chips/w83781d.c:1568:
+				     || (data->type == w83627hf)
+				     || (data->type == as99127f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1786: FILE: drivers/i2c/chips/w83781d.c:1569:
+				     || (data->type == as99127f)
+				     || (data->type == w83697hf)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1787: FILE: drivers/i2c/chips/w83781d.c:1570:
+				     || (data->type == w83697hf)
+				     || ((data->type == w83782d)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1788: FILE: drivers/i2c/chips/w83781d.c:1571:
+^I^I^I^I        && i2c_is_isa_client(client)))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1788: FILE: drivers/i2c/chips/w83781d.c:1571:
+				     || ((data->type == w83782d)
+				        && i2c_is_isa_client(client)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1789: FILE: drivers/i2c/chips/w83781d.c:1572:
+				        && i2c_is_isa_client(client)))
+				    && i == 2)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#1826: FILE: drivers/i2c/chips/w83781d.c:1609:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#1826: FILE: drivers/i2c/chips/w83781d.c:1609:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83782d'
#1837: FILE: drivers/i2c/chips/w83781d.c:1620:
+		if ((data->type == w83782d) || (data->type == w83627hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type == w83627hf'
#1837: FILE: drivers/i2c/chips/w83781d.c:1620:
+		if ((data->type == w83782d) || (data->type == w83627hf)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#1846: FILE: drivers/i2c/chips/w83781d.c:1629:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#1846: FILE: drivers/i2c/chips/w83781d.c:1629:
+		if ((data->type != w83781d) && (data->type != as99127f)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1858: FILE: drivers/i2c/chips/w83781d.c:1641:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1860: FILE: drivers/i2c/chips/w83781d.c:1643:
+/* The next few functions are the call-back functions of the /proc/sys and
+   sysctl files. Which function is used is defined in the ctl_table in

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1866: FILE: drivers/i2c/chips/w83781d.c:1649:
+   SENSORS_PROC_REAL_READ. Finally, it must get upto *nrels elements from
                                                 ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1871: FILE: drivers/i2c/chips/w83781d.c:1654:
+   you can assume it is large enough. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1878: FILE: drivers/i2c/chips/w83781d.c:1661:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1906: FILE: drivers/i2c/chips/w83781d.c:1689:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1911: FILE: drivers/i2c/chips/w83781d.c:1694:
+		results[0] = FAN_FROM_REG(data->fan_min[nr - 1],
+				  DIV_FROM_REG(data->fan_div[nr - 1]));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1913: FILE: drivers/i2c/chips/w83781d.c:1696:
+^I^I^I          DIV_FROM_REG(data->fan_div[nr - 1]));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1913: FILE: drivers/i2c/chips/w83781d.c:1696:
+		results[1] = FAN_FROM_REG(data->fan[nr - 1],
+			          DIV_FROM_REG(data->fan_div[nr - 1]));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1919: FILE: drivers/i2c/chips/w83781d.c:1702:
+^I^I^I            DIV_FROM_REG(data->fan_div[nr-1]));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1919: FILE: drivers/i2c/chips/w83781d.c:1702:
+			     FAN_TO_REG(results[0],
+			            DIV_FROM_REG(data->fan_div[nr-1]));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1919: FILE: drivers/i2c/chips/w83781d.c:1702:
+			            DIV_FROM_REG(data->fan_div[nr-1]));
 			                                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1931: FILE: drivers/i2c/chips/w83781d.c:1714:
+	struct w83781d_data *data = client->data;
+	if (operation == SENSORS_PROC_REAL_INFO)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1931: FILE: drivers/i2c/chips/w83781d.c:1714:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1959: FILE: drivers/i2c/chips/w83781d.c:1742:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'data->temp_add_over[nr]'
#1966: FILE: drivers/i2c/chips/w83781d.c:1749:
+			    AS99127_TEMP_ADD_FROM_REG(data->
+						      temp_add_over[nr]);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'data->temp_add_hyst[nr]'
#1969: FILE: drivers/i2c/chips/w83781d.c:1752:
+			    AS99127_TEMP_ADD_FROM_REG(data->
+						      temp_add_hyst[nr]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2008: FILE: drivers/i2c/chips/w83781d.c:1791:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2013: FILE: drivers/i2c/chips/w83781d.c:1796:
+	struct w83781d_data *data = client->data;
+	if (operation == SENSORS_PROC_REAL_INFO)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2013: FILE: drivers/i2c/chips/w83781d.c:1796:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#2026: FILE: drivers/i2c/chips/w83781d.c:1809:
+	struct w83781d_data *data = client->data;
+	if (operation == SENSORS_PROC_REAL_INFO)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2026: FILE: drivers/i2c/chips/w83781d.c:1809:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#2041: FILE: drivers/i2c/chips/w83781d.c:1824:
+	struct w83781d_data *data = client->data;
+	if (operation == SENSORS_PROC_REAL_INFO)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2041: FILE: drivers/i2c/chips/w83781d.c:1824:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2056: FILE: drivers/i2c/chips/w83781d.c:1839:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#2068: FILE: drivers/i2c/chips/w83781d.c:1851:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#2068: FILE: drivers/i2c/chips/w83781d.c:1851:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#2072: FILE: drivers/i2c/chips/w83781d.c:1855:
+						    ((data-> beeps) >> 16) &
 						          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2096: FILE: drivers/i2c/chips/w83781d.c:1879:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#2111: FILE: drivers/i2c/chips/w83781d.c:1894:
+		if ((data->type != w83781d) && data->type != as99127f) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#2122: FILE: drivers/i2c/chips/w83781d.c:1905:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#2122: FILE: drivers/i2c/chips/w83781d.c:1905:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#2134: FILE: drivers/i2c/chips/w83781d.c:1917:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#2134: FILE: drivers/i2c/chips/w83781d.c:1917:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != w83781d'
#2148: FILE: drivers/i2c/chips/w83781d.c:1931:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->type != as99127f'
#2148: FILE: drivers/i2c/chips/w83781d.c:1931:
+			if ((data->type != w83781d) &&
+			    (data->type != as99127f)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2167: FILE: drivers/i2c/chips/w83781d.c:1950:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2189: FILE: drivers/i2c/chips/w83781d.c:1972:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2199: FILE: drivers/i2c/chips/w83781d.c:1982:
+				tmp = w83781d_read_value(client,
+						       W83781D_REG_SCFG1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2205: FILE: drivers/i2c/chips/w83781d.c:1988:
+				tmp = w83781d_read_value(client,
+						       W83781D_REG_SCFG2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2214: FILE: drivers/i2c/chips/w83781d.c:1997:
+				tmp = w83781d_read_value(client,
+						       W83781D_REG_SCFG1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2220: FILE: drivers/i2c/chips/w83781d.c:2003:
+				tmp = w83781d_read_value(client,
+						       W83781D_REG_SCFG2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2229: FILE: drivers/i2c/chips/w83781d.c:2012:
+				tmp = w83781d_read_value(client,
+						       W83781D_REG_SCFG1);

WARNING:LONG_LINE_STRING: line length of 106 exceeds 100 columns
#2238: FILE: drivers/i2c/chips/w83781d.c:2021:
+				    (KERN_ERR "w83781d.o: Invalid sensor type %ld; must be 1, 2, or %d\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#2254: FILE: drivers/i2c/chips/w83781d.c:2037:
+	if (operation == SENSORS_PROC_REAL_INFO)
[...]
+	else if (operation == SENSORS_PROC_REAL_READ) {
[...]
+	} else if (operation == SENSORS_PROC_REAL_WRITE) {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2257: FILE: drivers/i2c/chips/w83781d.c:2040:
+		for (i = 0; i < 32; i++) {
+			results[i] = data->rt[nr - 1][i];
+		}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2277: FILE: drivers/i2c/chips/w83781d.c:2060:
+    return i2c_add_driver(&w83781d_driver);$

WARNING:SPLIT_STRING: quoted string split across lines
#2286: FILE: drivers/i2c/chips/w83781d.c:2069:
+MODULE_AUTHOR("Frodo Looijaard <frodol@dds.nl>, "
+	      "Philip Edelbrock <phil@netroedge.com>, "

WARNING:SPLIT_STRING: quoted string split across lines
#2287: FILE: drivers/i2c/chips/w83781d.c:2070:
+	      "Philip Edelbrock <phil@netroedge.com>, "
+	      "and Mark Studebaker <mdsxyz123@yahoo.com>");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 117 errors, 150 warnings, 169 checks, 2233 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
