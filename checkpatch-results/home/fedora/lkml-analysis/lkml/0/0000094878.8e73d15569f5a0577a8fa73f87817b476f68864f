WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
>>+static inline struct kobject * bdev_get_holder(struct block_device *bdev)

WARNING:TYPO_SPELLING: 'suposse' may be misspelled - perhaps 'suppose'?
#69: 
> I suposse the inlines are OK, given that we "know" that there's only a
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/fs.h:1388:
+extern int bd_claim_by_disk(struct block_device *, void *, struct gendisk *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/linux/fs.h:1389:
+extern void bd_release_from_disk(struct block_device *, struct gendisk *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#142: FILE: include/linux/fs.h:1389:
+extern void bd_release_from_disk(struct block_device *, struct gendisk *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#142: FILE: include/linux/fs.h:1389:
+extern void bd_release_from_disk(struct block_device *, struct gendisk *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/block_dev.c:502:
+ *     If a kobject is passed to bd_claim_by_kobject() $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: fs/block_dev.c:567:
+static int bd_holder_grab_dirs(struct block_device *bdev,
+			struct bd_holder *bo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: fs/block_dev.c:679:
+static struct bd_holder *del_bd_holder(struct block_device *bdev,
+					struct kobject *kobj)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#354: FILE: fs/block_dev.c:686:
+			BUG_ON(bo->count < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: fs/block_dev.c:702:
+ * bd_claim_by_kobject - bd_claim() with additional kobject signature $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: fs/block_dev.c:716:
+static int bd_claim_by_kobject(struct block_device *bdev, void *holder,
+				struct kobject *kobj)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: fs/block_dev.c:746:
+static void bd_release_from_kobject(struct block_device *bdev,
+					struct kobject *kobj)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: fs/block_dev.c:755:
+	if ((bo = del_bd_holder(bdev, kobj)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: fs/block_dev.c:770:
+int bd_claim_by_disk(struct block_device *bdev, void *holder,
+			struct gendisk *disk)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 7 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000094878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
