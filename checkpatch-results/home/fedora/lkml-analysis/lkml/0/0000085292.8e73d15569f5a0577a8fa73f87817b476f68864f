WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: kernel/module.c:5:
+   Modification of per_cpu variables such that modules contain$

CHECK:CAMELCASE: Avoid CamelCase: <Modification>
#40: FILE: kernel/module.c:5:
+   Modification of per_cpu variables such that modules contain

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: kernel/module.c:6:
+   their own sections of these variables.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.$

CHECK:CAMELCASE: Avoid CamelCase: <Copyright>
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.

CHECK:CAMELCASE: Avoid CamelCase: <Steven>
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.

CHECK:CAMELCASE: Avoid CamelCase: <Rostedt>
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.

CHECK:CAMELCASE: Avoid CamelCase: <Kihon>
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.

CHECK:CAMELCASE: Avoid CamelCase: <Technologies>
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.

CHECK:CAMELCASE: Avoid CamelCase: <Inc>
#42: FILE: kernel/module.c:7:
+     -  Copyright(C) 2006 Steven Rostedt, Kihon Technologies Inc.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#99: FILE: kernel/module.c:266:
+	ptr = kmalloc(size * NR_CPUS, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#101: FILE: kernel/module.c:268:
+		printk(KERN_WARNING "Could not allocate %lu bytes percpu data\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#101: FILE: kernel/module.c:268:
+	if (!ptr)
+		printk(KERN_WARNING "Could not allocate %lu bytes percpu data\n",

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#151: FILE: kernel/module.c:291:
+	per_cpu_offset = kmalloc(sizeof(unsigned long) * NR_CPUS, GFP_KERNEL);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#156: FILE: kernel/module.c:296:
+	for (i = 0; i < NR_CPUS; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: kernel/module.c:304:
+	for (i=0; i < sect_size; i++, ptr++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#204: FILE: kernel/module.c:319:
+	for (i=0; i < NR_CPUS; i++) {
 	      ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#204: FILE: kernel/module.c:319:
+	for (i=0; i < NR_CPUS; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#216: FILE: kernel/module.c:333:
+static unsigned int find_pcpuoffsetsec(Elf_Ehdr *hdr,

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#217: FILE: kernel/module.c:334:
+				       Elf_Shdr *sechdrs,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#259: FILE: kernel/module.c:364:
 }
+static inline unsigned int find_pcpuoffsetsec(Elf_Ehdr *hdr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#310: FILE: kernel/module.c:1528:
+		BUG_ON(!pcpuoffsetindex);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: kernel/module.c:1580:
+				unsigned long *ret;
+				BUG_ON(!pcpuindex);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#324: FILE: kernel/module.c:1580:
+				BUG_ON(!pcpuindex);

CHECK:BRACES: Unbalanced braces around else statement
#331: FILE: kernel/module.c:1587:
+			} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 11 checks, 323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
