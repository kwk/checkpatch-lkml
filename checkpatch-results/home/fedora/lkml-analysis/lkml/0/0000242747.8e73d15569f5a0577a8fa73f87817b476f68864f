WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#113: 
diff -X /home/jdittmer/stuff/diffignore -ur linus/drivers/pci/hotplug/fakephp.c pcirescan/drivers/pci/hotplug/fakephp.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/pci/hotplug/fakephp.c:172:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#130: FILE: drivers/pci/hotplug/fakephp.c:178:
+	struct pci_dev* old_dev = pci_find_slot(bus->number, temp->devfn);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: drivers/pci/hotplug/fakephp.c:183:
+	u8 hdr_type;
+	if (!pci_read_config_byte(temp, PCI_HEADER_TYPE, &hdr_type)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#137: FILE: drivers/pci/hotplug/fakephp.c:185:
+		new_multi=hdr_type & 0x80;
 		         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/pci/hotplug/fakephp.c:190:
+				dbg("Found new device on %s function %x:%x %x\n",
+						bus->name, temp->devfn >> 3,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: drivers/pci/hotplug/fakephp.c:208:
+						dbg("Found new device on %s function %x:%x %x\n",
+								bus->name, temp->devfn >> 3,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/pci/hotplug/fakephp.c:214:
+^I^I^I^I} $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#172: FILE: drivers/pci/hotplug/fakephp.c:220:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: drivers/pci/hotplug/fakephp.c:224:
+ * $

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: drivers/pci/hotplug/fakephp.c:231:
+	struct pci_dev *dev;
+	dev = kmalloc(sizeof(struct pci_dev), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct pci_dev)...)
#183: FILE: drivers/pci/hotplug/fakephp.c:231:
+	dev = kmalloc(sizeof(struct pci_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#188: FILE: drivers/pci/hotplug/fakephp.c:236:
+	dev->bus = (struct pci_bus*)bus;

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: drivers/pci/hotplug/fakephp.c:249:
+	const struct list_head *l;
+	list_for_each(l,list) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: drivers/pci/hotplug/fakephp.c:249:
+	list_for_each(l,list) {
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: drivers/pci/hotplug/fakephp.c:251:
+		const struct pci_bus *b = pci_bus_b(l);
+		pci_rescan_bus(b);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#209: FILE: drivers/pci/hotplug/fakephp.c:257:
+static void pci_rescan(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#213: FILE: drivers/pci/hotplug/fakephp.c:261:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/pci/hotplug/fakephp.c:270:
+static struct hotplug_slot *get_slot_from_dev(struct pci_dev *dev) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: drivers/pci/hotplug/fakephp.c:281:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#250: FILE: drivers/pci/hotplug/fakephp.c:303:
+		for (func=1;func<8;func++) {
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#250: FILE: drivers/pci/hotplug/fakephp.c:303:
+		for (func=1;func<8;func++) {
 		           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#250: FILE: drivers/pci/hotplug/fakephp.c:303:
+		for (func=1;func<8;func++) {
 		                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#250: FILE: drivers/pci/hotplug/fakephp.c:303:
+		for (func=1;func<8;func++) {
 		                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/pci/hotplug/fakephp.c:304:
+^I^I^Idbg("Considering %x %x+%x\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/pci/hotplug/fakephp.c:305:
+			dbg("Considering %x %x+%x\n", 
+					dslot->dev->bus->number,

CHECK:BRACES: braces {} should be used on all arms of this statement
#256: FILE: drivers/pci/hotplug/fakephp.c:309:
+			if (dev) {
[...]
+			} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#257: FILE: drivers/pci/hotplug/fakephp.c:310:
+				dbg("Slot %s Removed <%s>\n", dslot->dev->slot_name, dslot->dev->pretty_name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#259: FILE: drivers/pci/hotplug/fakephp.c:312:
+				if (hslot)
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#261: FILE: drivers/pci/hotplug/fakephp.c:314:
+				else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: drivers/pci/hotplug/fakephp.c:318:
+^I^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#265: FILE: drivers/pci/hotplug/fakephp.c:318:
+			} else 

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#300: FILE: drivers/pci/bus.c:74:
+void __devinit pci_bus_add_device(struct pci_dev *dev) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#300: FILE: drivers/pci/bus.c:74:
+void __devinit pci_bus_add_device(struct pci_dev *dev) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 7 warnings, 11 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000242747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
