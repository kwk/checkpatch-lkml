WARNING:TYPO_SPELLING: 'havn't' may be misspelled - perhaps 'haven't'?
#32: 
done after he left for vacation, so I havn't heard if he hates
                                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#	           ChangeSet	1.537   -> 1.538  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	include/asm-alpha/pgalloc.h	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	arch/alpha/kernel/sys_rx164.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	        mm/vmalloc.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	arch/alpha/kernel/sys_sio.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	arch/alpha/kernel/sys_ruffian.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	include/asm-i386/pgalloc.h	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	arch/alpha/kernel/sys_jensen.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	           mm/mmap.c	1.22    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	arch/alpha/kernel/sys_sable.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	arch/alpha/kernel/sys_eiger.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	       kernel/fork.c	1.37    -> 1.38   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	arch/i386/kernel/vm86.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	         mm/vmscan.c	1.58    -> 1.59   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	arch/alpha/kernel/sys_takara.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	arch/alpha/kernel/core_irongate.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	     kernel/module.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	arch/alpha/kernel/sys_dp264.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	    fs/binfmt_aout.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	arch/alpha/kernel/sys_eb64p.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	include/linux/highmem.h	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	arch/alpha/kernel/sys_mikasa.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	arch/alpha/kernel/sys_noritake.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	 arch/i386/mm/init.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/i386/mm/ioremap.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	arch/alpha/kernel/sys_cabriolet.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	arch/alpha/mm/fault.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	          mm/msync.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	arch/alpha/kernel/sys_nautilus.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	       mm/mprotect.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	arch/alpha/kernel/sys_wildfire.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	arch/alpha/kernel/sys_alcor.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	         mm/memory.c	1.54    -> 1.55   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	arch/alpha/kernel/sys_sx164.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	arch/alpha/kernel/sys_miata.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	         mm/mremap.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#	include/asm-i386/pgtable.h	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#	arch/i386/kernel/acpi.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#	arch/alpha/kernel/sys_rawhide.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
#	arch/alpha/kernel/sys_titan.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
#	               (new)	        -> 1.1     include/asm-i386/cacheflush.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
#	               (new)	        -> 1.1     include/asm-alpha/tlbflush.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#	               (new)	        -> 1.1     include/asm-i386/tlbflush.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
#	               (new)	        -> 1.1     include/asm-alpha/cacheflush.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
# 02/03/25	rth@are.twiddle.net	1.538

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#93: 
# Break an include loop by moving cache flushing routines from

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#94: 
# asm/pgtable.h and/or asm/pgalloc.h to asm/cacheflush.h, and

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#95: 
# tlb flushing routines to asm/tlbflush.h.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#96: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#99: 
--- a/arch/alpha/kernel/core_irongate.c	Thu Mar 28 09:52:12 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#105: FILE: arch/alpha/kernel/core_irongate.c:22:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: arch/i386/mm/init.c:598:
+			unsigned long pmd = __get_free_page(GFP_KERNEL);
+			if (!pmd)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: arch/i386/mm/init.c:604:
+		memcpy(pgd + USER_PTRS_PER_PGD,
+			swapper_pg_dir + USER_PTRS_PER_PGD,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#404: FILE: arch/i386/mm/init.c:610:
+		free_page((unsigned long)__va(pgd_val(pgd[i])-1));
 		                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#414: FILE: arch/i386/mm/init.c:620:
+		free_page((unsigned long)__va(pgd_val(pgd[i])-1));
 		                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: arch/i386/mm/init.c:633:
+		memcpy(pgd + USER_PTRS_PER_PGD,
+			swapper_pg_dir + USER_PTRS_PER_PGD,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: arch/i386/mm/init.c:649:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: arch/i386/mm/init.c:649:
+   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: arch/i386/mm/init.c:650:
+   ^Ido {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#444: FILE: arch/i386/mm/init.c:650:
+   ^Ido {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: arch/i386/mm/init.c:650:
+   ^Ido {$

CHECK:SPACING: No space is necessary after a cast
#445: FILE: arch/i386/mm/init.c:651:
+		pte = (pte_t *) __get_free_page(GFP_KERNEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#446: FILE: arch/i386/mm/init.c:652:
+		if (pte)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#448: FILE: arch/i386/mm/init.c:654:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: arch/i386/mm/init.c:666:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: arch/i386/mm/init.c:666:
+   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/i386/mm/init.c:667:
+   ^Ido {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#461: FILE: arch/i386/mm/init.c:667:
+   ^Ido {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/i386/mm/init.c:667:
+   ^Ido {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#467: FILE: arch/i386/mm/init.c:673:
+		if (pte)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#469: FILE: arch/i386/mm/init.c:675:
+		else {

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#483: FILE: arch/i386/mm/ioremap.c:14:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#496: FILE: fs/binfmt_aout.c:31:
+#include <asm/cacheflush.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: include/asm-alpha/cacheflush.h:1:
+#ifndef _ALPHA_CACHEFLUSH_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#519: FILE: include/asm-alpha/cacheflush.h:16:
+/* Note that the following two definitions are _highly_ dependent
+   on the contexts in which they are used in the kernel.  I personally

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#520: FILE: include/asm-alpha/cacheflush.h:17:
+   think it is criminal how loosely defined these macros are.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#523: FILE: include/asm-alpha/cacheflush.h:20:
+/* We need to flush the kernel's icache after loading modules.  The
+   only other use of this macro is in load_aout_interp which is not

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: include/asm-alpha/cacheflush.h:21:
+   used on Alpha. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#529: FILE: include/asm-alpha/cacheflush.h:26:
+   for the process.  */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: include/asm-alpha/cacheflush.h:31:
+extern void smp_imb(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#538: FILE: include/asm-alpha/cacheflush.h:35:
+/* We need to flush the userspace icache after setting breakpoints in
+   ptrace.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#541: FILE: include/asm-alpha/cacheflush.h:38:
+   that icache entries are tagged with the ASN and load a new mm context.  */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#545: FILE: include/asm-alpha/cacheflush.h:42:
+extern void __load_new_mm_context(struct mm_struct *);

WARNING:LINE_SPACING: Missing a blank line after declarations
#552: FILE: include/asm-alpha/cacheflush.h:49:
+		struct mm_struct *mm = vma->vm_mm;
+		if (current->active_mm == mm)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#559: FILE: include/asm-alpha/cacheflush.h:56:
+extern void flush_icache_user_range(struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: include/asm-alpha/cacheflush.h:57:
+extern void flush_icache_user_range(struct vm_area_struct *vma,
+		struct page *page, unsigned long addr, int len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: include/asm-alpha/cacheflush.h:62:
+  flush_icache_user_range((vma), (page), 0, 0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#812: FILE: include/asm-alpha/tlbflush.h:1:
+#ifndef _ALPHA_TLBFLUSH_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#819: FILE: include/asm-alpha/tlbflush.h:8:
+#define __EXTERN_INLINE extern inline

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: include/asm-alpha/tlbflush.h:12:
+extern void __load_new_mm_context(struct mm_struct *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#825: FILE: include/asm-alpha/tlbflush.h:14:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#827: FILE: include/asm-alpha/tlbflush.h:16:
+/* Use a few helper functions to hide the ugly broken ASN
+   numbers on early Alphas (ev4 and ev45).  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#827: FILE: include/asm-alpha/tlbflush.h:16:
+   numbers on early Alphas (ev4 and ev45).  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#843: FILE: include/asm-alpha/tlbflush.h:32:
+/* Flush just one page in the current TLB set.  We need to be very
+   careful about the icache here, there is no way to invalidate a

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#844: FILE: include/asm-alpha/tlbflush.h:33:
+   specific icache page.  */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#847: FILE: include/asm-alpha/tlbflush.h:36:
+ev4_flush_tlb_current_page(struct mm_struct * mm,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#852: FILE: include/asm-alpha/tlbflush.h:41:
+	int tbi_flag = 2;
+	if (vma->vm_flags & VM_EXEC) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#860: FILE: include/asm-alpha/tlbflush.h:49:
+ev5_flush_tlb_current_page(struct mm_struct * mm,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#870: FILE: include/asm-alpha/tlbflush.h:59:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#902: FILE: include/asm-alpha/tlbflush.h:91:
+	/* Check it's not zero first to avoid cacheline ping pong
+	   when possible.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#902: FILE: include/asm-alpha/tlbflush.h:91:
+	   when possible.  */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#903: FILE: include/asm-alpha/tlbflush.h:92:
+	if (*mmc) *mmc = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#907: FILE: include/asm-alpha/tlbflush.h:96:
+/* Flush a specified range of user mapping page tables from TLB.
+   Although Alpha uses VPTE caches, this can be a nop, as Alpha does

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#909: FILE: include/asm-alpha/tlbflush.h:98:
+   during next flush_tlb_range.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#919: FILE: include/asm-alpha/tlbflush.h:108:
+/* Flush everything (kernel mapping may also have changed
+   due to vmalloc/vfree).  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#919: FILE: include/asm-alpha/tlbflush.h:108:
+   due to vmalloc/vfree).  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#948: FILE: include/asm-alpha/tlbflush.h:137:
+/* Flush a specified range of user mapping.  On the Alpha we flush
+   the whole user tlb.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#948: FILE: include/asm-alpha/tlbflush.h:137:
+   the whole user tlb.  */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#958: FILE: include/asm-alpha/tlbflush.h:147:
+extern void flush_tlb_all(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#959: FILE: include/asm-alpha/tlbflush.h:148:
+extern void flush_tlb_mm(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#959: FILE: include/asm-alpha/tlbflush.h:148:
+extern void flush_tlb_mm(struct mm_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#960: FILE: include/asm-alpha/tlbflush.h:149:
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#960: FILE: include/asm-alpha/tlbflush.h:149:
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#960: FILE: include/asm-alpha/tlbflush.h:149:
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#961: FILE: include/asm-alpha/tlbflush.h:150:
+extern void flush_tlb_range(struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#961: FILE: include/asm-alpha/tlbflush.h:150:
+extern void flush_tlb_range(struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#961: FILE: include/asm-alpha/tlbflush.h:150:
+extern void flush_tlb_range(struct vm_area_struct *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#961: FILE: include/asm-alpha/tlbflush.h:150:
+extern void flush_tlb_range(struct vm_area_struct *, unsigned long,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#971: FILE: include/asm-i386/cacheflush.h:1:
+#ifndef _I386_CACHEFLUSH_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#985: FILE: include/asm-i386/cacheflush.h:15:
+#define flush_icache_page(vma,pg)		do { } while (0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: include/asm-i386/cacheflush.h:16:
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: include/asm-i386/cacheflush.h:16:
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: include/asm-i386/cacheflush.h:16:
+#define flush_icache_user_range(vma,pg,adr,len)	do { } while (0)
                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1041: FILE: include/asm-i386/pgalloc.h:22:
+extern pgd_t *pgd_alloc(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1041: FILE: include/asm-i386/pgalloc.h:22:
+extern pgd_t *pgd_alloc(struct mm_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1042: FILE: include/asm-i386/pgalloc.h:23:
+extern void pgd_free(pgd_t *pgd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1109: FILE: include/asm-i386/pgalloc.h:25:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1109: FILE: include/asm-i386/pgalloc.h:25:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1109: FILE: include/asm-i386/pgalloc.h:25:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1110: FILE: include/asm-i386/pgalloc.h:26:
+extern struct page *pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1110: FILE: include/asm-i386/pgalloc.h:26:
+extern struct page *pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1110: FILE: include/asm-i386/pgalloc.h:26:
+extern struct page *pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1279: FILE: include/asm-i386/tlbflush.h:1:
+#ifndef _I386_TLBFLUSH_H

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1284: FILE: include/asm-i386/tlbflush.h:6:
+#include <asm/processor.h>

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1291: FILE: include/asm-i386/tlbflush.h:13:
+			"movl %%cr3, %0;  # flush TLB \n"		\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1292: FILE: include/asm-i386/tlbflush.h:14:
+			"movl %0, %%cr3;              \n"		\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1306: FILE: include/asm-i386/tlbflush.h:28:
+			"movl %1, %%cr4;  # turn off PGE     \n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1307: FILE: include/asm-i386/tlbflush.h:29:
+			"movl %%cr3, %0;  # flush TLB        \n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1308: FILE: include/asm-i386/tlbflush.h:30:
+			"movl %0, %%cr3;                     \n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1309: FILE: include/asm-i386/tlbflush.h:31:
+			"movl %2, %%cr4;  # turn PGE back on \n"	\

WARNING:TYPO_SPELLING: 'unnecesserily' may be misspelled - perhaps 'unnecessarily'?
#1319: FILE: include/asm-i386/tlbflush.h:41:
+ * Do not check the PGE bit unnecesserily if this is a PPro+ kernel.
                             ^^^^^^^^^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1336: FILE: include/asm-i386/tlbflush.h:58:
+#define __flush_tlb_one(addr) \
+__asm__ __volatile__("invlpg %0": :"m" (*(char *) addr))

CHECK:SPACING: No space is necessary after a cast
#1337: FILE: include/asm-i386/tlbflush.h:59:
+__asm__ __volatile__("invlpg %0": :"m" (*(char *) addr))

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1337: FILE: include/asm-i386/tlbflush.h:59:
+__asm__ __volatile__("invlpg %0": :"m" (*(char *) addr))
                                 ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1337: FILE: include/asm-i386/tlbflush.h:59:
+__asm__ __volatile__("invlpg %0": :"m" (*(char *) addr))
                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1367: FILE: include/asm-i386/tlbflush.h:89:
+static inline void flush_tlb_page(struct vm_area_struct *vma,
+	unsigned long addr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1374: FILE: include/asm-i386/tlbflush.h:96:
+static inline void flush_tlb_range(struct vm_area_struct *vma,
+	unsigned long start, unsigned long end)

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#1382: FILE: include/asm-i386/tlbflush.h:104:
+#include <asm/smp.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1387: FILE: include/asm-i386/tlbflush.h:109:
+extern void flush_tlb_all(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1388: FILE: include/asm-i386/tlbflush.h:110:
+extern void flush_tlb_current_task(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1389: FILE: include/asm-i386/tlbflush.h:111:
+extern void flush_tlb_mm(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1389: FILE: include/asm-i386/tlbflush.h:111:
+extern void flush_tlb_mm(struct mm_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1390: FILE: include/asm-i386/tlbflush.h:112:
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#1390: FILE: include/asm-i386/tlbflush.h:112:
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1390: FILE: include/asm-i386/tlbflush.h:112:
+extern void flush_tlb_page(struct vm_area_struct *, unsigned long);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1394: FILE: include/asm-i386/tlbflush.h:116:
+static inline void flush_tlb_range(struct vm_area_struct * vma, unsigned long start, unsigned long end)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1394: FILE: include/asm-i386/tlbflush.h:116:
+static inline void flush_tlb_range(struct vm_area_struct * vma, unsigned long start, unsigned long end)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1403: FILE: include/asm-i386/tlbflush.h:125:
+struct tlb_state
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1408: FILE: include/asm-i386/tlbflush.h:130:
+};
+extern struct tlb_state cpu_tlbstate[NR_CPUS];

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1410: FILE: include/asm-i386/tlbflush.h:132:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1427: FILE: include/linux/highmem.h:7:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1438: FILE: kernel/fork.c:32:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1450: FILE: kernel/module.c:14:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1489: FILE: mm/mprotect.c:17:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1505: FILE: mm/mremap.c:18:
+#include <asm/cacheflush.h>

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467143.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 121 warnings, 35 checks, 1268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467143.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
