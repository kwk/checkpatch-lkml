WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#36: 
1. it wont compile modular, as libata depends on scsi_transport_libata
      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'arent' may be misspelled - perhaps 'aren't'?
#38: 
around this (and there arent any significant number of drivers in tree
                       ^^^^^

WARNING:TYPO_SPELLING: 'couldnt' may be misspelled - perhaps 'couldn't'?
#44: 
3. I couldnt work out what scsi_transport_template.size was the size of,
     ^^^^^^^

WARNING:TYPO_SPELLING: 'couldnt' may be misspelled - perhaps 'couldn't'?
#45: 
as I couldnt see where it was used anywhere...
     ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
diff -urN linux-2.6.5-rc3-libata1-orig/drivers/scsi/Kconfig linux-2.6.5-rc3-libata1/drivers/scsi/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#65: FILE: drivers/scsi/Kconfig:217:
+config SCSI_LIBATA_ATTRS
+        tristate "Libata SCSI Transport Attributes"
+        depends on SCSI
+        help
+          If you wish to export transport-specific information about
+          each attached SATA device to sysfs, say Y.  Otherwise, say N.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/scsi/libata-core.c:2943:
+        host->transportt = &libata_transport_template;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/scsi/libata-core.c:2943:
+        host->transportt = &libata_transport_template;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: drivers/scsi/scsi_transport_libata.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: drivers/scsi/scsi_transport_libata.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: drivers/scsi/scsi_transport_libata.c:2:
+/* 
+   Libata transport specific attributes exported to sysfs.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/scsi/scsi_transport_libata.c:5:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: drivers/scsi/scsi_transport_libata.c:58:
+	struct scsi_device *sdev = transport_class_to_sdev(class_dev);
+	put_device(&sdev->sdev_gendev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#175: FILE: drivers/scsi/scsi_transport_libata.c:61:
+static ssize_t show_libata_transport_string(struct class_device *cdev, char *buf, int offset, int len)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/scsi/scsi_transport_libata.c:63:
+        struct scsi_device *sdev = transport_class_to_sdev(cdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/scsi/scsi_transport_libata.c:63:
+        struct scsi_device *sdev = transport_class_to_sdev(cdev);$

CHECK:SPACING: No space is necessary after a cast
#178: FILE: drivers/scsi/scsi_transport_libata.c:64:
+	struct ata_port *ap = (struct ata_port *) &sdev->host->hostdata[0];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/scsi/scsi_transport_libata.c:76:
+        return show_libata_transport_string(cdev, buf, ATA_ID_PROD_OFS, ATA_PROD_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/scsi/scsi_transport_libata.c:76:
+        return show_libata_transport_string(cdev, buf, ATA_ID_PROD_OFS, ATA_PROD_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/scsi/scsi_transport_libata.c:81:
+        return show_libata_transport_string(cdev, buf, ATA_ID_FW_OFS, ATA_FW_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/scsi/scsi_transport_libata.c:81:
+        return show_libata_transport_string(cdev, buf, ATA_ID_FW_OFS, ATA_FW_LEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/scsi/scsi_transport_libata.c:86:
+        return show_libata_transport_string(cdev, buf, ATA_ID_SERNO_OFS, ATA_SERNO_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/scsi/scsi_transport_libata.c:86:
+        return show_libata_transport_string(cdev, buf, ATA_ID_SERNO_OFS, ATA_SERNO_LEN);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#203: FILE: drivers/scsi/scsi_transport_libata.c:89:
+static CLASS_DEVICE_ATTR(model, S_IRUGO, show_libata_transport_model, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#204: FILE: drivers/scsi/scsi_transport_libata.c:90:
+static CLASS_DEVICE_ATTR(firmware, S_IRUGO, show_libata_transport_firmware, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#205: FILE: drivers/scsi/scsi_transport_libata.c:91:
+static CLASS_DEVICE_ATTR(serial, S_IRUGO, show_libata_transport_serial, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/scsi/scsi_transport_libata.c:101:
+        .attrs = libata_transport_attrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/scsi/scsi_transport_libata.c:101:
+        .attrs = libata_transport_attrs,$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#223: FILE: drivers/scsi/scsi_transport_libata.c:109:
+EXPORT_SYMBOL(libata_transport_template);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: include/linux/ata.h:42:
+        ATA_ID_FW_OFS           = 23,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: include/linux/ata.h:42:
+        ATA_ID_FW_OFS           = 23,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/linux/ata.h:49:
+        ATA_PROD_LEN            = 40,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/linux/ata.h:49:
+        ATA_PROD_LEN            = 40,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: include/linux/ata.h:51:
+        ATA_FW_LEN              = 8,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: include/linux/ata.h:51:
+        ATA_FW_LEN              = 8,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#255: FILE: include/scsi/scsi_transport_libata.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#256: FILE: include/scsi/scsi_transport_libata.h:2:
+/*
+    Libata transport specific attributes exported to sysfs.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291770.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 25 warnings, 1 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291770.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
