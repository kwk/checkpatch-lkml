WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> > > 20K+ pages is not unreasonable. To break the latency, can i just do a 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: fs/nfs/write.c:450:
+	radix_tree_tag_set(&nfsi->nfs_page_tree,
+			req->wb_index, NFS_PAGE_TAG_DIRTY);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#106: FILE: fs/nfs/write.c:508:
+	while (radix_tree_gang_lookup_tag(&nfsi->nfs_page_tree, (void **)&req, next, 1, NFS_PAGE_TAG_WRITEBACK)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#113: FILE: fs/nfs/write.c:513:
+		BUG_ON(!NFS_WBACK_BUSY(req));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: fs/nfs/write.c:547:
+		sub_page_state(nr_dirty,res);
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->ndirty == 0'
#133: FILE: fs/nfs/write.c:548:
+		if ((nfsi->ndirty == 0) != list_empty(&nfsi->dirty))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#134: FILE: fs/nfs/write.c:549:
+			printk(KERN_ERR "NFS: desynchronized value of nfs_i.ndirty.\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfsi->ncommit == 0'
#153: FILE: fs/nfs/write.c:574:
+		if ((nfsi->ncommit == 0) != list_empty(&nfsi->commit))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#154: FILE: fs/nfs/write.c:575:
+			printk(KERN_ERR "NFS: desynchronized value of nfs_i.ncommit.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: fs/nfs/pagelist.c:259:
+nfs_scan_lock_dirty(struct nfs_inode *nfsi, struct list_head *dst,
+	      unsigned long idx_start, unsigned int npages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: fs/nfs/pagelist.c:275:
+		found = radix_tree_gang_lookup_tag(&nfsi->nfs_page_tree,
+				(void **)&pgvec[0], idx_start, NFS_SCAN_MAXENTRIES,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: fs/nfs/pagelist.c:288:
+				radix_tree_tag_clear(&nfsi->nfs_page_tree,
+						req->wb_index, NFS_PAGE_TAG_DIRTY);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#524: FILE: include/linux/nfs_fs.h:380:
+extern int  nfs_commit_inode(struct inode *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: include/linux/nfs_page.h:64:
+extern  int nfs_scan_lock_dirty(struct nfs_inode *nfsi, struct list_head *dst,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#564: FILE: include/linux/nfs_page.h:66:
+extern	int nfs_scan_list(struct nfs_inode *nfsi, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#564: FILE: include/linux/nfs_page.h:66:
+extern	int nfs_scan_list(struct nfs_inode *nfsi, struct list_head *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#564: FILE: include/linux/nfs_page.h:66:
+extern	int nfs_scan_list(struct nfs_inode *nfsi, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#564: FILE: include/linux/nfs_page.h:66:
+extern	int nfs_scan_list(struct nfs_inode *nfsi, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#564: FILE: include/linux/nfs_page.h:66:
+extern	int nfs_scan_list(struct nfs_inode *nfsi, struct list_head *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#570: FILE: include/linux/nfs_page.h:72:
+extern  int nfs_set_page_writeback_locked(struct nfs_page *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#571: FILE: include/linux/nfs_page.h:73:
+extern  void nfs_clear_page_writeback(struct nfs_page *req);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 11 checks, 494 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
