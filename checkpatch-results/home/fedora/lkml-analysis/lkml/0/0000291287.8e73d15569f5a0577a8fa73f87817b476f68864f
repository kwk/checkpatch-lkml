WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
--- 2.6.4.orig/include/asm-alpha/cpumask.h	2004-04-01 09:15:56.000000000 -0800

WARNING:NEW_TYPEDEFS: do not add new typedefs
#615: FILE: include/linux/cpumask.h:67:
+typedef __mask(NR_CPUS) cpumask_t;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#615: FILE: include/linux/cpumask.h:67:
+typedef __mask(NR_CPUS) cpumask_t;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#638: FILE: include/linux/cpumask.h:88:
+			mask_shift_right((dst), (src), (n), NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#640: FILE: include/linux/cpumask.h:90:
+			mask_shift_left((dst), (src), (n), NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#661: FILE: include/linux/cpumask.h:102:
+			mask_scnprintf((buf), (len), (mask), NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#663: FILE: include/linux/cpumask.h:104:
+			mask_parse((ubuf), (ulen), (mask), NR_CPUS)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#693: FILE: include/linux/cpumask.h:130:
+#define for_each_cpu_mask(cpu, mask)		\
+	for (cpu = first_cpu(mask);		\
+		cpu < NR_CPUS;			\
+		cpu = next_cpu(cpu, mask))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mask' - possible side-effects?
#693: FILE: include/linux/cpumask.h:130:
+#define for_each_cpu_mask(cpu, mask)		\
+	for (cpu = first_cpu(mask);		\
+		cpu < NR_CPUS;			\
+		cpu = next_cpu(cpu, mask))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#695: FILE: include/linux/cpumask.h:132:
+		cpu < NR_CPUS;			\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#705: FILE: include/linux/cpumask.h:142:
+#define cpu_online(cpu)		     ({ BUG_ON((cpu) != 0); 1; })

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#706: FILE: include/linux/cpumask.h:143:
+#define cpu_possible(cpu)	     ({ BUG_ON((cpu) != 0); 1; })

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#707: FILE: include/linux/cpumask.h:144:
+#define cpu_set_online(cpu)	     ({ BUG_ON((cpu) != 0); })

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#708: FILE: include/linux/cpumask.h:145:
+#define cpu_set_offline(cpu)	     ({ BUG(); })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#712: FILE: include/linux/cpumask.h:149:
+#define for_each_cpu_mask(cpu, mask) for (cpu = 0; cpu < 1; cpu++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#722: FILE: include/linux/cpumask.h:159:
+#define cpu_isset_const(a,b) cpu_isset(a,b)
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#722: FILE: include/linux/cpumask.h:159:
+#define cpu_isset_const(a,b) cpu_isset(a,b)
                                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 3 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000291287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
