WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> > only export those operations to modules that have been available to them 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: arch/i386/kernel/paravirt.c:699:
+	paravirt_ops.apic_write(reg,v);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#236: FILE: arch/i386/kernel/paravirt.c:722:
+}
+unsigned long long pte_val(pte_t x)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#240: FILE: arch/i386/kernel/paravirt.c:726:
+}
+pte_t __pte(unsigned long long x)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#249: FILE: arch/i386/kernel/paravirt.c:735:
+}
+unsigned long pte_val(pte_t x)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#253: FILE: arch/i386/kernel/paravirt.c:739:
+}
+pte_t __pte(unsigned long x)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#259: FILE: arch/i386/kernel/paravirt.c:745:
+EXPORT_SYMBOL_GPL(pte_val);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#260: FILE: arch/i386/kernel/paravirt.c:746:
+EXPORT_SYMBOL_GPL(__pte);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#339: FILE: include/asm-i386/paravirt.h:265:
+void write_cr0(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#366: FILE: include/asm-i386/paravirt.h:287:
+	u64 _l = paravirt_read_msr(msr,&_err);			\
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#366: FILE: include/asm-i386/paravirt.h:287:
+	u64 _l = paravirt_read_msr(msr,&_err);			\
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#380: FILE: include/asm-i386/paravirt.h:299:
+	val = paravirt_read_msr((msr),&_err);			\
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#380: FILE: include/asm-i386/paravirt.h:299:
+	val = paravirt_read_msr((msr),&_err);			\
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: include/asm-i386/paravirt.h:302:
+#define wrmsrl(msr,val) (paravirt_write_msr((msr),(val)))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: include/asm-i386/paravirt.h:302:
+#define wrmsrl(msr,val) (paravirt_write_msr((msr),(val)))
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#388: FILE: include/asm-i386/paravirt.h:305:
+	paravirt_write_msr((msr),_l);				\
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#395: FILE: include/asm-i386/paravirt.h:311:
+	u64 _l = paravirt_read_msr(msr,&_err);			\
 	                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#395: FILE: include/asm-i386/paravirt.h:311:
+	u64 _l = paravirt_read_msr(msr,&_err);			\
 	                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000003986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 4 warnings, 4 checks, 440 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000003986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
