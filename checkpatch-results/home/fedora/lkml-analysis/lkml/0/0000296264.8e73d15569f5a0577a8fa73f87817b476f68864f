WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -Nru -X .exclude-diff linux-2.6.4/arch/h8300/kernel/Makefile linux-2.6.4-h8300/arch/h8300/kernel/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: arch/h8300/kernel/ints.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#77: FILE: arch/h8300/kernel/ints.c:29:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#85: FILE: arch/h8300/kernel/ints.c:37:
+typedef struct irq_handler {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#86: FILE: arch/h8300/kernel/ints.c:38:
+	irqreturn_t (*handler)(int, void *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#86: FILE: arch/h8300/kernel/ints.c:38:
+	irqreturn_t (*handler)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#86: FILE: arch/h8300/kernel/ints.c:38:
+	irqreturn_t (*handler)(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#96: FILE: arch/h8300/kernel/ints.c:48:
+extern unsigned long *interrupt_redirect_table;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#97: FILE: arch/h8300/kernel/ints.c:49:
+extern const int h8300_saved_vectors[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#98: FILE: arch/h8300/kernel/ints.c:50:
+extern const unsigned long h8300_trap_table[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#99: FILE: arch/h8300/kernel/ints.c:51:
+int h8300_enable_irq_pin(unsigned int irq);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#100: FILE: arch/h8300/kernel/ints.c:52:
+void h8300_disable_irq_pin(unsigned int irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: arch/h8300/kernel/ints.c:61:
+	unsigned long base,tmp;
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: arch/h8300/kernel/ints.c:65:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: arch/h8300/kernel/ints.c:67:
+	for (vec_no = EXT_IRQ1; vec_no <= EXT_IRQ0+EXT_IRQS; vec_no++) {
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#116: FILE: arch/h8300/kernel/ints.c:68:
+		if ((base+(vec_no - EXT_IRQ0)*4) != (rom_vector[vec_no] & ADDR_MASK))
 		         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#116: FILE: arch/h8300/kernel/ints.c:68:
+		if ((base+(vec_no - EXT_IRQ0)*4) != (rom_vector[vec_no] & ADDR_MASK))
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: arch/h8300/kernel/ints.c:73:
+	base -= EXT_IRQ0*4;
 	                ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#124: FILE: arch/h8300/kernel/ints.c:76:
+	tmp = ~(*(volatile unsigned long *)base);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#125: FILE: arch/h8300/kernel/ints.c:77:
+	(*(volatile unsigned long *)base) = tmp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#126: FILE: arch/h8300/kernel/ints.c:78:
+	if ((*(volatile unsigned long *)base) != tmp)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#136: FILE: arch/h8300/kernel/ints.c:88:
+	unsigned long *ramvec,*ramvec_p;
 	                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#136: FILE: arch/h8300/kernel/ints.c:88:
+	unsigned long *ramvec,*ramvec_p;
 	                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ramvec"
#141: FILE: arch/h8300/kernel/ints.c:93:
+	if (ramvec == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: arch/h8300/kernel/ints.c:96:
+		printk("virtual vector at 0x%08lx\n",(unsigned long)ramvec);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: arch/h8300/kernel/ints.c:96:
+		printk("virtual vector at 0x%08lx\n",(unsigned long)ramvec);
 		                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: arch/h8300/kernel/ints.c:102:
+	for ( i = 0; i < NR_IRQS; i++) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#155: FILE: arch/h8300/kernel/ints.c:107:
+			if ( i < NR_TRAPS ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#155: FILE: arch/h8300/kernel/ints.c:107:
+			if ( i < NR_TRAPS ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#155: FILE: arch/h8300/kernel/ints.c:107:
+			if ( i < NR_TRAPS ) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#160: FILE: arch/h8300/kernel/ints.c:112:
+			} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#169: FILE: arch/h8300/kernel/ints.c:121:
+			printk("\n%p: ",ramvec_p);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: arch/h8300/kernel/ints.c:121:
+			printk("\n%p: ",ramvec_p);
 			               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: arch/h8300/kernel/ints.c:122:
+		printk("%p ",*ramvec_p);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#170: FILE: arch/h8300/kernel/ints.c:122:
+		printk("%p ",*ramvec_p);
 		            ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#170: FILE: arch/h8300/kernel/ints.c:122:
+		printk("%p ",*ramvec_p);
 		             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: arch/h8300/kernel/ints.c:125:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: arch/h8300/kernel/ints.c:130:
+int request_irq(unsigned int irq, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/h8300/kernel/ints.c:132:
+                unsigned long flags, const char *devname, void *dev_id)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/h8300/kernel/ints.c:132:
+                unsigned long flags, const char *devname, void *dev_id)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: arch/h8300/kernel/ints.c:135:
+	irq_handler_t *irq_handle;
+	if (irq < 0 || irq >= NR_IRQS) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#184: FILE: arch/h8300/kernel/ints.c:136:
+		printk("Incorrect IRQ %d from %s\n", irq, devname);

CHECK:BRACES: braces {} should be used on all arms of this statement
#190: FILE: arch/h8300/kernel/ints.c:142:
+	if (use_kmalloc)
[...]
+	else {
[...]

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#191: FILE: arch/h8300/kernel/ints.c:143:
+		irq_handle = (irq_handler_t *)kmalloc(sizeof(irq_handler_t), GFP_ATOMIC);

CHECK:BRACES: Unbalanced braces around else statement
#192: FILE: arch/h8300/kernel/ints.c:144:
+	else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!irq_handle"
#198: FILE: arch/h8300/kernel/ints.c:150:
+	if (irq_handle == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#210: FILE: arch/h8300/kernel/ints.c:162:
+EXPORT_SYMBOL(request_irq);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#214: FILE: arch/h8300/kernel/ints.c:166:
+	if (irq >= NR_IRQS) {
+		return;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#218: FILE: arch/h8300/kernel/ints.c:170:
+		printk("Removing probably wrong IRQ %d from %s\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#227: FILE: arch/h8300/kernel/ints.c:179:
+EXPORT_SYMBOL(free_irq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: arch/h8300/kernel/ints.c:184:
+unsigned long probe_irq_on (void)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#237: FILE: arch/h8300/kernel/ints.c:189:
+EXPORT_SYMBOL(probe_irq_on);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: arch/h8300/kernel/ints.c:191:
+int probe_irq_off (unsigned long irqs)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#244: FILE: arch/h8300/kernel/ints.c:196:
+EXPORT_SYMBOL(probe_irq_off);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#270: FILE: arch/h8300/kernel/ints.c:222:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#277: FILE: arch/h8300/kernel/ints.c:229:
+	int i = *(loff_t *) v;

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#279: FILE: arch/h8300/kernel/ints.c:231:
+	if ((i < NR_IRQS) && (irq_list[i]!=NULL)) {
 	                                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < NR_IRQS'
#279: FILE: arch/h8300/kernel/ints.c:231:
+	if ((i < NR_IRQS) && (irq_list[i]!=NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq_list[i]!=NULL'
#279: FILE: arch/h8300/kernel/ints.c:231:
+	if ((i < NR_IRQS) && (irq_list[i]!=NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irq_list[i]"
#279: FILE: arch/h8300/kernel/ints.c:231:
+	if ((i < NR_IRQS) && (irq_list[i]!=NULL)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: arch/h8300/kernel/ints.c:232:
+		seq_printf(p, "%3d: %10u ",i,irq_list[i]->count);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: arch/h8300/kernel/ints.c:232:
+		seq_printf(p, "%3d: %10u ",i,irq_list[i]->count);
 		                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#575: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#576: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:2:
+ * linux/arch/h8300/platform/h8300h/ints_h8300h.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#590: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:16:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/gpio.h> instead of <asm/gpio.h>
#591: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:17:
+#include <asm/gpio.h>

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#595: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:21:
+const int __initdata h8300_saved_vectors[]={
                                           ^

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#595: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:21:
+const int __initdata h8300_saved_vectors[]={

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#603: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:29:
+const unsigned long __initdata h8300_trap_table[NR_TRAPS]={
                                                          ^

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#603: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:29:
+const unsigned long __initdata h8300_trap_table[NR_TRAPS]={

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:30:
+	0,0,0,0,0,0,0,0,
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#606: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:32:
+	0,0,
 	 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#613: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:39:
+	int bitmask;
+	if (irq < EXT_IRQ0 || irq > EXT_IRQ5)

ERROR:SPACING: space required before the open parenthesis '('
#618: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:44:
+	switch(irq) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#641: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:67:
+	int bitmask;
+	if (irq < EXT_IRQ0 || irq > EXT_IRQ5)

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:72:
+	switch(irq) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#651: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:77:
+		*(volatile unsigned char *)IER &= ~bitmask;

WARNING:SPACING: space prohibited before semicolon
#653: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:79:
+		break ;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#656: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:82:
+		*(volatile unsigned char *)IER &= ~bitmask;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#661: FILE: arch/h8300/platform/h8300h/ints_h8300h.c:86:
diff -Nru -X .exclude-diff linux-2.6.4/arch/h8300/platform/h8s/Makefile linux-2.6.4-h8300/arch/h8300/platform/h8s/Makefile

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#685: FILE: arch/h8300/platform/h8s/ints_h8s.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#686: FILE: arch/h8300/platform/h8s/ints_h8s.c:2:
+ * linux/arch/h8300/platform/h8s/ints_h8s.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#700: FILE: arch/h8300/platform/h8s/ints_h8s.c:16:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/gpio.h> instead of <asm/gpio.h>
#701: FILE: arch/h8300/platform/h8s/ints_h8s.c:17:
+#include <asm/gpio.h>

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#705: FILE: arch/h8300/platform/h8s/ints_h8s.c:21:
+const int __initdata h8300_saved_vectors[]={
                                           ^

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#705: FILE: arch/h8300/platform/h8s/ints_h8s.c:21:
+const int __initdata h8300_saved_vectors[]={

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#714: FILE: arch/h8300/platform/h8s/ints_h8s.c:30:
+const unsigned long __initdata h8300_trap_table[NR_TRAPS]={
                                                          ^

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#714: FILE: arch/h8300/platform/h8s/ints_h8s.c:30:
+const unsigned long __initdata h8300_trap_table[NR_TRAPS]={

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: arch/h8300/platform/h8s/ints_h8s.c:31:
+	0,0,0,0,0,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: arch/h8300/platform/h8s/ints_h8s.c:31:
+	0,0,0,0,0,
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: arch/h8300/platform/h8s/ints_h8s.c:31:
+	0,0,0,0,0,
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: arch/h8300/platform/h8s/ints_h8s.c:31:
+	0,0,0,0,0,
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#717: FILE: arch/h8300/platform/h8s/ints_h8s.c:33:
+	0,0,
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: arch/h8300/platform/h8s/ints_h8s.c:35:
+	0,0,0,0,0,0,0
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: arch/h8300/platform/h8s/ints_h8s.c:35:
+	0,0,0,0,0,0,0
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: arch/h8300/platform/h8s/ints_h8s.c:35:
+	0,0,0,0,0,0,0
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: arch/h8300/platform/h8s/ints_h8s.c:35:
+	0,0,0,0,0,0,0
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: arch/h8300/platform/h8s/ints_h8s.c:35:
+	0,0,0,0,0,0,0
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: arch/h8300/platform/h8s/ints_h8s.c:35:
+	0,0,0,0,0,0,0
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#726: FILE: arch/h8300/platform/h8s/ints_h8s.c:42:
+} __attribute__((aligned(1),packed));
                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(1) over __attribute__((aligned(1)))
#726: FILE: arch/h8300/platform/h8s/ints_h8s.c:42:
+} __attribute__((aligned(1),packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#726: FILE: arch/h8300/platform/h8s/ints_h8s.c:42:
+} __attribute__((aligned(1),packed));

WARNING:STATIC_CONST: Move const after static - use 'static const struct irq_pins '
#728: FILE: arch/h8300/platform/h8s/ints_h8s.c:44:
+const static struct irq_pins irq_assign_table0[16]={

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#728: FILE: arch/h8300/platform/h8s/ints_h8s.c:44:
+const static struct irq_pins irq_assign_table0[16]={
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: arch/h8300/platform/h8s/ints_h8s.c:45:
+	{H8300_GPIO_P5,H8300_GPIO_B0},{H8300_GPIO_P5,H8300_GPIO_B1},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: arch/h8300/platform/h8s/ints_h8s.c:45:
+	{H8300_GPIO_P5,H8300_GPIO_B0},{H8300_GPIO_P5,H8300_GPIO_B1},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: arch/h8300/platform/h8s/ints_h8s.c:45:
+	{H8300_GPIO_P5,H8300_GPIO_B0},{H8300_GPIO_P5,H8300_GPIO_B1},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: arch/h8300/platform/h8s/ints_h8s.c:46:
+	{H8300_GPIO_P5,H8300_GPIO_B2},{H8300_GPIO_P5,H8300_GPIO_B3},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: arch/h8300/platform/h8s/ints_h8s.c:46:
+	{H8300_GPIO_P5,H8300_GPIO_B2},{H8300_GPIO_P5,H8300_GPIO_B3},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: arch/h8300/platform/h8s/ints_h8s.c:46:
+	{H8300_GPIO_P5,H8300_GPIO_B2},{H8300_GPIO_P5,H8300_GPIO_B3},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#731: FILE: arch/h8300/platform/h8s/ints_h8s.c:47:
+	{H8300_GPIO_P5,H8300_GPIO_B4},{H8300_GPIO_P5,H8300_GPIO_B5},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#731: FILE: arch/h8300/platform/h8s/ints_h8s.c:47:
+	{H8300_GPIO_P5,H8300_GPIO_B4},{H8300_GPIO_P5,H8300_GPIO_B5},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#731: FILE: arch/h8300/platform/h8s/ints_h8s.c:47:
+	{H8300_GPIO_P5,H8300_GPIO_B4},{H8300_GPIO_P5,H8300_GPIO_B5},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: arch/h8300/platform/h8s/ints_h8s.c:48:
+	{H8300_GPIO_P5,H8300_GPIO_B6},{H8300_GPIO_P5,H8300_GPIO_B7},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: arch/h8300/platform/h8s/ints_h8s.c:48:
+	{H8300_GPIO_P5,H8300_GPIO_B6},{H8300_GPIO_P5,H8300_GPIO_B7},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: arch/h8300/platform/h8s/ints_h8s.c:48:
+	{H8300_GPIO_P5,H8300_GPIO_B6},{H8300_GPIO_P5,H8300_GPIO_B7},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: arch/h8300/platform/h8s/ints_h8s.c:49:
+	{H8300_GPIO_P6,H8300_GPIO_B0},{H8300_GPIO_P6,H8300_GPIO_B1},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: arch/h8300/platform/h8s/ints_h8s.c:49:
+	{H8300_GPIO_P6,H8300_GPIO_B0},{H8300_GPIO_P6,H8300_GPIO_B1},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#733: FILE: arch/h8300/platform/h8s/ints_h8s.c:49:
+	{H8300_GPIO_P6,H8300_GPIO_B0},{H8300_GPIO_P6,H8300_GPIO_B1},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: arch/h8300/platform/h8s/ints_h8s.c:50:
+	{H8300_GPIO_P6,H8300_GPIO_B2},{H8300_GPIO_P6,H8300_GPIO_B3},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: arch/h8300/platform/h8s/ints_h8s.c:50:
+	{H8300_GPIO_P6,H8300_GPIO_B2},{H8300_GPIO_P6,H8300_GPIO_B3},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#734: FILE: arch/h8300/platform/h8s/ints_h8s.c:50:
+	{H8300_GPIO_P6,H8300_GPIO_B2},{H8300_GPIO_P6,H8300_GPIO_B3},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: arch/h8300/platform/h8s/ints_h8s.c:51:
+	{H8300_GPIO_P6,H8300_GPIO_B4},{H8300_GPIO_P6,H8300_GPIO_B5},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: arch/h8300/platform/h8s/ints_h8s.c:51:
+	{H8300_GPIO_P6,H8300_GPIO_B4},{H8300_GPIO_P6,H8300_GPIO_B5},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: arch/h8300/platform/h8s/ints_h8s.c:51:
+	{H8300_GPIO_P6,H8300_GPIO_B4},{H8300_GPIO_P6,H8300_GPIO_B5},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#736: FILE: arch/h8300/platform/h8s/ints_h8s.c:52:
+	{H8300_GPIO_PF,H8300_GPIO_B1},{H8300_GPIO_PF,H8300_GPIO_B2},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#736: FILE: arch/h8300/platform/h8s/ints_h8s.c:52:
+	{H8300_GPIO_PF,H8300_GPIO_B1},{H8300_GPIO_PF,H8300_GPIO_B2},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#736: FILE: arch/h8300/platform/h8s/ints_h8s.c:52:
+	{H8300_GPIO_PF,H8300_GPIO_B1},{H8300_GPIO_PF,H8300_GPIO_B2},
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: arch/h8300/platform/h8s/ints_h8s.c:53:
+}; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#738: FILE: arch/h8300/platform/h8s/ints_h8s.c:54:
+}; 
+/* ISTR = 1 */

WARNING:STATIC_CONST: Move const after static - use 'static const struct irq_pins '
#739: FILE: arch/h8300/platform/h8s/ints_h8s.c:55:
+const static struct irq_pins irq_assign_table1[16]={

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#739: FILE: arch/h8300/platform/h8s/ints_h8s.c:55:
+const static struct irq_pins irq_assign_table1[16]={
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#740: FILE: arch/h8300/platform/h8s/ints_h8s.c:56:
+	{H8300_GPIO_P8,H8300_GPIO_B0},{H8300_GPIO_P8,H8300_GPIO_B1},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#740: FILE: arch/h8300/platform/h8s/ints_h8s.c:56:
+	{H8300_GPIO_P8,H8300_GPIO_B0},{H8300_GPIO_P8,H8300_GPIO_B1},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#740: FILE: arch/h8300/platform/h8s/ints_h8s.c:56:
+	{H8300_GPIO_P8,H8300_GPIO_B0},{H8300_GPIO_P8,H8300_GPIO_B1},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#741: FILE: arch/h8300/platform/h8s/ints_h8s.c:57:
+	{H8300_GPIO_P8,H8300_GPIO_B2},{H8300_GPIO_P8,H8300_GPIO_B3},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#741: FILE: arch/h8300/platform/h8s/ints_h8s.c:57:
+	{H8300_GPIO_P8,H8300_GPIO_B2},{H8300_GPIO_P8,H8300_GPIO_B3},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#741: FILE: arch/h8300/platform/h8s/ints_h8s.c:57:
+	{H8300_GPIO_P8,H8300_GPIO_B2},{H8300_GPIO_P8,H8300_GPIO_B3},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#742: FILE: arch/h8300/platform/h8s/ints_h8s.c:58:
+	{H8300_GPIO_P8,H8300_GPIO_B4},{H8300_GPIO_P8,H8300_GPIO_B5},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#742: FILE: arch/h8300/platform/h8s/ints_h8s.c:58:
+	{H8300_GPIO_P8,H8300_GPIO_B4},{H8300_GPIO_P8,H8300_GPIO_B5},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#742: FILE: arch/h8300/platform/h8s/ints_h8s.c:58:
+	{H8300_GPIO_P8,H8300_GPIO_B4},{H8300_GPIO_P8,H8300_GPIO_B5},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: arch/h8300/platform/h8s/ints_h8s.c:59:
+	{H8300_GPIO_PH,H8300_GPIO_B2},{H8300_GPIO_PH,H8300_GPIO_B3},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: arch/h8300/platform/h8s/ints_h8s.c:59:
+	{H8300_GPIO_PH,H8300_GPIO_B2},{H8300_GPIO_PH,H8300_GPIO_B3},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: arch/h8300/platform/h8s/ints_h8s.c:59:
+	{H8300_GPIO_PH,H8300_GPIO_B2},{H8300_GPIO_PH,H8300_GPIO_B3},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: arch/h8300/platform/h8s/ints_h8s.c:60:
+	{H8300_GPIO_P2,H8300_GPIO_B0},{H8300_GPIO_P2,H8300_GPIO_B1},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: arch/h8300/platform/h8s/ints_h8s.c:60:
+	{H8300_GPIO_P2,H8300_GPIO_B0},{H8300_GPIO_P2,H8300_GPIO_B1},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: arch/h8300/platform/h8s/ints_h8s.c:60:
+	{H8300_GPIO_P2,H8300_GPIO_B0},{H8300_GPIO_P2,H8300_GPIO_B1},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#745: FILE: arch/h8300/platform/h8s/ints_h8s.c:61:
+	{H8300_GPIO_P2,H8300_GPIO_B2},{H8300_GPIO_P2,H8300_GPIO_B3},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#745: FILE: arch/h8300/platform/h8s/ints_h8s.c:61:
+	{H8300_GPIO_P2,H8300_GPIO_B2},{H8300_GPIO_P2,H8300_GPIO_B3},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#745: FILE: arch/h8300/platform/h8s/ints_h8s.c:61:
+	{H8300_GPIO_P2,H8300_GPIO_B2},{H8300_GPIO_P2,H8300_GPIO_B3},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#746: FILE: arch/h8300/platform/h8s/ints_h8s.c:62:
+	{H8300_GPIO_P2,H8300_GPIO_B4},{H8300_GPIO_P2,H8300_GPIO_B5},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#746: FILE: arch/h8300/platform/h8s/ints_h8s.c:62:
+	{H8300_GPIO_P2,H8300_GPIO_B4},{H8300_GPIO_P2,H8300_GPIO_B5},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#746: FILE: arch/h8300/platform/h8s/ints_h8s.c:62:
+	{H8300_GPIO_P2,H8300_GPIO_B4},{H8300_GPIO_P2,H8300_GPIO_B5},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#747: FILE: arch/h8300/platform/h8s/ints_h8s.c:63:
+	{H8300_GPIO_P2,H8300_GPIO_B6},{H8300_GPIO_P2,H8300_GPIO_B7},
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#747: FILE: arch/h8300/platform/h8s/ints_h8s.c:63:
+	{H8300_GPIO_P2,H8300_GPIO_B6},{H8300_GPIO_P2,H8300_GPIO_B7},
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#747: FILE: arch/h8300/platform/h8s/ints_h8s.c:63:
+	{H8300_GPIO_P2,H8300_GPIO_B6},{H8300_GPIO_P2,H8300_GPIO_B7},
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#750: FILE: arch/h8300/platform/h8s/ints_h8s.c:66:
+#define IRQ_GPIO_MAP(irqbit,port,bit)				  \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#750: FILE: arch/h8300/platform/h8s/ints_h8s.c:66:
+#define IRQ_GPIO_MAP(irqbit,port,bit)				  \
                                 ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'irqbit' may be better as '(irqbit)' to avoid precedence issues
#750: FILE: arch/h8300/platform/h8s/ints_h8s.c:66:
+#define IRQ_GPIO_MAP(irqbit,port,bit)				  \
+do {								  \
+	if (*(volatile unsigned short *)ITSR & irqbit) {	  \
+		port = irq_assign_table1[irq - EXT_IRQ0].port_no; \
+		bit  = irq_assign_table1[irq - EXT_IRQ0].bit_no;  \
+	} else {						  \
+		port = irq_assign_table0[irq - EXT_IRQ0].port_no; \
+		bit  = irq_assign_table0[irq - EXT_IRQ0].bit_no;  \
+	}							  \
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#750: FILE: arch/h8300/platform/h8s/ints_h8s.c:66:
+#define IRQ_GPIO_MAP(irqbit,port,bit)				  \
+do {								  \
+	if (*(volatile unsigned short *)ITSR & irqbit) {	  \
+		port = irq_assign_table1[irq - EXT_IRQ0].port_no; \
+		bit  = irq_assign_table1[irq - EXT_IRQ0].bit_no;  \
+	} else {						  \
+		port = irq_assign_table0[irq - EXT_IRQ0].port_no; \
+		bit  = irq_assign_table0[irq - EXT_IRQ0].bit_no;  \
+	}							  \
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#750: FILE: arch/h8300/platform/h8s/ints_h8s.c:66:
+#define IRQ_GPIO_MAP(irqbit,port,bit)				  \
+do {								  \
+	if (*(volatile unsigned short *)ITSR & irqbit) {	  \
+		port = irq_assign_table1[irq - EXT_IRQ0].port_no; \
+		bit  = irq_assign_table1[irq - EXT_IRQ0].bit_no;  \
+	} else {						  \
+		port = irq_assign_table0[irq - EXT_IRQ0].port_no; \
+		bit  = irq_assign_table0[irq - EXT_IRQ0].bit_no;  \
+	}							  \
+} while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#752: FILE: arch/h8300/platform/h8s/ints_h8s.c:68:
+	if (*(volatile unsigned short *)ITSR & irqbit) {	  \

ERROR:SPACING: space required before the open parenthesis '('
#759: FILE: arch/h8300/platform/h8s/ints_h8s.c:75:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: arch/h8300/platform/h8s/ints_h8s.c:81:
+		unsigned int port_no,bit_no;
 		                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#766: FILE: arch/h8300/platform/h8s/ints_h8s.c:82:
+		unsigned int port_no,bit_no;
+		IRQ_GPIO_MAP(ptn,port_no,bit_no);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#766: FILE: arch/h8300/platform/h8s/ints_h8s.c:82:
+		IRQ_GPIO_MAP(ptn,port_no,bit_no);
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#766: FILE: arch/h8300/platform/h8s/ints_h8s.c:82:
+		IRQ_GPIO_MAP(ptn,port_no,bit_no);
 		                        ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#770: FILE: arch/h8300/platform/h8s/ints_h8s.c:86:
+		*(volatile unsigned short *)ISR &= ~ptn; /* ISR clear */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: arch/h8300/platform/h8s/ints_h8s.c:87:
+^I}^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#780: FILE: arch/h8300/platform/h8s/ints_h8s.c:96:
+		unsigned short port_no,bit_no;
 		                      ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#781: FILE: arch/h8300/platform/h8s/ints_h8s.c:97:
+		*(volatile unsigned short *)ISR &= ~ptn;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#782: FILE: arch/h8300/platform/h8s/ints_h8s.c:98:
+		*(volatile unsigned short *)IER &= ~ptn;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#783: FILE: arch/h8300/platform/h8s/ints_h8s.c:99:
+		IRQ_GPIO_MAP(ptn,port_no,bit_no);
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#783: FILE: arch/h8300/platform/h8s/ints_h8s.c:99:
+		IRQ_GPIO_MAP(ptn,port_no,bit_no);
 		                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#797: FILE: include/asm-h8300/irq.h:19:
+#define h8300_clear_isr(irq)                                                \
+do {                                                                        \
+	if (irq >= EXT_IRQ0 && irq <= EXT_IRQ5)                             \
+		*(volatile unsigned char *)ISR &= ~(1 << (irq - EXT_IRQ0)); \
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'irq' may be better as '(irq)' to avoid precedence issues
#797: FILE: include/asm-h8300/irq.h:19:
+#define h8300_clear_isr(irq)                                                \
+do {                                                                        \
+	if (irq >= EXT_IRQ0 && irq <= EXT_IRQ5)                             \
+		*(volatile unsigned char *)ISR &= ~(1 << (irq - EXT_IRQ0)); \
+} while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#800: FILE: include/asm-h8300/irq.h:22:
+		*(volatile unsigned char *)ISR &= ~(1 << (irq - EXT_IRQ0)); \

ERROR:SPACING: space required before the open parenthesis '('
#801: FILE: include/asm-h8300/irq.h:23:
+} while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#803: FILE: include/asm-h8300/irq.h:25:
+#define IER_REGS *(volatile unsigned char *)IER

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#803: FILE: include/asm-h8300/irq.h:25:
+#define IER_REGS *(volatile unsigned char *)IER

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#814: FILE: include/asm-h8300/irq.h:48:
+#define h8300_clear_isr(irq)                                                 \
+do {                                                                         \
+	if (irq >= EXT_IRQ0 && irq <= EXT_IRQ15)                             \
+		*(volatile unsigned short *)ISR &= ~(1 << (irq - EXT_IRQ0)); \
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'irq' may be better as '(irq)' to avoid precedence issues
#814: FILE: include/asm-h8300/irq.h:48:
+#define h8300_clear_isr(irq)                                                 \
+do {                                                                         \
+	if (irq >= EXT_IRQ0 && irq <= EXT_IRQ15)                             \
+		*(volatile unsigned short *)ISR &= ~(1 << (irq - EXT_IRQ0)); \
+} while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#817: FILE: include/asm-h8300/irq.h:51:
+		*(volatile unsigned short *)ISR &= ~(1 << (irq - EXT_IRQ0)); \

ERROR:SPACING: space required before the open parenthesis '('
#818: FILE: include/asm-h8300/irq.h:52:
+} while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#820: FILE: include/asm-h8300/irq.h:54:
+#define IER_REGS *(volatile unsigned short *)IER

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#820: FILE: include/asm-h8300/irq.h:54:
+#define IER_REGS *(volatile unsigned short *)IER

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000296264.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 112 errors, 53 warnings, 27 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000296264.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
