WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- linux.clean/arch/x86_64/ia32/ia32_ioctl.c	2003-05-05 15:53:57.000000000 -0700

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#308: FILE: drivers/block/scsi_ioctl.c:15:
  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#309: FILE: drivers/block/scsi_ioctl.c:16:
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#338: FILE: drivers/block/scsi_ioctl.c:303:
+typedef struct sg_io_hdr32 {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: drivers/block/scsi_ioctl.c:311:
+	u32 dxferp;		/* [i], [*io] points to data transfer memory
+					      or scatter gather list */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#346: FILE: drivers/block/scsi_ioctl.c:311:
+					      or scatter gather list */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#364: FILE: drivers/block/scsi_ioctl.c:329:
+typedef struct sg_iovec32 {

CHECK:SPACING: No space is necessary after a cast
#373: FILE: drivers/block/scsi_ioctl.c:338:
+	sg_iovec32_t *uiov = (sg_iovec32_t *) compat_ptr(uptr32);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#379: FILE: drivers/block/scsi_ioctl.c:344:
+	sgp->dxferp = kmalloc(sgp->iovec_count *
+			      sizeof(sg_iovec_t), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#386: FILE: drivers/block/scsi_ioctl.c:351:
+	kiov = (sg_iovec_t *) sgp->dxferp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: drivers/block/scsi_ioctl.c:354:
+		u32 iov_base32;
+		if (__get_user(iov_base32, &uiov->iov_base) ||

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#438: FILE: drivers/block/scsi_ioctl.c:403:
+			   (void *) compat_ptr(cmdp32),

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/block/scsi_ioctl.c:416:
+			   (void *) compat_ptr(sbp32),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#461: FILE: drivers/block/scsi_ioctl.c:426:
+		if ((ret = alloc_sg_iovec(&sg_io64, dxferp32))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: drivers/block/scsi_ioctl.c:431:
+^I^Iif (sg_io64.dxfer_len > 4*PAGE_SIZE) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#466: FILE: drivers/block/scsi_ioctl.c:431:
+		if (sg_io64.dxfer_len > 4*PAGE_SIZE) { 
 		                         ^

CHECK:SPACING: No space is necessary after a cast
#477: FILE: drivers/block/scsi_ioctl.c:442:
+				   (void *) compat_ptr(dxferp32),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: drivers/block/scsi_ioctl.c:456:
+	set_fs (KERNEL_DS);

CHECK:SPACING: No space is necessary after a cast
#492: FILE: drivers/block/scsi_ioctl.c:457:
+	err = sys_ioctl (fd, cmd, (unsigned long) &sg_io64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#492: FILE: drivers/block/scsi_ioctl.c:457:
+	err = sys_ioctl (fd, cmd, (unsigned long) &sg_io64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#493: FILE: drivers/block/scsi_ioctl.c:458:
+	set_fs (old_fs);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#522: FILE: drivers/block/scsi_ioctl.c:487:
+	if (sg_io64.cmdp)
+		kfree(sg_io64.cmdp);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#524: FILE: drivers/block/scsi_ioctl.c:489:
+	if (sg_io64.sbp)
+		kfree(sg_io64.sbp);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#526: FILE: drivers/block/scsi_ioctl.c:491:
+		if (sg_io64.iovec_count) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#541: FILE: drivers/block/scsi_ioctl.c:506:
+__initcall(init_compat);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: drivers/serial/core.c:1173:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd, unsigned long ptr, struct file *f) $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#583: FILE: drivers/serial/core.c:1173:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd, unsigned long ptr, struct file *f) 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#583: FILE: drivers/serial/core.c:1173:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd, unsigned long ptr, struct file *f) 

WARNING:NEW_TYPEDEFS: do not add new typedefs
#585: FILE: drivers/serial/core.c:1175:
+	typedef struct serial_struct SS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/serial/core.c:1176:
+^Istruct serial_struct32 *ss32 = (void *) ptr; $

CHECK:SPACING: No space is necessary after a cast
#586: FILE: drivers/serial/core.c:1176:
+	struct serial_struct32 *ss32 = (void *) ptr; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: drivers/serial/core.c:1178:
+^Istruct serial_struct ss; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/serial/core.c:1179:
+^Imm_segment_t oldseg = get_fs(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: drivers/serial/core.c:1180:
+^Iif (cmd == TIOCSSERIAL) { $

WARNING:LINE_SPACING: Missing a blank line after declarations
#590: FILE: drivers/serial/core.c:1180:
+	mm_segment_t oldseg = get_fs(); 
+	if (cmd == TIOCSSERIAL) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/serial/core.c:1183:
+^I^Imemmove(&ss.iomem_reg_shift, ((char*)&ss.iomem_base)+4, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#593: FILE: drivers/serial/core.c:1183:
+		memmove(&ss.iomem_reg_shift, ((char*)&ss.iomem_base)+4, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#593: FILE: drivers/serial/core.c:1183:
+		memmove(&ss.iomem_reg_shift, ((char*)&ss.iomem_base)+4, 
 		                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/serial/core.c:1184:
+^I^I^Isizeof(SS)-offsetof(SS,iomem_reg_shift)); $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#594: FILE: drivers/serial/core.c:1184:
+			sizeof(SS)-offsetof(SS,iomem_reg_shift)); 
 			          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#594: FILE: drivers/serial/core.c:1184:
+			sizeof(SS)-offsetof(SS,iomem_reg_shift)); 
 			                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: drivers/serial/core.c:1188:
+^I^Ierr = sys_ioctl(fd,cmd,(unsigned long)(&ss)); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: drivers/serial/core.c:1188:
+		err = sys_ioctl(fd,cmd,(unsigned long)(&ss)); 
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: drivers/serial/core.c:1188:
+		err = sys_ioctl(fd,cmd,(unsigned long)(&ss)); 
 		                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/serial/core.c:1190:
+^Iif (cmd == TIOCGSERIAL && err >= 0) { $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#601: FILE: drivers/serial/core.c:1191:
+		if (__copy_to_user(ss32,&ss,offsetof(SS,iomem_base)) ||
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#601: FILE: drivers/serial/core.c:1191:
+		if (__copy_to_user(ss32,&ss,offsetof(SS,iomem_base)) ||
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: drivers/serial/core.c:1191:
+		if (__copy_to_user(ss32,&ss,offsetof(SS,iomem_base)) ||
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#601: FILE: drivers/serial/core.c:1191:
+		if (__copy_to_user(ss32,&ss,offsetof(SS,iomem_base)) ||
 		                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: drivers/serial/core.c:1192:
+^I^I    __put_user((unsigned long)ss.iomem_base  >> 32 ? $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#603: FILE: drivers/serial/core.c:1193:
+			       0xffffffff : (unsigned)(unsigned long)ss.iomem_base,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/serial/core.c:1198:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: drivers/serial/core.c:1199:
+^Ireturn err;^I$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#619: FILE: drivers/serial/core.c:1209:
+__initcall(init_compat);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#634: FILE: include/linux/ioctl32.h:7:
 
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 20 warnings, 11 checks, 596 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000372465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
