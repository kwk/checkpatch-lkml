WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> Looks saneish to me.  I'd like to see thorough benchmark results when it is

WARNING:TYPO_SPELLING: 'attatched' may be misspelled - perhaps 'attached'?
#61: 
New patch, sans binding pointer attatched.
                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: include/linux/binding.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#115: FILE: include/linux/binding.h:2:
+ * include/linux/binding.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: include/linux/binding.h:8:
+ * All rights reserved.          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#135: FILE: include/linux/binding.h:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#136: FILE: include/linux/binding.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#241: FILE: mm/binding.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#242: FILE: mm/binding.c:2:
+ * mm/binding.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: mm/binding.c:8:
+ * All rights reserved.          $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#262: FILE: mm/binding.c:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#263: FILE: mm/binding.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: mm/binding.c:32:
+asmlinkage unsigned long sys_membind(unsigned long start, unsigned long len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: mm/binding.c:33:
+asmlinkage unsigned long sys_membind(unsigned long start, unsigned long len, 
+		unsigned long *mask_ptr, unsigned int mask_len, unsigned long policy)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#275: FILE: mm/binding.c:35:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:INCLUDE_LINUX: Use #include <linux/string.h> instead of <asm/string.h>
#281: FILE: mm/binding.c:41:
+#include <asm/string.h>

WARNING:INCLUDE_LINUX: Use #include <linux/topology.h> instead of <asm/topology.h>
#282: FILE: mm/binding.c:42:
+#include <asm/topology.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#283: FILE: mm/binding.c:43:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: mm/binding.c:46:
+static inline void cpumask_to_nodemask(DECLARE_BITMAP(cpumask, NR_CPUS), $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#286: FILE: mm/binding.c:46:
+static inline void cpumask_to_nodemask(DECLARE_BITMAP(cpumask, NR_CPUS), 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: mm/binding.c:47:
+static inline void cpumask_to_nodemask(DECLARE_BITMAP(cpumask, NR_CPUS), 
+		DECLARE_BITMAP(nodemask, MAX_NUMNODES))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#291: FILE: mm/binding.c:51:
+	for (i = 0; i < NR_CPUS; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: mm/binding.c:57:
+ * Takes a BITMAP of nodes as an argument, and ensures that at least one of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: mm/binding.c:73:
+ * Adds the zones belonging to @pgdat to @zonelist.  Returns the next $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: mm/binding.c:76:
+static inline int add_zones(pg_data_t *pgdat, struct zonelist *zonelist, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: mm/binding.c:77:
+static inline int add_zones(pg_data_t *pgdat, struct zonelist *zonelist, 
+			int zone_num, int zone_type)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#322: FILE: mm/binding.c:82:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: mm/binding.c:116:
+static struct binding *alloc_binding(DECLARE_BITMAP(nodemask, MAX_NUMNODES), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: mm/binding.c:117:
+static struct binding *alloc_binding(DECLARE_BITMAP(nodemask, MAX_NUMNODES), 
+		int gfp_flag, unsigned long policy)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#365: FILE: mm/binding.c:125:
+	binding = (struct binding *)kmalloc(sizeof(struct binding), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*binding)...) over kmalloc(sizeof(struct binding)...)
#365: FILE: mm/binding.c:125:
+	binding = (struct binding *)kmalloc(sizeof(struct binding), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#375: FILE: mm/binding.c:135:
+			zone_num = add_zones(NODE_DATA(node), &binding->zonelist, zone_num, zone_type);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: mm/binding.c:145:
+} $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: mm/binding.c:147:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: mm/binding.c:157:
+asmlinkage unsigned long sys_membind(unsigned long start, unsigned long len, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: mm/binding.c:158:
+asmlinkage unsigned long sys_membind(unsigned long start, unsigned long len, 
+		unsigned long *mask_ptr, unsigned int mask_len, unsigned long policy)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#400: FILE: mm/binding.c:160:
+	DECLARE_BITMAP(cpu_mask, NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#407: FILE: mm/binding.c:167:
+	if (mask_len > NR_CPUS) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#411: FILE: mm/binding.c:171:
+	CLEAR_BITMAP(cpu_mask, NR_CPUS);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#413: FILE: mm/binding.c:173:
+	if (copy_from_user(cpu_mask, mask_ptr, (mask_len+7)/8)) {
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#413: FILE: mm/binding.c:173:
+	if (copy_from_user(cpu_mask, mask_ptr, (mask_len+7)/8)) {
 	                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: mm/binding.c:180:
+^Iif (!(vma && vma->vm_file && vma->vm_ops && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: mm/binding.c:181:
+	if (!(vma && vma->vm_file && vma->vm_ops && 
+		vma->vm_ops->nopage == shmem_nopage)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#423: FILE: mm/binding.c:183:
+		printk("%s: Can only bind shm(em) segments for now!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#423: FILE: mm/binding.c:183:
+		printk("%s: Can only bind shm(em) segments for now!\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#431: FILE: mm/binding.c:191:
+		printk("%s: Error while building memory binding!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#431: FILE: mm/binding.c:191:
+		printk("%s: Error while building memory binding!\n", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381112.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 22 warnings, 10 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381112.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
