ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: include/asm-i386/semaphore.h:65:
+	__ARCH_SEMAPHORE_INITIALIZER(name,1)
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: include/asm-i386/semaphore.h:67:
+#define __ARCH_DECLARE_SEMAPHORE_GENERIC(name,count) \
                                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#116: FILE: include/asm-i386/semaphore.h:67:
+#define __ARCH_DECLARE_SEMAPHORE_GENERIC(name,count) \
+	struct arch_semaphore name = __ARCH_SEMAPHORE_INITIALIZER(name,count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#117: FILE: include/asm-i386/semaphore.h:68:
+	struct arch_semaphore name = __ARCH_SEMAPHORE_INITIALIZER(name,count)
 	                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: include/asm-i386/semaphore.h:70:
+#define ARCH_DECLARE_MUTEX(name) __ARCH_DECLARE_SEMAPHORE_GENERIC(name,1)
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#121: FILE: include/asm-i386/semaphore.h:71:
+#define ARCH_DECLARE_MUTEX_LOCKED(name) __ARCH_DECLARE_SEMAPHORE_GENERIC(name,0)
                                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: include/asm-i386/semaphore.h:73:
+static inline void arch_sema_init (struct arch_semaphore *sem, int val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: include/asm-i386/semaphore.h:86:
+static inline void arch_init_MUTEX (struct arch_semaphore *sem)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: include/asm-i386/semaphore.h:91:
+static inline void arch_init_MUTEX_LOCKED (struct arch_semaphore *sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: include/asm-i386/semaphore.h:106:
+static inline void arch_down(struct arch_semaphore * sem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: include/asm-i386/semaphore.h:128:
+static inline int arch_down_interruptible(struct arch_semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: include/asm-i386/semaphore.h:154:
+static inline int arch_down_trylock(struct arch_semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: include/asm-i386/semaphore.h:181:
+static inline void arch_up(struct arch_semaphore * sem)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/asm-i386/semaphore.h:199:
+extern int FASTCALL(arch_sem_is_locked(struct arch_semaphore *sem));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 2 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
