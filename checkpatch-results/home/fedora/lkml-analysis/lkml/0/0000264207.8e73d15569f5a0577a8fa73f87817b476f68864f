WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -ruN -X /home/kiran/dontdiff linux-2.6.7/include/linux/kref.h test-2.6.7/include/linux/kref.h

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/linux/kref.h:56:
+kref_put(struct kref *kref, void (*release) (struct kref * kref))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!release"
#94: FILE: include/linux/kref.h:59:
+		WARN_ON(release == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: include/linux/kref.h:90:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: include/linux/kref.h:96:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: include/linux/kref.h:100:
+ * ^Ialloc_object^I^I^I^Iread_lock(&list_lock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: include/linux/kref.h:102:
+ *^Ikref_init(&el->rc)^I^I^Ikref_get(&el->rc);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: include/linux/kref.h:107:
+ * }^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: include/linux/kref.h:123:
+ * If this list/array is made lock free using rcu as in changing the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: include/linux/kref.h:125:
+ * in search_and_reference to rcu_read_lock(), the kref_get in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: include/linux/kref.h:129:
+ * 2. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: include/linux/kref.h:142:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: include/linux/kref.h:144:
+ * Sometimes, reference to the element need to be obtained in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: include/linux/kref.h:147:
+ * is to be used in such cases.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: include/linux/kref.h:148:
+ * Note: Except for kref_lf_get_rcu, kref_lf_xxx api are the same as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: include/linux/kref.h:149:
+ * corresponding kref_xxx api for most arches.  However, for arches which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: include/linux/kref.h:151:
+ * implement kref_lf_get_rcu, and acquire the same hashed spinlock for $

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#189: FILE: include/linux/kref.h:154:
+ * refcounter atleast at one place.  Mixing kref_lf_xx and kref_xxx api
               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: include/linux/kref.h:166:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: include/linux/kref.h:177:
+ * the refcounted object has been through a 1 to 0 transition and $

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: include/linux/kref.h:184:
+	int c, old;
+	c = atomic_read(&kref->refcount);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: include/linux/kref.h:194:
+/* $

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#239: FILE: include/linux/kref.h:204:
+	(&__kref_hash[(((unsigned long)k)>>8) & (KREF_HASH_SIZE-1)])
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#239: FILE: include/linux/kref.h:204:
+	(&__kref_hash[(((unsigned long)k)>>8) & (KREF_HASH_SIZE-1)])
 	                                                       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: include/linux/kref.h:207:
+#define KREF_HASH(k) ^I&__kref_hash[0]$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#242: FILE: include/linux/kref.h:207:
+#define KREF_HASH(k) 	&__kref_hash[0]

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: include/linux/kref.h:215:
+	unsigned long flags;
+	spin_lock_irqsave(KREF_HASH(kref), flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: include/linux/kref.h:223:
+	unsigned long flags;
+	spin_lock_irqsave(KREF_HASH(kref), flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: include/linux/kref.h:228:
+static inline void $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#264: FILE: include/linux/kref.h:229:
+kref_lf_put(struct kref *kref, void (*release) (struct kref * kref))

WARNING:LINE_SPACING: Missing a blank line after declarations
#267: FILE: include/linux/kref.h:232:
+	unsigned long flags;
+	spin_lock_irqsave(KREF_HASH(kref), flags);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!release"
#271: FILE: include/linux/kref.h:236:
+		WARN_ON(release == NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: include/linux/kref.h:247:
+	unsigned long flags;
+	spin_lock_irqsave(KREF_HASH(kref), flags);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#287: FILE: include/linux/kref.h:252:
+		return 1;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: include/linux/kref.h:262:
+	unsigned long flags;
+	spin_lock_irqsave(KREF_HASH(kref), flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: lib/kref.c:19:
+        [0 ... (KREF_HASH_SIZE-1)] = SPIN_LOCK_UNLOCKED$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: lib/kref.c:19:
+        [0 ... (KREF_HASH_SIZE-1)] = SPIN_LOCK_UNLOCKED$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#371: FILE: lib/kref.c:19:
+        [0 ... (KREF_HASH_SIZE-1)] = SPIN_LOCK_UNLOCKED
                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 12 warnings, 5 checks, 324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
