WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#72: FILE: drivers/char/tpm/tpm_atmel.c:140:
 static int __devinit tpm_atml_init(struct pci_dev *pci_dev,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#90: FILE: drivers/char/tpm/tpm.c:245:
+EXPORT_SYMBOL_GPL(tpm_show_pcrs);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#108: FILE: drivers/char/tpm/tpm.c:304:
+EXPORT_SYMBOL_GPL(tpm_show_pubek);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: drivers/char/tpm/tpm.c:359:
+EXPORT_SYMBOL_GPL(tpm_show_caps);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/char/tpm/tpm.c:361:
+ssize_t tpm_store_cancel(struct device * dev, const char *buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: drivers/char/tpm/tpm.c:365:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#132: FILE: drivers/char/tpm/tpm.c:365:
+	if (chip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#139: FILE: drivers/char/tpm/tpm.c:372:
+EXPORT_SYMBOL_GPL(tpm_store_cancel);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#170: FILE: drivers/char/tpm/tpm.c:531:
 void __devexit tpm_remove(struct pci_dev *pci_dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#190: FILE: drivers/char/tpm/tpm_nsc.c:239:
 static int __devinit tpm_nsc_init(struct pci_dev *pci_dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: drivers/chat/tpm/tpm.h:39:
+extern ssize_t tpm_show_pubek(struct device *, char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#197: FILE: drivers/chat/tpm/tpm.h:39:
+extern ssize_t tpm_show_pubek(struct device *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#197: FILE: drivers/chat/tpm/tpm.h:39:
+extern ssize_t tpm_show_pubek(struct device *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: drivers/chat/tpm/tpm.h:40:
+extern ssize_t tpm_show_pcrs(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#198: FILE: drivers/chat/tpm/tpm.h:40:
+extern ssize_t tpm_show_pcrs(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#198: FILE: drivers/chat/tpm/tpm.h:40:
+extern ssize_t tpm_show_pcrs(struct device *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: drivers/chat/tpm/tpm.h:41:
+extern ssize_t tpm_show_caps(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#199: FILE: drivers/chat/tpm/tpm.h:41:
+extern ssize_t tpm_show_caps(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#199: FILE: drivers/chat/tpm/tpm.h:41:
+extern ssize_t tpm_show_caps(struct device *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: drivers/chat/tpm/tpm.h:42:
+extern ssize_t tpm_store_cancel(struct device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#200: FILE: drivers/chat/tpm/tpm.h:42:
+extern ssize_t tpm_store_cancel(struct device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#200: FILE: drivers/chat/tpm/tpm.h:42:
+extern ssize_t tpm_store_cancel(struct device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#200: FILE: drivers/chat/tpm/tpm.h:42:
+extern ssize_t tpm_store_cancel(struct device *, const char *, size_t);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#216: FILE: drivers/char/tpm/tpm.c:536:
 void __devexit tpm_remove(struct pci_dev *pci_dev)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pubek' to 'pubek_show'
#229: FILE: drivers/char/tpm/tpm_nsc.c:227:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#229: FILE: drivers/char/tpm/tpm_nsc.c:227:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pcrs' to 'pcrs_show'
#230: FILE: drivers/char/tpm/tpm_nsc.c:228:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#230: FILE: drivers/char/tpm/tpm_nsc.c:228:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_caps' to 'caps_show'
#231: FILE: drivers/char/tpm/tpm_nsc.c:229:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#231: FILE: drivers/char/tpm/tpm_nsc.c:229:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#232: FILE: drivers/char/tpm/tpm_nsc.c:230:
+static DEVICE_ATTR(cancel, S_IWUSR|S_IWGRP, NULL, tpm_store_cancel);
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUSR|S_IWGRP' used
#232: FILE: drivers/char/tpm/tpm_nsc.c:230:
+static DEVICE_ATTR(cancel, S_IWUSR|S_IWGRP, NULL, tpm_store_cancel);

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#232: FILE: drivers/char/tpm/tpm_nsc.c:230:
+static DEVICE_ATTR(cancel, S_IWUSR|S_IWGRP, NULL, tpm_store_cancel);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: drivers/char/tpm/tpm_nsc.c:232:
+static struct attribute * nsc_attrs[] = { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: drivers/char/tpm/tpm_nsc.c:232:
+static struct attribute * nsc_attrs[] = { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: drivers/char/tpm/tpm_nsc.c:240:
+static struct attribute_group nsc_attr_grp = { .attrs = nsc_attrs }; $

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pubek' to 'pubek_show'
#253: FILE: drivers/char/tpm/tpm_atmel.c:129:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#253: FILE: drivers/char/tpm/tpm_atmel.c:129:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pcrs' to 'pcrs_show'
#254: FILE: drivers/char/tpm/tpm_atmel.c:130:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#254: FILE: drivers/char/tpm/tpm_atmel.c:130:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_caps' to 'caps_show'
#255: FILE: drivers/char/tpm/tpm_atmel.c:131:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#255: FILE: drivers/char/tpm/tpm_atmel.c:131:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#256: FILE: drivers/char/tpm/tpm_atmel.c:132:
+static DEVICE_ATTR(cancel, S_IWUSR |S_IWGRP, NULL, tpm_store_cancel);
                                    ^

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUSR |S_IWGRP' used
#256: FILE: drivers/char/tpm/tpm_atmel.c:132:
+static DEVICE_ATTR(cancel, S_IWUSR |S_IWGRP, NULL, tpm_store_cancel);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR |S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#256: FILE: drivers/char/tpm/tpm_atmel.c:132:
+static DEVICE_ATTR(cancel, S_IWUSR |S_IWGRP, NULL, tpm_store_cancel);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#258: FILE: drivers/char/tpm/tpm_atmel.c:134:
+static struct attribute* atmel_attrs[] = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187012.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 34 warnings, 7 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000187012.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
