ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: include/linux/security.h:1169:
+^Iint (*task_setprlimit) (struct task_struct * p, unsigned int resource, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: include/linux/security.h:1169:
+	int (*task_setprlimit) (struct task_struct * p, unsigned int resource, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#99: FILE: include/linux/security.h:1169:
+	int (*task_setprlimit) (struct task_struct * p, unsigned int resource, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: include/linux/security.h:1170:
+                                struct rlimit * new_rlim);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: include/linux/security.h:1170:
+	int (*task_setprlimit) (struct task_struct * p, unsigned int resource, 
+                                struct rlimit * new_rlim);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: include/linux/security.h:1170:
+                                struct rlimit * new_rlim);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: include/linux/security.h:1170:
+                                struct rlimit * new_rlim);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: include/linux/security.h:1818:
+static inline int security_task_setprlimit (struct task_struct *p,

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: include/linux/security.h:1819:
+                                            unsigned int resource,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/linux/security.h:1819:
+                                            unsigned int resource,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: include/linux/security.h:1822:
+	return security_ops->task_setprlimit (p, resource, new_rlim);

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: kernel/sys.c:1651:
+        task_t *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/sys.c:1651:
+        task_t *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: kernel/sys.c:1655:
+        if (pid < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: kernel/sys.c:1655:
+        if (pid < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: kernel/sys.c:1656:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: kernel/sys.c:1656:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: kernel/sys.c:1659:
+        if (new_rlim.rlim_cur > new_rlim.rlim_max)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/sys.c:1659:
+        if (new_rlim.rlim_cur > new_rlim.rlim_max)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: kernel/sys.c:1660:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: kernel/sys.c:1660:
+                return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: kernel/sys.c:1661:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: kernel/sys.c:1661:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: kernel/sys.c:1661:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: kernel/sys.c:1662:
+        retval = -ESRCH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: kernel/sys.c:1662:
+        retval = -ESRCH;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: kernel/sys.c:1663:
+        if (pid == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: kernel/sys.c:1663:
+        if (pid == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: kernel/sys.c:1664:
+                p = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: kernel/sys.c:1664:
+                p = current;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: kernel/sys.c:1665:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: kernel/sys.c:1665:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: kernel/sys.c:1666:
+                read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: kernel/sys.c:1666:
+                read_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: kernel/sys.c:1667:
+                p = find_task_by_pid(pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: kernel/sys.c:1667:
+                p = find_task_by_pid(pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: kernel/sys.c:1668:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: kernel/sys.c:1668:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: kernel/sys.c:1669:
+        if (p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: kernel/sys.c:1669:
+        if (p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: kernel/sys.c:1670:
+                retval = -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: kernel/sys.c:1670:
+                retval = -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: kernel/sys.c:1671:
+                if ((current->euid ^ p->suid) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: kernel/sys.c:1671:
+                if ((current->euid ^ p->suid) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: kernel/sys.c:1672:
+                    ((current->uid ^ p->euid) || (current->uid ^ p->uid)) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: kernel/sys.c:1672:
+                    ((current->uid ^ p->euid) || (current->uid ^ p->uid)) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/sys.c:1673:
+                    !capable(CAP_SYS_RESOURCE))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/sys.c:1673:
+                    !capable(CAP_SYS_RESOURCE))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: kernel/sys.c:1674:
+                        goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/sys.c:1674:
+                        goto out_unlock;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: kernel/sys.c:1675:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: kernel/sys.c:1675:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: kernel/sys.c:1676:
+                old_rlim = p->signal->rlim + resource;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: kernel/sys.c:1676:
+                old_rlim = p->signal->rlim + resource;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: kernel/sys.c:1677:
+                if ((new_rlim.rlim_max > old_rlim->rlim_max) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: kernel/sys.c:1677:
+                if ((new_rlim.rlim_max > old_rlim->rlim_max) &&$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_rlim.rlim_max > old_rlim->rlim_max'
#155: FILE: kernel/sys.c:1677:
+                if ((new_rlim.rlim_max > old_rlim->rlim_max) &&
+                                !capable(CAP_SYS_RESOURCE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: kernel/sys.c:1678:
+                                !capable(CAP_SYS_RESOURCE))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: kernel/sys.c:1678:
+                if ((new_rlim.rlim_max > old_rlim->rlim_max) &&
+                                !capable(CAP_SYS_RESOURCE))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: kernel/sys.c:1678:
+                                !capable(CAP_SYS_RESOURCE))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: kernel/sys.c:1679:
+                        goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: kernel/sys.c:1679:
+                        goto out_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: kernel/sys.c:1680:
+                if (resource == RLIMIT_NOFILE && new_rlim.rlim_max > NR_OPEN)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: kernel/sys.c:1680:
+                if (resource == RLIMIT_NOFILE && new_rlim.rlim_max > NR_OPEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/sys.c:1681:
+                        goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/sys.c:1681:
+                        goto out_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: kernel/sys.c:1683:
+                retval = security_task_setprlimit(p, resource, &new_rlim);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: kernel/sys.c:1683:
+                retval = security_task_setprlimit(p, resource, &new_rlim);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: kernel/sys.c:1684:
+                if (retval)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/sys.c:1684:
+                if (retval)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: kernel/sys.c:1685:
+                        goto out_unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/sys.c:1685:
+                        goto out_unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: kernel/sys.c:1687:
+                task_lock(p->group_leader);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: kernel/sys.c:1687:
+                task_lock(p->group_leader);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: kernel/sys.c:1688:
+^I        *old_rlim = new_rlim;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: kernel/sys.c:1689:
+                task_unlock(p->group_leader);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: kernel/sys.c:1689:
+                task_unlock(p->group_leader);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: kernel/sys.c:1690:
+                retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: kernel/sys.c:1690:
+                retval = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: kernel/sys.c:1692:
+        ^Iif (resource == RLIMIT_CPU && new_rlim.rlim_cur != RLIM_INFINITY &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: kernel/sys.c:1692:
+        ^Iif (resource == RLIMIT_CPU && new_rlim.rlim_cur != RLIM_INFINITY &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/sys.c:1692:
+        ^Iif (resource == RLIMIT_CPU && new_rlim.rlim_cur != RLIM_INFINITY &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: kernel/sys.c:1693:
+^I            (cputime_eq(p->signal->it_prof_expires, cputime_zero) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: kernel/sys.c:1693:
+        	if (resource == RLIMIT_CPU && new_rlim.rlim_cur != RLIM_INFINITY &&
+	            (cputime_eq(p->signal->it_prof_expires, cputime_zero) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: kernel/sys.c:1694:
+^I             new_rlim.rlim_cur <= cputime_to_secs($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#172: FILE: kernel/sys.c:1694:
+	             new_rlim.rlim_cur <= cputime_to_secs(

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: kernel/sys.c:1695:
+^I^I                p->signal->it_prof_expires))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/sys.c:1696:
+^I^I        cputime_t cputime = secs_to_cputime(new_rlim.rlim_cur);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/sys.c:1697:
+^I^I        spin_lock_irq(&p->sighand->siglock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: kernel/sys.c:1697:
+		        cputime_t cputime = secs_to_cputime(new_rlim.rlim_cur);
+		        spin_lock_irq(&p->sighand->siglock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/sys.c:1698:
+^I^I        set_process_cpu_timer(p, CPUCLOCK_PROF,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: kernel/sys.c:1699:
+^I^I^I        ^I      &cputime, NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: kernel/sys.c:1699:
+^I^I^I        ^I      &cputime, NULL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: kernel/sys.c:1699:
+		        set_process_cpu_timer(p, CPUCLOCK_PROF,
+			        	      &cputime, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/sys.c:1700:
+^I^I        spin_unlock_irq(&p->sighand->siglock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/sys.c:1701:
+^I        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/sys.c:1702:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/sys.c:1702:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/sys.c:1703:
+        if (pid == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/sys.c:1703:
+        if (pid == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: kernel/sys.c:1704:
+                goto out_nounlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/sys.c:1704:
+                goto out_nounlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: kernel/sys.c:1707:
+        read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/sys.c:1707:
+        read_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: kernel/sys.c:1710:
+        return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/sys.c:1710:
+        return retval;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: security/dummy.c:551:
+static int dummy_task_setprlimit (struct task_struct *p, unsigned int resource,

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: security/dummy.c:552:
+                                  struct rlimit *new_rlim)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: security/dummy.c:552:
+                                  struct rlimit *new_rlim)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: security/selinux/hooks.c:2726:
+                                  struct rlimit *new_rlim)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: security/selinux/hooks.c:2726:
+static int selinux_task_setprlimit(struct task_struct *p, unsigned int resource,
+                                  struct rlimit *new_rlim)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: security/selinux/hooks.c:2726:
+                                  struct rlimit *new_rlim)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#236: FILE: security/selinux/hooks.c:2736:
+	/* Control the ability to change the hard limit (whether
+	   lowering or raising it), so that the hard limit can

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#238: FILE: security/selinux/hooks.c:2738:
+	   upon context transitions. See selinux_bprm_apply_creds. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 56 errors, 51 warnings, 7 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
