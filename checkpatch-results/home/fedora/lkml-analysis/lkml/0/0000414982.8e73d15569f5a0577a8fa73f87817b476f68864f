WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#53: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#61: FILE: include/linux/poll.h:21:
+	struct file * filp;
 	              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#61: FILE: include/linux/poll.h:21:
+	struct file * filp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#63: FILE: include/linux/poll.h:23:
+	wait_queue_head_t * wait_address;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#65: FILE: include/linux/poll.h:25:
+};
+#define POLL_TABLE_INTERNAL	8

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: include/linux/poll.h:26:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: include/linux/poll.h:26:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: fs/select.c:66:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/select.c:66:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: fs/select.c:70:
+	struct poll_table_entry * entry;

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: fs/select.c:73:
+	while(pt->nr > 0) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#124: FILE: fs/select.c:76:
+		remove_wait_queue(entry->wait_address,&entry->wait);
 		                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#124: FILE: fs/select.c:76:
+		remove_wait_queue(entry->wait_address,&entry->wait);
 		                                      ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#125: FILE: fs/select.c:77:
+		fput(entry->filp);
 		            ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: fs/select.c:79:
+ ^Iwhile (p) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: fs/select.c:79:
+ ^Iwhile (p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/select.c:79:
+ ^Iwhile (p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: fs/select.c:97:
+ ^Istruct poll_table_entry * entry;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: fs/select.c:97:
+ ^Istruct poll_table_entry * entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/select.c:97:
+ ^Istruct poll_table_entry * entry;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: fs/select.c:97:
+ 	struct poll_table_entry * entry;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: fs/select.c:98:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/select.c:98:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/select.c:99:
+ ^Iif(p->nr < POLL_TABLE_INTERNAL) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: fs/select.c:99:
+ ^Iif(p->nr < POLL_TABLE_INTERNAL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/select.c:99:
+ ^Iif(p->nr < POLL_TABLE_INTERNAL) {$

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: fs/select.c:99:
+ 	if(p->nr < POLL_TABLE_INTERNAL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/select.c:100:
+ ^I^Ientry = p->internal+p->nr++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/select.c:100:
+ ^I^Ientry = p->internal+p->nr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/select.c:100:
+ ^I^Ientry = p->internal+p->nr++;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: fs/select.c:100:
+ 		entry = p->internal+p->nr++;
  		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: fs/select.c:101:
+ ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: fs/select.c:101:
+ ^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/select.c:101:
+ ^I} else {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#179: FILE: fs/select.c:119:
+		table->entry = entry+1;
 		                    ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: fs/select.c:123:
+	get_file(filp);
 	         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#193: FILE: fs/select.c:124:
+	entry->filp = filp;
 	       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#193: FILE: fs/select.c:124:
+	entry->filp = filp;
 	              ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#196: FILE: fs/select.c:127:
+	add_wait_queue(wait_address,&entry->wait);
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#196: FILE: fs/select.c:127:
+	add_wait_queue(wait_address,&entry->wait);
 	                            ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#214: FILE: fs/select.c:272:
+static inline void *select_bits_alloc(int size, void* internal)

ERROR:SPACING: space required before the open parenthesis '('
#216: FILE: fs/select.c:274:
+	if(size <= SELECT_INLINE_BYTES)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#222: FILE: fs/select.c:279:
+static inline void select_bits_free(void *bits, void* internal)

ERROR:SPACING: space required before the open parenthesis '('
#225: FILE: fs/select.c:281:
+	if(bits != internal)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: fs/select.c:296:
 
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#239: FILE: fs/select.c:301:
+	char ibuf[6*SELECT_INLINE_BYTES];
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#269: FILE: fs/select.c:397:
+#define POLLFD_PER_PAGE  ((PAGE_SIZE-sizeof(struct poll_list)) / sizeof(struct pollfd))
                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: fs/select.c:432:
+static int do_poll(int nfds, struct poll_list *list,
+			struct poll_wrapper *pw, long timeout)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: fs/select.c:439:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/select.c:439:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#293: FILE: fs/select.c:441:
+		struct poll_list* walk;

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: fs/select.c:444:
+		while(walk != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "walk"
#301: FILE: fs/select.c:444:
+		while(walk != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#302: FILE: fs/select.c:445:
+			do_pollfd( walk->len, walk->entries, &pt, &count);

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: fs/select.c:464:
+ ^Iint fdcount, err;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#320: FILE: fs/select.c:464:
+ ^Iint fdcount, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/select.c:464:
+ ^Iint fdcount, err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: fs/select.c:465:
+ ^Iunsigned int i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: fs/select.c:465:
+ ^Iunsigned int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/select.c:465:
+ ^Iunsigned int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: fs/select.c:470:
+ ^Istruct poll_list *pollwalk;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: fs/select.c:470:
+ ^Istruct poll_list *pollwalk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: fs/select.c:470:
+ ^Istruct poll_list *pollwalk;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: fs/select.c:471:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: fs/select.c:471:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: fs/select.c:487:
+	if(nfds <= INLINE_POLL_COUNT)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#358: FILE: fs/select.c:494:
+	while(i!=0) {
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: fs/select.c:494:
+	while(i!=0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: fs/select.c:496:
+		struct poll_list *pp;
+		pp = kmalloc(sizeof(struct poll_list)+

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#360: FILE: fs/select.c:496:
+		pp = kmalloc(sizeof(struct poll_list)+
 		                                     ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pp)...) over kmalloc(sizeof(struct poll_list)...)
#360: FILE: fs/select.c:496:
+		pp = kmalloc(sizeof(struct poll_list)+

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#361: FILE: fs/select.c:497:
+				sizeof(struct pollfd)*
 				                     ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#362: FILE: fs/select.c:498:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#362: FILE: fs/select.c:498:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#362: FILE: fs/select.c:498:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				                                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#364: FILE: fs/select.c:500:
+		if(pp==NULL)
 		     ^

ERROR:SPACING: space required before the open parenthesis '('
#364: FILE: fs/select.c:500:
+		if(pp==NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp"
#364: FILE: fs/select.c:500:
+		if(pp==NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#372: FILE: fs/select.c:502:
+		pp->next=NULL;
 		        ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#373: FILE: fs/select.c:503:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#373: FILE: fs/select.c:503:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#373: FILE: fs/select.c:503:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: fs/select.c:507:
+^I^Iif (copy_from_user(pollwalk+1, ufds + nfds-i, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#377: FILE: fs/select.c:507:
+		if (copy_from_user(pollwalk+1, ufds + nfds-i, 
 		                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#377: FILE: fs/select.c:507:
+		if (copy_from_user(pollwalk+1, ufds + nfds-i, 
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: fs/select.c:508:
+		if (copy_from_user(pollwalk+1, ufds + nfds-i, 
+				sizeof(struct pollfd)*pollwalk->len)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#378: FILE: fs/select.c:508:
+				sizeof(struct pollfd)*pollwalk->len)) {
 				                     ^

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: fs/select.c:519:
+	while(pollwalk != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pollwalk"
#408: FILE: fs/select.c:519:
+	while(pollwalk != NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#409: FILE: fs/select.c:520:
+		struct pollfd * fds = pollwalk->entries;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#412: FILE: fs/select.c:523:
+		for (j=0; j < pollwalk->len; j++, ufds++) {
 		      ^

ERROR:SPACING: space required before the open parenthesis '('
#413: FILE: fs/select.c:524:
+			if(__put_user(fds[j].revents, &ufds->revents))

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: fs/select.c:528:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#417: FILE: fs/select.c:528:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: fs/select.c:528:
+  ^I}$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#432: FILE: fs/select.c:534:
+	while(pollwalk!=NULL) {
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: fs/select.c:534:
+	while(pollwalk!=NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pollwalk"
#432: FILE: fs/select.c:534:
+	while(pollwalk!=NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: fs/select.c:536:
+		struct poll_list *pp = pollwalk->next;
+		kfree(pollwalk);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414982.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 31 warnings, 22 checks, 371 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000414982.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
