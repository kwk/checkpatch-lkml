WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
diff -urNp linux-2.6.1/arch/i386/Kconfig linux-2.6.1-efivars/arch/i386/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#731: FILE: drivers/efi/efivars.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#751: FILE: drivers/efi/efivars.c:21:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#752: FILE: drivers/efi/efivars.c:22:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#805: FILE: drivers/efi/efivars.c:75:
+#include <asm/uaccess.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#832: FILE: drivers/efi/efivars.c:102:
+	efi_char16_t  VariableName[1024/sizeof(efi_char16_t)];
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <VariableName>
#832: FILE: drivers/efi/efivars.c:102:
+	efi_char16_t  VariableName[1024/sizeof(efi_char16_t)];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <VendorGuid>
#833: FILE: drivers/efi/efivars.c:103:
+	efi_guid_t    VendorGuid;

CHECK:CAMELCASE: Avoid CamelCase: <DataSize>
#834: FILE: drivers/efi/efivars.c:104:
+	unsigned long DataSize;

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#835: FILE: drivers/efi/efivars.c:105:
+	__u8          Data[1024];

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#836: FILE: drivers/efi/efivars.c:106:
+	efi_status_t  Status;

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#837: FILE: drivers/efi/efivars.c:107:
+	__u32         Attributes;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#838: FILE: drivers/efi/efivars.c:108:
+} __attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#840: FILE: drivers/efi/efivars.c:110:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#851: FILE: drivers/efi/efivars.c:121:
+	ssize_t (*show) (struct efivar_entry *entry, char *buf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: drivers/efi/efivars.c:125:
+
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#856: FILE: drivers/efi/efivars.c:126:
+#define EFI_ATTR(_name, _mode, _show, _store) \
+struct subsys_attribute efi_attr_##_name = { \
+	.attr {.name = __stringify(_name), .mode = _mode }, \
+	.show = _show, \
+	.store = _store, \
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#863: FILE: drivers/efi/efivars.c:133:
+#define EFIVAR_ATTR(_name, _mode, _show, _store) \
+struct efivar_attribute efivar_attr_##_name = { \
+	.attr = {.name = __stringify(_name), .mode = _mode }, \
+	.show = _show, \
+	.store = _store, \
+};

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#870: FILE: drivers/efi/efivars.c:140:
+#define VAR_SUBSYS_ATTR(_name, _mode, _show, _store) \
+struct subsys_attribute var_subsys_attr_##_name = { \
+	.attr = {.name = __stringify(_name), .mode = _mode }, \
+	.show = _show, \
+	.store = _store, \
+};

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#906: FILE: drivers/efi/efivars.c:176:
+	return utf8_strlen(data, maxlength/sizeof(efi_char16_t)) * sizeof(efi_char16_t);
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/efi/efivars.c:187:
+^I^I^I ^I  &var->VendorGuid,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#917: FILE: drivers/efi/efivars.c:187:
+^I^I^I ^I  &var->VendorGuid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: drivers/efi/efivars.c:188:
+^I^I^I ^I  &var->Attributes,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#918: FILE: drivers/efi/efivars.c:188:
+^I^I^I ^I  &var->Attributes,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: drivers/efi/efivars.c:189:
+^I^I^I ^I  &var->DataSize,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#919: FILE: drivers/efi/efivars.c:189:
+^I^I^I ^I  &var->DataSize,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/efi/efivars.c:190:
+^I^I^I ^I  var->Data);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#920: FILE: drivers/efi/efivars.c:190:
+^I^I^I ^I  var->Data);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#923: FILE: drivers/efi/efivars.c:193:
+		printk(KERN_WARNING "efivars: get_variable() failed 0x%lx!\n",

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1003: FILE: drivers/efi/efivars.c:273:
+}
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1023: FILE: drivers/efi/efivars.c:293:
+		printk(KERN_ERR "efivars: Cannot edit the wrong variable!\n");

ERROR:SPACING: space required before the open brace '{'
#1027: FILE: drivers/efi/efivars.c:297:
+	if ((new_var->DataSize <= 0) || (new_var->Attributes == 0)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_var->DataSize <= 0'
#1027: FILE: drivers/efi/efivars.c:297:
+	if ((new_var->DataSize <= 0) || (new_var->Attributes == 0)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_var->Attributes == 0'
#1027: FILE: drivers/efi/efivars.c:297:
+	if ((new_var->DataSize <= 0) || (new_var->Attributes == 0)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1028: FILE: drivers/efi/efivars.c:298:
+		printk(KERN_ERR "efivars: DataSize & Attributes must be valid!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1042: FILE: drivers/efi/efivars.c:312:
+		printk(KERN_WARNING "efivars: set_variable() failed: status=%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1043: FILE: drivers/efi/efivars.c:313:
+		printk(KERN_WARNING "efivars: set_variable() failed: status=%lx\n",
+				status);

WARNING:TYPO_SPELLING: 'atttributes' may be misspelled - perhaps 'attributes'?
#1070: FILE: drivers/efi/efivars.c:340:
+ * the atttributes...
        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: drivers/efi/efivars.c:343:
+^I^I^I        char *buf)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/efi/efivars.c:343:
+static ssize_t efivar_attr_show(struct kobject *kobj, struct attribute *attr,
+			        char *buf)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1082: FILE: drivers/efi/efivars.c:352:
+	if (efivar_attr->show) {
+		ret = efivar_attr->show(var, buf);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1104: FILE: drivers/efi/efivars.c:374:
+static struct sysfs_ops efivar_attr_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1112: FILE: drivers/efi/efivars.c:382:
+	struct efivar_entry *var = container_of(kobj, struct efivar_entry, kobj);
+	list_del(&var->list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1149: FILE: drivers/efi/efivars.c:419:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1172: FILE: drivers/efi/efivars.c:442:
+		if ( strsize1 == strsize2 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: drivers/efi/efivars.c:443:
+		if ( strsize1 == strsize2 &&
+		     !memcmp(&(search_efivar->var.VariableName),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around search_efivar->var.VariableName
#1173: FILE: drivers/efi/efivars.c:443:
+		     !memcmp(&(search_efivar->var.VariableName),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1182: FILE: drivers/efi/efivars.c:452:
+        ^Ispin_unlock(&efivars_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1182: FILE: drivers/efi/efivars.c:452:
+        ^Ispin_unlock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1182: FILE: drivers/efi/efivars.c:452:
+        ^Ispin_unlock(&efivars_lock);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1194: FILE: drivers/efi/efivars.c:464:
+		printk(KERN_WARNING "efivars: set_variable() failed: status=%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1195: FILE: drivers/efi/efivars.c:465:
+		printk(KERN_WARNING "efivars: set_variable() failed: status=%lx\n",
+			status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1199: FILE: drivers/efi/efivars.c:469:
+        spin_unlock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: drivers/efi/efivars.c:469:
+        spin_unlock(&efivars_lock);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1231: FILE: drivers/efi/efivars.c:501:
+		if ( strsize1 == strsize2 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1232: FILE: drivers/efi/efivars.c:502:
+		if ( strsize1 == strsize2 &&
+		     !memcmp(&(search_efivar->var.VariableName),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around search_efivar->var.VariableName
#1232: FILE: drivers/efi/efivars.c:502:
+		     !memcmp(&(search_efivar->var.VariableName),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1255: FILE: drivers/efi/efivars.c:525:
+		printk(KERN_WARNING "efivars: set_variable() failed: status=%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1256: FILE: drivers/efi/efivars.c:526:
+		printk(KERN_WARNING "efivars: set_variable() failed: status=%lx\n",
+			status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1264: FILE: drivers/efi/efivars.c:534:
+        spin_unlock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1264: FILE: drivers/efi/efivars.c:534:
+        spin_unlock(&efivars_lock);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1278: FILE: drivers/efi/efivars.c:548:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1279: FILE: drivers/efi/efivars.c:549:
+ * Let's not leave out systab information that snuck into $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: drivers/efi/efivars.c:556:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: drivers/efi/efivars.c:574:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: drivers/efi/efivars.c:606:
+        short_name = kmalloc(short_name_size + 1, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: drivers/efi/efivars.c:606:
+        short_name = kmalloc(short_name_size + 1, GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: drivers/efi/efivars.c:607:
+        new_efivar = kmalloc(sizeof(struct efivar_entry), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: drivers/efi/efivars.c:607:
+        new_efivar = kmalloc(sizeof(struct efivar_entry), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_efivar)...) over kmalloc(sizeof(struct efivar_entry)...)
#1337: FILE: drivers/efi/efivars.c:607:
+        new_efivar = kmalloc(sizeof(struct efivar_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1340: FILE: drivers/efi/efivars.c:610:
+		if (short_name)        kfree(short_name);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1341: FILE: drivers/efi/efivars.c:611:
+		if (new_efivar)        kfree(new_efivar);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1344: FILE: drivers/efi/efivars.c:614:
+	memset(short_name, 0, short_name_size+1);
 	                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_efivar->var.VendorGuid
#1349: FILE: drivers/efi/efivars.c:619:
+	memcpy(&(new_efivar->var.VendorGuid), vendor_guid, sizeof(efi_guid_t));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1352: FILE: drivers/efi/efivars.c:622:
+	/* Convert Unicode to normal chars (assume top bits are 0),
+	   ala UTF-8 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1352: FILE: drivers/efi/efivars.c:622:
+	   ala UTF-8 */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1353: FILE: drivers/efi/efivars.c:623:
+	for (i=0; i < (int)(variable_name_size / sizeof(efi_char16_t)); i++) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1353: FILE: drivers/efi/efivars.c:623:
+	for (i=0; i < (int)(variable_name_size / sizeof(efi_char16_t)); i++) {
+		short_name[i] = variable_name[i] & 0xFF;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1357: FILE: drivers/efi/efivars.c:627:
+	/* This is ugly, but necessary to separate one vendor's
+	   private variables from another's.         */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1357: FILE: drivers/efi/efivars.c:627:
+	   private variables from another's.         */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1369: FILE: drivers/efi/efivars.c:639:
+        spin_lock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: drivers/efi/efivars.c:639:
+        spin_lock(&efivars_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1370: FILE: drivers/efi/efivars.c:640:
+        list_add(&new_efivar->list, &efivar_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: drivers/efi/efivars.c:640:
+        list_add(&new_efivar->list, &efivar_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1371: FILE: drivers/efi/efivars.c:641:
+        spin_unlock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: drivers/efi/efivars.c:641:
+        spin_unlock(&efivars_lock);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1375: FILE: drivers/efi/efivars.c:645:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1379: FILE: drivers/efi/efivars.c:649:
+ * driver, but for now only efivars will register with it, so just $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1393: FILE: drivers/efi/efivars.c:663:
+	printk(KERN_INFO "EFI Variables Facility v%s\n", EFIVARS_VERSION);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1423: FILE: drivers/efi/efivars.c:693:
+			efivar_create_sysfs_entry(variable_name_size,
+						 variable_name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1429: FILE: drivers/efi/efivars.c:699:
+			printk(KERN_WARNING "efivars: get_next_variable: status=%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1430: FILE: drivers/efi/efivars.c:700:
+			printk(KERN_WARNING "efivars: get_next_variable: status=%lx\n",
+				status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: drivers/efi/efivars.c:732:
+        spin_lock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/efi/efivars.c:732:
+        spin_lock(&efivars_lock);$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1487: FILE: drivers/efi/Kconfig:8:
+config EFI_VARS
+	tristate "EFI Variable Support via sysfs"
+	depends on EFI
+	default n
+	---help---
+	  If you say Y here, you are able to get EFI (Extensible Firmware
+	  Interface) variable information via sysfs.  You may read,
+	  write, create, and destroy EFI variables through this interface.
+
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000312004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 40 warnings, 28 checks, 900 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000312004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
