ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#37: 
--- a/drivers/scsi/sd.c	Mon Sep 16 15:29:45 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host"
#46: FILE: drivers/scsi/sd.c:217:
+			if (host == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#57: FILE: drivers/scsi/sd.c:401:
+	SCpnt->cmnd[1] = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: drivers/scsi/sd.c:466:
+	struct Scsi_Host * shp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#65: FILE: drivers/scsi/sd.c:466:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#76: FILE: drivers/scsi/sd.c:490:
+	if (shp == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: drivers/scsi/sd.c:560:
+	struct Scsi_Host * shp;

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/scsi/sd.c:902:
+		memset((void *) &cmd[1], 0, 9);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Request>
#154: FILE: drivers/scsi/sd.c:1009:
+sd_do_mode_sense6(Scsi_Request *SRpnt, int modepage, unsigned char *buffer,

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#154: FILE: drivers/scsi/sd.c:1009:
+sd_do_mode_sense6(Scsi_Request *SRpnt, int modepage, unsigned char *buffer,

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/scsi/sd.c:1010:
+^I       ^Iint len) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/scsi/sd.c:1010:
+^I       ^Iint len) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/scsi/sd.c:1010:
+sd_do_mode_sense6(Scsi_Request *SRpnt, int modepage, unsigned char *buffer,
+	       	int len) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#204: FILE: drivers/scsi/sd.c:1321:
+	SCSI_LOG_HLQUEUE(3, { printk("sd_attach: scsi_device: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: drivers/scsi/sd.c:1323:
+				printk("\n");});

ERROR:SPACING: space required after that ';' (ctx:VxV)
#206: FILE: drivers/scsi/sd.c:1323:
+				printk("\n");});
 				            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#217: FILE: drivers/scsi/sd.c:1367:
+	printk("Attached scsi %sdisk %s at: ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#230: FILE: drivers/scsi/sd.c:1404:
+	SCSI_LOG_HLQUEUE(3, { printk("sd_detach: scsi_device: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: drivers/scsi/sd.c:1406:
+				printk("\n");});

ERROR:SPACING: space required after that ';' (ctx:VxV)
#232: FILE: drivers/scsi/sd.c:1406:
+				printk("\n");});
 				            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#243: FILE: drivers/scsi/sg.c:239:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#254: FILE: drivers/scsi/sg.c:251:
+	if (shp == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!sdp->detached'
#276: FILE: drivers/scsi/sg.c:309:
+	if ((!sdp->detached) && shp->hostt->module)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: drivers/scsi/sg.c:320:
+	struct Scsi_Host * shp;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#313: FILE: drivers/scsi/sg.c:704:
+		 * the cmnd[1] LUN when it should not have been set?
+		*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: drivers/scsi/sg.c:751:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#332: FILE: drivers/scsi/sg.c:822:
+			if (shp == NULL)

CHECK:SPACING: No space is necessary after a cast
#344: FILE: drivers/scsi/sg.c:841:
+			__put_user((int) scsi_path.spi_shpnt->host_no,

CHECK:SPACING: No space is necessary after a cast
#347: FILE: drivers/scsi/sg.c:843:
+			__put_user((int) scsi_path.spi_channel,

CHECK:SPACING: No space is necessary after a cast
#351: FILE: drivers/scsi/sg.c:845:
+			__put_user((int) scsi_path.spi_id, &sg_idp->scsi_id);

CHECK:SPACING: No space is necessary after a cast
#352: FILE: drivers/scsi/sg.c:846:
+			__put_user((int) scsi_path.spi_lun, &sg_idp->lun);

CHECK:SPACING: No space is necessary after a cast
#355: FILE: drivers/scsi/sg.c:848:
+			__put_user((short) scsi_path.spi_shpnt->cmd_per_lun,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#365: FILE: drivers/scsi/sg.c:965:
+		if (shp == NULL)

CHECK:SPACING: No space is necessary after a cast
#367: FILE: drivers/scsi/sg.c:967:
+		return put_user(shp->hostt->emulated, (int *) arg);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#374: FILE: drivers/scsi/sg.c:973:
+			if (shp == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#384: FILE: drivers/scsi/sg.c:1236:
+	struct Scsi_Host * shp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#404: FILE: drivers/scsi/sg.c:1439:
+	struct Scsi_Host * shp;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#417: FILE: drivers/scsi/sg.c:1469:
+		printk(KERN_WARNING "Unable to attach sg device ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#419: FILE: drivers/scsi/sg.c:1471:
+		printk(KERN_WARNING " type=%d, minor number exceed %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#443: FILE: drivers/scsi/sg.c:1523:
+		printk(KERN_NOTICE "Attached scsi generic sg%d type %d at ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/scsi/sg.c:1524:
+		printk(KERN_NOTICE "Attached scsi generic sg%d type %d at ",
+			k, scsidp->type);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: drivers/scsi/sg.c:1541:
+	struct Scsi_Host * shp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#476: FILE: drivers/scsi/sg.c:1657:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#482: FILE: drivers/scsi/sg.c:1663:
+	if (shp == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#495: FILE: drivers/scsi/sg.c:2452:
+	struct Scsi_Host * shp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#506: FILE: drivers/scsi/sg.c:2465:
+	    ((shp == NULL) ? 1 : shp->unchecked_isa_dma) : 1;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: drivers/scsi/sg.c:2525:
+	struct Scsi_Host * shp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#587: FILE: drivers/scsi/sr.c:468:
+	printk("Attached scsi CD-ROM %s at: ", scsi_CDs[i].cdi.name);

CHECK:CAMELCASE: Avoid CamelCase: <scsi_CDs>
#587: FILE: drivers/scsi/sr.c:468:
+	printk("Attached scsi CD-ROM %s at: ", scsi_CDs[i].cdi.name);

CHECK:CAMELCASE: Avoid CamelCase: <SDp>
#588: FILE: drivers/scsi/sr.c:469:
+	scsi_paths_printk(SDp, "    ", "scsi%d, channel %d, id %d, lun %d\n");

CHECK:SPACING: No space is necessary after a cast
#599: FILE: drivers/scsi/sr.c:492:
+		memset((void *) &cmd[1], 0, 9);

CHECK:CAMELCASE: Avoid CamelCase: <SHpnt>
#636: FILE: drivers/scsi/sr_ioctl.c:82:
+	struct Scsi_Host *SHpnt;

CHECK:CAMELCASE: Avoid CamelCase: <SDev>
#645: FILE: drivers/scsi/sr_ioctl.c:96:
+	SHpnt = scsi_get_host(SDev);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#657: FILE: drivers/scsi/sr_ioctl.c:199:
+	sr_cmd[1] = sr_cmd[2] = sr_cmd[3] = sr_cmd[4] = sr_cmd[5] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#668: FILE: drivers/scsi/sr_ioctl.c:209:
+	sr_cmd[1] = sr_cmd[2] = sr_cmd[3] = sr_cmd[5] = 0;

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#829: FILE: drivers/scsi/st.c:948:
+	SHpnt = scsi_get_host(STp->device);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: drivers/scsi/st.c:949:
+^Iif (!SHpnt) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#843: FILE: drivers/scsi/st.c:995:
+	if (SHpnt->hostt->module)
+	    __MOD_DEC_USE_COUNT(SHpnt->hostt->module);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#881: FILE: drivers/scsi/st.c:3672:
+		printk(KERN_INFO "st: Found incompatible tape at ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: drivers/scsi/st.c:3673:
+^I^Iscsi_paths_printk(SDp, KERN_INFO "\t", $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!SHpnt"
#890: FILE: drivers/scsi/st.c:3680:
+	if (SHpnt == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#917: FILE: drivers/scsi/st.c:3827:
+	if (SHpnt->highmem_io) {
[...]
-	} else if (SDp->host->unchecked_isa_dma)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#939: FILE: drivers/scsi/st.c:3874:
+	printk(KERN_WARNING "Attached scsi tape st%d at ", dev_num);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 14 warnings, 32 checks, 815 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431954.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
