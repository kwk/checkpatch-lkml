WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#69: FILE: fs/binfmt_elf.c:363:
+			int elf_type = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECPRIO;
 			                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#69: FILE: fs/binfmt_elf.c:363:
+			int elf_type = MAP_PRIVATE|MAP_DENYWRITE|MAP_EXECPRIO;
 			                                        ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:BRACES: Unbalanced braces around else statement
#313: FILE: mm/memory.c:1610:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: mm/mlock.c:24:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#566: FILE: mm/mmap.c:279:
+	if (__do_brk(oldbrk, newbrk-oldbrk, BC_BARRIER) != oldbrk)
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: mm/mmap.c:1070:
+	if (bc_memory_charge(mm, len, file, vm_flags,
+				flags & MAP_EXECPRIO ? BC_LIMIT : BC_BARRIER))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: mm/mmap.c:1520:
+	if (bc_memory_charge(mm, grow << PAGE_SHIFT,
+				vma->vm_file, vma->vm_flags, BC_LIMIT))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#713: FILE: mm/mmap.c:1899:
+static unsigned long __do_brk(unsigned long addr, unsigned long len,
+		int bc_prio)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: mm/mremap.c:350:
+	if (bc_memory_charge(mm, new_len - old_len,
+				vma->vm_file, vma->vm_flags, BC_BARRIER)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#911: FILE: mm/mremap.c:414:
+		bc_memory_uncharge(mm, new_len - old_len,
+				vma->vm_file, vma->vm_flags);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:BRACES: Unbalanced braces around else statement
#950: FILE: mm/shmem.c:2516:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: mm/shmem.c:2520:
+			__bc_memory_uncharge(vma->vm_mm,
+					vma->vm_end - vma->vm_start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: mm/shmem.c:2524:
+			if (__bc_memory_charge(vma->vm_mm,
+						vma->vm_end - vma->vm_start,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031249.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 17 warnings, 12 checks, 792 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031249.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
