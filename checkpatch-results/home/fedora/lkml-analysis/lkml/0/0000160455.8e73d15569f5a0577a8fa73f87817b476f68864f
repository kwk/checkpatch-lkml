WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
someone should care about ENOMEM case. One function had no problem at all, the 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#53: 
--- a/drivers/scsi/cpqfcTScontrol.c	2005-08-11 19:04:26.000000000 +0200

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space prohibited after that open parenthesis '('
#69: FILE: drivers/scsi/cpqfcTScontrol.c:559:
+		if( (fcChip->IMQ->QEntry[CI].type & 0x1FF) == 0x104 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#69: FILE: drivers/scsi/cpqfcTScontrol.c:559:
+		if( (fcChip->IMQ->QEntry[CI].type & 0x1FF) == 0x104 ) {

ERROR:SPACING: space required before the open parenthesis '('
#69: FILE: drivers/scsi/cpqfcTScontrol.c:559:
+		if( (fcChip->IMQ->QEntry[CI].type & 0x1FF) == 0x104 ) {

CHECK:CAMELCASE: Avoid CamelCase: <fcChip>
#69: FILE: drivers/scsi/cpqfcTScontrol.c:559:
+		if( (fcChip->IMQ->QEntry[CI].type & 0x1FF) == 0x104 ) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <QEntry>
#69: FILE: drivers/scsi/cpqfcTScontrol.c:559:
+		if( (fcChip->IMQ->QEntry[CI].type & 0x1FF) == 0x104 ) {

CHECK:CAMELCASE: Avoid CamelCase: <TachFCHDR_GCMND>
#70: FILE: drivers/scsi/cpqfcTScontrol.c:560:
+			TachFCHDR_GCMND *fchs;

CHECK:SPACING: No space is necessary after a cast
#88: FILE: drivers/scsi/cpqfcTScontrol.c:568:
+			fchs = (TachFCHDR_GCMND*) &fcChip->SFQ->QEntry[fcChip->SFQ->consumerIndex];

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#88: FILE: drivers/scsi/cpqfcTScontrol.c:568:
+			fchs = (TachFCHDR_GCMND*) &fcChip->SFQ->QEntry[fcChip->SFQ->consumerIndex];

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <consumerIndex>
#88: FILE: drivers/scsi/cpqfcTScontrol.c:568:
+			fchs = (TachFCHDR_GCMND*) &fcChip->SFQ->QEntry[fcChip->SFQ->consumerIndex];

ERROR:SPACING: space required before the open parenthesis '('
#90: FILE: drivers/scsi/cpqfcTScontrol.c:570:
+			if(fchs->pl[0] == ELS_LILP_FRAME) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#90: FILE: drivers/scsi/cpqfcTScontrol.c:570:
+			if(fchs->pl[0] == ELS_LILP_FRAME) {
+				return 1;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/scsi/cpqfcTScontrol.c:662:
+  void *ulFibreFrame = kmalloc(2048, GFP_KERNEL); /* max number of DWORDS in incoming Fibre Frame */$

CHECK:CAMELCASE: Avoid CamelCase: <ulFibreFrame>
#103: FILE: drivers/scsi/cpqfcTScontrol.c:662:
+  void *ulFibreFrame = kmalloc(2048, GFP_KERNEL); /* max number of DWORDS in incoming Fibre Frame */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/scsi/cpqfcTScontrol.c:671:
+  if (!ulFibreFrame)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/scsi/cpqfcTScontrol.c:880:
+        fchs = ulFibreFrame; // cast to examine IB frame$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/scsi/cpqfcTScontrol.c:880:
+        fchs = ulFibreFrame; // cast to examine IB frame$

CHECK:SPACING: No space is necessary after a cast
#131: FILE: drivers/scsi/cpqfcTScontrol.c:1431:
+		*((ULONG*) ulFibreFrame) = x_ID; // copy for later reference

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#131: FILE: drivers/scsi/cpqfcTScontrol.c:1431:
+		*((ULONG*) ulFibreFrame) = x_ID; // copy for later reference

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/scsi/cpqfcTScontrol.c:1499:
+  kfree(ulFibreFrame);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 7 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
