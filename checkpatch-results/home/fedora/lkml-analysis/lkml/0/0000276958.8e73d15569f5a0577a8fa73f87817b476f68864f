WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
Content-Type: text/x-patch; name=spinlock-timeout-2.6-1.patch; charset=UTF-8

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	           ChangeSet	1.1613  -> 1.1614 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	  arch/sparc/Kconfig	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	 arch/ia64/defconfig	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	 arch/mips/defconfig	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	   arch/i386/Kconfig	1.113   -> 1.114  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	arch/arm26/defconfig	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	arch/ppc64/defconfig	1.53    -> 1.54   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	  arch/arm/defconfig	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	arch/sparc64/defconfig	1.127   -> 1.128  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	   arch/s390/Kconfig	1.26    -> 1.27   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	   arch/mips/Kconfig	1.27    -> 1.28   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	     arch/um/Kconfig	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	include/linux/spinlock.h	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	arch/alpha/defconfig	1.26    -> 1.27   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	    arch/arm/Kconfig	1.51    -> 1.52   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	   arch/sh/defconfig	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	  arch/ppc64/Kconfig	1.64    -> 1.65   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	  arch/arm26/Kconfig	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	 arch/i386/defconfig	1.113   -> 1.114  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/x86_64/defconfig	1.39    -> 1.40   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	arch/sparc/defconfig	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	 arch/x86_64/Kconfig	1.48    -> 1.49   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	      kernel/sched.c	1.252   -> 1.253  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	  arch/ppc/defconfig	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	 arch/s390/defconfig	1.36    -> 1.37   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	arch/sparc64/Kconfig	1.55    -> 1.56   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	   arch/ia64/Kconfig	1.66    -> 1.67   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	    arch/ppc/Kconfig	1.52    -> 1.53   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	     arch/sh/Kconfig	1.31    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	   arch/um/defconfig	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	  arch/alpha/Kconfig	1.37    -> 1.38   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 04/06/05	moilanen@zippy.ltc.austin.ibm.com	1.1614

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# Spinlock timeout

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#89: 
--- a/arch/alpha/Kconfig	Sat Jun  5 14:25:51 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#95: FILE: arch/alpha/Kconfig:667:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: arch/alpha/Kconfig:668:
+       bool "Spinlocks timeout checking"^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#130: FILE: arch/arm/Kconfig:724:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: arch/arm/Kconfig:725:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#164: FILE: arch/arm26/Kconfig:287:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: arch/arm26/Kconfig:288:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#199: FILE: arch/i386/Kconfig:1250:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/Kconfig:1251:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#234: FILE: arch/ia64/Kconfig:462:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: arch/ia64/Kconfig:463:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#269: FILE: arch/mips/Kconfig:1363:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: arch/mips/Kconfig:1364:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#304: FILE: arch/ppc/Kconfig:1169:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: arch/ppc/Kconfig:1170:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#341: FILE: arch/ppc64/Kconfig:469:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/ppc64/Kconfig:470:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#376: FILE: arch/s390/Kconfig:426:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: arch/s390/Kconfig:427:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#411: FILE: arch/sh/Kconfig:678:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/sh/Kconfig:679:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#446: FILE: arch/sparc/Kconfig:443:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: arch/sparc/Kconfig:444:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#481: FILE: arch/sparc64/Kconfig:661:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: arch/sparc64/Kconfig:662:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#516: FILE: arch/um/Kconfig:225:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: arch/um/Kconfig:226:
+       bool "Spinlocks timeout checking"^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#551: FILE: arch/x86_64/Kconfig:440:
+config SPINLOCK_TIMEOUT
+       bool "Spinlocks timeout checking"	  
+       depends on DEBUG_KERNEL && SMP
+       help
+         If you say Y here, the spinlocks will timeout after X number
+	 of seconds. This is useful for catching deadlocks, and make sure
+	 locks are not held too long.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: arch/x86_64/Kconfig:441:
+       bool "Spinlocks timeout checking"^I  $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#591: FILE: include/linux/spinlock.h:46:
+extern unsigned long volatile jiffies;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#595: FILE: include/linux/spinlock.h:50:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#605: FILE: include/linux/spinlock.h:233:
+static inline void spin_lock(spinlock_t * lock) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#605: FILE: include/linux/spinlock.h:233:
+static inline void spin_lock(spinlock_t * lock) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: include/linux/spinlock.h:234:
+^Iunsigned long jiffy_timeout = jiffies + (SPINLOCK_TIMEOUT * HZ); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: include/linux/spinlock.h:236:
+^Ipreempt_disable(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: include/linux/spinlock.h:237:
+^Ido { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: include/linux/spinlock.h:238:
+^I^Iif (jiffies >= jiffy_timeout) $

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#610: FILE: include/linux/spinlock.h:238:
+		if (jiffies >= jiffy_timeout) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: include/linux/spinlock.h:239:
+^I^I        BUG();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#611: FILE: include/linux/spinlock.h:239:
+		        BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: include/linux/spinlock.h:240:
+^I} while (!_raw_spin_trylock(lock)); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#646: FILE: kernel/sched.c:3975:
+		if (jiffies > = jiffy_timeout)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#646: FILE: kernel/sched.c:3975:
+		if (jiffies > = jiffy_timeout)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#647: FILE: kernel/sched.c:3976:
+			BUG();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276958.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 62 warnings, 1 checks, 442 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276958.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
