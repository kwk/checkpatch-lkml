WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: arch/x86_64/kernel/apic.c:695:
+		int trigger = hpet_readl(HPET_T0_CMP);
+		while (hpet_readl(HPET_COUNTER) >= trigger)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 41)
#90: FILE: arch/x86_64/kernel/apic.c:695:
+		while (hpet_readl(HPET_COUNTER) >= trigger)
+			/* do nothing */ ;

WARNING:SPACING: space prohibited before semicolon
#91: FILE: arch/x86_64/kernel/apic.c:696:
+			/* do nothing */ ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 41)
#92: FILE: arch/x86_64/kernel/apic.c:697:
+		while (hpet_readl(HPET_COUNTER) <  trigger)
+			/* do nothing */ ;

WARNING:SPACING: space prohibited before semicolon
#93: FILE: arch/x86_64/kernel/apic.c:698:
+			/* do nothing */ ;

CHECK:SPACING: No space is necessary after a cast
#117: FILE: arch/x86_64/kernel/acpi/boot.c:248:
+		((long) hpet_tbl->addr.addrh << 32);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#120: FILE: arch/x86_64/kernel/acpi/boot.c:250:
+	printk(KERN_INFO "acpi: HPET id: %#x base: %#lx\n",

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#183: FILE: arch/x86_64/kernel/time.c:27:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: arch/x86_64/kernel/time.c:80:
+	unsigned long x;
+	rdtscll_sync(&t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#270: FILE: arch/x86_64/kernel/time.c:201:
+		printk(KERN_WARNING "time.c: can't update CMOS clock "

WARNING:SPLIT_STRING: quoted string split across lines
#271: FILE: arch/x86_64/kernel/time.c:202:
+		printk(KERN_WARNING "time.c: can't update CMOS clock "
+		       "from %d to %d\n", cmos_minutes, real_minutes);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#314: FILE: arch/x86_64/kernel/time.c:249:
+		if (offset - vxtime.last > hpet_tick) {
+			lost = (offset - vxtime.last) / hpet_tick - 1;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#333: FILE: arch/x86_64/kernel/time.c:268:
+				(((long) offset << 32) / vxtime.tsc_quot) - 1;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#338: FILE: arch/x86_64/kernel/time.c:273:
+			printk(KERN_WARNING "time.c: Lost %ld timer "

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: arch/x86_64/kernel/time.c:274:
+			printk(KERN_WARNING "time.c: Lost %ld timer "
+			       "tick(s)! (rip %016lx)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#422: FILE: arch/x86_64/kernel/time.c:416:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: arch/x86_64/kernel/time.c:533:
+        if (!vxtime.hpet_address) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/x86_64/kernel/time.c:533:
+        if (!vxtime.hpet_address) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#531: FILE: arch/x86_64/kernel/time.c:534:
+		printk(KERN_WARNING "time.c: WARNING: Enabling HPET base "

WARNING:SPLIT_STRING: quoted string split across lines
#532: FILE: arch/x86_64/kernel/time.c:535:
+		printk(KERN_WARNING "time.c: WARNING: Enabling HPET base "
+		       "manually!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: arch/x86_64/kernel/time.c:536:
+                outl(0x800038a0, 0xcf8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/x86_64/kernel/time.c:536:
+                outl(0x800038a0, 0xcf8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: arch/x86_64/kernel/time.c:537:
+                outl(0xff000001, 0xcfc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/x86_64/kernel/time.c:537:
+                outl(0xff000001, 0xcfc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: arch/x86_64/kernel/time.c:538:
+                outl(0x800038a0, 0xcf8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/x86_64/kernel/time.c:538:
+                outl(0x800038a0, 0xcf8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: arch/x86_64/kernel/time.c:539:
+                hpet_address = inl(0xcfc) & 0xfffffffe;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/x86_64/kernel/time.c:539:
+                hpet_address = inl(0xcfc) & 0xfffffffe;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#537: FILE: arch/x86_64/kernel/time.c:540:
+		printk(KERN_WARNING "time.c: WARNING: Enabled HPET "

WARNING:SPLIT_STRING: quoted string split across lines
#538: FILE: arch/x86_64/kernel/time.c:541:
+		printk(KERN_WARNING "time.c: WARNING: Enabled HPET "
+		       "at %#lx.\n", hpet_address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: arch/x86_64/kernel/time.c:542:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: arch/x86_64/kernel/time.c:542:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: arch/x86_64/kernel/time.c:549:
+                vxtime_hz = (1000000000000000L + hpet_period / 2) /$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: arch/x86_64/kernel/time.c:549:
+                vxtime_hz = (1000000000000000L + hpet_period / 2) /$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#550: FILE: arch/x86_64/kernel/time.c:553:
+	} else {
 	pit_init();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#557: FILE: arch/x86_64/kernel/time.c:559:
+	printk(KERN_INFO "time.c: Using %ld.%06ld MHz %s timer.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#584: FILE: arch/x86_64/kernel/time.c:584:
+	printk(KERN_INFO "time.c: Using %s based timekeeping.\n", timetype);

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#600: FILE: arch/x86_64/kernel/vsyscall.c:83:
+			(__jiffies - __wall_jiffies) * (1000000 / HZ);
 			           ^

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#600: FILE: arch/x86_64/kernel/vsyscall.c:83:
+			(__jiffies - __wall_jiffies) * (1000000 / HZ);
 			                             ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#608: FILE: arch/x86_64/kernel/vsyscall.c:91:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#644: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#644: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vxtime") over __attribute__((__section__(".vxtime")))
#644: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#644: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#644: FILE: include/asm-x86_64/vsyscall.h:18:
+#define __section_vxtime __attribute__ ((unused, __section__ (".vxtime"), aligned(16)))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#694: FILE: arch/x86_64/kernel/smpboot.c:70:
+extern void time_init_smp(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 32 warnings, 4 checks, 619 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000363333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
