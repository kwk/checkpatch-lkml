WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
    - ENS1371 - fixed IEC958 control index when AC'97 codec has S/PDIF capability, too

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#69: 
--- a/include/sound/ac97_codec.h	Tue Oct  1 17:08:58 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'AFE' may be misspelled - perhaps 'SAFE'?
#97: FILE: include/sound/ac97_codec.h:80:
+#define AC97_MISC_AFE		0x56	/* Miscellaneous Modem AFE Status and Control */
                      		    	                       ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: include/sound/ac97_codec.h:198:
+#define AC97_SCAP_AUDIO		(1<<0)	/* audio AC'97 codec */
                        		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: include/sound/ac97_codec.h:198:
+#define AC97_SCAP_AUDIO		(1<<0)	/* audio AC'97 codec */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#166: FILE: include/sound/ac97_codec.h:199:
+#define AC97_SCAP_MODEM		(1<<1)	/* modem AC'97 codec */
                        		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: include/sound/ac97_codec.h:199:
+#define AC97_SCAP_MODEM		(1<<1)	/* modem AC'97 codec */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: include/sound/ac97_codec.h:200:
+#define AC97_SCAP_SURROUND_DAC	(1<<2)	/* surround L&R DACs are present */
                               	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: include/sound/ac97_codec.h:200:
+#define AC97_SCAP_SURROUND_DAC	(1<<2)	/* surround L&R DACs are present */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#168: FILE: include/sound/ac97_codec.h:201:
+#define AC97_SCAP_CENTER_LFE_DAC (1<<3)	/* center and LFE DACs are present */
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#168: FILE: include/sound/ac97_codec.h:201:
+#define AC97_SCAP_CENTER_LFE_DAC (1<<3)	/* center and LFE DACs are present */

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#309: FILE: sound/core/memory.c:576:
+	if (! ret)
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: sound/pci/ac97/ac97_codec.c:1512:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#390: FILE: sound/pci/ac97/ac97_codec.c:1528:
+		snd_printk("AC'97 %d:%d does not respond - RESET [REC_GAIN = 0x%x]\n", ac97->num, ac97->addr, err);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: sound/pci/ac97/ac97_codec.c:1540:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#410: FILE: sound/pci/ac97/ac97_codec.c:1544:
+	if ((err = snd_ac97_read(ac97, AC97_REC_GAIN)) == 0x8a06) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#447: FILE: sound/pci/ac97/ac97_codec.c:1567:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#456: FILE: sound/pci/ac97/ac97_codec.c:1576:
+			schedule_timeout(HZ/10);
 			                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#480: FILE: sound/pci/ac97/ac97_codec.c:1630:
+		if ((err = snd_component_add(card, "AC97a")) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#486: FILE: sound/pci/ac97/ac97_codec.c:1636:
+		if ((err = snd_component_add(card, "AC97m")) < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: sound/pci/ac97/ac97_codec.c:1673:
+^I    ^I    val & AC97_BC_DEDICATED_MIC ? " -dedicated MIC PCM IN channel-" : "",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: sound/pci/ac97/ac97_codec.c:1673:
+^I    ^I    val & AC97_BC_DEDICATED_MIC ? " -dedicated MIC PCM IN channel-" : "",$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: sound/pci/ac97/ac97_codec.c:1715:
+^I^I$

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#603: FILE: sound/pci/ac97/ac97_codec.c:1739:
+			ext & AC97_EI_SPDIF ? spdif_slots[(val & AC97_EA_SPSA_SLOT_MASK) >> AC97_EA_SPSA_SLOT_SHIFT] : "",

WARNING:INDENTED_LABEL: labels should not be indented
#666: FILE: sound/pci/ac97/ac97_codec.c:1786:
+      __modem:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: sound/pci/ac97/ac97_codec.c:1790:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: sound/pci/ac97/ac97_codec.c:1792:
+	snd_iprintf(buffer, "Extended modem ID: codec=%i %s%s%s%s%s\n",
+			(mext & AC97_MEI_ADDR_MASK) >> AC97_MEI_ADDR_SHIFT,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#699: FILE: sound/pci/ac97/ac97_patch.c:328:
+int patch_ad1980(ac97_t * ac97)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#702: FILE: sound/pci/ac97/ac97_patch.c:331:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#717: FILE: sound/pci/ac97/ac97_patch.h:40:
+int patch_ad1980(ac97_t * ac97);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: sound/pci/ens1370.c:1322:
+^I^I    ^Isnd_kcontrol_t *kctl = snd_ctl_new1(&snd_es1371_mixer_spdif, ensoniq); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: sound/pci/ens1370.c:1322:
+^I^I    ^Isnd_kcontrol_t *kctl = snd_ctl_new1(&snd_es1371_mixer_spdif, ensoniq); $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: sound/pci/ens1370.c:1322:
+^I^I    ^Isnd_kcontrol_t *kctl = snd_ctl_new1(&snd_es1371_mixer_spdif, ensoniq); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: sound/pci/ens1370.c:1323:
+^I^I    ^Iif (ensoniq->u.es1371.ac97->ext_id & AC97_EI_SPDIF)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#727: FILE: sound/pci/ens1370.c:1323:
+^I^I    ^Iif (ensoniq->u.es1371.ac97->ext_id & AC97_EI_SPDIF)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: sound/pci/ens1370.c:1323:
+		    	snd_kcontrol_t *kctl = snd_ctl_new1(&snd_es1371_mixer_spdif, ensoniq); 
+		    	if (ensoniq->u.es1371.ac97->ext_id & AC97_EI_SPDIF)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: sound/pci/ens1370.c:1324:
+^I^I^I    ^Ikctl->id.index = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#728: FILE: sound/pci/ens1370.c:1324:
+^I^I^I    ^Ikctl->id.index = 1;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#742: FILE: sound/pci/intel8x0.c:1583:
+		if ((err = snd_ac97_mixer(chip->card, &ac97, &x97)) < 0) {

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#743: FILE: sound/pci/intel8x0.c:1584:
+			snd_printk("Unable to initialize codec #%i [device = %i, GLOB_STA = 0x%x]\n", i, chip->device_type, glob_sta);

WARNING:SPLIT_STRING: quoted string split across lines
#764: FILE: sound/pci/maestro3.c:55:
 MODULE_DEVICES("{{ESS,Maestro3 PCI},"
+		"{ESS,ES1988},"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#776: FILE: sound/pci/via82xx.c:127:
+#define VIA_REG_OFFSET_CURR_INDEX	0x0f	/* byte - channel current index (for via8233 only) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited before semicolon
#798: FILE: sound/pci/via82xx.c:189:
+} ;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#863: FILE: sound/pci/via82xx.c:211:
+	if (! dev->table) {
 	    ^

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#867: FILE: sound/pci/via82xx.c:215:
+		dev->table = (u32*)snd_malloc_pci_pages(pci, PAGE_ALIGN(VIA_TABLE_SIZE * 2 * 8), &dev->table_addr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#867: FILE: sound/pci/via82xx.c:215:
+		dev->table = (u32*)snd_malloc_pci_pages(pci, PAGE_ALIGN(VIA_TABLE_SIZE * 2 * 8), &dev->table_addr);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#868: FILE: sound/pci/via82xx.c:216:
+		if (! dev->table)
 		    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#871: FILE: sound/pci/via82xx.c:219:
+	if (! dev->idx_table) {
 	    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#873: FILE: sound/pci/via82xx.c:221:
+		if (! dev->idx_table)
 		    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#890: FILE: sound/pci/via82xx.c:238:
+			unsigned int flag;
+			dev->table[idx << 1] = cpu_to_le32((u32)snd_pcm_sgbuf_get_addr(sgbuf, ofs));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#895: FILE: sound/pci/via82xx.c:243:
+			if (! rest) {
 			    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#895: FILE: sound/pci/via82xx.c:243:
+			if (! rest) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#900: FILE: sound/pci/via82xx.c:248:
+			} else

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#903: FILE: sound/pci/via82xx.c:251:
+			dev->table[(idx<<1) + 1] = cpu_to_le32(r | flag);
 			               ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#925: FILE: sound/pci/via82xx.c:275:
+	if (dev->idx_table) {
+		kfree(dev->idx_table);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#942: FILE: sound/pci/via82xx.c:318:
 static struct pci_device_id snd_via82xx_ids[] __devinitdata = {

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1138: FILE: sound/pci/via82xx.c:862:
+	ucontrol->value.enumerated.item[0] = inb(VIAREG(chip, CAPTURE_CHANNEL)) & VIA_REG_CAPTURE_CHANNEL_MIC ? 1 : 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1138: FILE: sound/pci/via82xx.c:862:
+	via82xx_t *chip = snd_kcontrol_chip(kcontrol);
+	ucontrol->value.enumerated.item[0] = inb(VIAREG(chip, CAPTURE_CHANNEL)) & VIA_REG_CAPTURE_CHANNEL_MIC ? 1 : 0;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1159: FILE: sound/pci/via82xx.c:883:
+static snd_kcontrol_new_t snd_via8233_capture_source __devinitdata = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428051.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 21 warnings, 14 checks, 1035 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428051.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
