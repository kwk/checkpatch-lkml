WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#40: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#86: FILE: drivers/input/mouse/psmouse-base.c:761:
+		printk(KERN_INFO "serio: %s port at %s\n", psmouse->ptport->serio->name, psmouse->phys);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#86: FILE: drivers/input/mouse/psmouse-base.c:761:
+		printk(KERN_INFO "serio: %s port at %s\n", psmouse->ptport->serio->name, psmouse->phys);

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/input/mouse/psmouse-base.c:796:
+       ^I^Iif (psmouse_reconnect(psmouse->ptport->serio)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: drivers/input/mouse/psmouse-base.c:796:
+       ^I^Iif (psmouse_reconnect(psmouse->ptport->serio)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/input/mouse/psmouse-base.c:796:
+       ^I^Iif (psmouse_reconnect(psmouse->ptport->serio)) {$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*port)...) over kmalloc(sizeof(struct psmouse_ptport)...)
#153: FILE: drivers/input/mouse/synaptics.c:265:
+	port = kmalloc(sizeof(struct psmouse_ptport), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#154: FILE: drivers/input/mouse/synaptics.c:266:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#169: FILE: drivers/input/mouse/synaptics.c:276:
+	strlcpy(serio->name, "Synaptics pass-through", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#170: FILE: drivers/input/mouse/synaptics.c:277:
+	strlcpy(serio->phys, "synaptics-pt/serio0", sizeof(serio->name));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#188: FILE: drivers/input/mouse/synaptics.c:480:
+		if (psmouse->ptport && psmouse->ptport->serio->drv && synaptics_is_pt_packet(psmouse->packet))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: drivers/input/serio/98kbd-io.c:46:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#277: FILE: drivers/input/serio/98kbd-io.c:144:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#284: FILE: drivers/input/serio/98kbd-io.c:151:
+		strlcpy(serio->name, "PC-9801 Kbd Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#285: FILE: drivers/input/serio/98kbd-io.c:152:
+		strlcpy(serio->phys, "isa0041/serio0", sizeof(serio->phys));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#295: FILE: drivers/input/serio/98kbd-io.c:160:
+	if (!(kbd98_port = kbd98io_allocate_port()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*io)...) over kmalloc(sizeof(struct serio)...)
#345: FILE: drivers/input/serio/ambakmi.c:107:
+	io = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#365: FILE: drivers/input/serio/ambakmi.c:120:
+	strlcpy(io->name, dev->dev.bus_id, sizeof(io->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#366: FILE: drivers/input/serio/ambakmi.c:121:
+	strlcpy(io->phys, dev->dev.bus_id, sizeof(io->phys));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: drivers/input/serio/ambakmi.c:124:
+^Ikmi->io ^I= io;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#443: FILE: drivers/input/serio/ct82c710.c:65:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#449: FILE: drivers/input/serio/ct82c710.c:71:
+static irqreturn_t ct82c710_interrupt(int cpl, void *dev_id, struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#491: FILE: drivers/input/serio/ct82c710.c:177:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#498: FILE: drivers/input/serio/ct82c710.c:184:
+		strlcpy(serio->name, "C&T 82c710 mouse port", sizeof(serio->name));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#513: FILE: drivers/input/serio/ct82c710.c:199:
+	if (!(ct82c710_port = ct82c710_allocate_port())) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/input/serio/gscps2.c:346:
+        struct serio *serio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/input/serio/gscps2.c:346:
+        struct serio *serio;$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#575: FILE: drivers/input/serio/gscps2.c:358:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#604: FILE: drivers/input/serio/gscps2.c:378:
+	strlcpy(serio->phys, dev->dev.bus_id, sizeof(serio->phys));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#698: FILE: drivers/input/serio/i8042.c:81:
+^I.irq ^I^I= I8042_KBD_IRQ,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#700: FILE: drivers/input/serio/i8042.c:83:
+^I.irqen ^I^I= I8042_CTR_KBDINT,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#706: FILE: drivers/input/serio/i8042.c:89:
+^I.irq ^I^I= I8042_AUX_IRQ,$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#883: FILE: drivers/input/serio/i8042.c:910:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#891: FILE: drivers/input/serio/i8042.c:918:
+		strlcpy(serio->name, "i8042 Kbd Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#892: FILE: drivers/input/serio/i8042.c:919:
+		strlcpy(serio->phys, I8042_KBD_PHYS_DESC, sizeof(serio->phys));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#902: FILE: drivers/input/serio/i8042.c:929:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#909: FILE: drivers/input/serio/i8042.c:936:
+		serio->port_data	= &i8042_aux_values,
+		strlcpy(serio->name, "i8042 Aux Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#910: FILE: drivers/input/serio/i8042.c:937:
+		strlcpy(serio->name, "i8042 Aux Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#911: FILE: drivers/input/serio/i8042.c:938:
+		strlcpy(serio->phys, I8042_AUX_PHYS_DESC, sizeof(serio->phys));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#932: FILE: drivers/input/serio/i8042.c:949:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

CHECK:BRACES: Unbalanced braces around else statement
#976: FILE: drivers/input/serio/i8042.c:1000:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1075: FILE: drivers/input/serio/maceps2.c:123:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1170: FILE: drivers/input/serio/parkbd.c:119:
+			serio_interrupt(parkbd_port, (parkbd_buffer >> (2 - parkbd_mode)) & 0xff, 0, regs);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1182: FILE: drivers/input/serio/parkbd.c:161:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#1185: FILE: drivers/input/serio/parkbd.c:164:
+		serio->write = parkbd_write,
+		strlcpy(serio->name, "PARKBD AT/XT keyboard adapter", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1186: FILE: drivers/input/serio/parkbd.c:165:
+		strlcpy(serio->name, "PARKBD AT/XT keyboard adapter", sizeof(serio->name));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1249: FILE: drivers/input/serio/pcips2.c:129:
 static int __devinit pcips2_probe(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1261: FILE: drivers/input/serio/pcips2.c:146:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1281: FILE: drivers/input/serio/pcips2.c:159:
+	strlcpy(serio->name, pci_name(dev), sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1282: FILE: drivers/input/serio/pcips2.c:160:
+	strlcpy(serio->phys, dev->dev.bus_id, sizeof(serio->phys));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1353: FILE: drivers/input/serio/q40kbd.c:75:
+ ^Iint maxread = 100;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1353: FILE: drivers/input/serio/q40kbd.c:75:
+ ^Iint maxread = 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: drivers/input/serio/q40kbd.c:75:
+ ^Iint maxread = 100;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1358: FILE: drivers/input/serio/q40kbd.c:80:
+ ^Iwhile (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1358: FILE: drivers/input/serio/q40kbd.c:80:
+ ^Iwhile (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: drivers/input/serio/q40kbd.c:80:
+ ^Iwhile (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1359: FILE: drivers/input/serio/q40kbd.c:81:
+ ^I^Imaster_inb(KEYCODE_REG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1359: FILE: drivers/input/serio/q40kbd.c:81:
+ ^I^Imaster_inb(KEYCODE_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: drivers/input/serio/q40kbd.c:81:
+ ^I^Imaster_inb(KEYCODE_REG);$

WARNING:REPEATED_WORD: Possible repeated word: 'in'
#1366: FILE: drivers/input/serio/q40kbd.c:88:
+ * It allocates the interrupt and enables in in the chip.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1374: FILE: drivers/input/serio/q40kbd.c:96:
+		printk(KERN_ERR "q40kbd.c: Can't get irq %d.\n", Q40_IRQ_KEYBOARD);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1378: FILE: drivers/input/serio/q40kbd.c:100:
+ ^I/* off we go */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1378: FILE: drivers/input/serio/q40kbd.c:100:
+ ^I/* off we go */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: drivers/input/serio/q40kbd.c:100:
+ ^I/* off we go */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1379: FILE: drivers/input/serio/q40kbd.c:101:
+ ^Imaster_outb(-1, KEYBOARD_UNLOCK_REG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1379: FILE: drivers/input/serio/q40kbd.c:101:
+ ^Imaster_outb(-1, KEYBOARD_UNLOCK_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: drivers/input/serio/q40kbd.c:101:
+ ^Imaster_outb(-1, KEYBOARD_UNLOCK_REG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: drivers/input/serio/q40kbd.c:102:
+ ^Imaster_outb(1, KEY_IRQ_ENABLE_REG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1380: FILE: drivers/input/serio/q40kbd.c:102:
+ ^Imaster_outb(1, KEY_IRQ_ENABLE_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: drivers/input/serio/q40kbd.c:102:
+ ^Imaster_outb(1, KEY_IRQ_ENABLE_REG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1382: FILE: drivers/input/serio/q40kbd.c:104:
+ ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1382: FILE: drivers/input/serio/q40kbd.c:104:
+ ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: drivers/input/serio/q40kbd.c:104:
+ ^Ireturn 0;$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1398: FILE: drivers/input/serio/q40kbd.c:120:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1404: FILE: drivers/input/serio/q40kbd.c:126:
+		strlcpy(serio->name, "Q40 Kbd Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1405: FILE: drivers/input/serio/q40kbd.c:127:
+		strlcpy(serio->phys, "Q40", sizeof(serio->phys));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1426: FILE: drivers/input/serio/q40kbd.c:138:
+	if (!(q40kbd_port = q40kbd_allocate_port()))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1481: FILE: drivers/input/serio/rpckbd.c:115:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1488: FILE: drivers/input/serio/rpckbd.c:122:
+		strlcpy(serio->name, "RiscPC PS/2 kbd port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1489: FILE: drivers/input/serio/rpckbd.c:123:
+		strlcpy(serio->phys, "rpckbd/serio0", sizeof(serio->phys));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1498: FILE: drivers/input/serio/rpckbd.c:131:
+	if (!(rpckbd_port = rpckbd_allocate_port()))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1543: FILE: drivers/input/serio/sa1111ps2.c:239:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1563: FILE: drivers/input/serio/sa1111ps2.c:252:
+	strlcpy(serio->name, dev->dev.bus_id, sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1564: FILE: drivers/input/serio/sa1111ps2.c:253:
+	strlcpy(serio->phys, dev->dev.bus_id, sizeof(serio->phys));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1643: FILE: drivers/input/serio/serport.c:68:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1667: FILE: drivers/input/serio/serport.c:82:
+	strlcpy(serio->name, "Serial port", sizeof(serio->name));

CHECK:SPACING: No space is necessary after a cast
#1704: FILE: drivers/input/serio/serport.c:165:
+		return get_user(serport->serio->type, (unsigned long __user *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 53 warnings, 20 checks, 1530 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
