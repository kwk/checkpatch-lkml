WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#38: 
Signed-Off-By: Matthias Urlichs <smurf@smurf.noris.de>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: drivers/usb/serial/Kconfig:462:
+^I  Say Y here if you want to use an Option card. This is a $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/usb/serial/option.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#80: FILE: drivers/usb/serial/option.c:2:
+/*
+  Option Card (PCMCIA to) USB to Serial Driver

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: drivers/usb/serial/option.c:3:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/usb/serial/option.c:5:
+   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/usb/serial/option.c:15:
+                     and analysis of misbehavior of the standard driver$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/usb/serial/option.c:17:
+                     random 64-byte chunks of data$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/usb/serial/option.c:19:
+                     turned on low_latency$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/usb/serial/option.c:20:
+                     simplified the code somewhat$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#115: FILE: drivers/usb/serial/option.c:37:
+static int  option_open (struct usb_serial_port *port, struct file *filp);
                                                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#115: FILE: drivers/usb/serial/option.c:37:
+static int  option_open (struct usb_serial_port *port, struct file *filp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#116: FILE: drivers/usb/serial/option.c:38:
+static void option_close (struct usb_serial_port *port, struct file *filp);
                                                                      ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: drivers/usb/serial/option.c:38:
+static void option_close (struct usb_serial_port *port, struct file *filp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: drivers/usb/serial/option.c:39:
+static int  option_startup (struct usb_serial *serial);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: drivers/usb/serial/option.c:40:
+static void option_shutdown (struct usb_serial *serial);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: drivers/usb/serial/option.c:41:
+static void option_rx_throttle (struct usb_serial_port *port);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: drivers/usb/serial/option.c:42:
+static void option_rx_unthrottle (struct usb_serial_port *port);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: drivers/usb/serial/option.c:43:
+static int  option_write_room (struct usb_serial_port *port);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: drivers/usb/serial/option.c:47:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: drivers/usb/serial/option.c:48:
+static int  option_write (struct usb_serial_port *port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/usb/serial/option.c:49:
+                          const unsigned char *buf, int count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/usb/serial/option.c:49:
+                          const unsigned char *buf, int count);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: drivers/usb/serial/option.c:51:
+static int  option_chars_in_buffer (struct usb_serial_port *port);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: drivers/usb/serial/option.c:52:
+static int  option_ioctl (struct usb_serial_port *port, struct file *file,

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: drivers/usb/serial/option.c:53:
+                          unsigned int cmd, unsigned long arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/usb/serial/option.c:53:
+                          unsigned int cmd, unsigned long arg);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: drivers/usb/serial/option.c:54:
+static void option_set_termios (struct usb_serial_port *port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: drivers/usb/serial/option.c:55:
+                                struct termios *old);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/usb/serial/option.c:55:
+                                struct termios *old);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: drivers/usb/serial/option.c:56:
+static void option_break_ctl (struct usb_serial_port *port, int break_state);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: drivers/usb/serial/option.c:57:
+static int  option_tiocmget (struct usb_serial_port *port, struct file *file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: drivers/usb/serial/option.c:58:
+static int  option_tiocmset (struct usb_serial_port *port, struct file *file,

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/usb/serial/option.c:59:
+                             unsigned int set, unsigned int clear);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/usb/serial/option.c:59:
+                             unsigned int set, unsigned int clear);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: drivers/usb/serial/option.c:60:
+static int  option_send_setup (struct usb_serial_port *port);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/usb/serial/option.c:78:
+^I.name       = "option",                $

WARNING:TYPO_SPELLING: 'wich' may be misspelled - perhaps 'which'?
#162: FILE: drivers/usb/serial/option.c:84:
+/* The card has three separate interfaces, wich the serial driver
                                            ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/usb/serial/option.c:85:
+ * recognizes separately, thus num_port=1. $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: drivers/usb/serial/option.c:119:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/usb/serial/option.c:147:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: drivers/usb/serial/option.c:147:
+
+	

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: drivers/usb/serial/option.c:150:
+option_init (void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/usb/serial/option.c:153:
+	int retval;
+	retval = usb_serial_register(&option_3port_device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: drivers/usb/serial/option.c:165:
+	usb_serial_deregister (&option_3port_device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: drivers/usb/serial/option.c:171:
+option_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: drivers/usb/serial/option.c:173:
+	usb_deregister (&option_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: drivers/usb/serial/option.c:174:
+	usb_serial_deregister (&option_3port_device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#259: FILE: drivers/usb/serial/option.c:181:
+option_rx_throttle (struct usb_serial_port *port)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#261: FILE: drivers/usb/serial/option.c:183:
+	dbg("%s", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: drivers/usb/serial/option.c:186:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: drivers/usb/serial/option.c:188:
+option_rx_unthrottle (struct usb_serial_port *port)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#268: FILE: drivers/usb/serial/option.c:190:
+	dbg("%s", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: drivers/usb/serial/option.c:193:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/usb/serial/option.c:195:
+option_break_ctl (struct usb_serial_port *port, int break_state)

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/usb/serial/option.c:198:
+ ^Idbg("%s", __FUNCTION__);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: drivers/usb/serial/option.c:198:
+ ^Idbg("%s", __FUNCTION__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/usb/serial/option.c:198:
+ ^Idbg("%s", __FUNCTION__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: drivers/usb/serial/option.c:198:
+ 	dbg("%s", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#279: FILE: drivers/usb/serial/option.c:201:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/usb/serial/option.c:203:
+option_set_termios (struct usb_serial_port *port, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: drivers/usb/serial/option.c:203:
+option_set_termios (struct usb_serial_port *port, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/usb/serial/option.c:204:
+option_set_termios (struct usb_serial_port *port, 
+				     struct termios *old_termios)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/usb/serial/option.c:206:
+^Idbg("%s", __FUNCTION__); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#284: FILE: drivers/usb/serial/option.c:206:
+	dbg("%s", __FUNCTION__); 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: drivers/usb/serial/option.c:215:
+^Istruct option_port_private ^I*portdata;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: drivers/usb/serial/option.c:218:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/usb/serial/option.c:224:
+^I^I((portdata->ri_state) ? TIOCM_RNG : 0); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: drivers/usb/serial/option.c:230:
+option_tiocmset (struct usb_serial_port *port, struct file *file,

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: drivers/usb/serial/option.c:231:
+                 unsigned int set, unsigned int clear)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/usb/serial/option.c:231:
+                 unsigned int set, unsigned int clear)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: drivers/usb/serial/option.c:233:
+^Istruct option_port_private ^I*portdata;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/usb/serial/option.c:236:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: drivers/usb/serial/option.c:250:
+option_ioctl (struct usb_serial_port *port, struct file *file,

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/usb/serial/option.c:251:
+              unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/usb/serial/option.c:251:
+              unsigned int cmd, unsigned long arg)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/usb/serial/option.c:258:
+option_write(struct usb_serial_port *port, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/usb/serial/option.c:259:
+option_write(struct usb_serial_port *port, 
+			 const unsigned char *buf, int count)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: drivers/usb/serial/option.c:261:
+^Istruct option_port_private ^I*portdata;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: drivers/usb/serial/option.c:263:
+^Iint ^I^I^I^Ileft, todo;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/usb/serial/option.c:265:
+ ^Iint ^I^I^I^Ierr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: drivers/usb/serial/option.c:265:
+ ^Iint ^I^I^I^Ierr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/usb/serial/option.c:265:
+ ^Iint ^I^I^I^Ierr;$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#347: FILE: drivers/usb/serial/option.c:269:
+	dbg("%s: write (%d chars)", __FUNCTION__, count);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#349: FILE: drivers/usb/serial/option.c:271:
+#if 0

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#353: FILE: drivers/usb/serial/option.c:275:
+		dbg("%s: already writing", __FUNCTION__);

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#362: FILE: drivers/usb/serial/option.c:284:
+	while (left>0) {
 	           ^

ERROR:SPACING: space required after that ';' (ctx:BxV)
#367: FILE: drivers/usb/serial/option.c:289:
+		for (;i < N_OUT_URB; i++) {
 		     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: drivers/usb/serial/option.c:304:
+			dbg("%s: no output urb -- left %d", __FUNCTION__,count-left);
 			                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#382: FILE: drivers/usb/serial/option.c:304:
+			dbg("%s: no output urb -- left %d", __FUNCTION__,count-left);
 			                                                      ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#382: FILE: drivers/usb/serial/option.c:304:
+			dbg("%s: no output urb -- left %d", __FUNCTION__,count-left);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#383: FILE: drivers/usb/serial/option.c:305:
+#if 0

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#386: FILE: drivers/usb/serial/option.c:308:
+			return count-left;
 			            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#389: FILE: drivers/usb/serial/option.c:311:
+		dbg("%s: endpoint %d buf %d", __FUNCTION__, usb_pipeendpoint(this_urb->pipe), i);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/usb/serial/option.c:313:
+		memcpy (this_urb->transfer_buffer, buf, todo);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#400: FILE: drivers/usb/serial/option.c:322:
+			dbg("usb_submit_urb %p (write bulk) failed (%d,, has %d)", this_urb, err, this_urb->status);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#409: FILE: drivers/usb/serial/option.c:331:
+#if 0

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#412: FILE: drivers/usb/serial/option.c:334:
+	dbg("%s: wrote (did %d)", __FUNCTION__, count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: drivers/usb/serial/option.c:339:
+option_indat_callback (struct urb *urb, struct pt_regs *regs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/usb/serial/option.c:347:
+^Idbg("%s: %p", __FUNCTION__, urb); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#425: FILE: drivers/usb/serial/option.c:347:
+	dbg("%s: %p", __FUNCTION__, urb); 

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/usb/serial/option.c:350:
+	port = (struct usb_serial_port *) urb->context;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#432: FILE: drivers/usb/serial/option.c:354:
+		    __FUNCTION__, urb->status, endpoint);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#443: FILE: drivers/usb/serial/option.c:365:
+			dbg("%s: empty read urb received", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: drivers/usb/serial/option.c:367:
+^I^I^I^I$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#450: FILE: drivers/usb/serial/option.c:372:
+				printk(KERN_ERR "%s: resubmit read urb failed. (%d)", __FUNCTION__, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#450: FILE: drivers/usb/serial/option.c:372:
+				printk(KERN_ERR "%s: resubmit read urb failed. (%d)", __FUNCTION__, err);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#450: FILE: drivers/usb/serial/option.c:372:
+				printk(KERN_ERR "%s: resubmit read urb failed. (%d)", __FUNCTION__, err);

WARNING:RETURN_VOID: void function return statements are not generally useful
#454: FILE: drivers/usb/serial/option.c:376:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: drivers/usb/serial/option.c:379:
+option_outdat_callback (struct urb *urb, struct pt_regs *regs)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#461: FILE: drivers/usb/serial/option.c:383:
+	dbg("%s", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#463: FILE: drivers/usb/serial/option.c:385:
+	port = (struct usb_serial_port *) urb->context;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: drivers/usb/serial/option.c:392:
+option_instat_callback (struct urb *urb, struct pt_regs *regs)

CHECK:SPACING: No space is necessary after a cast
#473: FILE: drivers/usb/serial/option.c:395:
+	struct usb_serial_port *port = (struct usb_serial_port *) urb->context;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/usb/serial/option.c:399:
+^Idbg("%s", __FUNCTION__); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#477: FILE: drivers/usb/serial/option.c:399:
+	dbg("%s", __FUNCTION__); 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: drivers/usb/serial/option.c:400:
+	dbg("%s: urb %p port %p has data %p", __FUNCTION__,urb,port,portdata);
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: drivers/usb/serial/option.c:400:
+	dbg("%s: urb %p port %p has data %p", __FUNCTION__,urb,port,portdata);
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#478: FILE: drivers/usb/serial/option.c:400:
+	dbg("%s: urb %p port %p has data %p", __FUNCTION__,urb,port,portdata);
 	                                                           ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#478: FILE: drivers/usb/serial/option.c:400:
+	dbg("%s: urb %p port %p has data %p", __FUNCTION__,urb,port,portdata);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: drivers/usb/serial/option.c:401:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#480: FILE: drivers/usb/serial/option.c:402:
+	if (urb->status == 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/usb/serial/option.c:403:
+^I^Istruct usb_ctrlrequest *req_pkt = $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#485: FILE: drivers/usb/serial/option.c:407:
+			dbg("%s: NULL req_pkt\n", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req_pkt->bRequestType == 0xA1'
#488: FILE: drivers/usb/serial/option.c:410:
+		if ((req_pkt->bRequestType == 0xA1) && (req_pkt->bRequest == 0x20)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req_pkt->bRequest == 0x20'
#488: FILE: drivers/usb/serial/option.c:410:
+		if ((req_pkt->bRequestType == 0xA1) && (req_pkt->bRequest == 0x20)) {

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#488: FILE: drivers/usb/serial/option.c:410:
+		if ((req_pkt->bRequestType == 0xA1) && (req_pkt->bRequest == 0x20)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#488: FILE: drivers/usb/serial/option.c:410:
+		if ((req_pkt->bRequestType == 0xA1) && (req_pkt->bRequest == 0x20)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#488: FILE: drivers/usb/serial/option.c:410:
+		if ((req_pkt->bRequestType == 0xA1) && (req_pkt->bRequest == 0x20)) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: drivers/usb/serial/option.c:415:
+^I^I^Idbg("%s: signal x%x", __FUNCTION__, signals); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#493: FILE: drivers/usb/serial/option.c:415:
+			dbg("%s: signal x%x", __FUNCTION__, signals); 

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#502: FILE: drivers/usb/serial/option.c:424:
+			if (port->tty && !C_CLOCAL(port->tty)
+					&& old_dcd_state && !portdata->dcd_state) {

CHECK:BRACES: Unbalanced braces around else statement
#505: FILE: drivers/usb/serial/option.c:427:
+		} else

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#506: FILE: drivers/usb/serial/option.c:428:
+			dbg("%s: type %x req %x", __FUNCTION__, req_pkt->bRequestType,req_pkt->bRequest);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: drivers/usb/serial/option.c:428:
+			dbg("%s: type %x req %x", __FUNCTION__, req_pkt->bRequestType,req_pkt->bRequest);
 			                                                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#506: FILE: drivers/usb/serial/option.c:428:
+			dbg("%s: type %x req %x", __FUNCTION__, req_pkt->bRequestType,req_pkt->bRequest);

CHECK:BRACES: Unbalanced braces around else statement
#507: FILE: drivers/usb/serial/option.c:429:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/usb/serial/option.c:430:
+^I^Idbg("%s: error %d", __FUNCTION__, urb->status); $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#508: FILE: drivers/usb/serial/option.c:430:
+		dbg("%s: error %d", __FUNCTION__, urb->status); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: drivers/usb/serial/option.c:431:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#515: FILE: drivers/usb/serial/option.c:437:
+			dbg("%s: resubmit intr urb failed. (%d)", __FUNCTION__, err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#519: FILE: drivers/usb/serial/option.c:441:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#521: FILE: drivers/usb/serial/option.c:443:
+option_write_room (struct usb_serial_port *port)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#530: FILE: drivers/usb/serial/option.c:452:
+	for (i=0; i < N_OUT_URB; i++)
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: drivers/usb/serial/option.c:456:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#535: FILE: drivers/usb/serial/option.c:457:
+	dbg("%s: %d", __FUNCTION__, data_len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#539: FILE: drivers/usb/serial/option.c:461:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#541: FILE: drivers/usb/serial/option.c:463:
+option_chars_in_buffer (struct usb_serial_port *port)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#550: FILE: drivers/usb/serial/option.c:472:
+	for (i=0; i < N_OUT_URB; i++)
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: drivers/usb/serial/option.c:476:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#555: FILE: drivers/usb/serial/option.c:477:
+	dbg("%s: %d", __FUNCTION__, data_len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#559: FILE: drivers/usb/serial/option.c:481:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#561: FILE: drivers/usb/serial/option.c:483:
+option_open (struct usb_serial_port *port, struct file *filp)
                                                         ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: drivers/usb/serial/option.c:483:
+option_open (struct usb_serial_port *port, struct file *filp)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#563: FILE: drivers/usb/serial/option.c:485:
+^Istruct option_port_private ^I*portdata;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: drivers/usb/serial/option.c:486:
+^Istruct usb_serial ^I^I*serial = port->serial;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: drivers/usb/serial/option.c:491:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#570: FILE: drivers/usb/serial/option.c:492:
+	dbg("%s", __FUNCTION__);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#579: FILE: drivers/usb/serial/option.c:501:
+		if (! urb)
 		    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#582: FILE: drivers/usb/serial/option.c:504:
+			dbg("%s: dev %p != %p", __FUNCTION__, urb->dev, serial->dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: drivers/usb/serial/option.c:509:
+^I^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#592: FILE: drivers/usb/serial/option.c:514:
+			dbg("%s: submit urb %d failed (%d) %d", __FUNCTION__, i, err,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/usb/serial/option.c:515:
+			dbg("%s: submit urb %d failed (%d) %d", __FUNCTION__, i, err,
+				urb->transfer_buffer_length);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#600: FILE: drivers/usb/serial/option.c:522:
+		if (! urb)
 		    ^

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#603: FILE: drivers/usb/serial/option.c:525:
+		/* usb_settoggle(urb->dev, usb_pipeendpoint(urb->pipe), usb_pipeout(urb->pipe), 0); */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#610: FILE: drivers/usb/serial/option.c:532:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#623: FILE: drivers/usb/serial/option.c:545:
+option_close(struct usb_serial_port *port, struct file *filp)
                                                         ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: drivers/usb/serial/option.c:549:
+^Istruct option_port_private ^I*portdata;$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#629: FILE: drivers/usb/serial/option.c:551:
+	dbg("%s", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: drivers/usb/serial/option.c:553:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: drivers/usb/serial/option.c:556:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/usb/serial/option.c:559:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: drivers/usb/serial/option.c:561:
+^I^Ifor (i = 0; i < N_IN_URB; i++) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#647: FILE: drivers/usb/serial/option.c:569:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: drivers/usb/serial/option.c:572:
+option_setup_urb (struct usb_serial *serial, int endpoint,

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: drivers/usb/serial/option.c:573:
+                  int dir, void *ctx, char *buf, int len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/usb/serial/option.c:573:
+                  int dir, void *ctx, char *buf, int len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: drivers/usb/serial/option.c:574:
+                  void (*callback)(struct urb *, struct pt_regs *regs))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/usb/serial/option.c:574:
+                  void (*callback)(struct urb *, struct pt_regs *regs))$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb"
#660: FILE: drivers/usb/serial/option.c:582:
+	if (urb == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#661: FILE: drivers/usb/serial/option.c:583:
+		dbg("%s: alloc for endpoint %d failed.", __FUNCTION__, endpoint);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/usb/serial/option.c:589:
+	usb_fill_bulk_urb(urb, serial->dev,
+		      usb_sndbulkpipe(serial->dev, endpoint) | dir,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#681: FILE: drivers/usb/serial/option.c:603:
+	dbg("%s", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#688: FILE: drivers/usb/serial/option.c:610:
+		portdata->in_urbs[j] = option_setup_urb (serial,

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: drivers/usb/serial/option.c:611:
+                  port->bulk_in_endpointAddress, USB_DIR_IN, port,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: drivers/usb/serial/option.c:611:
+		portdata->in_urbs[j] = option_setup_urb (serial,
+                  port->bulk_in_endpointAddress, USB_DIR_IN, port,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: drivers/usb/serial/option.c:611:
+                  port->bulk_in_endpointAddress, USB_DIR_IN, port,$

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#689: FILE: drivers/usb/serial/option.c:611:
+                  port->bulk_in_endpointAddress, USB_DIR_IN, port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: drivers/usb/serial/option.c:612:
+                  portdata->in_buffer[j], IN_BUFLEN, option_indat_callback);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/usb/serial/option.c:612:
+                  portdata->in_buffer[j], IN_BUFLEN, option_indat_callback);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#695: FILE: drivers/usb/serial/option.c:617:
+		portdata->out_urbs[j] = option_setup_urb (serial,

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: drivers/usb/serial/option.c:618:
+                  port->bulk_out_endpointAddress, USB_DIR_OUT, port,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: drivers/usb/serial/option.c:618:
+		portdata->out_urbs[j] = option_setup_urb (serial,
+                  port->bulk_out_endpointAddress, USB_DIR_OUT, port,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/usb/serial/option.c:618:
+                  port->bulk_out_endpointAddress, USB_DIR_OUT, port,$

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#696: FILE: drivers/usb/serial/option.c:618:
+                  port->bulk_out_endpointAddress, USB_DIR_OUT, port,

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: drivers/usb/serial/option.c:619:
+                  portdata->out_buffer[j], OUT_BUFLEN, option_outdat_callback);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/usb/serial/option.c:619:
+                  portdata->out_buffer[j], OUT_BUFLEN, option_outdat_callback);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#701: FILE: drivers/usb/serial/option.c:623:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#708: FILE: drivers/usb/serial/option.c:630:
+	dbg("%s", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#714: FILE: drivers/usb/serial/option.c:636:
+		int val = 0;
+		if (portdata->dtr_state)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/usb/serial/option.c:642:
+					0x22,0x21,val,0,NULL,0,USB_CTRL_SET_TIMEOUT);
 					    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/usb/serial/option.c:642:
+					0x22,0x21,val,0,NULL,0,USB_CTRL_SET_TIMEOUT);
 					         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/usb/serial/option.c:642:
+					0x22,0x21,val,0,NULL,0,USB_CTRL_SET_TIMEOUT);
 					             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/usb/serial/option.c:642:
+					0x22,0x21,val,0,NULL,0,USB_CTRL_SET_TIMEOUT);
 					               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/usb/serial/option.c:642:
+					0x22,0x21,val,0,NULL,0,USB_CTRL_SET_TIMEOUT);
 					                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: drivers/usb/serial/option.c:642:
+					0x22,0x21,val,0,NULL,0,USB_CTRL_SET_TIMEOUT);
 					                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#726: FILE: drivers/usb/serial/option.c:648:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: drivers/usb/serial/option.c:650:
+option_startup (struct usb_serial *serial)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#734: FILE: drivers/usb/serial/option.c:656:
+	dbg("%s", __FUNCTION__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*portdata)...) over kmalloc(sizeof(struct option_port_private)...)
#739: FILE: drivers/usb/serial/option.c:661:
+		portdata = kmalloc(sizeof(struct option_port_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#741: FILE: drivers/usb/serial/option.c:663:
+			dbg("%s: kmalloc for option_port_private (%d) failed!.", __FUNCTION__, i);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#742: FILE: drivers/usb/serial/option.c:664:
+			return (1);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#748: FILE: drivers/usb/serial/option.c:670:
+		if (! port->interrupt_in_urb)
 		    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#752: FILE: drivers/usb/serial/option.c:674:
+			dbg("%s: submit irq_in urb failed %d", __FUNCTION__, err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#757: FILE: drivers/usb/serial/option.c:679:
+	return (0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#761: FILE: drivers/usb/serial/option.c:683:
+option_shutdown (struct usb_serial *serial)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#767: FILE: drivers/usb/serial/option.c:689:
+	dbg("%s", __FUNCTION__);

WARNING:NEEDLESS_IF: usb_free_urb(NULL) is safe and this check is probably not required
#786: FILE: drivers/usb/serial/option.c:708:
+			if (portdata->in_urbs[j]) {
+				usb_free_urb(portdata->in_urbs[j]);

WARNING:NEEDLESS_IF: usb_free_urb(NULL) is safe and this check is probably not required
#792: FILE: drivers/usb/serial/option.c:714:
+			if (portdata->out_urbs[j]) {
+				usb_free_urb(portdata->out_urbs[j]);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#811: FILE: drivers/usb/serial/option.c:733:
+module_param(debug, bool, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 117 warnings, 36 checks, 758 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
