WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
This patch fixes many bugs that were discovered while testing the previous two 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#33: 
--- a/drivers/pnp/driver.c	Sun Feb  2 11:40:10 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#40: FILE: drivers/pnp/driver.c:98:
+	pnp_dbg("match found with the PnP device '%s' and the driver '%s'", dev->bus_id,pnp_drv->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#40: FILE: drivers/pnp/driver.c:98:
+	pnp_dbg("match found with the PnP device '%s' and the driver '%s'", dev->bus_id,pnp_drv->name);
 	                                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#52: FILE: drivers/pnp/isapnp/core.c:972:
+static int isapnp_get_resources(struct pnp_dev *dev, struct pnp_resource_table * res)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: drivers/pnp/isapnp/core.c:986:
+static int isapnp_set_resources(struct pnp_dev *dev, struct pnp_resource_table * res)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#76: FILE: drivers/pnp/isapnp/core.c:993:
+		isapnp_write_word(ISAPNP_CFG_PORT+(tmp<<1), res->port_resource[tmp].start);
 		                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#76: FILE: drivers/pnp/isapnp/core.c:993:
+		isapnp_write_word(ISAPNP_CFG_PORT+(tmp<<1), res->port_resource[tmp].start);
 		                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#88: FILE: drivers/pnp/isapnp/core.c:1001:
+		isapnp_write_byte(ISAPNP_CFG_DMA+tmp, res->dma_resource[tmp].start);
 		                                ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#90: FILE: drivers/pnp/isapnp/core.c:1003:
+		isapnp_write_word(ISAPNP_CFG_MEM+(tmp<<2), (res->mem_resource[tmp].start >> 8) & 0xffff);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#90: FILE: drivers/pnp/isapnp/core.c:1003:
+		isapnp_write_word(ISAPNP_CFG_MEM+(tmp<<2), (res->mem_resource[tmp].start >> 8) & 0xffff);
 		                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#90: FILE: drivers/pnp/isapnp/core.c:1003:
+		isapnp_write_word(ISAPNP_CFG_MEM+(tmp<<2), (res->mem_resource[tmp].start >> 8) & 0xffff);
 		                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/pnp/pnpbios/core.c:703:
+                if( p[0] & 0x80 ) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/pnp/pnpbios/core.c:703:
+                if( p[0] & 0x80 ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#102: FILE: drivers/pnp/pnpbios/core.c:703:
+                if( p[0] & 0x80 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#102: FILE: drivers/pnp/pnpbios/core.c:703:
+                if( p[0] & 0x80 ) {

ERROR:SPACING: space required before the open parenthesis '('
#102: FILE: drivers/pnp/pnpbios/core.c:703:
+                if( p[0] & 0x80 ) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#107: FILE: drivers/pnp/pnpbios/core.c:705:
+			if ((p[0] & 0x7f) == 0x02) /* human readable name */
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#109: FILE: drivers/pnp/pnpbios/core.c:707:
+				int size = *(short *) &p[1];

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: drivers/pnp/pnpbios/core.c:708:
+				int size = *(short *) &p[1];
+				memcpy(dev->dev.name, p + 3, len >= 80 ? 79 : size);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#119: FILE: drivers/pnp/pnpbios/core.c:715:
+		switch ((p[0]>>3) & 0x0f) {
 		             ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#145: FILE: drivers/pnp/pnpbios/core.c:738:
 
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: drivers/pnp/pnpbios/core.c:741:
+static int pnpbios_get_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#149: FILE: drivers/pnp/pnpbios/core.c:741:
+static int pnpbios_get_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: drivers/pnp/pnpbios/core.c:757:
+	pnp_parse_current_resources((char *)node->data,(char *)node->data + node->size,res);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: drivers/pnp/pnpbios/core.c:757:
+	pnp_parse_current_resources((char *)node->data,(char *)node->data + node->size,res);
 	                                                                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: drivers/pnp/pnpbios/core.c:763:
+static int pnpbios_set_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: drivers/pnp/pnpbios/core.c:763:
+static int pnpbios_set_resources(struct pnp_dev * dev, struct pnp_resource_table * res)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: drivers/pnp/pnpbios/core.c:779:
+	if(!pnp_write_resources((char *)node->data,(char *)node->data + node->size,res)){
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: drivers/pnp/pnpbios/core.c:779:
+	if(!pnp_write_resources((char *)node->data,(char *)node->data + node->size,res)){
 	                                                                          ^

ERROR:SPACING: space required before the open brace '{'
#180: FILE: drivers/pnp/pnpbios/core.c:779:
+	if(!pnp_write_resources((char *)node->data,(char *)node->data + node->size,res)){

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: drivers/pnp/pnpbios/core.c:779:
+	if(!pnp_write_resources((char *)node->data,(char *)node->data + node->size,res)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#180: FILE: drivers/pnp/pnpbios/core.c:779:
+	if(!pnp_write_resources((char *)node->data,(char *)node->data + node->size,res)){
 		return -1;
 	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#189: FILE: drivers/pnp/pnpbios/core.c:844:
+	if(pnp_write_resources((char *)node->data,(char *)node->data + node->size,&dev->res)<0)
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#189: FILE: drivers/pnp/pnpbios/core.c:844:
+	if(pnp_write_resources((char *)node->data,(char *)node->data + node->size,&dev->res)<0)
 	                                                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#189: FILE: drivers/pnp/pnpbios/core.c:844:
+	if(pnp_write_resources((char *)node->data,(char *)node->data + node->size,&dev->res)<0)
 	                                                                          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#189: FILE: drivers/pnp/pnpbios/core.c:844:
+	if(pnp_write_resources((char *)node->data,(char *)node->data + node->size,&dev->res)<0)
 	                                                                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: drivers/pnp/pnpbios/core.c:844:
+	if(pnp_write_resources((char *)node->data,(char *)node->data + node->size,&dev->res)<0)

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#198: FILE: drivers/pnp/pnpbios/core.c:926:
+		pos = pnp_parse_current_resources((char *)node->data,(char *)node->data + node->size,&dev->res);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/pnp/pnpbios/core.c:926:
+		pos = pnp_parse_current_resources((char *)node->data,(char *)node->data + node->size,&dev->res);
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#198: FILE: drivers/pnp/pnpbios/core.c:926:
+		pos = pnp_parse_current_resources((char *)node->data,(char *)node->data + node->size,&dev->res);
 		                                                                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#198: FILE: drivers/pnp/pnpbios/core.c:926:
+		pos = pnp_parse_current_resources((char *)node->data,(char *)node->data + node->size,&dev->res);
 		                                                                                     ^

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: drivers/pnp/resource.c:61:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#235: FILE: drivers/pnp/resource.c:67:
+	} else

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#250: FILE: drivers/pnp/resource.c:680:
+		if(mask>>i & 0x01) {
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: drivers/pnp/resource.c:680:
+		if(mask>>i & 0x01) {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#262: FILE: drivers/pnp/resource.c:718:
+		if(mask>>i & 0x01) {
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: drivers/pnp/resource.c:718:
+		if(mask>>i & 0x01) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#294: FILE: drivers/pnp/resource.c:1100:
+static int pnp_compare_resources(struct pnp_resource_table * resa, struct pnp_resource_table * resb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#294: FILE: drivers/pnp/resource.c:1100:
+static int pnp_compare_resources(struct pnp_resource_table * resa, struct pnp_resource_table * resb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: drivers/pnp/resource.c:1103:
+	int idx;
+	for (idx = 0; idx < PNP_MAX_IRQ; idx++) {

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#339: FILE: drivers/pnp/resource.c:1151:
+		pnp_info("res: Unable to activate the PnP device '%s' because this feature is not supported", dev->dev.bus_id);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#343: FILE: drivers/pnp/resource.c:1154:
+	if (!dev->protocol->set(dev, &dev->res)<0) {
 	                                       ^

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#344: FILE: drivers/pnp/resource.c:1155:
+		pnp_err("res: The protocol '%s' reports that activating the PnP device '%s' has failed", dev->protocol->name, dev->dev.bus_id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#347: FILE: drivers/pnp/resource.c:1158:
+	if (pnp_can_read(dev)) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/pnp/resource.c:1160:
+		struct pnp_resource_table res;
+		dev->protocol->get(dev, &res);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#351: FILE: drivers/pnp/resource.c:1162:
+			pnp_err("res: The resources requested do not match those actually set for the PnP device '%s'", dev->dev.bus_id);

CHECK:BRACES: Unbalanced braces around else statement
#354: FILE: drivers/pnp/resource.c:1165:
+	} else

WARNING:TYPO_SPELLING: 'becuase' may be misspelled - perhaps 'because'?
#373: FILE: drivers/pnp/resource.c:1188:
+		pnp_info("res: Disable failed becuase the PnP device '%s' is busy", dev->dev.bus_id);
 		                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#373: FILE: drivers/pnp/resource.c:1188:
+		pnp_info("res: Disable failed becuase the PnP device '%s' is busy", dev->dev.bus_id);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#379: FILE: drivers/pnp/resource.c:1191:
+	if (!pnp_can_disable(dev)<0) {
 	                         ^

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#380: FILE: drivers/pnp/resource.c:1192:
+		pnp_info("res: Unable to disable the PnP device '%s' because this feature is not supported", dev->dev.bus_id);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#384: FILE: drivers/pnp/resource.c:1196:
+		pnp_err("res: The protocol '%s' reports that disabling the PnP device '%s' has failed", dev->protocol->name, dev->dev.bus_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#428: FILE: drivers/pnp/support.c:65:
+static void current_irqresource(struct pnp_resource_table * res, int irq)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#432: FILE: drivers/pnp/support.c:68:
+	while ((res->irq_resource[i].flags & IORESOURCE_IRQ) && i < PNP_MAX_IRQ) i++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#438: FILE: drivers/pnp/support.c:71:
+		res->irq_resource[i].end = (unsigned long) irq;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: drivers/pnp/support.c:76:
+static void current_dmaresource(struct pnp_resource_table * res, int dma)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#448: FILE: drivers/pnp/support.c:79:
+	while ((res->dma_resource[i].flags & IORESOURCE_DMA) && i < PNP_MAX_DMA) i++;

CHECK:SPACING: No space is necessary after a cast
#454: FILE: drivers/pnp/support.c:82:
+		res->dma_resource[i].end = (unsigned long) dma;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: drivers/pnp/support.c:87:
+static void current_ioresource(struct pnp_resource_table * res, int io, int len)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#464: FILE: drivers/pnp/support.c:90:
+	while ((res->port_resource[i].flags & IORESOURCE_IO) && i < PNP_MAX_PORT) i++;

CHECK:SPACING: No space is necessary after a cast
#469: FILE: drivers/pnp/support.c:92:
+		res->port_resource[i].start = (unsigned long) io;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#476: FILE: drivers/pnp/support.c:98:
+static void current_memresource(struct pnp_resource_table * res, int mem, int len)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#480: FILE: drivers/pnp/support.c:101:
+	while ((res->mem_resource[i].flags & IORESOURCE_MEM) && i < PNP_MAX_MEM) i++;

CHECK:SPACING: No space is necessary after a cast
#485: FILE: drivers/pnp/support.c:103:
+		res->mem_resource[i].start = (unsigned long) mem;

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#494: FILE: drivers/pnp/support.c:110:
+ * pnp_parse_current_resources - Extracts current resource information from a raw PnP resource structure

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#503: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: drivers/pnp/support.c:117:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#609: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#609: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#609: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#609: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#609: FILE: drivers/pnp/support.c:563:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res)

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#645: FILE: include/linux/pnp.h:389:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#645: FILE: include/linux/pnp.h:389:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#645: FILE: include/linux/pnp.h:389:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#645: FILE: include/linux/pnp.h:389:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#645: FILE: include/linux/pnp.h:389:
+unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#646: FILE: include/linux/pnp.h:390:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: include/linux/pnp.h:390:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: include/linux/pnp.h:390:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: include/linux/pnp.h:390:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#646: FILE: include/linux/pnp.h:390:
+unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#647: FILE: include/linux/pnp.h:391:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: include/linux/pnp.h:391:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: include/linux/pnp.h:391:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: include/linux/pnp.h:391:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#647: FILE: include/linux/pnp.h:391:
+unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#658: FILE: include/linux/pnp.h:427:
+static inline unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#658: FILE: include/linux/pnp.h:427:
+static inline unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#658: FILE: include/linux/pnp.h:427:
+static inline unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#658: FILE: include/linux/pnp.h:427:
+static inline unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#658: FILE: include/linux/pnp.h:427:
+static inline unsigned char * pnp_parse_current_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; }

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#659: FILE: include/linux/pnp.h:428:
+static inline unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#659: FILE: include/linux/pnp.h:428:
+static inline unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#659: FILE: include/linux/pnp.h:428:
+static inline unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#659: FILE: include/linux/pnp.h:428:
+static inline unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#659: FILE: include/linux/pnp.h:428:
+static inline unsigned char * pnp_parse_possible_resources(unsigned char * p, unsigned char * end, struct pnp_dev * dev) { return NULL; }

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#660: FILE: include/linux/pnp.h:429:
+static inline unsigned char * pnp_write_resources(unsigned char * p, unsigned char * end, struct pnp_resource_table * res) { return NULL; )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396160.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 75 errors, 25 warnings, 18 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396160.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
