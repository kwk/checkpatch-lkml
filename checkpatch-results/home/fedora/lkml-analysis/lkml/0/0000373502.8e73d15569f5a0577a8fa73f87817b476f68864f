WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#77: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	           ChangeSet	1.1158  -> 1.1160 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	 fs/reiserfs/super.c	1.31    -> 1.33   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 03/05/03	green@angband.namesys.com	1.1159

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# Fix reiserfs options parser, return error if given incorrect options on remount

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# 03/05/03	green@angband.namesys.com	1.1160

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# reiserfs: Refuse to mount/remount if "alloc=" option had incorect parameter

WARNING:TYPO_SPELLING: 'incorect' may be misspelled - perhaps 'incorrect'?
#88: 
# reiserfs: Refuse to mount/remount if "alloc=" option had incorect parameter
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#92: 
--- a/fs/reiserfs/super.c	Sat May  3 15:56:45 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/reiserfs/super.c:406:
+    int setmask; /* bitmask which is to set on mount_options bitmask when this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/reiserfs/super.c:407:
+                    value is found, 0 is no bits are to be changed. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#101: FILE: fs/reiserfs/super.c:407:
+    int setmask; /* bitmask which is to set on mount_options bitmask when this
+                    value is found, 0 is no bits are to be changed. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#101: FILE: fs/reiserfs/super.c:407:
+                    value is found, 0 is no bits are to be changed. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/reiserfs/super.c:408:
+    int clrmask; /* bitmask which is to clear on mount_options bitmask when this$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#103: FILE: fs/reiserfs/super.c:409:
+    int clrmask; /* bitmask which is to clear on mount_options bitmask when this
+		    value is found, 0 is no bits are to be changed. This is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: fs/reiserfs/super.c:410:
+		    applied BEFORE setmask */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/reiserfs/super.c:420:
+    int setmask; /* bitmask which is to set on mount_options bitmask when this$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#115: FILE: fs/reiserfs/super.c:421:
+    int setmask; /* bitmask which is to set on mount_options bitmask when this
+		    value is found, 0 is no bits are to be changed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#115: FILE: fs/reiserfs/super.c:421:
+		    value is found, 0 is no bits are to be changed. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/reiserfs/super.c:422:
+    int clrmask; /* bitmask which is to clear on mount_options bitmask when this$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#117: FILE: fs/reiserfs/super.c:423:
+    int clrmask; /* bitmask which is to clear on mount_options bitmask when this
+		    value is found, 0 is no bits are to be changed. This is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#118: FILE: fs/reiserfs/super.c:424:
+		    applied BEFORE setmask */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/reiserfs/super.c:431:
+    {"rupasov", 1<<FORCE_RUPASOV_HASH,(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: fs/reiserfs/super.c:431:
+    {"rupasov", 1<<FORCE_RUPASOV_HASH,(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: fs/reiserfs/super.c:431:
+    {"rupasov", 1<<FORCE_RUPASOV_HASH,(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: fs/reiserfs/super.c:431:
+    {"rupasov", 1<<FORCE_RUPASOV_HASH,(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#130: FILE: fs/reiserfs/super.c:431:
+    {"rupasov", 1<<FORCE_RUPASOV_HASH,(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: fs/reiserfs/super.c:431:
+    {"rupasov", 1<<FORCE_RUPASOV_HASH,(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/reiserfs/super.c:432:
+    {"tea", 1<<FORCE_TEA_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_R5_HASH)},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: fs/reiserfs/super.c:432:
+    {"tea", 1<<FORCE_TEA_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_R5_HASH)},
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: fs/reiserfs/super.c:432:
+    {"tea", 1<<FORCE_TEA_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_R5_HASH)},
                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: fs/reiserfs/super.c:432:
+    {"tea", 1<<FORCE_TEA_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_R5_HASH)},
                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#131: FILE: fs/reiserfs/super.c:432:
+    {"tea", 1<<FORCE_TEA_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_R5_HASH)},
                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: fs/reiserfs/super.c:432:
+    {"tea", 1<<FORCE_TEA_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_R5_HASH)},
                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/reiserfs/super.c:433:
+    {"r5", 1<<FORCE_R5_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#132: FILE: fs/reiserfs/super.c:433:
+    {"r5", 1<<FORCE_R5_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)},
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: fs/reiserfs/super.c:433:
+    {"r5", 1<<FORCE_R5_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)},
                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#132: FILE: fs/reiserfs/super.c:433:
+    {"r5", 1<<FORCE_R5_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)},
                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#132: FILE: fs/reiserfs/super.c:433:
+    {"r5", 1<<FORCE_R5_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)},
                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#132: FILE: fs/reiserfs/super.c:433:
+    {"r5", 1<<FORCE_R5_HASH,(1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)},
                                                       ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#133: FILE: fs/reiserfs/super.c:434:
+    {"detect", 1<<FORCE_HASH_DETECT, (1<<FORCE_RUPASOV_HASH)|(1<<FORCE_TEA_HASH)|(1<<FORCE_R5_HASH)},
                                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/reiserfs/super.c:435:
+    {NULL, 0, 0}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/reiserfs/super.c:442:
+    {"noborder", 1<<REISERFS_NO_BORDER, 0},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#146: FILE: fs/reiserfs/super.c:442:
+    {"noborder", 1<<REISERFS_NO_BORDER, 0},
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/reiserfs/super.c:443:
+    {"border", 0, 1<<REISERFS_NO_BORDER},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#147: FILE: fs/reiserfs/super.c:443:
+    {"border", 0, 1<<REISERFS_NO_BORDER},
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/reiserfs/super.c:444:
+    {"no_unhashed_relocation", 1<<REISERFS_NO_UNHASHED_RELOCATION, 0},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#148: FILE: fs/reiserfs/super.c:444:
+    {"no_unhashed_relocation", 1<<REISERFS_NO_UNHASHED_RELOCATION, 0},
                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/reiserfs/super.c:445:
+    {"hashed_relocation", 1<<REISERFS_HASHED_RELOCATION, 0},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: fs/reiserfs/super.c:445:
+    {"hashed_relocation", 1<<REISERFS_HASHED_RELOCATION, 0},
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/reiserfs/super.c:446:
+    {"test4", 1<<REISERFS_TEST4, 0},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#150: FILE: fs/reiserfs/super.c:446:
+    {"test4", 1<<REISERFS_TEST4, 0},
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/reiserfs/super.c:447:
+    {"notest4", 0, 1<<REISERFS_TEST4},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#151: FILE: fs/reiserfs/super.c:447:
+    {"notest4", 0, 1<<REISERFS_TEST4},
                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/reiserfs/super.c:448:
+    {NULL, 0, 0}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/reiserfs/super.c:452:
+    {"on", 1<<REISERFS_LARGETAIL, 1<<REISERFS_SMALLTAIL},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#160: FILE: fs/reiserfs/super.c:452:
+    {"on", 1<<REISERFS_LARGETAIL, 1<<REISERFS_SMALLTAIL},
             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#160: FILE: fs/reiserfs/super.c:452:
+    {"on", 1<<REISERFS_LARGETAIL, 1<<REISERFS_SMALLTAIL},
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/reiserfs/super.c:453:
+    {"off", 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#161: FILE: fs/reiserfs/super.c:453:
+    {"off", 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},
                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: fs/reiserfs/super.c:453:
+    {"off", 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},
                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#161: FILE: fs/reiserfs/super.c:453:
+    {"off", 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/reiserfs/super.c:454:
+    {"small", 1<<REISERFS_SMALLTAIL, 1<<REISERFS_LARGETAIL},$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#162: FILE: fs/reiserfs/super.c:454:
+    {"small", 1<<REISERFS_SMALLTAIL, 1<<REISERFS_LARGETAIL},
                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#162: FILE: fs/reiserfs/super.c:454:
+    {"small", 1<<REISERFS_SMALLTAIL, 1<<REISERFS_LARGETAIL},
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: fs/reiserfs/super.c:455:
+    {NULL, 0, 0}$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#173: FILE: fs/reiserfs/super.c:492:
+	if ( reiserfs_parse_alloc_options( s, p + 6) ) {
+	    return -1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#173: FILE: fs/reiserfs/super.c:492:
+	if ( reiserfs_parse_alloc_options( s, p + 6) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#173: FILE: fs/reiserfs/super.c:492:
+	if ( reiserfs_parse_alloc_options( s, p + 6) ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#173: FILE: fs/reiserfs/super.c:492:
+	if ( reiserfs_parse_alloc_options( s, p + 6) ) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#174: FILE: fs/reiserfs/super.c:493:
+	    return -1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#175: FILE: fs/reiserfs/super.c:494:
+	} else {
+	    return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#176: FILE: fs/reiserfs/super.c:495:
+	    return 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#182: FILE: fs/reiserfs/super.c:501:
 	if (!strncmp (p, opt->option_name, strlen (opt->option_name))) {
+	    if (bit_flags) {

WARNING:TABSTOP: Statements should start on a tabstop
#185: FILE: fs/reiserfs/super.c:502:
+	    if (bit_flags) {

WARNING:TABSTOP: Statements should start on a tabstop
#188: FILE: fs/reiserfs/super.c:505:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#204: FILE: fs/reiserfs/super.c:552:
 	if (!strcmp (p, arg->value)) {
+	    if (bit_flags) {

WARNING:TABSTOP: Statements should start on a tabstop
#207: FILE: fs/reiserfs/super.c:553:
+	    if (bit_flags) {

WARNING:TABSTOP: Statements should start on a tabstop
#210: FILE: fs/reiserfs/super.c:556:
+	    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#233: FILE: fs/reiserfs/super.c:579:
+		/* Compatibility stuff, so that -o notail
+		   for old setups still work */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: fs/reiserfs/super.c:579:
+		   for old setups still work */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#234: FILE: fs/reiserfs/super.c:580:
+		{"notail", 0, 0, 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},
 		                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#234: FILE: fs/reiserfs/super.c:580:
+		{"notail", 0, 0, 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},
 		                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#234: FILE: fs/reiserfs/super.c:580:
+		{"notail", 0, 0, 0, (1<<REISERFS_LARGETAIL)|(1<<REISERFS_SMALLTAIL)},
 		                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#235: FILE: fs/reiserfs/super.c:581:
+		{"conv", 0, 0, 1<<REISERFS_CONVERT, 0},
 		                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#237: FILE: fs/reiserfs/super.c:583:
+		{"replayonly", 0, 0, 1<<REPLAYONLY, 0},
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#242: FILE: fs/reiserfs/super.c:586:
+		{"hash", 'h', hash, 1<<FORCE_HASH_DETECT, 0},
 		                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#248: FILE: fs/reiserfs/super.c:589:
+		{"attrs", 0, 0, 1<<REISERFS_ATTRS, 0},
 		                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#249: FILE: fs/reiserfs/super.c:590:
+		{"noattrs", 0, 0, 0, 1<<REISERFS_ATTRS},
 		                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/reiserfs/super.c:652:
+  unsigned long mount_options = s->u.reiserfs_sb.s_mount_opt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: fs/reiserfs/super.c:653:
+  unsigned long safe_mask = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: fs/reiserfs/super.c:658:
+  ^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: fs/reiserfs/super.c:658:
+  ^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: fs/reiserfs/super.c:658:
+  ^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: fs/reiserfs/super.c:661:
+  safe_mask |= 1 << REISERFS_SMALLTAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/reiserfs/super.c:662:
+  safe_mask |= 1 << REISERFS_LARGETAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: fs/reiserfs/super.c:663:
+  safe_mask |= 1 << REISERFS_NO_BORDER;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/reiserfs/super.c:664:
+  safe_mask |= 1 << REISERFS_NO_UNHASHED_RELOCATION;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/reiserfs/super.c:665:
+  safe_mask |= 1 << REISERFS_HASHED_RELOCATION;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: fs/reiserfs/super.c:666:
+  safe_mask |= 1 << REISERFS_TEST4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/reiserfs/super.c:667:
+  safe_mask |= 1 << REISERFS_ATTRS;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#301: FILE: fs/reiserfs/super.c:670:
+   * the bits we're not allowed to change here */

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#302: FILE: fs/reiserfs/super.c:671:
+  s->u.reiserfs_sb.s_mount_opt = (s->u.reiserfs_sb.s_mount_opt & ~safe_mask) | (mount_options & safe_mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: fs/reiserfs/super.c:671:
+  s->u.reiserfs_sb.s_mount_opt = (s->u.reiserfs_sb.s_mount_opt & ~safe_mask) | (mount_options & safe_mask);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 74 warnings, 39 checks, 203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
