CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: drivers/scsi/scsi.c:574:
+		SCSI_LOG_MLQUEUE(0,
+			printk("queuecommand : command too long. "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#86: FILE: drivers/scsi/scsi.c:574:
+			printk("queuecommand : command too long. "

WARNING:SPLIT_STRING: quoted string split across lines
#87: FILE: drivers/scsi/scsi.c:575:
+			printk("queuecommand : command too long. "
+			       "cdb_size(%d) host->max_cmd_len(%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#102: FILE: drivers/scsi/scsi_debug.c:1997:
+		printk(KERN_INFO

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#123: FILE: drivers/scsi/scsi_lib.c:196:
+	req->cmd_len = min(

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#128: FILE: drivers/scsi/scsi_lib.c:201:
+		memset(&req->cmd[req->cmd_len], 0, MAX_COMMAND_SIZE-req->cmd_len);
 		                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#146: FILE: drivers/scsi/scsi_lib.c:479:
+	BUG_ON( (cmd[0]==VARLEN_CDB) && (scsi_varlen_cdb_length(cmd) > cmd_len) );

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#146: FILE: drivers/scsi/scsi_lib.c:479:
+	BUG_ON( (cmd[0]==VARLEN_CDB) && (scsi_varlen_cdb_length(cmd) > cmd_len) );
 	               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: drivers/scsi/scsi_lib.c:479:
+	BUG_ON( (cmd[0]==VARLEN_CDB) && (scsi_varlen_cdb_length(cmd) > cmd_len) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: drivers/scsi/scsi_lib.c:479:
+	BUG_ON( (cmd[0]==VARLEN_CDB) && (scsi_varlen_cdb_length(cmd) > cmd_len) );

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#147: FILE: drivers/scsi/scsi_lib.c:480:
+	/* Unlike scsi_excute, scsi_execute_bidi_xxx supports big commands that are not VARLEN_CDB */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd[0] == VARLEN_CDB'
#148: FILE: drivers/scsi/scsi_lib.c:481:
+	if ((cmd[0] == VARLEN_CDB) || (cmd_len > MAX_COMMAND_SIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd_len > MAX_COMMAND_SIZE'
#148: FILE: drivers/scsi/scsi_lib.c:481:
+	if ((cmd[0] == VARLEN_CDB) || (cmd_len > MAX_COMMAND_SIZE)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#152: FILE: drivers/scsi/scsi_lib.c:485:
+	req->cmd_len = min( cmd_len ? cmd_len : COMMAND_SIZE(cmd[0]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/scsi/scsi_lib.c:486:
+	req->cmd_len = min( cmd_len ? cmd_len : COMMAND_SIZE(cmd[0]),
+		MAX_COMMAND_SIZE);

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: drivers/scsi/scsi_lib.c:488:
+	if(req->cmd_len < MAX_COMMAND_SIZE)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: drivers/scsi/scsi_lib.c:489:
+		memset(&req->cmd[req->cmd_len], 0, MAX_COMMAND_SIZE-req->cmd_len);
 		                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: include/linux/blkdev.h:314:
+^I                                 * first 16 bytes are copied also into cmd[].$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#240: FILE: include/scsi/scsi_cmnd.h:29:
+	return ((struct scsi_varlen_cdb_hdr*)hdr)->additional_cdb_length + 8;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000000165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 7 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000000165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
