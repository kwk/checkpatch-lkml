WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Content-Disposition: attachment; filename=kexec-tools-enable-crash-dump.patch

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#72: FILE: kexec/arch/i386/kexec-elf-x86.c:115:
+#define OPT_CRASH_DUMP  (OPT_ARCH_MAX+5)
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#73: FILE: kexec/arch/i386/kexec-elf-x86.c:116:
+#define OPT_ELF32_CORE  (OPT_ARCH_MAX+6)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: kexec/arch/i386/kexec-elf-x86.c:117:
+#define OPT_ELF64_CORE  (OPT_ARCH_MAX+7)
                                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: kexec/arch/i386/kexec-elf-x86.c:285:
+		 * enabled, additional segments need to be created. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: kexec/arch/i386/kexec-x86.c:281:
+		elf_rel_set_symbol(&info->rhdr, "crash_dump_on",
+			&crash_dump_on, sizeof(crash_dump_on));

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#155: FILE: kexec/kexec.c:45:
+ * kernel is being loaded. Keeping this case seprate provides the flexibility
                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#157: FILE: kexec/kexec.c:47:
+ * headers. May be future use.... */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#158: FILE: kexec/kexec.c:48:
+uint8_t crash_dump_on;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#171: FILE: kexec/kexec.c:481:
+			if (info->segment[i].mem == (void*)info->backup_start) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: kexec/kexec.c:481:
+			if (info->segment[i].mem == (void*)info->backup_start) {
+				continue;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#184: FILE: kexec/kexec.h:95:
+extern uint8_t crash_dump_on;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#196: FILE: purgatory/arch/i386/purgatory-x86.c:33:
+uint8_t crash_dump_on = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#196: FILE: purgatory/arch/i386/purgatory-x86.c:33:
+uint8_t crash_dump_on = 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#205: FILE: purgatory/arch/i386/purgatory-x86.c:41:
+	if (crash_dump_on)   crashdump_backup_memory();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195289.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 7 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195289.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
