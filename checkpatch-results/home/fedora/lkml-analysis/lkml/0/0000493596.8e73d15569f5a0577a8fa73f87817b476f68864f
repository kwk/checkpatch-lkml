WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Here's my update to the ns83820 driver with the patches from Jeff Garzik for 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: Documentation/Configure.help:22480:
+        SMC 9452TX          SMC SMC9462TX       $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: Documentation/Configure.help:22485:
+  This driver supports the use of zero copy on tx, checksum $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: drivers/net/ns83820.c:1:
+#define _VERSION "0.15"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#75: FILE: drivers/net/ns83820.c:4:
+ * $Revision: 1.34.2.12 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/net/ns83820.c:52:
+ *^I20011117 ^I0.14 - ethtool GDRVINFO, GLINK support from jgarzik$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: drivers/net/ns83820.c:53:
+ *^I20011204 ^I0.15^Iget ppc (big endian) working$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#108: FILE: drivers/net/ns83820.c:100:
+#include <asm/uaccess.h>

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#125: FILE: drivers/net/ns83820.c:114:
+#if 0 //def CONFIG_HIGHMEM

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#134: FILE: drivers/net/ns83820.c:151:
+#define	VERSION	_VERSION USE_64BIT_ADDR

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: drivers/net/ns83820.c:348:
+#define TANAR_PS2 ^I^I0x00000100$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: drivers/net/ns83820.c:349:
+#define TANAR_PS1 ^I^I0x00000080$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/net/ns83820.c:350:
+#define TANAR_HALF_DUP ^I^I0x00000040$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/net/ns83820.c:351:
+#define TANAR_FULL_DUP ^I^I0x00000020$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: drivers/net/ns83820.c:439:
+	unsigned		linkstate;

WARNING:LONG_LINE: line length of 162 exceeds 100 columns
#216: FILE: drivers/net/ns83820.c:536:
+		dev->rx_info.descs[((NR_RX_DESC + next_empty - 1) % NR_RX_DESC) * DESC_SIZE] = cpu_to_le32(dev->rx_info.phy_descs + (next_empty * DESC_SIZE * 4));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#225: FILE: drivers/net/ns83820.c:595:
+	static char *speeds[] = { "10", "100", "1000", "1000(?)", "1000F" };

ERROR:SPACING: space prohibited after that open parenthesis '('
#250: FILE: drivers/net/ns83820.c:611:
+		if ( (fullduplex = (tanlpar & TANAR_FULL_DUP)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#250: FILE: drivers/net/ns83820.c:611:
+		if ( (fullduplex = (tanlpar & TANAR_FULL_DUP)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#251: FILE: drivers/net/ns83820.c:612:
+		if ( (fullduplex = (tanlpar & TANAR_FULL_DUP)
+		      && (tanar & TANAR_FULL_DUP)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#251: FILE: drivers/net/ns83820.c:612:
+		      && (tanar & TANAR_FULL_DUP)) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#252: FILE: drivers/net/ns83820.c:613:
+		      && (tanar & TANAR_FULL_DUP)) ) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#263: FILE: drivers/net/ns83820.c:624:
+		} else if(((tanlpar & TANAR_HALF_DUP)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#264: FILE: drivers/net/ns83820.c:625:
+		} else if(((tanlpar & TANAR_HALF_DUP)
+			   && (tanar & TANAR_HALF_DUP))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#265: FILE: drivers/net/ns83820.c:626:
+			   && (tanar & TANAR_HALF_DUP))
+			|| ((tanlpar & TANAR_FULL_DUP)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: drivers/net/ns83820.c:627:
+			|| ((tanlpar & TANAR_FULL_DUP)
+			    && (tanar & TANAR_HALF_DUP))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#267: FILE: drivers/net/ns83820.c:628:
+			    && (tanar & TANAR_HALF_DUP))
+			|| ((tanlpar & TANAR_HALF_DUP)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#268: FILE: drivers/net/ns83820.c:629:
+			|| ((tanlpar & TANAR_HALF_DUP)
+			    && (tanar & TANAR_FULL_DUP))) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#269: FILE: drivers/net/ns83820.c:630:
+			    && (tanar & TANAR_FULL_DUP))) {
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#314: FILE: drivers/net/ns83820.c:668:
+	if (newlinkstate & LINK_UP
+	    && dev->linkstate != newlinkstate) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#325: FILE: drivers/net/ns83820.c:676:
+	} else if (newlinkstate & LINK_DOWN
+		   && dev->linkstate != newlinkstate) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#360: FILE: drivers/net/ns83820.c:822:
+#if 0 //ndef __i386__

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#368: FILE: drivers/net/ns83820.c:829:
+#if 0 //ndef __i386__	/* I hate the network stack sometimes */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#380: FILE: drivers/net/ns83820.c:894:
+	       !(CMDSTS_OWN & (cmdsts = le32_to_cpu(desc[CMDSTS]))) ) {

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#414: FILE: drivers/net/ns83820.c:1040:
+		dprintk("frag[%3u]: %4u @ 0x%08Lx\n", free_idx, len,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: drivers/net/ns83820.c:1111:
+static int ns83820_ethtool_ioctl (struct ns83820 *dev, void *useraddr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: drivers/net/ns83820.c:1115:
+	if (copy_from_user(&ethcmd, useraddr, sizeof (ethcmd)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: drivers/net/ns83820.c:1122:
+			struct ethtool_drvinfo info = { ETHTOOL_GDRVINFO };
+			strcpy(info.driver, "ns83820");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: drivers/net/ns83820.c:1125:
+			if (copy_to_user(useraddr, &info, sizeof (info)))

ERROR:SPACING: space required before the open parenthesis '('
#489: FILE: drivers/net/ns83820.c:1155:
+	switch(cmd) {

CHECK:SPACING: No space is necessary after a cast
#491: FILE: drivers/net/ns83820.c:1157:
+		return ns83820_ethtool_ioctl(dev, (void *) rq->ifr_data);

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#510: FILE: drivers/net/ns83820.c:1206:
+		Dprintk("overrun: rxsovr\n");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#511: FILE: drivers/net/ns83820.c:1207:
+		dev->stats.rx_over_errors ++;
 		                          ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#515: FILE: drivers/net/ns83820.c:1211:
+		dev->stats.rx_over_errors ++;
 		                          ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#528: FILE: drivers/net/ns83820.c:1312:
+		dev->tx_descs[(i * DESC_SIZE) + LINK]
+				= cpu_to_le32(

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#528: FILE: drivers/net/ns83820.c:1312:
+				= cpu_to_le32(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#530: FILE: drivers/net/ns83820.c:1314:
+				  + ((i+1) % NR_TX_DESC) * DESC_SIZE * 4);
 				       ^

ERROR:SPACING: space required before the open parenthesis '('
#548: FILE: drivers/net/ns83820.c:1452:
+	if(register_netdev(&dev->net_dev)) goto out_unmap;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#548: FILE: drivers/net/ns83820.c:1452:
+	if(register_netdev(&dev->net_dev)) goto out_unmap;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#566: FILE: drivers/net/ns83820.c:1486:
+		printk("%s: enabling 64 bit PCI addressing.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/net/ns83820.c:1487:
+		printk("%s: enabling 64 bit PCI addressing.\n",
+			dev->net_dev.name);

CHECK:BRACES: Unbalanced braces around else statement
#574: FILE: drivers/net/ns83820.c:1492:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#598: FILE: drivers/net/ns83820.c:1510:
+		printk("%s: enabling optical transceiver\n", dev->net_dev.name);

WARNING:LONG_LINE_STRING: line length of 124 exceeds 100 columns
#624: FILE: drivers/net/ns83820.c:1581:
+	printk(KERN_INFO "%s: ns83820 v" VERSION ": DP83820 v%u.%u: %02x:%02x:%02x:%02x:%02x:%02x io=0x%08lx irq=%d f=%s\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#624: FILE: drivers/net/ns83820.c:1581:
+	printk(KERN_INFO "%s: ns83820 v" VERSION ": DP83820 v%u.%u: %02x:%02x:%02x:%02x:%02x:%02x io=0x%08lx irq=%d f=%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: drivers/net/ns83820.c:1582:
+	printk(KERN_INFO "%s: ns83820 v" VERSION ": DP83820 v%u.%u: %02x:%02x:%02x:%02x:%02x:%02x io=0x%08lx irq=%d f=%s\n",
 		dev->net_dev.name,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#626: FILE: drivers/net/ns83820.c:1583:
+		(unsigned)readl(dev->base + SRR) >> 8,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#627: FILE: drivers/net/ns83820.c:1584:
+		(unsigned)readl(dev->base + SRR) & 0xff,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000493596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 27 warnings, 18 checks, 568 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000493596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
