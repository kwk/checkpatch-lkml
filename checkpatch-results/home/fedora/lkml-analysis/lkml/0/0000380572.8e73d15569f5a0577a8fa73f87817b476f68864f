ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#25: 
--- a/sound/isa/dt019x.c	Thu Apr  3 23:40:39 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#61: FILE: sound/isa/dt019x.c:91:
+static struct pnp_card_device_id snd_dt019x_pnpids[] __devinitdata = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: sound/isa/dt019x.c:106:
+static int __init snd_card_dt019x_isapnp(int dev, struct snd_card_dt019x *acard,
+							   struct pnp_card_link *card,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: sound/isa/dt019x.c:110:
+	struct pnp_resource_table * cfg = kmalloc(sizeof(struct pnp_resource_table), GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cfg)...) over kmalloc(sizeof(struct pnp_resource_table)...)
#115: FILE: sound/isa/dt019x.c:110:
+	struct pnp_resource_table * cfg = kmalloc(sizeof(struct pnp_resource_table), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acard->dev"
#122: FILE: sound/isa/dt019x.c:117:
+	if (acard->dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: sound/isa/dt019x.c:118:
+		kfree (cfg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: sound/isa/dt019x.c:131:
+		pnp_resource_change(&cfg->dma_resource[0], dma8[dev],
 			1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#153: FILE: sound/isa/dt019x.c:136:
+		printk(KERN_ERR PFX "DT-019X AUDIO the requested resources are invalid, using auto config\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#156: FILE: sound/isa/dt019x.c:139:
+		printk(KERN_ERR PFX "DT-019X AUDIO pnp configure failure\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#185: FILE: sound/isa/dt019x.c:152:
+	if (pdev != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#191: FILE: sound/isa/dt019x.c:158:
+			if ((pnp_manual_config_dev(pdev, cfg, 0)) < 0)
+			printk(KERN_ERR PFX "DT-019X MPU401 the requested resources are invalid, using auto config\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#192: FILE: sound/isa/dt019x.c:159:
+			printk(KERN_ERR PFX "DT-019X MPU401 the requested resources are invalid, using auto config\n");

WARNING:INDENTED_LABEL: labels should not be indented
#201: FILE: sound/isa/dt019x.c:168:
+		__mpu_error:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#204: FILE: sound/isa/dt019x.c:171:
+			printk(KERN_ERR PFX "DT-019X MPU401 pnp configure failure, skipping\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#223: FILE: sound/isa/dt019x.c:178:
+	if (pdev != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#228: FILE: sound/isa/dt019x.c:183:
+			printk(KERN_ERR PFX "DT-019X OPL3 the requested resources are invalid, using auto config\n");

WARNING:INDENTED_LABEL: labels should not be indented
#252: FILE: sound/isa/dt019x.c:190:
+		__fm_error:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#255: FILE: sound/isa/dt019x.c:193:
+			printk(KERN_ERR PFX "DT-019X OPL3 pnp configure failure, skipping\n");

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#277: FILE: sound/isa/dt019x.c:203:
+static int __init snd_card_dt019x_probe(int dev, struct pnp_card_link *pcard, const struct pnp_card_device_id *pid)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#289: FILE: sound/isa/dt019x.c:216:
+	if ((error = snd_card_dt019x_isapnp(dev, acard, pcard, pid))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: sound/isa/dt019x.c:286:
+static int __init snd_dt019x_pnp_probe(struct pnp_card_link *card,
+					    const struct pnp_card_device_id *pid)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#335: FILE: sound/isa/dt019x.c:303:
+static void __devexit snd_dt019x_pnp_remove(struct pnp_card_link * pcard)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: sound/isa/dt019x.c:303:
+static void __devexit snd_dt019x_pnp_remove(struct pnp_card_link * pcard)

CHECK:SPACING: No space is necessary after a cast
#337: FILE: sound/isa/dt019x.c:305:
+	snd_card_t *card = (snd_card_t *) pnp_get_card_drvdata(pcard);

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: sound/isa/dt019x.c:306:
+	snd_card_t *card = (snd_card_t *) pnp_get_card_drvdata(pcard);
+	snd_card_disconnect(card);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 8 checks, 342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
