WARNING:TYPO_SPELLING: 'belive' may be misspelled - perhaps 'believe'?
#36: 
functions so I belive it belongs in the mainstream kernel too.  Please
               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#50: FILE: MAINTAINERS:1360:
+P:	Christer Weinigel
+M:	wingel@nano-system.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#52: FILE: MAINTAINERS:1362:
+W:	http://www.nano-system.com
+S:	Supported

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: Documentation/Configure.help:24461:
+  SCx200 processor.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#156: FILE: arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#156: FILE: arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: arch/i386/kernel/scx200.c:2:
+/* linux/arch/i386/kernel/scx200.c 
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#179: FILE: arch/i386/kernel/scx200.c:24:
+extern int scx200_nano_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#182: FILE: arch/i386/kernel/scx200.c:27:
+#define GX_BASE_SIZE (64*1024)
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#184: FILE: arch/i386/kernel/scx200.c:29:
+static char name[] = "scx200";

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: arch/i386/kernel/scx200.c:33:
+unsigned scx200_config_block;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#191: FILE: arch/i386/kernel/scx200.c:36:
+EXPORT_SYMBOL(scx200_f0_pdev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#192: FILE: arch/i386/kernel/scx200.c:37:
+EXPORT_SYMBOL(scx200_f5_pdev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: arch/i386/kernel/scx200.c:38:
+EXPORT_SYMBOL(scx200_config_block);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#194: FILE: arch/i386/kernel/scx200.c:39:
+EXPORT_SYMBOL(gx1_control);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#196: FILE: arch/i386/kernel/scx200.c:41:
+static int __init scx200_probe_config_block(unsigned cb_base)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: arch/i386/kernel/scx200.c:43:
+	unsigned cb_data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#211: FILE: arch/i386/kernel/scx200.c:56:
+	unsigned gx_base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#212: FILE: arch/i386/kernel/scx200.c:57:
+	unsigned cb_base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#215: FILE: arch/i386/kernel/scx200.c:60:
+	printk(KERN_DEBUG "%s\n", __PRETTY_FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: arch/i386/kernel/scx200.c:62:
+^Iif ((scx200_f0_pdev = pci_find_device(PCI_VENDOR_ID_NS, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#217: FILE: arch/i386/kernel/scx200.c:62:
+	if ((scx200_f0_pdev = pci_find_device(PCI_VENDOR_ID_NS, 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/i386/kernel/scx200.c:67:
+^Iif ((scx200_f5_pdev = pci_find_device(PCI_VENDOR_ID_NS, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#222: FILE: arch/i386/kernel/scx200.c:67:
+	if ((scx200_f5_pdev = pci_find_device(PCI_VENDOR_ID_NS, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#229: FILE: arch/i386/kernel/scx200.c:74:
+		printk(KERN_WARNING "%s: unable to allocate the F0 I/O region\n", name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#234: FILE: arch/i386/kernel/scx200.c:79:
+	/* First check if the configuration BIOS has stored the
+	   Configuration Block address in the scratch pad register */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#234: FILE: arch/i386/kernel/scx200.c:79:
+	   Configuration Block address in the scratch pad register */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: arch/i386/kernel/scx200.c:84:
+^I} $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#242: FILE: arch/i386/kernel/scx200.c:87:
+	/* The BIOS hasn't set up the scratch pad register, so first
+	   try the default address specified in the SCx200 errata */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#242: FILE: arch/i386/kernel/scx200.c:87:
+	   try the default address specified in the SCx200 errata */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#250: FILE: arch/i386/kernel/scx200.c:95:
+	/* Didn't work either, do it the hard way by scanning the I/O
+	   space for it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#250: FILE: arch/i386/kernel/scx200.c:95:
+	   space for it */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#251: FILE: arch/i386/kernel/scx200.c:96:
+	printk(KERN_DEBUG "%s: Scanning for Configuration Block\n", name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: arch/i386/kernel/scx200.c:103:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#259: FILE: arch/i386/kernel/scx200.c:104:
+	printk(KERN_WARNING "%s: Unable to find Configuration Block\n", name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: arch/i386/kernel/scx200.c:110:
+^Iprintk(KERN_INFO "%s: Configuration Block at 0x%04x (%s)\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#265: FILE: arch/i386/kernel/scx200.c:110:
+	printk(KERN_INFO "%s: Configuration Block at 0x%04x (%s)\n", 

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#270: FILE: arch/i386/kernel/scx200.c:115:
+		printk(KERN_WARNING "%s: unable to allocate the Configuration Block I/O region\n", name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#270: FILE: arch/i386/kernel/scx200.c:115:
+		printk(KERN_WARNING "%s: unable to allocate the Configuration Block I/O region\n", name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#281: FILE: arch/i386/kernel/scx200.c:126:
+	if (gx_base) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#282: FILE: arch/i386/kernel/scx200.c:127:
+		printk(KERN_INFO "%s: GX_BASE is 0x%08x\n", name, gx_base);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#285: FILE: arch/i386/kernel/scx200.c:130:
+			printk(KERN_WARNING "%s: unable to allocate the GX_BASE I/O region\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#285: FILE: arch/i386/kernel/scx200.c:130:
+			printk(KERN_WARNING "%s: unable to allocate the GX_BASE I/O region\n", name);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#287: FILE: arch/i386/kernel/scx200.c:132:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#288: FILE: arch/i386/kernel/scx200.c:133:
+		printk(KERN_INFO "%s: GX_BASE is disabled\n",name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#288: FILE: arch/i386/kernel/scx200.c:133:
+		printk(KERN_INFO "%s: GX_BASE is disabled\n",name);
 		                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#291: FILE: arch/i386/kernel/scx200.c:136:
+		printk(KERN_DEBUG "MC_MEM_CNTRL1: 0x%08x\n", readl(gx1_control + 0x8404));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#292: FILE: arch/i386/kernel/scx200.c:137:
+		printk(KERN_DEBUG "MC_MEM_CNTRL2: 0x%08x\n", readl(gx1_control + 0x8404));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#293: FILE: arch/i386/kernel/scx200.c:138:
+		printk(KERN_DEBUG "MC_SYNC_TIM1:  0x%08x\n", readl(gx1_control + 0x840c));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#297: FILE: arch/i386/kernel/scx200.c:142:
+	printk(KERN_INFO "%s: GPIOs at 0x%x\n", name, scx200_gpio_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#313: FILE: arch/i386/kernel/scx200.c:158:
+	printk(KERN_DEBUG "%s\n", __PRETTY_FUNCTION__);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#327: FILE: arch/i386/kernel/scx200.c:172:
+unsigned scx200_gpio_base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#352: FILE: arch/i386/kernel/scx200.c:197:
+void scx200_gpio_dump(unsigned index)

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: arch/i386/kernel/scx200.c:200:
+	u32 config = scx200_gpio_configure(index, ~0, 0);
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#355: FILE: arch/i386/kernel/scx200.c:200:
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: arch/i386/kernel/scx200.c:201:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: arch/i386/kernel/scx200.c:202:
+^Iif (config & 1) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#358: FILE: arch/i386/kernel/scx200.c:203:
+		printk(" OE"); /* output enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: arch/i386/kernel/scx200.c:205:
+		printk(" TS"); /* tristate */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: arch/i386/kernel/scx200.c:206:
+^Iif (config & 2) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: arch/i386/kernel/scx200.c:207:
+		printk(" PP"); /* push pull */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#364: FILE: arch/i386/kernel/scx200.c:209:
+		printk(" OD"); /* open drain */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: arch/i386/kernel/scx200.c:210:
+^Iif (config & 4) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#366: FILE: arch/i386/kernel/scx200.c:211:
+		printk(" PUE"); /* pull up enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: arch/i386/kernel/scx200.c:213:
+		printk(" PUD"); /* pull up disabled */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: arch/i386/kernel/scx200.c:214:
+^Iif (config & 8) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#370: FILE: arch/i386/kernel/scx200.c:215:
+		printk(" LOCKED"); /* locked */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: arch/i386/kernel/scx200.c:216:
+^Iif (config & 16) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#372: FILE: arch/i386/kernel/scx200.c:217:
+		printk(" LEVEL"); /* level input */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: arch/i386/kernel/scx200.c:219:
+		printk(" EDGE"); /* edge input */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: arch/i386/kernel/scx200.c:220:
+^Iif (config & 32) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#376: FILE: arch/i386/kernel/scx200.c:221:
+		printk(" HI"); /* trigger on rising edge */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#378: FILE: arch/i386/kernel/scx200.c:223:
+		printk(" LO"); /* trigger on falling edge */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: arch/i386/kernel/scx200.c:224:
+^Iif (config & 64) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#380: FILE: arch/i386/kernel/scx200.c:225:
+		printk(" DEBOUNCE"); /* debounce */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#381: FILE: arch/i386/kernel/scx200.c:226:
+	printk("\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#384: FILE: arch/i386/kernel/scx200.c:229:
+EXPORT_SYMBOL(scx200_gpio_base);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#385: FILE: arch/i386/kernel/scx200.c:230:
+EXPORT_SYMBOL(scx200_gpio_shadow);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#386: FILE: arch/i386/kernel/scx200.c:231:
+EXPORT_SYMBOL(scx200_gpio_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#387: FILE: arch/i386/kernel/scx200.c:232:
+EXPORT_SYMBOL(scx200_gpio_configure);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#388: FILE: arch/i386/kernel/scx200.c:233:
+EXPORT_SYMBOL(scx200_gpio_dump);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#391: FILE: arch/i386/kernel/scx200.c:236:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/i386/kernel/scx200.c:237:
+        compile-command: "make -k -C ../../.. SUBDIRS=arch/i386/kernel"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/i386/kernel/scx200.c:238:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/i386/kernel/scx200_nano.c:1:
+/* linux/arch/i386/kernel/scx200_nano.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#400: FILE: arch/i386/kernel/scx200_nano.c:1:
+/* linux/arch/i386/kernel/scx200_nano.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#400: FILE: arch/i386/kernel/scx200_nano.c:1:
+/* linux/arch/i386/kernel/scx200_nano.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#401: FILE: arch/i386/kernel/scx200_nano.c:2:
+/* linux/arch/i386/kernel/scx200_nano.c 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: arch/i386/kernel/scx200_nano.c:9:
+   your computer, such as fry your TFT screen. */

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#422: FILE: arch/i386/kernel/scx200_nano.c:23:
+static char name[] = "scx200_nano";

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scx200_f0_pdev"
#436: FILE: arch/i386/kernel/scx200_nano.c:37:
+	if (scx200_f0_pdev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#437: FILE: arch/i386/kernel/scx200_nano.c:38:
+		printk(KERN_ERR "scx200_i2c: Not a SCx200 CPU\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#454: FILE: arch/i386/kernel/scx200_nano.c:55:
+		if (!pin) {
+			continue;
+		}

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#471: FILE: arch/i386/kernel/scx200_nano.c:72:
+			printk(KERN_INFO "%s: IRQ fixup for %02x:%02x.%d, was %d, new %d\n", name, 0, 0x11, i, dev->irq, irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#471: FILE: arch/i386/kernel/scx200_nano.c:72:
+			printk(KERN_INFO "%s: IRQ fixup for %02x:%02x.%d, was %d, new %d\n", name, 0, 0x11, i, dev->irq, irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#483: FILE: arch/i386/kernel/scx200_nano.c:84:
+	printk(KERN_DEBUG "%s\n", __PRETTY_FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scx200_f0_pdev"
#485: FILE: arch/i386/kernel/scx200_nano.c:86:
+	if (scx200_f0_pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#486: FILE: arch/i386/kernel/scx200_nano.c:87:
+		printk(KERN_ERR "%s: Not a SCx200 CPU\n", name);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_PMR>
#490: FILE: arch/i386/kernel/scx200_nano.c:91:
+	pmr = inl(scx200_config_block + SCx200_PMR);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MCR>
#491: FILE: arch/i386/kernel/scx200_nano.c:92:
+	mcr = inl(scx200_config_block + SCx200_MCR);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#493: FILE: arch/i386/kernel/scx200_nano.c:94:
+	printk(KERN_DEBUG "%s: PMR = 0x%08x\n", name, pmr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#494: FILE: arch/i386/kernel/scx200_nano.c:95:
+	printk(KERN_DEBUG "%s: MCR = 0x%08x\n", name, mcr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#499: FILE: arch/i386/kernel/scx200_nano.c:100:
+	printk(KERN_DEBUG "%s: PCI DOCCS Base = 0x%08x\n", name, doccs_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#500: FILE: arch/i386/kernel/scx200_nano.c:101:
+	printk(KERN_DEBUG "%s: PCI DOCCS Ctrl = 0x%08x\n", name, doccs_ctrl);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: arch/i386/kernel/scx200_nano.c:102:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#502: FILE: arch/i386/kernel/scx200_nano.c:103:
+	printk(KERN_INFO "%s: GPIO01/#IOCS1,GPIO20/#DOCCS on H2,H3\n", name);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#503: FILE: arch/i386/kernel/scx200_nano.c:104:
+	pmr &= ~(1<<23);
 	          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#505: FILE: arch/i386/kernel/scx200_nano.c:106:
+	printk(KERN_INFO "%s: Configuring GPIOs\n", name);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#506: FILE: arch/i386/kernel/scx200_nano.c:107:
+	pmr &= ~(1<<13);	/* GPIO01 not #IOCS1 */
 	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#507: FILE: arch/i386/kernel/scx200_nano.c:108:
+	pmr &= ~((1<<14) | (1<<22)); /* GPIO32-GPIO39 not LPC */
 	           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#507: FILE: arch/i386/kernel/scx200_nano.c:108:
+	pmr &= ~((1<<14) | (1<<22)); /* GPIO32-GPIO39 not LPC */
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#508: FILE: arch/i386/kernel/scx200_nano.c:109:
+	pmr &= ~(1<<19);	/* GPIO12-GPIO13 not ACCESS.bus 2 */
 	          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#528: FILE: arch/i386/kernel/scx200_nano.c:129:
+	printk(KERN_INFO "%s: #DOCCS not GPIO20, ZWS\n", name);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#529: FILE: arch/i386/kernel/scx200_nano.c:130:
+	pmr |= (1<<7);	/* #DOCCS not GPIO20 */
 	         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#530: FILE: arch/i386/kernel/scx200_nano.c:131:
+	mcr |= (1<<10);	/* Zero Wait States */
 	         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#532: FILE: arch/i386/kernel/scx200_nano.c:133:
+	printk(KERN_DEBUG "%s: DOC 0x%x-0x%x, width %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: arch/i386/kernel/scx200_nano.c:134:
+^I       name, DOC_WINDOW_ADDR, DOC_WINDOW_ADDR+DOC_WINDOW_SIZE, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#533: FILE: arch/i386/kernel/scx200_nano.c:134:
+	       name, DOC_WINDOW_ADDR, DOC_WINDOW_ADDR+DOC_WINDOW_SIZE, 
 	                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#537: FILE: arch/i386/kernel/scx200_nano.c:138:
+	doccs_ctrl = ((DOC_WINDOW_SIZE-1) >> 13);
 	                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#540: FILE: arch/i386/kernel/scx200_nano.c:141:
+		pmr &= ~(1<<6);
 		          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#542: FILE: arch/i386/kernel/scx200_nano.c:143:
+		pmr |= (1<<6);
 		         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: arch/i386/kernel/scx200_nano.c:145:
+^I^Iprintk(KERN_WARNING "%s: invalid DOC bus with %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#544: FILE: arch/i386/kernel/scx200_nano.c:145:
+		printk(KERN_WARNING "%s: invalid DOC bus with %d\n", 

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#548: FILE: arch/i386/kernel/scx200_nano.c:149:
+	pmr |= 1<<4;		/* #INTC not GPIO19 */
 	        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#549: FILE: arch/i386/kernel/scx200_nano.c:150:
+	pmr &= ~(1<<9);	/* #INTC not IOCHRDY */
 	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: arch/i386/kernel/scx200_nano.c:151:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#551: FILE: arch/i386/kernel/scx200_nano.c:152:
+	printk(KERN_DEBUG "%s: PCI DOCCS Base = 0x%08x\n", name, doccs_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#552: FILE: arch/i386/kernel/scx200_nano.c:153:
+	printk(KERN_DEBUG "%s: PCI DOCCS Ctrl = 0x%08x\n", name, doccs_ctrl);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: arch/i386/kernel/scx200_nano.c:154:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#557: FILE: arch/i386/kernel/scx200_nano.c:158:
+	printk(KERN_DEBUG "%s: PMR = 0x%08x\n", name, pmr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#558: FILE: arch/i386/kernel/scx200_nano.c:159:
+	printk(KERN_DEBUG "%s: MCR = 0x%08x\n", name, mcr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#563: FILE: arch/i386/kernel/scx200_nano.c:164:
+	printk(KERN_DEBUG "%s: Removing EEPROM write protect\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#579: FILE: arch/i386/kernel/scx200_nano.c:180:
+	printk(KERN_INFO "%s\n", __PRETTY_FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#587: FILE: arch/i386/kernel/scx200_nano.c:188:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: arch/i386/kernel/scx200_nano.c:189:
+        compile-command: "make -k -C ../../.. SUBDIRS=arch/i386/kernel"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: arch/i386/kernel/scx200_nano.c:190:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: drivers/char/scx200_watchdog.c:1:
+/* linux/drivers/char/scx200_watchdog.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#618: FILE: drivers/char/scx200_watchdog.c:1:
+/* linux/drivers/char/scx200_watchdog.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#618: FILE: drivers/char/scx200_watchdog.c:1:
+/* linux/drivers/char/scx200_watchdog.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#619: FILE: drivers/char/scx200_watchdog.c:2:
+/* linux/drivers/char/scx200_watchdog.c 
+

WARNING:TYPO_SPELLING: 'Som' may be misspelled - perhaps 'Some'?
#624: FILE: drivers/char/scx200_watchdog.c:7:
+   Som code taken from:
    ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#635: FILE: drivers/char/scx200_watchdog.c:18:
+   software is provided AS-IS with no warranties. */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#646: FILE: drivers/char/scx200_watchdog.c:29:
+#include <asm/uaccess.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#670: FILE: drivers/char/scx200_watchdog.c:53:
+static unsigned expect_close;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#677: FILE: drivers/char/scx200_watchdog.c:60:
+#define    WDOVF (1<<0)		/* Overflow */
                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#677: FILE: drivers/char/scx200_watchdog.c:60:
+#define    WDOVF (1<<0)		/* Overflow */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#679: FILE: drivers/char/scx200_watchdog.c:62:
+#define W_SCALE (32768/1024)	/* This depends on the value of W_ENABLE */
                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#688: FILE: drivers/char/scx200_watchdog.c:71:
+	printk(KERN_INFO "%s: timer margin %d seconds\n", name, margin);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: drivers/char/scx200_watchdog.c:77:
+^Iprintk(KERN_DEBUG "%s: enabling watchdog timer, wdto_restart = %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#694: FILE: drivers/char/scx200_watchdog.c:77:
+	printk(KERN_DEBUG "%s: enabling watchdog timer, wdto_restart = %d\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#706: FILE: drivers/char/scx200_watchdog.c:89:
+	printk(KERN_DEBUG "%s: disabling watchdog timer\n", name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: drivers/char/scx200_watchdog.c:90:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: drivers/char/scx200_watchdog.c:98:
+        /* only allow one at a time */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/char/scx200_watchdog.c:99:
+        if (down_trylock(&open_semaphore))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/char/scx200_watchdog.c:99:
+        if (down_trylock(&open_semaphore))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/char/scx200_watchdog.c:100:
+                return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/char/scx200_watchdog.c:100:
+                return -EBUSY;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#727: FILE: drivers/char/scx200_watchdog.c:110:
+		printk(KERN_WARNING "%s: watchdog device closed unexpectedly, "

WARNING:SPLIT_STRING: quoted string split across lines
#728: FILE: drivers/char/scx200_watchdog.c:111:
+		printk(KERN_WARNING "%s: watchdog device closed unexpectedly, "
+		       "will not disable the watchdog timer\n", name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: drivers/char/scx200_watchdog.c:115:
+        up(&open_semaphore);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: drivers/char/scx200_watchdog.c:115:
+        up(&open_semaphore);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: drivers/char/scx200_watchdog.c:120:
+static int scx200_watchdog_notify_sys(struct notifier_block *this, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/char/scx200_watchdog.c:123:
+        if (code == SYS_HALT || code == SYS_POWER_OFF)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/char/scx200_watchdog.c:123:
+        if (code == SYS_HALT || code == SYS_POWER_OFF)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: drivers/char/scx200_watchdog.c:127:
+        return NOTIFY_DONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: drivers/char/scx200_watchdog.c:127:
+        return NOTIFY_DONE;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#748: FILE: drivers/char/scx200_watchdog.c:131:
+static struct notifier_block scx200_watchdog_notifier =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: drivers/char/scx200_watchdog.c:132:
+        notifier_call: scx200_watchdog_notify_sys$

WARNING:INDENTED_LABEL: labels should not be indented
#749: FILE: drivers/char/scx200_watchdog.c:132:
+        notifier_call: scx200_watchdog_notify_sys

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: drivers/char/scx200_watchdog.c:135:
+static ssize_t scx200_watchdog_write(struct file *file, const char *data, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/char/scx200_watchdog.c:142:
+^Iif (len) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#759: FILE: drivers/char/scx200_watchdog.c:142:
+	if (len) 
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#768: FILE: drivers/char/scx200_watchdog.c:151:
+			char c;
+			if (get_user(c, data+i))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#768: FILE: drivers/char/scx200_watchdog.c:151:
+			if (get_user(c, data+i))
 			                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/char/scx200_watchdog.c:164:
+static int scx200_watchdog_ioctl(struct inode *inode, struct file *file,
+	unsigned int cmd, unsigned long arg)

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#784: FILE: drivers/char/scx200_watchdog.c:167:
+		identity : "SCx200 Watchdog",
 		         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: drivers/char/scx200_watchdog.c:168:
+^I^Ifirmware_version : 1, $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#786: FILE: drivers/char/scx200_watchdog.c:169:
+		options : (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: drivers/char/scx200_watchdog.c:171:
+^I^I^IWDIOF_SETTIMEOUT | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: drivers/char/scx200_watchdog.c:176:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: drivers/char/scx200_watchdog.c:181:
+^I^Iif(copy_to_user((struct watchdog_info *)arg, &ident, $

ERROR:SPACING: space required before the open parenthesis '('
#798: FILE: drivers/char/scx200_watchdog.c:181:
+		if(copy_to_user((struct watchdog_info *)arg, &ident, 

WARNING:CONST_STRUCT: struct file_operations should normally be const
#823: FILE: drivers/char/scx200_watchdog.c:206:
+static struct file_operations scx200_watchdog_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#824: FILE: drivers/char/scx200_watchdog.c:207:
+	owner: THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#825: FILE: drivers/char/scx200_watchdog.c:208:
+	write: scx200_watchdog_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#825: FILE: drivers/char/scx200_watchdog.c:208:
+	write: scx200_watchdog_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#826: FILE: drivers/char/scx200_watchdog.c:209:
+	ioctl: scx200_watchdog_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#826: FILE: drivers/char/scx200_watchdog.c:209:
+	ioctl: scx200_watchdog_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#827: FILE: drivers/char/scx200_watchdog.c:210:
+	open: scx200_watchdog_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#827: FILE: drivers/char/scx200_watchdog.c:210:
+	open: scx200_watchdog_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#828: FILE: drivers/char/scx200_watchdog.c:211:
+	release: scx200_watchdog_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#828: FILE: drivers/char/scx200_watchdog.c:211:
+	release: scx200_watchdog_release,

WARNING:INDENTED_LABEL: labels should not be indented
#832: FILE: drivers/char/scx200_watchdog.c:215:
+	minor: WATCHDOG_MINOR,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#833: FILE: drivers/char/scx200_watchdog.c:216:
+	name: name,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#833: FILE: drivers/char/scx200_watchdog.c:216:
+	name: name,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#834: FILE: drivers/char/scx200_watchdog.c:217:
+	fops: &scx200_watchdog_fops,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#834: FILE: drivers/char/scx200_watchdog.c:217:
+	fops: &scx200_watchdog_fops,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scx200_f0_pdev"
#841: FILE: drivers/char/scx200_watchdog.c:224:
+	if (scx200_f0_pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#842: FILE: drivers/char/scx200_watchdog.c:225:
+		printk(KERN_ERR "%s: Not a SCx200 CPU\n", name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: drivers/char/scx200_watchdog.c:239:
+        if (r) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: drivers/char/scx200_watchdog.c:239:
+        if (r) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: drivers/char/scx200_watchdog.c:240:
+                printk(KERN_ERR "%s: unable to register reboot notifier", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: drivers/char/scx200_watchdog.c:240:
+                printk(KERN_ERR "%s: unable to register reboot notifier", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: drivers/char/scx200_watchdog.c:240:
+                printk(KERN_ERR "%s: unable to register reboot notifier", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#857: FILE: drivers/char/scx200_watchdog.c:240:
+                printk(KERN_ERR "%s: unable to register reboot notifier", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: drivers/char/scx200_watchdog.c:243:
+                return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/char/scx200_watchdog.c:243:
+                return r;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: drivers/char/scx200_watchdog.c:244:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: drivers/char/scx200_watchdog.c:244:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: drivers/char/scx200_watchdog.c:251:
+        unregister_reboot_notifier(&scx200_watchdog_notifier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: drivers/char/scx200_watchdog.c:251:
+        unregister_reboot_notifier(&scx200_watchdog_notifier);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#876: FILE: drivers/char/scx200_watchdog.c:259:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: drivers/char/scx200_watchdog.c:260:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/char modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: drivers/char/scx200_watchdog.c:261:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#911: FILE: drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#911: FILE: drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#912: FILE: drivers/i2c/scx200_i2c.c:2:
+/* linux/drivers/i2c/scx200_i2c.c 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#923: FILE: drivers/i2c/scx200_i2c.c:13:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#928: FILE: drivers/i2c/scx200_i2c.c:18:
+   $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#930: FILE: drivers/i2c/scx200_i2c.c:20:
+   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#931: FILE: drivers/i2c/scx200_i2c.c:21:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#931: FILE: drivers/i2c/scx200_i2c.c:21:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     $

CHECK:CAMELCASE: Avoid CamelCase: <CONFIG_I2C_SCx200_SCL>
#953: FILE: drivers/i2c/scx200_i2c.c:43:
+static int scl = CONFIG_I2C_SCx200_SCL;

CHECK:CAMELCASE: Avoid CamelCase: <CONFIG_I2C_SCx200_SDA>
#954: FILE: drivers/i2c/scx200_i2c.c:44:
+static int sda = CONFIG_I2C_SCx200_SDA;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: drivers/i2c/scx200_i2c.c:56:
+} $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scx200_f0_pdev"
#1025: FILE: drivers/i2c/scx200_i2c.c:115:
+	if (scx200_f0_pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1026: FILE: drivers/i2c/scx200_i2c.c:116:
+		printk(KERN_ERR "%s: Not a SCx200 CPU\n", name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/i2c/scx200_i2c.c:120:
+^Iprintk(KERN_INFO "%s: SCL=GPIO%02u, SDA=GPIO%02u\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1030: FILE: drivers/i2c/scx200_i2c.c:120:
+	printk(KERN_INFO "%s: SCL=GPIO%02u, SDA=GPIO%02u\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1034: FILE: drivers/i2c/scx200_i2c.c:124:
+		printk(KERN_ERR "%s: scl and sda must be specified\n", name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1057: FILE: drivers/i2c/scx200_i2c.c:147:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: drivers/i2c/scx200_i2c.c:148:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/i2c modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: drivers/i2c/scx200_i2c.c:149:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1086: FILE: drivers/mtd/maps/scx200_docflash.c:1:
+/* linux/drivers/mtd/maps/scx200_docflash.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1086: FILE: drivers/mtd/maps/scx200_docflash.c:1:
+/* linux/drivers/mtd/maps/scx200_docflash.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1086: FILE: drivers/mtd/maps/scx200_docflash.c:1:
+/* linux/drivers/mtd/maps/scx200_docflash.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1087: FILE: drivers/mtd/maps/scx200_docflash.c:2:
+/* linux/drivers/mtd/maps/scx200_docflash.c 
+

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1097: FILE: drivers/mtd/maps/scx200_docflash.c:12:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: drivers/mtd/maps/scx200_docflash.c:30:
+/* partition_info gives details on the logical partitions that the split the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1117: FILE: drivers/mtd/maps/scx200_docflash.c:32:
+ * device. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1119: FILE: drivers/mtd/maps/scx200_docflash.c:34:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1120: FILE: drivers/mtd/maps/scx200_docflash.c:35:
+^I^Iname: "scx200 Boot kernel", $

WARNING:INDENTED_LABEL: labels should not be indented
#1120: FILE: drivers/mtd/maps/scx200_docflash.c:35:
+		name: "scx200 Boot kernel", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1121: FILE: drivers/mtd/maps/scx200_docflash.c:36:
+^I^Ioffset: 0, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1122: FILE: drivers/mtd/maps/scx200_docflash.c:37:
+^I^Isize: ^I0xc0000$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1122: FILE: drivers/mtd/maps/scx200_docflash.c:37:
+		size: 	0xc0000
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1124: FILE: drivers/mtd/maps/scx200_docflash.c:39:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: drivers/mtd/maps/scx200_docflash.c:40:
+^I^Iname: "scx200 Low BIOS", $

WARNING:INDENTED_LABEL: labels should not be indented
#1125: FILE: drivers/mtd/maps/scx200_docflash.c:40:
+		name: "scx200 Low BIOS", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/mtd/maps/scx200_docflash.c:41:
+^I^Ioffset: 0xc0000, $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1126: FILE: drivers/mtd/maps/scx200_docflash.c:41:
+		offset: 0xc0000, 
 		      ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1127: FILE: drivers/mtd/maps/scx200_docflash.c:42:
+^I^Isize: ^I0x40000$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1127: FILE: drivers/mtd/maps/scx200_docflash.c:42:
+		size: 	0x40000
 		    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: drivers/mtd/maps/scx200_docflash.c:44:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1130: FILE: drivers/mtd/maps/scx200_docflash.c:45:
+^I^Iname: "scx200 File system", $

WARNING:INDENTED_LABEL: labels should not be indented
#1130: FILE: drivers/mtd/maps/scx200_docflash.c:45:
+		name: "scx200 File system", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1131: FILE: drivers/mtd/maps/scx200_docflash.c:46:
+^I^Ioffset: 0x100000, $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1131: FILE: drivers/mtd/maps/scx200_docflash.c:46:
+		offset: 0x100000, 
 		      ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1132: FILE: drivers/mtd/maps/scx200_docflash.c:47:
+^I^Isize: ^I~0^I/* calculate from flash size */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1132: FILE: drivers/mtd/maps/scx200_docflash.c:47:
+		size: 	~0	/* calculate from flash size */
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1132: FILE: drivers/mtd/maps/scx200_docflash.c:47:
+		size: 	~0	/* calculate from flash size */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1134: FILE: drivers/mtd/maps/scx200_docflash.c:49:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: drivers/mtd/maps/scx200_docflash.c:50:
+^I^Iname: "scx200 High BIOS", $

WARNING:INDENTED_LABEL: labels should not be indented
#1135: FILE: drivers/mtd/maps/scx200_docflash.c:50:
+		name: "scx200 High BIOS", 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1136: FILE: drivers/mtd/maps/scx200_docflash.c:51:
+^I^Ioffset: ~0, ^I/* calculate from flash size */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1136: FILE: drivers/mtd/maps/scx200_docflash.c:51:
+		offset: ~0, 	/* calculate from flash size */
 		      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1136: FILE: drivers/mtd/maps/scx200_docflash.c:51:
+		offset: ~0, 	/* calculate from flash size */

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1137: FILE: drivers/mtd/maps/scx200_docflash.c:52:
+		size: 0x80000
 		    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1140: FILE: drivers/mtd/maps/scx200_docflash.c:55:
+};
+#define NUM_PARTITIONS (sizeof(partition_info)/sizeof(partition_info[0]))

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(partition_info)
#1140: FILE: drivers/mtd/maps/scx200_docflash.c:55:
+#define NUM_PARTITIONS (sizeof(partition_info)/sizeof(partition_info[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1140: FILE: drivers/mtd/maps/scx200_docflash.c:55:
+#define NUM_PARTITIONS (sizeof(partition_info)/sizeof(partition_info[0]))
                                               ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1152: FILE: drivers/mtd/maps/scx200_docflash.c:67:
+static void scx200_docflash_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1160: FILE: drivers/mtd/maps/scx200_docflash.c:75:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1166: FILE: drivers/mtd/maps/scx200_docflash.c:81:
+	mb();

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1169: FILE: drivers/mtd/maps/scx200_docflash.c:84:
+static void scx200_docflash_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)

WARNING:INDENTED_LABEL: labels should not be indented
#1175: FILE: drivers/mtd/maps/scx200_docflash.c:90:
+	name: "scx200 DOCCS flash",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1176: FILE: drivers/mtd/maps/scx200_docflash.c:91:
+	read8: scx200_docflash_read8,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1176: FILE: drivers/mtd/maps/scx200_docflash.c:91:
+	read8: scx200_docflash_read8,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1177: FILE: drivers/mtd/maps/scx200_docflash.c:92:
+	read16: scx200_docflash_read16,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1177: FILE: drivers/mtd/maps/scx200_docflash.c:92:
+	read16: scx200_docflash_read16,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1178: FILE: drivers/mtd/maps/scx200_docflash.c:93:
+	copy_from: scx200_docflash_copy_from,
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#1178: FILE: drivers/mtd/maps/scx200_docflash.c:93:
+	copy_from: scx200_docflash_copy_from,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1179: FILE: drivers/mtd/maps/scx200_docflash.c:94:
+	write8: scx200_docflash_write8,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1179: FILE: drivers/mtd/maps/scx200_docflash.c:94:
+	write8: scx200_docflash_write8,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1180: FILE: drivers/mtd/maps/scx200_docflash.c:95:
+	write16: scx200_docflash_write16,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1180: FILE: drivers/mtd/maps/scx200_docflash.c:95:
+	write16: scx200_docflash_write16,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1181: FILE: drivers/mtd/maps/scx200_docflash.c:96:
+	copy_to: scx200_docflash_copy_to
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1181: FILE: drivers/mtd/maps/scx200_docflash.c:96:
+	copy_to: scx200_docflash_copy_to

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1186: FILE: drivers/mtd/maps/scx200_docflash.c:101:
+	unsigned doccs_base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1187: FILE: drivers/mtd/maps/scx200_docflash.c:102:
+	unsigned doccs_ctrl;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1188: FILE: drivers/mtd/maps/scx200_docflash.c:103:
+	unsigned pmr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scx200_f0_pdev"
#1190: FILE: drivers/mtd/maps/scx200_docflash.c:105:
+	if (scx200_f0_pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1191: FILE: drivers/mtd/maps/scx200_docflash.c:106:
+		printk(KERN_ERR "%s: Not a SCx200 CPU\n", name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1196: FILE: drivers/mtd/maps/scx200_docflash.c:111:
+           SCx200 and use this to set up our flash mapping.  It might$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1196: FILE: drivers/mtd/maps/scx200_docflash.c:111:
+	/* read the current configuration for the DOCCS from the
+           SCx200 and use this to set up our flash mapping.  It might

ERROR:CODE_INDENT: code indent should use tabs where possible
#1197: FILE: drivers/mtd/maps/scx200_docflash.c:112:
+           be a better idea to ask the Linux kernel for a memory$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1198: FILE: drivers/mtd/maps/scx200_docflash.c:113:
+           region where the flash can be mapped instead of relying on$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1199: FILE: drivers/mtd/maps/scx200_docflash.c:114:
+           the BIOS to do it correctly */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1199: FILE: drivers/mtd/maps/scx200_docflash.c:114:
+           the BIOS to do it correctly */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1204: FILE: drivers/mtd/maps/scx200_docflash.c:119:
+	scx200_docflash_map.size = ((doccs_ctrl & 0x1fff) << 13) + (1<<13);
 	                                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1206: FILE: drivers/mtd/maps/scx200_docflash.c:121:
+	if (pmr & (1<<6))	/* is the flash 16 or 8 bits wide */
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: drivers/mtd/maps/scx200_docflash.c:126:
+       ^Iprintk(KERN_INFO "%s: DOCCS mapped at 0x%x, size 0x%lx, width %d\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1211: FILE: drivers/mtd/maps/scx200_docflash.c:126:
+       ^Iprintk(KERN_INFO "%s: DOCCS mapped at 0x%x, size 0x%lx, width %d\n", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1211: FILE: drivers/mtd/maps/scx200_docflash.c:126:
+       ^Iprintk(KERN_INFO "%s: DOCCS mapped at 0x%x, size 0x%lx, width %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1211: FILE: drivers/mtd/maps/scx200_docflash.c:126:
+       ^Iprintk(KERN_INFO "%s: DOCCS mapped at 0x%x, size 0x%lx, width %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1211: FILE: drivers/mtd/maps/scx200_docflash.c:126:
+       	printk(KERN_INFO "%s: DOCCS mapped at 0x%x, size 0x%lx, width %d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: drivers/mtd/maps/scx200_docflash.c:127:
+^I       name, doccs_base, $

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1215: FILE: drivers/mtd/maps/scx200_docflash.c:130:
+	scx200_docflash_map.map_priv_1 = (unsigned long)ioremap(doccs_base, scx200_docflash_map.size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1217: FILE: drivers/mtd/maps/scx200_docflash.c:132:
+		printk(KERN_ERR "%s: failed to ioremap the flash\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1223: FILE: drivers/mtd/maps/scx200_docflash.c:138:
+		printk(KERN_ERR "%s: unable to detect flash\n", name);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1231: FILE: drivers/mtd/maps/scx200_docflash.c:146:
+		partition_info[3].offset = mymtd->size-partition_info[3].size;
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1232: FILE: drivers/mtd/maps/scx200_docflash.c:147:
+		partition_info[2].size = partition_info[3].offset-partition_info[2].offset;
 		                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1258: FILE: drivers/mtd/maps/scx200_docflash.c:173:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1259: FILE: drivers/mtd/maps/scx200_docflash.c:174:
+        compile-command: "make -k -C ../../.. SUBDIRS=drivers/mtd/maps modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1260: FILE: drivers/mtd/maps/scx200_docflash.c:175:
+        c-basic-offset: 8$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1283: FILE: include/linux/scx200.h:1:
+#include <linux/pci.h>

WARNING:TYPO_SPELLING: 'Configuation' may be misspelled - perhaps 'Configuration'?
#1286: FILE: include/linux/scx200.h:4:
+/* Configuation block */
    ^^^^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1294: FILE: include/linux/scx200.h:12:
+extern unsigned scx200_config_block;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1299: FILE: include/linux/scx200.h:17:
+void scx200_gpio_dump(unsigned index);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1301: FILE: include/linux/scx200.h:19:
+extern unsigned scx200_gpio_base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1307: FILE: include/linux/scx200.h:25:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1307: FILE: include/linux/scx200.h:25:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5
                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_BANK>
#1307: FILE: include/linux/scx200.h:25:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1308: FILE: include/linux/scx200.h:26:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1308: FILE: include/linux/scx200.h:26:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank
                                                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_IOADDR>
#1308: FILE: include/linux/scx200.h:26:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1309: FILE: include/linux/scx200.h:27:
+#define __SCx200_GPIO_SHADOW u32 *shadow = scx200_gpio_shadow+bank
                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_SHADOW>
#1309: FILE: include/linux/scx200.h:27:
+#define __SCx200_GPIO_SHADOW u32 *shadow = scx200_gpio_shadow+bank

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_INDEX>
#1310: FILE: include/linux/scx200.h:28:
+#define __SCx200_GPIO_INDEX index &= 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1310: FILE: include/linux/scx200.h:28:
+#define __SCx200_GPIO_INDEX index &= 31

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1312: FILE: include/linux/scx200.h:30:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))
                                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1312: FILE: include/linux/scx200.h:30:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))
                                                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_OUT>
#1312: FILE: include/linux/scx200.h:30:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1312: FILE: include/linux/scx200.h:30:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1316: FILE: include/linux/scx200.h:34:
+static inline int scx200_gpio_get(int index) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1320: FILE: include/linux/scx200.h:38:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1321: FILE: include/linux/scx200.h:39:
+	return (inl(ioaddr) & (1<<index)) ? 1 : 0;
 	                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1325: FILE: include/linux/scx200.h:43:
+/* return the value driven on the GPIO signal (the value that will be
+   driven if the GPIO is configured as an output, it might not be the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1326: FILE: include/linux/scx200.h:44:
+   state of the GPIO right now if the GPIO is configured as an input) */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1328: FILE: include/linux/scx200.h:46:
+static inline int scx200_gpio_current(int index) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: include/linux/scx200.h:47:
+        __SCx200_GPIO_BANK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: include/linux/scx200.h:47:
+        __SCx200_GPIO_BANK;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1331: FILE: include/linux/scx200.h:49:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1332: FILE: include/linux/scx200.h:50:
+	return (scx200_gpio_shadow[bank] & (1<<index)) ? 1 : 0;
 	                                     ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1337: FILE: include/linux/scx200.h:55:
+static inline void scx200_gpio_set_high(int index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1348: FILE: include/linux/scx200.h:66:
+static inline void scx200_gpio_set_low(int index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1359: FILE: include/linux/scx200.h:77:
+static inline void scx200_gpio_set(int index, int state) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1372: FILE: include/linux/scx200.h:90:
+static inline void scx200_gpio_change(int index) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1388: FILE: include/linux/scx200.h:106:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: include/linux/scx200.h:107:
+        compile-command: "cd ../../.. && ./build.sh fast "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1390: FILE: include/linux/scx200.h:108:
+        c-basic-offset: 8$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1400: FILE: init/main.c:97:
+extern int scx200_init(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474256.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 122 errors, 183 warnings, 49 checks, 1301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474256.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
