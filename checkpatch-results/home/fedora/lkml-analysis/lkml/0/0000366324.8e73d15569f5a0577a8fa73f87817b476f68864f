ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void sppp_flush_xmit() should probably be void sppp_flush_xmit(void)
#96: FILE: drivers/net/wan/syncppp.c:164:
+static void sppp_flush_xmit()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#99: FILE: drivers/net/wan/syncppp.c:167:
+	struct sk_buff *skb;
+	while ((skb = skb_dequeue(&tx_queue)) != NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/net/wan/syncppp.c:253:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#207: FILE: drivers/net/wan/syncppp.c:347:
+		printk (KERN_WARNING "%s: invalid input packet <0x%x 0x%x 0x%x>\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: drivers/net/wan/syncppp.c:347:
+		printk (KERN_WARNING "%s: invalid input packet <0x%x 0x%x 0x%x>\n",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/net/wan/syncppp.c:348:
+			dev->name, h->address, h->control, ntohs (h->protocol));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: drivers/net/wan/syncppp.c:791:
 
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#364: FILE: drivers/net/wan/syncppp.c:1448:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#373: FILE: drivers/net/wan/syncppp.c:1457:
+	.data   = (void*)1, /* must be non-NULL to indicate 'new' protocol */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366324.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 1 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366324.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
