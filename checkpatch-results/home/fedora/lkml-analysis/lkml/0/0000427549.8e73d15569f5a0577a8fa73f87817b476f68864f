WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
diff -uar linux-2.5.40/drivers/block/DAC960.h linux-2.5/drivers/block/DAC960.h

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#31: FILE: drivers/block/DAC960.h:2572:
+#warning I am a non-portable driver, please convert me to use the Documentation/DMA-mapping.txt interfaces

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#34: FILE: drivers/block/DAC960.h:2575:
+/*
+  Virtual_to_Bus32 maps from Kernel Virtual Addresses to 32 Bit PCI Bus

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_BusAddress32_T>
#38: FILE: drivers/block/DAC960.h:2579:
+static inline DAC960_BusAddress32_T Virtual_to_Bus32(void *VirtualAddress)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Virtual_to_Bus32>
#38: FILE: drivers/block/DAC960.h:2579:
+static inline DAC960_BusAddress32_T Virtual_to_Bus32(void *VirtualAddress)

CHECK:CAMELCASE: Avoid CamelCase: <VirtualAddress>
#38: FILE: drivers/block/DAC960.h:2579:
+static inline DAC960_BusAddress32_T Virtual_to_Bus32(void *VirtualAddress)

CHECK:SPACING: No space is necessary after a cast
#40: FILE: drivers/block/DAC960.h:2581:
+  return (DAC960_BusAddress32_T) virt_to_bus(VirtualAddress);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: drivers/block/DAC960.h:2581:
+  return (DAC960_BusAddress32_T) virt_to_bus(VirtualAddress);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#43: FILE: drivers/block/DAC960.h:2584:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#45: FILE: drivers/block/DAC960.h:2586:
+/*
+  Bus32_to_Virtual maps from 32 Bit PCI Bus Addresses to Kernel Virtual

CHECK:CAMELCASE: Avoid CamelCase: <Bus32_to_Virtual>
#49: FILE: drivers/block/DAC960.h:2590:
+static inline void *Bus32_to_Virtual(DAC960_BusAddress32_T BusAddress)

CHECK:CAMELCASE: Avoid CamelCase: <BusAddress>
#49: FILE: drivers/block/DAC960.h:2590:
+static inline void *Bus32_to_Virtual(DAC960_BusAddress32_T BusAddress)

CHECK:SPACING: No space is necessary after a cast
#51: FILE: drivers/block/DAC960.h:2592:
+  return (void *) bus_to_virt(BusAddress);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: drivers/block/DAC960.h:2592:
+  return (void *) bus_to_virt(BusAddress);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#54: FILE: drivers/block/DAC960.h:2595:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#56: FILE: drivers/block/DAC960.h:2597:
+/*
+  Virtual_to_Bus64 maps from Kernel Virtual Addresses to 64 Bit PCI Bus

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_BusAddress64_T>
#60: FILE: drivers/block/DAC960.h:2601:
+static inline DAC960_BusAddress64_T Virtual_to_Bus64(void *VirtualAddress)

CHECK:CAMELCASE: Avoid CamelCase: <Virtual_to_Bus64>
#60: FILE: drivers/block/DAC960.h:2601:
+static inline DAC960_BusAddress64_T Virtual_to_Bus64(void *VirtualAddress)

CHECK:SPACING: No space is necessary after a cast
#62: FILE: drivers/block/DAC960.h:2603:
+  return (DAC960_BusAddress64_T) virt_to_bus(VirtualAddress);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: drivers/block/DAC960.h:2603:
+  return (DAC960_BusAddress64_T) virt_to_bus(VirtualAddress);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/ieee1394/ieee1394_core.c:393:
+        schedule_task(&host->timeout_tq);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/ieee1394/ieee1394_core.c:393:
+        schedule_task(&host->timeout_tq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: drivers/ieee1394/ieee1394_core.c:784:
+                schedule_task(&host->timeout_tq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/ieee1394/ieee1394_core.c:784:
+                schedule_task(&host->timeout_tq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/ieee1394/ieee1394_core.h:72:
+        struct list_head complete_tq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/ieee1394/ieee1394_core.h:72:
+        struct list_head complete_tq;$

CHECK:CAMELCASE: Avoid CamelCase: <DivasTask>
#213: FILE: drivers/isdn/eicon/linsys.c:87:
+	schedule_task(&DivasTask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/isdn/hisax/jade.c:141:
+    schedule_task(&bcs->tqueue);$

CHECK:SPACING: No space is necessary after a cast
#530: FILE: drivers/isdn/hysdn/hysdn_net.c:172:
+		schedule_task(&((hysdn_card *) dev->priv)->irq_queue);

CHECK:CAMELCASE: Avoid CamelCase: <mptscsih_dvTask>
#642: FILE: drivers/message/fusion/mptscsih.c:2026:
+						schedule_task(&mptscsih_dvTask);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: drivers/net/plip.c:381:
+^Iif (nl->is_deferred) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#733: FILE: drivers/net/plip.c:445:
+		schedule_task (&nl->timer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#799: FILE: drivers/net/plip.c:1129:
+		schedule_task (&nl->timer);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#823: FILE: drivers/scsi/fdomain.c:274:
 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: drivers/scsi/imm.c:1109:
+    schedule_task(&imm_hosts[host_no].imm_tq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: drivers/scsi/ppa.c:113:
+    struct Scsi_Host *hreg = NULL;$

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#885: FILE: drivers/scsi/ppa.c:113:
+    struct Scsi_Host *hreg = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/scsi/ppa.c:990:
+    schedule_task(&ppa_hosts[host_no].ppa_tq);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#965: FILE: include/asm-i386/system.h:328:
+extern void __global_cli(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#966: FILE: include/asm-i386/system.h:329:
+extern void __global_sti(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#967: FILE: include/asm-i386/system.h:330:
+extern unsigned long __global_save_flags(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#968: FILE: include/asm-i386/system.h:331:
+extern void __global_restore_flags(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#968: FILE: include/asm-i386/system.h:331:
+extern void __global_restore_flags(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#971: FILE: include/asm-i386/system.h:334:
+#define save_flags(x) ((x)=__global_save_flags())
                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#983: FILE: include/asm-i386/system.h:346:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427549.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 18 warnings, 22 checks, 826 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427549.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
