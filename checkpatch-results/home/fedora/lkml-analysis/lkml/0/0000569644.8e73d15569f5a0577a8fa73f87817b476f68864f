WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#32: 
As you know we at MontaVista are working on a fully preemptable kernel. 
                                                    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#ifdef CONFIG_PREEMPT

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#define preempt_lock() ... definition...

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#define preempt_unlock() ...definition...

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#define preempt_lock()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#define preempt_unlock()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#ifdef CONFIG_SMP

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#define _spin_lock(x) __spin_lock(x)  /* __spin_lock(x) to be todays SMP

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#define _spin_unlock(x) __spin_unlock(x)  /* __spin_unlock(x) to be

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#define _spin_lock()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#define _spin_unlock()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#define spin_lock(x) do{ preempt_lock(); _spin_lock(x);} while (0)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#define spin_unlock(x) do{ _spin_unlock(x); preempt_unlock();} while (0)

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#84: 
diff -urP -X patch.exclude linux-2.4.0-test6-kb-p-r-i-6-1.4/drivers/ide/ide.c linux/drivers/ide/ide.c

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#144: FILE: include/linux/spinlock.h:11:
+#define spin_lock_irqsave(lock, flags)	do { local_irq_save(flags); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#145: FILE: include/linux/spinlock.h:12:
+#define read_lock_irqsave(lock, flags)	do { local_irq_save(flags); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#146: FILE: include/linux/spinlock.h:13:
+#define write_lock_irqsave(lock, flags)	do { local_irq_save(flags); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#148: FILE: include/linux/spinlock.h:15:
+#define spin_unlock_irqrestore(lock, flags)	do { local_irq_restore(flags);\
+                                                   } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: include/linux/spinlock.h:16:
+                                                   } while (0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: include/linux/spinlock.h:16:
+                                                   } while (0)$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#150: FILE: include/linux/spinlock.h:17:
+#define read_unlock_irqrestore(lock, flags)	do { local_irq_restore(flags);\
+                                                   } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: include/linux/spinlock.h:18:
+                                                   } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/linux/spinlock.h:18:
+                                                   } while (0)$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#152: FILE: include/linux/spinlock.h:19:
+#define write_unlock_irqrestore(lock, flags)    do { local_irq_restore(flags); \
+                                                   } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: include/linux/spinlock.h:20:
+                                                   } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: include/linux/spinlock.h:20:
+                                                   } while (0)$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#155: FILE: include/linux/spinlock.h:22:
+#define spin_lock_irq(lock)		do { local_irq_disable(); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#156: FILE: include/linux/spinlock.h:23:
+#define read_lock_irq(lock)		do { local_irq_disable(); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#157: FILE: include/linux/spinlock.h:24:
+#define write_lock_irq(lock)		do { local_irq_disable(); } while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#159: FILE: include/linux/spinlock.h:26:
+#define spin_unlock_irq(lock)		do { local_irq_enable();} while (0)
                              		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#159: FILE: include/linux/spinlock.h:26:
+#define spin_unlock_irq(lock)		do { local_irq_enable();} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#160: FILE: include/linux/spinlock.h:27:
+#define read_unlock_irq(lock)		do { local_irq_enable();} while (0)
                              		                       ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#160: FILE: include/linux/spinlock.h:27:
+#define read_unlock_irq(lock)		do { local_irq_enable();} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#161: FILE: include/linux/spinlock.h:28:
+#define write_unlock_irq(lock)		do { local_irq_enable();} while (0)
                               		                       ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#161: FILE: include/linux/spinlock.h:28:
+#define write_unlock_irq(lock)		do { local_irq_enable();} while (0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: include/linux/spinlock.h:30:
+#ifdef BH_PREEMPT     /* Someday this might be possible, but they are too $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: include/linux/spinlock.h:31:
+                       * confused right now.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: include/linux/spinlock.h:32:
+                       */$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#166: FILE: include/linux/spinlock.h:33:
+#define spin_lock_bh(lock)		do { local_bh_disable();} while (0)
                           		                       ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#166: FILE: include/linux/spinlock.h:33:
+#define spin_lock_bh(lock)		do { local_bh_disable();} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#167: FILE: include/linux/spinlock.h:34:
+#define read_lock_bh(lock)		do { local_bh_disable();  } while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#168: FILE: include/linux/spinlock.h:35:
+#define write_lock_bh(lock)		do { local_bh_disable();} while (0)
                            		                       ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#168: FILE: include/linux/spinlock.h:35:
+#define write_lock_bh(lock)		do { local_bh_disable();} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#170: FILE: include/linux/spinlock.h:37:
+#define spin_unlock_bh(lock)		do { local_bh_enable();} while (0)
                             		                      ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#170: FILE: include/linux/spinlock.h:37:
+#define spin_unlock_bh(lock)		do { local_bh_enable();} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#171: FILE: include/linux/spinlock.h:38:
+#define read_unlock_bh(lock)		do { local_bh_enable();} while (0)
                             		                      ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#171: FILE: include/linux/spinlock.h:38:
+#define read_unlock_bh(lock)		do { local_bh_enable();} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#172: FILE: include/linux/spinlock.h:39:
+#define write_unlock_bh(lock)		do { local_bh_enable();} while (0)
                              		                      ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#172: FILE: include/linux/spinlock.h:39:
+#define write_unlock_bh(lock)		do { local_bh_enable();} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: include/linux/spinlock.h:62:
+                                             spin_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: include/linux/spinlock.h:62:
+                                             spin_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: include/linux/spinlock.h:62:
+                                             spin_lock(lock); } while (0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: include/linux/spinlock.h:64:
+                                             read_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: include/linux/spinlock.h:64:
+                                             read_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#197: FILE: include/linux/spinlock.h:64:
+                                             read_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: include/linux/spinlock.h:66:
+                                             write_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: include/linux/spinlock.h:66:
+                                             write_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#199: FILE: include/linux/spinlock.h:66:
+                                             write_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: include/linux/spinlock.h:68:
+                                             local_irq_restore(flags);}while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: include/linux/spinlock.h:68:
+                                             local_irq_restore(flags);}while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#201: FILE: include/linux/spinlock.h:68:
+                                             local_irq_restore(flags);}while (0)
                                                                      ^

ERROR:SPACING: space required after that close brace '}'
#201: FILE: include/linux/spinlock.h:68:
+                                             local_irq_restore(flags);}while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#201: FILE: include/linux/spinlock.h:68:
+                                             local_irq_restore(flags);}while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: include/linux/spinlock.h:70:
+                                             local_irq_restore(flags);}while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: include/linux/spinlock.h:70:
+                                             local_irq_restore(flags);}while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#203: FILE: include/linux/spinlock.h:70:
+                                             local_irq_restore(flags);}while (0)
                                                                      ^

ERROR:SPACING: space required after that close brace '}'
#203: FILE: include/linux/spinlock.h:70:
+                                             local_irq_restore(flags);}while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#203: FILE: include/linux/spinlock.h:70:
+                                             local_irq_restore(flags);}while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: include/linux/spinlock.h:72:
+                                             local_irq_restore(flags);}while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: include/linux/spinlock.h:72:
+                                             local_irq_restore(flags);}while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#205: FILE: include/linux/spinlock.h:72:
+                                             local_irq_restore(flags);}while (0)
                                                                      ^

ERROR:SPACING: space required after that close brace '}'
#205: FILE: include/linux/spinlock.h:72:
+                                             local_irq_restore(flags);}while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#205: FILE: include/linux/spinlock.h:72:
+                                             local_irq_restore(flags);}while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#206: FILE: include/linux/spinlock.h:73:
+#define spin_unlock_noirqrestore(lock)  do { spin_unlock(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#207: FILE: include/linux/spinlock.h:74:
+#define read_unlock_noirqrestore(lock)  do { read_unlock(lock); } while (0)

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: include/linux/spinlock.h:75:
+#define write_unlock_noirqrestore(lock) do { write_unlock(lock); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#208: FILE: include/linux/spinlock.h:75:
+#define write_unlock_noirqrestore(lock) do { write_unlock(lock); } while(0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: include/linux/spinlock.h:78:
+                                     spin_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: include/linux/spinlock.h:78:
+                                     spin_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#211: FILE: include/linux/spinlock.h:78:
+                                     spin_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: include/linux/spinlock.h:80:
+                                     read_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/linux/spinlock.h:80:
+                                     read_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#213: FILE: include/linux/spinlock.h:80:
+                                     read_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: include/linux/spinlock.h:82:
+                                     write_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: include/linux/spinlock.h:82:
+                                     write_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#215: FILE: include/linux/spinlock.h:82:
+                                     write_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: include/linux/spinlock.h:84:
+                                     local_irq_enable();} while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/spinlock.h:84:
+                                     local_irq_enable();} while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#217: FILE: include/linux/spinlock.h:84:
+                                     local_irq_enable();} while (0)
                                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#217: FILE: include/linux/spinlock.h:84:
+                                     local_irq_enable();} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/spinlock.h:86:
+                                     local_irq_enable();} while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/spinlock.h:86:
+                                     local_irq_enable();} while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#219: FILE: include/linux/spinlock.h:86:
+                                     local_irq_enable();} while (0)
                                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#219: FILE: include/linux/spinlock.h:86:
+                                     local_irq_enable();} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: include/linux/spinlock.h:88:
+                                     local_irq_enable();} while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/linux/spinlock.h:88:
+                                     local_irq_enable();} while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#221: FILE: include/linux/spinlock.h:88:
+                                     local_irq_enable();} while (0)
                                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#221: FILE: include/linux/spinlock.h:88:
+                                     local_irq_enable();} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#222: FILE: include/linux/spinlock.h:89:
+#define spin_unlock_noirq(lock)	do { spin_unlock(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#223: FILE: include/linux/spinlock.h:90:
+#define read_unlock_noirq(lock)	do { read_unlock(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#224: FILE: include/linux/spinlock.h:91:
+#define write_unlock_noirq(lock) do { write_unlock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: include/linux/spinlock.h:96:
+                                     spin_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: include/linux/spinlock.h:96:
+                                     spin_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#229: FILE: include/linux/spinlock.h:96:
+                                     spin_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: include/linux/spinlock.h:98:
+                                     read_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: include/linux/spinlock.h:98:
+                                     read_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#231: FILE: include/linux/spinlock.h:98:
+                                     read_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: include/linux/spinlock.h:100:
+                                     write_lock(lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: include/linux/spinlock.h:100:
+                                     write_lock(lock); } while (0)$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: include/linux/spinlock.h:100:
+                                     write_lock(lock); } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: include/linux/spinlock.h:102:
+                                     local_bh_enable();} while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: include/linux/spinlock.h:102:
+                                     local_bh_enable();} while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#235: FILE: include/linux/spinlock.h:102:
+                                     local_bh_enable();} while (0)
                                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: include/linux/spinlock.h:102:
+                                     local_bh_enable();} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: include/linux/spinlock.h:104:
+                                     local_bh_enable();} while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: include/linux/spinlock.h:104:
+                                     local_bh_enable();} while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#237: FILE: include/linux/spinlock.h:104:
+                                     local_bh_enable();} while (0)
                                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#237: FILE: include/linux/spinlock.h:104:
+                                     local_bh_enable();} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: include/linux/spinlock.h:106:
+                                     local_bh_enable();} while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/linux/spinlock.h:106:
+                                     local_bh_enable();} while (0)$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#239: FILE: include/linux/spinlock.h:106:
+                                     local_bh_enable();} while (0)
                                                       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#239: FILE: include/linux/spinlock.h:106:
+                                     local_bh_enable();} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#240: FILE: include/linux/spinlock.h:107:
+#define spin_unlock_nobh(lock)	do { spin_unlock(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#241: FILE: include/linux/spinlock.h:108:
+#define read_unlock_nobh(lock)	do { read_unlock(lock); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#242: FILE: include/linux/spinlock.h:109:
+#define write_unlock_nobh(lock)	do { write_unlock(lock); } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569644.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 63 errors, 66 warnings, 0 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569644.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
