WARNING:REPEATED_WORD: Possible repeated word: 'that'
#47: 
Note that that repository also contains Docuementation changes (and is 

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
  Change refcounting to use the driver's owner field, instead of its own refcount.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#68: 
--- a/drivers/base/driver.c	Mon Jul 15 17:40:36 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#91: FILE: drivers/base/driver.c:79:
+	list_add_tail(&drv->g_list,&driver_list);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#91: FILE: drivers/base/driver.c:79:
+	list_add_tail(&drv->g_list,&driver_list);
 	                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: drivers/base/driver.c:87:
+void remove_driver(struct device_driver * drv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: drivers/base/driver.c:106:
+struct device_driver * get_driver(struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: drivers/base/driver.c:106:
+struct device_driver * get_driver(struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/base/driver.c:108:
+	struct device_driver * d;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#129: FILE: drivers/base/driver.c:109:
+	struct list_head * node;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#132: FILE: drivers/base/driver.c:112:
+	list_for_each(node,&driver_list) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#132: FILE: drivers/base/driver.c:112:
+	list_for_each(node,&driver_list) {
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: drivers/base/driver.c:113:
+		d = list_entry(node,struct device_driver,g_list);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: drivers/base/driver.c:113:
+		d = list_entry(node,struct device_driver,g_list);
 		                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <GoAhead>
#135: FILE: drivers/base/driver.c:115:
+			goto GoAhead;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#171: FILE: include/linux/device.h:93:
+	struct module		* owner;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: include/linux/device.h:113:
+extern void remove_driver(struct device_driver * drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/linux/device.h:113:
+extern void remove_driver(struct device_driver * drv);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: include/linux/device.h:115:
+extern struct device_driver * get_driver(struct device_driver * drv);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: include/linux/device.h:115:
+extern struct device_driver * get_driver(struct device_driver * drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: include/linux/device.h:115:
+extern struct device_driver * get_driver(struct device_driver * drv);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447101.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 2 warnings, 3 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447101.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
