WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> > We did look at that. Cases RUSAGE_CHILDREN and RUSAGE_SELF are always called by the 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#89: FILE: arch/mips/kernel/irixsig.c:543:
+extern int getrusage_both(struct task_struct *, struct rusage __user *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#89: FILE: arch/mips/kernel/irixsig.c:543:
+extern int getrusage_both(struct task_struct *, struct rusage __user *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rusage __user *' should also have an identifier name
#89: FILE: arch/mips/kernel/irixsig.c:543:
+extern int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#120: FILE: arch/mips/kernel/sysirix.c:237:
+extern int getrusage_self(struct rusage __user *ru);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#121: FILE: arch/mips/kernel/sysirix.c:238:
+extern int getrusage_children(struct rusage __user *ru);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#149: FILE: kernel/exit.c:41:
+int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#149: FILE: kernel/exit.c:41:
+int getrusage_both(struct task_struct *, struct rusage __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rusage __user *' should also have an identifier name
#149: FILE: kernel/exit.c:41:
+int getrusage_both(struct task_struct *, struct rusage __user *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: kernel/sys.c:1680:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'fileds' may be misspelled - perhaps 'fields'?
#237: FILE: kernel/sys.c:1697:
+ * we avoid the race by taking the siglock to read the c* fileds.
                                                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#253: FILE: kernel/sys.c:1709:
+	memset((char *) &r, 0, sizeof (r));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: kernel/sys.c:1709:
+	struct task_struct *p = current;
+	memset((char *) &r, 0, sizeof (r));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: kernel/sys.c:1709:
+	memset((char *) &r, 0, sizeof (r));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#255: FILE: kernel/sys.c:1711:
 	if (unlikely(!p->signal))
+		 return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

WARNING:TABSTOP: Statements should start on a tabstop
#257: FILE: kernel/sys.c:1712:
+		 return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

CHECK:SPACING: No space is necessary after a cast
#333: FILE: kernel/sys.c:1740:
+	memset((char *) &r, 0, sizeof (r));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: kernel/sys.c:1740:
+	memset((char *) &r, 0, sizeof (r));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#335: FILE: kernel/sys.c:1742:
+	if (unlikely(!p->signal))
+		 return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

WARNING:TABSTOP: Statements should start on a tabstop
#336: FILE: kernel/sys.c:1743:
+		 return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#368: FILE: kernel/sys.c:1774:
 
+

CHECK:SPACING: No space is necessary after a cast
#379: FILE: kernel/sys.c:1782:
+	memset((char *) &r, 0, sizeof (r));

WARNING:LINE_SPACING: Missing a blank line after declarations
#379: FILE: kernel/sys.c:1782:
+	struct task_struct *t;
+	memset((char *) &r, 0, sizeof (r));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: kernel/sys.c:1782:
+	memset((char *) &r, 0, sizeof (r));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#381: FILE: kernel/sys.c:1784:
+	if (unlikely(!p->signal))
+		 return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

WARNING:TABSTOP: Statements should start on a tabstop
#382: FILE: kernel/sys.c:1785:
+		 return copy_to_user(ru, &r, sizeof(r)) ? -EFAULT : 0;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#429: FILE: kernel/sys.c:1829:
+	switch (who) {
+		case RUSAGE_SELF:
[...]
+		case RUSAGE_CHILDREN:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 21 warnings, 4 checks, 332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000122678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
