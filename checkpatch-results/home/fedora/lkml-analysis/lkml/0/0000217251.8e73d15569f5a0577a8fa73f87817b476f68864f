ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: arch/um/kernel/process.c:331:
+		if(!WIFSTOPPED(status) || (WSTOPSIG(status) != SIGTRAP + 0x80))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/um/kernel/skas/process.c:76:
+^I^Iif((err < 0) || !WIFSTOPPED(status) || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err < 0'
#132: FILE: arch/um/kernel/skas/process.c:76:
+		if((err < 0) || !WIFSTOPPED(status) || 
+		   (WSTOPSIG(status) != SIGTRAP + 0x80))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: arch/um/kernel/skas/process.c:76:
+		if((err < 0) || !WIFSTOPPED(status) || 

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: arch/um/os-Linux/user_syms.c:39:
+EXPORT_SYMBOL(vsyscall_end);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#273: FILE: include/asm-um/processor-i386.h:28:
+	({ void *pc; __asm__("movl $1f,%0\n1:":"=g" (pc)); pc; })
 	                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: include/asm-um/thread_info.h:50:
+        ti = (struct thread_info *) (((unsigned long) &ti) & ~mask);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#286: FILE: include/asm-um/thread_info.h:50:
+        ti = (struct thread_info *) (((unsigned long) &ti) & ~mask);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: include/asm-um/thread_info.h:50:
+        ti = (struct thread_info *) (((unsigned long) &ti) & ~mask);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217251.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 2 warnings, 3 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217251.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
