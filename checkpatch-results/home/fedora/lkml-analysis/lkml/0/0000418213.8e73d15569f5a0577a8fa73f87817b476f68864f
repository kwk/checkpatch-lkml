WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
Patch-Name: Privacy Extensions for Stateless Address Autoconfiguration in IPv6

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'temorary' may be misspelled - perhaps 'temporary'?
#80: FILE: networking/ip-sysctl.txt:629:
+	Preferred lifetime (in seconds) for temorary addresses.
 	                                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: networking/ip-sysctl.txt:634:
+^Ithat ensures that clients don't synchronize with each $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: networking/ip-sysctl.txt:638:
+^I$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: linux/sysctl.h:387:
+	NET_IPV6_RTR_SOLICIT_DELAY=10,
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#129: FILE: linux/sysctl.h:388:
+	NET_IPV6_USE_TEMPADDR=11,
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#130: FILE: linux/sysctl.h:389:
+	NET_IPV6_TEMP_VALID_LFT=12,
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: linux/sysctl.h:390:
+	NET_IPV6_TEMP_PREFERED_LFT=13,
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#132: FILE: linux/sysctl.h:391:
+	NET_IPV6_REGEN_MAX_RETRY=14,
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: linux/sysctl.h:392:
+	NET_IPV6_MAX_DESYNC_FACTOR=15
 	                          ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#149: FILE: net/addrconf.h:9:
+#define TEMP_VALID_LIFETIME		(7*86400)
                            		  ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: ipv6/Config.help:4:
+  support.  With this option, additional periodically-alter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: ipv6/Config.help:8:
+  By default, kernel generates temporary addresses but it won't use $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: ipv6/Config.help:9:
+  them unless application explicitly bind them.  To prefer temporary $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: ipv6/Config.help:12:
+^Iecho 2 >/proc/sys/net/ipv6/conf/all/use_tempaddr $

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'Extentions' may be misspelled - perhaps 'Extensions'?
#238: FILE: ipv6/Config.in:5:
+bool '    IPv6: Privacy Extentions (RFC 3041) support' CONFIG_IPV6_PRIVACY
                         ^^^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: ipv6/addrconf.c:94:
+static int __ipv6_try_regen_rndid(struct inet6_dev *idev, struct in6_addr *tmpaddr); $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: ipv6/addrconf.c:139:
+^I.use_tempaddr ^I^I^I= 1,$

CHECK:SPACING: No space is necessary after a cast
#318: FILE: ipv6/addrconf.c:310:
+		ndev->regen_timer.data = (unsigned long) ndev;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#319: FILE: ipv6/addrconf.c:311:
+		if ((dev->flags&IFF_LOOPBACK) ||
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#322: FILE: ipv6/addrconf.c:314:
+			printk(KERN_INFO

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#341: FILE: ipv6/addrconf.c:450:
+	if (ifa->flags&IFA_F_TEMPORARY) {
 	              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#374: FILE: ipv6/addrconf.c:503:
+	if (ifp->flags&IFA_F_TEMPORARY) {
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#375: FILE: ipv6/addrconf.c:504:
+		for (ifap = &idev->tempaddr_list; (ifa=*ifap) != NULL;
 		                                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#375: FILE: ipv6/addrconf.c:504:
+		for (ifap = &idev->tempaddr_list; (ifa=*ifap) != NULL;
 		                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#425: FILE: ipv6/addrconf.c:567:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#426: FILE: ipv6/addrconf.c:568:
+			"ipv6_create_tempaddr(): use_tempaddr is disabled.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#436: FILE: ipv6/addrconf.c:578:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#437: FILE: ipv6/addrconf.c:579:
+			"ipv6_create_tempaddr(): regeneration time exceeded. disabled temporary address support.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#446: FILE: ipv6/addrconf.c:588:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#447: FILE: ipv6/addrconf.c:589:
+			"ipv6_create_tempaddr(): regeneration of randomized interface id failed.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: ipv6/addrconf.c:599:
+^Itmp_prefered_lft = min_t(__u32, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: ipv6/addrconf.c:600:
+^I^I^I^I ifp->prefered_lft, $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#465: FILE: ipv6/addrconf.c:607:
+			      ipv6_addr_type(&addr)&IPV6_ADDR_SCOPE_MASK, IFA_F_TEMPORARY) : 0;
 			                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#469: FILE: ipv6/addrconf.c:611:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_create_tempaddr', this function's name, in a string
#470: FILE: ipv6/addrconf.c:612:
+			"ipv6_create_tempaddr(): retry temporary address regeneration.\n");

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#495: FILE: ipv6/addrconf.c:638:
+static int inline ipv6_saddr_pref(const struct inet6_ifaddr *ifp, u8 invpref)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:LINE_SPACING: Missing a blank line after declarations
#498: FILE: ipv6/addrconf.c:641:
+	int pref;
+	pref = ifp->flags&IFA_F_DEPRECATED ? 0 : 2;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#498: FILE: ipv6/addrconf.c:641:
+	pref = ifp->flags&IFA_F_DEPRECATED ? 0 : 2;
 	                 ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#500: FILE: ipv6/addrconf.c:643:
+	pref |= (ifp->flags^invpref)&IFA_F_TEMPORARY ? 0 : 1;
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#500: FILE: ipv6/addrconf.c:643:
+	pref |= (ifp->flags^invpref)&IFA_F_TEMPORARY ? 0 : 1;
 	                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#528: FILE: ipv6/addrconf.c:694:
+					if (ifp->flags&IFA_F_TENTATIVE)
 					              ^

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#531: FILE: ipv6/addrconf.c:697:
+					score = ipv6_saddr_pref(ifp, idev->cnf.use_tempaddr > 1 ? IFA_F_TEMPORARY : 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#563: FILE: ipv6/addrconf.c:737:
+					if (ifp->flags&IFA_F_TENTATIVE)
 					              ^

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#566: FILE: ipv6/addrconf.c:740:
+					score = ipv6_saddr_pref(ifp, idev->cnf.use_tempaddr > 1 ? IFA_F_TEMPORARY : 0);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#619: FILE: ipv6/addrconf.c:864:
+	} else if (ifp->flags&IFA_F_TEMPORARY) {
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#621: FILE: ipv6/addrconf.c:866:
+		struct inet6_ifaddr *ifpub;
+		spin_lock_bh(&ifp->lock);

CHECK:SPACING: No space is necessary after a cast
#651: FILE: ipv6/addrconf.c:954:
+	sg[0].offset = ((long) idev->entropy & ~PAGE_MASK);

CHECK:SPACING: No space is necessary after a cast
#654: FILE: ipv6/addrconf.c:957:
+	sg[1].offset = ((long) eui64 & ~PAGE_MASK);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#663: FILE: ipv6/addrconf.c:966:
+		printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ipv6_regen_rndid', this function's name, in a string
#664: FILE: ipv6/addrconf.c:967:
+			"__ipv6_regen_rndid(idev=%p): cannot get EUI64 identifier; use random bytes.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfm"
#670: FILE: ipv6/addrconf.c:973:
+	if (tfm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#672: FILE: ipv6/addrconf.c:975:
+			printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: ipv6/addrconf.c:1000:
+^Iif (idev->rndid[0] == 0xfd && $

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#698: FILE: ipv6/addrconf.c:1001:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#698: FILE: ipv6/addrconf.c:1001:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#698: FILE: ipv6/addrconf.c:1001:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#698: FILE: ipv6/addrconf.c:1001:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#698: FILE: ipv6/addrconf.c:1001:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                                                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#698: FILE: ipv6/addrconf.c:1001:
+	    (idev->rndid[1]&idev->rndid[2]&idev->rndid[3]&idev->rndid[4]&idev->rndid[5]&idev->rndid[6]) &&
 	                                                                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#699: FILE: ipv6/addrconf.c:1002:
+	    (idev->rndid[7]&0x80))
 	                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#701: FILE: ipv6/addrconf.c:1004:
+	if ((idev->rndid[0]|idev->rndid[1]) == 0) {
 	                   ^

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#704: FILE: ipv6/addrconf.c:1007:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#704: FILE: ipv6/addrconf.c:1007:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#704: FILE: ipv6/addrconf.c:1007:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#704: FILE: ipv6/addrconf.c:1007:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#704: FILE: ipv6/addrconf.c:1007:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#704: FILE: ipv6/addrconf.c:1007:
+		if ((idev->rndid[2]|idev->rndid[3]|idev->rndid[4]|idev->rndid[5]|idev->rndid[6]|idev->rndid[7]) == 0x00)
 		                                                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: ipv6/addrconf.c:1010:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#710: FILE: ipv6/addrconf.c:1013:
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'diabled' may be misspelled - perhaps 'disabled'?
#711: FILE: ipv6/addrconf.c:1014:
+			"__ipv6_regen_rndid(): too short regeneration interval; timer diabled for %s.\n",
 			                                                              ^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ipv6_regen_rndid', this function's name, in a string
#711: FILE: ipv6/addrconf.c:1014:
+			"__ipv6_regen_rndid(): too short regeneration interval; timer diabled for %s.\n",

CHECK:SPACING: No space is necessary after a cast
#723: FILE: ipv6/addrconf.c:1026:
+	struct inet6_dev *idev = (struct inet6_dev *) data;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#733: FILE: ipv6/addrconf.c:1036:
+static int __ipv6_try_regen_rndid(struct inet6_dev *idev, struct in6_addr *tmpaddr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#779: FILE: ipv6/addrconf.c:1282:
+			for (ift=in6_dev->tempaddr_list; ift; ift=ift->tmp_next) {
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#779: FILE: ipv6/addrconf.c:1282:
+			for (ift=in6_dev->tempaddr_list; ift; ift=ift->tmp_next) {
 			                                         ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#794: FILE: ipv6/addrconf.c:1297:
+					ift->prefered_lft = prefered_lft + (jiffies - ift->tstamp) / HZ;

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#796: FILE: ipv6/addrconf.c:1299:
+				if (!(flags&IFA_F_TENTATIVE))
 				           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: ipv6/addrconf.c:1308:
+^I^I^I^Iread_unlock_bh(&in6_dev->lock); $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#857: FILE: ipv6/addrconf.c:2365:
+	for (i=0; t->addrconf_vars[i].data; i++) {
 	      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 34 warnings, 29 checks, 714 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
