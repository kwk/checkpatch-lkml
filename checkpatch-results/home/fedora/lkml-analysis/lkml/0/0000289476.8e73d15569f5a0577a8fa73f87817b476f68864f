WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	           ChangeSet	1.1783  -> 1.1784

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	drivers/char/drm/gamma.h	1.7     -> 1.8

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	drivers/char/drm/i830.h	1.8     -> 1.9

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	drivers/char/drm/i810.h	1.10    -> 1.11

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	drivers/char/drm/r128.h	1.11    -> 1.12

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/char/drm/tdfx_drv.c	1.6     -> 1.7

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	drivers/char/drm/tdfx.h	1.3     -> 1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	drivers/char/drm/drmP.h	1.30    -> 1.31

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	drivers/char/drm/drm_drv.h	1.26    -> 1.27

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	drivers/char/drm/radeon.h	1.15    -> 1.16

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	drivers/char/drm/sis.h	1.6     -> 1.7

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	drivers/char/drm/mga.h	1.7     -> 1.8

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# 04/04/09	airlied@pdx.freedesktop.org	1.1784

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# - Converted Linux drivers to initialize DRM instances based on PCI IDs, not

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# just a single instance. The PCI ID lists include a driver private field, which may be used

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# by drivers for chip family or other information. Based on work by jonsmirl

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# and Eric Anholt. I've left out the PCI device naming for this patch as

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# that might be a bit controversial. clean up tdfx to look like everyone else..

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#75: 
--- a/drivers/char/drm/drmP.h	Fri Apr  9 00:37:35 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#85: FILE: drivers/char/drm/drmP.h:365:
+typedef struct drm_pci_id_list

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#86: FILE: drivers/char/drm/drmP.h:366:
+typedef struct drm_pci_id_list
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#178: FILE: drivers/char/drm/drm_drv.h:554:
+	if (DRM(numdevs) >= MAX_DEVICES)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#183: FILE: drivers/char/drm/drm_drv.h:559:
+	memset( (void *)dev, 0, sizeof(*dev) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#183: FILE: drivers/char/drm/drm_drv.h:559:
+	memset( (void *)dev, 0, sizeof(*dev) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#185: FILE: drivers/char/drm/drm_drv.h:561:
+	init_timer( &dev->timer );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#185: FILE: drivers/char/drm/drm_drv.h:561:
+	init_timer( &dev->timer );

ERROR:SPACING: space prohibited after that open parenthesis '('
#186: FILE: drivers/char/drm/drm_drv.h:562:
+	sema_init( &dev->struct_sem, 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#186: FILE: drivers/char/drm/drm_drv.h:562:
+	sema_init( &dev->struct_sem, 1 );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: drivers/char/drm/drm_drv.h:564:
+	if ((dev->minor = DRM(stub_register)(DRIVER_NAME, &DRM(fops),dev)) < 0)
 	                                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#188: FILE: drivers/char/drm/drm_drv.h:564:
+	if ((dev->minor = DRM(stub_register)(DRIVER_NAME, &DRM(fops),dev)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#190: FILE: drivers/char/drm/drm_drv.h:566:
+	dev->device = MKDEV(DRM_MAJOR, dev->minor );

ERROR:SPACING: space prohibited after that open parenthesis '('
#205: FILE: drivers/char/drm/drm_drv.h:579:
+	if ( dev->agp == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#205: FILE: drivers/char/drm/drm_drv.h:579:
+	if ( dev->agp == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->agp"
#205: FILE: drivers/char/drm/drm_drv.h:579:
+	if ( dev->agp == NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#206: FILE: drivers/char/drm/drm_drv.h:580:
+		DRM_ERROR( "Cannot initialize the agpgart module.\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#206: FILE: drivers/char/drm/drm_drv.h:580:
+		DRM_ERROR( "Cannot initialize the agpgart module.\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#208: FILE: drivers/char/drm/drm_drv.h:582:
+		DRM(takedown)( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#208: FILE: drivers/char/drm/drm_drv.h:582:
+		DRM(takedown)( dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#214: FILE: drivers/char/drm/drm_drv.h:588:
+		dev->agp->agp_mtrr = mtrr_add( dev->agp->agp_info.aper_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/char/drm/drm_drv.h:589:
+		dev->agp->agp_mtrr = mtrr_add( dev->agp->agp_info.aper_base,
+					dev->agp->agp_info.aper_size*1024*1024,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#215: FILE: drivers/char/drm/drm_drv.h:589:
+					dev->agp->agp_info.aper_size*1024*1024,
 					                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#215: FILE: drivers/char/drm/drm_drv.h:589:
+					dev->agp->agp_info.aper_size*1024*1024,
 					                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#217: FILE: drivers/char/drm/drm_drv.h:591:
+					1 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#222: FILE: drivers/char/drm/drm_drv.h:596:
+	retcode = DRM(ctxbitmap_init)( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#222: FILE: drivers/char/drm/drm_drv.h:596:
+	retcode = DRM(ctxbitmap_init)( dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#223: FILE: drivers/char/drm/drm_drv.h:597:
+	if( retcode ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#223: FILE: drivers/char/drm/drm_drv.h:597:
+	if( retcode ) {

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: drivers/char/drm/drm_drv.h:597:
+	if( retcode ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#224: FILE: drivers/char/drm/drm_drv.h:598:
+		DRM_ERROR( "Cannot allocate memory for context bitmap.\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#224: FILE: drivers/char/drm/drm_drv.h:598:
+		DRM_ERROR( "Cannot allocate memory for context bitmap.\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#226: FILE: drivers/char/drm/drm_drv.h:600:
+		DRM(takedown)( dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#226: FILE: drivers/char/drm/drm_drv.h:600:
+		DRM(takedown)( dev );

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/char/drm/drm_drv.h:602:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: drivers/char/drm/drm_drv.h:602:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/char/drm/drm_drv.h:602:
+ ^I}$

ERROR:SPACING: space prohibited after that open parenthesis '('
#232: FILE: drivers/char/drm/drm_drv.h:606:
+	DRM_INFO( "Initialized %s %d.%d.%d %s on minor %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: drivers/char/drm/drm_drv.h:607:
+	DRM_INFO( "Initialized %s %d.%d.%d %s on minor %d\n",
+		DRIVER_NAME,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#329: FILE: drivers/char/drm/drm_drv.h:644:
+	while ((pdev = pci_find_device(PCI_ANY_ID, PCI_ANY_ID, pdev)) != NULL) {
+		DRM(probe)(pdev);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#343: FILE: drivers/char/drm/drm_drv.h:666:
+		if ( DRM(stub_unregister)(dev->minor) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#343: FILE: drivers/char/drm/drm_drv.h:666:
+		if ( DRM(stub_unregister)(dev->minor) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->minor'
#343: FILE: drivers/char/drm/drm_drv.h:666:
+		if ( DRM(stub_unregister)(dev->minor) ) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#376: FILE: drivers/char/drm/gamma.h:56:
+#define DRIVER_PCI_IDS							\
+	{0x3d3d, 0x0008, 0},			\
+	{0, 0, 0}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#392: FILE: drivers/char/drm/i810.h:81:
+#define DRIVER_PCI_IDS							\
+	{0x8086, 0x7121, 0},						\
+	{0x8086, 0x7123, 0},						\
+	{0x8086, 0x7125, 0},						\
+	{0x8086, 0x1132, 0},						\
+	{0, 0, 0}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#409: FILE: drivers/char/drm/i830.h:80:
+#define DRIVER_PCI_IDS							\
+	{0x8086, 0x3577, 0},						\
+	{0x8086, 0x2562, 0},						\
+	{0x8086, 0x3582, 0},						\
+ 	{0x8086, 0x2572, 0},				 		\
+	{0, 0, 0}

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/char/drm/i830.h:84:
+ ^I{0x8086, 0x2572, 0},^I^I^I^I ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: drivers/char/drm/i830.h:84:
+ ^I{0x8086, 0x2572, 0},^I^I^I^I ^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/char/drm/i830.h:84:
+ ^I{0x8086, 0x2572, 0},^I^I^I^I ^I^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#426: FILE: drivers/char/drm/mga.h:67:
+#define DRIVER_PCI_IDS							\
+	{0x102b, 0x0521, 0},						\
+	{0x102b, 0x0525, 0},						\
+	{0x102b, 0x2527, 0},						\
+	{0, 0, 0}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#442: FILE: drivers/char/drm/r128.h:82:
+#define DRIVER_PCI_IDS							\
+	{0x1002, 0x4c45, 0},						\
+	{0x1002, 0x4c46, 0},						\
+	{0x1002, 0x4d46, 0},						\
+	{0x1002, 0x4d4c, 0},						\
+	{0x1002, 0x5041, 0},						\
+	{0x1002, 0x5042, 0},						\
+	{0x1002, 0x5043, 0},						\
+	{0x1002, 0x5044, 0},						\
+	{0x1002, 0x5045, 0},						\
+	{0x1002, 0x5046, 0},						\
+	{0x1002, 0x5047, 0},						\
+	{0x1002, 0x5048, 0},						\
+	{0x1002, 0x5049, 0},						\
+	{0x1002, 0x504A, 0},						\
+	{0x1002, 0x504B, 0},						\
+	{0x1002, 0x504C, 0},						\
+	{0x1002, 0x504D, 0},						\
+	{0x1002, 0x504E, 0},						\
+	{0x1002, 0x504F, 0},						\
+	{0x1002, 0x5050, 0},						\
+	{0x1002, 0x5051, 0},						\
+	{0x1002, 0x5052, 0},						\
+	{0x1002, 0x5053, 0},						\
+	{0x1002, 0x5054, 0},						\
+	{0x1002, 0x5055, 0},						\
+	{0x1002, 0x5056, 0},						\
+	{0x1002, 0x5057, 0},						\
+	{0x1002, 0x5058, 0},						\
+	{0x1002, 0x5245, 0},						\
+	{0x1002, 0x5246, 0},						\
+	{0x1002, 0x5247, 0},						\
+	{0x1002, 0x524b, 0},						\
+	{0x1002, 0x524c, 0},						\
+	{0x1002, 0x534d, 0},						\
+	{0x1002, 0x5446, 0},						\
+	{0x1002, 0x544C, 0},						\
+	{0x1002, 0x5452, 0},						\
+	{0, 0, 0}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#493: FILE: drivers/char/drm/radeon.h:112:
+#define DRIVER_PCI_IDS							\
+	{0x1002, 0x4136, 0},						\
+	{0x1002, 0x4137, 0},						\
+	{0x1002, 0x4237, 0},						\
+	{0x1002, 0x4242, 0},						\
+	{0x1002, 0x4242, 0},						\
+	{0x1002, 0x4336, 0},						\
+	{0x1002, 0x4337, 0},						\
+	{0x1002, 0x4437, 0},						\
+	{0x1002, 0x4964, 0},						\
+	{0x1002, 0x4965, 0},						\
+	{0x1002, 0x4966, 0},						\
+	{0x1002, 0x4967, 0},						\
+	{0x1002, 0x4C57, 0},						\
+	{0x1002, 0x4C58, 0},						\
+	{0x1002, 0x4C59, 0},						\
+	{0x1002, 0x4C5A, 0},						\
+	{0x1002, 0x4C64, 0},						\
+	{0x1002, 0x4C65, 0},						\
+	{0x1002, 0x4C66, 0},						\
+	{0x1002, 0x4C67, 0},						\
+	{0x1002, 0x5144, 0},						\
+	{0x1002, 0x5145, 0},						\
+	{0x1002, 0x5146, 0},						\
+	{0x1002, 0x5147, 0},						\
+	{0x1002, 0x5148, 0},						\
+	{0x1002, 0x5149, 0},						\
+	{0x1002, 0x514A, 0},						\
+	{0x1002, 0x514B, 0},						\
+	{0x1002, 0x514C, 0},						\
+	{0x1002, 0x514D, 0},						\
+	{0x1002, 0x514E, 0},						\
+	{0x1002, 0x514F, 0},						\
+	{0x1002, 0x5157, 0},						\
+	{0x1002, 0x5158, 0},						\
+	{0x1002, 0x5159, 0},						\
+	{0x1002, 0x515A, 0},						\
+	{0x1002, 0x5168, 0},						\
+	{0x1002, 0x5169, 0},						\
+	{0x1002, 0x516A, 0},						\
+	{0x1002, 0x516B, 0},						\
+	{0x1002, 0x516C, 0},						\
+	{0x1002, 0x5834, 0},						\
+	{0x1002, 0x5835, 0},						\
+	{0x1002, 0x5836, 0},						\
+	{0x1002, 0x5837, 0},						\
+	{0x1002, 0x5960, 0},						\
+	{0x1002, 0x5961, 0},						\
+	{0x1002, 0x5962, 0},						\
+	{0x1002, 0x5963, 0},						\
+	{0x1002, 0x5964, 0},						\
+	{0x1002, 0x5968, 0},						\
+	{0x1002, 0x5969, 0},						\
+	{0x1002, 0x596A, 0},						\
+	{0x1002, 0x596B, 0},						\
+	{0x1002, 0x5c61, 0},						\
+	{0x1002, 0x5c62, 0},						\
+	{0x1002, 0x5c63, 0},						\
+	{0x1002, 0x5c64, 0},						\
+	{0, 0, 0}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#563: FILE: drivers/char/drm/sis.h:65:
+#define DRIVER_PCI_IDS							\
+	{0x1039, 0x0300, 0},						\
+	{0x1039, 0x5300, 0},						\
+	{0x1039, 0x6300, 0},						\
+	{0x1039, 0x7300, 0},						\
+	{0, 0, 0}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#590: FILE: drivers/char/drm/tdfx.h:52:
+#define DRIVER_PCI_IDS							\
+	{0x121a, 0x0003, 0},						\
+	{0x121a, 0x0004, 0},						\
+	{0x121a, 0x0005, 0},						\
+	{0x121a, 0x0007, 0},						\
+	{0x121a, 0x0009, 0},						\
+	{0, 0, 0}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 34 warnings, 7 checks, 526 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289476.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
