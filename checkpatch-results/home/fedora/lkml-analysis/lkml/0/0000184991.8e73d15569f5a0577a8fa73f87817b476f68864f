WARNING:TYPO_SPELLING: 'desided' may be misspelled - perhaps 'decided'?
#25: 
get on my nerves as well when reading the code, so I desided to get rid of 
                                                     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#73: FILE: drivers/eisa/eisa-bus.c:64:
+			strlcpy(edev->pretty_name,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: drivers/eisa/eisa-bus.c:140:
+	if ((r = driver_register(&edrv->driver)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/eisa/eisa-bus.c:153:
+        struct eisa_device *edev = to_eisa_device(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/eisa/eisa-bus.c:153:
+        struct eisa_device *edev = to_eisa_device(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/eisa/eisa-bus.c:154:
+        return sprintf(buf,"%s\n", edev->id.sig);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: drivers/eisa/eisa-bus.c:154:
+        struct eisa_device *edev = to_eisa_device(dev);
+        return sprintf(buf,"%s\n", edev->id.sig);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/eisa/eisa-bus.c:154:
+        return sprintf(buf,"%s\n", edev->id.sig);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: drivers/eisa/eisa-bus.c:154:
+        return sprintf(buf,"%s\n", edev->id.sig);
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/eisa/eisa-bus.c:162:
+        return sprintf(buf,"%d\n", edev->state & EISA_CONFIG_ENABLED);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/eisa/eisa-bus.c:162:
+        return sprintf(buf,"%d\n", edev->state & EISA_CONFIG_ENABLED);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/eisa/eisa-bus.c:162:
+        return sprintf(buf,"%d\n", edev->state & EISA_CONFIG_ENABLED);
                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#174: FILE: drivers/eisa/eisa-bus.c:177:
+	if (!(sig = decode_eisa_sig(sig_addr)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/eisa/eisa-bus.c:277:
+        printk(KERN_INFO "EISA: Probing bus %d at %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/eisa/eisa-bus.c:277:
+        printk(KERN_INFO "EISA: Probing bus %d at %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#286: FILE: drivers/eisa/eisa-bus.c:277:
+        printk(KERN_INFO "EISA: Probing bus %d at %s\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#294: FILE: drivers/eisa/eisa-bus.c:283:
+	if (!(edev = kmalloc(sizeof(*edev), GFP_KERNEL))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#295: FILE: drivers/eisa/eisa-bus.c:284:
+		printk(KERN_ERR "EISA: Couldn't allocate mainboard slot\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: drivers/eisa/eisa-bus.c:288:
+	memset(edev, 0, sizeof (*edev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#307: FILE: drivers/eisa/eisa-bus.c:291:
+		printk(KERN_WARNING \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#307: FILE: drivers/eisa/eisa-bus.c:291:
+		printk(KERN_WARNING \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#327: FILE: drivers/eisa/eisa-bus.c:307:
+	printk(KERN_INFO "EISA: Mainboard %s detected.\n", edev->id.sig);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: drivers/eisa/eisa-bus.c:310:
+		printk(KERN_ERR "EISA: Failed to register %s\n", edev->id.sig);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#346: FILE: drivers/eisa/eisa-bus.c:318:
+		if (!(edev = kmalloc(sizeof(*edev), GFP_KERNEL))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#347: FILE: drivers/eisa/eisa-bus.c:319:
+			printk(KERN_ERR "EISA: Out of memory for slot %d\n", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#360: FILE: drivers/eisa/eisa-bus.c:326:
+			printk(KERN_WARNING \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#360: FILE: drivers/eisa/eisa-bus.c:326:
+			printk(KERN_WARNING \

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/eisa/eisa-bus.c:333:
+                if (eisa_init_device(root, edev, i)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/eisa/eisa-bus.c:333:
+                if (eisa_init_device(root, edev, i)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#378: FILE: drivers/eisa/eisa-bus.c:339:
+		printk(KERN_INFO "EISA: slot %d : %s detected",	i,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#384: FILE: drivers/eisa/eisa-bus.c:344:
+			printk(" (forced enabled)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#389: FILE: drivers/eisa/eisa-bus.c:348:
+			printk(" (forced disabled)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#394: FILE: drivers/eisa/eisa-bus.c:352:
+			printk(" (disabled)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#399: FILE: drivers/eisa/eisa-bus.c:356:
+		printk(".\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#408: FILE: drivers/eisa/eisa-bus.c:361:
+			printk(KERN_ERR "EISA: Failed to register %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/eisa/eisa-bus.c:368:
+        printk(KERN_INFO "EISA: Detected %d card%s.\n", c, c == 1 ? "" : "s");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/eisa/eisa-bus.c:368:
+        printk(KERN_INFO "EISA: Detected %d card%s.\n", c, c == 1 ? "" : "s");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#416: FILE: drivers/eisa/eisa-bus.c:368:
+        printk(KERN_INFO "EISA: Detected %d card%s.\n", c, c == 1 ? "" : "s");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#434: FILE: drivers/eisa/eisa-bus.c:396:
+	if ((err = request_resource(&eisa_root_res, &root->eisa_root_res)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#441: FILE: drivers/eisa/eisa-bus.c:401:
+	if ((err = eisa_probe(root)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#453: FILE: drivers/eisa/eisa-bus.c:411:
+	if ((r = bus_register(&eisa_bus_type)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#457: FILE: drivers/eisa/eisa-bus.c:414:
+	printk(KERN_INFO "EISA bus registered\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#473: FILE: drivers/eisa/eisa-bus.c:425:
+EXPORT_SYMBOL(eisa_bus_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#474: FILE: drivers/eisa/eisa-bus.c:426:
+EXPORT_SYMBOL(eisa_driver_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#475: FILE: drivers/eisa/eisa-bus.c:427:
+EXPORT_SYMBOL(eisa_driver_unregister);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#485: FILE: drivers/eisa/pci_eisa.c:22:
+static int __devinit pci_eisa_init(struct pci_dev *pdev,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#493: FILE: drivers/eisa/pci_eisa.c:27:
+	if ((rc = pci_enable_device(pdev))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#494: FILE: drivers/eisa/pci_eisa.c:28:
+		printk(KERN_ERR "pci_eisa : Could not enable device %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#506: FILE: drivers/eisa/pci_eisa.c:41:
+		printk(KERN_ERR "pci_eisa : Could not register EISA root\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/eisa/virtual_root.c:55:
+        if ((r = platform_device_register(&eisa_root_dev))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/eisa/virtual_root.c:55:
+        if ((r = platform_device_register(&eisa_root_dev))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#550: FILE: drivers/eisa/virtual_root.c:55:
+        if ((r = platform_device_register(&eisa_root_dev))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#550: FILE: drivers/eisa/virtual_root.c:55:
+        if ((r = platform_device_register(&eisa_root_dev))) {
                 return r;
         }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184991.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 35 warnings, 0 checks, 511 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184991.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
