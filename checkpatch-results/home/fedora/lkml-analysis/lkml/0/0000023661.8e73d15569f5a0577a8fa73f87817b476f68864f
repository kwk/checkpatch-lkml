WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
instead of dev, which doesn't make clear what we're treating (and no, it's not

ERROR:SPACING: space prohibited after that open square bracket '['
#53: FILE: arch/um/drivers/ubd_kern.c:198:
+struct ubd ubd_devs[MAX_DEV] = { [ 0 ... MAX_DEV - 1 ] = DEFAULT_UBD };

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close square bracket ']'
#53: FILE: arch/um/drivers/ubd_kern.c:198:
+struct ubd ubd_devs[MAX_DEV] = { [ 0 ... MAX_DEV - 1 ] = DEFAULT_UBD };

ERROR:SPACING: space required before the open parenthesis '('
#62: FILE: arch/um/drivers/ubd_kern.c:204:
+	if(ubd_dev->file == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_dev->file"
#62: FILE: arch/um/drivers/ubd_kern.c:204:
+	if(ubd_dev->file == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#83: FILE: arch/um/drivers/ubd_kern.c:349:
+	if(ubd_dev->file != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#83: FILE: arch/um/drivers/ubd_kern.c:349:
+	if(ubd_dev->file != NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->file"
#83: FILE: arch/um/drivers/ubd_kern.c:349:
+	if(ubd_dev->file != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#105: FILE: arch/um/drivers/ubd_kern.c:396:
+		if(ubd_dev->no_cow)

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: arch/um/drivers/ubd_kern.c:558:
+	if(ubd_dev->cow.file == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_dev->cow.file"
#142: FILE: arch/um/drivers/ubd_kern.c:558:
+	if(ubd_dev->cow.file == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->cow.file"
#168: FILE: arch/um/drivers/ubd_kern.c:574:
+	create_ptr = (ubd_dev->cow.file != NULL) ? &create_cow : NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/um/drivers/ubd_kern.c:577:
+	ubd_dev->fd = open_ubd_file(ubd_dev->file, &ubd_dev->openflags, ubd_dev->shared,
+				back_ptr, &ubd_dev->cow.bitmap_offset,

ERROR:SPACING: space required before the open brace '{'
#182: FILE: arch/um/drivers/ubd_kern.c:581:
+	if((ubd_dev->fd == -ENOENT) && create_cow){

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: arch/um/drivers/ubd_kern.c:581:
+	if((ubd_dev->fd == -ENOENT) && create_cow){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: arch/um/drivers/ubd_kern.c:583:
+		ubd_dev->fd = create_cow_file(ubd_dev->file, ubd_dev->cow.file,
+					  ubd_dev->openflags, 1 << 9, PAGE_SIZE,

ERROR:SPACING: space required before the open brace '{'
#188: FILE: arch/um/drivers/ubd_kern.c:587:
+		if(ubd_dev->fd >= 0){

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: arch/um/drivers/ubd_kern.c:587:
+		if(ubd_dev->fd >= 0){

WARNING:SPLIT_STRING: quoted string split across lines
#191: FILE: arch/um/drivers/ubd_kern.c:589:
 			printk(KERN_INFO "Creating \"%s\" as COW file for "
+			       "\"%s\"\n", ubd_dev->file, ubd_dev->cow.file);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open brace '{'
#199: FILE: arch/um/drivers/ubd_kern.c:593:
+	if(ubd_dev->fd < 0){

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: arch/um/drivers/ubd_kern.c:593:
+	if(ubd_dev->fd < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#200: FILE: arch/um/drivers/ubd_kern.c:594:
+		printk("Failed to open '%s', errno = %d\n", ubd_dev->file,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#202: FILE: arch/um/drivers/ubd_kern.c:596:
+		return(ubd_dev->fd);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: space required before the open brace '{'
#206: FILE: arch/um/drivers/ubd_kern.c:599:
+	if(ubd_dev->cow.file != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: arch/um/drivers/ubd_kern.c:599:
+	if(ubd_dev->cow.file != NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->cow.file"
#206: FILE: arch/um/drivers/ubd_kern.c:599:
+	if(ubd_dev->cow.file != NULL){

CHECK:SPACING: No space is necessary after a cast
#210: FILE: arch/um/drivers/ubd_kern.c:601:
+		ubd_dev->cow.bitmap = (void *) vmalloc(ubd_dev->cow.bitmap_len);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#210: FILE: arch/um/drivers/ubd_kern.c:601:
+		ubd_dev->cow.bitmap = (void *) vmalloc(ubd_dev->cow.bitmap_len);

ERROR:SPACING: space required before the open brace '{'
#211: FILE: arch/um/drivers/ubd_kern.c:602:
+		if(ubd_dev->cow.bitmap == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: arch/um/drivers/ubd_kern.c:602:
+		if(ubd_dev->cow.bitmap == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_dev->cow.bitmap"
#211: FILE: arch/um/drivers/ubd_kern.c:602:
+		if(ubd_dev->cow.bitmap == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: arch/um/drivers/ubd_kern.c:676:
+	if(ubd_dev->file == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_dev->file"
#274: FILE: arch/um/drivers/ubd_kern.c:676:
+	if(ubd_dev->file == NULL)

ERROR:SPACING: space required before the open brace '{'
#323: FILE: arch/um/drivers/ubd_kern.c:742:
+	if(ubd_dev->file == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#323: FILE: arch/um/drivers/ubd_kern.c:742:
+	if(ubd_dev->file == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_dev->file"
#323: FILE: arch/um/drivers/ubd_kern.c:742:
+	if(ubd_dev->file == NULL){

ERROR:SPACING: space required before the open brace '{'
#332: FILE: arch/um/drivers/ubd_kern.c:749:
+	if(ubd_dev->cow.file != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: arch/um/drivers/ubd_kern.c:749:
+	if(ubd_dev->cow.file != NULL){

CHECK:BRACES: braces {} should be used on all arms of this statement
#332: FILE: arch/um/drivers/ubd_kern.c:749:
+	if(ubd_dev->cow.file != NULL){
[...]
 	}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->cow.file"
#332: FILE: arch/um/drivers/ubd_kern.c:749:
+	if(ubd_dev->cow.file != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: arch/um/drivers/ubd_kern.c:782:
+	if(ubd_dev->file == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubd_dev->file"
#356: FILE: arch/um/drivers/ubd_kern.c:782:
+	if(ubd_dev->file == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#362: FILE: arch/um/drivers/ubd_kern.c:787:
+	if(ubd_dev->count > 0)

CHECK:SPACING: No space is necessary after a cast
#373: FILE: arch/um/drivers/ubd_kern.c:801:
+	*ubd_dev = ((struct ubd) DEFAULT_UBD);

ERROR:SPACING: space required before the open brace '{'
#396: FILE: arch/um/drivers/ubd_kern.c:893:
+	if(ubd_dev->count == 0){

ERROR:SPACING: space required before the open parenthesis '('
#396: FILE: arch/um/drivers/ubd_kern.c:893:
+	if(ubd_dev->count == 0){

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: arch/um/drivers/ubd_kern.c:907:
+^I        if(--ubd_dev->count == 0) ubd_close(ubd_dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#415: FILE: arch/um/drivers/ubd_kern.c:907:
+	/*if((filp->f_mode & FMODE_WRITE) && !ubd_dev->openflags.w){
+	        if(--ubd_dev->count == 0) ubd_close(ubd_dev);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open parenthesis '('
#428: FILE: arch/um/drivers/ubd_kern.c:919:
+	if(--ubd_dev->count == 0)

ERROR:SPACING: space required before the open brace '{'
#444: FILE: arch/um/drivers/ubd_kern.c:993:
+	if((rq_data_dir(req) == WRITE) && !ubd_dev->openflags.w){

ERROR:SPACING: space required before the open parenthesis '('
#444: FILE: arch/um/drivers/ubd_kern.c:993:
+	if((rq_data_dir(req) == WRITE) && !ubd_dev->openflags.w){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->cow.file"
#454: FILE: arch/um/drivers/ubd_kern.c:1003:
+	io_req->fds[0] = (ubd_dev->cow.file != NULL) ? ubd_dev->cow.fd : ubd_dev->fd;

ERROR:SPACING: space required before the open parenthesis '('
#471: FILE: arch/um/drivers/ubd_kern.c:1017:
+	if(ubd_dev->cow.file != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ubd_dev->cow.file"
#471: FILE: arch/um/drivers/ubd_kern.c:1017:
+	if(ubd_dev->cow.file != NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023661.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 5 warnings, 17 checks, 437 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023661.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
