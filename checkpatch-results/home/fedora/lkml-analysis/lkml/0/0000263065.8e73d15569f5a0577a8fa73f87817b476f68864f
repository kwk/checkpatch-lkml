ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: drivers/acpi/numa.c:44:
+^I                      (struct acpi_table_processor_affinity*) header; \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#51: FILE: drivers/acpi/numa.c:44:
+	                      (struct acpi_table_processor_affinity*) header; \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#51: FILE: drivers/acpi/numa.c:44:
+	                      (struct acpi_table_processor_affinity*) header; \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: drivers/acpi/numa.c:46:
+^I                 "eid[0x%02x]) in proximity domain %d %s\n", \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: drivers/acpi/numa.c:47:
+^I                 p->apic_id, p->lsapic_eid, p->proximity_domain, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: drivers/acpi/numa.c:48:
+^I                 p->flags.enabled?"enabled":"disabled")); }$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#55: FILE: drivers/acpi/numa.c:48:
+	                 p->flags.enabled?"enabled":"disabled")); }
 	                                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#55: FILE: drivers/acpi/numa.c:48:
+	                 p->flags.enabled?"enabled":"disabled")); }
 	                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/acpi/numa.c:52:
+^I                         (struct acpi_table_memory_affinity*) header; \$

CHECK:SPACING: No space is necessary after a cast
#59: FILE: drivers/acpi/numa.c:52:
+	                         (struct acpi_table_memory_affinity*) header; \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#59: FILE: drivers/acpi/numa.c:52:
+	                         (struct acpi_table_memory_affinity*) header; \

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/acpi/numa.c:54:
+^I                 "0x%08x%08x type 0x%x) in proximity domain %d %s%s\n",\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: drivers/acpi/numa.c:55:
+^I                 p->base_addr_hi, p->base_addr_lo, p->length_hi, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: drivers/acpi/numa.c:56:
+^I                 p->length_lo, p->memory_type, p->proximity_domain, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: drivers/acpi/numa.c:57:
+^I                 p->flags.enabled ? "enabled" : "disabled", \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: drivers/acpi/numa.c:58:
+^I                 p->flags.hot_pluggable ? " hot-pluggable" : "")); }$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'entry' - possible side-effects?
#71: FILE: drivers/acpi/numa.c:64:
+#define BAD_SRAT_ENTRY(entry, end) ( \
+	(!entry) || (unsigned long)entry + sizeof(*entry) > end ||  \
+	((acpi_table_entry_header *)entry)->length != sizeof(*entry))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'entry' may be better as '(entry)' to avoid precedence issues
#71: FILE: drivers/acpi/numa.c:64:
+#define BAD_SRAT_ENTRY(entry, end) ( \
+	(!entry) || (unsigned long)entry + sizeof(*entry) > end ||  \
+	((acpi_table_entry_header *)entry)->length != sizeof(*entry))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'end' may be better as '(end)' to avoid precedence issues
#71: FILE: drivers/acpi/numa.c:64:
+#define BAD_SRAT_ENTRY(entry, end) ( \
+	(!entry) || (unsigned long)entry + sizeof(*entry) > end ||  \
+	((acpi_table_entry_header *)entry)->length != sizeof(*entry))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: drivers/acpi/numa.c:117:
+acpi_parse_processor_affinity (acpi_table_entry_header *header, unsigned long size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: drivers/acpi/numa.c:135:
+acpi_parse_memory_affinity (acpi_table_entry_header *header, unsigned long size)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 2 warnings, 7 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
