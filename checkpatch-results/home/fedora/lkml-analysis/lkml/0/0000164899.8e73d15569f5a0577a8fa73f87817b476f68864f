ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: include/asm-alpha/mmu_context.h:265:
+static inline void * kernel_stack(struct task_struct *task)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: include/asm-arm/mmu_context.h:100:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: include/asm-arm26/mmu_context.h:55:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#174: FILE: include/asm-cris/mmu_context.h:28:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#192: FILE: include/asm-frv/mmu_context.h:54:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: include/asm-h8300/mmu_context.h:36:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: include/asm-i386/mmu_context.h:72:
+static inline void * kernel_stack(struct task_struct *task)

CHECK:SPACING: No space is necessary after a cast
#226: FILE: include/asm-i386/mmu_context.h:74:
+	return (void *) task->thread.esp;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: include/asm-ia64/mmu_context.h:176:
+static inline void * kernel_stack(struct task_struct *task)

CHECK:SPACING: No space is necessary after a cast
#244: FILE: include/asm-ia64/mmu_context.h:178:
+	return (void *) task->thread.ksp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: include/asm-m32r/mmu_context.h:174:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: include/asm-m68k/mmu_context.h:157:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#298: FILE: include/asm-m68knommu/mmu_context.h:37:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: include/asm-mips/mmu_context.h:200:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: include/asm-parisc/mmu_context.h:78:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#353: FILE: include/asm-ppc/mmu_context.h:202:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: include/asm-ppc64/mmu_context.h:91:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: include/asm-s390/mmu_context.h:58:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#408: FILE: include/asm-sh/mmu_context.h:209:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#427: FILE: include/asm-sh64/mmu_context.h:213:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: include/asm-sparc/mmu_context.h:44:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: include/asm-sparc64/mmu_context.h:149:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#481: FILE: include/asm-um/mmu_context.h:73:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: include/asm-v850/mmu_context.h:15:
+static inline void * kernel_stack(struct task_struct *task)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#519: FILE: include/asm-x86_64/mmu_context.h:83:
+static inline void * kernel_stack(struct task_struct *task)

CHECK:SPACING: No space is necessary after a cast
#521: FILE: include/asm-x86_64/mmu_context.h:85:
+	return (void *) task->thread.rsp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#537: FILE: include/asm-xtensa/mmu_context.h:334:
+static inline void * kernel_stack(struct task_struct *task)

WARNING:TYPO_SPELLING: 'crutial' may be misspelled - perhaps 'crucial'?
#552: FILE: kernel/sched.c:2868:
+	 * Cache-prefetch crutial memory areas of the next task,
 	                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164899.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 1 warnings, 3 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164899.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
