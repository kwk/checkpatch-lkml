WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
The patch below adds hooks for the ES7000 Management Processor driver and implements an algorithm to determine an available GSI override for correctly mapping GSIs to IO-APIC pins. GSI overrides are required for the ES7000 platform since IRQ to pin mappings are NOT all one-to-one. This patch applies to the Unisys specific ES7000 machines. Extensive tests has been done on several models of the ES7000 to verify this patch.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#40: FILE: arch/i386/mach-es7000/es7000.h:108:
+#define IOAPIC_GSI_BOUND(ioapic) ((ioapic+1) * (nr_ioapic_registers[ioapic]-1))
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#40: FILE: arch/i386/mach-es7000/es7000.h:108:
+#define IOAPIC_GSI_BOUND(ioapic) ((ioapic+1) * (nr_ioapic_registers[ioapic]-1))
                                                                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ioapic' - possible side-effects?
#40: FILE: arch/i386/mach-es7000/es7000.h:108:
+#define IOAPIC_GSI_BOUND(ioapic) ((ioapic+1) * (nr_ioapic_registers[ioapic]-1))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ioapic' may be better as '(ioapic)' to avoid precedence issues
#40: FILE: arch/i386/mach-es7000/es7000.h:108:
+#define IOAPIC_GSI_BOUND(ioapic) ((ioapic+1) * (nr_ioapic_registers[ioapic]-1))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#56: FILE: arch/i386/mach-es7000/es7000plat.c:54:
+EXPORT_SYMBOL(mip_reg);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#57: FILE: arch/i386/mach-es7000/es7000plat.c:55:
+EXPORT_SYMBOL(host_reg);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#58: FILE: arch/i386/mach-es7000/es7000plat.c:56:
+EXPORT_SYMBOL(mip_port);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#59: FILE: arch/i386/mach-es7000/es7000plat.c:57:
+EXPORT_SYMBOL(mip_addr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#60: FILE: arch/i386/mach-es7000/es7000plat.c:58:
+EXPORT_SYMBOL(host_addr);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#63: FILE: arch/i386/mach-es7000/es7000plat.c:61:
+static unsigned long cycle_irqs = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#64: FILE: arch/i386/mach-es7000/es7000plat.c:62:
+static unsigned long free_irqs = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#65: FILE: arch/i386/mach-es7000/es7000plat.c:63:
+static int gsi_map[MAX_GSI_MAPSIZE] = { [0 ... MAX_GSI_MAPSIZE-1] = -1 };
                                                               ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#74: FILE: arch/i386/mach-es7000/es7000plat.c:72:
+	static int newgsi = 0;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#78: FILE: arch/i386/mach-es7000/es7000plat.c:76:
+	else if (cycle_irqs ^ free_irqs)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#85: FILE: arch/i386/mach-es7000/es7000plat.c:83:
+		Dprintk("es7000_gsi_override: free_irqs = 0x%lx\n", free_irqs);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'es7000_gsi_override', this function's name, in a string
#85: FILE: arch/i386/mach-es7000/es7000plat.c:83:
+		Dprintk("es7000_gsi_override: free_irqs = 0x%lx\n", free_irqs);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#95: FILE: arch/i386/mach-es7000/es7000plat.c:92:
+	static int initialized = 0;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253792.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 7 warnings, 6 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253792.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
