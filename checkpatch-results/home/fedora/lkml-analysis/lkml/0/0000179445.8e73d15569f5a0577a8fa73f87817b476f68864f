WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
diff -ruNp 210-workthreads.patch-old/drivers/acpi/osl.c 210-workthreads.patch-new/drivers/acpi/osl.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/s390/cio/device.c:155:
+	ccw_device_notify_work = create_singlethread_workqueue("cio_notify",
+			0);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#340: FILE: fs/reiserfs/journal.c:2514:
   if (reiserfs_mounted_fs_count <= 1)
+    commit_wq = create_workqueue("reiserfs", PF_SYNCTHREAD);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/reiserfs/journal.c:2515:
+    commit_wq = create_workqueue("reiserfs", PF_SYNCTHREAD);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: include/linux/kthread.h:36:
+ * ^IPF_SYNCTHREAD if needed for syncing data to disk.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#379: FILE: include/linux/kthread.h:37:
+ * ^IPF_NOFREEZE if also needed for writing the image.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: include/linux/kthread.h:38:
+ * ^I0 otherwise.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#390: FILE: include/linux/kthread.h:46:
+^I^I= kthread_create(threadfn, data, freezer_flags, ^I   \$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#390: FILE: include/linux/kthread.h:46:
 	struct task_struct *__k						   \
+		= kthread_create(threadfn, data, freezer_flags, 	   \

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: kernel/sched.c:4383:
+		p = kthread_create(migration_thread, hcpu, 0,
+				"migration/%d",cpu);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: kernel/sched.c:4383:
+				"migration/%d",cpu);
 				              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: kernel/workqueue.c:295:
+^I^Ip = kthread_create(worker_thread, cwq, freezer_flags, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: kernel/workqueue.c:296:
+		p = kthread_create(worker_thread, cwq, freezer_flags, 
+				"%s", wq->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: kernel/workqueue.c:299:
+		p = kthread_create(worker_thread, cwq, freezer_flags,
+				"%s/%d", wq->name, cpu);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!khelper_wq'
#690: FILE: kernel/kmod.c:240:
+	if ((!khelper_wq) || (refrigerator_on))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#701: FILE: kernel/power/process.c:2:
+ * kernel/power/process.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: kernel/power/process.c:12:
+ * processes during the suspend cycle. $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#729: FILE: kernel/power/process.c:29:
+unsigned int refrigerator_on = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#732: FILE: kernel/power/process.c:31:
+static unsigned int sync_freeze = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: kernel/power/process.c:33:
+atomic_t __nosavedata suspend_cpu_counter = { 0 }; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: kernel/power/process.c:51:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#772: FILE: kernel/power/process.c:61:
+	/* You need correct to work with real-time processes.
+	   OTOH, this way one process may see (via /proc/) some other

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: kernel/power/process.c:63:
+^I   suspended. We probably do not care). $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#777: FILE: kernel/power/process.c:66:
+	if ((flag) && (current->flags & PF_FREEZE)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#790: FILE: kernel/power/process.c:79:
+				spin_lock_irqsave(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#793: FILE: kernel/power/process.c:82:
+				spin_unlock_irqrestore(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#810: FILE: kernel/power/process.c:99:
+ * ^I^Iint^I^I^IWhich group of processes to consider.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#813: FILE: kernel/power/process.c:102:
+static int to_be_frozen(struct task_struct * p, int type_being_frozen) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#813: FILE: kernel/power/process.c:102:
+static int to_be_frozen(struct task_struct * p, int type_being_frozen) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#814: FILE: kernel/power/process.c:103:
+static int to_be_frozen(struct task_struct * p, int type_being_frozen) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p == current'
#815: FILE: kernel/power/process.c:104:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
 	    (p->state == TASK_STOPPED) ||
 	    (p->state == TASK_TRACED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->exit_state == EXIT_ZOMBIE'
#815: FILE: kernel/power/process.c:104:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
 	    (p->state == TASK_STOPPED) ||
 	    (p->state == TASK_TRACED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->exit_state == EXIT_DEAD'
#815: FILE: kernel/power/process.c:104:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
 	    (p->state == TASK_STOPPED) ||
 	    (p->state == TASK_TRACED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_STOPPED'
#815: FILE: kernel/power/process.c:104:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
 	    (p->state == TASK_STOPPED) ||
 	    (p->state == TASK_TRACED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_TRACED'
#815: FILE: kernel/power/process.c:104:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
 	    (p->state == TASK_STOPPED) ||
 	    (p->state == TASK_TRACED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type_being_frozen < 3'
#822: FILE: kernel/power/process.c:111:
+	if ((!(p->mm)) && (type_being_frozen < 3))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type_being_frozen == 1'
#824: FILE: kernel/power/process.c:113:
+	if ((p->flags & PF_SYNCTHREAD) && (type_being_frozen == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_UNINTERRUPTIBLE'
#826: FILE: kernel/power/process.c:115:
+	if ((p->state == TASK_UNINTERRUPTIBLE) && (type_being_frozen == 3))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type_being_frozen == 3'
#826: FILE: kernel/power/process.c:115:
+	if ((p->state == TASK_UNINTERRUPTIBLE) && (type_being_frozen == 3))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#846: FILE: kernel/power/process.c:124:
+ * ^I^Ifrozen. As a side effect, update the progress bar too.$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#849: FILE: kernel/power/process.c:127:
+static int num_to_be_frozen(int type_being_frozen) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: kernel/power/process.c:128:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#850: FILE: kernel/power/process.c:128:
+static int num_to_be_frozen(int type_being_frozen) {
+	

CHECK:BRACES: braces {} should be used on all arms of this statement
#857: FILE: kernel/power/process.c:135:
+		if (to_be_frozen(p, type_being_frozen)) {
[...]
+		} else if (to_be_frozen(p, 3))
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: kernel/power/process.c:184:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: kernel/power/process.c:189:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: kernel/power/process.c:202:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#966: FILE: kernel/power/process.c:210:
+	} while(still_to_do && !time_after(jiffies, start_time + FREEZER_TOTAL_TIMEOUT));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: kernel/power/process.c:219:
+^I^I^Iif (!to_be_frozen(p, type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#977: FILE: kernel/power/process.c:221:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#979: FILE: kernel/power/process.c:223:
+				printk(KERN_ERR	"Stopping tasks failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#980: FILE: kernel/power/process.c:224:
+				printk(KERN_ERR "Tasks that refused to be "

WARNING:SPLIT_STRING: quoted string split across lines
#981: FILE: kernel/power/process.c:225:
+				printk(KERN_ERR "Tasks that refused to be "
+				 "refrigerated and haven't since exited:\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#984: FILE: kernel/power/process.c:228:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#986: FILE: kernel/power/process.c:230:
+				printk(" - %s (#%d) signalled but "

WARNING:SPLIT_STRING: quoted string split across lines
#987: FILE: kernel/power/process.c:231:
+				printk(" - %s (#%d) signalled but "
+					"didn't enter refrigerator.\n",

CHECK:BRACES: Unbalanced braces around else statement
#989: FILE: kernel/power/process.c:233:
+			} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#990: FILE: kernel/power/process.c:234:
+				printk(" - %s (#%d) wasn't "

WARNING:SPLIT_STRING: quoted string split across lines
#991: FILE: kernel/power/process.c:235:
+				printk(" - %s (#%d) wasn't "
+					"signalled.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: kernel/power/process.c:242:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: kernel/power/process.c:248:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: kernel/power/process.c:293:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: kernel/power/process.c:296:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1058: FILE: kernel/power/process.c:298:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1350: FILE: include/linux/sched.h:791:
+#define PF_SYNCTHREAD^I0x01000000^I/* this thread can start activity during the $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1351: FILE: include/linux/sched.h:792:
++ ^I^I^I^I^I   early part of freezing processes */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1351: FILE: include/linux/sched.h:792:
+#define PF_SYNCTHREAD	0x01000000	/* this thread can start activity during the 
++ 					   early part of freezing processes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1351: FILE: include/linux/sched.h:792:
++ 					   early part of freezing processes */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 21 warnings, 22 checks, 1071 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179445.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
