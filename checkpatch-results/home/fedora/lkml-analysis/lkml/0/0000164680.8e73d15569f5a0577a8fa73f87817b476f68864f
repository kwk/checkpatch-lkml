WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
 drivers/scsi/libata-core.c    |  555 +++++++++++++++++++++++++++++++++++++-----

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'c9a8f5ab981ced23e95b72b25aa83e37880f2287', maybe rebased or not pulled?
#68: 
commit c9a8f5ab981ced23e95b72b25aa83e37880f2287

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: drivers/scsi/ahci.c:189:
+static void ahci_remove_one (struct pci_dev *pdev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#291: FILE: drivers/scsi/ahci.c:963:
+	if (pci_enable_msi(pdev) == 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#293: FILE: drivers/scsi/ahci.c:965:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: drivers/scsi/ahci.c:1038:
+static void ahci_remove_one (struct pci_dev *pdev)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host_Template>
#339: FILE: drivers/scsi/ahci.c:1044:
+	Scsi_Host_Template *sht;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: drivers/scsi/libata-core.c:188:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#502: FILE: drivers/scsi/libata-core.c:259:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#530: FILE: drivers/scsi/libata-core.c:404:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#572: FILE: drivers/scsi/libata-core.c:461:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#593: FILE: drivers/scsi/libata-core.c:482:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#614: FILE: drivers/scsi/libata-core.c:506:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: drivers/scsi/libata-core.c:968:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#652: FILE: drivers/scsi/libata-core.c:985:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#671: FILE: drivers/scsi/libata-core.c:1297:
 
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#678: FILE: drivers/scsi/libata-core.c:1304:
+ * ^Iata_dev_config - Run device specific handlers and check for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#679: FILE: drivers/scsi/libata-core.c:1305:
+ * ^I^I^I SATA->PATA bridges$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: drivers/scsi/libata-core.c:1306:
+ * ^I@ap: Bus $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#680: FILE: drivers/scsi/libata-core.c:1306:
+ * ^I@ap: Bus $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#681: FILE: drivers/scsi/libata-core.c:1307:
+ * ^I@i:  Device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#683: FILE: drivers/scsi/libata-core.c:1309:
+ * ^ILOCKING:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: drivers/scsi/libata-core.c:1311:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/scsi/libata-core.c:1311:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#690: FILE: drivers/scsi/libata-core.c:1316:
+		printk(KERN_INFO "ata%u(%u): applying bridge limits\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: drivers/scsi/libata-core.c:1317:
+		printk(KERN_INFO "ata%u(%u): applying bridge limits\n",
+			ap->id, ap->device->devno);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: drivers/scsi/libata-core.c:1355:
+			ata_dev_config(ap,i);
 			                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#771: FILE: drivers/scsi/libata-core.c:1411:
+		 * AHCI-1.1 10.4.2 says at least 1 ms. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#975: FILE: drivers/scsi/libata-core.c:2270:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1013: FILE: drivers/scsi/libata-core.c:2314:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1101: FILE: drivers/scsi/libata-core.c:2499:
 
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sg[qc->cursg]'
#1121: FILE: drivers/scsi/libata-core.c:2582:
+	if ((qc->cursg_ofs * ATA_SECT_SIZE) == (&sg[qc->cursg])->length) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1246: FILE: drivers/scsi/libata-core.c:3171:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1272: FILE: drivers/scsi/libata-core.c:3347:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1291: FILE: drivers/scsi/libata-core.c:3367:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1312: FILE: drivers/scsi/libata-core.c:3389:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1332: FILE: drivers/scsi/libata-core.c:3414:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1352: FILE: drivers/scsi/libata-core.c:3438:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1403: FILE: drivers/scsi/libata-core.c:3654:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1423: FILE: drivers/scsi/libata-core.c:3680:
 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1442: FILE: drivers/scsi/libata-core.c:3699:
+void ata_host_stop (struct ata_host_set *host_set)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1448: FILE: drivers/scsi/libata-core.c:3705:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1523: FILE: drivers/scsi/libata-core.c:4067:
 
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1631: FILE: drivers/scsi/libata-scsi.c:1139:
+		if( n_sectors >= 0xffffffffULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1631: FILE: drivers/scsi/libata-scsi.c:1139:
+		if( n_sectors >= 0xffffffffULL )

ERROR:SPACING: space required before the open parenthesis '('
#1631: FILE: drivers/scsi/libata-scsi.c:1139:
+		if( n_sectors >= 0xffffffffULL )

WARNING:SPACING: space prohibited before semicolon
#1634: FILE: drivers/scsi/libata-scsi.c:1142:
+			tmp = n_sectors ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1687: FILE: drivers/scsi/sata_promise.c:45:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1863: FILE: drivers/scsi/sata_svw.c:424:
+	 * longer available. This should not be seen in any system. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1879: FILE: drivers/scsi/sata_svw.c:449:
+ * */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1935: FILE: drivers/scsi/sata_vsc.c:236:
 static void __devinit vsc_sata_setup_port(struct ata_ioports *port, unsigned long base)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1967: FILE: include/linux/libata.h:414:
+extern void ata_host_stop (struct ata_host_set *host_set);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1967: FILE: include/linux/libata.h:414:
+extern void ata_host_stop (struct ata_host_set *host_set);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1975: FILE: include/linux/libata.h:425:
+extern void ata_dev_config(struct ata_port *ap, unsigned int i);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1983: FILE: include/linux/libata.h:470:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1998: FILE: include/linux/libata.h:485:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2018: FILE: include/linux/libata.h:512:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2037: FILE: include/linux/libata.h:562:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2056: FILE: include/linux/libata.h:593:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2075: FILE: include/linux/libata.h:646:
+static inline void scr_write_flush(struct ata_port *ap, unsigned int reg, $

CHECK:SPACING: No space is necessary after a cast
#2079: FILE: include/linux/libata.h:650:
+	(void) ap->ops->scr_read(ap, reg);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 18 warnings, 36 checks, 1812 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
