WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: drivers/char/cs5535_gpio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#83: FILE: drivers/char/cs5535_gpio.c:20:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#84: FILE: drivers/char/cs5535_gpio.c:21:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: drivers/char/cs5535_gpio.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#125: FILE: drivers/char/cs5535_gpio.c:62:
+};
+static struct gpio_regmap rm[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#126: FILE: drivers/char/cs5535_gpio.c:63:
+static struct gpio_regmap rm[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/char/cs5535_gpio.c:72:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/char/cs5535_gpio.c:100:
+		if (get_user(c, data+i))
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#197: FILE: drivers/char/cs5535_gpio.c:134:
+		if (put_user(ch, buf+count))
 		                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == ARRAY_SIZE(rm)'
#204: FILE: drivers/char/cs5535_gpio.c:141:
+	if ((i == ARRAY_SIZE(rm)) && (count < len)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count < len'
#204: FILE: drivers/char/cs5535_gpio.c:141:
+	if ((i == ARRAY_SIZE(rm)) && (count < len)) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#224: FILE: drivers/char/cs5535_gpio.c:161:
+static struct file_operations cs5535_gpio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#238: FILE: drivers/char/cs5535_gpio.c:175:
+		printk(KERN_WARNING NAME ": DIVIL not found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#247: FILE: drivers/char/cs5535_gpio.c:184:
+		printk(KERN_WARNING NAME ": GPIO not enabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#276: FILE: drivers/char/cs5535_gpio.c:213:
+		printk(KERN_ERR NAME ": can't allocate I/O for GPIO\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#295: FILE: drivers/char/cs5535_gpio.c:232:
+	printk(KERN_DEBUG NAME ": base=%#x mask=%#lx major=%d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: drivers/char/cs5535_gpio.c:244:
+	dev_t dev_id = MKDEV(major, 0);
+	unregister_chrdev_region(dev_id, CS5535_GPIO_COUNT);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#320: FILE: drivers/char/Kconfig:939:
+config CS5535_GPIO
+	tristate "AMD CS5535/CS5536 GPIO (Geode Companion Device)"
+	help
+	  Give userspace access to the GPIO pins on the AMD CS5535 and
+	  CS5536 Geode companion devices.
+
+	  If compiled as a module, it will be called cs5535_gpio.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 7 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125986.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
