WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
> check dev->state later on?  Once your disconnect routine has returned, you

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#81: 
--- a/drivers/usb/core/devio.c	Sun Dec  7 01:20:31 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:CAMELCASE: Avoid CamelCase: <bNumConfigurations>
#118: FILE: drivers/usb/core/devio.c:119:
+	for (i = 0; nbytes && i < dev->descriptor.bNumConfigurations; i++) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#147: FILE: drivers/usb/core/devio.c:325:
+	unsigned int ifnum = intf->altsetting->desc.bInterfaceNumber;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#159: FILE: drivers/usb/core/devio.c:332:
+	if (ifnum < 8*sizeof(ps->ifclaimed))
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: drivers/usb/core/devio.c:336:
+	destroy_async_on_interface (ps, ifnum);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#176: FILE: drivers/usb/core/devio.c:352:
+	if (intf >= 8*sizeof(ps->ifclaimed) || intf >= dev->actconfig->desc.bNumInterfaces)
 	             ^

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#176: FILE: drivers/usb/core/devio.c:352:
+	if (intf >= 8*sizeof(ps->ifclaimed) || intf >= dev->actconfig->desc.bNumInterfaces)

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#208: FILE: drivers/usb/core/devio.c:381:
+		usb_driver_release_interface(&usbdevfs_driver, iface); /* may sleep - beware for BKL! */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: drivers/usb/core/devio.c:486:
+	dev = usb_get_dev (inode->u.generic_ip);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: drivers/usb/core/devio.c:527:
+	usb_put_dev (ps->dev);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#291: FILE: drivers/usb/core/devio.c:732:
+		if (dev->state == USB_STATE_NOTATTACHED) {
+			return -ENODEV;
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/usb/core/devio.c:1096:
+       if (!(ifp = usb_ifnum_to_if (ps->dev, ctrl.ifno)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#326: FILE: drivers/usb/core/devio.c:1096:
+       if (!(ifp = usb_ifnum_to_if (ps->dev, ctrl.ifno)))
                retval = -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: drivers/usb/core/devio.c:1096:
+       if (!(ifp = usb_ifnum_to_if (ps->dev, ctrl.ifno)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#326: FILE: drivers/usb/core/devio.c:1096:
+       if (!(ifp = usb_ifnum_to_if (ps->dev, ctrl.ifno)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#326: FILE: drivers/usb/core/devio.c:1096:
+       if (!(ifp = usb_ifnum_to_if (ps->dev, ctrl.ifno)))
[...]
-       else switch (ctrl.ioctl_code) {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#334: FILE: drivers/usb/core/devio.c:1098:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#359: FILE: drivers/usb/core/devio.c:1108:
+			if (driver) {
[...]
+			} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: drivers/usb/core/devio.c:1109:
+				dbg ("disconnect '%s' from dev %d interface %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/usb/core/devio.c:1110:
+				dbg ("disconnect '%s' from dev %d interface %d",
+					driver->name, ps->dev->devnum, ctrl.ifno);

CHECK:BRACES: Unbalanced braces around else statement
#363: FILE: drivers/usb/core/devio.c:1112:
+			} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: drivers/usb/core/devio.c:1118:
+			retval = usb_probe_interface (&ifp->dev);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#389: FILE: drivers/usb/core/devio.c:1124:
+			/* BKL used here to protect against changing the binding
+			* of this driver to this device, as well as unloading its

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: drivers/usb/core/devio.c:1131:
+				if (!try_module_get (driver->owner)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'driver->owner'
#397: FILE: drivers/usb/core/devio.c:1131:
+				if (!try_module_get (driver->owner)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#398: FILE: drivers/usb/core/devio.c:1132:
+					retval = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: drivers/usb/core/devio.c:1135:
+				retval = driver->ioctl (ifp, ctrl.ioctl_code, buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: drivers/usb/core/devio.c:1138:
+				module_put (driver->owner);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000320100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 16 warnings, 11 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000320100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
