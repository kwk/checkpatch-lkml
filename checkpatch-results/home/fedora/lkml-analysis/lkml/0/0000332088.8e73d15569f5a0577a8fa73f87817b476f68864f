WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urN linux-2.6/drivers/s390/block/dasd.c linux-2.6-s390/drivers/s390/block/dasd.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#44: FILE: drivers/s390/block/dasd.c:10:
+ * $Revision: 1.114 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#80: FILE: drivers/s390/block/dasd.c:1733:
+	if (dasd_autodetect &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#164: FILE: drivers/s390/block/dasd_devmap.c:14:
+ * $Revision: 1.19 $

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#252: FILE: drivers/s390/block/dasd_devmap.c:128:
+	val = simple_strtoul(*str, str, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#269: FILE: drivers/s390/block/dasd_devmap.c:143:
+	val = simple_strtoul(*str, str, 16);

ERROR:SPACING: space required one side of that '++' (ctx:VxV)
#270: FILE: drivers/s390/block/dasd_devmap.c:144:
+	if (val < 0 || val > 0xff || (*str)++[0] != '.')
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#276: FILE: drivers/s390/block/dasd_devmap.c:149:
+	val = simple_strtoul(*str, str, 16);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#292: FILE: drivers/s390/block/dasd_devmap.c:209:
+	char bus_id[BUS_ID_SIZE+1], *orig_str;
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/s390/block/dasd_devmap.c:300:
+ * devices. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#407: FILE: drivers/s390/block/dasd_devmap.c:332:
+	if (new)
+		kfree(new);

CHECK:BRACES: braces {} should be used on all arms of this statement
#550: FILE: drivers/s390/block/dasd_devmap.c:408:
+	if (devmap && devmap->device) {
[...]
-	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#554: FILE: drivers/s390/block/dasd_devmap.c:411:
+	} else

CHECK:SPACING: No space is necessary after a cast
#575: FILE: drivers/s390/block/dasd_devmap.c:433:
+		return (void *) devmap;

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#616: FILE: drivers/s390/block/dasd_genhd.c:12:
+ * $Revision: 1.41 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: drivers/s390/block/dasd_genhd.c:66:
+ ^Isprintf(gdp->devfs_name, "dasd/%s", device->cdev->dev.bus_id);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#750: FILE: drivers/s390/block/dasd_genhd.c:66:
+ ^Isprintf(gdp->devfs_name, "dasd/%s", device->cdev->dev.bus_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: drivers/s390/block/dasd_genhd.c:66:
+ ^Isprintf(gdp->devfs_name, "dasd/%s", device->cdev->dev.bus_id);$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#791: FILE: drivers/s390/block/dasd_int.h:9:
+ * $Revision: 1.48 $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#810: FILE: drivers/s390/block/dasd_int.h:480:
+int dasd_add_busid(char *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#810: FILE: drivers/s390/block/dasd_int.h:480:
+int dasd_add_busid(char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#811: FILE: drivers/s390/block/dasd_int.h:481:
+int dasd_busid_known(char *);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#823: FILE: drivers/s390/block/dasd_proc.c:12:
+ * $Revision: 1.23 $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332088.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 15 warnings, 4 checks, 753 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332088.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
