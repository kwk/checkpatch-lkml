WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
The following patch is based on the /proc/PID/mem code appears to work fine.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#74: FILE: fs/proc/base.c:411:
len, 0);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: fs/proc/base.c:884:
+static ssize_t env_read(struct file * file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: fs/proc/base.c:884:
+static ssize_t env_read(struct file * file, char __user * buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: fs/proc/base.c:885:
+                       size_t count, loff_t *ppos)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: fs/proc/base.c:885:
+static ssize_t env_read(struct file * file, char __user * buf,
+                       size_t count, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/proc/base.c:885:
+                       size_t count, loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs/proc/base.c:887:
+       struct task_struct *task = proc_task(file->f_dentry->d_inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/proc/base.c:888:
+       char *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: fs/proc/base.c:889:
+       unsigned long src = *ppos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs/proc/base.c:890:
+       int ret = -ESRCH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: fs/proc/base.c:891:
+       struct mm_struct *mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: fs/proc/base.c:892:
+       size_t max_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/proc/base.c:894:
+       if (!ptrace_may_attach(task))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#99: FILE: fs/proc/base.c:894:
+       if (!ptrace_may_attach(task))
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: fs/proc/base.c:895:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/proc/base.c:895:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/proc/base.c:897:
+       ret = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/proc/base.c:898:
+       page = (char *)__get_free_page(GFP_USER);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/proc/base.c:899:
+       if (!page)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: fs/proc/base.c:899:
+       if (!page)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/proc/base.c:900:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/proc/base.c:900:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/proc/base.c:902:
+       ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/proc/base.c:904:
+       mm = get_task_mm(task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/proc/base.c:905:
+       if (!mm)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#110: FILE: fs/proc/base.c:905:
+       if (!mm)
+               goto out_free;

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/proc/base.c:906:
+               goto out_free;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/proc/base.c:906:
+               goto out_free;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/proc/base.c:908:
+       ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/proc/base.c:909:
+       max_len = (count > PAGE_SIZE) ? PAGE_SIZE : count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: fs/proc/base.c:911:
+       while (count > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#116: FILE: fs/proc/base.c:911:
+       while (count > 0) {
+               int this_len, retval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: fs/proc/base.c:912:
+               int this_len, retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/proc/base.c:912:
+               int this_len, retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: fs/proc/base.c:914:
+               this_len = mm->env_end - (mm->env_start + src);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: fs/proc/base.c:914:
+               this_len = mm->env_end - (mm->env_start + src);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: fs/proc/base.c:916:
+               if (this_len <= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/proc/base.c:916:
+               if (this_len <= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#121: FILE: fs/proc/base.c:916:
+               if (this_len <= 0) {
+                       break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#121: FILE: fs/proc/base.c:916:
+               if (this_len <= 0) {
+                       break;
+               }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: fs/proc/base.c:917:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/proc/base.c:917:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: fs/proc/base.c:918:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/proc/base.c:918:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: fs/proc/base.c:920:
+               if (this_len > max_len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/proc/base.c:920:
+               if (this_len > max_len)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#125: FILE: fs/proc/base.c:920:
+               if (this_len > max_len)
+                       this_len = max_len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: fs/proc/base.c:921:
+                       this_len = max_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/proc/base.c:921:
+                       this_len = max_len;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: fs/proc/base.c:923:
+               retval = access_process_vm(task, (mm->env_start + src), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/proc/base.c:923:
+               retval = access_process_vm(task, (mm->env_start + src), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/proc/base.c:923:
+               retval = access_process_vm(task, (mm->env_start + src), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/proc/base.c:924:
+               retval = access_process_vm(task, (mm->env_start + src), 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/proc/base.c:925:
+               if (!ptrace_may_attach(task)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/proc/base.c:925:
+               if (!ptrace_may_attach(task)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#131: FILE: fs/proc/base.c:925:
+               if (!ptrace_may_attach(task)) {
+                       ret = -ESRCH;

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: fs/proc/base.c:926:
+                       ret = -ESRCH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/proc/base.c:926:
+                       ret = -ESRCH;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/proc/base.c:927:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: fs/proc/base.c:927:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/proc/base.c:928:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/proc/base.c:928:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: fs/proc/base.c:930:
+               if (retval <= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/proc/base.c:930:
+               if (retval <= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#136: FILE: fs/proc/base.c:930:
+               if (retval <= 0) {
+                       ret = retval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: fs/proc/base.c:931:
+                       ret = retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/proc/base.c:931:
+                       ret = retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: fs/proc/base.c:932:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/proc/base.c:932:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: fs/proc/base.c:933:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/proc/base.c:933:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: fs/proc/base.c:935:
+               if (copy_to_user(buf, page, retval)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/proc/base.c:935:
+               if (copy_to_user(buf, page, retval)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#141: FILE: fs/proc/base.c:935:
+               if (copy_to_user(buf, page, retval)) {
+                       ret = -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: fs/proc/base.c:936:
+                       ret = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: fs/proc/base.c:936:
+                       ret = -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: fs/proc/base.c:937:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/proc/base.c:937:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/proc/base.c:938:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/proc/base.c:938:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: fs/proc/base.c:940:
+               ret += retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/proc/base.c:940:
+               ret += retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/proc/base.c:941:
+               src += retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/proc/base.c:941:
+               src += retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/proc/base.c:942:
+               buf += retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/proc/base.c:942:
+               buf += retval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: fs/proc/base.c:943:
+               count -= retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/proc/base.c:943:
+               count -= retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/proc/base.c:944:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/proc/base.c:945:
+       *ppos = src;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/proc/base.c:947:
+       mmput(mm);$

CHECK:SPACING: No space is necessary after a cast
#155: FILE: fs/proc/base.c:949:
+       free_page((unsigned long) page);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/proc/base.c:949:
+       free_page((unsigned long) page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/proc/base.c:951:
+       return ret;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#160: FILE: fs/proc/base.c:954:
+static struct file_operations proc_env_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/proc/base.c:955:
+       .read           = env_read,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: fs/proc/base.c:1779:
+               case PROC_TID_ENVIRON:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/proc/base.c:1779:
+               case PROC_TID_ENVIRON:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: fs/proc/base.c:1780:
+               case PROC_TGID_ENVIRON:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/proc/base.c:1780:
+               case PROC_TGID_ENVIRON:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: fs/proc/base.c:1781:
+                       inode->i_fop = &proc_env_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: fs/proc/base.c:1781:
+                       inode->i_fop = &proc_env_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/proc/base.c:1782:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/proc/base.c:1782:
+                       break;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072357.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 67 warnings, 3 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072357.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
