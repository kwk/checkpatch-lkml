ERROR:SPACING: space required after that ',' (ctx:VxV)
#81: FILE: drivers/char/i8k.c:61:
+#define to_dev_attr(_attr) container_of(_attr,struct device_attribute,attr)
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#81: FILE: drivers/char/i8k.c:61:
+#define to_dev_attr(_attr) container_of(_attr,struct device_attribute,attr)
                                                                      ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#84: FILE: drivers/char/i8k.c:64:
+static int num_temps = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#85: FILE: drivers/char/i8k.c:65:
+static int num_fans = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: drivers/char/i8k.c:301:
+	if (((rc=i8k_get_dell_sig_aux(I8K_SMM_GET_DELL_SIG1)) < 0) &&
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: drivers/char/i8k.c:301:
+	if (((rc=i8k_get_dell_sig_aux(I8K_SMM_GET_DELL_SIG1)) < 0) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#183: FILE: drivers/char/i8k.c:302:
+	    ((rc=i8k_get_dell_sig_aux(I8K_SMM_GET_DELL_SIG2)) < 0)) {
 	        ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#226: FILE: drivers/char/i8k.c:458:
+	temp_num = simple_strtoul(name + 4, &rest, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#245: FILE: drivers/char/i8k.c:471:
+	fan_num = simple_strtoul(name + 3, &rest, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#261: FILE: drivers/char/i8k.c:486:
+	fan_num = simple_strtoul(name + 3, &rest, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#288: FILE: drivers/char/i8k.c:505:
+	fan_num = simple_strtoul(name + 3, &rest, 10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#310: FILE: drivers/char/i8k.c:518:
+			      char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#312: FILE: drivers/char/i8k.c:520:
+	struct device_attribute * dev_attr = to_dev_attr(attr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#313: FILE: drivers/char/i8k.c:521:
+	struct device * dev = to_dev(kobj);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#314: FILE: drivers/char/i8k.c:522:
+	int (*func3)(struct device *, char *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#314: FILE: drivers/char/i8k.c:522:
+	int (*func3)(struct device *, char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#314: FILE: drivers/char/i8k.c:522:
+	int (*func3)(struct device *, char *, char *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: drivers/char/i8k.c:534:
+	struct device_attribute * dev_attr = to_dev_attr(attr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: drivers/char/i8k.c:535:
+	struct device * dev = to_dev(kobj);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#328: FILE: drivers/char/i8k.c:536:
+	int (*func4)(struct device *, const char *, size_t, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#328: FILE: drivers/char/i8k.c:536:
+	int (*func4)(struct device *, const char *, size_t, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#328: FILE: drivers/char/i8k.c:536:
+	int (*func4)(struct device *, const char *, size_t, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#328: FILE: drivers/char/i8k.c:536:
+	int (*func4)(struct device *, const char *, size_t, char *);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#330: FILE: drivers/char/i8k.c:538:
+	if (dev_attr->store)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#338: FILE: drivers/char/i8k.c:546:
+static struct sysfs_ops i8k_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#369: FILE: drivers/char/i8k.c:646:
+	if (name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SIZEOF_PARENTHESIS: sizeof *attr should be sizeof(*attr)
#373: FILE: drivers/char/i8k.c:650:
+	attr = kmalloc(sizeof *attr, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!attr"
#374: FILE: drivers/char/i8k.c:651:
+	if (attr == NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#385: FILE: drivers/char/i8k.c:662:
+	if (err)
+	{

WARNING:SIZEOF_PARENTHESIS: sizeof *temp_ktype should be sizeof(*temp_ktype)
#431: FILE: drivers/char/i8k.c:708:
+	temp_ktype = kmalloc(sizeof *temp_ktype, GFP_KERNEL);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#468: FILE: drivers/char/i8k.c:747:
+	while (i8k_get_temp(num_temps) >= 0) num_temps ++;
 	                                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#468: FILE: drivers/char/i8k.c:747:
+	while (i8k_get_temp(num_temps) >= 0) num_temps ++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#469: FILE: drivers/char/i8k.c:748:
+	printk(KERN_INFO "i8k: found %d temperature sensors\n", num_temps);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#470: FILE: drivers/char/i8k.c:749:
+	while (i8k_get_fan_status(num_fans) >= 0) num_fans ++;
 	                                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#470: FILE: drivers/char/i8k.c:749:
+	while (i8k_get_fan_status(num_fans) >= 0) num_fans ++;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#471: FILE: drivers/char/i8k.c:750:
+	printk(KERN_INFO "i8k: found %d fans\n", num_fans);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 16 warnings, 2 checks, 456 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
