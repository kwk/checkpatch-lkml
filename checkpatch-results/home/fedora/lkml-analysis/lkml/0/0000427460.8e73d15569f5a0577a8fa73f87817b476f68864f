WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	           ChangeSet	1.664   -> 1.667  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	drivers/ide/ide-taskfile.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	drivers/block/blkpg.c	1.42    -> 1.43   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	include/linux/genhd.h	1.30    -> 1.31   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	drivers/block/floppy.c	1.48    -> 1.49   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	include/linux/blkdev.h	1.69    -> 1.70   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	   drivers/ide/ide.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	fs/partitions/check.c	1.64    -> 1.65   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	fs/partitions/check.h	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	 include/linux/ide.h	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	drivers/ide/ide-disk.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	drivers/ide/ide-cd.c	1.17    -> 1.18   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	drivers/ide/ide-floppy.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	drivers/scsi/ide-scsi.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# 02/10/02	peterc@numbat.chubb.wattle.id.au	1.665

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
# Partition handling changes for transition to 64-bit sector_t:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# * Make sure that partitions (reported to add_partition()) fit into 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#   a struct gendisk

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# * store size and offset of partitions as a sector_t

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# 02/10/02	peterc@numbat.chubb.wattle.id.au	1.666

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# IDE changes to transition to 64-bit sector_t:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# 	-- do_request() function takes sector_t not unsigned long as the 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# 	   block number to operate on.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# 	-- Various casts to long where the underlying device can never get 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# 	   big enough to warrant a 64-bit sector offset.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# 	-- Cast sector_t to unsigned long long when printing.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# 02/10/02	peterc@numbat.chubb.wattle.id.au	1.667

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# Change read_dev_sector to take sector_t not unsigned long

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#85: 
--- a/drivers/block/blkpg.c	Thu Oct  3 15:04:51 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/block/blkpg.c:77:
+^I/* check for fit in a hd_struct */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/block/blkpg.c:78:
+^Iif (sizeof(sector_t) == sizeof(long) && $

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: drivers/block/blkpg.c:81:
+		long pstart, plength;
+		pstart = ppstart;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#111: FILE: drivers/block/blkpg.c:84:
+		if (pstart != ppstart || plength != pplength
+		    || pstart < 0 || plength < 0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: drivers/block/blkpg.c:109:
+		if (!(ppstart+pplength <= g->part[i].start_sect ||
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/block/blkpg.c:267:
+^I^Icase BLKGETSIZE: $

CHECK:SPACING: No space is necessary after a cast
#149: FILE: drivers/block/blkpg.c:275:
+			return put_user(ret, (unsigned long *) arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/block/blkpg.c:277:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: drivers/block/floppy.c:2994:
+		printk("sect=%ld flags=%lx\n", (long)current_req->sector, current_req->flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: drivers/ide/ide-cd.c:1750:
+ide_do_rw_cdrom (ide_drive_t *drive, struct request *rq, sector_t block)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#219: FILE: drivers/ide/ide-cd.c:2779:
+	BUG_ON(sizeof(rq->hard_sector) > 4 && (rq->hard_sector >> 32));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: drivers/ide/ide-disk.c:361:
+static ide_startstop_t do_rw_disk (ide_drive_t *drive, struct request *rq, sector_t block)

CHECK:SPACING: No space is necessary after a cast
#244: FILE: drivers/ide/ide-disk.c:394:
+				tasklets[8] = (task_ioreg_t) 0;

CHECK:SPACING: No space is necessary after a cast
#245: FILE: drivers/ide/ide-disk.c:395:
+				tasklets[9] = (task_ioreg_t) 0;

CHECK:SPACING: No space is necessary after a cast
#247: FILE: drivers/ide/ide-disk.c:397:
+				tasklets[8] = (task_ioreg_t) (block>>32);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#247: FILE: drivers/ide/ide-disk.c:397:
+				tasklets[8] = (task_ioreg_t) (block>>32);
 				                                   ^

CHECK:SPACING: No space is necessary after a cast
#248: FILE: drivers/ide/ide-disk.c:398:
+				tasklets[9] = (task_ioreg_t) (block>>40);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#248: FILE: drivers/ide/ide-disk.c:398:
+				tasklets[9] = (task_ioreg_t) (block>>40);
 				                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: drivers/ide/ide-disk.c:401:
+			printk("%s: %sing: LBAsect=%llu, sectors=%ld, "

WARNING:SPLIT_STRING: quoted string split across lines
#254: FILE: drivers/ide/ide-disk.c:402:
+			printk("%s: %sing: LBAsect=%llu, sectors=%ld, "
+				"buffer=0x%08lx, LBAsect=0x%012llx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#271: FILE: drivers/ide/ide-disk.c:428:
+			printk("%s: %sing: LBAsect=%llu, sectors=%ld, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: drivers/ide/ide-disk.c:548:
+static ide_startstop_t do_rw_disk (ide_drive_t *drive, struct request *rq, sector_t block)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#305: FILE: drivers/ide/ide-disk.c:830:
+				printk(", sector=%llu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/ide/ide-disk.c:831:
+				printk(", sector=%llu",
+					(unsigned long long)HWGROUP(drive)->rq->sector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: drivers/ide/ide-taskfile.c:292:
+				printk(", sector=%llu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/ide/ide-taskfile.c:293:
+				printk(", sector=%llu",
+					(unsigned long long)HWGROUP(drive)->rq->sector);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#344: FILE: drivers/ide/ide.c:590:
+					printk(", sector=%llu", (unsigned long long)HWGROUP(drive)->rq->sector);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#344: FILE: drivers/ide/ide.c:590:
+					printk(", sector=%llu", (unsigned long long)HWGROUP(drive)->rq->sector);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: drivers/ide/ide.c:3257:
+static ide_startstop_t default_do_request (ide_drive_t *drive, struct request *rq, sector_t block)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: drivers/scsi/ide-scsi.c:490:
+static ide_startstop_t idescsi_do_request (ide_drive_t *drive, struct request *rq, sector_t block)

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#377: FILE: fs/partitions/check.c:474:
+unsigned char *read_dev_sector(struct block_device *bdev, sector_t n, Sector *p)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#384: FILE: fs/partitions/check.c:479:
+	page = read_cache_page(mapping, (pgoff_t)(n >> (PAGE_CACHE_SHIFT-9)),
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: fs/partitions/check.c:480:
+	page = read_cache_page(mapping, (pgoff_t)(n >> (PAGE_CACHE_SHIFT-9)),
 			(filler_t *)mapping->a_ops->readpage, NULL);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#393: FILE: fs/partitions/check.c:488:
+		return (unsigned char *)page_address(page) +  ((n & ((1 << (PAGE_CACHE_SHIFT - 9)) - 1)) << 9);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#443: FILE: include/linux/blkdev.h:397:
+unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#443: FILE: include/linux/blkdev.h:397:
+unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Sector *' should also have an identifier name
#443: FILE: include/linux/blkdev.h:397:
+unsigned char *read_dev_sector(struct block_device *, sector_t, Sector *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#454: FILE: include/linux/blkdev.h:408:
+# define sector_div(n, b)( \
+{ \
+	int _res; \
+	_res = (n) % (b); \
+	(n) /= (b); \
+	_res; \
+} \
+)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#454: FILE: include/linux/blkdev.h:408:
+# define sector_div(n, b)( \
+{ \
+	int _res; \
+	_res = (n) % (b); \
+	(n) /= (b); \
+	_res; \
+} \
+)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: include/linux/blkdev.h:416:
+#endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: include/linux/blkdev.h:417:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: include/linux/blkdev.h:417:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#464: FILE: include/linux/blkdev.h:418:
+ 
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#498: FILE: include/linux/ide.h:1227:
+	ide_startstop_t	(*do_request)(ide_drive_t *, struct request *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#498: FILE: include/linux/ide.h:1227:
+	ide_startstop_t	(*do_request)(ide_drive_t *, struct request *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#498: FILE: include/linux/ide.h:1227:
+	ide_startstop_t	(*do_request)(ide_drive_t *, struct request *, sector_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427460.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 64 warnings, 17 checks, 350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000427460.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
