WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: drivers/char/page_color.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: drivers/char/page_color.c:3:
+ * ^Ito get the most performance out of the expensive cache$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/char/page_color.c:20:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: drivers/char/page_color.c:21:
+ * ^Iinsmod will create a module called 'page_color' which changes$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/char/page_color.c:22:
+ *^Ithe way Linux allocates pages from the free list. Once a page $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/char/page_color.c:23:
+ *^Iis given to another process the page coloring code will forget $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/char/page_color.c:24:
+ *^Iabout it; thus it's always safe to start and stop the module $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#127: FILE: drivers/char/page_color.c:50:
+extern unsigned int page_miss_count;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#128: FILE: drivers/char/page_color.c:51:
+extern unsigned int page_hit_count;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#129: FILE: drivers/char/page_color.c:52:
+extern unsigned int page_colors;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#130: FILE: drivers/char/page_color.c:53:
+extern unsigned long *page_color_table;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#131: FILE: drivers/char/page_color.c:54:
+extern spinlock_t page_alloc_lock;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#133: FILE: drivers/char/page_color.c:56:
+void fill_color_pool(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#134: FILE: drivers/char/page_color.c:57:
+void empty_color_pool(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#135: FILE: drivers/char/page_color.c:58:
+unsigned int page_color_alloc(void);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#138: FILE: drivers/char/page_color.c:61:
+#define CACHE_SIZE_GUESS (4*1024*1024)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#138: FILE: drivers/char/page_color.c:61:
+#define CACHE_SIZE_GUESS (4*1024*1024)
                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#140: FILE: drivers/char/page_color.c:63:
+#define CACHE_SIZE_GUESS (256*1024)
                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#142: FILE: drivers/char/page_color.c:65:
+#define CACHE_SIZE_GUESS (1*1024*1024)
                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#142: FILE: drivers/char/page_color.c:65:
+#define CACHE_SIZE_GUESS (1*1024*1024)
                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/char/page_color.c:66:
+#endif $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/char/page_color.c:70:
+int page_color_getinfo(char *buf, char **start, off_t fpos, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/char/page_color.c:71:
+int page_color_getinfo(char *buf, char **start, off_t fpos, 
+			int length, int dummy)

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/char/page_color.c:73:
+        char *p = buf;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/char/page_color.c:73:
+        char *p = buf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/char/page_color.c:75:
+        p += sprintf(p, "colors: %d\n", page_colors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/char/page_color.c:75:
+        p += sprintf(p, "colors: %d\n", page_colors);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/char/page_color.c:76:
+        p += sprintf(p, "hits: %d\n", page_hit_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/char/page_color.c:76:
+        p += sprintf(p, "hits: %d\n", page_hit_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/char/page_color.c:77:
+        p += sprintf(p, "misses: %d\n", page_miss_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/char/page_color.c:77:
+        p += sprintf(p, "misses: %d\n", page_miss_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/char/page_color.c:79:
+        return p - buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/char/page_color.c:79:
+        return p - buf;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/char/page_color.c:83:
+        0, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/char/page_color.c:83:
+        0, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/char/page_color.c:83:
+        0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/char/page_color.c:84:
+^I10, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/char/page_color.c:85:
+^I"page_color", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/char/page_color.c:86:
+^IS_IFREG | S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#163: FILE: drivers/char/page_color.c:86:
+	S_IFREG | S_IRUGO, 

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/char/page_color.c:87:
+^I1, 0, 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/char/page_color.c:88:
+^I0, 0, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/char/page_color.c:94:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: drivers/char/page_color.c:101:
+	printk("page_color: terminating page coloring\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#181: FILE: drivers/char/page_color.c:104:
+	proc_unregister( &proc_root, page_color_proc_entry.low_ino );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#181: FILE: drivers/char/page_color.c:104:
+	proc_unregister( &proc_root, page_color_proc_entry.low_ino );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/char/page_color.c:125:
+^I^Icache_size_int = simple_strtoul(cache_size, $

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#202: FILE: drivers/char/page_color.c:125:
+		cache_size_int = simple_strtoul(cache_size, 

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/char/page_color.c:126:
+		cache_size_int = simple_strtoul(cache_size, 
+					(char **)NULL, 10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/char/page_color.c:127:
+^I^Iif ( strchr(cache_size, 'M') || $

ERROR:SPACING: space prohibited after that open parenthesis '('
#204: FILE: drivers/char/page_color.c:127:
+		if ( strchr(cache_size, 'M') || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/char/page_color.c:128:
+		if ( strchr(cache_size, 'M') || 
+		     strchr(cache_size, 'm') )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#205: FILE: drivers/char/page_color.c:128:
+		     strchr(cache_size, 'm') )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#206: FILE: drivers/char/page_color.c:129:
+			cache_size_int *= 1024*1024;
 			                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/char/page_color.c:131:
+^I^Iif ( strchr(cache_size, 'K') || $

ERROR:SPACING: space prohibited after that open parenthesis '('
#208: FILE: drivers/char/page_color.c:131:
+		if ( strchr(cache_size, 'K') || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/char/page_color.c:132:
+		if ( strchr(cache_size, 'K') || 
+		     strchr(cache_size, 'k') )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#209: FILE: drivers/char/page_color.c:132:
+		     strchr(cache_size, 'k') )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/char/page_color.c:134:
+^I} $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#212: FILE: drivers/char/page_color.c:135:
+	} 
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#212: FILE: drivers/char/page_color.c:135:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#216: FILE: drivers/char/page_color.c:139:
+	if( (-cache_size_int & cache_size_int) != cache_size_int ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#216: FILE: drivers/char/page_color.c:139:
+	if( (-cache_size_int & cache_size_int) != cache_size_int ) {

ERROR:SPACING: space required before the open parenthesis '('
#216: FILE: drivers/char/page_color.c:139:
+	if( (-cache_size_int & cache_size_int) != cache_size_int ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#217: FILE: drivers/char/page_color.c:140:
+		printk ("page_color: cache size is not a power of two\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: drivers/char/page_color.c:140:
+		printk ("page_color: cache size is not a power of two\n");

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#225: FILE: drivers/char/page_color.c:148:
+	page_color_table = (unsigned long *)kmalloc(alloc_size, GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: drivers/char/page_color.c:150:
+		printk("page_color: memory allocation failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/char/page_color.c:155:
+ ^Ispin_lock_irqsave(&page_alloc_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: drivers/char/page_color.c:155:
+ ^Ispin_lock_irqsave(&page_alloc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/char/page_color.c:155:
+ ^Ispin_lock_irqsave(&page_alloc_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/char/page_color.c:158:
+ ^Ispin_unlock_irqrestore(&page_alloc_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: drivers/char/page_color.c:158:
+ ^Ispin_unlock_irqrestore(&page_alloc_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/page_color.c:158:
+ ^Ispin_unlock_irqrestore(&page_alloc_lock, flags);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#238: FILE: drivers/char/page_color.c:161:
+	proc_register( &proc_root, &page_color_proc_entry );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#238: FILE: drivers/char/page_color.c:161:
+	proc_register( &proc_root, &page_color_proc_entry );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: drivers/char/page_color.c:164:
+	printk("page_color: starting with %d colors\n", page_colors );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#241: FILE: drivers/char/page_color.c:164:
+	printk("page_color: starting with %d colors\n", page_colors );

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#269: FILE: kernel/ksyms.c:452:
+extern unsigned int page_miss_count;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#270: FILE: kernel/ksyms.c:453:
+extern unsigned int page_hit_count;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#271: FILE: kernel/ksyms.c:454:
+extern unsigned int page_colors;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#272: FILE: kernel/ksyms.c:455:
+extern unsigned long *page_color_table;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#273: FILE: kernel/ksyms.c:456:
+extern spinlock_t page_alloc_lock;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#274: FILE: kernel/ksyms.c:457:
+void fill_color_pool(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#275: FILE: kernel/ksyms.c:458:
+void empty_color_pool(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#276: FILE: kernel/ksyms.c:459:
+unsigned int page_color_alloc(void);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#278: FILE: kernel/ksyms.c:461:
+EXPORT_SYMBOL_NOVERS(page_coloring);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#279: FILE: kernel/ksyms.c:462:
+EXPORT_SYMBOL_NOVERS(page_miss_count);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#280: FILE: kernel/ksyms.c:463:
+EXPORT_SYMBOL_NOVERS(page_hit_count);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#281: FILE: kernel/ksyms.c:464:
+EXPORT_SYMBOL_NOVERS(page_colors);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#282: FILE: kernel/ksyms.c:465:
+EXPORT_SYMBOL_NOVERS(page_color_table);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#283: FILE: kernel/ksyms.c:466:
+EXPORT_SYMBOL_NOVERS(page_alloc_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#284: FILE: kernel/ksyms.c:467:
+EXPORT_SYMBOL_NOVERS(fill_color_pool);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#285: FILE: kernel/ksyms.c:468:
+EXPORT_SYMBOL_NOVERS(empty_color_pool);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#286: FILE: kernel/ksyms.c:469:
+EXPORT_SYMBOL_NOVERS(page_color_alloc);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#297: FILE: mm/page_alloc.c:79:
+unsigned int page_coloring = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#300: FILE: mm/page_alloc.c:82:
+unsigned int page_colors = 0;

ERROR:SPACING: space prohibited after that open parenthesis '('
#309: FILE: mm/page_alloc.c:91:
+				( 2 * page_colors + NR_MEM_LISTS );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#309: FILE: mm/page_alloc.c:91:
+				( 2 * page_colors + NR_MEM_LISTS );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#315: FILE: mm/page_alloc.c:97:
+	/* For each of the NR_MEM_LISTS queues in
+	   free_area[], move the queued pages into

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: mm/page_alloc.c:101:
+^I   $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: mm/page_alloc.c:103:
+	   called atomically. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: mm/page_alloc.c:110:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: mm/page_alloc.c:110:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: mm/page_alloc.c:111:
+ ^Icache_mask = page_colors - 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#329: FILE: mm/page_alloc.c:111:
+ ^Icache_mask = page_colors - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: mm/page_alloc.c:111:
+ ^Icache_mask = page_colors - 1;$

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: mm/page_alloc.c:114:
+	for(k = 0; k < NR_MEM_TYPES; k++) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#337: FILE: mm/page_alloc.c:119:
+		for(i = 0; i<NR_MEM_LISTS; i++) {
 		            ^

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: mm/page_alloc.c:119:
+		for(i = 0; i<NR_MEM_LISTS; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: mm/page_alloc.c:121:
+			for(j = 0; j < num_colors; j++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: mm/page_alloc.c:126:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: mm/page_alloc.c:127:
+			for(j = 0; j < old_area->count; j++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: mm/page_alloc.c:132:
+^I^I^I^Iadd_mem_queue(area + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: mm/page_alloc.c:135:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: mm/page_alloc.c:150:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: mm/page_alloc.c:150:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#369: FILE: mm/page_alloc.c:151:
+	for(m = 0; m < NR_MEM_TYPES; m++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: mm/page_alloc.c:152:
+ ^I^Iold_area = free_area[m];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: mm/page_alloc.c:152:
+ ^I^Iold_area = free_area[m];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: mm/page_alloc.c:152:
+ ^I^Iold_area = free_area[m];$

ERROR:SPACING: space required before the open parenthesis '('
#374: FILE: mm/page_alloc.c:156:
+		for(i = 0; i < NR_MEM_LISTS; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#378: FILE: mm/page_alloc.c:160:
+			for(j = 0; j < num_colors; j++) {

ERROR:SPACING: space required before the open parenthesis '('
#379: FILE: mm/page_alloc.c:161:
+				for(k = 0; k < area[j].count; k++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: mm/page_alloc.c:180:
+static inline unsigned int get_rand(void) $

CHECK:SPACING: No space is necessary after a cast
#398: FILE: mm/page_alloc.c:180:
+static inline unsigned int get_rand(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: mm/page_alloc.c:182:
+^I/* A multiply-with-carry random number generator by $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#401: FILE: mm/page_alloc.c:183:
+	/* A multiply-with-carry random number generator by 
+	   George Marsaglia. The period is about 1<<63, and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: mm/page_alloc.c:184:
+	   each call to get_rand() returns 32 random bits */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: mm/page_alloc.c:188:
+^Iprod = (unsigned long long)rand_seed * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: mm/page_alloc.c:189:
+^I       (unsigned long long)MULT + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: mm/page_alloc.c:204:
+ ^Iunsigned int cache_mask = page_colors - 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: mm/page_alloc.c:204:
+ ^Iunsigned int cache_mask = page_colors - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: mm/page_alloc.c:204:
+ ^Iunsigned int cache_mask = page_colors - 1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#425: FILE: mm/page_alloc.c:207:
+	/* If this process hasn't asked for free pages
+	   before, assign it a random starting color. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: mm/page_alloc.c:207:
+	   before, assign it a random starting color. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#433: FILE: mm/page_alloc.c:215:
+	/* Round the target color to look for up to the
+	   next 1<<order boundary. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: mm/page_alloc.c:215:
+	   next 1<<order boundary. */

ERROR:SPACING: space required before the open parenthesis '('
#445: FILE: mm/page_alloc.c:227:
+	for(i = order; i < NR_MEM_LISTS; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#448: FILE: mm/page_alloc.c:230:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#453: FILE: mm/page_alloc.c:235:
+	/* The memory allocation is guaranteed to succeed
+	   (although we may not find the correct color) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#453: FILE: mm/page_alloc.c:235:
+	   (although we may not find the correct color) */

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: mm/page_alloc.c:237:
+	while(1) {

ERROR:SPACING: space required before the open parenthesis '('
#456: FILE: mm/page_alloc.c:238:
+		for(i = order; i < NR_MEM_LISTS; i++) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#463: FILE: mm/page_alloc.c:245:
+		color = COLOR(color + (1<<order));
 		                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: mm/page_alloc.c:246:
+^I} $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#471: FILE: mm/page_alloc.c:253:
+	change_bit(map_nr >> (1+i), area->map);
 	                       ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#477: FILE: mm/page_alloc.c:259:
+	while (i > order) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: mm/page_alloc.c:260:
+^I^I/* Return 1<<order contiguous pages out of $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#479: FILE: mm/page_alloc.c:261:
+		/* Return 1<<order contiguous pages out of 
+		   the 1<<i available now. Without page coloring

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: mm/page_alloc.c:264:
+^I^I   them. Here, the bottom bits of the index to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: mm/page_alloc.c:265:
+^I^I   return must match the target color. We have to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: mm/page_alloc.c:267:
+^I^I   only ignore the halves that don't match the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#486: FILE: mm/page_alloc.c:268:
+		   bit pattern of the target color. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#492: FILE: mm/page_alloc.c:274:
+		change_bit(map_nr >> (1+i), area->map);
 		                       ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#498: FILE: mm/page_alloc.c:280:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#498: FILE: mm/page_alloc.c:280:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: mm/page_alloc.c:281:
+^I^I^Iadd_mem_queue(area + (COLOR(map_nr + mask) >> i), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: mm/page_alloc.c:282:
+			add_mem_queue(area + (COLOR(map_nr + mask) >> i), 
+							ret + mask);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#504: FILE: mm/page_alloc.c:286:
+	current->color_offset = COLOR(color + (1<<order));
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: mm/page_alloc.c:292:
+void free_pages_by_color(unsigned long map_nr, unsigned long mask,
+			unsigned long order, unsigned long index,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: mm/page_alloc.c:295:
+^I/* Works in the same way as __free_pages_ok, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: mm/page_alloc.c:296:
+^I   except that the mem_queue operations are $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#514: FILE: mm/page_alloc.c:296:
+	/* Works in the same way as __free_pages_ok, 
+	   except that the mem_queue operations are 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#515: FILE: mm/page_alloc.c:297:
+	   color-dependent. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: mm/page_alloc.c:298:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: mm/page_alloc.c:301:
+ ^Iunsigned int cache_mask = page_colors - 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#519: FILE: mm/page_alloc.c:301:
+ ^Iunsigned int cache_mask = page_colors - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: mm/page_alloc.c:301:
+ ^Iunsigned int cache_mask = page_colors - 1;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#527: FILE: mm/page_alloc.c:309:
+	while (mask + (1 << (NR_MEM_LISTS-1))) {
 	                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#587: FILE: mm/page_alloc.c:580:
+		unsigned long page = 0;
+		if (!(gfp_mask & __GFP_DMA))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000486467.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 78 errors, 71 warnings, 22 checks, 523 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000486467.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
