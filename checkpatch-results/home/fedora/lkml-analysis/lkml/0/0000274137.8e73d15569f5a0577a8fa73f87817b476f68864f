WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#43: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/input/serio/serio_raw.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#178: FILE: drivers/input/serio/serio_raw.c:88:
+	if (!(serio_raw = serio_raw_locate(iminor(inode)))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#188: FILE: drivers/input/serio/serio_raw.c:98:
+	if (!(list = kmalloc(sizeof(struct serio_raw_list), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*list)...) over kmalloc(sizeof(struct serio_raw_list)...)
#188: FILE: drivers/input/serio/serio_raw.c:98:
+	if (!(list = kmalloc(sizeof(struct serio_raw_list), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONST_STRUCT: struct file_operations should normally be const
#328: FILE: drivers/input/serio/serio_raw.c:238:
+struct file_operations serio_raw_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#338: FILE: drivers/input/serio/serio_raw.c:248:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: drivers/input/serio/serio_raw.c:250:
+ *                   Interface with serio port   ^I             *$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/input/serio/serio_raw.c:254:
+static irqreturn_t serio_raw_interrupt(struct serio *serio, unsigned char data,
+					unsigned int dfl, struct pt_regs *regs)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#371: FILE: drivers/input/serio/serio_raw.c:281:
+	if (!(serio_raw = kmalloc(sizeof(struct serio_raw), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio_raw)...) over kmalloc(sizeof(struct serio_raw)...)
#371: FILE: drivers/input/serio/serio_raw.c:281:
+	if (!(serio_raw = kmalloc(sizeof(struct serio_raw), GFP_KERNEL))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#372: FILE: drivers/input/serio/serio_raw.c:282:
+		printk(KERN_ERR "serio_raw.c: can't allocate memory for a device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#402: FILE: drivers/input/serio/serio_raw.c:312:
+		printk(KERN_INFO "serio_raw: failed to register raw access device for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/input/serio/serio_raw.c:313:
+		printk(KERN_INFO "serio_raw: failed to register raw access device for %s\n",
+			serio->phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#407: FILE: drivers/input/serio/serio_raw.c:317:
+	printk(KERN_INFO "serio_raw: raw access enabled on %s (%s, minor %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/input/serio/serio_raw.c:318:
+	printk(KERN_INFO "serio_raw: raw access enabled on %s (%s, minor %d)\n",
+		serio->phys, serio_raw->name, serio_raw->dev.minor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#427: FILE: drivers/input/serio/serio_raw.c:337:
+		printk(KERN_DEBUG "serio_raw: reconnect request, but serio is disconnected, ignoring...\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274137.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 8 warnings, 6 checks, 413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000274137.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
