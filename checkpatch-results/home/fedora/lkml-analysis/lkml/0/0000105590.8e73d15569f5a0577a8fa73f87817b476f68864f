WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: drivers/isdn/gigaset/usb-gigaset.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#66: FILE: drivers/isdn/gigaset/usb-gigaset.c:18:
+ * Version: $Id: usb-gigaset.c,v 1.85.4.18 2006/02/04 18:28:16 hjlipp Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#88: FILE: drivers/isdn/gigaset/usb-gigaset.c:40:
+module_param(startmode, int, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#89: FILE: drivers/isdn/gigaset/usb-gigaset.c:41:
+module_param(cidmode, int, S_IRUGO);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#106: FILE: drivers/isdn/gigaset/usb-gigaset.c:58:
+static struct usb_device_id gigaset_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: drivers/isdn/gigaset/usb-gigaset.c:68:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'll'
#124: FILE: drivers/isdn/gigaset/usb-gigaset.c:76:
+ *       C1 0F             ll ll

WARNING:REPEATED_WORD: Possible repeated word: 'xx'
#141: FILE: drivers/isdn/gigaset/usb-gigaset.c:93:
+ *       41 01 xx xx

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: drivers/isdn/gigaset/usb-gigaset.c:117:
+                         const struct usb_device_id *id);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/isdn/gigaset/usb-gigaset.c:117:
+                         const struct usb_device_id *id);$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#168: FILE: drivers/isdn/gigaset/usb-gigaset.c:120:
+static struct gigaset_driver *driver = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#169: FILE: drivers/isdn/gigaset/usb-gigaset.c:121:
+static struct cardstate *cardstate = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddr>
#187: FILE: drivers/isdn/gigaset/usb-gigaset.c:139:
+	__u8                    bulk_out_endpointAddr;  /* the address of the bulk out endpoint */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <int_in_endpointAddr>
#193: FILE: drivers/isdn/gigaset/usb-gigaset.c:145:
+	__u8                    int_in_endpointAddr;    /* the address of the bulk in endpoint */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: drivers/isdn/gigaset/usb-gigaset.c:152:
+static inline unsigned tiocm_to_gigaset(unsigned state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: drivers/isdn/gigaset/usb-gigaset.c:152:
+static inline unsigned tiocm_to_gigaset(unsigned state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#207: FILE: drivers/isdn/gigaset/usb-gigaset.c:159:
+static int gigaset_set_modem_ctrl(struct cardstate *cs, unsigned old_state,

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/isdn/gigaset/usb-gigaset.c:160:
+                                  unsigned new_state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/isdn/gigaset/usb-gigaset.c:160:
+                                  unsigned new_state)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#208: FILE: drivers/isdn/gigaset/usb-gigaset.c:160:
+                                  unsigned new_state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#210: FILE: drivers/isdn/gigaset/usb-gigaset.c:162:
+	unsigned mask, val;

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/isdn/gigaset/usb-gigaset.c:170:
+^I                    usb_sndctrlpipe(cs->hw.usb->udev, 0), 7, 0x41,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/isdn/gigaset/usb-gigaset.c:171:
+^I                    (val & 0xff) | ((mask & 0xff) << 8), 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/isdn/gigaset/usb-gigaset.c:172:
+^I                    NULL, 0, 2000 /*timeout??*/); // don't use this in an interrupt/BH$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#221: FILE: drivers/isdn/gigaset/usb-gigaset.c:173:
+	                    NULL, 0, 2000 /*timeout??*/); // don't use this in an interrupt/BH
+	if (r < 0)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#231: FILE: drivers/isdn/gigaset/usb-gigaset.c:183:
+	dbg(DEBUG_USBREQ, "request %02x (%04x)", (unsigned)req, (unsigned)val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#231: FILE: drivers/isdn/gigaset/usb-gigaset.c:183:
+	dbg(DEBUG_USBREQ, "request %02x (%04x)", (unsigned)req, (unsigned)val);

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/isdn/gigaset/usb-gigaset.c:185:
+^I                    usb_sndctrlpipe(cs->hw.usb->udev, 0), 0x12, 0x41,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/isdn/gigaset/usb-gigaset.c:186:
+^I                    0xf /*?*/, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/isdn/gigaset/usb-gigaset.c:187:
+^I                    NULL, 0, 2000 /*?*/); /* no idea, what this does */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/isdn/gigaset/usb-gigaset.c:194:
+^I                    usb_sndctrlpipe(cs->hw.usb->udev, 0), req, 0x41,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/isdn/gigaset/usb-gigaset.c:195:
+^I                    val, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/isdn/gigaset/usb-gigaset.c:196:
+^I                    NULL, 0, 2000 /*?*/);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#246: FILE: drivers/isdn/gigaset/usb-gigaset.c:198:
+		err("error %d on request 0x%02x", -r, (unsigned)req);

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/isdn/gigaset/usb-gigaset.c:201:
+^I                     usb_sndctrlpipe(cs->hw.usb->udev, 0), 0x19, 0x41,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/isdn/gigaset/usb-gigaset.c:202:
+^I                     0, 0, cs->hw.usb->bchars, 6, 2000 /*?*/);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#259: FILE: drivers/isdn/gigaset/usb-gigaset.c:211:
+static int gigaset_baud_rate(struct cardstate *cs, unsigned cflag)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#268: FILE: drivers/isdn/gigaset/usb-gigaset.c:220:
+	case    B300: rate =     300; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#269: FILE: drivers/isdn/gigaset/usb-gigaset.c:221:
+	case    B600: rate =     600; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#270: FILE: drivers/isdn/gigaset/usb-gigaset.c:222:
+	case   B1200: rate =    1200; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: drivers/isdn/gigaset/usb-gigaset.c:223:
+	case   B2400: rate =    2400; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#272: FILE: drivers/isdn/gigaset/usb-gigaset.c:224:
+	case   B4800: rate =    4800; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#273: FILE: drivers/isdn/gigaset/usb-gigaset.c:225:
+	case   B9600: rate =    9600; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#274: FILE: drivers/isdn/gigaset/usb-gigaset.c:226:
+	case  B19200: rate =   19200; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#275: FILE: drivers/isdn/gigaset/usb-gigaset.c:227:
+	case  B38400: rate =   38400; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#276: FILE: drivers/isdn/gigaset/usb-gigaset.c:228:
+	case  B57600: rate =   57600; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#277: FILE: drivers/isdn/gigaset/usb-gigaset.c:229:
+	case B115200: rate =  115200; break;

WARNING:SPLIT_STRING: quoted string split across lines
#281: FILE: drivers/isdn/gigaset/usb-gigaset.c:233:
+		err("unsupported baudrate request 0x%x,"
+		    " using default of B9600", cflag);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: drivers/isdn/gigaset/usb-gigaset.c:243:
+static int gigaset_set_line_ctrl(struct cardstate *cs, unsigned cflag)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#319: FILE: drivers/isdn/gigaset/usb-gigaset.c:271:
+			val |= 1; /* 1.5 stop bits */ //FIXME is this okay?
+		else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#327: FILE: drivers/isdn/gigaset/usb-gigaset.c:279:
+static int gigaset_set_modem_ctrl(struct cardstate *cs, unsigned old_state,

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: drivers/isdn/gigaset/usb-gigaset.c:280:
+                                  unsigned new_state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/isdn/gigaset/usb-gigaset.c:280:
+                                  unsigned new_state)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#328: FILE: drivers/isdn/gigaset/usb-gigaset.c:280:
+                                  unsigned new_state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#333: FILE: drivers/isdn/gigaset/usb-gigaset.c:285:
+static int gigaset_set_line_ctrl(struct cardstate *cs, unsigned cflag)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#338: FILE: drivers/isdn/gigaset/usb-gigaset.c:290:
+static int gigaset_baud_rate(struct cardstate *cs, unsigned cflag)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#344: FILE: drivers/isdn/gigaset/usb-gigaset.c:296:
+
+

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#345: FILE: drivers/isdn/gigaset/usb-gigaset.c:297:
+ /*================================================================================================================*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: drivers/isdn/gigaset/usb-gigaset.c:316:
+
+

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#367: FILE: drivers/isdn/gigaset/usb-gigaset.c:319:
+ * This function will be called by the ISR via "transmit_chars" (USB: B-Channel Bulk callback handler

CHECK:SPACING: No space is necessary after a cast
#372: FILE: drivers/isdn/gigaset/usb-gigaset.c:324:
+	struct cardstate *cs = (struct cardstate *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#403: FILE: drivers/isdn/gigaset/usb-gigaset.c:355:
+					    (unsigned long) bcs->tx_skb);

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#422: FILE: drivers/isdn/gigaset/usb-gigaset.c:374:
+ *      It is called if the data was received from the device. This is almost similiar to
                                                                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#430: FILE: drivers/isdn/gigaset/usb-gigaset.c:382:
+	unsigned numbytes;

CHECK:SPACING: No space is necessary after a cast
#436: FILE: drivers/isdn/gigaset/usb-gigaset.c:388:
+	inbuf = (struct inbuf_t *) urb->context;

CHECK:BRACES: braces {} should be used on all arms of this statement
#451: FILE: drivers/isdn/gigaset/usb-gigaset.c:403:
+		if (numbytes) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#455: FILE: drivers/isdn/gigaset/usb-gigaset.c:407:
+				     __func__, (unsigned) *src);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#455: FILE: drivers/isdn/gigaset/usb-gigaset.c:407:
+				     __func__, (unsigned) *src);

CHECK:BRACES: Unbalanced braces around else statement
#462: FILE: drivers/isdn/gigaset/usb-gigaset.c:414:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: drivers/isdn/gigaset/usb-gigaset.c:433:
+
+

CHECK:SPACING: No space is necessary after a cast
#489: FILE: drivers/isdn/gigaset/usb-gigaset.c:441:
+	struct cardstate *cs = (struct cardstate *) urb->context;

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#499: FILE: drivers/isdn/gigaset/usb-gigaset.c:451:
+		err("bulk transfer failed (status %d)", -urb->status); /* That's all we can do. Communication problems

WARNING:TYPO_SPELLING: 'handeled' may be misspelled - perhaps 'handled'?
#500: FILE: drivers/isdn/gigaset/usb-gigaset.c:452:
+		                                                           are handeled by timeouts or network protocols */
 		                                                               ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#500: FILE: drivers/isdn/gigaset/usb-gigaset.c:452:
+		                                                           are handeled by timeouts or network protocols */

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/isdn/gigaset/usb-gigaset.c:452:
+^I^I                                                           are handeled by timeouts or network protocols */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#500: FILE: drivers/isdn/gigaset/usb-gigaset.c:452:
+		err("bulk transfer failed (status %d)", -urb->status); /* That's all we can do. Communication problems
+		                                                           are handeled by timeouts or network protocols */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#500: FILE: drivers/isdn/gigaset/usb-gigaset.c:452:
+		                                                           are handeled by timeouts or network protocols */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cb', this function's name, in a string
#520: FILE: drivers/isdn/gigaset/usb-gigaset.c:472:
+			dbg(DEBUG_OUTPUT, "send_cb: sent %u bytes, %u left",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#522: FILE: drivers/isdn/gigaset/usb-gigaset.c:474:
+			cs->cmdbuf = cb = cb->next;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: drivers/isdn/gigaset/usb-gigaset.c:491:
+^I^I^I                  usb_sndbulkpipe(ucs->udev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: drivers/isdn/gigaset/usb-gigaset.c:492:
+^I^I^I                     ucs->bulk_out_endpointAddr & 0x0f),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/isdn/gigaset/usb-gigaset.c:492:
+			                  usb_sndbulkpipe(ucs->udev,
+			                     ucs->bulk_out_endpointAddr & 0x0f),

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: drivers/isdn/gigaset/usb-gigaset.c:493:
+^I^I^I                  cb->buf + cb->offset, count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: drivers/isdn/gigaset/usb-gigaset.c:494:
+^I^I^I                  gigaset_write_bulk_callback, cs);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cb', this function's name, in a string
#547: FILE: drivers/isdn/gigaset/usb-gigaset.c:499:
+			dbg(DEBUG_OUTPUT, "send_cb: send %d bytes", count);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#557: FILE: drivers/isdn/gigaset/usb-gigaset.c:509:
+	} while (cb && status); /* bei Fehler naechster Befehl //FIXME: ist das OK? */
 	                                                                ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/isdn/gigaset/usb-gigaset.c:517:
+                             int len, struct tasklet_struct *wake_tasklet)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/isdn/gigaset/usb-gigaset.c:517:
+                             int len, struct tasklet_struct *wake_tasklet)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: drivers/isdn/gigaset/usb-gigaset.c:523:
+^I                     DEBUG_TRANSCMD : DEBUG_LOCKCMD,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: drivers/isdn/gigaset/usb-gigaset.c:524:
+^I                   "CMD Transmit", len, buf, 0);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#582: FILE: drivers/isdn/gigaset/usb-gigaset.c:534:
+	if (!(cb = kmalloc(sizeof(struct cmdbuf_t) + len, GFP_ATOMIC))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cb)...) over kmalloc(sizeof(struct cmdbuf_t)...)
#582: FILE: drivers/isdn/gigaset/usb-gigaset.c:534:
+	if (!(cb = kmalloc(sizeof(struct cmdbuf_t) + len, GFP_ATOMIC))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#595: FILE: drivers/isdn/gigaset/usb-gigaset.c:547:
+	if (cs->lastcmdbuf)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#597: FILE: drivers/isdn/gigaset/usb-gigaset.c:549:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#612: FILE: drivers/isdn/gigaset/usb-gigaset.c:564:
+	unsigned bytes;

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/isdn/gigaset/usb-gigaset.c:584:
+^I                       usb_sndctrlpipe(cs->hw.usb->udev, 0), 0x19, 0x41,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/isdn/gigaset/usb-gigaset.c:585:
+^I                       0, 0, &buf, 6, 2000);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bcs->hw.usb)...) over kmalloc(sizeof(struct usb_bc_state)...)
#651: FILE: drivers/isdn/gigaset/usb-gigaset.c:603:
+	bcs->hw.usb = kmalloc(sizeof(struct usb_bc_state), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#674: FILE: drivers/isdn/gigaset/usb-gigaset.c:626:
+	cs->hw.usb = ucs =

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: drivers/isdn/gigaset/usb-gigaset.c:642:
+^I             &gigaset_modem_fill, (unsigned long) cs);$

CHECK:SPACING: No space is necessary after a cast
#690: FILE: drivers/isdn/gigaset/usb-gigaset.c:642:
+	             &gigaset_modem_fill, (unsigned long) cs);

WARNING:TYPO_SPELLING: 'synchonize' may be misspelled - perhaps 'synchronize'?
#699: FILE: drivers/isdn/gigaset/usb-gigaset.c:651:
+ * we using "trans_flg" to synchonize ...
                            ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#727: FILE: drivers/isdn/gigaset/usb-gigaset.c:679:
+	count = min(bcs->tx_skb->len, (unsigned) ucs->bulk_out_size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#727: FILE: drivers/isdn/gigaset/usb-gigaset.c:679:
+	count = min(bcs->tx_skb->len, (unsigned) ucs->bulk_out_size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: drivers/isdn/gigaset/usb-gigaset.c:684:
+^I                  usb_sndbulkpipe(ucs->udev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: drivers/isdn/gigaset/usb-gigaset.c:685:
+^I                                  ucs->bulk_out_endpointAddr & 0x0f),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: drivers/isdn/gigaset/usb-gigaset.c:686:
+^I                  ucs->bulk_out_buffer, count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#735: FILE: drivers/isdn/gigaset/usb-gigaset.c:687:
+^I                  gigaset_write_bulk_callback, cs);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_modem', this function's name, in a string
#737: FILE: drivers/isdn/gigaset/usb-gigaset.c:689:
+	dbg(DEBUG_OUTPUT, "write_modem: send %d bytes", count);

CHECK:SPACING: No space is necessary after a cast
#749: FILE: drivers/isdn/gigaset/usb-gigaset.c:701:
+		    "kfree skb (Adr: %lx)!", (unsigned long) bcs->tx_skb);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#760: FILE: drivers/isdn/gigaset/usb-gigaset.c:712:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: drivers/isdn/gigaset/usb-gigaset.c:715:
+                         const struct usb_device_id *id)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: drivers/isdn/gigaset/usb-gigaset.c:715:
+                         const struct usb_device_id *id)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#779: FILE: drivers/isdn/gigaset/usb-gigaset.c:731:
+	info("%s: Check if device matches .. (Vendor: 0x%x, Product: 0x%x)",
+	    __func__, le16_to_cpu(udev->descriptor.idVendor),

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#779: FILE: drivers/isdn/gigaset/usb-gigaset.c:731:
+	    __func__, le16_to_cpu(udev->descriptor.idVendor),

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#780: FILE: drivers/isdn/gigaset/usb-gigaset.c:732:
+	    le16_to_cpu(udev->descriptor.idProduct));

CHECK:CAMELCASE: Avoid CamelCase: <bAlternateSetting>
#791: FILE: drivers/isdn/gigaset/usb-gigaset.c:743:
+	alt = hostif->desc.bAlternateSetting;

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#792: FILE: drivers/isdn/gigaset/usb-gigaset.c:744:
+	ifnum = hostif->desc.bInterfaceNumber; // FIXME ?

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#802: FILE: drivers/isdn/gigaset/usb-gigaset.c:754:
+	if (hostif->desc.bInterfaceClass != 255) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: drivers/isdn/gigaset/usb-gigaset.c:756:
+		info("%s: Device matched, but iface_desc[%d]->bInterfaceClass==%d !",
+		       __func__, ifnum, hostif->desc.bInterfaceClass);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#817: FILE: drivers/isdn/gigaset/usb-gigaset.c:769:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <bConfigurationValue>
#818: FILE: drivers/isdn/gigaset/usb-gigaset.c:770:
+	if (usb_set_configuration(udev, udev->config[0].desc.bConfigurationValue) < 0) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#823: FILE: drivers/isdn/gigaset/usb-gigaset.c:775:
+
+

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#835: FILE: drivers/isdn/gigaset/usb-gigaset.c:787:
+	 * Therefore we will have an almost similiar situation as with our serial port handler.
 	                                    ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#842: FILE: drivers/isdn/gigaset/usb-gigaset.c:794:
+	buffer_size = le16_to_cpu(endpoint->wMaxPacketSize);

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#844: FILE: drivers/isdn/gigaset/usb-gigaset.c:796:
+	ucs->bulk_out_endpointAddr = endpoint->bEndpointAddress;

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: drivers/isdn/gigaset/usb-gigaset.c:834:
+^I                 usb_rcvintpipe(udev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: drivers/isdn/gigaset/usb-gigaset.c:835:
+^I                                endpoint->bEndpointAddress & 0x0f),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: drivers/isdn/gigaset/usb-gigaset.c:836:
+^I                 cs->inbuf[0].rcvbuf, buffer_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: drivers/isdn/gigaset/usb-gigaset.c:837:
+^I                 gigaset_read_int_callback,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: drivers/isdn/gigaset/usb-gigaset.c:838:
+^I                 cs->inbuf + 0, endpoint->bInterval);$

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#886: FILE: drivers/isdn/gigaset/usb-gigaset.c:838:
+	                 cs->inbuf + 0, endpoint->bInterval);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->bulk_out_urb"
#914: FILE: drivers/isdn/gigaset/usb-gigaset.c:866:
+	if (ucs->bulk_out_urb != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->read_urb"
#917: FILE: drivers/isdn/gigaset/usb-gigaset.c:869:
+	if (ucs->read_urb != NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#919: FILE: drivers/isdn/gigaset/usb-gigaset.c:871:
+	ucs->read_urb = ucs->bulk_out_urb = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#920: FILE: drivers/isdn/gigaset/usb-gigaset.c:872:
+	cs->inbuf[0].rcvbuf = ucs->bulk_out_buffer = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->bulk_out_urb"
#951: FILE: drivers/isdn/gigaset/usb-gigaset.c:903:
+	if (ucs->bulk_out_urb != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ucs->read_urb"
#956: FILE: drivers/isdn/gigaset/usb-gigaset.c:908:
+	if (ucs->read_urb != NULL)

ERROR:SPACING: spaces required around that '=' (ctx:CxV)
#958: FILE: drivers/isdn/gigaset/usb-gigaset.c:910:
+	ucs->read_urb = ucs->bulk_out_urb/*=ucs->urb_cmd_out*/=NULL;
 	                                                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#959: FILE: drivers/isdn/gigaset/usb-gigaset.c:911:
+	cs->inbuf[0].rcvbuf = ucs->bulk_out_buffer = NULL;

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#991: FILE: drivers/isdn/gigaset/usb-gigaset.c:943:
+	/* allocate memory for our driver state and intialize it */
 	                                            ^^^^^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#992: FILE: drivers/isdn/gigaset/usb-gigaset.c:944:
+	if ((driver = gigaset_initdriver(GIGASET_MINOR, GIGASET_MINORS,

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: drivers/isdn/gigaset/usb-gigaset.c:945:
+^I                               GIGASET_MODULENAME, GIGASET_DEVNAME,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/isdn/gigaset/usb-gigaset.c:945:
+	if ((driver = gigaset_initdriver(GIGASET_MINOR, GIGASET_MINORS,
+	                               GIGASET_MODULENAME, GIGASET_DEVNAME,

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: drivers/isdn/gigaset/usb-gigaset.c:946:
+^I                               GIGASET_DEVFSNAME, &ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: drivers/isdn/gigaset/usb-gigaset.c:947:
+^I                               THIS_MODULE)) == NULL)$

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#998: FILE: drivers/isdn/gigaset/usb-gigaset.c:950:
+	/* allocate memory for our device state and intialize it */
 	                                            ^^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#1015: FILE: drivers/isdn/gigaset/usb-gigaset.c:967:
+error:	if (cardstate)
+		gigaset_freecs(cardstate);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1024: FILE: drivers/isdn/gigaset/usb-gigaset.c:976:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: drivers/isdn/gigaset/usb-gigaset.c:984:
+^I                              * => no gigaset_start any more$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: drivers/isdn/gigaset/usb-gigaset.c:985:
+^I                              */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1049: FILE: drivers/isdn/gigaset/usb-gigaset.c:1001:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1060: FILE: drivers/isdn/gigaset/asyncdata.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1075: FILE: drivers/isdn/gigaset/asyncdata.c:16:
+ * Version: $Id: asyncdata.c,v 1.2.2.7 2005/11/13 23:05:18 hjlipp Exp $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1091: FILE: drivers/isdn/gigaset/asyncdata.c:32:
+	if (c < PPP_TRANS) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1092: FILE: drivers/isdn/gigaset/asyncdata.c:33:
+	if (c == PPP_FLAG) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1093: FILE: drivers/isdn/gigaset/asyncdata.c:34:
+	if (c == PPP_ESCAPE) return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: drivers/isdn/gigaset/asyncdata.c:48:
+                           struct inbuf_t *inbuf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: drivers/isdn/gigaset/asyncdata.c:48:
+                           struct inbuf_t *inbuf)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1110: FILE: drivers/isdn/gigaset/asyncdata.c:51:
+	unsigned cbytes      = cs->cbytes;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1158: FILE: drivers/isdn/gigaset/asyncdata.c:99:
+                            struct inbuf_t *inbuf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: drivers/isdn/gigaset/asyncdata.c:99:
+                            struct inbuf_t *inbuf)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1177: FILE: drivers/isdn/gigaset/asyncdata.c:118:
+                            struct inbuf_t *inbuf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1177: FILE: drivers/isdn/gigaset/asyncdata.c:118:
+                            struct inbuf_t *inbuf)$

CHECK:BRACES: Unbalanced braces around else statement
#1228: FILE: drivers/isdn/gigaset/asyncdata.c:169:
+				} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1241: FILE: drivers/isdn/gigaset/asyncdata.c:182:
+				break;
+			} else {

WARNING:SPLIT_STRING: quoted string split across lines
#1250: FILE: drivers/isdn/gigaset/asyncdata.c:191:
+					err("Packet checksum at %lu failed, "
+					    "packet is corrupted (%u bytes)!",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1256: FILE: drivers/isdn/gigaset/asyncdata.c:197:
+					if (likely((l = skb->len) > 2)) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1263: FILE: drivers/isdn/gigaset/asyncdata.c:204:
+						if (l == 1) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1286: FILE: drivers/isdn/gigaset/asyncdata.c:227:
+			} else if (likely((skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN)) != NULL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1351: FILE: drivers/isdn/gigaset/asyncdata.c:292:
+                            struct inbuf_t *inbuf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: drivers/isdn/gigaset/asyncdata.c:292:
+                            struct inbuf_t *inbuf)$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1394: FILE: drivers/isdn/gigaset/asyncdata.c:335:
+		if (likely(!(inputstate & INS_skip_frame))) {
+			gigaset_rcv_skb(skb, cs, bcs);
+		}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1401: FILE: drivers/isdn/gigaset/asyncdata.c:342:
+		} else if (likely((skb = dev_alloc_skb(SBUFSIZE + HW_HDR_LEN))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1420: FILE: drivers/isdn/gigaset/asyncdata.c:361:
+	unsigned tail, head, numbytes;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: drivers/isdn/gigaset/asyncdata.c:384:
+				if (c == DLE_FLAG && (cs->dle ||
+				    inbuf->inputstate & INS_DLE_command)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1453: FILE: drivers/isdn/gigaset/asyncdata.c:394:
+				if (!(inbuf->inputstate & INS_DLE_char)) {
+

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#1454: FILE: drivers/isdn/gigaset/asyncdata.c:395:
+					/* FIXME Einfach je nach Modus Funktionszeiger in cs setzen [hier+hdlc_loop]?  */

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1455: FILE: drivers/isdn/gigaset/asyncdata.c:396:
+					/* FIXME Spart folgendes "if" und ermoeglicht andere Protokolle */

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1470: FILE: drivers/isdn/gigaset/asyncdata.c:411:
+						if (inbuf->inputstate & INS_command)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1478: FILE: drivers/isdn/gigaset/asyncdata.c:419:
+						if (!(inbuf->inputstate & INS_command))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1482: FILE: drivers/isdn/gigaset/asyncdata.c:423:
+							~(INS_DLE_command|INS_command)
 							                 ^

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1485: FILE: drivers/isdn/gigaset/asyncdata.c:426:
+					//case DLE_FLAG: /*DLE_FLAG in data stream*/ /* schon oben behandelt! */

CHECK:SPACING: No space is necessary after a cast
#1487: FILE: drivers/isdn/gigaset/asyncdata.c:428:
+						err("received 0x10 0x%02x!", (int) c);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1511: FILE: drivers/isdn/gigaset/asyncdata.c:452:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1562: FILE: drivers/isdn/gigaset/asyncdata.c:503:
+		if (muststuff(*skb->data)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1565: FILE: drivers/isdn/gigaset/asyncdata.c:506:
+		} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1606: FILE: drivers/isdn/gigaset/asyncdata.c:547:
+	iraw_skb = dev_alloc_skb(2*skb->len + tail + head);
 	                          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1639: FILE: drivers/isdn/gigaset/asyncdata.c:580:
+	unsigned len;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105590.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 68 warnings, 55 checks, 1605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105590.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
