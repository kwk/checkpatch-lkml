WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
that's in current Fedora kernels.  There's well-known ways to do the equivalent of

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#88: 
Signed-off-by:  <valdis.kletnieks@vt.edu>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ctl_table *' should also have an identifier name
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#96: FILE: include/linux/sysctl.h:801:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: include/linux/sysctl.h:802:
+extern int proc_dointvec_gated(ctl_table *, int, struct file *,
+			void __user *, size_t *, loff_t *);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#119: FILE: kernel/sysctl.c:1701:
+ * @filp: the file structure
     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#133: FILE: kernel/sysctl.c:1715:
+int proc_dointvec_gated(ctl_table *table, int write, struct file *filp,
                                                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: kernel/sysctl.c:1716:
+int proc_dointvec_gated(ctl_table *table, int write, struct file *filp,
+		  void __user *buffer, size_t *lenp, loff_t *ppos)

CHECK:SPACING: No space is necessary after a cast
#136: FILE: kernel/sysctl.c:1718:
+	int *flag = (int *) (table->extra1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: kernel/sysctl.c:1719:
+	int *flag = (int *) (table->extra1);
+	if (write && flag && !(*flag)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#137: FILE: kernel/sysctl.c:1719:
+	if (write && flag && !(*flag)) {
+		return -EPERM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#140: FILE: kernel/sysctl.c:1722:
+	return do_proc_dointvec(table, write, filp, buffer, lenp, ppos,
 	                                      ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: kernel/sysctl.c:1726:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150760.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 5 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150760.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
