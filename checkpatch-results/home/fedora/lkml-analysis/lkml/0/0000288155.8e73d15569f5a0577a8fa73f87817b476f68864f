CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#55: 
Jörn
 ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#140: 
--- linux-2.6.5cow/fs/adfs/inode.c~readpage_prune	2004-04-15 22:44:06.000000000 +0200

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: fs/affs/file.c:414:
 }
+static int affs_readpage(struct page *page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: fs/affs/file.c:509:
+affs_do_readpage_ofs(struct page *page, unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: fs/affs/file.c:509:
+affs_do_readpage_ofs(struct page *page, unsigned from, unsigned to)

CHECK:SPACING: No space is necessary after a cast
#226: FILE: fs/afs/dir.c:189:
+			       (filler_t *) dir->i_mapping->a_ops->readpage);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: fs/block_dev.c:167:
+static int blkdev_readpage(struct page * page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: fs/cramfs/inode.c:422:
+static int cramfs_readpage(struct page * page)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#363: FILE: fs/ext2/dir.c:163:
+				(filler_t*)mapping->a_ops->readpage);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: fs/ext2/inode.c:621:
+ext2_readpages(struct address_space *mapping,
 		struct list_head *pages, unsigned nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: fs/ext3/inode.c:1496:
+ext3_readpages(struct address_space *mapping,
 		struct list_head *pages, unsigned nr_pages)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#410: FILE: fs/fat/inode.c:1110:
 }
+static int fat_readpage(struct page *page)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#450: FILE: fs/freevxfs/vxfs_subr.c:76:
+			(filler_t*)mapping->a_ops->readpage);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#481: FILE: fs/hfs/btree.c:63:
+	page = read_cache_page(mapping, 0, (filler_t*)mapping->a_ops->readpage);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#561: FILE: fs/hfsplus/btree.c:50:
+	page = read_cache_page(mapping, 0, (filler_t*)mapping->a_ops->readpage);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#583: FILE: fs/hpfs/file.c:89:
 }
+static int hpfs_readpage(struct page *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#605: FILE: fs/hugetlbfs/inode.c:122:
+static int hugetlbfs_readpage(struct page * page)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: fs/jffs2/file.c:68:
+int jffs2_do_readpage_nolock (struct page *pg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: fs/jffs2/file.c:109:
+int jffs2_readpage (struct page *pg)

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#735: FILE: fs/jffs2/gc.c:1190:
+	pg = read_cache_page(inode->i_mapping, start >> PAGE_CACHE_SHIFT, (filler_t *)jffs2_do_readpage_unlock);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: fs/jffs2/os-linux.h:165:
+int jffs2_readpage (struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#746: FILE: fs/jffs2/os-linux.h:165:
+int jffs2_readpage (struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: fs/jfs/inode.c:289:
+static int jfs_readpages(struct address_space *mapping,
 		struct list_head *pages, unsigned nr_pages)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#796: FILE: fs/minix/dir.c:64:
+				(filler_t*)mapping->a_ops->readpage);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#807: FILE: fs/minix/inode.c:324:
 }
+static int minix_readpage(struct page *page)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#819: FILE: fs/namei.c:2355:
+	page = read_cache_page(mapping, 0, (filler_t*)mapping->a_ops->readpage);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#852: FILE: fs/ntfs/mft.c:103:
+extern int ntfs_readpage(struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#852: FILE: fs/ntfs/mft.c:103:
+extern int ntfs_readpage(struct page *);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#863: FILE: fs/ntfs/ntfs.h:143:
+			(filler_t*)mapping->a_ops->readpage);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#875: FILE: fs/ntfs/super.c:1107:
+		page = read_cache_page(mapping, index, (filler_t*)readpage);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#885: FILE: fs/ntfs/super.c:1195:
+		page = read_cache_page(mapping, index, (filler_t*)readpage);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#907: FILE: fs/qnx4/inode.c:430:
 }
+static int qnx4_readpage(struct page *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: fs/reiserfs/inode.c:940:
+reiserfs_readpages(struct address_space *mapping,
 		struct list_head *pages, unsigned nr_pages)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#927: FILE: fs/reiserfs/inode.c:2220:
+static int reiserfs_readpage (struct page * page)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#927: FILE: fs/reiserfs/inode.c:2220:
+static int reiserfs_readpage (struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#938: FILE: fs/romfs/inode.c:418:
+romfs_readpage(struct page * page)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#949: FILE: fs/sysv/dir.c:57:
+				(filler_t*)mapping->a_ops->readpage);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#960: FILE: fs/sysv/itree.c:454:
 }
+static int sysv_readpage(struct page *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#971: FILE: fs/udf/file.c:47:
+static int udf_adinicb_readpage(struct page * page)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#993: FILE: fs/ufs/inode.c:513:
 }
+static int ufs_readpage(struct page *page)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1004: FILE: fs/umsdos/dir.c:695:
+	page = read_cache_page(mapping, 0, (filler_t*)mapping->a_ops->readpage);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1015: FILE: fs/umsdos/emd.c:139:
+			(filler_t*)mapping->a_ops->readpage);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1024: FILE: fs/umsdos/emd.c:161:
+				(filler_t*)mapping->a_ops->readpage);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1042: FILE: fs/umsdos/emd.c:438:
+			next_page = read_cache_page(mapping, index+1, readpage);
 			                                          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#1053: FILE: include/linux/fs.h:300:
+	int (*readpage)(struct page *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1063: FILE: include/linux/fs.h:310:
+	int (*readpages)(struct address_space *mapping,
 			struct list_head *pages, unsigned nr_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1071: FILE: include/linux/fs.h:1421:
+extern int simple_readpage(struct page *page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1107: FILE: mm/filemap.c:1414:
+				int (*filler)(struct page*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1126: FILE: mm/filemap.c:1454:
+				int (*filler)(struct page*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1174: FILE: mm/swapfile.c:1339:
+	page = read_cache_page(mapping, 0, (filler_t*)mapping->a_ops->readpage);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288155.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 12 warnings, 16 checks, 820 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288155.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
