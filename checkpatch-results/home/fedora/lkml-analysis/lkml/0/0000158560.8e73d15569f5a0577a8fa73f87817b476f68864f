ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/linux/klist.h:37:
+extern void klist_add_tail(struct klist_node * n, struct klist * k);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/linux/klist.h:37:
+extern void klist_add_tail(struct klist_node * n, struct klist * k);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/klist.h:37:
+extern void klist_add_tail(struct klist_node * n, struct klist * k);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: include/linux/klist.h:38:
+extern void klist_add_head(struct klist_node * n, struct klist * k);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: include/linux/klist.h:38:
+extern void klist_add_head(struct klist_node * n, struct klist * k);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/klist.h:38:
+extern void klist_add_head(struct klist_node * n, struct klist * k);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: lib/klist.c:86:
+void klist_add_head(struct klist_node * n, struct klist * k)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: lib/klist.c:86:
+void klist_add_head(struct klist_node * n, struct klist * k)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: lib/klist.c:101:
+void klist_add_tail(struct klist_node * n, struct klist * k)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: lib/klist.c:101:
+void klist_add_tail(struct klist_node * n, struct klist * k)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 0 warnings, 2 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
