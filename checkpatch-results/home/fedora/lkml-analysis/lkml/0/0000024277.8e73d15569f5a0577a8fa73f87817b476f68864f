CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#37: FILE: drivers/kvm/kvm.h:12:
+#define CR0_PE_MASK (1ULL << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#38: FILE: drivers/kvm/kvm.h:13:
+#define CR0_TS_MASK (1ULL << 3)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#39: FILE: drivers/kvm/kvm.h:14:
+#define CR0_NE_MASK (1ULL << 5)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#40: FILE: drivers/kvm/kvm.h:15:
+#define CR0_WP_MASK (1ULL << 16)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#41: FILE: drivers/kvm/kvm.h:16:
+#define CR0_NW_MASK (1ULL << 29)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#42: FILE: drivers/kvm/kvm.h:17:
+#define CR0_CD_MASK (1ULL << 30)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#43: FILE: drivers/kvm/kvm.h:18:
+#define CR0_PG_MASK (1ULL << 31)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#45: FILE: drivers/kvm/kvm.h:20:
+#define CR3_WPT_MASK (1ULL << 3)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#46: FILE: drivers/kvm/kvm.h:21:
+#define CR3_PCD_MASK (1ULL << 4)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#52: FILE: drivers/kvm/kvm.h:27:
+#define CR4_VME_MASK (1ULL << 0)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#53: FILE: drivers/kvm/kvm.h:28:
+#define CR4_PSE_MASK (1ULL << 4)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#54: FILE: drivers/kvm/kvm.h:29:
+#define CR4_PAE_MASK (1ULL << 5)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#55: FILE: drivers/kvm/kvm.h:30:
+#define CR4_PGE_MASK (1ULL << 7)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#56: FILE: drivers/kvm/kvm.h:31:
+#define CR4_VMXE_MASK (1ULL << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#82: FILE: drivers/kvm/kvm.h:61:
+#define SELECTOR_TI_MASK (1 << 2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/kvm/kvm.h:269:
+int kvm_read_guest(struct kvm_vcpu *vcpu,
+	       gva_t addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/kvm/kvm.h:274:
+int kvm_write_guest(struct kvm_vcpu *vcpu,
+		gva_t addr,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: drivers/kvm/kvm.h:296:
+	return vmcs_readl(field) | ((u64)vmcs_readl(field+1) << 32);
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#175: FILE: drivers/kvm/kvm.h:332:
+static inline unsigned guest_cpl(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024277.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 18 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000024277.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
