WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> Kernel connector - new netlink based userspace <-> kernel space easy to use communication module.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: drivers/connector/connector.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#116: FILE: drivers/connector/connector.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#117: FILE: drivers/connector/connector.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#165: FILE: drivers/connector/connector.c:67:
+#define dprintk(fmt, args...)	printk(KERN_DEBUG PFX "%s: " fmt, \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#166: FILE: drivers/connector/connector.c:68:
+					__FUNCTION__, ## args)

CHECK:BRACES: braces {} should be used on all arms of this statement
#228: FILE: drivers/connector/connector.c:130:
+	if (!__groups) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#241: FILE: drivers/connector/connector.c:143:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#248: FILE: drivers/connector/connector.c:150:
+		printk(KERN_ERR PFX "Failed to allocate skb with size=%u\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#248: FILE: drivers/connector/connector.c:150:
+	if (!skb) {
+		printk(KERN_ERR PFX "Failed to allocate skb with size=%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/connector/connector.c:151:
+		printk(KERN_ERR PFX "Failed to allocate skb with size=%u\n",
+			NLMSG_SPACE(size));

CHECK:BRACES: braces {} should be used on all arms of this statement
#305: FILE: drivers/connector/connector.c:207:
+	if (!cb)
[...]
+	else if (cb->requests >= cn_max_backlog)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#309: FILE: drivers/connector/connector.c:211:
+	else {

WARNING:SPLIT_STRING: quoted string split across lines
#336: FILE: drivers/connector/connector.c:238:
+	dprintk("skb: len=%u, data_len=%u, truesize=%u, proto=%u, "
+		"cloned=%d, shared=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#341: FILE: drivers/connector/connector.c:243:
+		printk(KERN_ERR PFX "empty skb received\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#347: FILE: drivers/connector/connector.c:249:
+		printk(KERN_ERR PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#355: FILE: drivers/connector/connector.c:257:
+		printk(KERN_ERR PFX "invalid netlink message length, "

WARNING:SPLIT_STRING: quoted string split across lines
#356: FILE: drivers/connector/connector.c:258:
+		printk(KERN_ERR PFX "invalid netlink message length, "
+			"msg->len=%u[%u], nlh->nlmsg_len=%u\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#399: FILE: drivers/connector/connector.c:301:
+	list_for_each_entry(entry, &notify_list, node) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#406: FILE: drivers/connector/connector.c:308:
+		    id->val < req->val_first + req->val_range) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: drivers/connector/connector.c:332:
+		printk(KERN_ERR PFX

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#430: FILE: drivers/connector/connector.c:332:
+	if (!cb) {
+		printk(KERN_ERR PFX

CHECK:BRACES: braces {} should be used on all arms of this statement
#440: FILE: drivers/connector/connector.c:342:
+	if (cn_find_callback(id)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#443: FILE: drivers/connector/connector.c:345:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#471: FILE: drivers/connector/connector.c:373:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#472: FILE: drivers/connector/connector.c:374:
+		printk(KERN_WARNING PFX

WARNING:TYPO_SPELLING: 'requestes' may be misspelled - perhaps 'requests'?
#478: FILE: drivers/connector/connector.c:380:
+ * cn_notify_req_same() - compares two connector notify requestes
                                                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#502: FILE: drivers/connector/connector.c:404:
+		printk(KERN_ERR PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: drivers/connector/connector.c:426:
+			printk(KERN_ERR PFX

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#524: FILE: drivers/connector/connector.c:426:
+		if (!entry)
+			printk(KERN_ERR PFX

CHECK:BRACES: Unbalanced braces around else statement
#526: FILE: drivers/connector/connector.c:428:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#541: FILE: drivers/connector/connector.c:443:
+		printk(KERN_ERR PFX "Failed to create workqueue\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#547: FILE: drivers/connector/connector.c:449:
+		printk(KERN_ERR PFX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#557: FILE: drivers/connector/connector.c:459:
+		printk(KERN_ERR PFX "Failed to install 'connector' callback\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#577: FILE: drivers/connector/connector.c:479:
+EXPORT_SYMBOL_GPL(cn_add_callback);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#578: FILE: drivers/connector/connector.c:480:
+EXPORT_SYMBOL_GPL(cn_del_callback);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#579: FILE: drivers/connector/connector.c:481:
+EXPORT_SYMBOL_GPL(cn_netlink_send);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#593: FILE: drivers/connector/Kconfig:3:
+config CONNECTOR
+	tristate "Connector - unified userspace <-> kernelspace linker"
+	depends on NET
+	---help---
+	  This is unified userspace <-> kernelspace connector working on top
+	  of the netlink socket protocol.
+
+	  Connector support can also be built as a module.  If so, the module
+	  will be called connector.ko.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#608: FILE: include/linux/connector.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#625: FILE: include/linux/connector.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#626: FILE: include/linux/connector.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#644: FILE: include/linux/connector.h:37:
+struct cb_id
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#650: FILE: include/linux/connector.h:43:
+struct cn_msg
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#665: FILE: include/linux/connector.h:58:
+struct cn_notify_req
+{

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#673: FILE: include/linux/connector.h:66:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#683: FILE: include/linux/connector.h:76:
+struct cn_callback
+{

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#687: FILE: include/linux/connector.h:80:
+	void			(*callback)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#700: FILE: include/linux/connector.h:93:
+struct cn_notify_entry
+{

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#705: FILE: include/linux/connector.h:98:
+int cn_add_callback(struct cb_id *, char *, void (* callback)(void *));
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#705: FILE: include/linux/connector.h:98:
+int cn_add_callback(struct cb_id *, char *, void (* callback)(void *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#705: FILE: include/linux/connector.h:98:
+int cn_add_callback(struct cb_id *, char *, void (* callback)(void *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#706: FILE: include/linux/connector.h:99:
+void cn_del_callback(struct cb_id *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cn_msg *' should also have an identifier name
#707: FILE: include/linux/connector.h:100:
+int cn_netlink_send(struct cn_msg *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#707: FILE: include/linux/connector.h:100:
+int cn_netlink_send(struct cn_msg *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#707: FILE: include/linux/connector.h:100:
+int cn_netlink_send(struct cn_msg *, u32, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 34 warnings, 10 checks, 613 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
