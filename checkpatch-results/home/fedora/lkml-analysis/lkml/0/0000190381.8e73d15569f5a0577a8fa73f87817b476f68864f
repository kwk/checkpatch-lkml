WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#66: FILE: arch/i386/kernel/smpboot.c:87:
+static int __devinitdata tsc_sync_disabled;

WARNING:MISPLACED_INIT: __devinitdata should be placed after tsc_sync_disabled
#66: FILE: arch/i386/kernel/smpboot.c:87:
+static int __devinitdata tsc_sync_disabled;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#85: FILE: arch/i386/kernel/smpboot.c:819:
+static struct task_struct * __devinitdata cpu_idle_tasks[NR_CPUS];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: arch/i386/kernel/smpboot.c:820:
+static inline struct task_struct * alloc_idle_task(int cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#90: FILE: arch/i386/kernel/smpboot.c:824:
+	if ((idle = cpu_idle_tasks[cpu]) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#95: FILE: arch/i386/kernel/smpboot.c:829:
+			(THREAD_SIZE + (unsigned long) idle->thread_info)) - 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#109: FILE: arch/i386/kernel/smpboot.c:843:
 static int __devinit do_boot_cpu(int apicid, int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#132: FILE: arch/i386/kernel/smpboot.c:972:
+static void __devinit do_warm_boot_cpu(void *p)

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: arch/i386/kernel/smpboot.c:975:
+	struct warm_boot_cpu_info *info = p;
+	do_boot_cpu(info->apicid, info->cpu);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#139: FILE: arch/i386/kernel/smpboot.c:979:
+int __devinit smp_prepare_cpu(int cpu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: arch/i386/kernel/smpboot.c:1002:
+	memcpy(swapper_pg_dir, swapper_pg_dir + USER_PGD_PTRS,
+			sizeof(swapper_pg_dir[0]) * KERNEL_PGD_PTRS);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#249: FILE: drivers/base/cpu.c:43:
+		if ((ret = smp_prepare_cpu(cpu->sysdev.id)) == 0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/asm-i386/smp.h:57:
+extern int smp_prepare_cpu(int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 3 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
