WARNING:TYPO_SPELLING: 'chipslect' may be misspelled - perhaps 'chipselect'?
#116: FILE: include/linux/spi/spi_bitbang.h:18:
+ *	duplex (MicroWire) controllers.  Provide chipslect() and txrx_bufs(),
   	                                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#123: FILE: include/linux/spi/spi_bitbang.h:25:
+	spinlock_t		lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: include/linux/spi/spi_bitbang.h:36:
+	int	(*txrx_bufs)(struct spi_device *spi, struct spi_transfer *t);
+	u32	(*txrx_word[4])(struct spi_device *spi,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: include/linux/spi/spi_bitbang.h:37:
+	u32	(*txrx_word[4])(struct spi_device *spi,
 			unsigned nsecs,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/linux/spi/spi_bitbang.h:44:
+extern int spi_bitbang_setup(struct spi_device *spi);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/linux/spi/spi_bitbang.h:45:
+extern void spi_bitbang_cleanup(const struct spi_device *spi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/linux/spi/spi_bitbang.h:46:
+extern int spi_bitbang_transfer(struct spi_device *spi, struct spi_message *m);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/spi/spi_bitbang.h:49:
+extern int spi_bitbang_start(struct spi_bitbang *spi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/spi/spi_bitbang.h:50:
+extern int spi_bitbang_stop(struct spi_bitbang *spi);

WARNING:REPEATED_WORD: Possible repeated word: 'use'
#296: FILE: drivers/spi/spi_bitbang.c:42:
+ * chipselect() and friends may use use spi_device->controller_data and

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#310: FILE: drivers/spi/spi_bitbang.c:53:
+	u32		(*txrx_word)(struct spi_device *spi, unsigned nsecs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/spi/spi_bitbang.c:54:
+	u32		(*txrx_word)(struct spi_device *spi, unsigned nsecs,
+					u32 word, u8 bits);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#312: FILE: drivers/spi/spi_bitbang.c:55:
+	unsigned	(*txrx_bufs)(struct spi_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_device *' should also have an identifier name
#312: FILE: drivers/spi/spi_bitbang.c:55:
+	unsigned	(*txrx_bufs)(struct spi_device *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#312: FILE: drivers/spi/spi_bitbang.c:55:
+	unsigned	(*txrx_bufs)(struct spi_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_transfer *' should also have an identifier name
#312: FILE: drivers/spi/spi_bitbang.c:55:
+	unsigned	(*txrx_bufs)(struct spi_device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/spi/spi_bitbang.c:56:
+	unsigned	(*txrx_bufs)(struct spi_device *,
+					u32 (*txrx_word)(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#313: FILE: drivers/spi/spi_bitbang.c:56:
+					u32 (*txrx_word)(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#315: FILE: drivers/spi/spi_bitbang.c:58:
+						unsigned nsecs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: drivers/spi/spi_bitbang.c:66:
+	u32			(*txrx_word)(struct spi_device *spi,
+					unsigned nsecs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#326: FILE: drivers/spi/spi_bitbang.c:66:
+					unsigned nsecs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/spi/spi_bitbang.c:92:
+	u32			(*txrx_word)(struct spi_device *spi,
+					unsigned nsecs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#347: FILE: drivers/spi/spi_bitbang.c:92:
+					unsigned nsecs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/spi/spi_bitbang.c:118:
+	u32			(*txrx_word)(struct spi_device *spi,
+					unsigned nsecs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#368: FILE: drivers/spi/spi_bitbang.c:118:
+					unsigned nsecs,

WARNING:SIZEOF_PARENTHESIS: sizeof *cs should be sizeof(*cs)
#395: FILE: drivers/spi/spi_bitbang.c:150:
+		cs = kzalloc(sizeof *cs, SLAB_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#416: FILE: drivers/spi/spi_bitbang.c:171:
+	cs->txrx_word = bitbang->txrx_word[spi->mode & (SPI_CPOL|SPI_CPHA)];
 	                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#424: FILE: drivers/spi/spi_bitbang.c:179:
+	cs->nsecs = (1000000000/2) / (spi->max_speed_hz);
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: drivers/spi/spi_bitbang.c:186:
+	dev_dbg(&spi->dev, "%s, mode %d, %u bits/w, %u nsec\n",
+			__FUNCTION__, spi->mode & (SPI_CPOL | SPI_CPHA),

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#431: FILE: drivers/spi/spi_bitbang.c:186:
+			__FUNCTION__, spi->mode & (SPI_CPOL | SPI_CPHA),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#463: FILE: drivers/spi/spi_bitbang.c:218:
+	unsigned		nsecs = cs->nsecs;

CHECK:BRACES: braces {} should be used on all arms of this statement
#693: FILE: drivers/spi/spi_bitbang.c:393:
+	if (!bitbang->txrx_bufs) {
[...]
+	} else if (!bitbang->master->setup)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#709: FILE: drivers/spi/spi_bitbang.c:405:
+	bitbang->workqueue = create_singlethread_workqueue(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#741: FILE: drivers/spi/spi_bitbang.c:433:
+	unsigned	limit = 500;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#763: FILE: drivers/spi/spi_bitbang.c:441:
+		msleep(10);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 17 warnings, 18 checks, 708 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124258.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
