WARNING:TYPO_SPELLING: 'ABISS' may be misspelled - perhaps 'ABYSS'?
#38: 
but an example of one can be found in the elevator code of ABISS
                                                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'abiss' may be misspelled - perhaps 'abyss'?
#39: 
(abiss.sourceforge.net), where it's used to detect overlapping
 ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#61: 
---------------------------------- cut here -----------------------------------

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: include/linux/prio_tree.h:30:
+^Iunsigned short ^I^Iindex_bits;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#110: FILE: include/linux/prio_tree.h:57:
+#define INIT_PRIO_TREE_ROOT(ptr, _raw)	\
 do {					\
 	(ptr)->prio_tree_node = NULL;	\
 	(ptr)->index_bits = 1;		\
+	(ptr)->raw = (_raw);		\
 } while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#122: FILE: include/linux/prio_tree.h:100:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: include/linux/prio_tree.h:101:
+struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: include/linux/prio_tree.h:102:
+                struct prio_tree_node *old, struct prio_tree_node *node);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: include/linux/prio_tree.h:102:
+struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root, 
+                struct prio_tree_node *old, struct prio_tree_node *node);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/linux/prio_tree.h:102:
+                struct prio_tree_node *old, struct prio_tree_node *node);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: include/linux/prio_tree.h:103:
+struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: include/linux/prio_tree.h:104:
+                struct prio_tree_node *node);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: include/linux/prio_tree.h:104:
+struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root, 
+                struct prio_tree_node *node);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: include/linux/prio_tree.h:104:
+                struct prio_tree_node *node);$

CHECK:SPACING: No space is necessary after a cast
#132: FILE: include/linux/prio_tree.h:110:
+	prio_tree_replace(root, (struct prio_tree_node *) (old), \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#133: FILE: include/linux/prio_tree.h:111:
+	    (struct prio_tree_node *) (node))

CHECK:SPACING: No space is necessary after a cast
#135: FILE: include/linux/prio_tree.h:113:
+	prio_tree_insert(root, (struct prio_tree_node *) (node))

CHECK:SPACING: No space is necessary after a cast
#137: FILE: include/linux/prio_tree.h:115:
+	prio_tree_remove(root, (struct prio_tree_node *) (node))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: mm/prio_tree.c:51:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: mm/prio_tree.c:53:
+static void get_index(const struct prio_tree_root *root,
+    const struct prio_tree_node *node,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: mm/prio_tree.c:53:
+    const struct prio_tree_node *node,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: mm/prio_tree.c:54:
+    unsigned long *radix, unsigned long *heap)$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#183: FILE: mm/prio_tree.c:57:
+		struct vm_area_struct *vma = prio_tree_entry(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#189: FILE: mm/prio_tree.c:63:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#189: FILE: mm/prio_tree.c:63:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: mm/prio_tree.c:144:
+struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root,
 		struct prio_tree_node *old, struct prio_tree_node *node)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: mm/prio_tree.c:188:
+struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root,
 		struct prio_tree_node *node)

CHECK:SPACING: No space is necessary after a cast
#330: FILE: mm/prio_tree.c:556:
+	if (ptr != (struct prio_tree_node *) &vma->shared.prio_tree_node) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: mm/prio_tree.c:588:
+			raw_prio_tree_replace(root, &vma->shared.prio_tree_node,
 					&head->shared.prio_tree_node);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 16 checks, 269 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
