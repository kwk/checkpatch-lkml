CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#174: FILE: drivers/i2c/chips/m41t00.c:97:
+};
+static struct m41t00_chip_info *m41t00_chip;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#251: FILE: drivers/i2c/chips/m41t00.c:141:
+	} while ((++reads < m41t00_chip->read_limit) && ((sec != sec1)
+			|| (min != min1) || (hour != hour1) || (day != day1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#252: FILE: drivers/i2c/chips/m41t00.c:142:
+			|| (min != min1) || (hour != hour1) || (day != day1)
+			|| (mon != mon1) || (year != year1)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'm41t00_chip->read_limit > 1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sec != sec1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'min != min1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hour != hour1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'day != day1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mon != mon1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'year != year1'
#254: FILE: drivers/i2c/chips/m41t00.c:144:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#255: FILE: drivers/i2c/chips/m41t00.c:145:
+	if ((m41t00_chip->read_limit > 1) && ((sec != sec1) || (min != min1)
+			|| (hour != hour1) || (day != day1) || (mon != mon1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#256: FILE: drivers/i2c/chips/m41t00.c:146:
+			|| (hour != hour1) || (day != day1) || (mon != mon1)
+			|| (year != year1)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'm41t00_get_rtc_time', this function's name, in a string
#267: FILE: drivers/i2c/chips/m41t00.c:163:
+	dev_err(&save_client->dev, "m41t00_get_rtc_time: Read error\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#334: FILE: drivers/i2c/chips/m41t00.c:209:
+	buf[m41t00_chip->hour] = (buf[m41t00_chip->hour]& ~0x3f) | (hour& 0x3f);
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#334: FILE: drivers/i2c/chips/m41t00.c:209:
+	buf[m41t00_chip->hour] = (buf[m41t00_chip->hour]& ~0x3f) | (hour& 0x3f);
 	                                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#363: FILE: drivers/i2c/chips/m41t00.c:248:
+	if (pdev && (pdata = pdev->dev.platform_data)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: drivers/i2c/chips/m41t00.c:251:
+		for (i=0; i<ARRAY_SIZE(m41t00_chip_info_tbl); i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#366: FILE: drivers/i2c/chips/m41t00.c:251:
+		for (i=0; i<ARRAY_SIZE(m41t00_chip_info_tbl); i++)
 		           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#407: FILE: drivers/i2c/chips/m41t00.c:293:
+	if (!(client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#407: FILE: drivers/i2c/chips/m41t00.c:293:
+	if (!(client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#413: FILE: drivers/i2c/chips/m41t00.c:298:
+	strlcpy(client->name, m41t00_chip->name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: drivers/i2c/chips/m41t00.c:303:
+	if ((rc = i2c_attach_client(client)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#427: FILE: drivers/i2c/chips/m41t00.c:309:
+			if (((rc = i2c_smbus_read_byte_data(client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/i2c/chips/m41t00.c:310:
+			if (((rc = i2c_smbus_read_byte_data(client,
+					m41t00_chip->alarm_mon)) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#429: FILE: drivers/i2c/chips/m41t00.c:311:
+					m41t00_chip->alarm_mon)) < 0)
+				|| ((rc = i2c_smbus_write_byte_data(client,

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#430: FILE: drivers/i2c/chips/m41t00.c:312:
+					m41t00_chip->alarm_mon, rc & ~0x40)) <0)
 					                                     ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#431: FILE: drivers/i2c/chips/m41t00.c:313:
+					m41t00_chip->alarm_mon, rc & ~0x40)) <0)
+				|| ((rc = i2c_smbus_write_byte_data(client,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#434: FILE: drivers/i2c/chips/m41t00.c:316:
+					m41t00_chip->sqw_freq)) < 0)
+				|| ((rc = i2c_smbus_write_byte_data(client,

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#435: FILE: drivers/i2c/chips/m41t00.c:317:
+					m41t00_chip->alarm_mon, rc | 0x40)) <0))
 					                                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#440: FILE: drivers/i2c/chips/m41t00.c:322:
+		if ((rc = i2c_smbus_read_byte_data(client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/i2c/chips/m41t00.c:323:
+		if ((rc = i2c_smbus_read_byte_data(client,
+				m41t00_chip->alarm_hour)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/i2c/chips/m41t00.c:326:
+^I^Iif (rc & 0x40) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#445: FILE: drivers/i2c/chips/m41t00.c:327:
+			if ((rc = i2c_smbus_write_byte_data(client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/i2c/chips/m41t00.c:328:
+			if ((rc = i2c_smbus_write_byte_data(client,
+					m41t00_chip->alarm_hour, rc & ~0x40))<0)

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#446: FILE: drivers/i2c/chips/m41t00.c:328:
+					m41t00_chip->alarm_hour, rc & ~0x40))<0)
 					                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#452: FILE: drivers/i2c/chips/m41t00.c:333:
+	if ((rc = i2c_smbus_read_byte_data(client, m41t00_chip->sec)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/i2c/chips/m41t00.c:336:
+^Iif (rc & 0x80) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#456: FILE: drivers/i2c/chips/m41t00.c:337:
+		if ((rc = i2c_smbus_write_byte_data(client, m41t00_chip->sec,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/i2c/chips/m41t00.c:338:
+		if ((rc = i2c_smbus_write_byte_data(client, m41t00_chip->sec,
+				rc & ~0x80)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#486: FILE: drivers/i2c/chips/m41t00.c:391:
+	if (!(rc = platform_driver_register(&m41t00_platform_driver)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#503: FILE: include/linux/m41t00.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#533: FILE: include/linux/m41t00.h:31:
+#define SQW_FREQ_32KHZ	(1<<4)		/* 32.768 KHz */
                       	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#533: FILE: include/linux/m41t00.h:31:
+#define SQW_FREQ_32KHZ	(1<<4)		/* 32.768 KHz */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#534: FILE: include/linux/m41t00.h:32:
+#define SQW_FREQ_8KHZ	(2<<4)		/* 8.192 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#535: FILE: include/linux/m41t00.h:33:
+#define SQW_FREQ_4KHZ	(3<<4)		/* 4.096 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#536: FILE: include/linux/m41t00.h:34:
+#define SQW_FREQ_2KHZ	(4<<4)		/* 2.048 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#537: FILE: include/linux/m41t00.h:35:
+#define SQW_FREQ_1KHZ	(5<<4)		/* 1.024 KHz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#538: FILE: include/linux/m41t00.h:36:
+#define SQW_FREQ_512HZ	(6<<4)		/* 512 Hz */
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#539: FILE: include/linux/m41t00.h:37:
+#define SQW_FREQ_256HZ	(7<<4)		/* 256 Hz */
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#540: FILE: include/linux/m41t00.h:38:
+#define SQW_FREQ_128HZ	(8<<4)		/* 128 Hz */
                       	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#541: FILE: include/linux/m41t00.h:39:
+#define SQW_FREQ_64HZ	(9<<4)		/* 64 Hz */
                      	  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#542: FILE: include/linux/m41t00.h:40:
+#define SQW_FREQ_32HZ	(10<<4)		/* 32 Hz */
                      	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#543: FILE: include/linux/m41t00.h:41:
+#define SQW_FREQ_16HZ	(11<<4)		/* 16 Hz */
                      	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#544: FILE: include/linux/m41t00.h:42:
+#define SQW_FREQ_8HZ	(12<<4)		/* 8 Hz */
                     	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#545: FILE: include/linux/m41t00.h:43:
+#define SQW_FREQ_4HZ	(13<<4)		/* 4 Hz */
                     	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#546: FILE: include/linux/m41t00.h:44:
+#define SQW_FREQ_2HZ	(14<<4)		/* 2 Hz */
                     	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#547: FILE: include/linux/m41t00.h:45:
+#define SQW_FREQ_1HZ	(15<<4)		/* 1 Hz */
                     	   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: include/linux/m41t00.h:47:
+extern ulong m41t00_get_rtc_time(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#550: FILE: include/linux/m41t00.h:48:
+extern int m41t00_set_rtc_time(ulong nowtime);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089648.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 3 warnings, 40 checks, 465 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089648.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
