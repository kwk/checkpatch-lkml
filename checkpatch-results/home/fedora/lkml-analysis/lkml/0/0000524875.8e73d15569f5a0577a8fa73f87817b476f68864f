WARNING:TYPO_SPELLING: 'efficent' may be misspelled - perhaps 'efficient'?
#28: 
efficent delivery of networks events from kernel mode to user mode.
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'efficent' may be misspelled - perhaps 'efficient'?
#32: 
RT signals have been discarded because they are not so efficent as
                                                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'sufficent' may be misspelled - perhaps 'sufficient'?
#46: 
it offers a quite sufficent number of loading options.
                  ^^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#define ION_IN          1

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#define ION_OUT         2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#define ION_HUP         3

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#define ION_ERR         4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#define FCB_LOCAL_SIZE  4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#define fcblist_read_lock(fp, fl)              \

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#define fcblist_read_unlock(fp, fl)            \

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#define fcblist_write_lock(fp, fl)             \

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#define fcblist_write_unlock(fp, fl)           \

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#89: 
notify upper layers that will register their "interests" to the file structure.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#103: 
int init_private_file(struct file *filp, struct dentry *dentry, int mode)
                                   ^^^^

WARNING:TYPO_SPELLING: 'efficent' may be misspelled - perhaps 'efficient'?
#199: 
is "enough" efficent to work on.
            ^^^^^^^^

WARNING:TYPO_SPELLING: 'devide' may be misspelled - perhaps 'divide'?
#226: 
coz it works only by mmapping the devide file descriptor while the
                                  ^^^^^^

WARNING:TYPO_SPELLING: 'efficent' may be misspelled - perhaps 'efficient'?
#308: 
that make the server quite efficent.
                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'efficency' may be misspelled - perhaps 'efficiency'?
#447: 
These numbers show that the new /dev/poll improve the efficency of the server
                                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#491: FILE: Makefile:4:
+EXTRAVERSION = olddp
 ^^^^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#502: FILE: drivers/char/Config.in:159:
FIG_PCI

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#525: FILE: drivers/char/devpoll.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#561: FILE: drivers/char/devpoll.c:36:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#563: FILE: drivers/char/devpoll.c:38:
+#include <asm/io.h>

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#567: FILE: drivers/char/devpoll.c:42:
+#define DPRINTK(x)	printk x

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: drivers/char/devpoll.c:43:
+#define DNPRINTK(n,x)	if (n <= DEBUG) printk x
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#568: FILE: drivers/char/devpoll.c:43:
+#define DNPRINTK(n,x)	if (n <= DEBUG) printk x

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#568: FILE: drivers/char/devpoll.c:43:
+#define DNPRINTK(n,x)	if (n <= DEBUG) printk x

ERROR:SPACING: space required after that ',' (ctx:VxV)
#571: FILE: drivers/char/devpoll.c:46:
+#define DNPRINTK(n,x)
                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#584: FILE: drivers/char/devpoll.c:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#587: FILE: drivers/char/devpoll.c:62:
+
+

WARNING:TYPO_SPELLING: 'Initalize' may be misspelled - perhaps 'Initialize'?
#588: FILE: drivers/char/devpoll.c:63:
+/* Initalize the hash table */
    ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#595: FILE: drivers/char/devpoll.c:70:
+	int num_buckets;
+	DNPRINTK(3,(KERN_INFO "/dev/poll: dp_init\n"));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#595: FILE: drivers/char/devpoll.c:70:
+	DNPRINTK(3,(KERN_INFO "/dev/poll: dp_init\n"));
 	          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dp_init', this function's name, in a string
#595: FILE: drivers/char/devpoll.c:70:
+	DNPRINTK(3,(KERN_INFO "/dev/poll: dp_init\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#600: FILE: drivers/char/devpoll.c:75:
+	dp->dp_avg = dp->dp_count = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#601: FILE: drivers/char/devpoll.c:76:
+	dp->dp_cached = dp->dp_calls = 0;

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#606: FILE: drivers/char/devpoll.c:81:
+	dp->dp_tab = kmalloc(num_buckets * sizeof(struct list_head),
+			     GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:BRACES: braces {} are not necessary for single statement blocks
#612: FILE: drivers/char/devpoll.c:87:
+	for (i = 0; i < num_buckets ; i++) {
+		INIT_LIST_HEAD(&dp->dp_tab[i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#622: FILE: drivers/char/devpoll.c:97:
+	u_int16_t new_mask, old_mask;

ERROR:SPACING: space prohibited after that open parenthesis '('
#635: FILE: drivers/char/devpoll.c:110:
+	new_tab = kmalloc( num_buckets * sizeof(struct list_head), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#635: FILE: drivers/char/devpoll.c:110:
+	new_tab = kmalloc( num_buckets * sizeof(struct list_head), GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#639: FILE: drivers/char/devpoll.c:114:
+	for (i = 0; i < num_buckets; i++) {
+		INIT_LIST_HEAD(&new_tab[i]);
+	}

ERROR:SPACING: space required before the open brace '{'
#647: FILE: drivers/char/devpoll.c:122:
+		while(!list_empty(&old_tab[i])){

ERROR:SPACING: space required before the open parenthesis '('
#647: FILE: drivers/char/devpoll.c:122:
+		while(!list_empty(&old_tab[i])){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#658: FILE: drivers/char/devpoll.c:133:
+	kfree (old_tab);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#660: FILE: drivers/char/devpoll.c:135:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#667: FILE: drivers/char/devpoll.c:142:
+	u_int16_t bucket;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dpfd)...) over kmalloc(sizeof(struct dp_fd)...)
#671: FILE: drivers/char/devpoll.c:146:
+	dpfd = kmalloc(sizeof(struct dp_fd), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required after that ',' (ctx:VxO)
#684: FILE: drivers/char/devpoll.c:159:
+	list_add(&dpfd->next,&dp->dp_tab[bucket]);
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#684: FILE: drivers/char/devpoll.c:159:
+	list_add(&dpfd->next,&dp->dp_tab[bucket]);
 	                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "file"
#687: FILE: drivers/char/devpoll.c:162:
+	if (file != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#701: FILE: drivers/char/devpoll.c:176:
+	return (0);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#707: FILE: drivers/char/devpoll.c:182:
+	struct dp_fd *dpfd=NULL;
 	                  ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#709: FILE: drivers/char/devpoll.c:184:
+	u_int16_t bucket = fd & dp->dp_bucket_mask;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#712: FILE: drivers/char/devpoll.c:187:
+	list_for_each(lh,&dp->dp_tab[bucket]){
 	                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#712: FILE: drivers/char/devpoll.c:187:
+	list_for_each(lh,&dp->dp_tab[bucket]){
 	                 ^

ERROR:SPACING: space required before the open brace '{'
#712: FILE: drivers/char/devpoll.c:187:
+	list_for_each(lh,&dp->dp_tab[bucket]){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: drivers/char/devpoll.c:188:
+		dpfd = list_entry(lh,struct dp_fd,next);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: drivers/char/devpoll.c:188:
+		dpfd = list_entry(lh,struct dp_fd,next);
 		                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#714: FILE: drivers/char/devpoll.c:189:
+		if(dpfd->pfd.fd == fd ) break;

ERROR:SPACING: space required before the open parenthesis '('
#714: FILE: drivers/char/devpoll.c:189:
+		if(dpfd->pfd.fd == fd ) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#714: FILE: drivers/char/devpoll.c:189:
+		if(dpfd->pfd.fd == fd ) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#718: FILE: drivers/char/devpoll.c:193:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dp_find', this function's name, in a string
#720: FILE: drivers/char/devpoll.c:195:
+	DNPRINTK(2, (KERN_INFO "dp_find: %d -> %p\n", fd, dpfd));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#730: FILE: drivers/char/devpoll.c:205:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#740: FILE: drivers/char/devpoll.c:215:
+		filp = fcheck(fd);
 		^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#743: FILE: drivers/char/devpoll.c:218:
+		    filp && filp->f_backmap){
 		    ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#752: FILE: drivers/char/devpoll.c:227:
+	kfree (dpfd);

ERROR:SPACING: space required before the open brace '{'
#765: FILE: drivers/char/devpoll.c:240:
+		while(!list_empty(&dp->dp_tab[i])){

ERROR:SPACING: space required before the open parenthesis '('
#765: FILE: drivers/char/devpoll.c:240:
+		while(!list_empty(&dp->dp_tab[i])){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#766: FILE: drivers/char/devpoll.c:241:
+			dpfd = list_entry(dp->dp_tab[i].next,struct dp_fd,next);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#766: FILE: drivers/char/devpoll.c:241:
+			dpfd = list_entry(dp->dp_tab[i].next,struct dp_fd,next);
 			                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#772: FILE: drivers/char/devpoll.c:247:
+	kfree (dp->dp_tab);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#775: FILE: drivers/char/devpoll.c:250:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#787: FILE: drivers/char/devpoll.c:262:
+	int count = 0;
+	lock_kernel();

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#790: FILE: drivers/char/devpoll.c:265:
+		unsigned int j=0;
 		              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: drivers/char/devpoll.c:273:
+			struct list_head *lh;
+			list_for_each(lh, &dp->dp_tab[j]){

ERROR:SPACING: space required before the open brace '{'
#798: FILE: drivers/char/devpoll.c:273:
+			list_for_each(lh, &dp->dp_tab[j]){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#799: FILE: drivers/char/devpoll.c:274:
+			list_for_each(lh, &dp->dp_tab[j]){
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#802: FILE: drivers/char/devpoll.c:277:
+				unsigned int rm =0;
 				                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#803: FILE: drivers/char/devpoll.c:278:
+				unsigned int rm =0;
+				dpfd = list_entry(lh,struct dp_fd,next);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: drivers/char/devpoll.c:278:
+				dpfd = list_entry(lh,struct dp_fd,next);
 				                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: drivers/char/devpoll.c:278:
+				dpfd = list_entry(lh,struct dp_fd,next);
 				                                 ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#805: FILE: drivers/char/devpoll.c:280:
+				if(count>=max){
 				        ^

ERROR:SPACING: space required before the open brace '{'
#805: FILE: drivers/char/devpoll.c:280:
+				if(count>=max){

ERROR:SPACING: space required before the open parenthesis '('
#805: FILE: drivers/char/devpoll.c:280:
+				if(count>=max){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#805: FILE: drivers/char/devpoll.c:280:
+				if(count>=max){
+					break;
+				}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!file"
#814: FILE: drivers/char/devpoll.c:289:
+				if (file == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#826: FILE: drivers/char/devpoll.c:301:
+				if (test_and_clear_bit(DPH_DIRTY,
[...]
+				}else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "wait"
#828: FILE: drivers/char/devpoll.c:303:
+				    wait != NULL ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#830: FILE: drivers/char/devpoll.c:305:
+				    (mask & fdpnt->events))  {
+

ERROR:SPACING: space required after that close brace '}'
#843: FILE: drivers/char/devpoll.c:318:
+				}else

CHECK:BRACES: Unbalanced braces around else statement
#843: FILE: drivers/char/devpoll.c:318:
+				}else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#846: FILE: drivers/char/devpoll.c:321:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#880: FILE: drivers/char/devpoll.c:355:
+	if( !count && signal_pending(current) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#880: FILE: drivers/char/devpoll.c:355:
+	if( !count && signal_pending(current) )

ERROR:SPACING: space required before the open parenthesis '('
#880: FILE: drivers/char/devpoll.c:355:
+	if( !count && signal_pending(current) )

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#891: FILE: drivers/char/devpoll.c:366:
+close_devpoll(struct inode * inode, struct file * file)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#891: FILE: drivers/char/devpoll.c:366:
+close_devpoll(struct inode * inode, struct file * file)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#896: FILE: drivers/char/devpoll.c:371:
+		     dp->dp_max, dp->dp_avg/dp->dp_count,
 		                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#918: FILE: drivers/char/devpoll.c:393:
+open_devpoll(struct inode * inode, struct file * file)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#918: FILE: drivers/char/devpoll.c:393:
+open_devpoll(struct inode * inode, struct file * file)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dp)...) over kmalloc(sizeof(struct devpoll)...)
#924: FILE: drivers/char/devpoll.c:399:
+	dp = kmalloc(sizeof(struct devpoll), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dp"
#925: FILE: drivers/char/devpoll.c:400:
+	if (dp == NULL)

ERROR:SPACING: space prohibited after that open parenthesis '('
#928: FILE: drivers/char/devpoll.c:403:
+	memset( dp, 0, sizeof(struct devpoll));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#929: FILE: drivers/char/devpoll.c:404:
+	if ((r = dp_init(dp))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: drivers/char/devpoll.c:405:
+		kfree (dp);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#953: FILE: drivers/char/devpoll.c:428:
+	int r,rcount;
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#961: FILE: drivers/char/devpoll.c:436:
+	DNPRINTK(3, (KERN_INFO "write /dev/poll %i\n",count));
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#966: FILE: drivers/char/devpoll.c:441:
+	if ((r = verify_area(VERIFY_READ, buffer, count)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->files->fd[pfd.fd]"
#979: FILE: drivers/char/devpoll.c:454:
+		    current->files->fd[pfd.fd] == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/char/devpoll.c:492:
+	DNPRINTK(3, (KERN_INFO "write /dev/poll: %d entries (%d/%d/%d)\n",
+		 dp->dp_entries, add, delete, change));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1019: FILE: drivers/char/devpoll.c:494:
+	return (rcount);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1027: FILE: drivers/char/devpoll.c:502:
+	unsigned mapsize=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1027: FILE: drivers/char/devpoll.c:502:
+	unsigned mapsize=0;
 	                ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1028: FILE: drivers/char/devpoll.c:503:
+	unsigned num_pages=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1028: FILE: drivers/char/devpoll.c:503:
+	unsigned num_pages=0;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1029: FILE: drivers/char/devpoll.c:504:
+	int i=0;
 	     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1030: FILE: drivers/char/devpoll.c:505:
+	int i=0;
+	switch (cmd) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1037: FILE: drivers/char/devpoll.c:512:
+		num_pages = ( PAGE_ALIGN(mapsize) >> PAGE_SHIFT);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1039: FILE: drivers/char/devpoll.c:514:
+		dp->dp_memvec = kmalloc( num_pages * sizeof(unsigned long*),

ERROR:SPACING: space prohibited after that open parenthesis '('
#1039: FILE: drivers/char/devpoll.c:514:
+		dp->dp_memvec = kmalloc( num_pages * sizeof(unsigned long*),

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1039: FILE: drivers/char/devpoll.c:514:
+		dp->dp_memvec = kmalloc( num_pages * sizeof(unsigned long*),
+				 GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1040: FILE: drivers/char/devpoll.c:515:
+		dp->dp_memvec = kmalloc( num_pages * sizeof(unsigned long*),
+				 GFP_KERNEL);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1042: FILE: drivers/char/devpoll.c:517:
+		if( dp->dp_memvec == NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1042: FILE: drivers/char/devpoll.c:517:
+		if( dp->dp_memvec == NULL )

ERROR:SPACING: space required before the open parenthesis '('
#1042: FILE: drivers/char/devpoll.c:517:
+		if( dp->dp_memvec == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dp->dp_memvec"
#1042: FILE: drivers/char/devpoll.c:517:
+		if( dp->dp_memvec == NULL )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1045: FILE: drivers/char/devpoll.c:520:
+		memset(dp->dp_memvec, 0, num_pages * sizeof(unsigned long*));

ERROR:SPACING: space required before the open brace '{'
#1047: FILE: drivers/char/devpoll.c:522:
+		for( i = 0 ; i < num_pages ; ++i){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1047: FILE: drivers/char/devpoll.c:522:
+		for( i = 0 ; i < num_pages ; ++i){

ERROR:SPACING: space required before the open parenthesis '('
#1047: FILE: drivers/char/devpoll.c:522:
+		for( i = 0 ; i < num_pages ; ++i){

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1048: FILE: drivers/char/devpoll.c:523:
+			dp->dp_memvec[i] = (u_char*)__get_free_pages(GFP_KERNEL,0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1048: FILE: drivers/char/devpoll.c:523:
+			dp->dp_memvec[i] = (u_char*)__get_free_pages(GFP_KERNEL,0);
 			                                                       ^

ERROR:SPACING: space required before the open brace '{'
#1049: FILE: drivers/char/devpoll.c:524:
+			if(!dp->dp_memvec[i]){

ERROR:SPACING: space required before the open parenthesis '('
#1049: FILE: drivers/char/devpoll.c:524:
+			if(!dp->dp_memvec[i]){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1063: FILE: drivers/char/devpoll.c:538:
+^I^Iif( atomic_read(&dp->dp_mmapped) ) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#1063: FILE: drivers/char/devpoll.c:538:
+		if( atomic_read(&dp->dp_mmapped) ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1063: FILE: drivers/char/devpoll.c:538:
+		if( atomic_read(&dp->dp_mmapped) ) 

ERROR:SPACING: space required before the open parenthesis '('
#1063: FILE: drivers/char/devpoll.c:538:
+		if( atomic_read(&dp->dp_mmapped) ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1065: FILE: drivers/char/devpoll.c:540:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1066: FILE: drivers/char/devpoll.c:541:
+		if(dp->dp_memvec[i]){

ERROR:SPACING: space required before the open parenthesis '('
#1066: FILE: drivers/char/devpoll.c:541:
+		if(dp->dp_memvec[i]){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1066: FILE: drivers/char/devpoll.c:541:
+		if(dp->dp_memvec[i]){
+			free_pg_vec( dp );
+		}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1067: FILE: drivers/char/devpoll.c:542:
+			free_pg_vec( dp );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1067: FILE: drivers/char/devpoll.c:542:
+			free_pg_vec( dp );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1070: FILE: drivers/char/devpoll.c:545:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dpfd"
#1082: FILE: drivers/char/devpoll.c:557:
+		if (dpfd == NULL)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1091: FILE: drivers/char/devpoll.c:566:
+		return (1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: drivers/char/devpoll.c:574:
+^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dopoll.dp_fds"
#1108: FILE: drivers/char/devpoll.c:583:
+		if (dopoll.dp_fds == NULL) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1109: FILE: drivers/char/devpoll.c:584:
+			if (dp->dp_mmap == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dp->dp_mmap"
#1109: FILE: drivers/char/devpoll.c:584:
+			if (dp->dp_mmap == NULL )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1111: FILE: drivers/char/devpoll.c:586:
+			rpfds = (struct pollfd*)dp->dp_mmap;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1125: FILE: drivers/char/devpoll.c:600:
+				timeout = (timeout*HZ+999)/1000+1;
 				                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1125: FILE: drivers/char/devpoll.c:600:
+				timeout = (timeout*HZ+999)/1000+1;
 				                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1125: FILE: drivers/char/devpoll.c:600:
+				timeout = (timeout*HZ+999)/1000+1;
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1125: FILE: drivers/char/devpoll.c:600:
+				timeout = (timeout*HZ+999)/1000+1;
 				                               ^

WARNING:TYPO_SPELLING: 'Initalize' may be misspelled - perhaps 'Initialize'?
#1130: FILE: drivers/char/devpoll.c:605:
+		/* Initalize wait table */
 		   ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1133: FILE: drivers/char/devpoll.c:608:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1139: FILE: drivers/char/devpoll.c:614:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1155: FILE: drivers/char/devpoll.c:630:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1160: FILE: drivers/char/devpoll.c:635:
+	for (i=0; i< dp->dp_numvec; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#1160: FILE: drivers/char/devpoll.c:635:
+	for (i=0; i< dp->dp_numvec; i++) {
 	           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1163: FILE: drivers/char/devpoll.c:638:
+			free_pages( (unsigned)dp->dp_memvec[i], 0);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1163: FILE: drivers/char/devpoll.c:638:
+			free_pages( (unsigned)dp->dp_memvec[i], 0);

WARNING:SPACING: space prohibited before semicolon
#1167: FILE: drivers/char/devpoll.c:642:
+	dp->dp_numvec = 0 ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1170: FILE: drivers/char/devpoll.c:645:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1171: FILE: drivers/char/devpoll.c:646:
+static void devpoll_mm_open( struct vm_area_struct * vma){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1171: FILE: drivers/char/devpoll.c:646:
+static void devpoll_mm_open( struct vm_area_struct * vma){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#1171: FILE: drivers/char/devpoll.c:646:
+static void devpoll_mm_open( struct vm_area_struct * vma){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1171: FILE: drivers/char/devpoll.c:646:
+static void devpoll_mm_open( struct vm_area_struct * vma){

WARNING:LINE_SPACING: Missing a blank line after declarations
#1174: FILE: drivers/char/devpoll.c:649:
+	struct devpoll *dp = file->private_data;
+	if(dp)

ERROR:SPACING: space required before the open parenthesis '('
#1174: FILE: drivers/char/devpoll.c:649:
+	if(dp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1178: FILE: drivers/char/devpoll.c:653:
+static void devpoll_mm_close( struct vm_area_struct * vma){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1178: FILE: drivers/char/devpoll.c:653:
+static void devpoll_mm_close( struct vm_area_struct * vma){

ERROR:SPACING: space required before the open brace '{'
#1178: FILE: drivers/char/devpoll.c:653:
+static void devpoll_mm_close( struct vm_area_struct * vma){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1178: FILE: drivers/char/devpoll.c:653:
+static void devpoll_mm_close( struct vm_area_struct * vma){

WARNING:LINE_SPACING: Missing a blank line after declarations
#1181: FILE: drivers/char/devpoll.c:656:
+	struct devpoll *dp = file->private_data;
+	if(dp)

ERROR:SPACING: space required before the open parenthesis '('
#1181: FILE: drivers/char/devpoll.c:656:
+	if(dp)

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#1185: FILE: drivers/char/devpoll.c:660:
+static struct vm_operations_struct devpoll_mmap_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#1186: FILE: drivers/char/devpoll.c:661:
+	open:	devpoll_mm_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1187: FILE: drivers/char/devpoll.c:662:
+	close:	devpoll_mm_close,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1187: FILE: drivers/char/devpoll.c:662:
+	close:	devpoll_mm_close,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1201: FILE: drivers/char/devpoll.c:676:
+	int  i=0;
 	      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1206: FILE: drivers/char/devpoll.c:681:
+		 vma->vm_start, vma->vm_pgoff<<PAGE_SHIFT));
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1208: FILE: drivers/char/devpoll.c:683:
+	if ( (vma->vm_pgoff<<PAGE_SHIFT) != 0)
 	                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1208: FILE: drivers/char/devpoll.c:683:
+	if ( (vma->vm_pgoff<<PAGE_SHIFT) != 0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1217: FILE: drivers/char/devpoll.c:692:
+	if (mapsize > dp->dp_numvec<<PAGE_SHIFT)
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: drivers/char/devpoll.c:694:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1220: FILE: drivers/char/devpoll.c:695:
+		
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1222: FILE: drivers/char/devpoll.c:697:
+	atomic_set(&dp->dp_mmapped,1);
 	                          ^

ERROR:SPACING: space required before the open brace '{'
#1223: FILE: drivers/char/devpoll.c:698:
+	for( i = 0 ; i < num_pages ; ++i){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1223: FILE: drivers/char/devpoll.c:698:
+	for( i = 0 ; i < num_pages ; ++i){

ERROR:SPACING: space required before the open parenthesis '('
#1223: FILE: drivers/char/devpoll.c:698:
+	for( i = 0 ; i < num_pages ; ++i){

ERROR:SPACING: space prohibited after that open parenthesis '('
#1224: FILE: drivers/char/devpoll.c:699:
+		if( remap_page_range(start, __pa(dp->dp_memvec[i]),

ERROR:SPACING: space required before the open parenthesis '('
#1224: FILE: drivers/char/devpoll.c:699:
+		if( remap_page_range(start, __pa(dp->dp_memvec[i]),

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1226: FILE: drivers/char/devpoll.c:701:
+				     vma->vm_page_prot) )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1230: FILE: drivers/char/devpoll.c:705:
+	dp->dp_mmap = (u_char*)vma->vm_start;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1237: FILE: drivers/char/devpoll.c:712:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1239: FILE: drivers/char/devpoll.c:714:
+struct file_operations devpoll_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#1240: FILE: drivers/char/devpoll.c:715:
+	write:write_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1241: FILE: drivers/char/devpoll.c:716:
+	ioctl: ioctl_devpoll,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1241: FILE: drivers/char/devpoll.c:716:
+	ioctl: ioctl_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1242: FILE: drivers/char/devpoll.c:717:
+	mmap: mmap_devpoll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1242: FILE: drivers/char/devpoll.c:717:
+	mmap: mmap_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1243: FILE: drivers/char/devpoll.c:718:
+	open: open_devpoll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1243: FILE: drivers/char/devpoll.c:718:
+	open: open_devpoll,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1244: FILE: drivers/char/devpoll.c:719:
+	release:close_devpoll
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1244: FILE: drivers/char/devpoll.c:719:
+	release:close_devpoll

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: drivers/char/devpoll.c:728:
+  printk(KERN_INFO "/dev/poll driver installed.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1253: FILE: drivers/char/devpoll.c:728:
+  printk(KERN_INFO "/dev/poll driver installed.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: drivers/char/devpoll.c:729:
+  misc_register(&devpoll);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1256: FILE: drivers/char/devpoll.c:731:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1257: FILE: drivers/char/devpoll.c:732:
+  return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1297: FILE: include/asm-i386/devpoll.h:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#1308: FILE: include/asm-i386/devpoll.h:12:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1310: FILE: include/asm-i386/devpoll.h:14:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1321: FILE: include/asm-i386/devpoll.h:25:
+
+

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#1333: FILE: include/asm-i386/devpoll.h:37:
+	u_char*  dp_mmap;	/* vaddr of mapped region */

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#1336: FILE: include/asm-i386/devpoll.h:40:
+	u_char** dp_memvec;	/* Pointer to pages allocated for mmap */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1343: FILE: include/asm-i386/devpoll.h:47:
+	struct pollfd * dp_fds;	/* Leave this ZERO for mmap */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1347: FILE: include/asm-i386/devpoll.h:51:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1348: FILE: include/asm-i386/devpoll.h:52:
+	
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1351: FILE: include/asm-i386/devpoll.h:55:
+
+

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1364: FILE: include/asm-i386/devpoll.h:68:
+dp_add_hint(struct poll_backmap ** map, rwlock_t *lock)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1368: FILE: include/asm-i386/devpoll.h:72:
+	struct dp_fd *dpfd;
+	if (!map)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: include/asm-i386/devpoll.h:74:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1415: FILE: include/linux/devpoll.h:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#1426: FILE: include/linux/devpoll.h:12:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1428: FILE: include/linux/devpoll.h:14:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1439: FILE: include/linux/devpoll.h:25:
+
+

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#1451: FILE: include/linux/devpoll.h:37:
+	u_char*  dp_mmap;	/* vaddr of mapped region */

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#1454: FILE: include/linux/devpoll.h:40:
+	u_char** dp_memvec;	/* Pointer to pages allocated for mmap */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1461: FILE: include/linux/devpoll.h:47:
+	struct pollfd * dp_fds;	/* Leave this ZERO for mmap */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: include/linux/devpoll.h:51:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1466: FILE: include/linux/devpoll.h:52:
+	
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1469: FILE: include/linux/devpoll.h:55:
+
+

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1482: FILE: include/linux/devpoll.h:68:
+dp_add_hint(struct poll_backmap ** map, rwlock_t *lock)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1486: FILE: include/linux/devpoll.h:72:
+	struct dp_fd *dpfd;
+	if (!map)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: include/linux/devpoll.h:74:
+^I$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#1545: FILE: include/linux/poll.h:95:
+poll_backmap(int fd, void *arg, struct poll_backmap ** entry)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp"
#1557: FILE: include/linux/poll.h:107:
+	while (tmp != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1558: FILE: include/linux/poll.h:108:
+^I^Iif (tmp->files == current->files && tmp->fd == fd && $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1559: FILE: include/linux/poll.h:109:
+		    arg==tmp->arg)
 		       ^

CHECK:SPACING: No space is necessary after a cast
#1564: FILE: include/linux/poll.h:114:
+	tmp = (struct poll_backmap *) kmalloc(sizeof(*entry), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1564: FILE: include/linux/poll.h:114:
+	tmp = (struct poll_backmap *) kmalloc(sizeof(*entry), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tmp"
#1565: FILE: include/linux/poll.h:115:
+	if (tmp == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1580: FILE: include/linux/poll.h:130:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp"
#1581: FILE: include/linux/poll.h:131:
+	while (tmp != NULL) {

ERROR:SPACING: space required before the open brace '{'
#1582: FILE: include/linux/poll.h:132:
+		if (tmp->files == files && tmp->fd == fd){

WARNING:LINE_SPACING: Missing a blank line after declarations
#1584: FILE: include/linux/poll.h:134:
+			struct poll_backmap *next = tmp->next;
+			if( old==NULL )

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1584: FILE: include/linux/poll.h:134:
+			if( old==NULL )
 			       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1584: FILE: include/linux/poll.h:134:
+			if( old==NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1584: FILE: include/linux/poll.h:134:
+			if( old==NULL )

ERROR:SPACING: space required before the open parenthesis '('
#1584: FILE: include/linux/poll.h:134:
+			if( old==NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old"
#1584: FILE: include/linux/poll.h:134:
+			if( old==NULL )

ERROR:SPACING: space required before the open brace '{'
#1590: FILE: include/linux/poll.h:140:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1590: FILE: include/linux/poll.h:140:
+		}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1595: FILE: include/linux/poll.h:145:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1598: FILE: include/linux/poll.h:148:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old"
#1599: FILE: include/linux/poll.h:149:
+	if (old == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1601: FILE: include/linux/poll.h:151:
+^Ielse $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1604: FILE: include/linux/poll.h:154:
+	kfree (tmp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1611: FILE: include/linux/poll.h:161:
+	printk("poll_clean_backmap: map %p\n", map);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'poll_clean_backmap', this function's name, in a string
#1611: FILE: include/linux/poll.h:161:
+	printk("poll_clean_backmap: map %p\n", map);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1612: FILE: include/linux/poll.h:162:
+	printk("poll_clean_backmap: *map %p\n", *map);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'poll_clean_backmap', this function's name, in a string
#1612: FILE: include/linux/poll.h:162:
+	printk("poll_clean_backmap: *map %p\n", *map);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1614: FILE: include/linux/poll.h:164:
+	while (tmp) {
+	  printk("poll_clean_backmap: tmp %p\n", tmp);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1615: FILE: include/linux/poll.h:165:
+	  printk("poll_clean_backmap: tmp %p\n", tmp);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'poll_clean_backmap', this function's name, in a string
#1615: FILE: include/linux/poll.h:165:
+	  printk("poll_clean_backmap: tmp %p\n", tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1618: FILE: include/linux/poll.h:168:
+		kfree (old);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1625: FILE: include/linux/poll.h:175:
+extern void poll_freewait(poll_table *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#1639: FILE: include/linux/spinlock.h:126:
+#define rwlock_init(lock)	do { } while(0)

ERROR:SPACING: space required before the open brace '{'
#1703: FILE: net/core/sock.c:1099:
+	if (sk->sleep && waitqueue_active(sk->sleep)){

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1703: FILE: net/core/sock.c:1099:
+	if (sk->sleep && waitqueue_active(sk->sleep)){

ERROR:SPACING: space required before the open brace '{'
#1714: FILE: net/core/sock.c:1109:
+	if (sk->sleep && waitqueue_active(sk->sleep)){

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1714: FILE: net/core/sock.c:1109:
+	if (sk->sleep && waitqueue_active(sk->sleep)){

ERROR:SPACING: space required before the open brace '{'
#1726: FILE: net/core/sock.c:1120:
+	if (sk->sleep && waitqueue_active(sk->sleep)){

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1726: FILE: net/core/sock.c:1120:
+	if (sk->sleep && waitqueue_active(sk->sleep)){

ERROR:SPACING: space required before the open brace '{'
#1738: FILE: net/core/sock.c:1136:
+		if (sk->sleep && waitqueue_active(sk->sleep)){

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1738: FILE: net/core/sock.c:1136:
+		if (sk->sleep && waitqueue_active(sk->sleep)){

CHECK:SPACING: spaces preferred around that '|' (ctx:WxV)
#1797: FILE: net/ipv4/tcp.c:461:
+	return mask |POLLHINT;
 	            ^

ERROR:SPACING: space required before the open brace '{'
#1818: FILE: net/unix/af_unix.c:303:
+		if (sk->sleep && waitqueue_active(sk->sleep)){

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1818: FILE: net/unix/af_unix.c:303:
+		if (sk->sleep && waitqueue_active(sk->sleep)){

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1819: FILE: net/unix/af_unix.c:304:
+			dp_add_hint(sk->backmap,sk->dplock);
 			                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1833: FILE: net/unix/af_unix.c:1707:
+^I$

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#1853: FILE: Makefile:4:
+EXTRAVERSION = dp01
 ^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1887: FILE: drivers/char/devpoll.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#1915: FILE: drivers/char/devpoll.c:29:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1916: FILE: drivers/char/devpoll.c:30:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1918: FILE: drivers/char/devpoll.c:32:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1919: FILE: drivers/char/devpoll.c:33:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1923: FILE: drivers/char/devpoll.c:37:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1925: FILE: drivers/char/devpoll.c:39:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1929: FILE: drivers/char/devpoll.c:43:
+#define DPRINTK(x)	printk x

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1930: FILE: drivers/char/devpoll.c:44:
+#define DNPRINTK(n,x)	if (n <= DEBUG) printk x
                   ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1930: FILE: drivers/char/devpoll.c:44:
+#define DNPRINTK(n,x)	if (n <= DEBUG) printk x

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#1930: FILE: drivers/char/devpoll.c:44:
+#define DNPRINTK(n,x)	if (n <= DEBUG) printk x

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1933: FILE: drivers/char/devpoll.c:47:
+#define DNPRINTK(n,x)
                   ^

CHECK:SPACING: No space is necessary after a cast
#1948: FILE: drivers/char/devpoll.c:62:
+#define dpi_mem_alloc()	(struct dpitem *) kmem_cache_alloc(dpi_cache, SLAB_KERN

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1948: FILE: drivers/char/devpoll.c:62:
+#define dpi_mem_alloc()	(struct dpitem *) kmem_cache_alloc(dpi_cache, SLAB_KERN

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1952: FILE: drivers/char/devpoll.c:65:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1954: FILE: drivers/char/devpoll.c:67:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1956: FILE: drivers/char/devpoll.c:69:
+typedef unsigned long long event_version_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1988: FILE: drivers/char/devpoll.c:101:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1990: FILE: drivers/char/devpoll.c:103:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1992: FILE: drivers/char/devpoll.c:105:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2006: FILE: drivers/char/devpoll.c:118:
+static int write_devpoll(struct file *file, const char *buffer, size_t count,
+		loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2009: FILE: drivers/char/devpoll.c:121:
+static int ioctl_devpoll(struct inode *inode, struct file *file,
+		unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2010: FILE: drivers/char/devpoll.c:122:
+static void devpoll_mm_open(struct vm_area_struct * vma);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2011: FILE: drivers/char/devpoll.c:123:
+static void devpoll_mm_close(struct vm_area_struct * vma);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2014: FILE: drivers/char/devpoll.c:126:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2016: FILE: drivers/char/devpoll.c:128:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#2019: FILE: drivers/char/devpoll.c:131:
+static struct file_operations devpoll_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#2020: FILE: drivers/char/devpoll.c:132:
+	write: write_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2021: FILE: drivers/char/devpoll.c:133:
+	ioctl: ioctl_devpoll,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#2021: FILE: drivers/char/devpoll.c:133:
+	ioctl: ioctl_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2022: FILE: drivers/char/devpoll.c:134:
+	mmap: mmap_devpoll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#2022: FILE: drivers/char/devpoll.c:134:
+	mmap: mmap_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2023: FILE: drivers/char/devpoll.c:135:
+	open: open_devpoll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#2023: FILE: drivers/char/devpoll.c:135:
+	open: open_devpoll,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2024: FILE: drivers/char/devpoll.c:136:
+	release: close_devpoll
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#2024: FILE: drivers/char/devpoll.c:136:
+	release: close_devpoll

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#2027: FILE: drivers/char/devpoll.c:139:
+static struct vm_operations_struct devpoll_mmap_ops = {

WARNING:INDENTED_LABEL: labels should not be indented
#2028: FILE: drivers/char/devpoll.c:140:
+	open: devpoll_mm_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2029: FILE: drivers/char/devpoll.c:141:
+	close: devpoll_mm_close,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#2029: FILE: drivers/char/devpoll.c:141:
+	close: devpoll_mm_close,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2036: FILE: drivers/char/devpoll.c:148:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2038: FILE: drivers/char/devpoll.c:150:
+
+

CHECK:SPACING: No space is necessary after a cast
#2044: FILE: drivers/char/devpoll.c:156:
+		pages[ii] = (char *) __get_free_pages(GFP_KERNEL, 0);

CHECK:SPACING: No space is necessary after a cast
#2048: FILE: drivers/char/devpoll.c:160:
+				free_pages((unsigned long) pages[ii], 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2057: FILE: drivers/char/devpoll.c:169:
+
+

CHECK:SPACING: No space is necessary after a cast
#2064: FILE: drivers/char/devpoll.c:176:
+		free_pages((unsigned long) pages[ii], 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2069: FILE: drivers/char/devpoll.c:181:
+
+

CHECK:SPACING: No space is necessary after a cast
#2090: FILE: drivers/char/devpoll.c:202:
+	if (!(dp->hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_he

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2090: FILE: drivers/char/devpoll.c:202:
+	if (!(dp->hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_he

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2090: FILE: drivers/char/devpoll.c:202:
+	if (!(dp->hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_he

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2101: FILE: drivers/char/devpoll.c:212:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2113: FILE: drivers/char/devpoll.c:224:
+			if (current->files && (file = fcheck(dpi->pfd.fd)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2127: FILE: drivers/char/devpoll.c:238:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2139: FILE: drivers/char/devpoll.c:250:
+		if (dpi->pfd.fd == fd) break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dp_find', this function's name, in a string
#2144: FILE: drivers/char/devpoll.c:255:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: dp_find(%d) -> %p\n", current, fd, dpi

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2150: FILE: drivers/char/devpoll.c:260:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dp_hashresize', this function's name, in a string
#2158: FILE: drivers/char/devpoll.c:268:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: dp_hashresize(%p) bits=%u\n", current,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: drivers/char/devpoll.c:269:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: dp_hashresize(%p) bits=%u\n", current,
 dp, hbits));

CHECK:SPACING: No space is necessary after a cast
#2161: FILE: drivers/char/devpoll.c:271:
+	if (!(hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_head),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2161: FILE: drivers/char/devpoll.c:271:
+	if (!(hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_head),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2161: FILE: drivers/char/devpoll.c:271:
+	if (!(hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_head),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2162: FILE: drivers/char/devpoll.c:272:
+	if (!(hash = (struct list_head *) kmalloc(hentries * sizeof(struct list_head),
+			GFP_KERNEL)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2187: FILE: drivers/char/devpoll.c:297:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2197: FILE: drivers/char/devpoll.c:307:
+	if (!(file = fcheck(pfd->fd)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2200: FILE: drivers/char/devpoll.c:310:
+	if (!(dpi = dpi_mem_alloc()))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2215: FILE: drivers/char/devpoll.c:325:
+	if ((atomic_read(&dp->hents) >> dp->hbits) > RESIZE_LENGTH &&
+			dp->hbits < MAX_HASH_BITS)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dp_insert', this function's name, in a string
#2222: FILE: drivers/char/devpoll.c:332:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: dp_insert(%p, %d)\n", current, dp, pfd

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2228: FILE: drivers/char/devpoll.c:337:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2242: FILE: drivers/char/devpoll.c:351:
+	if ((file = fcheck(fd)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dp_remove', this function's name, in a string
#2247: FILE: drivers/char/devpoll.c:356:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: dp_remove(%p, %d)\n", current, dp, fd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2253: FILE: drivers/char/devpoll.c:361:
+
+

CHECK:SPACING: No space is necessary after a cast
#2257: FILE: drivers/char/devpoll.c:364:
+	struct dpitem *dpi = (struct dpitem *) data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2262: FILE: drivers/char/devpoll.c:369:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: notify(%p, %p, %ld, %ld) dp=%p\n",
+			current, file, data, event[0], event[1], dp));

CHECK:SPACING: No space is necessary after a cast
#2273: FILE: drivers/char/devpoll.c:380:
+		pfd = (struct pollfd *) (dp->pages[EVENT_PAGE_INDEX(dpi->index)] +

CHECK:SPACING: No space is necessary after a cast
#2277: FILE: drivers/char/devpoll.c:384:
+		pfd = (struct pollfd *) (dp->pages[EVENT_PAGE_INDEX(dpi->index)] +

CHECK:SPACING: No space is necessary after a cast
#2283: FILE: drivers/char/devpoll.c:390:
+			pfd = (struct pollfd *) (dp->pages[EVENT_PAGE_INDEX(dpi->index)] +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2292: FILE: drivers/char/devpoll.c:399:
+	if (atomic_read(&dp->sleepers) &&
+			(dp->eventcnt > dp->minevents || (jiffies - dp->jiffies) >= dp->minjiffies))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2300: FILE: drivers/char/devpoll.c:407:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2306: FILE: drivers/char/devpoll.c:413:
+	if (!(dp = kmalloc(sizeof(struct devpoll), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dp)...) over kmalloc(sizeof(struct devpoll)...)
#2306: FILE: drivers/char/devpoll.c:413:
+	if (!(dp = kmalloc(sizeof(struct devpoll), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2310: FILE: drivers/char/devpoll.c:417:
+	if ((res = dp_init(dp))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2323: FILE: drivers/char/devpoll.c:430:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2338: FILE: drivers/char/devpoll.c:445:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2340: FILE: drivers/char/devpoll.c:447:
+static int write_devpoll(struct file *file, const char *buffer, size_t count,
+		loff_t *ppos)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2353: FILE: drivers/char/devpoll.c:459:
+	if ((res = verify_area(VERIFY_READ, buffer, count)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2373: FILE: drivers/char/devpoll.c:479:
+		}
+		else if (dpi) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2377: FILE: drivers/char/devpoll.c:483:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#2377: FILE: drivers/char/devpoll.c:483:
+		else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2392: FILE: drivers/char/devpoll.c:498:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2458: FILE: drivers/char/devpoll.c:562:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2460: FILE: drivers/char/devpoll.c:564:
+static int ioctl_devpoll(struct inode *inode, struct file *file,
+		unsigned int cmd, unsigned long arg)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2479: FILE: drivers/char/devpoll.c:583:
+			if (!(res = dp_alloc_pages(dp->pages0, numpages))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2480: FILE: drivers/char/devpoll.c:584:
+				if (!(res = dp_alloc_pages(dp->pages1, numpages))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2511: FILE: drivers/char/devpoll.c:614:
+		DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: ioctl(%p, DP_FREE) == %d\n", current,
 dp, res));

CHECK:SPACING: No space is necessary after a cast
#2515: FILE: drivers/char/devpoll.c:618:
+		return dp_poll(dp, (void *) arg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2531: FILE: drivers/char/devpoll.c:634:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2532: FILE: drivers/char/devpoll.c:635:
+static void devpoll_mm_open(struct vm_area_struct * vma)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2537: FILE: drivers/char/devpoll.c:640:
+	if (dp) atomic_inc(&dp->mmapped);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2542: FILE: drivers/char/devpoll.c:645:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2543: FILE: drivers/char/devpoll.c:646:
+static void devpoll_mm_close(struct vm_area_struct * vma)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2548: FILE: drivers/char/devpoll.c:651:
+	if (dp) atomic_dec(&dp->mmapped);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2553: FILE: drivers/char/devpoll.c:656:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2563: FILE: drivers/char/devpoll.c:666:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: mmap(%p, %lx, %lx)\n",
+			current, dp, vma->vm_start, vma->vm_pgoff << PAGE_SHIFT));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2579: FILE: drivers/char/devpoll.c:682:
+		if (remap_page_range(start, __pa(dp->pages0[ii]),
[...]
+    		goto out;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2580: FILE: drivers/char/devpoll.c:683:
+		if (remap_page_range(start, __pa(dp->pages0[ii]),
+				PAGE_SIZE, vma->vm_page_prot))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2581: FILE: drivers/char/devpoll.c:684:
+    ^I^Igoto out;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2581: FILE: drivers/char/devpoll.c:684:
+    ^I^Igoto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2581: FILE: drivers/char/devpoll.c:684:
+    ^I^Igoto out;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2585: FILE: drivers/char/devpoll.c:688:
+		if (remap_page_range(start, __pa(dp->pages1[ii]),
[...]
+    		goto out;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2586: FILE: drivers/char/devpoll.c:689:
+		if (remap_page_range(start, __pa(dp->pages1[ii]),
+				PAGE_SIZE, vma->vm_page_prot))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2587: FILE: drivers/char/devpoll.c:690:
+    ^I^Igoto out;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2587: FILE: drivers/char/devpoll.c:690:
+    ^I^Igoto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2587: FILE: drivers/char/devpoll.c:690:
+    ^I^Igoto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2597: FILE: drivers/char/devpoll.c:700:
+^I^I ^Icurrent, dp, vma->vm_start, vma->vm_pgoff << PAGE_SHIFT, res));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2597: FILE: drivers/char/devpoll.c:700:
+^I^I ^Icurrent, dp, vma->vm_start, vma->vm_pgoff << PAGE_SHIFT, res));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2597: FILE: drivers/char/devpoll.c:700:
+	DNPRINTK(3, (KERN_INFO "[%p] /dev/poll: mmap(%p, %lx, %lx) == %d\n",
+		 	current, dp, vma->vm_start, vma->vm_pgoff << PAGE_SHIFT, res));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2601: FILE: drivers/char/devpoll.c:704:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2605: FILE: drivers/char/devpoll.c:708:
+	dpi_cache = kmem_cache_create("devpoll",
+			sizeof(struct dpitem),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2609: FILE: drivers/char/devpoll.c:712:
+		printk(KERN_INFO "[%p] /dev/poll: driver install failed.\n", current);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2613: FILE: drivers/char/devpoll.c:716:
+	printk(KERN_INFO "[%p] /dev/poll: driver installed.\n", current);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2620: FILE: drivers/char/devpoll.c:723:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2671: FILE: fs/file.c:250:
+int file_notify_addcb(struct file *filep,
+		void (*cbproc)(struct file *, void *, unsigned long *, long *), void *data)

CHECK:SPACING: No space is necessary after a cast
#2676: FILE: fs/file.c:255:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERN

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2676: FILE: fs/file.c:255:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERN

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2676: FILE: fs/file.c:255:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERN

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fcbp)...) over kmalloc(sizeof(struct fcb_struct)...)
#2676: FILE: fs/file.c:255:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERN

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2692: FILE: fs/file.c:270:
+int file_notify_delcb(struct file *filep,
+		void (*cbproc)(struct file *, void *, unsigned long *, long *))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2780: FILE: include/linux/devpoll.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2790: FILE: include/linux/devpoll.h:11:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2792: FILE: include/linux/devpoll.h:13:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2803: FILE: include/linux/devpoll.h:24:
+
+

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2804: FILE: include/linux/devpoll.h:25:
+#define __MIN(a, b)	(((a) < (b)) ? (a): (b))
                    	                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#2804: FILE: include/linux/devpoll.h:25:
+#define __MIN(a, b)	(((a) < (b)) ? (a): (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#2804: FILE: include/linux/devpoll.h:25:
+#define __MIN(a, b)	(((a) < (b)) ? (a): (b))

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2805: FILE: include/linux/devpoll.h:26:
+#define __MAX(a, b)	(((a) > (b)) ? (a): (b))
                    	                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#2805: FILE: include/linux/devpoll.h:26:
+#define __MAX(a, b)	(((a) > (b)) ? (a): (b))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#2805: FILE: include/linux/devpoll.h:26:
+#define __MAX(a, b)	(((a) > (b)) ? (a): (b))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2807: FILE: include/linux/devpoll.h:28:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2809: FILE: include/linux/devpoll.h:30:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2827: FILE: include/linux/devpoll.h:48:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2829: FILE: include/linux/devpoll.h:50:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2841: FILE: include/linux/file.h:100:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2845: FILE: include/linux/file.h:104:
+int file_notify_addcb(struct file *filep,
+		void (*cbproc)(struct file *, void *, unsigned long *, long *), void *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2848: FILE: include/linux/file.h:107:
+int file_notify_delcb(struct file *filep,
+		void (*cbproc)(struct file *, void *, unsigned long *, long *));

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2871: FILE: include/linux/fs.h:506:
+#define fcblist_read_unlock(fp, fl)		read_unlock_irqrestore(&(fp)->f_cblock, fl

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2874: FILE: include/linux/fs.h:508:
+#define fcblist_write_unlock(fp, fl)	write_unlock_irqrestore(&(fp)->f_cblock, f

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#2879: FILE: include/linux/fs.h:512:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2879: FILE: include/linux/fs.h:512:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#2879: FILE: include/linux/fs.h:512:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long *' should also have an identifier name
#2879: FILE: include/linux/fs.h:512:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2907: FILE: include/linux/list.h:152:
+#define list_first(head)	(((head)->next != (head)) ? (head)->next: (struct list
                         	                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#2907: FILE: include/linux/list.h:152:
+#define list_first(head)	(((head)->next != (head)) ? (head)->next: (struct list

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2910: FILE: include/linux/list.h:154:
+#define list_last(head)	(((head)->prev != (head)) ? (head)->prev: (struct list_
                        	                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#2910: FILE: include/linux/list.h:154:
+#define list_last(head)	(((head)->prev != (head)) ? (head)->prev: (struct list_

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2942: FILE: include/net/sock.h:1244:
+		if (sk->socket->fasync_list)
 		sock_wake_async(sk->socket, how, band);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 180 errors, 126 warnings, 137 checks, 2298 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
