WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#92: 
diff -urpN linux-2.6.15-rc7.src/drivers/scsi/sata_vsc.c linux-2.6.15-rc7.fix/drivers/scsi/sata_vsc.c

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#104: FILE: drivers/scsi/sata_vsc.c:133:
+		writew(tf->feature | (((u16)tf->hob_feature) << 8), (void __iomem *) ioaddr->feature_addr);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#104: FILE: drivers/scsi/sata_vsc.c:133:
+		writew(tf->feature | (((u16)tf->hob_feature) << 8), (void __iomem *) ioaddr->feature_addr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#105: FILE: drivers/scsi/sata_vsc.c:134:
+		writew(tf->nsect | (((u16)tf->hob_nsect) << 8), (void __iomem *) ioaddr->nsect_addr);

CHECK:SPACING: No space is necessary after a cast
#105: FILE: drivers/scsi/sata_vsc.c:134:
+		writew(tf->nsect | (((u16)tf->hob_nsect) << 8), (void __iomem *) ioaddr->nsect_addr);

CHECK:SPACING: No space is necessary after a cast
#106: FILE: drivers/scsi/sata_vsc.c:135:
+		writew(tf->lbal | (((u16)tf->hob_lbal) << 8), (void __iomem *) ioaddr->lbal_addr);

CHECK:SPACING: No space is necessary after a cast
#107: FILE: drivers/scsi/sata_vsc.c:136:
+		writew(tf->lbam | (((u16)tf->hob_lbam) << 8), (void __iomem *) ioaddr->lbam_addr);

CHECK:SPACING: No space is necessary after a cast
#108: FILE: drivers/scsi/sata_vsc.c:137:
+		writew(tf->lbah | (((u16)tf->hob_lbah) << 8), (void __iomem *) ioaddr->lbah_addr);

CHECK:SPACING: No space is necessary after a cast
#115: FILE: drivers/scsi/sata_vsc.c:139:
+		writew(tf->feature, (void __iomem *) ioaddr->feature_addr);

CHECK:SPACING: No space is necessary after a cast
#116: FILE: drivers/scsi/sata_vsc.c:140:
+		writew(tf->nsect, (void __iomem *) ioaddr->nsect_addr);

CHECK:SPACING: No space is necessary after a cast
#117: FILE: drivers/scsi/sata_vsc.c:141:
+		writew(tf->lbal, (void __iomem *) ioaddr->lbal_addr);

CHECK:SPACING: No space is necessary after a cast
#118: FILE: drivers/scsi/sata_vsc.c:142:
+		writew(tf->lbam, (void __iomem *) ioaddr->lbam_addr);

CHECK:SPACING: No space is necessary after a cast
#119: FILE: drivers/scsi/sata_vsc.c:143:
+		writew(tf->lbah, (void __iomem *) ioaddr->lbah_addr);

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/scsi/sata_vsc.c:147:
+		writeb(tf->device, (void __iomem *) ioaddr->device_addr);

CHECK:SPACING: No space is necessary after a cast
#138: FILE: drivers/scsi/sata_vsc.c:159:
+	tf->device = readw((void __iomem *) ioaddr->device_addr);

CHECK:SPACING: No space is necessary after a cast
#139: FILE: drivers/scsi/sata_vsc.c:160:
+	feature = readw((void __iomem *) ioaddr->error_addr);

CHECK:SPACING: No space is necessary after a cast
#140: FILE: drivers/scsi/sata_vsc.c:161:
+	nsect = readw((void __iomem *) ioaddr->nsect_addr);

CHECK:SPACING: No space is necessary after a cast
#141: FILE: drivers/scsi/sata_vsc.c:162:
+	lbal = readw((void __iomem *) ioaddr->lbal_addr);

CHECK:SPACING: No space is necessary after a cast
#142: FILE: drivers/scsi/sata_vsc.c:163:
+	lbam = readw((void __iomem *) ioaddr->lbam_addr);

CHECK:SPACING: No space is necessary after a cast
#143: FILE: drivers/scsi/sata_vsc.c:164:
+	lbah = readw((void __iomem *) ioaddr->lbah_addr);

CHECK:SPACING: No space is necessary after a cast
#153: FILE: drivers/scsi/sata_vsc.c:283:
+	writel(0, (void __iomem *) (base + VSC_SATA_UP_DESCRIPTOR_OFFSET));

CHECK:SPACING: No space is necessary after a cast
#154: FILE: drivers/scsi/sata_vsc.c:284:
+	writel(0, (void __iomem *) (base + VSC_SATA_UP_DATA_BUFFER_OFFSET));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120876.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 3 warnings, 19 checks, 60 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120876.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
