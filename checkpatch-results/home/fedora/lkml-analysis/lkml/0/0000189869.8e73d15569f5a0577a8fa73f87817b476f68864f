WARNING:TYPO_SPELLING: 'interferance' may be misspelled - perhaps 'interference'?
#19: 
Subject: [PATCH] Platform SMIs and their interferance with tsc based delay calibration
                                         ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
(System Management Interrupts that are non-maskable) are present. This could 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: /arch/i386/kernel/timers/common.c:142:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: /arch/i386/kernel/timers/common.c:142:
 
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: /arch/i386/kernel/timers/common.c:142:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#120: FILE: /arch/i386/kernel/timers/common.c:146:
+	unsigned long retval;
+	rdtscl(retval);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: /arch/i386/kernel/timers/common.c:150:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: /arch/i386/kernel/timers/timer_hpet.c:186:
+^I.read_timer = ^I^Iread_timer_tsc,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: /arch/i386/kernel/timers/timer_pm.c:249:
+^I.read_timer ^I^I= read_timer_tsc,$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: /include/asm-x86_64/timex.h:29:
+extern int read_current_timer(unsigned long *timer_value);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_READ_CURRENT_TIMER' is wrong - use Kconfig variables or standard guards instead
#193: FILE: /include/asm-x86_64/timex.h:30:
+#define ARCH_HAS_READ_CURRENT_TIMER	1

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: /include/asm-i386/timer.h:56:
+extern unsigned long read_timer_tsc(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: /include/asm-i386/timex.h:52:
+extern int read_current_timer(unsigned long *timer_value);

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_READ_CURRENT_TIMER' is wrong - use Kconfig variables or standard guards instead
#225: FILE: /include/asm-i386/timex.h:53:
+#define ARCH_HAS_READ_CURRENT_TIMER	1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: /init/calibrate.c:24:
+/* This routine uses the read_current_timer() routine and gets the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: /init/calibrate.c:26:
+ * Also, this code tries to handle non-maskable asynchronous events $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#251: FILE: /init/calibrate.c:29:
+#define DELAY_CALIBRATION_TICKS			((HZ < 100) ? 1 : (HZ/100))
                                			                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#254: FILE: /init/calibrate.c:32:
+unsigned long __devinit calibrate_delay_direct(void)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#264: FILE: /init/calibrate.c:42:
+	if (read_current_timer(&pre_start) < 0 )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: /init/calibrate.c:49:
+^I * will not do. As we don't really know whether jiffy switch $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: /init/calibrate.c:50:
+^I * happened first or timer_value was read first. And some asynchronous $

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#290: FILE: /init/calibrate.c:68:
+		while (jiffies <= (start_jiffies + 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: /init/calibrate.c:76:
+^I^Iwhile (jiffies <= $

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#298: FILE: /init/calibrate.c:76:
+		while (jiffies <= 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: /init/calibrate.c:87:
+^I ^I * If the upper limit and lower limit of the tsc_rate is $

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: /init/calibrate.c:87:
+^I ^I * If the upper limit and lower limit of the tsc_rate is $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: /init/calibrate.c:87:
+^I ^I * If the upper limit and lower limit of the tsc_rate is $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#320: FILE: /init/calibrate.c:98:
+		return (good_tsc_sum/good_tsc_count);
 		                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#322: FILE: /init/calibrate.c:100:
+	printk(KERN_WARNING "calibrate_delay_direct() failed to get a good "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'calibrate_delay_direct', this function's name, in a string
#322: FILE: /init/calibrate.c:100:
+	printk(KERN_WARNING "calibrate_delay_direct() failed to get a good "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: /init/calibrate.c:101:
+	printk(KERN_WARNING "calibrate_delay_direct() failed to get a good "
+	       "estimate for loops_per_jiffy.\nProbably due to long platform interrupts. Consider using \"lpj=\" boot option.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#327: FILE: /init/calibrate.c:105:
+unsigned long __devinit calibrate_delay_direct(void) {return 0;}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#327: FILE: /init/calibrate.c:105:
+unsigned long __devinit calibrate_delay_direct(void) {return 0;}
                                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: /init/calibrate.c:107:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: /init/calibrate.c:107:
+ $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#337: FILE: /init/calibrate.c:126:
+	} else if ((loops_per_jiffy = calibrate_delay_direct()) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#338: FILE: /init/calibrate.c:127:
+		printk("Calibrating delay using timer specific routine.. ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#339: FILE: /init/calibrate.c:128:
+		printk("%lu.%02lu BogoMIPS (lpj=%lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: /init/calibrate.c:129:
+		printk("%lu.%02lu BogoMIPS (lpj=%lu)\n",
+			loops_per_jiffy/(500000/HZ),

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#340: FILE: /init/calibrate.c:129:
+			loops_per_jiffy/(500000/HZ),
 			               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#340: FILE: /init/calibrate.c:129:
+			loops_per_jiffy/(500000/HZ),
 			                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#341: FILE: /init/calibrate.c:130:
+			(loops_per_jiffy/(5000/HZ)) % 100,
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#341: FILE: /init/calibrate.c:130:
+			(loops_per_jiffy/(5000/HZ)) % 100,
 			                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189869.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 17 warnings, 12 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189869.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
