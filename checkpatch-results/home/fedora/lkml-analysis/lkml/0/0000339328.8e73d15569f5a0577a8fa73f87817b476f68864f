Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
Use of uninitialized value $typo_fix in ucfirst at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3363.
WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -Naurp -X /home/rddunlap/doc/dontdiff-osdl linux-260-test4-pv/fs/fat/inode.c linux-260-test4-fs/fs/fat/inode.c

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#67: FILE: fs/fat/inode.c:251:
+	printk(KERN_INFO "FAT: %s option is obsolete, "

WARNING:SPLIT_STRING: quoted string split across lines
#68: FILE: fs/fat/inode.c:252:
+	printk(KERN_INFO "FAT: %s option is obsolete, "
+			"not supported now\n", optname);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <Opt_blocksize>
#72: FILE: fs/fat/inode.c:256:
+	Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_charset>
#72: FILE: fs/fat/inode.c:256:
+	Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check_n>
#72: FILE: fs/fat/inode.c:256:
+	Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check_r>
#72: FILE: fs/fat/inode.c:256:
+	Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_check_s>
#72: FILE: fs/fat/inode.c:256:
+	Opt_blocksize, Opt_charset, Opt_check_n, Opt_check_r, Opt_check_s,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_fat>
#73: FILE: fs/fat/inode.c:257:
+	Opt_fat, Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_codepage>
#73: FILE: fs/fat/inode.c:257:
+	Opt_fat, Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_conv_a>
#73: FILE: fs/fat/inode.c:257:
+	Opt_fat, Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_conv_b>
#73: FILE: fs/fat/inode.c:257:
+	Opt_fat, Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_conv_t>
#73: FILE: fs/fat/inode.c:257:
+	Opt_fat, Opt_codepage, Opt_conv_a, Opt_conv_b, Opt_conv_t,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_debug>
#74: FILE: fs/fat/inode.c:258:
+	Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_dots>
#74: FILE: fs/fat/inode.c:258:
+	Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#74: FILE: fs/fat/inode.c:258:
+	Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_gid>
#74: FILE: fs/fat/inode.c:258:
+	Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_immutable>
#74: FILE: fs/fat/inode.c:258:
+	Opt_debug, Opt_dots, Opt_err, Opt_gid, Opt_immutable,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nocase>
#75: FILE: fs/fat/inode.c:259:
+	Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nodots>
#75: FILE: fs/fat/inode.c:259:
+	Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_quiet>
#75: FILE: fs/fat/inode.c:259:
+	Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_showexec>
#75: FILE: fs/fat/inode.c:259:
+	Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uid>
#75: FILE: fs/fat/inode.c:259:
+	Opt_nocase, Opt_nodots, Opt_quiet, Opt_showexec, Opt_uid,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_shortname_lower>
#76: FILE: fs/fat/inode.c:260:
+	Opt_shortname_lower, Opt_shortname_win95, Opt_shortname_winnt, Opt_shortname_mixed,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_shortname_win95>
#76: FILE: fs/fat/inode.c:260:
+	Opt_shortname_lower, Opt_shortname_win95, Opt_shortname_winnt, Opt_shortname_mixed,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_shortname_winnt>
#76: FILE: fs/fat/inode.c:260:
+	Opt_shortname_lower, Opt_shortname_win95, Opt_shortname_winnt, Opt_shortname_mixed,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_shortname_mixed>
#76: FILE: fs/fat/inode.c:260:
+	Opt_shortname_lower, Opt_shortname_win95, Opt_shortname_winnt, Opt_shortname_mixed,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_umask>
#77: FILE: fs/fat/inode.c:261:
+	Opt_umask, Opt_dmask, Opt_fmask, Opt_posix, Opt_cvf_format, Opt_cvf_options,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_dmask>
#77: FILE: fs/fat/inode.c:261:
+	Opt_umask, Opt_dmask, Opt_fmask, Opt_posix, Opt_cvf_format, Opt_cvf_options,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_fmask>
#77: FILE: fs/fat/inode.c:261:
+	Opt_umask, Opt_dmask, Opt_fmask, Opt_posix, Opt_cvf_format, Opt_cvf_options,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_posix>
#77: FILE: fs/fat/inode.c:261:
+	Opt_umask, Opt_dmask, Opt_fmask, Opt_posix, Opt_cvf_format, Opt_cvf_options,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cvf_format>
#77: FILE: fs/fat/inode.c:261:
+	Opt_umask, Opt_dmask, Opt_fmask, Opt_posix, Opt_cvf_format, Opt_cvf_options,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_cvf_options>
#77: FILE: fs/fat/inode.c:261:
+	Opt_umask, Opt_dmask, Opt_fmask, Opt_posix, Opt_cvf_format, Opt_cvf_options,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_off>
#78: FILE: fs/fat/inode.c:262:
+	Opt_utf8_off, Opt_utf8_no, Opt_utf8_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_no>
#78: FILE: fs/fat/inode.c:262:
+	Opt_utf8_off, Opt_utf8_no, Opt_utf8_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_false>
#78: FILE: fs/fat/inode.c:262:
+	Opt_utf8_off, Opt_utf8_no, Opt_utf8_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_on>
#79: FILE: fs/fat/inode.c:263:
+	Opt_utf8_on, Opt_utf8_yes, Opt_utf8_true, Opt_utf8_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_yes>
#79: FILE: fs/fat/inode.c:263:
+	Opt_utf8_on, Opt_utf8_yes, Opt_utf8_true, Opt_utf8_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_true>
#79: FILE: fs/fat/inode.c:263:
+	Opt_utf8_on, Opt_utf8_yes, Opt_utf8_true, Opt_utf8_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_utf8_opt>
#79: FILE: fs/fat/inode.c:263:
+	Opt_utf8_on, Opt_utf8_yes, Opt_utf8_true, Opt_utf8_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_off>
#80: FILE: fs/fat/inode.c:264:
+	Opt_uni_xl_off, Opt_uni_xl_no, Opt_uni_xl_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_no>
#80: FILE: fs/fat/inode.c:264:
+	Opt_uni_xl_off, Opt_uni_xl_no, Opt_uni_xl_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_false>
#80: FILE: fs/fat/inode.c:264:
+	Opt_uni_xl_off, Opt_uni_xl_no, Opt_uni_xl_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_on>
#81: FILE: fs/fat/inode.c:265:
+	Opt_uni_xl_on, Opt_uni_xl_yes, Opt_uni_xl_true, Opt_uni_xl_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_yes>
#81: FILE: fs/fat/inode.c:265:
+	Opt_uni_xl_on, Opt_uni_xl_yes, Opt_uni_xl_true, Opt_uni_xl_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_true>
#81: FILE: fs/fat/inode.c:265:
+	Opt_uni_xl_on, Opt_uni_xl_yes, Opt_uni_xl_true, Opt_uni_xl_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_uni_xl_opt>
#81: FILE: fs/fat/inode.c:265:
+	Opt_uni_xl_on, Opt_uni_xl_yes, Opt_uni_xl_true, Opt_uni_xl_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_off>
#82: FILE: fs/fat/inode.c:266:
+	Opt_nonumtail_off, Opt_nonumtail_no, Opt_nonumtail_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_no>
#82: FILE: fs/fat/inode.c:266:
+	Opt_nonumtail_off, Opt_nonumtail_no, Opt_nonumtail_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_false>
#82: FILE: fs/fat/inode.c:266:
+	Opt_nonumtail_off, Opt_nonumtail_no, Opt_nonumtail_false,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_on>
#83: FILE: fs/fat/inode.c:267:
+	Opt_nonumtail_on, Opt_nonumtail_yes, Opt_nonumtail_true, Opt_nonumtail_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_yes>
#83: FILE: fs/fat/inode.c:267:
+	Opt_nonumtail_on, Opt_nonumtail_yes, Opt_nonumtail_true, Opt_nonumtail_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_true>
#83: FILE: fs/fat/inode.c:267:
+	Opt_nonumtail_on, Opt_nonumtail_yes, Opt_nonumtail_true, Opt_nonumtail_opt,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_nonumtail_opt>
#83: FILE: fs/fat/inode.c:267:
+	Opt_nonumtail_on, Opt_nonumtail_yes, Opt_nonumtail_true, Opt_nonumtail_opt,

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: fs/fat/inode.c:361:
+		int token;
+		if (!*p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#183: FILE: fs/fat/inode.c:365:
+		switch (token) {
+			case Opt_check_s:
[...]
+			case Opt_check_r:
[...]
+			case Opt_check_n:
[...]
+			case Opt_dots:		/* msdos specific */
[...]
+			case Opt_nodots:	/* msdos specific */
[...]
+			case Opt_nocase:
[...]
+			case Opt_quiet:
[...]
+			case Opt_showexec:
[...]
+			case Opt_debug:
[...]
+			case Opt_immutable:
[...]
+			case Opt_uid:
[...]
+			case Opt_gid:
[...]
+			case Opt_umask:
[...]
+			case Opt_dmask:
[...]
+			case Opt_fmask:
[...]
+			case Opt_codepage:
[...]
+			case Opt_charset:
[...]
+			case Opt_shortname_lower:
[...]
+			case Opt_shortname_win95:
[...]
+			case Opt_shortname_winnt:
[...]
+			case Opt_shortname_mixed:
[...]
+			case Opt_utf8_off:	/* 0 or no or false */
+			case Opt_utf8_no:
+			case Opt_utf8_false:
[...]
+			case Opt_utf8_on:	/* empty or 1 or yes or true */
+			case Opt_utf8_opt:
+			case Opt_utf8_yes:
+			case Opt_utf8_true:
[...]
+			case Opt_uni_xl_off:	/* 0 or no or false */
+			case Opt_uni_xl_no:
+			case Opt_uni_xl_false:
[...]
+			case Opt_uni_xl_on:	/* empty or 1 or yes or true */
+			case Opt_uni_xl_yes:
+			case Opt_uni_xl_true:
+			case Opt_uni_xl_opt:
[...]
+			case Opt_nonumtail_off:		/* 0 or no or false */
+			case Opt_nonumtail_no:
+			case Opt_nonumtail_false:
[...]
+			case Opt_nonumtail_on:		/* empty or 1 or yes or true */
+			case Opt_nonumtail_yes:
+			case Opt_nonumtail_true:
+			case Opt_nonumtail_opt:
[...]
+			case Opt_conv_b:
+			case Opt_conv_t:
+			case Opt_conv_a:
[...]
+			case Opt_blocksize:
[...]
+			case Opt_posix:
[...]
+			case Opt_fat:
[...]
+			case Opt_cvf_format:
+			case Opt_cvf_options:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: fs/fat/inode.c:370:
+ ^I^I^I^Iopts->name_check = 'r';$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: fs/fat/inode.c:370:
+ ^I^I^I^Iopts->name_check = 'r';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/fat/inode.c:370:
+ ^I^I^I^Iopts->name_check = 'r';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: fs/fat/inode.c:373:
+ ^I^I^I^Iopts->name_check = 'n';$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: fs/fat/inode.c:373:
+ ^I^I^I^Iopts->name_check = 'n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/fat/inode.c:373:
+ ^I^I^I^Iopts->name_check = 'n';$

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#216: FILE: fs/fat/inode.c:375:
+			case Opt_dots:		/* msdos specific */
 			              		   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <dotsOK>
#218: FILE: fs/fat/inode.c:377:
+					opts->dotsOK = 1;

WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#220: FILE: fs/fat/inode.c:379:
+			case Opt_nodots:	/* msdos specific */
 			                	   ^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#225: FILE: fs/fat/inode.c:384:
+				if (!is_vfat)
[...]
+				else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: fs/fat/inode.c:386:
+				else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: fs/fat/inode.c:407:
+				int uid = match_int(&args[0]);
+				if (!uid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: fs/fat/inode.c:415:
+				int gid = match_int(&args[0]);
+				if (!gid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: fs/fat/inode.c:423:
+				int mask = match_octal(&args[0]);
+				if (!mask)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#279: FILE: fs/fat/inode.c:425:
+				opts->fs_fmask = opts->fs_dmask = mask;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: fs/fat/inode.c:431:
+				int mask = match_octal(&args[0]);
+				if (!mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: fs/fat/inode.c:439:
+				int mask = match_octal(&args[0]);
+				if (!mask)

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#361: FILE: fs/fat/inode.c:446:
+				printk("MSDOS FS: Using codepage %d\n",
 				        ^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#361: FILE: fs/fat/inode.c:446:
+				printk("MSDOS FS: Using codepage %d\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: fs/fat/inode.c:447:
+ ^I^I^I^I^Iopts->codepage);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#362: FILE: fs/fat/inode.c:447:
+ ^I^I^I^I^Iopts->codepage);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: fs/fat/inode.c:447:
+				printk("MSDOS FS: Using codepage %d\n",
+ 					opts->codepage);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: fs/fat/inode.c:447:
+ ^I^I^I^I^Iopts->codepage);$

WARNING:TYPO_SPELLING: 'MSDOS' may be misspelled - perhaps ''?
#373: FILE: fs/fat/inode.c:457:
+					printk("MSDOS FS: IO charset %s\n",
 					        ^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#373: FILE: fs/fat/inode.c:457:
+					printk("MSDOS FS: IO charset %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: fs/fat/inode.c:458:
+					printk("MSDOS FS: IO charset %s\n",
+						opts->iocharset);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#451: FILE: fs/fat/inode.c:488:
+				if (is_vfat) {
+					opts->utf8 = 0;
+				}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#459: FILE: fs/fat/inode.c:496:
+				if (is_vfat) {
+					opts->utf8 = 1;
+				}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#466: FILE: fs/fat/inode.c:503:
+				if (is_vfat) {
+					opts->unicode_xlate = 0;
+				}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#474: FILE: fs/fat/inode.c:511:
+				if (is_vfat) {
+					opts->unicode_xlate = 1;
+				}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#481: FILE: fs/fat/inode.c:518:
+				if (is_vfat) {
+						opts->numtail = 1;	/* negated option */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#481: FILE: fs/fat/inode.c:518:
+				if (is_vfat) {
+						opts->numtail = 1;	/* negated option */
+				}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#489: FILE: fs/fat/inode.c:526:
+				if (is_vfat) {
+						opts->numtail = 0;	/* negated option */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#489: FILE: fs/fat/inode.c:526:
+				if (is_vfat) {
+						opts->numtail = 0;	/* negated option */
+				}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: fs/fat/inode.c:552:
+				printk(KERN_ERR "FAT: Unrecognized mount option \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#518: FILE: fs/fat/inode.c:553:
+				printk(KERN_ERR "FAT: Unrecognized mount option \"%s\" "
+						"or missing value\n", p);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 31 warnings, 57 checks, 496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
