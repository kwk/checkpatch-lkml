WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# from "echo 100 > /proc/acpi/thermal_zone/THM0/polling_frequency"

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# "modprobe -rv thermal" produces no output

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# the next msgs are due to

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#   modprobe thermal zone_to_keep=0 bisect_get_info=1

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# (see below for details on the two new debugging params)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# 'thermal' loads 'processor', which produces the next two lines:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# now loading 'thermal' with the params above

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# the bisect_get_info parameter value says how far

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# to go into acpi_thermal_get_info() before exiting.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#75: 
# next line is probably from the acpi_thermal_check(tz) in acpi_thermal_add()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# next line is probably from the acpi_thermal_check(tz) in acpi_thermal_add()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# next line means THM0 is sorted out

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# the other zones are ignored (set by the zone_to_keep=0)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
# now 'thermal' has loaded but only with THM0

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
# now for the first "sleep.sh", which unloads a few drivers etc.:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#96: 
# and it hangs!  Without the  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
#    echo 100 > /proc/acpi/thermal_zone/THM0/polling_frequency

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#98: 
# at the beginning, a second cycle is required to reproduce the hang.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#99: 
# That requirement makes debugging tricky because the wakeup runs a

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#100: 
# bunch of thermal methods, plus the serial console doesn't work right

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#101: 
# away, so several lines of dmesgs get lost.

WARNING:REPEATED_WORD: Possible repeated word: 'many'
#118: 
   many many times and never noticed a problem.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#123: 
   hang.  Compared to the the dmesgs above (which have no wake), these

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: thermal.c:85:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#172: FILE: thermal.c:1274:
+	if (bisect_get_info == 1) {
+	  printk (KERN_INFO PREFIX "thermal_get_info: got temperature, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#173: FILE: thermal.c:1275:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got temperature, but bisect_get_info = %d so exiting\n", bisect_get_info);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#173: FILE: thermal.c:1275:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got temperature, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: thermal.c:1275:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got temperature, but bisect_get_info = %d so exiting\n", bisect_get_info);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#182: FILE: thermal.c:1284:
+	if (bisect_get_info == 2) {
+	  printk (KERN_INFO PREFIX "thermal_get_info: got trip points, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#183: FILE: thermal.c:1285:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got trip points, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#183: FILE: thermal.c:1285:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got trip points, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: thermal.c:1285:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got trip points, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#190: FILE: thermal.c:1292:
+	if (bisect_get_info == 3) {
+	  printk (KERN_INFO PREFIX "thermal_get_info: set active cooling, but bisect_get_info = %d so exiting with %d\n", bisect_get_info, result);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#191: FILE: thermal.c:1293:
+	  printk (KERN_INFO PREFIX "thermal_get_info: set active cooling, but bisect_get_info = %d so exiting with %d\n", bisect_get_info, result);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#191: FILE: thermal.c:1293:
+	  printk (KERN_INFO PREFIX "thermal_get_info: set active cooling, but bisect_get_info = %d so exiting with %d\n", bisect_get_info, result);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: thermal.c:1293:
+	  printk (KERN_INFO PREFIX "thermal_get_info: set active cooling, but bisect_get_info = %d so exiting with %d\n", bisect_get_info, result);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#202: FILE: thermal.c:1328:
+	if (bisect_get_info == 4) {
+	  printk (KERN_INFO PREFIX "thermal_get_info: got default polling frequency, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#203: FILE: thermal.c:1329:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got default polling frequency, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: thermal.c:1329:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got default polling frequency, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: thermal.c:1329:
+	  printk (KERN_INFO PREFIX "thermal_get_info: got default polling frequency, but bisect_get_info = %d so exiting\n", bisect_get_info);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#222: FILE: thermal.c:1354:
+	printk(KERN_INFO PREFIX "thermal_add: %s\n", device->pnp.bus_id);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#223: FILE: thermal.c:1355:
+	if (zone_to_keep >= 0) {
+	  snprintf (zone_to_keep_str, sizeof(zone_to_keep_str),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: thermal.c:1356:
+	  snprintf (zone_to_keep_str, sizeof(zone_to_keep_str),

WARNING:TABSTOP: Statements should start on a tabstop
#226: FILE: thermal.c:1358:
+	  if (strcmp(zone_to_keep_str, device->pnp.bus_id) != 0) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#226: FILE: thermal.c:1358:
+	  if (strcmp(zone_to_keep_str, device->pnp.bus_id) != 0) {
+	    printk(KERN_INFO PREFIX "thermal_add: ignoring %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#227: FILE: thermal.c:1359:
+	    printk(KERN_INFO PREFIX "thermal_add: ignoring %s\n",

WARNING:TABSTOP: Statements should start on a tabstop
#230: FILE: thermal.c:1362:
+	  }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095022.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 46 warnings, 1 checks, 79 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095022.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
