WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -ru -x *.o -x *.s -x *.flags -x *.a -x *.map -x *.depend linux-2.4.4-orig/Documentation/sysctl/kernel.txt linux/Documentation/sysctl/kernel.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: Documentation/sysctl/kernel.txt:45:
+- coredump_file_name          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: Documentation/sysctl/kernel.txt:238:
+coredumps.  This mimics the previous behavior.  Coredumps $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: fs/exec.c:24:
+ * Configurable coredump_file_name, coredump_log and coredump_enabled $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#157: FILE: fs/exec.c:935:
+	char corename[256]="";
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: fs/exec.c:938:
+        int i,j,k;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/exec.c:938:
+        int i,j,k;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: fs/exec.c:938:
+        int i,j,k;
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: fs/exec.c:938:
+        int i,j,k;
                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: fs/exec.c:941:
+^I   coredump_file_name. 22 comes from the max number of digits $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#163: FILE: fs/exec.c:941:
+	/* Calculate the min buffer free to handle an expanded token from
+	   coredump_file_name. 22 comes from the max number of digits 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#166: FILE: fs/exec.c:944:
+	k=sizeof(current->comm);
 	 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: fs/exec.c:945:
+^Iif (k<22) $

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#167: FILE: fs/exec.c:945:
+	if (k<22) 
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: fs/exec.c:946:
+		k=22;
 		 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: fs/exec.c:947:
+	k=sizeof(corename) - k;
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#187: FILE: fs/exec.c:961:
+	j=0;
 	 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: fs/exec.c:962:
+^Ifor (i=0; (coredump_file_name[i] != '\0') && $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#188: FILE: fs/exec.c:962:
+	for (i=0; (coredump_file_name[i] != '\0') && 
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: fs/exec.c:963:
+	for (i=0; (coredump_file_name[i] != '\0') && 
+			(j<k); i++) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#189: FILE: fs/exec.c:963:
+			(j<k); i++) {
 			  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: fs/exec.c:964:
+        ^Iif ( coredump_file_name[i] != '%' ) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#190: FILE: fs/exec.c:964:
+        ^Iif ( coredump_file_name[i] != '%' ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: fs/exec.c:964:
+        ^Iif ( coredump_file_name[i] != '%' ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#190: FILE: fs/exec.c:964:
+        	if ( coredump_file_name[i] != '%' ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#190: FILE: fs/exec.c:964:
+        	if ( coredump_file_name[i] != '%' ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#191: FILE: fs/exec.c:965:
+			corename[j]=coredump_file_name[i];
 			           ^

ERROR:SPACING: space required before the open parenthesis '('
#194: FILE: fs/exec.c:968:
+			switch(coredump_file_name[++i]) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: fs/exec.c:970:
+				j += sprintf(&corename[j],"%s", current->comm);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: fs/exec.c:973:
+				j += sprintf(&corename[j],"%u", current->gid);
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/exec.c:975:
+^I^I^Icase 'G': $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: fs/exec.c:976:
+				j += sprintf(&corename[j],"%u", current->egid);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: fs/exec.c:979:
+				j += sprintf(&corename[j],"%u", current->pid);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: fs/exec.c:982:
+				j += sprintf(&corename[j],"%u", current->uid);
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: fs/exec.c:984:
+^I^I^Icase 'U': $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: fs/exec.c:985:
+				j += sprintf(&corename[j],"%u", current->euid);
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: fs/exec.c:987:
+^I^I^Icase '%': $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#214: FILE: fs/exec.c:988:
+				corename[j++]=coredump_file_name[i];;
 				             ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#214: FILE: fs/exec.c:988:
+				corename[j++]=coredump_file_name[i];;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: fs/exec.c:990:
+^I^I^Idefault: $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#217: FILE: fs/exec.c:991:
+				corename[j++]=coredump_file_name[--i];
 				             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: fs/exec.c:994:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: fs/exec.c:995:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/exec.c:995:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#221: FILE: fs/exec.c:995:
+	
+        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: fs/exec.c:997:
+^Iif (j==0) { $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#223: FILE: fs/exec.c:997:
+	if (j==0) { 
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: fs/exec.c:998:
+		memcpy(corename,"core",4);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: fs/exec.c:998:
+		memcpy(corename,"core",4);
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#225: FILE: fs/exec.c:999:
+		j=4;
 		 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: fs/exec.c:1022:
+^Iif (coredump_log) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: fs/exec.c:1023:
+		printk("Coredump to file %s for process %s, pid %d, uid %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: fs/exec.c:1024:
+		printk("Coredump to file %s for process %s, pid %d, uid %d\n",
+			corename, current->comm, current->pid, current->uid);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#245: FILE: fs/exec.c:1031:
+	if (coredump_log && (corename[0]!='\0'))
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: fs/exec.c:1032:
+^I^Iprintk("Coredump failed to dump to file %s.\n",corename); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: fs/exec.c:1032:
+		printk("Coredump failed to dump to file %s.\n",corename); 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: fs/exec.c:1032:
+		printk("Coredump failed to dump to file %s.\n",corename); 
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: fs/exec.c:1033:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: fs/exec.c:1035:
+^Iif (coredump_log) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#250: FILE: fs/exec.c:1036:
+		printk("Coredump not dumped for process %s, pid %d, uid %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: fs/exec.c:1037:
+		printk("Coredump not dumped for process %s, pid %d, uid %d\n",
+			current->comm,current->pid,current->uid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: fs/exec.c:1037:
+			current->comm,current->pid,current->uid);
 			             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: fs/exec.c:1037:
+			current->comm,current->pid,current->uid);
 			                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#263: FILE: include/linux/sysctl.h:121:
+	KERN_S390_USER_DEBUG_LOGGING=51,  /* int: dumps of user faults */
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#264: FILE: include/linux/sysctl.h:122:
+	KERN_COREDUMP_ENABLED=52, /* are coredumps enabled on this system */
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#265: FILE: include/linux/sysctl.h:123:
+	KERN_COREDUMP_FILE_NAME=53, /*file name format of coredump files */
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#266: FILE: include/linux/sysctl.h:124:
+	KERN_COREDUMP_LOG=54    /*should coredumps get logged */
 	                 ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#286: FILE: kernel/sysctl.c:52:
+extern int coredump_enabled;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#287: FILE: kernel/sysctl.c:53:
+extern int coredump_log;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#288: FILE: kernel/sysctl.c:54:
+extern char coredump_file_name[];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#296: FILE: kernel/sysctl.c:257:
+	{KERN_COREDUMP_ENABLED,"coredump_enabled",&coredump_enabled,
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#296: FILE: kernel/sysctl.c:257:
+	{KERN_COREDUMP_ENABLED,"coredump_enabled",&coredump_enabled,
 	                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#296: FILE: kernel/sysctl.c:257:
+	{KERN_COREDUMP_ENABLED,"coredump_enabled",&coredump_enabled,
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#298: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#298: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: kernel/sysctl.c:260:
+	0644,NULL,&proc_dostring, &sysctl_string},
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#299: FILE: kernel/sysctl.c:260:
+	0644,NULL,&proc_dostring, &sysctl_string},
 	         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#299: FILE: kernel/sysctl.c:260:
+	0644,NULL,&proc_dostring, &sysctl_string},
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: kernel/sysctl.c:261:
+	{KERN_COREDUMP_LOG,"coredump_log",&coredump_log,
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#300: FILE: kernel/sysctl.c:261:
+	{KERN_COREDUMP_LOG,"coredump_log",&coredump_log,
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#300: FILE: kernel/sysctl.c:261:
+	{KERN_COREDUMP_LOG,"coredump_log",&coredump_log,
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: Documentation/sysctl/kernel.txt:45:
+- coredump_file_name          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: Documentation/sysctl/kernel.txt:238:
+coredumps.  This mimics the previous behavior.  Coredumps $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: fs/exec.c:24:
+ * Configurable coredump_file_name, coredump_log and coredump_enabled $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#416: FILE: fs/exec.c:935:
+	char corename[256]="";
 	                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: fs/exec.c:938:
+        int i,j,k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: fs/exec.c:938:
+        int i,j,k;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#419: FILE: fs/exec.c:938:
+        int i,j,k;
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#419: FILE: fs/exec.c:938:
+        int i,j,k;
                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: fs/exec.c:941:
+^I   coredump_file_name. 22 comes from the max number of digits $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#422: FILE: fs/exec.c:941:
+	/* Calculate the min buffer free to handle an expanded token from
+	   coredump_file_name. 22 comes from the max number of digits 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#425: FILE: fs/exec.c:944:
+	k=sizeof(current->comm);
 	 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: fs/exec.c:945:
+^Iif (k<22) $

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#426: FILE: fs/exec.c:945:
+	if (k<22) 
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#427: FILE: fs/exec.c:946:
+		k=22;
 		 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#428: FILE: fs/exec.c:947:
+	k=sizeof(corename) - k;
 	 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#446: FILE: fs/exec.c:961:
+	j=0;
 	 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: fs/exec.c:962:
+^Ifor (i=0; (coredump_file_name[i] != '\0') && $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#447: FILE: fs/exec.c:962:
+	for (i=0; (coredump_file_name[i] != '\0') && 
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: fs/exec.c:963:
+	for (i=0; (coredump_file_name[i] != '\0') && 
+			(j<k); i++) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#448: FILE: fs/exec.c:963:
+			(j<k); i++) {
 			  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: fs/exec.c:964:
+        ^Iif ( coredump_file_name[i] != '%' ) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: fs/exec.c:964:
+        ^Iif ( coredump_file_name[i] != '%' ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: fs/exec.c:964:
+        ^Iif ( coredump_file_name[i] != '%' ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#449: FILE: fs/exec.c:964:
+        	if ( coredump_file_name[i] != '%' ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#449: FILE: fs/exec.c:964:
+        	if ( coredump_file_name[i] != '%' ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#450: FILE: fs/exec.c:965:
+			corename[j]=coredump_file_name[i];
 			           ^

ERROR:SPACING: space required before the open parenthesis '('
#453: FILE: fs/exec.c:968:
+			switch(coredump_file_name[++i]) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#455: FILE: fs/exec.c:970:
+				j += sprintf(&corename[j],"%s", current->comm);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#458: FILE: fs/exec.c:973:
+				j += sprintf(&corename[j],"%u", current->gid);
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: fs/exec.c:975:
+^I^I^Icase 'G': $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: fs/exec.c:976:
+				j += sprintf(&corename[j],"%u", current->egid);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#464: FILE: fs/exec.c:979:
+				j += sprintf(&corename[j],"%u", current->pid);
 				                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#467: FILE: fs/exec.c:982:
+				j += sprintf(&corename[j],"%u", current->uid);
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: fs/exec.c:984:
+^I^I^Icase 'U': $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#470: FILE: fs/exec.c:985:
+				j += sprintf(&corename[j],"%u", current->euid);
 				                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: fs/exec.c:987:
+^I^I^Icase '%': $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#473: FILE: fs/exec.c:988:
+				corename[j++]=coredump_file_name[i];;
 				             ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#473: FILE: fs/exec.c:988:
+				corename[j++]=coredump_file_name[i];;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: fs/exec.c:990:
+^I^I^Idefault: $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#476: FILE: fs/exec.c:991:
+				corename[j++]=coredump_file_name[--i];
 				             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: fs/exec.c:994:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: fs/exec.c:995:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: fs/exec.c:995:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#480: FILE: fs/exec.c:995:
+	
+        }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: fs/exec.c:997:
+^Iif (j==0) { $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#482: FILE: fs/exec.c:997:
+	if (j==0) { 
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: fs/exec.c:998:
+		memcpy(corename,"core",4);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: fs/exec.c:998:
+		memcpy(corename,"core",4);
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#484: FILE: fs/exec.c:999:
+		j=4;
 		 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: fs/exec.c:1022:
+^Iif (coredump_log) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#496: FILE: fs/exec.c:1023:
+		printk("Coredump to file %s for process %s, pid %d, uid %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: fs/exec.c:1024:
+		printk("Coredump to file %s for process %s, pid %d, uid %d\n",
+			corename, current->comm, current->pid, current->uid);

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#504: FILE: fs/exec.c:1031:
+	if (coredump_log && (corename[0]!='\0'))
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: fs/exec.c:1032:
+^I^Iprintk("Coredump failed to dump to file %s.\n",corename); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#505: FILE: fs/exec.c:1032:
+		printk("Coredump failed to dump to file %s.\n",corename); 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#505: FILE: fs/exec.c:1032:
+		printk("Coredump failed to dump to file %s.\n",corename); 
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: fs/exec.c:1033:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: fs/exec.c:1035:
+^Iif (coredump_log) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#509: FILE: fs/exec.c:1036:
+		printk("Coredump not dumped for process %s, pid %d, uid %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: fs/exec.c:1037:
+		printk("Coredump not dumped for process %s, pid %d, uid %d\n",
+			current->comm,current->pid,current->uid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: fs/exec.c:1037:
+			current->comm,current->pid,current->uid);
 			             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: fs/exec.c:1037:
+			current->comm,current->pid,current->uid);
 			                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#522: FILE: include/linux/sysctl.h:121:
+	KERN_S390_USER_DEBUG_LOGGING=51,  /* int: dumps of user faults */
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#523: FILE: include/linux/sysctl.h:122:
+	KERN_COREDUMP_ENABLED=52, /* are coredumps enabled on this system */
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#524: FILE: include/linux/sysctl.h:123:
+	KERN_COREDUMP_FILE_NAME=53, /*file name format of coredump files */
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#525: FILE: include/linux/sysctl.h:124:
+	KERN_COREDUMP_LOG=54    /*should coredumps get logged */
 	                 ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#545: FILE: kernel/sysctl.c:52:
+extern int coredump_enabled;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#546: FILE: kernel/sysctl.c:53:
+extern int coredump_log;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#547: FILE: kernel/sysctl.c:54:
+extern char coredump_file_name[];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#555: FILE: kernel/sysctl.c:257:
+	{KERN_COREDUMP_ENABLED,"coredump_enabled",&coredump_enabled,
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#555: FILE: kernel/sysctl.c:257:
+	{KERN_COREDUMP_ENABLED,"coredump_enabled",&coredump_enabled,
 	                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#555: FILE: kernel/sysctl.c:257:
+	{KERN_COREDUMP_ENABLED,"coredump_enabled",&coredump_enabled,
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#557: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#557: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#557: FILE: kernel/sysctl.c:259:
+	{KERN_COREDUMP_FILE_NAME,"coredump_file_name",&coredump_file_name,256,
 	                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#558: FILE: kernel/sysctl.c:260:
+	0644,NULL,&proc_dostring, &sysctl_string},
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#558: FILE: kernel/sysctl.c:260:
+	0644,NULL,&proc_dostring, &sysctl_string},
 	         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#558: FILE: kernel/sysctl.c:260:
+	0644,NULL,&proc_dostring, &sysctl_string},
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#559: FILE: kernel/sysctl.c:261:
+	{KERN_COREDUMP_LOG,"coredump_log",&coredump_log,
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#559: FILE: kernel/sysctl.c:261:
+	{KERN_COREDUMP_LOG,"coredump_log",&coredump_log,
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#559: FILE: kernel/sysctl.c:261:
+	{KERN_COREDUMP_LOG,"coredump_log",&coredump_log,
 	                                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000536331.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 132 errors, 25 warnings, 8 checks, 458 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000536331.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
