ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#27: 
--- a/drivers/acpi/acpi_bus.h	Mon Oct  7 15:40:20 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#75: FILE: drivers/acpi/kfs.c:37:
+	dev->kfs_dir.mode  = (S_IFDIR| S_IRWXU | S_IRUGO | S_IXUGO);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRUGO | S_IXUGO' are not preferred. Consider using octal permissions '0755'.
#75: FILE: drivers/acpi/kfs.c:37:
+	dev->kfs_dir.mode  = (S_IFDIR| S_IRWXU | S_IRUGO | S_IXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: drivers/acpi/kfs.c:38:
+	return kfs_create_dir(&dev->kfs_dir,parent);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: drivers/acpi/kfs.c:43:
+	return kfs_create_dir(&acpi_dir,NULL);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#114: FILE: drivers/base/fs/bus.c:69:
+		error = kfs_create_file(&attr->attr,&bus->dir);
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#114: FILE: drivers/base/fs/bus.c:69:
+		error = kfs_create_file(&attr->attr,&bus->dir);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: drivers/base/fs/bus.c:79:
+		kfs_remove_file(&bus->dir,attr->attr.name);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/base/fs/bus.c:117:
+	return kfs_create_dir(&bus_dir,NULL);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#177: FILE: drivers/base/fs/class.c:55:
+		error = kfs_create_file(&attr->attr,&dc->dir);
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#177: FILE: drivers/base/fs/class.c:55:
+		error = kfs_create_file(&attr->attr,&dc->dir);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#186: FILE: drivers/base/fs/class.c:64:
+		kfs_remove_file(&dc->dir,attr->attr.name);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: drivers/base/fs/class.c:101:
+	error = kfs_create_symlink(&cls->device_dir,linkname,path);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: drivers/base/fs/class.c:101:
+	error = kfs_create_symlink(&cls->device_dir,linkname,path);
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: drivers/base/fs/class.c:111:
+	kfs_remove_file(&cls->device_dir,linkname);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/base/fs/class.c:156:
+	error = kfs_create_symlink(&drv->devclass->driver_dir,name,path);
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/base/fs/class.c:156:
+	error = kfs_create_symlink(&drv->devclass->driver_dir,name,path);
 	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: drivers/base/fs/class.c:170:
+		kfs_remove_file(&drv->devclass->driver_dir,name);
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: drivers/base/fs/class.c:209:
+	return kfs_create_dir(&class_dir,NULL);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/base/fs/device.c:2:
+ * drivers/base/fs.c - driver model interface to kfs $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#305: FILE: drivers/base/fs/device.c:95:
+		error = kfs_create_file(&entry->attr,&dev->dir);
 		                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#305: FILE: drivers/base/fs/device.c:95:
+		error = kfs_create_file(&entry->attr,&dev->dir);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/base/fs/device.c:111:
+		kfs_remove_file(&dev->dir,attr->attr.name);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#332: FILE: drivers/base/fs/device.c:186:
+	error = kfs_create_symlink(&dev->bus->device_dir,dev->bus_id,path);
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#332: FILE: drivers/base/fs/device.c:186:
+	error = kfs_create_symlink(&dev->bus->device_dir,dev->bus_id,path);
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: drivers/base/fs/device.c:193:
+	kfs_remove_file(dir,name);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: drivers/base/fs/device.c:199:
+	return kfs_create_dir(dir,parent);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: drivers/base/fs/device.c:239:
+	return kfs_create_dir(&device_root_dir,NULL);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#403: FILE: drivers/base/fs/driver.c:67:
+		error = kfs_create_file(&attr->attr,&drv->dir);
 		                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#403: FILE: drivers/base/fs/driver.c:67:
+		error = kfs_create_file(&attr->attr,&drv->dir);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#412: FILE: drivers/base/fs/driver.c:77:
+		kfs_remove_file(&drv->dir,attr->attr.name);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: drivers/base/fs/intf.c:33:
+	error = kfs_create_symlink(&data->intf->dir,linkname,path);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: drivers/base/fs/intf.c:33:
+	error = kfs_create_symlink(&data->intf->dir,linkname,path);
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: drivers/base/fs/intf.c:42:
+	kfs_remove_file(&data->intf->dir,linkname);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: drivers/base/interface.c:2:
+ * drivers/base/interface.c - common kfs interface that's exported to $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#472: FILE: drivers/base/interface.c:2:
+ * drivers/base/interface.c - common kfs interface that's exported to 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: fs/kfs/inode.c:535:
+kfs_create_dir(struct driver_dir_entry * entry,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: fs/kfs/inode.c:536:
+kfs_create_dir(struct driver_dir_entry * entry,
 		    struct driver_dir_entry * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#505: FILE: fs/kfs/inode.c:579:
+kfs_create_file(struct attribute * entry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: fs/kfs/inode.c:580:
+kfs_create_file(struct attribute * entry,
 		     struct driver_dir_entry * parent)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: fs/kfs/inode.c:611:
+int kfs_create_symlink(struct driver_dir_entry * parent, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#521: FILE: fs/kfs/inode.c:611:
+int kfs_create_symlink(struct driver_dir_entry * parent, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: fs/kfs/inode.c:612:
+int kfs_create_symlink(struct driver_dir_entry * parent, 
 			    char * name, char * target)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#538: FILE: fs/kfs/inode.c:642:
+void kfs_remove_file(struct driver_dir_entry * dir, const char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#538: FILE: fs/kfs/inode.c:642:
+void kfs_remove_file(struct driver_dir_entry * dir, const char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#554: FILE: fs/kfs/inode.c:668:
+void kfs_remove_dir(struct driver_dir_entry * dir)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#567: FILE: fs/kfs/inode.c:703:
+EXPORT_SYMBOL(kfs_create_file);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#569: FILE: fs/kfs/inode.c:705:
+EXPORT_SYMBOL(kfs_create_dir);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#570: FILE: fs/kfs/inode.c:706:
+EXPORT_SYMBOL(kfs_remove_file);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#571: FILE: fs/kfs/inode.c:707:
+EXPORT_SYMBOL(kfs_remove_dir);

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#590: FILE: include/linux/kfs.h:43:
+	struct kfs_ops	* ops;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#603: FILE: include/linux/kfs.h:55:
+kfs_remove_dir(struct driver_dir_entry * entry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#607: FILE: include/linux/kfs.h:58:
+kfs_create_file(struct attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: include/linux/kfs.h:59:
+kfs_create_file(struct attribute * attr,
 		     struct driver_dir_entry * parent);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: include/linux/kfs.h:62:
+kfs_create_symlink(struct driver_dir_entry * parent, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#612: FILE: include/linux/kfs.h:62:
+kfs_create_symlink(struct driver_dir_entry * parent, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: include/linux/kfs.h:63:
+kfs_create_symlink(struct driver_dir_entry * parent, 
 			char * name, char * target);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#619: FILE: include/linux/kfs.h:66:
+kfs_remove_file(struct driver_dir_entry *, const char * name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 6 warnings, 6 checks, 519 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
