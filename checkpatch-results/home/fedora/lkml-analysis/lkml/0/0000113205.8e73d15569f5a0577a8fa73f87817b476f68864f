WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
diff -urN --exclude-from=/tmp/excl28370 linux-2.6.16-rc1.orig/Makefile linux-2.6.16-rc1/Makefile

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: kernel/sys_ni.c:120:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: kernel/sys_ni.c:120:
+ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#115: FILE: lib/carta_random32.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: lib/carta_random32.c:22:
+u32 carta_random32 (u32 seed)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#139: FILE: lib/carta_random32.c:25:
+#       define M ((u32) 1 << 31)

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: lib/carta_random32.c:26:
+        u64 s, prod = A * seed, p, q;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: lib/carta_random32.c:26:
+        u64 s, prod = A * seed, p, q;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: lib/carta_random32.c:28:
+        p = (prod >> 31) & (M - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: lib/carta_random32.c:28:
+        p = (prod >> 31) & (M - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: lib/carta_random32.c:29:
+        q = (prod >>  0) & (M - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: lib/carta_random32.c:29:
+        q = (prod >>  0) & (M - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: lib/carta_random32.c:30:
+        s = p + q;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: lib/carta_random32.c:30:
+        s = p + q;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: lib/carta_random32.c:31:
+        if (s >= M)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: lib/carta_random32.c:31:
+        if (s >= M)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: lib/carta_random32.c:32:
+                s -= M - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: lib/carta_random32.c:32:
+                s -= M - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: lib/carta_random32.c:33:
+        return s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: lib/carta_random32.c:33:
+        return s;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#150: FILE: lib/carta_random32.c:36:
+extern u32 carta_random32(u32 seed);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: include/linux/perfmon.h:1:
+/*

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: include/linux/perfmon.h:20:
+#define PFM_MAX_PMCS	(PFM_MAX_HW_PMCS+PFM_MAX_XTRA_PMCS)
                     	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#189: FILE: include/linux/perfmon.h:21:
+#define PFM_MAX_PMDS	(PFM_MAX_HW_PMDS+PFM_MAX_XTRA_PMDS)
                     	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: include/linux/perfmon.h:26:
+#define PFM_BVSIZE(x)	(((x)+BITS_PER_LONG-1) / BITS_PER_LONG)
                      	     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#194: FILE: include/linux/perfmon.h:26:
+#define PFM_BVSIZE(x)	(((x)+BITS_PER_LONG-1) / BITS_PER_LONG)
                      	                   ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#202: FILE: include/linux/perfmon.h:34:
+typedef unsigned char pfm_uuid_t[16];

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: include/linux/perfmon.h:40:
+#define PFM_FL_NOTIFY_BLOCK    ^I 0x01^I/* block task on user notifications */$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#247: FILE: include/linux/perfmon.h:79:
+#define PFM_REG_RETFL_NOTAVAIL	(1<<31) /* implemented but not available */
                               	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#247: FILE: include/linux/perfmon.h:79:
+#define PFM_REG_RETFL_NOTAVAIL	(1<<31) /* implemented but not available */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#248: FILE: include/linux/perfmon.h:80:
+#define PFM_REG_RETFL_EINVAL	(1<<30) /* entry is invalid */
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#248: FILE: include/linux/perfmon.h:80:
+#define PFM_REG_RETFL_EINVAL	(1<<30) /* entry is invalid */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#249: FILE: include/linux/perfmon.h:81:
+#define PFM_REG_RETFL_NOSET	(1<<29) /* event set does not exist */
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#249: FILE: include/linux/perfmon.h:81:
+#define PFM_REG_RETFL_NOSET	(1<<29) /* event set does not exist */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#250: FILE: include/linux/perfmon.h:82:
+#define PFM_REG_RETFL_MASK	(PFM_REG_RETFL_NOTAVAIL|\
                           	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#251: FILE: include/linux/perfmon.h:83:
+				 PFM_REG_RETFL_EINVAL|\
 				                     ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#259: FILE: include/linux/perfmon.h:91:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#270: FILE: include/linux/perfmon.h:102:
+typedef struct {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#271: FILE: include/linux/perfmon.h:103:
+^Iu16 reg_num;^I   ^I/* which register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: include/linux/perfmon.h:104:
+^Iu16 reg_set;^I   ^I/* event set for this register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: include/linux/perfmon.h:105:
+^Iu32 reg_flags;^I   ^I/* input: flags, return: reg error */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: include/linux/perfmon.h:106:
+^Iu64 reg_value;^I   ^I/* pmc value */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#281: FILE: include/linux/perfmon.h:113:
+typedef struct {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#282: FILE: include/linux/perfmon.h:114:
+^Iu16 reg_num;^I   ^I/* which register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: include/linux/perfmon.h:115:
+^Iu16 reg_set;^I   ^I/* event set for this register */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: include/linux/perfmon.h:116:
+^Iu32 reg_flags;^I   ^I/* input: flags, return: reg error */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: include/linux/perfmon.h:117:
+^Iu64 reg_value;^I   ^I/* initial pmc/pmd value */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: include/linux/perfmon.h:119:
+^Iu64 reg_short_reset;   ^I/* reset after counter overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: include/linux/perfmon.h:124:
+^Iu64 reg_smpl_eventid;  ^I/* opaque event identifier */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: include/linux/perfmon.h:125:
+^Iu64 reg_random_mask; ^I/* bitmask used to limit random value */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#294: FILE: include/linux/perfmon.h:126:
+^Iu32 reg_random_seed;   ^I/* seed for randomization */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#301: FILE: include/linux/perfmon.h:133:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#311: FILE: include/linux/perfmon.h:143:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#321: FILE: include/linux/perfmon.h:153:
+typedef struct {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: include/linux/perfmon.h:156:
+^Iu32    ^Iset_flags; ^I  /* input: flags, return: err flag */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#333: FILE: include/linux/perfmon.h:165:
+typedef struct {

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: include/linux/perfmon.h:166:
+        u16^Iset_id;             /* which set */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: include/linux/perfmon.h:166:
+        u16^Iset_id;             /* which set */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: include/linux/perfmon.h:167:
+        u16^Iset_id_next;        /* out: next set to go to */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: include/linux/perfmon.h:167:
+        u16^Iset_id_next;        /* out: next set to go to */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: include/linux/perfmon.h:168:
+        u32^Iset_flags;          /* out:flags or error */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: include/linux/perfmon.h:168:
+        u32^Iset_flags;          /* out:flags or error */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: include/linux/perfmon.h:169:
+        unsigned long set_ovfl_pmds[PFM_PMD_BV]; /* out: last ovfl PMDs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: include/linux/perfmon.h:169:
+        unsigned long set_ovfl_pmds[PFM_PMD_BV]; /* out: last ovfl PMDs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: include/linux/perfmon.h:170:
+        u64^Iset_runs;            /* out: #times the set was active */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: include/linux/perfmon.h:170:
+        u64^Iset_runs;            /* out: #times the set was active */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: include/linux/perfmon.h:171:
+        struct timespec set_timeout; /* out: effective switch timeout */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: include/linux/perfmon.h:171:
+        struct timespec set_timeout; /* out: effective switch timeout */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: include/linux/perfmon.h:174:
+        u64^Ireserved[4];         /* for future use */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: include/linux/perfmon.h:174:
+        u64^Ireserved[4];         /* for future use */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#356: FILE: include/linux/perfmon.h:188:
+typedef struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#361: FILE: include/linux/perfmon.h:193:
+	volatile unsigned long	set_seq;   /* sequence number of updates */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#369: FILE: include/linux/perfmon.h:201:
+typedef struct {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: include/linux/perfmon.h:202:
+^Iu32 ^I^Imsg_type;^I/* generic message header */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#373: FILE: include/linux/perfmon.h:205:
+^Iu16 ^I^Imsg_active_set;^I/* active set at overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#374: FILE: include/linux/perfmon.h:206:
+^Iu16 ^I^Imsg_ovfl_cpu;^I/* cpu of PMU interrupt */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#382: FILE: include/linux/perfmon.h:214:
+typedef union {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#392: FILE: include/linux/perfmon.h:224:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#392: FILE: include/linux/perfmon.h:224:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#392: FILE: include/linux/perfmon.h:224:
+#define PFM_VERSION		 (((PFM_VERSION_MAJ&0xffff)<<16)|\
                    		                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#394: FILE: include/linux/perfmon.h:226:
+#define PFM_VERSION_MAJOR(x)	 (((x)>>16) & 0xffff)
                             	      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#397: FILE: include/linux/perfmon.h:229:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#402: FILE: include/linux/perfmon.h:234:
+^Iu16 ^Iactive_set;^I/* set active at the time of the overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#405: FILE: include/linux/perfmon.h:237:
+^Iu64 smpl_pmds_values[PFM_MAX_PMDS]; ^I/* values of other PMDs */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: include/linux/perfmon.h:242:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#418: FILE: include/linux/perfmon.h:250:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#434: FILE: include/linux/perfmon.h:266:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'g' - possible side-effects?
#453: FILE: include/linux/perfmon.h:285:
+#define PFM_CTXQ_EMPTY(g)	((g)->ctx_msgq_head == (g)->ctx_msgq_tail)

ERROR:SPACING: exactly one space required after that #ifdef
#466: FILE: include/linux/perfmon.h:298:
+#ifdef  PFM_DEBUGGING

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#469: FILE: include/linux/perfmon.h:301:
+		if (unlikely(pfm_sysctl.debug >0)) {\
 		                              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#470: FILE: include/linux/perfmon.h:302:
+			printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__,\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#470: FILE: include/linux/perfmon.h:302:
+			printk("%s.%d: CPU%d [%d] ", __FUNCTION__, __LINE__,\

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#476: FILE: include/linux/perfmon.h:308:
+		if (unlikely(pfm_sysctl.debug_ovfl >0))\
+		{\

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#476: FILE: include/linux/perfmon.h:308:
+		if (unlikely(pfm_sysctl.debug_ovfl >0))\
 		                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#478: FILE: include/linux/perfmon.h:310:
+			printk("%s.%d: CPU%d [%d] ",\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#479: FILE: include/linux/perfmon.h:311:
+				__FUNCTION__, __LINE__,\

ERROR:SPACING: space required before the open parenthesis '('
#484: FILE: include/linux/perfmon.h:316:
+#define DPRINT(a)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: include/linux/perfmon.h:317:
+#define DPRINT_ovfl(a)	do {} while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#499: FILE: include/linux/perfmon.h:331:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: include/linux/perfmon.h:340:
+^Iu64 short_reset;    ^I/* reset value on overflow */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#515: FILE: include/linux/perfmon.h:347:
+^Iu64 eventid;^I ^I /* overflow event identifier */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#541: FILE: include/linux/perfmon.h:373:
+^Istruct pfm_pmd set_pmds[PFM_MAX_PMDS]; ^I    /* 64-bit SW PMDs */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#593: FILE: include/linux/perfmon.h:425:
+	u8			pad[128-sizeof(spinlock_t)];
 	  			       ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#595: FILE: include/linux/perfmon.h:427:
+	struct file		*ctx_filp;	/* filp */
 	           		          	   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#599: FILE: include/linux/perfmon.h:431:
+^Istruct task_struct ^I*ctx_task;^I/* attached task */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#604: FILE: include/linux/perfmon.h:436:
+^Iu64 ^I^I^Ictx_last_act;^I/* last activation */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: include/linux/perfmon.h:442:
+^Iwait_queue_head_t ^Ictx_msgq_wait;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#623: FILE: include/linux/perfmon.h:455:
+^Istruct pfm_ovfl_arg ^Iovfl_arg;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#624: FILE: include/linux/perfmon.h:456:
+^Iunsigned long ^I^Iovfl_ovfl_notify[PFM_PMD_BV];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#636: FILE: include/linux/perfmon.h:468:
+#define pfm_ctx_arch(c)	((struct pfm_arch_context *)((c)+1))
                        	                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#638: FILE: include/linux/perfmon.h:470:
+typedef int (*fmt_validate_t )(u32 flags, u16 npmds, void *arg);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#676: FILE: include/linux/perfmon.h:508:
+	BUG_ON(task && task->pid == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#686: FILE: include/linux/perfmon.h:518:
+}
+static inline void pfm_set_activation(struct pfm_context *ctx)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#690: FILE: include/linux/perfmon.h:522:
+}
+static inline void pfm_set_last_cpu(struct pfm_context *ctx, int cpu)

ERROR:SPACING: space required before the open parenthesis '('
#695: FILE: include/linux/perfmon.h:527:
+#define pfm_inc_activation() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#696: FILE: include/linux/perfmon.h:528:
+#define pfm_set_activation(c) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#697: FILE: include/linux/perfmon.h:529:
+#define pfm_set_last_cpu(c, p) do { } while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#719: FILE: include/linux/perfmon.h:551:
+extern int pfm_compat_update_pmd(struct pfm_context *, u16, u16,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#722: FILE: include/linux/perfmon.h:554:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#726: FILE: include/linux/perfmon.h:558:
+extern int  pfm_get_args(void __user *arg, size_t sz, void **kargs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#727: FILE: include/linux/perfmon.h:559:
+extern int  pfm_get_smpl_arg(pfm_uuid_t uuid, void *uaddr, size_t usz,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt **' should also have an identifier name
#727: FILE: include/linux/perfmon.h:559:
+extern int  pfm_get_smpl_arg(pfm_uuid_t uuid, void *uaddr, size_t usz,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#730: FILE: include/linux/perfmon.h:562:
+extern void pfm_undo_create_context(int fd, struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#731: FILE: include/linux/perfmon.h:563:
+extern int  pfm_alloc_fd(struct file **cfile);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#732: FILE: include/linux/perfmon.h:564:
+extern void pfm_syswide_cleanup_other_cpu(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#734: FILE: include/linux/perfmon.h:566:
+extern int  __pfm_write_pmcs(struct pfm_context *, pfarg_pmc_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#734: FILE: include/linux/perfmon.h:566:
+extern int  __pfm_write_pmcs(struct pfm_context *, pfarg_pmc_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfarg_pmc_t *' should also have an identifier name
#734: FILE: include/linux/perfmon.h:566:
+extern int  __pfm_write_pmcs(struct pfm_context *, pfarg_pmc_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#734: FILE: include/linux/perfmon.h:566:
+extern int  __pfm_write_pmcs(struct pfm_context *, pfarg_pmc_t *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#735: FILE: include/linux/perfmon.h:567:
+extern int  __pfm_write_pmds(struct pfm_context *, pfarg_pmd_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#735: FILE: include/linux/perfmon.h:567:
+extern int  __pfm_write_pmds(struct pfm_context *, pfarg_pmd_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfarg_pmd_t *' should also have an identifier name
#735: FILE: include/linux/perfmon.h:567:
+extern int  __pfm_write_pmds(struct pfm_context *, pfarg_pmd_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#735: FILE: include/linux/perfmon.h:567:
+extern int  __pfm_write_pmds(struct pfm_context *, pfarg_pmd_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#735: FILE: include/linux/perfmon.h:567:
+extern int  __pfm_write_pmds(struct pfm_context *, pfarg_pmd_t *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#736: FILE: include/linux/perfmon.h:568:
+extern int  __pfm_read_pmds(struct pfm_context *, pfarg_pmd_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context *' should also have an identifier name
#736: FILE: include/linux/perfmon.h:568:
+extern int  __pfm_read_pmds(struct pfm_context *, pfarg_pmd_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfarg_pmd_t *' should also have an identifier name
#736: FILE: include/linux/perfmon.h:568:
+extern int  __pfm_read_pmds(struct pfm_context *, pfarg_pmd_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#736: FILE: include/linux/perfmon.h:568:
+extern int  __pfm_read_pmds(struct pfm_context *, pfarg_pmd_t *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#737: FILE: include/linux/perfmon.h:569:
+extern void __pfm_reset_stats(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#738: FILE: include/linux/perfmon.h:570:
+extern int  __pfm_load_context(struct pfm_context *ctx, pfarg_load_t *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#739: FILE: include/linux/perfmon.h:571:
+extern int  __pfm_unload_context(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#740: FILE: include/linux/perfmon.h:572:
+extern int  __pfm_stop(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: include/linux/perfmon.h:573:
+extern int  __pfm_restart(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#742: FILE: include/linux/perfmon.h:574:
+extern int  __pfm_start(struct pfm_context *ctx, pfarg_start_t *start);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#743: FILE: include/linux/perfmon.h:575:
+extern int  __pfm_delete_evtsets(struct pfm_context *ctx, void *arg, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#744: FILE: include/linux/perfmon.h:576:
+extern int  __pfm_getinfo_evtsets(struct pfm_context *ctx, pfarg_setinfo_t *req,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: include/linux/perfmon.h:577:
+extern int  __pfm_getinfo_evtsets(struct pfm_context *ctx, pfarg_setinfo_t *req,
+				 int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#746: FILE: include/linux/perfmon.h:578:
+extern int __pfm_create_evtsets(struct pfm_context *ctx, pfarg_setdesc_t *req,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: include/linux/perfmon.h:579:
+extern int __pfm_create_evtsets(struct pfm_context *ctx, pfarg_setdesc_t *req,
+			int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#748: FILE: include/linux/perfmon.h:580:
+extern int  __pfm_create_context(pfarg_ctx_t *, struct pfm_smpl_fmt *, void *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pfarg_ctx_t *' should also have an identifier name
#748: FILE: include/linux/perfmon.h:580:
+extern int  __pfm_create_context(pfarg_ctx_t *, struct pfm_smpl_fmt *, void *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_smpl_fmt *' should also have an identifier name
#748: FILE: include/linux/perfmon.h:580:
+extern int  __pfm_create_context(pfarg_ctx_t *, struct pfm_smpl_fmt *, void *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#748: FILE: include/linux/perfmon.h:580:
+extern int  __pfm_create_context(pfarg_ctx_t *, struct pfm_smpl_fmt *, void *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#748: FILE: include/linux/perfmon.h:580:
+extern int  __pfm_create_context(pfarg_ctx_t *, struct pfm_smpl_fmt *, void *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pfm_context **' should also have an identifier name
#748: FILE: include/linux/perfmon.h:580:
+extern int  __pfm_create_context(pfarg_ctx_t *, struct pfm_smpl_fmt *, void *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#750: FILE: include/linux/perfmon.h:582:
+extern int  pfm_check_task_state(struct pfm_context *ctx, int cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#753: FILE: include/linux/perfmon.h:585:
+extern struct pfm_event_set *pfm_find_set(struct pfm_context *ctx, u16 set_id,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#756: FILE: include/linux/perfmon.h:588:
+extern struct pfm_context * pfm_get_ctx(int fd);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#756: FILE: include/linux/perfmon.h:588:
+extern struct pfm_context * pfm_get_ctx(int fd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: include/linux/perfmon.h:590:
+extern void pfm_context_free(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#759: FILE: include/linux/perfmon.h:591:
+extern struct pfm_context *pfm_context_alloc(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: include/linux/perfmon.h:593:
+extern int  pfm_register_pmu_config(struct pfm_pmu_config *cfg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: include/linux/perfmon.h:594:
+extern void pfm_unregister_pmu_config(struct pfm_pmu_config *cfg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: include/linux/perfmon.h:596:
+extern int  pfm_pmu_conf_get(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#765: FILE: include/linux/perfmon.h:597:
+extern void pfm_pmu_conf_put(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#767: FILE: include/linux/perfmon.h:599:
+extern int pfm_reserve_session(struct pfm_context *ctx, u32 cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#768: FILE: include/linux/perfmon.h:600:
+extern int pfm_release_session(struct pfm_context *ctx, u32 cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#770: FILE: include/linux/perfmon.h:602:
+extern int  pfm_smpl_buffer_alloc(struct pfm_context *ctx, size_t rsize);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#771: FILE: include/linux/perfmon.h:603:
+extern int pfm_reserve_buf_space(size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#772: FILE: include/linux/perfmon.h:604:
+extern void pfm_release_buf_space(size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: include/linux/perfmon.h:606:
+extern struct pfm_smpl_fmt *pfm_smpl_fmt_get(pfm_uuid_t uuid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#775: FILE: include/linux/perfmon.h:607:
+extern void pfm_smpl_fmt_put(struct pfm_smpl_fmt *fmt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#776: FILE: include/linux/perfmon.h:608:
+extern int pfm_use_smpl_fmt(pfm_uuid_t uuid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#778: FILE: include/linux/perfmon.h:610:
+extern int pfm_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#779: FILE: include/linux/perfmon.h:611:
+extern void pfm_proc_show_sessions(struct seq_file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#779: FILE: include/linux/perfmon.h:611:
+extern void pfm_proc_show_sessions(struct seq_file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#780: FILE: include/linux/perfmon.h:612:
+extern void pfm_proc_show_pmu_map(struct seq_file *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#780: FILE: include/linux/perfmon.h:612:
+extern void pfm_proc_show_pmu_map(struct seq_file *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#780: FILE: include/linux/perfmon.h:612:
+extern void pfm_proc_show_pmu_map(struct seq_file *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#781: FILE: include/linux/perfmon.h:613:
+extern void pfm_proc_show_fmt(struct seq_file *m);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#783: FILE: include/linux/perfmon.h:615:
+extern int pfm_register_smpl_fmt(struct pfm_smpl_fmt *fmt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#784: FILE: include/linux/perfmon.h:616:
+extern int pfm_unregister_smpl_fmt(pfm_uuid_t uuid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#785: FILE: include/linux/perfmon.h:617:
+extern irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#785: FILE: include/linux/perfmon.h:617:
+extern irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#785: FILE: include/linux/perfmon.h:617:
+extern irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#785: FILE: include/linux/perfmon.h:617:
+extern irqreturn_t pfm_interrupt_handler(int, void *, struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#786: FILE: include/linux/perfmon.h:618:
+extern void pfm_save_pmds_release(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#788: FILE: include/linux/perfmon.h:620:
+extern void pfm_reset_pmds(struct pfm_context *ctx, struct pfm_event_set *set,

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: include/linux/perfmon.h:621:
+^I^I    ^I   int reset_mode);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#789: FILE: include/linux/perfmon.h:621:
+^I^I    ^I   int reset_mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: include/linux/perfmon.h:621:
+extern void pfm_reset_pmds(struct pfm_context *ctx, struct pfm_event_set *set,
+		    	   int reset_mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#790: FILE: include/linux/perfmon.h:622:
+extern void pfm_switch_sets(struct pfm_context *ctx,

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: include/linux/perfmon.h:623:
+^I^I    ^I    struct pfm_event_set *new_set,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#791: FILE: include/linux/perfmon.h:623:
+^I^I    ^I    struct pfm_event_set *new_set,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: include/linux/perfmon.h:623:
+extern void pfm_switch_sets(struct pfm_context *ctx,
+		    	    struct pfm_event_set *new_set,

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: include/linux/perfmon.h:624:
+^I^I            int reset_mode,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: include/linux/perfmon.h:625:
+^I^I            int no_restart);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#795: FILE: include/linux/perfmon.h:627:
+extern void pfm_mask_monitoring(struct pfm_context *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#796: FILE: include/linux/perfmon.h:628:
+extern int pfm_ovfl_notify_user(struct pfm_context *ctx,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#800: FILE: include/linux/perfmon.h:632:
+extern int init_pfm_fs(void);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#801: FILE: include/linux/perfmon.h:633:
+extern int  pfm_is_fd(struct file *filp);
                                    ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#801: FILE: include/linux/perfmon.h:633:
+extern int  pfm_is_fd(struct file *filp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#803: FILE: include/linux/perfmon.h:635:
+extern u32 carta_random32 (u64 seed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#803: FILE: include/linux/perfmon.h:635:
+extern u32 carta_random32 (u64 seed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: include/linux/perfmon.h:637:
+extern void __pfm_exit_thread(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#805: FILE: include/linux/perfmon.h:637:
+extern void __pfm_exit_thread(struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#806: FILE: include/linux/perfmon.h:638:
+extern void __pfm_copy_thread(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#807: FILE: include/linux/perfmon.h:639:
+extern void __pfm_ctxswin(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#808: FILE: include/linux/perfmon.h:640:
+extern void __pfm_ctxswout(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#809: FILE: include/linux/perfmon.h:641:
+extern void __pfm_handle_work(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#810: FILE: include/linux/perfmon.h:642:
+extern void __pfm_handle_switch_timeout(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#812: FILE: include/linux/perfmon.h:644:
+extern void pfm_resume_after_ovfl(struct pfm_context *ctx);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#822: FILE: include/linux/perfmon.h:654:
+#define PFM_SET_REMAP_BASE		(PFM_SET_REMAP_OFFS*PAGE_SIZE)
                           		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#823: FILE: include/linux/perfmon.h:655:
+#define PFM_SET_REMAP_OFFS_MAX		(PFM_SET_REMAP_OFFS+\
                               		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#824: FILE: include/linux/perfmon.h:656:
+					 PFM_MAX_NUM_SETS*PFM_SET_REMAP_SCALAR)
 					                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#826: FILE: include/linux/perfmon.h:658:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#827: FILE: include/linux/perfmon.h:659:
+#define PMC_IS_LAST(c,i) ((c)->pmc_desc[i].type & PFM_REG_END)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#828: FILE: include/linux/perfmon.h:660:
+#define PMD_IS_LAST(c,i) ((c)->pmd_desc[i].type & PFM_REG_END)
                      ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#835: FILE: include/linux/perfmon.h:667:
+ * ^I- 1 means recognized PMU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#836: FILE: include/linux/perfmon.h:668:
+ * ^I- 0 means not recognized PMU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#877: FILE: include/linux/perfmon.h:709:
+^Iint             ^I(*probe_pmu)(void);^I/* probe PMU routine */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#899: FILE: include/linux/perfmon.h:731:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#916: FILE: include/linux/perfmon.h:748:
+#define PFM_REG_W	(PFM_REG_WC|PFM_REG_I)
                  	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#917: FILE: include/linux/perfmon.h:749:
+#define PFM_REG_W64	(PFM_REG_WC|PFM_REG_NO64|PFM_REG_I)
                    	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#917: FILE: include/linux/perfmon.h:749:
+#define PFM_REG_W64	(PFM_REG_WC|PFM_REG_NO64|PFM_REG_I)
                    	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#918: FILE: include/linux/perfmon.h:750:
+#define PFM_REG_C	(PFM_REG_C64|PFM_REG_I)
                  	            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#925: FILE: include/linux/perfmon.h:757:
+^Iu64 pfm_all_intr_count; ^I/* total ovfl interrupts */$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#960: FILE: include/linux/perfmon.h:792:
+	bv[rnum>>PFM_LBPL] |= 1UL << (rnum&(PFM_BPL-1));
 	       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#960: FILE: include/linux/perfmon.h:792:
+	bv[rnum>>PFM_LBPL] |= 1UL << (rnum&(PFM_BPL-1));
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#960: FILE: include/linux/perfmon.h:792:
+	bv[rnum>>PFM_LBPL] |= 1UL << (rnum&(PFM_BPL-1));
 	                                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#965: FILE: include/linux/perfmon.h:797:
+	return bv[rnum>>PFM_LBPL] & (1UL <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:WxV)
#965: FILE: include/linux/perfmon.h:797:
+	return bv[rnum>>PFM_LBPL] & (1UL <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#965: FILE: include/linux/perfmon.h:797:
+	return bv[rnum>>PFM_LBPL] & (1UL <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#965: FILE: include/linux/perfmon.h:797:
+	return bv[rnum>>PFM_LBPL] & (1UL <<(rnum&(PFM_BPL-1))) ? 1 : 0;
 	                                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#970: FILE: include/linux/perfmon.h:802:
+	bv[rnum>>PFM_LBPL] &= ~(1UL << (rnum&(PFM_BPL-1)));
 	       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#970: FILE: include/linux/perfmon.h:802:
+	bv[rnum>>PFM_LBPL] &= ~(1UL << (rnum&(PFM_BPL-1)));
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#970: FILE: include/linux/perfmon.h:802:
+	bv[rnum>>PFM_LBPL] &= ~(1UL << (rnum&(PFM_BPL-1)));
 	                                             ^

WARNING:REPEATED_WORD: Possible repeated word: 'for'
#974: FILE: include/linux/perfmon.h:806:
+ * for for special, not necessarily PMU-related,  PMD registers implemented

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: include/linux/perfmon.h:875:
+        unsigned long info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: include/linux/perfmon.h:875:
+        unsigned long info;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1049: FILE: include/linux/perfmon.h:881:
+extern void pfm_vector_init(void);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1059: FILE: include/linux/perfmon.h:891:
+#define pfm_exit_thread(_t)  ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1060: FILE: include/linux/perfmon.h:892:
+#define pfm_handle_work()    ^I^Ido { } while (0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1061: FILE: include/linux/perfmon.h:893:
+#define pfm_copy_thread(_t,_r)		do { } while (0)
                           ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1062: FILE: include/linux/perfmon.h:894:
+#define pfm_ctxswin(_t)      ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1063: FILE: include/linux/perfmon.h:895:
+#define pfm_ctxswout(_t)     ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1064: FILE: include/linux/perfmon.h:896:
+#define pfm_handle_switch_timeout()  ^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1065: FILE: include/linux/perfmon.h:897:
+#define pfm_release_task(_t)  ^I^Ido { } while (0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1066: FILE: include/linux/perfmon.h:898:
+#define pfm_set_cpus_allowed(_t,_m)	do { } while (0)
                                ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1067: FILE: include/linux/perfmon.h:899:
+#define pfm_sample_thread(_t)  ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1068: FILE: include/linux/perfmon.h:900:
+#define pfm_vector_init()  ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1072: FILE: include/linux/perfmon.h:904:
+#define pfm_release_dbregs(_t) ^I^Ido { } while (0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1073: FILE: include/linux/perfmon.h:905:
+#define pfm_use_dbregs(_t)     ^I^I(0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1084: FILE: include/linux/perfmon_dfl_smpl.h:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1101: FILE: include/linux/perfmon_dfl_smpl.h:18:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1112: FILE: include/linux/perfmon_dfl_smpl.h:29:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1121: FILE: include/linux/perfmon_dfl_smpl.h:38:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1143: FILE: include/linux/perfmon_dfl_smpl.h:60:
+typedef struct {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1144: FILE: include/linux/perfmon_dfl_smpl.h:61:
+        pid_t^Ipid;^I^I/* thread id (for NPTL, this is gettid()) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1144: FILE: include/linux/perfmon_dfl_smpl.h:61:
+        pid_t^Ipid;^I^I/* thread id (for NPTL, this is gettid()) */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1147: FILE: include/linux/perfmon_dfl_smpl.h:64:
+        u64^Ilast_reset_val;^I/* initial value of overflowed PMD */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1147: FILE: include/linux/perfmon_dfl_smpl.h:64:
+        u64^Ilast_reset_val;^I/* initial value of overflowed PMD */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1148: FILE: include/linux/perfmon_dfl_smpl.h:65:
+        unsigned long   ip;^I/* where did the overflow interrupt happened  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1148: FILE: include/linux/perfmon_dfl_smpl.h:65:
+        unsigned long   ip;^I/* where did the overflow interrupt happened  */$

WARNING:TYPO_SPELLING: 'timetamp' may be misspelled - perhaps 'timestamp'?
#1149: FILE: include/linux/perfmon_dfl_smpl.h:66:
+        u64	tstamp;		/* overflow timetamp */
            	       		            ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: include/linux/perfmon_dfl_smpl.h:66:
+        u64^Itstamp;^I^I/* overflow timetamp */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: include/linux/perfmon_dfl_smpl.h:66:
+        u64^Itstamp;^I^I/* overflow timetamp */$

WARNING:TYPO_SPELLING: 'overfow' may be misspelled - perhaps 'overflow'?
#1150: FILE: include/linux/perfmon_dfl_smpl.h:67:
+        u16	cpu;		/* cpu on which the overfow occured */
            	    		                    ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: include/linux/perfmon_dfl_smpl.h:67:
+        u16^Icpu;^I^I/* cpu on which the overfow occured */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1150: FILE: include/linux/perfmon_dfl_smpl.h:67:
+        u16^Icpu;^I^I/* cpu on which the overfow occured */$

WARNING:TYPO_SPELLING: 'ocurred' may be misspelled - perhaps 'occurred'?
#1151: FILE: include/linux/perfmon_dfl_smpl.h:68:
+        u16	set;		/* event set active when overflow ocurred   */
            	    		                                  ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: include/linux/perfmon_dfl_smpl.h:68:
+        u16^Iset;^I^I/* event set active when overflow ocurred   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1151: FILE: include/linux/perfmon_dfl_smpl.h:68:
+        u16^Iset;^I^I/* event set active when overflow ocurred   */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: include/linux/perfmon_dfl_smpl.h:69:
+        pid_t^Itgid;^I^I/* thread group id (for NPTL, this is getpid())*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: include/linux/perfmon_dfl_smpl.h:69:
+        pid_t^Itgid;^I^I/* thread group id (for NPTL, this is getpid())*/$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1157: FILE: include/linux/perfmon_dfl_smpl.h:74:
+#define PFM_DFL_SMPL_VERSION (((PFM_DFL_SMPL_VERSION_MAJ&0xffff)<<16)|\
                                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1157: FILE: include/linux/perfmon_dfl_smpl.h:74:
+#define PFM_DFL_SMPL_VERSION (((PFM_DFL_SMPL_VERSION_MAJ&0xffff)<<16)|\
                                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1157: FILE: include/linux/perfmon_dfl_smpl.h:74:
+#define PFM_DFL_SMPL_VERSION (((PFM_DFL_SMPL_VERSION_MAJ&0xffff)<<16)|\
                                                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000113205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 123 warnings, 113 checks, 1075 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000113205.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
