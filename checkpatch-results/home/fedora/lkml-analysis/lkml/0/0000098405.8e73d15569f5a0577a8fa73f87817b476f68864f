WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#39: 
Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: drivers/pci/hotplug/acpi_pcihp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#118: FILE: drivers/pci/hotplug/acpi_pcihp.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#119: FILE: drivers/pci/hotplug/acpi_pcihp.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#144: FILE: drivers/pci/hotplug/acpi_pcihp.c:46:
+u8 * acpi_path_name(acpi_handle handle)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#151: FILE: drivers/pci/hotplug/acpi_pcihp.c:53:
+	if (ACPI_FAILURE(status)) {
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: drivers/pci/hotplug/acpi_pcihp.c:61:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#175: FILE: drivers/pci/hotplug/acpi_pcihp.c:77:
+		ret_buf.pointer = kmalloc (ret_buf.length, GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#177: FILE: drivers/pci/hotplug/acpi_pcihp.c:79:
+			printk(KERN_ERR "%s:%s alloc for _HPP fail\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#177: FILE: drivers/pci/hotplug/acpi_pcihp.c:79:
+		if (!ret_buf.pointer) {
+			printk(KERN_ERR "%s:%s alloc for _HPP fail\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/pci/hotplug/acpi_pcihp.c:80:
+			printk(KERN_ERR "%s:%s alloc for _HPP fail\n",
+				__FUNCTION__, path_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#178: FILE: drivers/pci/hotplug/acpi_pcihp.c:80:
+				__FUNCTION__, path_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/pci/hotplug/acpi_pcihp.c:85:
+		status = acpi_evaluate_object(handle, METHOD_NAME__HPP,
+				NULL, &ret_buf);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#188: FILE: drivers/pci/hotplug/acpi_pcihp.c:90:
+			pr_debug("%s:%s _HPP fail=0x%x\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/pci/hotplug/acpi_pcihp.c:91:
+			pr_debug("%s:%s _HPP fail=0x%x\n", __FUNCTION__,
+					path_name, status);

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/pci/hotplug/acpi_pcihp.c:97:
+	ext_obj = (union acpi_object *) ret_buf.pointer;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#197: FILE: drivers/pci/hotplug/acpi_pcihp.c:99:
+		printk(KERN_ERR "%s:%s _HPP obj not a package\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#197: FILE: drivers/pci/hotplug/acpi_pcihp.c:99:
+		printk(KERN_ERR "%s:%s _HPP obj not a package\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/pci/hotplug/acpi_pcihp.c:100:
+		printk(KERN_ERR "%s:%s _HPP obj not a package\n", __FUNCTION__,
+				path_name);

CHECK:SPACING: No space is necessary after a cast
#204: FILE: drivers/pci/hotplug/acpi_pcihp.c:106:
+	package = (union acpi_object *) ret_buf.pointer;

ERROR:SPACING: space prohibited after that open parenthesis '('
#205: FILE: drivers/pci/hotplug/acpi_pcihp.c:107:
+	for ( i = 0; (i < len) || (i < 4); i++) {

CHECK:SPACING: No space is necessary after a cast
#206: FILE: drivers/pci/hotplug/acpi_pcihp.c:108:
+		ext_obj = (union acpi_object *) &package->package.elements[i];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#212: FILE: drivers/pci/hotplug/acpi_pcihp.c:114:
+			printk(KERN_ERR "%s:%s _HPP obj type incorrect\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/pci/hotplug/acpi_pcihp.c:115:
+			printk(KERN_ERR "%s:%s _HPP obj type incorrect\n",
+				__FUNCTION__, path_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: drivers/pci/hotplug/acpi_pcihp.c:115:
+				__FUNCTION__, path_name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#235: FILE: drivers/pci/hotplug/acpi_pcihp.c:137:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#249: FILE: drivers/pci/hotplug/acpi_pcihp.c:151:
+		printk(KERN_ERR "%s:%s OSHP fails=0x%x\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#249: FILE: drivers/pci/hotplug/acpi_pcihp.c:151:
+		printk(KERN_ERR "%s:%s OSHP fails=0x%x\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/pci/hotplug/acpi_pcihp.c:152:
+		printk(KERN_ERR "%s:%s OSHP fails=0x%x\n", __FUNCTION__,
+			path_name, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#252: FILE: drivers/pci/hotplug/acpi_pcihp.c:154:
+		pr_debug("%s:%s OSHP passes\n", __FUNCTION__, path_name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: drivers/pci/hotplug/acpi_pcihp.c:160:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/pci/hotplug/acpi_pcihp.c:168:
+acpi_status acpi_get_hp_params_from_firmware(struct pci_dev *dev,
+		struct hotplug_params *hpp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#278: FILE: drivers/pci/hotplug/acpi_pcihp.c:180:
+		acpi_handle handle = DEVICE_ACPI_HANDLE(&(pdev->dev));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: drivers/pci/hotplug/acpi_pcihp.c:181:
+		acpi_handle handle = DEVICE_ACPI_HANDLE(&(pdev->dev));
+		if (!handle)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#291: FILE: drivers/pci/hotplug/acpi_pcihp.c:193:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/pci/hotplug/acpi_pcihp.c:209:
+		if ((info->valid & ACPI_VALID_HID) &&
+			!strcmp(PCI_ROOT_HID_STRING,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#313: FILE: drivers/pci/hotplug/acpi_pcihp.c:215:
+			for (i=0; i < info->compatibility_id.count; i++) {
 			      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: drivers/pci/hotplug/acpi_pcihp.c:217:
+				if (!strcmp(PCI_ROOT_HID_STRING,
+					info->compatibility_id.id[i].value)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#389: FILE: drivers/pci/hotplug/acpiphp_glue.c:302:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#489: FILE: drivers/pci/hotplug/pci_hotplug.h:190:
+extern acpi_status acpi_run_oshp(acpi_handle handle);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#490: FILE: drivers/pci/hotplug/pci_hotplug.h:191:
+extern acpi_status acpi_get_hp_params_from_firmware(struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/pci/hotplug/pci_hotplug.h:192:
+extern acpi_status acpi_get_hp_params_from_firmware(struct pci_dev *dev,
+				struct hotplug_params *hpp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: drivers/pci/hotplug/pci_hotplug.h:193:
+extern u8 * acpi_path_name(acpi_handle handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#492: FILE: drivers/pci/hotplug/pci_hotplug.h:193:
+extern u8 * acpi_path_name(acpi_handle handle);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#526: FILE: drivers/pci/hotplug/pciehp.h:280:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/pci/hotplug/pciehp.h:285:
+static inline int pciehp_get_hp_params_from_firmware(struct pci_dev *dev,
+			struct hotplug_params *hpp)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: drivers/pci/hotplug/pciehp.h:292:
+#define pciehp_get_hp_hw_control_from_firmware(dev) ^I0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#540: FILE: drivers/pci/hotplug/pciehp.h:294:
+#endif ^I^I^I^I/* CONFIG_ACPI */$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->dev
#564: FILE: drivers/pci/hotplug/pciehp_hpc.c:1246:
+	acpi_handle chandle, handle = DEVICE_ACPI_HANDLE(&(dev->dev));

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#574: FILE: drivers/pci/hotplug/pciehp_hpc.c:1256:
+	 * within the scope of the hotplug controller and its parents, upto
 	                                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/pci/hotplug/pciehp_hpc.c:1268:
+		dbg("Could not find %s in acpi namespace, trying parent\n",
+				pci_name(pdev));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#589: FILE: drivers/pci/hotplug/pciehp_hpc.c:1271:
+			handle = acpi_get_pci_rootbridge_handle(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#593: FILE: drivers/pci/hotplug/pciehp_hpc.c:1275:
+			handle = DEVICE_ACPI_HANDLE(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around parent->self->dev
#594: FILE: drivers/pci/hotplug/pciehp_hpc.c:1276:
+					&(parent->self->dev));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#600: FILE: drivers/pci/hotplug/pciehp_hpc.c:1282:
+		dbg("Trying to get hotplug control for %s \n", path_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: drivers/pci/hotplug/pciehp_hpc.c:1284:
+		status = pci_osc_control_set(handle,
+				OSC_PCI_EXPRESS_NATIVE_HP_CONTROL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/pci/hotplug/pciehp_hpc.c:1289:
+			dbg("Gained control for hotplug HW for pci %s (%s)\n",
+				pci_name(dev), path_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: drivers/pci/hotplug/pciehp_hpc.c:1302:
+	err("Cannot get control of hotplug hardware for pci %s\n",
+			pci_name(dev));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#627: FILE: drivers/pci/hotplug/pciehp_hpc.c:1309:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#970: FILE: drivers/pci/hotplug/shpchp.h:194:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#973: FILE: drivers/pci/hotplug/shpchp.h:197:
+static inline int get_hp_params_from_firmware(struct pci_dev *dev,
+			struct hotplug_params *hpp)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#975: FILE: drivers/pci/hotplug/shpchp.h:199:
+	if (ACPI_FAILURE(acpi_get_hp_params_from_firmware(dev, hpp)))
+			return -ENODEV;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#979: FILE: drivers/pci/hotplug/shpchp.h:203:
+}
+#define get_hp_hw_control_from_firmware(pdev) \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pdev' - possible side-effects?
#979: FILE: drivers/pci/hotplug/shpchp.h:203:
+#define get_hp_hw_control_from_firmware(pdev) \
+	do { \
+		if (DEVICE_ACPI_HANDLE(&(pdev->dev))) \
+			acpi_run_oshp(DEVICE_ACPI_HANDLE(&(pdev->dev))); \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pdev' may be better as '(pdev)' to avoid precedence issues
#979: FILE: drivers/pci/hotplug/shpchp.h:203:
+#define get_hp_hw_control_from_firmware(pdev) \
+	do { \
+		if (DEVICE_ACPI_HANDLE(&(pdev->dev))) \
+			acpi_run_oshp(DEVICE_ACPI_HANDLE(&(pdev->dev))); \
+	} while (0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#981: FILE: drivers/pci/hotplug/shpchp.h:205:
+		if (DEVICE_ACPI_HANDLE(&(pdev->dev))) \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pdev->dev
#982: FILE: drivers/pci/hotplug/shpchp.h:206:
+			acpi_run_oshp(DEVICE_ACPI_HANDLE(&(pdev->dev))); \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#998: FILE: drivers/pci/hotplug/shpchp_core.c:107:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1000: FILE: drivers/pci/hotplug/shpchp_core.c:109:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/pci/hotplug/shpchp_core.c:112:
+shpchprm_get_physical_slot_number(struct controller *ctrl, u32 *sun,
+				u8 busnum, u8 devnum)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1007: FILE: drivers/pci/hotplug/shpchp_core.c:116:
+	dbg("%s: ctrl->slot_num_inc %d, offset %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: drivers/pci/hotplug/shpchp_core.c:117:
+	dbg("%s: ctrl->slot_num_inc %d, offset %d\n", __FUNCTION__,
+			ctrl->slot_num_inc, offset);

CHECK:SPACING: No space is necessary after a cast
#1009: FILE: drivers/pci/hotplug/shpchp_core.c:118:
+	*sun = (u8) (ctrl->first_slot + ctrl->slot_num_inc *offset);

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1009: FILE: drivers/pci/hotplug/shpchp_core.c:118:
+	*sun = (u8) (ctrl->first_slot + ctrl->slot_num_inc *offset);
 	                                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1013: FILE: drivers/pci/hotplug/shpchp_core.c:122:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098405.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 22 warnings, 47 checks, 655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098405.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
