WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#45: FILE: ppc/kernel/process.c:568:
+			printk("%08lX ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#47: FILE: ppc/kernel/process.c:570:
+			printk("%08lX? ", i);	/* Or append a '?' (ksymoops doesn't mind) */

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#89: FILE: i386/kernel/traps.c:234:
+		printk("Code: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#98: FILE: i386/kernel/traps.c:295:
+	printk("%s: %04lx ", str, err & 0xffff);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: i386/kernel/traps.c:296:
+	printk(oops_id);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: linux/module.h:416:
+extern void module_oops_tracking_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: linux/module.h:417:
+extern void module_oops_tracking_mark(struct module *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#132: FILE: linux/module.h:417:
+extern void module_oops_tracking_mark(struct module *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: linux/module.h:418:
+extern void module_oops_tracking_print(void);

WARNING:PATCH_PREFIX: patch prefix 'init' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: module.c:1255:
+	struct module * mod;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: module.c:1261:
+void module_oops_tracking_mark(struct module * mod)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: module.c:1275:
+			printk("Modules:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: module.c:1277:
+			printk("\n        ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: module.c:1280:
+		printk(" [(%s:<%p>:<%p>)]",

CHECK:SPACING: No space is necessary after a cast
#194: FILE: module.c:1282:
+		       (char *) mod + mod->size_of_struct,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#195: FILE: module.c:1283:
+		       (char *) mod + mod->size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#198: FILE: module.c:1286:
+		printk("\n");

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#222: FILE: ppc/kernel/process.c:75:
+extern struct module kernel_module;

CHECK:SPACING: No space is necessary after a cast
#229: FILE: ppc/kernel/process.c:82:
+	if (addr >= (unsigned long) &_stext &&

CHECK:SPACING: No space is necessary after a cast
#230: FILE: ppc/kernel/process.c:83:
+	    addr <= (unsigned long) &_etext)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: ppc/kernel/process.c:89:
+		 * for the .text subset... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#251: FILE: ppc/kernel/process.c:104:
+	return (addr >= (unsigned long) &_stext &&

CHECK:SPACING: No space is necessary after a cast
#252: FILE: ppc/kernel/process.c:105:
+		addr <= (unsigned long) &_etext);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#283: FILE: ppc/kernel/process.c:568:
+			printk("%08lX ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#285: FILE: ppc/kernel/process.c:570:
+			printk("%08lX? ", i);	/* Or append a '?' (ksymoops doesn't mind) */

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: ppc/kernel/traps.c:100:
+	printk("Oops: %s, sig: %ld ", str, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#298: FILE: ppc/kernel/traps.c:101:
+	printk(oops_id);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000325912.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 24 warnings, 9 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000325912.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
