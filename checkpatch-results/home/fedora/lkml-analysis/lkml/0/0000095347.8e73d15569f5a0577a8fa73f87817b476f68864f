WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#194: FILE: include/asm-i386/mach-vmi/mach_processor.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#211: FILE: include/asm-i386/mach-vmi/mach_processor.h:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#212: FILE: include/asm-i386/mach-vmi/mach_processor.h:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#218: FILE: include/asm-i386/mach-vmi/mach_processor.h:25:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#226: FILE: include/asm-i386/mach-vmi/mach_processor.h:33:
+	vmi_wrap_call(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: include/asm-i386/mach-vmi/mach_processor.h:48:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: include/asm-i386/mach-vmi/mach_processor.h:51:
+^I       ^Iint *edx)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: include/asm-i386/mach-vmi/mach_processor.h:51:
+^I       ^Iint *edx)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: include/asm-i386/mach-vmi/mach_processor.h:51:
+static inline void cpuid_count(int op, int count, int *eax, int *ebx, int *ecx,
+	       	int *edx)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#289: FILE: include/asm-i386/mach-vmi/mach_processor.h:96:
+	vmi_wrap_call(

CHECK:CAMELCASE: Avoid CamelCase: <UpdateKernelStack>
#290: FILE: include/asm-i386/mach-vmi/mach_processor.h:97:
+		UpdateKernelStack, "",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#298: FILE: include/asm-i386/mach-vmi/mach_processor.h:105:
+	vmi_wrap_call(

CHECK:CAMELCASE: Avoid CamelCase: <SetDR>
#299: FILE: include/asm-i386/mach-vmi/mach_processor.h:106:
+		SetDR, "movl %1, %%db%c2",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: include/asm-i386/mach-vmi/mach_processor.h:108:
+		2, XCONC(VMI_IREG1(num), VMI_IREG2(val), VMI_IMM (num)),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#308: FILE: include/asm-i386/mach-vmi/mach_processor.h:115:
+	VMI_UINT32 ret;
+	vmi_wrap_call(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#308: FILE: include/asm-i386/mach-vmi/mach_processor.h:115:
+	vmi_wrap_call(

CHECK:CAMELCASE: Avoid CamelCase: <GetDR>
#309: FILE: include/asm-i386/mach-vmi/mach_processor.h:116:
+		GetDR, "movl %%db%c1, %%eax",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: include/asm-i386/mach-vmi/mach_processor.h:118:
+		1, XCONC(VMI_IREG1(num), VMI_IMM (num)),

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#316: FILE: include/asm-i386/mach-vmi/mach_processor.h:123:
+#define get_debugreg(var, register) do { var = vmi_get_dr(register); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#320: FILE: include/asm-i386/mach-vmi/mach_processor.h:127:
+	vmi_wrap_call(

CHECK:CAMELCASE: Avoid CamelCase: <SetIOPLMask>
#321: FILE: include/asm-i386/mach-vmi/mach_processor.h:128:
+		SetIOPLMask,	"pushfl;"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: include/asm-i386/mach-vmi/mach_processor.h:133:
+		1, VMI_IREG1 (mask),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#336: FILE: include/asm-i386/mach-default/mach_processor.h:1:
+#ifndef _MACH_PROCESSOR_H

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#344: FILE: include/asm-i386/mach-default/mach_processor.h:9:
+static inline void cpuid(unsigned int op, unsigned int *eax, unsigned int *ebx, unsigned int *ecx, unsigned int *edx)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: include/asm-i386/mach-default/mach_processor.h:21:
+^I       ^Iint *edx)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#356: FILE: include/asm-i386/mach-default/mach_processor.h:21:
+^I       ^Iint *edx)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: include/asm-i386/mach-default/mach_processor.h:21:
+static inline void cpuid_count(int op, int count, int *eax, int *ebx, int *ecx,
+	       	int *edx)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#379: FILE: include/asm-i386/mach-default/mach_processor.h:44:
+}
+static inline unsigned int cpuid_ebx(unsigned int op)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#386: FILE: include/asm-i386/mach-default/mach_processor.h:51:
+		: "cx", "dx" );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#389: FILE: include/asm-i386/mach-default/mach_processor.h:54:
+}
+static inline unsigned int cpuid_ecx(unsigned int op)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#396: FILE: include/asm-i386/mach-default/mach_processor.h:61:
+		: "bx", "dx" );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#399: FILE: include/asm-i386/mach-default/mach_processor.h:64:
+}
+static inline unsigned int cpuid_edx(unsigned int op)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#410: FILE: include/asm-i386/mach-default/mach_processor.h:75:
+#define load_cr3(pgdir) \
+        asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: include/asm-i386/mach-default/mach_processor.h:76:
+        asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: include/asm-i386/mach-default/mach_processor.h:76:
+        asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)))$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#411: FILE: include/asm-i386/mach-default/mach_processor.h:76:
+        asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)))
                                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#411: FILE: include/asm-i386/mach-default/mach_processor.h:76:
+        asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir)))
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#414: FILE: include/asm-i386/mach-default/mach_processor.h:79:
+#define arch_update_kernel_stack(t,s)
                                   ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#421: FILE: include/asm-i386/mach-default/mach_processor.h:86:
+			:"=r" (var))
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#425: FILE: include/asm-i386/mach-default/mach_processor.h:90:
+			:"r" (value))
 			^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#430: FILE: include/asm-i386/mach-default/mach_processor.h:95:
+static inline void set_iopl_mask(unsigned mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: include/asm-i386/mach-default/mach_processor.h:98:
+	unsigned int reg;
+	__asm__ __volatile__ ("pushfl;"

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: include/asm-i386/mach-default/mach_processor.h:101:
+                              "orl %2, %0;"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: include/asm-i386/mach-default/mach_processor.h:101:
+                              "orl %2, %0;"$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095347.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 14 warnings, 16 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095347.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
