ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#37: 
--- a/drivers/net/tg3.c	Tue Jul 29 13:08:22 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tp' may be better as '(tp)' to avoid precedence issues
#44: FILE: drivers/net/tg3.c:72:
+#define TG3_MAX_MTU(tp)	\
+	(GET_ASIC_REV(tp->pci_chip_rev_id) != ASIC_REV_5705 ? 9000 : 1500)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tp' may be better as '(tp)' to avoid precedence issues
#61: FILE: drivers/net/tg3.c:90:
+#define TG3_RX_RCB_RING_SIZE(tp)	\
+	(GET_ASIC_REV(tp->pci_chip_rev_id) == ASIC_REV_5705 ? \
+	 512 : 1024)

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/net/tg3.c:102:
+^I^I^I           TG3_RX_RCB_RING_SIZE(tp))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#168: FILE: drivers/net/tg3.c:485:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/net/tg3.c:488:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#183: FILE: drivers/net/tg3.c:500:
+			udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#196: FILE: drivers/net/tg3.c:513:
+			udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#206: FILE: drivers/net/tg3.c:523:
+			udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#215: FILE: drivers/net/tg3.c:532:
+			udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#228: FILE: drivers/net/tg3.c:545:
+			udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#233: FILE: drivers/net/tg3.c:550:
+			udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#239: FILE: drivers/net/tg3.c:556:
+			udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#333: FILE: drivers/net/tg3.c:701:
+		udelay(40);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#366: FILE: drivers/net/tg3.c:717:
+			udelay(40);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#506: FILE: drivers/net/tg3.c:3452:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: drivers/net/tg3.c:3506:
+		printk(KERN_ERR PFX "tg3_load_firmware_cpu: Trying to load "

WARNING:SPLIT_STRING: quoted string split across lines
#518: FILE: drivers/net/tg3.c:3507:
+		printk(KERN_ERR PFX "tg3_load_firmware_cpu: Trying to load "
+		       "TX cpu firmware on %s which is 5705.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: drivers/net/tg3.c:4091:
+^I     ^I     i < NIC_SRAM_STATUS_BLK + TG3_HW_STATUS_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: drivers/net/tg3.c:4091:
+^I     ^I     i < NIC_SRAM_STATUS_BLK + TG3_HW_STATUS_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: drivers/net/tg3.c:4092:
+^I     ^I     i += sizeof(u32)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: drivers/net/tg3.c:4092:
+^I     ^I     i += sizeof(u32)) {$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#619: FILE: drivers/net/tg3.c:4094:
+			udelay(40);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#655: FILE: drivers/net/tg3.c:4146:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#723: FILE: drivers/net/tg3.c:4245:
+			     ((u64) tp->rx_jumbo_mapping >> 32));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#725: FILE: drivers/net/tg3.c:4247:
+			     ((u64) tp->rx_jumbo_mapping & 0xffffffff));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#735: FILE: drivers/net/tg3.c:4257:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#818: FILE: drivers/net/tg3.c:4385:
+		     ((u64) tp->stats_mapping >> 32));

CHECK:SPACING: No space is necessary after a cast
#820: FILE: drivers/net/tg3.c:4387:
+		     ((u64) tp->stats_mapping & 0xffffffff));

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#845: FILE: drivers/net/tg3.c:4419:
+		udelay(40);

CHECK:BRACES: braces {} should be used on all arms of this statement
#894: FILE: drivers/net/tg3.c:4459:
+			if (tp->dev->features & NETIF_F_TSO) {
[...]
+			} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#896: FILE: drivers/net/tg3.c:4461:
+			} else
[...]
+			if (!(tr32(TG3PCI_PCISTATE) & PCISTATE_BUS_SPEED_HIGH)) {

CHECK:BRACES: Unbalanced braces around else statement
#896: FILE: drivers/net/tg3.c:4461:
+			} else

WARNING:BRACES: braces {} are not necessary for single statement blocks
#898: FILE: drivers/net/tg3.c:4463:
+			if (!(tr32(TG3PCI_PCISTATE) & PCISTATE_BUS_SPEED_HIGH)) {
+				val |= RDMAC_MODE_FIFO_LONG_BURST;
+			}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'PSTAT' - possible side-effects?
#983: FILE: drivers/net/tg3.c:4626:
+#define TG3_STAT_ADD32(PSTAT, REG) \
+do {	u32 __val = tr32(REG); \
+	(PSTAT)->low += __val; \
+	if ((PSTAT)->low < __val) \
+		(PSTAT)->high += 1; \
+} while (0)

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1045: FILE: drivers/net/tg3.c:5155:
+	 * a timer simply keeps tp->stats uptodate with direct
 	                                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1059: FILE: drivers/net/tg3.c:5617:
+		if (tp->pci_chip_rev_id == CHIPREV_ID_5705_A1 &&
+#if TG3_DO_TSO != 0

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->pci_chip_rev_id != CHIPREV_ID_5705_A0'
#1105: FILE: drivers/net/tg3.c:6405:
+	if ((GET_ASIC_REV(tp->pci_chip_rev_id) == ASIC_REV_5700) ||
+	    ((GET_ASIC_REV(tp->pci_chip_rev_id) == ASIC_REV_5705) &&
+	     (tp->pci_chip_rev_id != CHIPREV_ID_5705_A0) &&
+	     (tp->pci_chip_rev_id != CHIPREV_ID_5705_A1)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->pci_chip_rev_id != CHIPREV_ID_5705_A1'
#1105: FILE: drivers/net/tg3.c:6405:
+	if ((GET_ASIC_REV(tp->pci_chip_rev_id) == ASIC_REV_5700) ||
+	    ((GET_ASIC_REV(tp->pci_chip_rev_id) == ASIC_REV_5705) &&
+	     (tp->pci_chip_rev_id != CHIPREV_ID_5705_A0) &&
+	     (tp->pci_chip_rev_id != CHIPREV_ID_5705_A1)))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1160: FILE: drivers/net/tg3.c:6817:
+#if 0

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1179: FILE: drivers/net/tg3.c:6933:
+static struct pci_dev * __devinit tg3_find_5704_peer(struct tg3 *tp)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1197: FILE: drivers/net/tg3.c:6951:
+		BUG();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1201: FILE: drivers/net/tg3.c:6955:
 static int __devinit tg3_init_one(struct pci_dev *pdev,

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1225: FILE: drivers/net/tg3.c:7125:
+#if 1 /* Kill this when 5705 TSO firmware added.  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1232: FILE: drivers/net/tg3.c:7132:
+	if (tp->pci_chip_rev_id == CHIPREV_ID_5705_A1 &&
+#if TG3_DO_TSO != 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1414: FILE: drivers/net/tg3.h:964:
+#define  WDMAC_MODE_RX_ACCEL^I ^I 0x00000400$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 16 warnings, 26 checks, 1378 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
