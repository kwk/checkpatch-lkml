WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/net/chelsio/sge.c:1639:
+ ^Ispin_lock_irq(&adapter->async_lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: drivers/net/chelsio/sge.c:1639:
+ ^Ispin_lock_irq(&adapter->async_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/net/chelsio/sge.c:1639:
+ ^Ispin_lock_irq(&adapter->async_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/net/chelsio/sge.c:1644:
+ ^Ispin_unlock_irq(&adapter->async_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: drivers/net/chelsio/sge.c:1644:
+ ^Ispin_unlock_irq(&adapter->async_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/net/chelsio/sge.c:1644:
+ ^Ispin_unlock_irq(&adapter->async_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/net/chelsio/sge.c:1655:
+ ^Istruct net_device *dev = adapter->sge->netdev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: drivers/net/chelsio/sge.c:1655:
+ ^Istruct net_device *dev = adapter->sge->netdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/net/chelsio/sge.c:1655:
+ ^Istruct net_device *dev = adapter->sge->netdev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/net/chelsio/sge.c:1657:
+ ^Iu32 cause;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: drivers/net/chelsio/sge.c:1657:
+ ^Iu32 cause;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/net/chelsio/sge.c:1657:
+ ^Iu32 cause;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/net/chelsio/sge.c:1665:
+ ^Iif (cause & F_PL_INTR_SGE_DATA) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: drivers/net/chelsio/sge.c:1665:
+ ^Iif (cause & F_PL_INTR_SGE_DATA) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/net/chelsio/sge.c:1665:
+ ^Iif (cause & F_PL_INTR_SGE_DATA) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#252: FILE: drivers/net/chelsio/sge.c:1665:
+ 	if (cause & F_PL_INTR_SGE_DATA) {
[...]
-	}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <respQ>
#253: FILE: drivers/net/chelsio/sge.c:1666:
+		struct respQ *q = &adapter->sge->respQ;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/net/chelsio/sge.c:1669:
+ ^I^Ihandled = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#276: FILE: drivers/net/chelsio/sge.c:1669:
+ ^I^Ihandled = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/net/chelsio/sge.c:1669:
+ ^I^Ihandled = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/net/chelsio/sge.c:1670:
+ ^I^Iwritel(F_PL_INTR_SGE_DATA, adapter->regs + A_PL_CAUSE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#277: FILE: drivers/net/chelsio/sge.c:1670:
+ ^I^Iwritel(F_PL_INTR_SGE_DATA, adapter->regs + A_PL_CAUSE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/net/chelsio/sge.c:1670:
+ ^I^Iwritel(F_PL_INTR_SGE_DATA, adapter->regs + A_PL_CAUSE);$

CHECK:CAMELCASE: Avoid CamelCase: <GenerationBit>
#279: FILE: drivers/net/chelsio/sge.c:1672:
+		if (e->GenerationBit == q->genbit &&

CHECK:CAMELCASE: Avoid CamelCase: <DataValid>
#281: FILE: drivers/net/chelsio/sge.c:1674:
+			if (e->DataValid || process_pure_responses(adapter, e)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#291: FILE: drivers/net/chelsio/sge.c:1684:
+
+		}

CHECK:BRACES: Unbalanced braces around else statement
#293: FILE: drivers/net/chelsio/sge.c:1686:
+	} else

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#356: FILE: drivers/net/chelsio/sge.h:80:
+int t1_poll(struct net_device *, int *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#356: FILE: drivers/net/chelsio/sge.h:80:
+int t1_poll(struct net_device *, int *);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#434: FILE: drivers/net/myri10ge/myri10ge.c:97:
+#define MYRI10GE_MAX_FRAGS_PER_FRAME (MYRI10GE_MAX_ETHER_MTU/MYRI10GE_ALLOC_SIZE + 1)
                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#483: FILE: drivers/net/myri10ge/myri10ge.c:276:
+module_param(myri10ge_fill_thresh, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#494: FILE: drivers/net/myri10ge/myri10ge.c:286:
+static inline void put_be32(__be32 val, __be32 __iomem * p)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/net/myri10ge/myri10ge.c:288:
+	__raw_writel((__force __u32) val, (__force void __iomem *)p);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->protocol == htons(ETH_P_8021Q)'
#567: FILE: drivers/net/myri10ge/myri10ge.c:821:
+	if ((skb->protocol == htons(ETH_P_8021Q)) &&
+	    (vh->h_vlan_encapsulated_proto == htons(ETH_P_IP) ||
+	     vh->h_vlan_encapsulated_proto == htons(ETH_P_IPV6))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#580: FILE: drivers/net/myri10ge/myri10ge.c:830:
+myri10ge_rx_skb_build(struct sk_buff *skb, u8 * va,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#607: FILE: drivers/net/myri10ge/myri10ge.c:835:
+	skb->len = skb->data_len = len;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#623: FILE: drivers/net/myri10ge/myri10ge.c:851:
+	 * manually */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#697: FILE: drivers/net/myri10ge/myri10ge.c:883:
+			if (unlikely(page == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#711: FILE: drivers/net/myri10ge/myri10ge.c:897:
+		 * page */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx->wc_fifo"
#724: FILE: drivers/net/myri10ge/myri10ge.c:910:
+			if (rx->wc_fifo == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#727: FILE: drivers/net/myri10ge/myri10ge.c:913:
+			else {

WARNING:MEMORY_BARRIER: memory barrier without comment
#728: FILE: drivers/net/myri10ge/myri10ge.c:914:
+				mb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#760: FILE: drivers/net/myri10ge/myri10ge.c:936:
+				 * page into an skb */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#794: FILE: drivers/net/myri10ge/myri10ge.c:967:
+	hlen = MYRI10GE_HLEN > len ? len : MYRI10GE_HLEN;

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#807: FILE: drivers/net/myri10ge/myri10ge.c:972:
+	if (unlikely(skb == NULL)) {

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#898: FILE: drivers/net/myri10ge/myri10ge.c:1501:
+		printk(KERN_ERR "myri10ge: %s: alloced only %d small bufs\n",
 		                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#898: FILE: drivers/net/myri10ge/myri10ge.c:1501:
+		printk(KERN_ERR "myri10ge: %s: alloced only %d small bufs\n",

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#914: FILE: drivers/net/myri10ge/myri10ge.c:1508:
+		printk(KERN_ERR "myri10ge: %s: alloced only %d big bufs\n",
 		                               ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#914: FILE: drivers/net/myri10ge/myri10ge.c:1508:
+		printk(KERN_ERR "myri10ge: %s: alloced only %d big bufs\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#934: FILE: drivers/net/myri10ge/myri10ge.c:1518:
+		int idx = i & mgp->rx_big.mask;
+		myri10ge_unmap_rx_page(mgp->pdev, &mgp->rx_big.info[idx],

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#952: FILE: drivers/net/myri10ge/myri10ge.c:1526:
+		int idx = i & mgp->rx_small.mask;
+		myri10ge_unmap_rx_page(mgp->pdev, &mgp->rx_small.info[idx],

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000010368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 29 warnings, 14 checks, 1108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000010368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
