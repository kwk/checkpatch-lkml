WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: arch/ppc64/lib/sstep.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#60: FILE: arch/ppc64/lib/sstep.c:14:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:CAMELCASE: Avoid CamelCase: <SystemCall_common>
#62: FILE: arch/ppc64/lib/sstep.c:16:
+extern char SystemCall_common[];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs->ctr == 0'
#78: FILE: arch/ppc64/lib/sstep.c:32:
+		if (((bo >> 1) & 1) ^ (regs->ctr == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: arch/ppc64/lib/sstep.c:44:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#99: FILE: arch/ppc64/lib/sstep.c:53:
+	unsigned long int imm;

CHECK:SPACING: No space is necessary after a cast
#124: FILE: arch/ppc64/lib/sstep.c:78:
+		regs->gpr[13] = (unsigned long) get_paca();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#125: FILE: arch/ppc64/lib/sstep.c:79:
+		regs->nip = (unsigned long) &SystemCall_common;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#147: FILE: arch/ppc64/lib/sstep.c:101:
+			imm = (instr & 0x400)? regs->ctr: regs->link;
 			                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#147: FILE: arch/ppc64/lib/sstep.c:101:
+			imm = (instr & 0x400)? regs->ctr: regs->link;
 			                                ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#173: FILE: arch/ppc64/lib/sstep.c:127:
+			imm = (instr & 0x10000)? 0x8002: 0xefffffffffffefffUL;
 			                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#173: FILE: arch/ppc64/lib/sstep.c:127:
+			imm = (instr & 0x10000)? 0x8002: 0xefffffffffffefffUL;
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/ppc64/xmon/xmon.c:489:
+				printf("Couldn't single-step %s instruction\n",
+				    (IS_RFID(bp->instr[0])? "rfid": "mtmsrd"));

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#231: FILE: arch/ppc64/xmon/xmon.c:489:
+				    (IS_RFID(bp->instr[0])? "rfid": "mtmsrd"));
 				                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#231: FILE: arch/ppc64/xmon/xmon.c:489:
+				    (IS_RFID(bp->instr[0])? "rfid": "mtmsrd"));
 				                                  ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#351: FILE: arch/ppc64/xmon/xmon.c:890:
+				       (IS_RFID(instr)? "rfid": "mtmsrd"));
 				                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#351: FILE: arch/ppc64/xmon/xmon.c:890:
+				       (IS_RFID(instr)? "rfid": "mtmsrd"));
 				                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#361: FILE: include/asm-ppc64/sstep.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/asm-ppc64/sstep.h:13:
+extern int emulate_step(struct pt_regs *regs, unsigned int instr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 7 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000230149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
