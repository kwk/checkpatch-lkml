WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#24: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
#	           ChangeSet	1.543   -> 1.544  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
#	arch/i386/pci/pcbios.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	arch/i386/pci/direct.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	 include/linux/pci.h	1.36    -> 1.37   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#	drivers/pci/access.c	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# 02/08/30	greg@kroah.com	1.544

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# [PATCH] PCI:  add pci_bus_* functions to replace the pci_read_* and pci_write_* functions.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# add pci_bus_* functions to replace the pci_read_* and pci_write_* functions.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/arch/i386/pci/direct.c	Fri Aug 30 15:00:36 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: arch/i386/pci/direct.c:76:
+^Ireturn __pci_conf1_read(0, bus->number, PCI_SLOT(devfn), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: arch/i386/pci/direct.c:82:
+^Ireturn __pci_conf1_write(0, bus->number, PCI_SLOT(devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: arch/i386/pci/direct.c:170:
+^Ireturn __pci_conf2_read(0, bus->number, PCI_SLOT(devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: arch/i386/pci/direct.c:176:
+^Ireturn __pci_conf2_write(0, bus->number, PCI_SLOT(devfn), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: arch/i386/pci/pcbios.c:300:
+^Ireturn __pci_bios_read(0, bus->number, PCI_SLOT(devfn), $

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#137: FILE: drivers/pci/access.c:24:
+	(struct pci_bus *bus, unsigned int devfn, int pos, type *value)	\
 	                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#175: FILE: drivers/pci/access.c:57:
+EXPORT_SYMBOL(pci_bus_read_config_byte);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#177: FILE: drivers/pci/access.c:59:
+EXPORT_SYMBOL(pci_bus_read_config_dword);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#178: FILE: drivers/pci/access.c:60:
+EXPORT_SYMBOL(pci_bus_write_config_byte);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#179: FILE: drivers/pci/access.c:61:
+EXPORT_SYMBOL(pci_bus_write_config_word);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#180: FILE: drivers/pci/access.c:62:
+EXPORT_SYMBOL(pci_bus_write_config_dword);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: include/linux/pci.h:559:
+int pci_bus_read_config_byte (struct pci_bus *bus, unsigned int devfn, int where, u8 *val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: include/linux/pci.h:560:
+int pci_bus_read_config_word (struct pci_bus *bus, unsigned int devfn, int where, u16 *val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: include/linux/pci.h:561:
+int pci_bus_read_config_dword (struct pci_bus *bus, unsigned int devfn, int where, u32 *val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#209: FILE: include/linux/pci.h:562:
+int pci_bus_write_config_byte (struct pci_bus *bus, unsigned int devfn, int where, u8 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: include/linux/pci.h:563:
+int pci_bus_write_config_word (struct pci_bus *bus, unsigned int devfn, int where, u16 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: include/linux/pci.h:564:
+int pci_bus_write_config_dword (struct pci_bus *bus, unsigned int devfn, int where, u32 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: include/linux/pci.h:568:
+	return pci_bus_read_config_byte (dev->bus, dev->devfn, where, val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#217: FILE: include/linux/pci.h:570:
+}
+static int inline pci_read_config_word(struct pci_dev *dev, int where, u16 *val)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#217: FILE: include/linux/pci.h:570:
+static int inline pci_read_config_word(struct pci_dev *dev, int where, u16 *val)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#219: FILE: include/linux/pci.h:572:
+	return pci_bus_read_config_word (dev->bus, dev->devfn, where, val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#221: FILE: include/linux/pci.h:574:
+}
+static int inline pci_read_config_dword(struct pci_dev *dev, int where, u32 *val)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#221: FILE: include/linux/pci.h:574:
+static int inline pci_read_config_dword(struct pci_dev *dev, int where, u32 *val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: include/linux/pci.h:576:
+	return pci_bus_read_config_dword (dev->bus, dev->devfn, where, val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#225: FILE: include/linux/pci.h:578:
+}
+static int inline pci_write_config_byte(struct pci_dev *dev, int where, u8 val)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#225: FILE: include/linux/pci.h:578:
+static int inline pci_write_config_byte(struct pci_dev *dev, int where, u8 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: include/linux/pci.h:580:
+	return pci_bus_write_config_byte (dev->bus, dev->devfn, where, val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#229: FILE: include/linux/pci.h:582:
+}
+static int inline pci_write_config_word(struct pci_dev *dev, int where, u16 val)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#229: FILE: include/linux/pci.h:582:
+static int inline pci_write_config_word(struct pci_dev *dev, int where, u16 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: include/linux/pci.h:584:
+	return pci_bus_write_config_word (dev->bus, dev->devfn, where, val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#233: FILE: include/linux/pci.h:586:
+}
+static int inline pci_write_config_dword(struct pci_dev *dev, int where, u32 val)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#233: FILE: include/linux/pci.h:586:
+static int inline pci_write_config_dword(struct pci_dev *dev, int where, u32 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: include/linux/pci.h:588:
+	return pci_bus_write_config_dword (dev->bus, dev->devfn, where, val);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 36 warnings, 6 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
