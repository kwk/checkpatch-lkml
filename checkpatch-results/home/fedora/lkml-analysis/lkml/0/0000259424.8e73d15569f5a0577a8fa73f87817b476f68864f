CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: fs/freevxfs/vxfs_extern.h:75:
+extern void			vxfs_put_page(struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#50: FILE: fs/freevxfs/vxfs_extern.h:75:
+extern void			vxfs_put_page(struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:INLINE: plain inline is preferred over __inline__
#60: FILE: fs/freevxfs/vxfs_subr.c:53:
+__inline__ void

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#106: FILE: include/linux/fsfilter.h:78:
+struct inode_operations *filter_c2ufiops(struct filter_fs *cache);

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#107: FILE: include/linux/fsfilter.h:79:
+struct inode_operations *filter_c2udiops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#108: FILE: include/linux/fsfilter.h:80:
+struct inode_operations *filter_c2usiops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#109: FILE: include/linux/fsfilter.h:81:
+struct file_operations *filter_c2uffops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#110: FILE: include/linux/fsfilter.h:82:
+struct file_operations *filter_c2udfops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#111: FILE: include/linux/fsfilter.h:83:
+struct file_operations *filter_c2usfops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#113: FILE: include/linux/fsfilter.h:85:
+struct inode_operations *filter_c2cfiops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#114: FILE: include/linux/fsfilter.h:86:
+struct inode_operations *filter_c2cdiops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#115: FILE: include/linux/fsfilter.h:87:
+struct inode_operations *filter_c2csiops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#116: FILE: include/linux/fsfilter.h:88:
+struct file_operations *filter_c2cffops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#117: FILE: include/linux/fsfilter.h:89:
+struct file_operations *filter_c2cdfops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#118: FILE: include/linux/fsfilter.h:90:
+struct file_operations *filter_c2csfops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#119: FILE: include/linux/fsfilter.h:91:
+struct dentry_operations *filter_c2cdops(struct filter_fs *cache);

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#120: FILE: include/linux/fsfilter.h:92:
+struct dentry_operations *filter_c2udops(struct filter_fs *cache);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct presto_file_set *' should also have an identifier name
#158: FILE: include/linux/intermezzo_fs.h:413:
+int presto_is_read_only(struct presto_file_set *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/linux/intermezzo_fs.h:426:
+extern void presto_cache_add(struct presto_cache *cache, kdev_t dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: include/linux/intermezzo_fs.h:427:
+extern void presto_cache_init_hash(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: include/linux/intermezzo_fs.h:720:
+        if (data->ioc_len > (1<<30)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: include/linux/intermezzo_fs.h:720:
+        if (data->ioc_len > (1<<30)) {$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: include/linux/intermezzo_fs.h:720:
+        if (data->ioc_len > (1<<30)) {
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: include/linux/intermezzo_fs.h:721:
+                CERROR("IZO ioctl: ioc_len larger than 1<<30\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: include/linux/intermezzo_fs.h:721:
+                CERROR("IZO ioctl: ioc_len larger than 1<<30\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: include/linux/intermezzo_fs.h:722:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: include/linux/intermezzo_fs.h:722:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: include/linux/intermezzo_fs.h:723:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: include/linux/intermezzo_fs.h:723:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: include/linux/intermezzo_fs.h:724:
+        if (data->ioc_inllen1 > (1<<30)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: include/linux/intermezzo_fs.h:724:
+        if (data->ioc_inllen1 > (1<<30)) {$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#207: FILE: include/linux/intermezzo_fs.h:724:
+        if (data->ioc_inllen1 > (1<<30)) {
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: include/linux/intermezzo_fs.h:725:
+                CERROR("IZO ioctl: ioc_inllen1 larger than 1<<30\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: include/linux/intermezzo_fs.h:725:
+                CERROR("IZO ioctl: ioc_inllen1 larger than 1<<30\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: include/linux/intermezzo_fs.h:726:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: include/linux/intermezzo_fs.h:726:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: include/linux/intermezzo_fs.h:727:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: include/linux/intermezzo_fs.h:727:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: include/linux/intermezzo_fs.h:728:
+        if (data->ioc_inllen2 > (1<<30)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: include/linux/intermezzo_fs.h:728:
+        if (data->ioc_inllen2 > (1<<30)) {$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#211: FILE: include/linux/intermezzo_fs.h:728:
+        if (data->ioc_inllen2 > (1<<30)) {
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: include/linux/intermezzo_fs.h:729:
+                CERROR("IZO ioctl: ioc_inllen2 larger than 1<<30\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: include/linux/intermezzo_fs.h:729:
+                CERROR("IZO ioctl: ioc_inllen2 larger than 1<<30\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: include/linux/intermezzo_fs.h:730:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/linux/intermezzo_fs.h:730:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: include/linux/intermezzo_fs.h:731:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: include/linux/intermezzo_fs.h:731:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: include/linux/intermezzo_fs.h:732:
+        if (data->ioc_inlbuf1 && !data->ioc_inllen1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: include/linux/intermezzo_fs.h:732:
+        if (data->ioc_inlbuf1 && !data->ioc_inllen1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: include/linux/intermezzo_fs.h:733:
+                CERROR("IZO ioctl: inlbuf1 pointer but 0 length\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: include/linux/intermezzo_fs.h:733:
+                CERROR("IZO ioctl: inlbuf1 pointer but 0 length\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: include/linux/intermezzo_fs.h:734:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/intermezzo_fs.h:734:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: include/linux/intermezzo_fs.h:735:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: include/linux/intermezzo_fs.h:735:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/intermezzo_fs.h:736:
+        if (data->ioc_inlbuf2 && !data->ioc_inllen2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/intermezzo_fs.h:736:
+        if (data->ioc_inlbuf2 && !data->ioc_inllen2) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/linux/intermezzo_fs.h:737:
+                CERROR("IZO ioctl: inlbuf2 pointer but 0 length\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/linux/intermezzo_fs.h:737:
+                CERROR("IZO ioctl: inlbuf2 pointer but 0 length\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: include/linux/intermezzo_fs.h:738:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/linux/intermezzo_fs.h:738:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: include/linux/intermezzo_fs.h:739:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: include/linux/intermezzo_fs.h:739:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: include/linux/intermezzo_fs.h:740:
+        if (data->ioc_pbuf1 && !data->ioc_plen1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: include/linux/intermezzo_fs.h:740:
+        if (data->ioc_pbuf1 && !data->ioc_plen1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: include/linux/intermezzo_fs.h:741:
+                CERROR("IZO ioctl: pbuf1 pointer but 0 length\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: include/linux/intermezzo_fs.h:741:
+                CERROR("IZO ioctl: pbuf1 pointer but 0 length\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: include/linux/intermezzo_fs.h:742:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: include/linux/intermezzo_fs.h:742:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: include/linux/intermezzo_fs.h:743:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: include/linux/intermezzo_fs.h:743:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: include/linux/intermezzo_fs.h:744:
+        if (data->ioc_pbuf2 && !data->ioc_plen2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: include/linux/intermezzo_fs.h:744:
+        if (data->ioc_pbuf2 && !data->ioc_plen2) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: include/linux/intermezzo_fs.h:745:
+                CERROR("IZO ioctl: pbuf2 pointer but 0 length\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: include/linux/intermezzo_fs.h:745:
+                CERROR("IZO ioctl: pbuf2 pointer but 0 length\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: include/linux/intermezzo_fs.h:746:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: include/linux/intermezzo_fs.h:746:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: include/linux/intermezzo_fs.h:747:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: include/linux/intermezzo_fs.h:747:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: include/linux/intermezzo_fs.h:748:
+        if (izo_ioctl_packlen(data) != data->ioc_len ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: include/linux/intermezzo_fs.h:748:
+        if (izo_ioctl_packlen(data) != data->ioc_len ) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#231: FILE: include/linux/intermezzo_fs.h:748:
+        if (izo_ioctl_packlen(data) != data->ioc_len ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: include/linux/intermezzo_fs.h:749:
+                CERROR("IZO ioctl: packlen exceeds ioc_len\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: include/linux/intermezzo_fs.h:749:
+                CERROR("IZO ioctl: packlen exceeds ioc_len\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: include/linux/intermezzo_fs.h:750:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: include/linux/intermezzo_fs.h:750:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: include/linux/intermezzo_fs.h:751:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: include/linux/intermezzo_fs.h:751:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: include/linux/intermezzo_fs.h:752:
+        if (data->ioc_inllen1 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: include/linux/intermezzo_fs.h:752:
+        if (data->ioc_inllen1 &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: include/linux/intermezzo_fs.h:753:
+            data->ioc_bulk[data->ioc_inllen1 - 1] != '\0') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: include/linux/intermezzo_fs.h:753:
+            data->ioc_bulk[data->ioc_inllen1 - 1] != '\0') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: include/linux/intermezzo_fs.h:754:
+                CERROR("IZO ioctl: inlbuf1 not 0 terminated\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: include/linux/intermezzo_fs.h:754:
+                CERROR("IZO ioctl: inlbuf1 not 0 terminated\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: include/linux/intermezzo_fs.h:755:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: include/linux/intermezzo_fs.h:755:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: include/linux/intermezzo_fs.h:756:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/linux/intermezzo_fs.h:756:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: include/linux/intermezzo_fs.h:757:
+        if (data->ioc_inllen2 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: include/linux/intermezzo_fs.h:757:
+        if (data->ioc_inllen2 &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: include/linux/intermezzo_fs.h:758:
+            data->ioc_bulk[size_round(data->ioc_inllen1) + data->ioc_inllen2$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: include/linux/intermezzo_fs.h:758:
+            data->ioc_bulk[size_round(data->ioc_inllen1) + data->ioc_inllen2$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: include/linux/intermezzo_fs.h:759:
+                           - 1] != '\0') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: include/linux/intermezzo_fs.h:759:
+                           - 1] != '\0') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: include/linux/intermezzo_fs.h:760:
+                CERROR("IZO ioctl: inlbuf2 not 0 terminated\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: include/linux/intermezzo_fs.h:760:
+                CERROR("IZO ioctl: inlbuf2 not 0 terminated\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: include/linux/intermezzo_fs.h:761:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/linux/intermezzo_fs.h:761:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/linux/intermezzo_fs.h:762:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/linux/intermezzo_fs.h:762:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: include/linux/intermezzo_fs.h:763:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: include/linux/intermezzo_fs.h:763:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: fs/intermezzo/cache.c:83:
+        int len = sizeof(struct izo_ioctl_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: fs/intermezzo/cache.c:83:
+        int len = sizeof(struct izo_ioctl_data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: fs/intermezzo/cache.c:84:
+        len += size_round(data->ioc_inllen1);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: fs/intermezzo/cache.c:84:
+        int len = sizeof(struct izo_ioctl_data);
+        len += size_round(data->ioc_inllen1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: fs/intermezzo/cache.c:84:
+        len += size_round(data->ioc_inllen1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: fs/intermezzo/cache.c:85:
+        len += size_round(data->ioc_inllen2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: fs/intermezzo/cache.c:85:
+        len += size_round(data->ioc_inllen2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: fs/intermezzo/cache.c:86:
+        return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: fs/intermezzo/cache.c:86:
+        return len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: fs/intermezzo/file.c:84:
+                if (dd->remote_ino == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: fs/intermezzo/file.c:84:
+                if (dd->remote_ino == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: fs/intermezzo/file.c:85:
+                        CERROR("get_fileid failed %d, ino: %Lx, fetching by name\n", rc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: fs/intermezzo/file.c:85:
+                        CERROR("get_fileid failed %d, ino: %Lx, fetching by name\n", rc,$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#351: FILE: fs/intermezzo/file.c:85:
+                        CERROR("get_fileid failed %d, ino: %Lx, fetching by name\n", rc,

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: fs/intermezzo/file.c:86:
+                               dd->remote_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: fs/intermezzo/file.c:86:
+                               dd->remote_ino);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: fs/intermezzo/file.c:93:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: fs/intermezzo/file.c:93:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: fs/intermezzo/methods.c:258:
+        return ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: fs/intermezzo/methods.c:258:
+        return ops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: fs/intermezzo/journal_xfs.c:60:
+        return sbp->sb_fdblocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: fs/intermezzo/journal_xfs.c:60:
+        return sbp->sb_fdblocks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: fs/intermezzo/psdev.c:567:
+        /* Remove potential datarace possibility*/$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: fs/intermezzo/psdev.c:568:
+        if ( async ) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: fs/intermezzo/psdev.c:568:
+        if ( async ) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/intermezzo/psdev.c:568:
+        if ( async ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#396: FILE: fs/intermezzo/psdev.c:568:
+        if ( async ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#396: FILE: fs/intermezzo/psdev.c:568:
+        if ( async ) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: fs/intermezzo/psdev.c:569:
+                req->rq_flags = REQ_ASYNC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: fs/intermezzo/psdev.c:569:
+                req->rq_flags = REQ_ASYNC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: fs/intermezzo/psdev.c:583:
+                /* req->rq_flags = REQ_ASYNC;*/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: fs/intermezzo/psdev.c:654:
+        PRESTO_FREE(buffer,*size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: fs/intermezzo/psdev.c:654:
+        PRESTO_FREE(buffer,*size);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#415: FILE: fs/intermezzo/psdev.c:654:
+        PRESTO_FREE(buffer,*size);
                           ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#415: FILE: fs/intermezzo/psdev.c:654:
+        PRESTO_FREE(buffer,*size);
                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#457: FILE: include/linux/reiserfs_fs.h:1774:
+extern void copy_item_head(struct item_head * p_v_to,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#457: FILE: include/linux/reiserfs_fs.h:1774:
+extern void copy_item_head(struct item_head * p_v_to,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: include/linux/reiserfs_fs.h:1775:
+extern void copy_item_head(struct item_head * p_v_to,
 								  const struct item_head * p_v_from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#462: FILE: include/linux/reiserfs_fs.h:1778:
+extern int comp_keys (const struct key * le_key,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: include/linux/reiserfs_fs.h:1778:
+extern int comp_keys (const struct key * le_key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: include/linux/reiserfs_fs.h:1778:
+extern int comp_keys (const struct key * le_key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: include/linux/reiserfs_fs.h:1779:
+extern int comp_keys (const struct key * le_key,
 			     const struct cpu_key * cpu_key);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#465: FILE: include/linux/reiserfs_fs.h:1780:
+extern int  comp_short_keys (const struct key * le_key,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: include/linux/reiserfs_fs.h:1780:
+extern int  comp_short_keys (const struct key * le_key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: include/linux/reiserfs_fs.h:1780:
+extern int  comp_short_keys (const struct key * le_key,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: include/linux/reiserfs_fs.h:1781:
+extern int  comp_short_keys (const struct key * le_key,
 				    const struct cpu_key * cpu_key);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#468: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#468: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#468: FILE: include/linux/reiserfs_fs.h:1782:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#473: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#473: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#473: FILE: include/linux/reiserfs_fs.h:1785:
+extern  int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#474: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#474: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#474: FILE: include/linux/reiserfs_fs.h:1786:
+extern int comp_short_cpu_keys (const struct cpu_key *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: include/linux/reiserfs_fs.h:1787:
+extern int comp_short_cpu_keys (const struct cpu_key *,
 				       const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#477: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpu_key *' should also have an identifier name
#477: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#477: FILE: include/linux/reiserfs_fs.h:1788:
+extern void cpu_key2cpu_key (struct cpu_key *, const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#482: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#482: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#482: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#482: FILE: include/linux/reiserfs_fs.h:1791:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#483: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#483: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#483: FILE: include/linux/reiserfs_fs.h:1792:
+extern int comp_short_le_keys (const struct key *, const struct key *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: include/linux/reiserfs_fs.h:1827:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#492: FILE: include/linux/reiserfs_fs.h:1827:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#492: FILE: include/linux/reiserfs_fs.h:1827:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: include/linux/reiserfs_fs.h:1905:
+void set_de_name_and_namelen (struct reiserfs_dir_entry * de);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: include/linux/reiserfs_fs.h:1905:
+void set_de_name_and_namelen (struct reiserfs_dir_entry * de);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#510: FILE: include/linux/reiserfs_fs.h:2053:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: include/linux/reiserfs_fs.h:2053:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: include/linux/reiserfs_fs.h:2054:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb,
 					struct buffer_head * bh, int flag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#521: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#521: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#521: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#521: FILE: include/linux/fs.h:1531:
+extern ssize_t do_generic_direct_read(struct file *, char *, size_t, loff_t *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 101 warnings, 22 checks, 427 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
