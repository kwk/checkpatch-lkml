WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#70: 
Signed-off-by:Shaun Pereira <spereira@tusc.com.au>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: include/net/x25.h:104:
+#define X25_MAX_FAC_LEN ^I60$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: include/net/x25.h:107:
+#define X25_FAC_CALLING_AE ^I0xCB$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: include/net/x25.h:108:
+#define X25_FAC_CALLED_AE ^I0xC9$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: include/net/x25.h:110:
+#define X25_MARKER ^I^I0x00$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: include/net/x25.h:111:
+#define X25_DTE_SERVICES ^I0x0F$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: include/net/x25.h:112:
+#define X25_MAX_AE_LEN ^I^I32$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#169: FILE: include/net/x25.h:190:
x25_facilities *, unsigned long *);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/net/x25.h:191:
+extern int x25_parse_facilities(struct sk_buff *, struct x25_facilities

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#174: FILE: include/net/x25.h:191:
+extern int x25_parse_facilities(struct sk_buff *, struct x25_facilities

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_facilities' should also have an identifier name
#174: FILE: include/net/x25.h:191:
+extern int x25_parse_facilities(struct sk_buff *, struct x25_facilities

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_dte_facilities *' should also have an identifier name
#174: FILE: include/net/x25.h:191:
+extern int x25_parse_facilities(struct sk_buff *, struct x25_facilities

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#174: FILE: include/net/x25.h:191:
+extern int x25_parse_facilities(struct sk_buff *, struct x25_facilities

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: include/net/x25.h:192:
+extern int x25_create_facilities(unsigned char *, struct x25_facilities

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#176: FILE: include/net/x25.h:192:
+extern int x25_create_facilities(unsigned char *, struct x25_facilities

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_facilities' should also have an identifier name
#176: FILE: include/net/x25.h:192:
+extern int x25_create_facilities(unsigned char *, struct x25_facilities

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_dte_facilities *' should also have an identifier name
#176: FILE: include/net/x25.h:192:
+extern int x25_create_facilities(unsigned char *, struct x25_facilities

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#176: FILE: include/net/x25.h:192:
+extern int x25_create_facilities(unsigned char *, struct x25_facilities

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/net/x25.h:193:
+extern int x25_negotiate_facilities(struct sk_buff *, struct sock *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#178: FILE: include/net/x25.h:193:
+extern int x25_negotiate_facilities(struct sk_buff *, struct sock *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sock *' should also have an identifier name
#178: FILE: include/net/x25.h:193:
+extern int x25_negotiate_facilities(struct sk_buff *, struct sock *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct x25_dte_facilities *' should also have an identifier name
#178: FILE: include/net/x25.h:193:
+extern int x25_negotiate_facilities(struct sk_buff *, struct sock *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: include/net/x25.h:194:
+extern int x25_negotiate_facilities(struct sk_buff *, struct sock *,
 extern void x25_limit_facilities(struct x25_facilities *, struct

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: include/net/x25.h:194:
+extern int x25_negotiate_facilities(struct sk_buff *, struct sock *,
x25_neigh *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: net/x25/af_x25.c:527:
+ ^Ix25->dte_facilities.calling_len = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: net/x25/af_x25.c:527:
+ ^Ix25->dte_facilities.calling_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: net/x25/af_x25.c:527:
+ ^Ix25->dte_facilities.calling_len = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: net/x25/af_x25.c:528:
+ ^Ix25->dte_facilities.called_len = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: net/x25/af_x25.c:528:
+ ^Ix25->dte_facilities.called_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: net/x25/af_x25.c:528:
+ ^Ix25->dte_facilities.called_len = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: net/x25/af_x25.c:529:
+ ^Imemset(x25->dte_facilities.called_ae, '\0',$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: net/x25/af_x25.c:529:
+ ^Imemset(x25->dte_facilities.called_ae, '\0',$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: net/x25/af_x25.c:529:
+ ^Imemset(x25->dte_facilities.called_ae, '\0',$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: net/x25/af_x25.c:530:
+ ^Isizeof(x25->dte_facilities.called_ae));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: net/x25/af_x25.c:530:
+ ^Isizeof(x25->dte_facilities.called_ae));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: net/x25/af_x25.c:530:
+ 	memset(x25->dte_facilities.called_ae, '\0',
+ 	sizeof(x25->dte_facilities.called_ae));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: net/x25/af_x25.c:530:
+ ^Isizeof(x25->dte_facilities.called_ae));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: net/x25/af_x25.c:531:
+ ^Imemset(x25->dte_facilities.calling_ae, '\0',$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#198: FILE: net/x25/af_x25.c:531:
+ ^Imemset(x25->dte_facilities.calling_ae, '\0',$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: net/x25/af_x25.c:531:
+ ^Imemset(x25->dte_facilities.calling_ae, '\0',$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: net/x25/af_x25.c:532:
+ ^Isizeof(x25->dte_facilities.calling_ae));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: net/x25/af_x25.c:532:
+ ^Isizeof(x25->dte_facilities.calling_ae));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: net/x25/af_x25.c:532:
+ 	memset(x25->dte_facilities.calling_ae, '\0',
+ 	sizeof(x25->dte_facilities.calling_ae));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: net/x25/af_x25.c:532:
+ ^Isizeof(x25->dte_facilities.calling_ae));$

WARNING:TABSTOP: Statements should start on a tabstop
#225: FILE: net/x25/af_x25.c:887:
+	 if ((len = x25_negotiate_facilities(skb, sk, &facilities,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: net/x25/af_x25.c:887:
+	 if ((len = x25_negotiate_facilities(skb, sk, &facilities,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: net/x25/af_x25.c:888:
+	 if ((len = x25_negotiate_facilities(skb, sk, &facilities,
+		 &dte_facilities)) == -1)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#234: FILE: net/x25/af_x25.c:919:
+	makex25->dte_facilities= dte_facilities;
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: net/x25/af_x25.c:1332:
+ ^I^I^Irc = copy_to_user(argp, &x25->dte_facilities,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: net/x25/af_x25.c:1332:
+ ^I^I^Irc = copy_to_user(argp, &x25->dte_facilities,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: net/x25/af_x25.c:1332:
+ ^I^I^Irc = copy_to_user(argp, &x25->dte_facilities,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: net/x25/af_x25.c:1333:
+ ^I^I^Isizeof(x25->dte_facilities)) ? -EFAULT : 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#249: FILE: net/x25/af_x25.c:1333:
+ ^I^I^Isizeof(x25->dte_facilities)) ? -EFAULT : 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: net/x25/af_x25.c:1333:
+ 			rc = copy_to_user(argp, &x25->dte_facilities,
+ 			sizeof(x25->dte_facilities)) ? -EFAULT : 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: net/x25/af_x25.c:1333:
+ ^I^I^Isizeof(x25->dte_facilities)) ? -EFAULT : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: net/x25/af_x25.c:1334:
+ ^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: net/x25/af_x25.c:1334:
+ ^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: net/x25/af_x25.c:1334:
+ ^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: net/x25/af_x25.c:1335:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: net/x25/af_x25.c:1335:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: net/x25/af_x25.c:1335:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: net/x25/af_x25.c:1337:
+^I ^Icase SIOCX25SDTEFACILITIES: {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: net/x25/af_x25.c:1337:
+^I ^Icase SIOCX25SDTEFACILITIES: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: net/x25/af_x25.c:1338:
+^I ^I^Istruct x25_dte_facilities dtefacs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: net/x25/af_x25.c:1338:
+^I ^I^Istruct x25_dte_facilities dtefacs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: net/x25/af_x25.c:1339:
+^I ^I^Irc = -EFAULT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: net/x25/af_x25.c:1339:
+^I ^I^Irc = -EFAULT;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: net/x25/af_x25.c:1339:
+	 		struct x25_dte_facilities dtefacs;
+	 		rc = -EFAULT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: net/x25/af_x25.c:1340:
+^I^I ^Iif (copy_from_user(&dtefacs, argp, sizeof(dtefacs)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: net/x25/af_x25.c:1340:
+^I^I ^Iif (copy_from_user(&dtefacs, argp, sizeof(dtefacs)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#256: FILE: net/x25/af_x25.c:1340:
+		 	if (copy_from_user(&dtefacs, argp, sizeof(dtefacs)))
+			break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#259: FILE: net/x25/af_x25.c:1343:
+			if (sk->sk_state != TCP_LISTEN &&
[...]
+			break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: net/x25/af_x25.c:1344:
+			if (sk->sk_state != TCP_LISTEN &&
+			sk->sk_state != TCP_CLOSE)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#262: FILE: net/x25/af_x25.c:1346:
+			if (dtefacs.calling_len > X25_MAX_AE_LEN)
+			break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#264: FILE: net/x25/af_x25.c:1348:
+			if (dtefacs.calling_ae == NULL)
+			break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dtefacs.calling_ae"
#264: FILE: net/x25/af_x25.c:1348:
+			if (dtefacs.calling_ae == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#266: FILE: net/x25/af_x25.c:1350:
+			if (dtefacs.called_len > X25_MAX_AE_LEN)
+			break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#268: FILE: net/x25/af_x25.c:1352:
+			if (dtefacs.called_ae == NULL)
+			break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dtefacs.called_ae"
#268: FILE: net/x25/af_x25.c:1352:
+			if (dtefacs.called_ae == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: net/x25/x25_facilities.c:36:
+ struct x25_dte_facilities *dte_facs,$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#305: FILE: net/x25/x25_facilities.c:45:
+ /* The kernel knows which facilities were set on an incoming call
+ * but currently this information is not available to userspace.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#335: FILE: net/x25/x25_facilities.c:130:
+		switch (*p) {
+	 		case X25_FAC_CALLING_AE:
[...]
+			case X25_FAC_CALLED_AE:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: net/x25/x25_facilities.c:131:
+^I ^I^Icase X25_FAC_CALLING_AE:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#336: FILE: net/x25/x25_facilities.c:131:
+^I ^I^Icase X25_FAC_CALLING_AE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: net/x25/x25_facilities.c:132:
+^I ^I^I^Iif (p[1] > 33)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: net/x25/x25_facilities.c:132:
+^I ^I^I^Iif (p[1] > 33)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#337: FILE: net/x25/x25_facilities.c:132:
+	 			if (p[1] > 33)
+				break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#345: FILE: net/x25/x25_facilities.c:140:
+				if (p[1] > 33)
+				break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#353: FILE: net/x25/x25_facilities.c:148:
+				printk(KERN_DEBUG "X.25: unknown facility %02X,"

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: net/x25/x25_facilities.c:149:
+				printk(KERN_DEBUG "X.25: unknown facility %02X,"
+				"length %d, values %02X, %02X, %02X, %02X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: net/x25/x25_facilities.c:168:
+ struct x25_dte_facilities *dte_facs,$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#381: FILE: net/x25/x25_facilities.c:215:
+		unsigned bytecount = (dte_facs->calling_len % 2) ?

WARNING:LINE_SPACING: Missing a blank line after declarations
#382: FILE: net/x25/x25_facilities.c:216:
+		unsigned bytecount = (dte_facs->calling_len % 2) ?
+		dte_facs->calling_len / 2 + 1 :

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#388: FILE: net/x25/x25_facilities.c:222:
+		p+=bytecount;
 		 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#392: FILE: net/x25/x25_facilities.c:226:
+		unsigned bytecount = (dte_facs->called_len % 2) ?

WARNING:LINE_SPACING: Missing a blank line after declarations
#393: FILE: net/x25/x25_facilities.c:227:
+		unsigned bytecount = (dte_facs->called_len % 2) ?
+		dte_facs->called_len / 2 + 1 :

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#399: FILE: net/x25/x25_facilities.c:233:
+		p+=bytecount;
 		 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: net/x25/x25_subr.c:194:
+^I^I^I^I^I^I ^I&x25->dte_facilities,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#451: FILE: net/x25/x25_subr.c:194:
+^I^I^I^I^I^I ^I&x25->dte_facilities,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: net/x25/x25_subr.c:195:
+^I^I^I^I^I     ^I^Ix25->neighbour->global_facil_mask);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#452: FILE: net/x25/x25_subr.c:195:
+^I^I^I^I^I     ^I^Ix25->neighbour->global_facil_mask);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 65 warnings, 12 checks, 332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
