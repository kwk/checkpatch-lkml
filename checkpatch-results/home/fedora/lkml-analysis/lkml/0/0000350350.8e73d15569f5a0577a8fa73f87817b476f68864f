WARNING:TYPO_SPELLING: 'mecanism' may be misspelled - perhaps 'mechanism'?
#12: 
Subject: [PATCH] Framebuffer: client notification mecanism & PM
                                                  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'mecanism' may be misspelled - perhaps 'mechanism'?
#28: 
This patch adds a mecanism for in-kernel "clients" of a framebuffer
                  ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN linux-2.5/drivers/video/console/fbcon.c linuxppc-2.5-benh/drivers/video/console/fbcon.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#212: FILE: drivers/video/fbmem.c:146:
+extern int ibmlcdfb_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#213: FILE: drivers/video/fbmem.c:147:
+extern int ibmlcdfb_setup(char*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#213: FILE: drivers/video/fbmem.c:147:
+extern int ibmlcdfb_setup(char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#213: FILE: drivers/video/fbmem.c:147:
+extern int ibmlcdfb_setup(char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!client"
#270: FILE: drivers/video/fbmem.c:1404:
+	if (client == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/video/fbmem.c:1410:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/video/fbmem.c:1422:
+^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#303: FILE: drivers/video/fbmem.c:1437:
+#define make_fb_client_call(name) \
+int fb_clients_call_##name(struct fb_info *info) \
+{ \
+	struct fb_client *client = NULL; \
+	struct list_head *pos; \
+\
+	down(&fb_clients_lock); \
+	list_for_each(pos, &fb_clients) { \
+		client = list_entry(pos, struct fb_client, link); \
+		if (try_module_get(client->ops->owner)) { \
+			if (client->ops->name) \
+				client->ops->name(client->data, info); \
+			module_put(client->ops->owner); \
+		} \
+	} \
+	up(&fb_clients_lock); \
+	return 0; \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#303: FILE: drivers/video/fbmem.c:1437:
+#define make_fb_client_call(name) \
+int fb_clients_call_##name(struct fb_info *info) \
+{ \
+	struct fb_client *client = NULL; \
+	struct list_head *pos; \
+\
+	down(&fb_clients_lock); \
+	list_for_each(pos, &fb_clients) { \
+		client = list_entry(pos, struct fb_client, link); \
+		if (try_module_get(client->ops->owner)) { \
+			if (client->ops->name) \
+				client->ops->name(client->data, info); \
+			module_put(client->ops->owner); \
+		} \
+	} \
+	up(&fb_clients_lock); \
+	return 0; \
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#334: FILE: drivers/video/fbmem.c:1477:
+EXPORT_SYMBOL(register_fb_client);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#335: FILE: drivers/video/fbmem.c:1478:
+EXPORT_SYMBOL(unregister_fb_client);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#336: FILE: drivers/video/fbmem.c:1479:
+EXPORT_SYMBOL(fb_clients_call_mode_changed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#337: FILE: drivers/video/fbmem.c:1480:
+EXPORT_SYMBOL(fb_clients_call_suspended);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#338: FILE: drivers/video/fbmem.c:1481:
+EXPORT_SYMBOL(fb_clients_call_resumed);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: include/linux/fb.h:362:
+^I * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: include/linux/fb.h:368:
+^I * $

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#363: FILE: include/linux/fb.h:370:
+	 * semaphore explicitely (call acquire_console_sem()) as it
 	             ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: include/linux/fb.h:372:
+^I * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: include/linux/fb.h:373:
+^I */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: include/linux/fb.h:374:
+struct fb_client_ops {^I$

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#372: FILE: include/linux/fb.h:379:
+	/* The device is beeing suspended, do not access from
 	                 ^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: include/linux/fb.h:440:
+   int suspended;^I^I^I/* Is this currently suspended ? */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: include/linux/fb.h:454:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: include/linux/fb.h:454:
+   $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/fb.h:622:
+extern int fb_set_suspend(struct fb_info *info, int suspended);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: include/linux/fb.h:628:
+extern int register_fb_client(struct fb_client_ops *ops, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: include/linux/fb.h:629:
+extern int unregister_fb_client(struct fb_client_ops *ops);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#421: FILE: include/linux/fb.h:630:
+extern int fb_clients_call_mode_changed(struct fb_info *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: include/linux/fb.h:631:
+extern int fb_clients_call_suspended(struct fb_info *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: include/linux/fb.h:632:
+extern int fb_clients_call_resumed(struct fb_info *info);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350350.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 15 warnings, 9 checks, 350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000350350.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
