WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: acrypto/crypto_lb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#36: FILE: acrypto/crypto_lb.c:2:
+ * ^Icrypto_lb.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#39: FILE: acrypto/crypto_lb.c:5:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#52: FILE: acrypto/crypto_lb.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#53: FILE: acrypto/crypto_lb.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#74: FILE: acrypto/crypto_lb.c:40:
+static int lb_num = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#81: FILE: acrypto/crypto_lb.c:47:
+extern struct list_head *crypto_device_list;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#82: FILE: acrypto/crypto_lb.c:48:
+extern spinlock_t *crypto_device_lock;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: acrypto/crypto_lb.c:50:
+extern int force_lb_remove;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#85: FILE: acrypto/crypto_lb.c:51:
+extern struct crypto_device main_crypto_device;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l->crypto_device_list"
#89: FILE: acrypto/crypto_lb.c:55:
+	return (l->crypto_device_list != NULL && l->crypto_device_lock != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "l->crypto_device_lock"
#89: FILE: acrypto/crypto_lb.c:55:
+	return (l->crypto_device_list != NULL && l->crypto_device_lock != NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#118: FILE: acrypto/crypto_lb.c:84:
+	if (c) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#122: FILE: acrypto/crypto_lb.c:88:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#135: FILE: acrypto/crypto_lb.c:101:
+	if (c) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#139: FILE: acrypto/crypto_lb.c:105:
+	} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: acrypto/crypto_lb.c:140:
+^I.name ^I^I= "crypto_lb",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: acrypto/crypto_lb.c:141:
+^I.class_release ^I= crypto_lb_class_release,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: acrypto/crypto_lb.c:142:
+^I.release ^I= crypto_lb_class_release_device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: acrypto/crypto_lb.c:146:
+^I.name ^I^I= "crypto_lb",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: acrypto/crypto_lb.c:147:
+^I.match ^I^I= crypto_lb_match$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: acrypto/crypto_lb.c:151:
+^I.name ^I^I= "crypto_lb_driver",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: acrypto/crypto_lb.c:152:
+^I.bus ^I^I= &crypto_lb_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: acrypto/crypto_lb.c:153:
+^I.probe ^I^I= crypto_lb_probe,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: acrypto/crypto_lb.c:154:
+^I.remove ^I= crypto_lb_remove,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: acrypto/crypto_lb.c:158:
+^I.parent ^I= NULL,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: acrypto/crypto_lb.c:159:
+^I.bus ^I^I= &crypto_lb_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: acrypto/crypto_lb.c:160:
+^I.bus_id ^I= "crypto load balancer",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: acrypto/crypto_lb.c:161:
+^I.driver ^I= &crypto_lb_driver,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: acrypto/crypto_lb.c:162:
+^I.release ^I= &crypto_lb_release$

WARNING:TYPO_SPELLING: 'regitered' may be misspelled - perhaps 'registered'?
#228: FILE: acrypto/crypto_lb.c:194:
+		off = sprintf(buf, "No load balancers regitered yet.");
 		                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#234: FILE: acrypto/crypto_lb.c:200:
+}
+static ssize_t current_store(struct class_device *dev, const char *buf, size_t count)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#291: FILE: acrypto/crypto_lb.c:257:
+struct crypto_device *crypto_lb_find_device(struct crypto_session_initializer *ci, struct crypto_data *data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#358: FILE: acrypto/crypto_lb.c:324:
+		dprintk(KERN_ERR "Failed to register crypto load balancer class device %s: err=%d.\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#369: FILE: acrypto/crypto_lb.c:335:
+
+}

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#429: FILE: acrypto/crypto_lb.c:395:
+		dprintk(KERN_INFO "You are removing crypto load balancer %s which is current and default.\n"

WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#431: FILE: acrypto/crypto_lb.c:397:
+			"Removing %s delayed untill new load balancer is registered.\n",
 			                     ^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#431: FILE: acrypto/crypto_lb.c:397:
+			"There is no other crypto load balancers. "
+			"Removing %s delayed untill new load balancer is registered.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#470: FILE: acrypto/crypto_lb.c:436:
+	dprintk(KERN_INFO "%s: Calling callback for session %llu [%llu] flags=%x, "
+		"op=%04u, type=%04x, mode=%04x, priority=%04x\n", __func__,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#486: FILE: acrypto/crypto_lb.c:452:
+		return;
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: acrypto/crypto_lb.c:455:
+^I^I * in it's callback - it means that crypto consumer wants $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: acrypto/crypto_lb.c:456:
+^I^I * this session to be processed further, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: acrypto/crypto_lb.c:520:
+			dprintk("session %llu [%llu]: flags=%x, route_num=%d, %s,%s,%s,%s.\n",
+			     s->ci.id, s->ci.dev_id, s->ci.flags,

WARNING:LONG_LINE_STRING: line length of 106 exceeds 100 columns
#559: FILE: acrypto/crypto_lb.c:525:
+			     (session_is_processed(s)) ? "is being processed" : "is not being processed");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: acrypto/crypto_lb.c:545:
+					dprintk("%s: going to remove session %llu [%llu].\n",
+					     __func__, s->ci.id, s->ci.dev_id);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#664: FILE: acrypto/crypto_lb.c:630:
+EXPORT_SYMBOL_GPL(crypto_lb_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#665: FILE: acrypto/crypto_lb.c:631:
+EXPORT_SYMBOL_GPL(crypto_lb_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#666: FILE: acrypto/crypto_lb.c:632:
+EXPORT_SYMBOL_GPL(crypto_lb_rehash);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#667: FILE: acrypto/crypto_lb.c:633:
+EXPORT_SYMBOL_GPL(crypto_lb_find_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#668: FILE: acrypto/crypto_lb.c:634:
+EXPORT_SYMBOL_GPL(crypto_wake_lb);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 36 warnings, 10 checks, 634 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201292.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
