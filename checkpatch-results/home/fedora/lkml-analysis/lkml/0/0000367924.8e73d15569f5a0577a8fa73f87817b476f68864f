WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
On Sat, May 24, 2003 at 01:05:20PM -0700, several people wrote words to the effect of:

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#135: FILE: drivers/char/agp/agpgart_be.c:4040:
+	volatile u32 *aperture;

CHECK:SPACING: No space is necessary after a cast
#153: FILE: drivers/char/agp/agpgart_be.c:4058:
+				agp_bridge.current_size = (void *) (values + i);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: drivers/char/agp/agpgart_be.c:4082:
+	for(iorr_addr = 0; iorr_addr < AMD_K7_NUM_IORR; iorr_addr++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/char/agp/agpgart_be.c:4092:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/agp/agpgart_be.c:4099:
+    base_hi = 0x0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/agp/agpgart_be.c:4100:
+    base_lo = (base & ~0xfff) | 0x18;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/agp/agpgart_be.c:4101:
+    mask_hi = 0xf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/char/agp/agpgart_be.c:4102:
+    mask_lo = ((~(size - 1)) & 0xfffff000) | 0x800;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/agp/agpgart_be.c:4103:
+    wrmsr(IORR_BASE0 + 2 * iorr_addr, base_lo, base_hi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/char/agp/agpgart_be.c:4104:
+    wrmsr(IORR_MASK0 + 2 * iorr_addr, mask_lo, mask_hi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/char/agp/agpgart_be.c:4106:
+    rdmsr(SYSCFG, sys_lo, sys_hi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/agp/agpgart_be.c:4107:
+    sys_lo |= 0x00100000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/char/agp/agpgart_be.c:4108:
+    wrmsr(SYSCFG, sys_lo, sys_hi);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/char/agp/agpgart_be.c:4124:
+	pci_write_config_byte(agp_bridge.dev, NVIDIA_0_APSIZE,
+		current_size->size_value);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#230: FILE: drivers/char/agp/agpgart_be.c:4135:
+	if (0 != (rc = nvidia_init_iorr(apbase, current_size->size * 1024 * 1024)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: drivers/char/agp/agpgart_be.c:4150:
+	for(i = 0; i < 8; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/char/agp/agpgart_be.c:4152:
+		pci_write_config_dword(nvidia_private.dev_2, NVIDIA_2_ATTBASE(i),
+			(agp_bridge.gatt_bus_addr + (i % num_dirs) * 64 * 1024) | 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/char/agp/agpgart_be.c:4158:
+	pci_write_config_dword(nvidia_private.dev_2, NVIDIA_2_GARTCTRL,
+		temp | 0x11);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/char/agp/agpgart_be.c:4163:
+	pci_write_config_dword(agp_bridge.dev, NVIDIA_0_APSIZE,
+		temp | 0x100);

CHECK:SPACING: No space is necessary after a cast
#262: FILE: drivers/char/agp/agpgart_be.c:4167:
+		(volatile u32 *) ioremap(apbase, 33 * PAGE_SIZE);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#262: FILE: drivers/char/agp/agpgart_be.c:4167:
+		(volatile u32 *) ioremap(apbase, 33 * PAGE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/char/agp/agpgart_be.c:4180:
+	pci_write_config_dword(agp_bridge.dev, NVIDIA_0_APSIZE,
+		temp & ~(0x100));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/char/agp/agpgart_be.c:4185:
+	pci_write_config_dword(nvidia_private.dev_2, NVIDIA_2_GARTCTRL,
+		temp & ~(0x11));

CHECK:SPACING: No space is necessary after a cast
#283: FILE: drivers/char/agp/agpgart_be.c:4188:
+	iounmap((void *) nvidia_private.aperture);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/char/agp/agpgart_be.c:4193:
+	pci_write_config_byte(agp_bridge.dev, NVIDIA_0_APSIZE,
+		previous_size->size_value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/char/agp/agpgart_be.c:4197:
+	nvidia_init_iorr(agp_bridge.gart_bus_addr,
+		previous_size->size * 1024 * 1024);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#295: FILE: drivers/char/agp/agpgart_be.c:4200:
+static void nvidia_tlbflush(agp_memory * mem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#302: FILE: drivers/char/agp/agpgart_be.c:4207:
+	switch(agp_bridge.type) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#319: FILE: drivers/char/agp/agpgart_be.c:4224:
+		end = jiffies + 3*HZ;
 		                 ^

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#322: FILE: drivers/char/agp/agpgart_be.c:4227:
+			if ((signed)(end - jiffies) <= 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#322: FILE: drivers/char/agp/agpgart_be.c:4227:
+			if ((signed)(end - jiffies) <= 0) {
+				printk(KERN_ERR "TLB flush took more than 3 seconds.\n");
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#323: FILE: drivers/char/agp/agpgart_be.c:4228:
+				printk(KERN_ERR "TLB flush took more than 3 seconds.\n");

ERROR:SPACING: space required before the open parenthesis '('
#329: FILE: drivers/char/agp/agpgart_be.c:4234:
+	for(i = 0; i < 32 + 1; i++)

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: drivers/char/agp/agpgart_be.c:4236:
+	for(i = 0; i < 32 + 1; i++)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: drivers/char/agp/agpgart_be.c:4247:
+static int nvidia_insert_memory(agp_memory * mem,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/char/agp/agpgart_be.c:4248:
+static int nvidia_insert_memory(agp_memory * mem,
+				     off_t pg_start, int type)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/char/agp/agpgart_be.c:4251:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != 0'
#347: FILE: drivers/char/agp/agpgart_be.c:4252:
+	if ((type != 0) || (mem->type != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mem->type != 0'
#347: FILE: drivers/char/agp/agpgart_be.c:4252:
+	if ((type != 0) || (mem->type != 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: drivers/char/agp/agpgart_be.c:4254:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#351: FILE: drivers/char/agp/agpgart_be.c:4256:
+		(nvidia_private.num_active_entries - agp_memory_reserved/PAGE_SIZE))
 		                                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: drivers/char/agp/agpgart_be.c:4258:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#354: FILE: drivers/char/agp/agpgart_be.c:4259:
+	for(j = pg_start; j < (pg_start + mem->page_count); j++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#355: FILE: drivers/char/agp/agpgart_be.c:4260:
+		if (!PGE_EMPTY(agp_bridge.gatt_table[nvidia_private.pg_offset + j])) {
+			return -EBUSY;
+		}

CHECK:BOOL_COMPARISON: Using comparison to FALSE is error prone
#360: FILE: drivers/char/agp/agpgart_be.c:4265:
+	if (mem->is_flushed == FALSE) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#364: FILE: drivers/char/agp/agpgart_be.c:4269:
+	for (i = 0, j = pg_start; i < mem->page_count; i++, j++) {
+		agp_bridge.gatt_table[nvidia_private.pg_offset + j] = mem->memory[i];
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: drivers/char/agp/agpgart_be.c:4277:
+static int nvidia_remove_memory(agp_memory * mem, off_t pg_start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/char/agp/agpgart_be.c:4278:
+static int nvidia_remove_memory(agp_memory * mem, off_t pg_start,
+				     int type)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != 0'
#377: FILE: drivers/char/agp/agpgart_be.c:4282:
+	if ((type != 0) || (mem->type != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mem->type != 0'
#377: FILE: drivers/char/agp/agpgart_be.c:4282:
+	if ((type != 0) || (mem->type != 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: drivers/char/agp/agpgart_be.c:4284:
+^I$

CHECK:SPACING: No space is necessary after a cast
#382: FILE: drivers/char/agp/agpgart_be.c:4287:
+		    (unsigned long) agp_bridge.scratch_page;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#390: FILE: drivers/char/agp/agpgart_be.c:4295:
+static aper_size_info_8 nvidia_generic_sizes[5] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#400: FILE: drivers/char/agp/agpgart_be.c:4305:
+static gatt_mask nvidia_generic_masks[] =
+{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: drivers/char/agp/agpgart_be.c:4309:
+static int __init nvidia_generic_setup (struct pci_dev *pdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: drivers/char/agp/agpgart_be.c:4317:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nvidia_private.dev_1 == NULL'
#413: FILE: drivers/char/agp/agpgart_be.c:4318:
+	if((nvidia_private.dev_1 == NULL) ||
+		(nvidia_private.dev_2 == NULL) ||
+		(nvidia_private.dev_3 == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nvidia_private.dev_2 == NULL'
#413: FILE: drivers/char/agp/agpgart_be.c:4318:
+	if((nvidia_private.dev_1 == NULL) ||
+		(nvidia_private.dev_2 == NULL) ||
+		(nvidia_private.dev_3 == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nvidia_private.dev_3 == NULL'
#413: FILE: drivers/char/agp/agpgart_be.c:4318:
+	if((nvidia_private.dev_1 == NULL) ||
+		(nvidia_private.dev_2 == NULL) ||
+		(nvidia_private.dev_3 == NULL)) {

ERROR:SPACING: space required before the open parenthesis '('
#413: FILE: drivers/char/agp/agpgart_be.c:4318:
+	if((nvidia_private.dev_1 == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nvidia_private.dev_1"
#413: FILE: drivers/char/agp/agpgart_be.c:4318:
+	if((nvidia_private.dev_1 == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/char/agp/agpgart_be.c:4319:
+	if((nvidia_private.dev_1 == NULL) ||
+		(nvidia_private.dev_2 == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nvidia_private.dev_2"
#414: FILE: drivers/char/agp/agpgart_be.c:4319:
+		(nvidia_private.dev_2 == NULL) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nvidia_private.dev_3"
#415: FILE: drivers/char/agp/agpgart_be.c:4320:
+		(nvidia_private.dev_3 == NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#416: FILE: drivers/char/agp/agpgart_be.c:4321:
+		printk(KERN_INFO PFX "agpgart: Detected an NVIDIA "

WARNING:SPLIT_STRING: quoted string split across lines
#417: FILE: drivers/char/agp/agpgart_be.c:4322:
+		printk(KERN_INFO PFX "agpgart: Detected an NVIDIA "
+			"nForce/nForce2 chipset, but could not find "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#418: FILE: drivers/char/agp/agpgart_be.c:4323:
+			"nForce/nForce2 chipset, but could not find "
+			"the secondary devices.\n");

CHECK:SPACING: No space is necessary after a cast
#425: FILE: drivers/char/agp/agpgart_be.c:4330:
+	agp_bridge.aperture_sizes = (void *) nvidia_generic_sizes;

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/char/agp/agpgart_be.c:4333:
+	agp_bridge.dev_private_data = (void *) &nvidia_private;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 21 warnings, 30 checks, 431 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000367924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
