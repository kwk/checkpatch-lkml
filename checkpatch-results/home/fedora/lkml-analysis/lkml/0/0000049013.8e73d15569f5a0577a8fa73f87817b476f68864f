WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
[AK: actually it is implemented, but I'm adding the early_param it in the next

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#80: FILE: arch/i386/kernel/acpi/boot.c:39:
+int __initdata acpi_force = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#105: FILE: arch/i386/kernel/acpi/boot.c:1173:
+	if (strcmp(arg, "off") == 0) {
+		disable_acpi();
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#115: FILE: arch/i386/kernel/acpi/boot.c:1183:
+	else if (strcmp(arg, "strict") == 0) {
+		acpi_strict = 1;
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#133: FILE: arch/i386/kernel/acpi/boot.c:1201:
+}
+early_param("acpi", parse_acpi);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: arch/i386/kernel/acpi/boot.c:1210:
+}
+early_param("pci", parse_pci);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#150: FILE: arch/i386/kernel/acpi/boot.c:1218:
+}
+early_param("acpi_skip_timer_override", parse_acpi_skip_timer_override);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#169: FILE: arch/i386/kernel/acpi/boot.c:1237:
+}
+early_param("acpi_sci", setup_acpi_sci);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#184: FILE: arch/i386/kernel/apic.c:1381:
+}
+early_param("lapic", parse_lapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#191: FILE: arch/i386/kernel/apic.c:1388:
+}
+early_param("nolapic", parse_nolapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#216: FILE: arch/i386/kernel/io_apic.c:2700:
+}
+early_param("disable_timer_pin_1", parse_disable_timer_pin_1);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#223: FILE: arch/i386/kernel/io_apic.c:2707:
+}
+early_param("enable_timer_pin_1", parse_enable_timer_pin_1);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#231: FILE: arch/i386/kernel/io_apic.c:2715:
+}
+early_param("noapic", parse_noapic);

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: arch/i386/kernel/machine_kexec.c:223:
+	unsigned long size, base;
+	size = memparse(arg, &arg);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#260: FILE: arch/i386/kernel/machine_kexec.c:225:
+		base = memparse(arg+1, &arg);
 		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#269: FILE: arch/i386/kernel/machine_kexec.c:234:
+}
+early_param("crashkernel", parse_crashkernel);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#299: FILE: arch/i386/kernel/setup.c:697:
+static int __initdata user_defined_memmap = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after user_defined_memmap
#299: FILE: arch/i386/kernel/setup.c:697:
+static int __initdata user_defined_memmap = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#418: FILE: arch/i386/kernel/setup.c:732:
+}
+early_param("mem", parse_mem);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#489: FILE: arch/i386/kernel/setup.c:762:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#492: FILE: arch/i386/kernel/setup.c:765:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#495: FILE: arch/i386/kernel/setup.c:768:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#504: FILE: arch/i386/kernel/setup.c:777:
+}
+early_param("memmap", parse_memmap);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#543: FILE: arch/i386/kernel/setup.c:791:
+}
+early_param("elfcorehdr", parse_elfcorehdr);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#595: FILE: arch/i386/kernel/setup.c:807:
+}
+early_param("highmem", parse_highmem);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#639: FILE: arch/i386/kernel/setup.c:822:
 }
+early_param("vmalloc", parse_vmalloc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#658: FILE: arch/i386/kernel/setup.c:1401:
+		printk(KERN_INFO "user-defined physical RAM map:\n");

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#663: FILE: arch/i386/kernel/setup.c:1405:
+	strlcpy(command_line, saved_command_line, COMMAND_LINE_SIZE);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#692: FILE: arch/i386/kernel/smpboot.c:1497:
+	extern unsigned int maxcpus;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#694: FILE: arch/i386/kernel/smpboot.c:1499:
+	maxcpus = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#697: FILE: arch/i386/kernel/smpboot.c:1502:
+}
+early_param("maxcpus", parse_maxcpus);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#732: FILE: arch/i386/mach-generic/probe.c:50:
+}
+early_param("apic", parse_apic);

WARNING:LINE_SPACING: Missing a blank line after declarations
#759: FILE: arch/i386/mach-generic/probe.c:73:
+		int i;
+		for (i = 0; apic_probe[i]; i++) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#801: FILE: arch/i386/mm/init.c:440:
+	if (!str || !strcmp(str, "on")) {
[...]
+	} else if (!strcmp(str,"off")) {
[...]
-	}
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#806: FILE: arch/i386/mm/init.c:445:
+	} else if (!strcmp(str,"off")) {
 	                      ^

CHECK:BRACES: Unbalanced braces around else statement
#810: FILE: arch/i386/mm/init.c:448:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#815: FILE: arch/i386/mm/init.c:453:
 }
+early_param("noexec", noexec_setup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#853: FILE: include/asm-i386/apic.h:45:
+extern void generic_apic_probe(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000049013.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 10 warnings, 25 checks, 765 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000049013.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
