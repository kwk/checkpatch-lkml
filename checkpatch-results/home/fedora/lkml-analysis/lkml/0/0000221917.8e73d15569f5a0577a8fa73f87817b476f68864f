WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
I looked at the Harding's USBmon patch, and I think he got a few things right.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: drivers/usb/mon/mon_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#152: FILE: drivers/usb/mon/mon_main.c:23:
+extern struct semaphore usb_bus_list_lock;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: drivers/usb/mon/mon_main.c:50:
+			printk(KERN_ERR TAG ": bus %d is already monitored\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/usb/mon/mon_main.c:51:
+			printk(KERN_ERR TAG ": bus %d is already monitored\n",
+			    ubus->busnum);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mbus"
#221: FILE: drivers/usb/mon/mon_main.c:92:
+	if (mbus == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: drivers/usb/mon/mon_main.c:104:
+	list_for_each (pos, &mbus->r_list) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mbus"
#255: FILE: drivers/usb/mon/mon_main.c:126:
+	if (mbus == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#260: FILE: drivers/usb/mon/mon_main.c:131:
+		printk(KERN_ERR TAG ": Null mon bus in URB, pipe 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/usb/mon/mon_main.c:132:
+		printk(KERN_ERR TAG ": Null mon bus in URB, pipe 0x%x\n",
+		    urb->pipe);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: drivers/usb/mon/mon_main.c:137:
+	list_for_each (pos, &mbus->r_list) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#314: FILE: drivers/usb/mon/mon_main.c:185:
+	if ((mbus = kmalloc(sizeof(struct mon_bus), GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mbus)...) over kmalloc(sizeof(struct mon_bus)...)
#314: FILE: drivers/usb/mon/mon_main.c:185:
+	if ((mbus = kmalloc(sizeof(struct mon_bus), GFP_KERNEL)) == NULL)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#329: FILE: drivers/usb/mon/mon_main.c:200:
+	if (d == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#337: FILE: drivers/usb/mon/mon_main.c:208:
+	if (d == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#363: FILE: drivers/usb/mon/mon_main.c:234:
+		printk(KERN_NOTICE TAG ": debugs is not available\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mondir"
#366: FILE: drivers/usb/mon/mon_main.c:237:
+	if (mondir == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#367: FILE: drivers/usb/mon/mon_main.c:238:
+		printk(KERN_NOTICE TAG ": unable to create usbmon directory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: drivers/usb/mon/mon_main.c:244:
+	list_for_each_entry (ubus, &usb_bus_list, bus_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#394: FILE: drivers/usb/mon/mon_main.c:265:
+			printk(KERN_ERR TAG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#405: FILE: drivers/usb/mon/mon_main.c:276:
+			printk(KERN_ERR TAG

WARNING:MEMORY_BARRIER: memory barrier without comment
#418: FILE: drivers/usb/mon/mon_main.c:289:
+		mb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#440: FILE: drivers/usb/mon/mon_stat.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#452: FILE: drivers/usb/mon/mon_stat.c:13:
+#include <asm/uaccess.h>

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#468: FILE: drivers/usb/mon/mon_stat.c:29:
+	if ((sp = kmalloc(sizeof(struct snap), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sp)...) over kmalloc(sizeof(struct snap)...)
#468: FILE: drivers/usb/mon/mon_stat.c:29:
+	if ((sp = kmalloc(sizeof(struct snap), GFP_KERNEL)) == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: drivers/usb/mon/mon_stat.c:35:
+	sp->slen = snprintf(sp->str, STAT_BUF_SIZE,
+	    "nreaders %d saved_op 0x%lx nurbs %d text_lost %u\n",

CHECK:SPACING: No space is necessary after a cast
#475: FILE: drivers/usb/mon/mon_stat.c:36:
+	    mbus->nreaders, (long) mbus->saved_op, mbus->nurbs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/usb/mon/mon_stat.c:44:
+static ssize_t mon_stat_read(struct file *file, char __user *buf,
+				size_t nbytes, loff_t *ppos)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#493: FILE: drivers/usb/mon/mon_stat.c:54:
+	if ((cnt = sp->slen - pos) > nbytes)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#506: FILE: drivers/usb/mon/mon_stat.c:67:
+struct file_operations mon_fops_stat = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#519: FILE: drivers/usb/mon/mon_text.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#529: FILE: drivers/usb/mon/mon_text.c:11:
+#include <asm/uaccess.h>

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#578: FILE: drivers/usb/mon/mon_text.c:60:
+	if (rp->nevents >= EVENT_MAX ||

CHECK:SPACING: No space is necessary after a cast
#586: FILE: drivers/usb/mon/mon_text.c:68:
+	ep->id = (unsigned long) urb;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#605: FILE: drivers/usb/mon/mon_text.c:87:
+	if (rp->nevents >= EVENT_MAX ||

CHECK:SPACING: No space is necessary after a cast
#613: FILE: drivers/usb/mon/mon_text.c:95:
+	ep->id = (unsigned long) urb;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/usb/mon/mon_text.c:108:
+static struct mon_event_text *mon_text_fetch(struct mon_reader_text *rp,
+    struct mon_bus *mbus)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/usb/mon/mon_text.c:108:
+    struct mon_bus *mbus)$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rp)...) over kmalloc(sizeof(struct mon_reader_text)...)
#656: FILE: drivers/usb/mon/mon_text.c:138:
+	rp = kmalloc(sizeof(struct mon_reader_text), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp"
#657: FILE: drivers/usb/mon/mon_text.c:139:
+	if (rp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->printf_buf"
#668: FILE: drivers/usb/mon/mon_text.c:150:
+	if (rp->printf_buf == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/usb/mon/mon_text.c:161:
+	snprintf(rp->slab_name, SLAB_NAME_SZ, "mon%dt_%lx", ubus->busnum,
+	    (long)rp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#681: FILE: drivers/usb/mon/mon_text.c:163:
+	rp->e_slab = kmem_cache_create(rp->slab_name,
+	    sizeof(struct mon_event_text), sizeof(long), 0,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rp->e_slab"
#683: FILE: drivers/usb/mon/mon_text.c:165:
+	if (rp->e_slab == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: drivers/usb/mon/mon_text.c:194:
+static ssize_t mon_text_read(struct file *file, char __user *buf,
+				size_t nbytes, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: drivers/usb/mon/mon_text.c:223:
+	cnt = snprintf(rp->printf_buf, rp->printf_size,
+	    "%lx 0 %c %08x %d %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#764: FILE: drivers/usb/mon/mon_text.c:246:
+		printk(KERN_ERR TAG ": consistency error on close\n");

WARNING:CONST_STRUCT: struct file_operations should normally be const
#788: FILE: drivers/usb/mon/mon_text.c:270:
+struct file_operations mon_fops_text = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#818: FILE: drivers/usb/mon/usb_mon.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#840: FILE: drivers/usb/mon/usb_mon.h:23:
+	spinlock_t lock;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#873: FILE: drivers/usb/mon/usb_mon.h:56:
+extern struct file_operations mon_fops_text;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#874: FILE: drivers/usb/mon/usb_mon.h:57:
+extern struct file_operations mon_fops_stat;

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#892: FILE: include/linux/usb.h:281:
+#if defined(CONFIG_USB_MON) || defined(CONFIG_USB_MON_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#902: FILE: include/linux/usb.h:811:
+#if defined(CONFIG_USB_MON) || defined(CONFIG_USB_MON_MODULE)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221917.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 26 warnings, 24 checks, 805 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221917.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
