WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: arch/i386/mach-xen/time.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#119: FILE: arch/i386/mach-xen/time.c:54:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#120: FILE: arch/i386/mach-xen/time.c:55:
+#include <asm/smp.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#123: FILE: arch/i386/mach-xen/time.c:58:
+#include <asm/delay.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#125: FILE: arch/i386/mach-xen/time.c:60:
+#include <asm/uaccess.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#126: FILE: arch/i386/mach-xen/time.c:61:
+#include <asm/processor.h>

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: arch/i386/mach-xen/time.c:77:
+#if defined (__i386__)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#142: FILE: arch/i386/mach-xen/time.c:77:
+#if defined (__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#151: FILE: arch/i386/mach-xen/time.c:86:
+volatile unsigned long __jiffies __section_jiffies = INITIAL_JIFFIES;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#160: FILE: arch/i386/mach-xen/time.c:95:
+extern unsigned long wall_jiffies;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: arch/i386/mach-xen/time.c:100:
+#if defined (__i386__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#165: FILE: arch/i386/mach-xen/time.c:100:
+#if defined (__i386__)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#170: FILE: arch/i386/mach-xen/time.c:105:
+EXPORT_SYMBOL(i8253_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#172: FILE: arch/i386/mach-xen/time.c:107:
+extern struct init_timer_opts timer_tsc_init;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#173: FILE: arch/i386/mach-xen/time.c:108:
+extern struct timer_opts timer_tsc;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#186: FILE: arch/i386/mach-xen/time.c:121:
+};
+static DEFINE_PER_CPU(struct shadow_time_info, shadow_time);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#202: FILE: arch/i386/mach-xen/time.c:137:
+#define NS_PER_TICK (1000000000LL/HZ)
                                  ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#217: FILE: arch/i386/mach-xen/time.c:152:
+static int independent_wallclock = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#223: FILE: arch/i386/mach-xen/time.c:158:
+__setup("independent_wallclock", __independent_wallclock);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#229: FILE: arch/i386/mach-xen/time.c:164:
+	permitted_clock_jitter = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#232: FILE: arch/i386/mach-xen/time.c:167:
+__setup("permitted_clock_jitter=", __permitted_clock_jitter);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#234: FILE: arch/i386/mach-xen/time.c:169:
+int tsc_disable __devinitdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#234: FILE: arch/i386/mach-xen/time.c:169:
+int tsc_disable __devinitdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#259: FILE: arch/i386/mach-xen/time.c:194:
+#ifdef __i386__

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#268: FILE: arch/i386/mach-xen/time.c:203:
+#ifdef __i386__

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#269: FILE: arch/i386/mach-xen/time.c:204:
+	__asm__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#278: FILE: arch/i386/mach-xen/time.c:213:
+		: "a" ((u32)delta), "1" ((u32)(delta >> 32)), "2" (mul_frac) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#280: FILE: arch/i386/mach-xen/time.c:215:
+	__asm__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#282: FILE: arch/i386/mach-xen/time.c:217:
+		: "=a" (product) : "0" (delta), "d" ((u64)mul_frac) );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: arch/i386/mach-xen/time.c:223:
+#if defined (__i386__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#288: FILE: arch/i386/mach-xen/time.c:223:
+#if defined (__i386__)

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: arch/i386/mach-xen/time.c:235:
+	struct vcpu_time_info *info;
+	info = &HYPERVISOR_shared_info->vcpu_info[0].time;

WARNING:LINE_SPACING: Missing a blank line after declarations
#311: FILE: arch/i386/mach-xen/time.c:246:
+	u64 now, delta;
+	rdtscll(now);

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: arch/i386/mach-xen/time.c:254:
+	u64 now, delta;
+	rdtscll(now);

WARNING:MEMORY_BARRIER: memory barrier without comment
#356: FILE: arch/i386/mach-xen/time.c:291:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#359: FILE: arch/i386/mach-xen/time.c:294:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#381: FILE: arch/i386/mach-xen/time.c:316:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#386: FILE: arch/i386/mach-xen/time.c:321:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#400: FILE: arch/i386/mach-xen/time.c:335:
+	rmb();

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#409: FILE: arch/i386/mach-xen/time.c:344:
+volatile unsigned long cmos_lock = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#409: FILE: arch/i386/mach-xen/time.c:344:
+volatile unsigned long cmos_lock = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#416: FILE: arch/i386/mach-xen/time.c:351:
+	unsigned char val;
+	lock_cmos_prefix(addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#464: FILE: arch/i386/mach-xen/time.c:399:
+		if (unlikely(time_adjust < 0)) {
[...]
+		else if (unlikely(lost))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#471: FILE: arch/i386/mach-xen/time.c:406:
+		}
+		else if (unlikely(lost))

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#506: FILE: arch/i386/mach-xen/time.c:441:
+EXPORT_SYMBOL(do_gettimeofday);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#551: FILE: arch/i386/mach-xen/time.c:486:
+EXPORT_SYMBOL(do_settimeofday);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#611: FILE: arch/i386/mach-xen/time.c:546:
+	/* Assume the lock function has either no stack frame or only a single word.
+	   This checks if the address on the stack looks like a kernel text address.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#615: FILE: arch/i386/mach-xen/time.c:550:
+	   and check exactly. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#618: FILE: arch/i386/mach-xen/time.c:553:
+		char *v = *(char **)regs->rsp;
+		if ((v >= _stext && v <= _etext) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: arch/i386/mach-xen/time.c:554:
+		if ((v >= _stext && v <= _etext) ||
+			(v >= _sinittext && v <= _einittext) ||

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#648: FILE: arch/i386/mach-xen/time.c:583:
+		delta = delta_cpu =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#671: FILE: arch/i386/mach-xen/time.c:606:
+	     unlikely(delta_cpu < -(s64)permitted_clock_jitter))
+	    && printk_ratelimit()) {

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#671: FILE: arch/i386/mach-xen/time.c:606:
+	    && printk_ratelimit()) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#672: FILE: arch/i386/mach-xen/time.c:607:
+		printk("Timer ISR/%d: Time went backwards: "

WARNING:SPLIT_STRING: quoted string split across lines
#673: FILE: arch/i386/mach-xen/time.c:608:
+		printk("Timer ISR/%d: Time went backwards: "
+		       "delta=%lld delta_cpu=%lld shadow=%lld "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#674: FILE: arch/i386/mach-xen/time.c:609:
+		       "delta=%lld delta_cpu=%lld shadow=%lld "
+		       "off=%lld processed=%lld cpu_processed=%lld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#680: FILE: arch/i386/mach-xen/time.c:615:
+			printk(" %d: %lld\n", i,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stolen > 0'
#703: FILE: arch/i386/mach-xen/time.c:638:
+	if ((stolen > 0) && (delta_cpu > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta_cpu > 0'
#703: FILE: arch/i386/mach-xen/time.c:638:
+	if ((stolen > 0) && (delta_cpu > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'blocked > 0'
#718: FILE: arch/i386/mach-xen/time.c:653:
+	if ((blocked > 0) && (delta_cpu > 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'delta_cpu > 0'
#718: FILE: arch/i386/mach-xen/time.c:653:
+	if ((blocked > 0) && (delta_cpu > 0)) {

CHECK:SPACING: No space is necessary after a cast
#808: FILE: arch/i386/mach-xen/time.c:743:
+	if (now.tv_usec >= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#808: FILE: arch/i386/mach-xen/time.c:743:
+	if (now.tv_usec >= USEC_AFTER - ((unsigned) TICK_SIZE) / 2 &&

CHECK:SPACING: No space is necessary after a cast
#809: FILE: arch/i386/mach-xen/time.c:744:
+	    now.tv_usec <= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#809: FILE: arch/i386/mach-xen/time.c:744:
+	    now.tv_usec <= USEC_BEFORE + ((unsigned) TICK_SIZE) / 2)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#883: FILE: arch/i386/mach-xen/time.c:818:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#893: FILE: arch/i386/mach-xen/time.c:828:
+	int error = sysdev_class_register(&timer_sysclass);
+	if (!error)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: arch/i386/mach-xen/time.c:843:
+	set_normalized_timespec(&wall_to_monotonic,
+		-xtime.tv_sec, -xtime.tv_nsec);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#910: FILE: arch/i386/mach-xen/time.c:845:
+	if ((hpet_enable() >= 0) && hpet_use_timer) {
+		printk("Using HPET for base-timer\n");
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#911: FILE: arch/i386/mach-xen/time.c:846:
+		printk("Using HPET for base-timer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#915: FILE: arch/i386/mach-xen/time.c:850:
+	printk(KERN_INFO "Using %s for high-res timesource\n",cur_timer->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#915: FILE: arch/i386/mach-xen/time.c:850:
+	printk(KERN_INFO "Using %s for high-res timesource\n",cur_timer->name);
 	                                                     ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#924: FILE: arch/i386/mach-xen/time.c:859:
+extern void (*late_time_init)(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#928: FILE: arch/i386/mach-xen/time.c:863:
+		bind_virq_to_irqhandler(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#935: FILE: arch/i386/mach-xen/time.c:870:
+	BUG_ON(per_cpu(timer_irq, 0) < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#959: FILE: arch/i386/mach-xen/time.c:894:
+	printk(KERN_INFO "Xen reported: %u.%03u MHz processor.\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#985: FILE: arch/i386/mach-xen/time.c:920:
+		 * but that's ok: we'll just end up with a shorter timeout. */

WARNING:MEMORY_BARRIER: memory barrier without comment
#1006: FILE: arch/i386/mach-xen/time.c:941:
+	smp_mb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1016: FILE: arch/i386/mach-xen/time.c:951:
+	BUG_ON(HYPERVISOR_set_timer_op(jiffies_to_st(j)) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1045: FILE: arch/i386/mach-xen/time.c:980:
+	BUG_ON(cpu == 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1057: FILE: arch/i386/mach-xen/time.c:992:
+		bind_virq_to_irqhandler(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1064: FILE: arch/i386/mach-xen/time.c:999:
+	BUG_ON(per_cpu(timer_irq, cpu) < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1069: FILE: arch/i386/mach-xen/time.c:1004:
+	BUG_ON(cpu == 0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1097: FILE: arch/i386/mach-xen/time.c:1032:
+};
+static ctl_table xen_table[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1105: FILE: arch/i386/mach-xen/time.c:1040:
+};
+static int __init xen_sysctl_init(void)

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#1110: FILE: arch/i386/mach-xen/time.c:1045:
+__initcall(xen_sysctl_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 47 warnings, 32 checks, 1064 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
