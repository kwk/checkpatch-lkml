WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# This is a BitKeeper generated diff -Nru style patch.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# ChangeSet

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#   2005/01/26 00:52:17-05:00 davej@redhat.com 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#   [INCLUDE] Remove sched.h inclusion from module.h.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#   Also move some capability bits to capability.h, and break

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#   out some of sched.h to wakeup.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#   Build checked for make all modconfig,yesconfig,noconfig

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#   Signed-off-by: Dave Jones <davej@redhat.com>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# 

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -Nru a/arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c b/arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#56: 
--- a/arch/i386/kernel/cpu/cpufreq/acpi-cpufreq.c	2005-01-26 01:36:57 -05:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#488: FILE: include/linux/capability.h:362:
+extern int capable(int cap);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#597: FILE: include/linux/wait.h:150:
+extern int FASTCALL(wake_up_state(struct task_struct * tsk, unsigned int state));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#597: FILE: include/linux/wait.h:150:
+extern int FASTCALL(wake_up_state(struct task_struct * tsk, unsigned int state));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#598: FILE: include/linux/wait.h:151:
+extern int FASTCALL(wake_up_process(struct task_struct * tsk));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#598: FILE: include/linux/wait.h:151:
+extern int FASTCALL(wake_up_process(struct task_struct * tsk));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#599: FILE: include/linux/wait.h:152:
+extern void FASTCALL(wake_up_new_task(struct task_struct * tsk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#599: FILE: include/linux/wait.h:152:
+extern void FASTCALL(wake_up_new_task(struct task_struct * tsk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: include/linux/wait.h:153:
+extern void FASTCALL(wake_up_new_task(struct task_struct * tsk,
+			unsigned long clone_flags));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: include/linux/wait.h:155:
+ extern void kick_process(struct task_struct *tsk);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#602: FILE: include/linux/wait.h:155:
+ extern void kick_process(struct task_struct *tsk);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: include/linux/wait.h:157:
+ static inline void kick_process(struct task_struct *tsk) { }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 15 warnings, 6 checks, 412 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000212016.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
