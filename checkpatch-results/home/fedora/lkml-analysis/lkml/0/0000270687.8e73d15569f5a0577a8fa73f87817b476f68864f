WARNING:TYPO_SPELLING: 'beleive' may be misspelled - perhaps 'believe'?
#45: 
> cases where there is no error.  Small price, as I beleive
                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
--- arch/ppc64/kernel/rtas.c.orig-pre-lockfix	2004-06-29 17:02:12.000000000 -0500

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: ppc64/kernel/rtas.c:101:
+/** Return a copy of the detailed error text associated with the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: ppc64/kernel/rtas.c:102:
+ *  most recent failed call to rtas.  Because the error text $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: ppc64/kernel/rtas.c:105:
+ *  the error (i.e. with rtas.lock still held from the previous call). $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: ppc64/kernel/rtas.c:143:
+	char * buff_copy = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: ppc64/kernel/rtas.c:192:
+		buff_copy = kmalloc (RTAS_ERROR_LOG_MAX, GFP_ATOMIC);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#114: FILE: ppc64/kernel/rtas.c:193:
+		if (buff_copy) {
+			memcpy (buff_copy, rtas_err_buf, RTAS_ERROR_LOG_MAX);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#115: FILE: ppc64/kernel/rtas.c:194:
+			memcpy (buff_copy, rtas_err_buf, RTAS_ERROR_LOG_MAX);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: ppc64/kernel/rtas.c:197:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: ppc64/kernel/rtas.c:203:
+		kfree (buff_copy);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: ppc64/kernel/rtas.c:466:
+	char * buff_copy;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: ppc64/kernel/rtas.c:487:
+	buff_copy = kmalloc (RTAS_ERROR_LOG_MAX, GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err_rc == 0'
#162: FILE: ppc64/kernel/rtas.c:499:
+		if ((err_rc == 0) && buff_copy) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#162: FILE: ppc64/kernel/rtas.c:499:
+		if ((err_rc == 0) && buff_copy) {
+			memcpy (buff_copy, rtas_err_buf, RTAS_ERROR_LOG_MAX);
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: ppc64/kernel/rtas.c:500:
+			memcpy (buff_copy, rtas_err_buf, RTAS_ERROR_LOG_MAX);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: ppc64/kernel/rtas.c:503:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'err_rc == 0'
#170: FILE: ppc64/kernel/rtas.c:507:
+		if ((args.rets[0] == -1) && (err_rc == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#170: FILE: ppc64/kernel/rtas.c:507:
+		if ((args.rets[0] == -1) && (err_rc == 0)) {
+			log_error(buff_copy, ERR_TYPE_RTAS_LOG, 0);
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: ppc64/kernel/rtas.c:510:
+		kfree (buff_copy);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: ppc64/kernel/rtas.c:512:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270687.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 12 warnings, 2 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270687.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
