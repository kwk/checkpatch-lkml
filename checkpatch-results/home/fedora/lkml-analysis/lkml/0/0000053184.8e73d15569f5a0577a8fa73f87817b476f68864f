WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#72: FILE: include/linux/sunrpc/svc.h:77:
+	struct module *		sv_module;	/* optional module to count when

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#73: FILE: include/linux/sunrpc/svc.h:78:
+						 * adding threads */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo *  bar" should be "foo *bar"
#110: FILE: include/linux/sunrpc/svc.h:363:
+struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_program *' should also have an identifier name
#110: FILE: include/linux/sunrpc/svc.h:363:
+struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#110: FILE: include/linux/sunrpc/svc.h:363:
+struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'svc_thread_fn' should also have an identifier name
#110: FILE: include/linux/sunrpc/svc.h:363:
+struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#110: FILE: include/linux/sunrpc/svc.h:363:
+struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: include/linux/sunrpc/svc.h:364:
+struct svc_serv *  svc_create_pooled(struct svc_program *, unsigned int,
+			void (*shutdown)(struct svc_serv*),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#111: FILE: include/linux/sunrpc/svc.h:364:
+			void (*shutdown)(struct svc_serv*),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_serv*' should also have an identifier name
#111: FILE: include/linux/sunrpc/svc.h:364:
+			void (*shutdown)(struct svc_serv*),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'svc_thread_fn' should also have an identifier name
#111: FILE: include/linux/sunrpc/svc.h:364:
+			void (*shutdown)(struct svc_serv*),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct module *' should also have an identifier name
#111: FILE: include/linux/sunrpc/svc.h:364:
+			void (*shutdown)(struct svc_serv*),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_serv *' should also have an identifier name
#113: FILE: include/linux/sunrpc/svc.h:366:
+int		   svc_set_num_threads(struct svc_serv *, struct svc_pool *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_pool *' should also have an identifier name
#113: FILE: include/linux/sunrpc/svc.h:366:
+int		   svc_set_num_threads(struct svc_serv *, struct svc_pool *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#113: FILE: include/linux/sunrpc/svc.h:366:
+int		   svc_set_num_threads(struct svc_serv *, struct svc_pool *, int);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: net/sunrpc/sunrpc_syms.c:77:
+EXPORT_SYMBOL(svc_set_num_threads);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: net/sunrpc/svc.c:32:
+__svc_create(struct svc_program *prog, unsigned int bufsize, int npools,
 	   void (*shutdown)(struct svc_serv *serv))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: net/sunrpc/svc.c:97:
+svc_create(struct svc_program *prog, unsigned int bufsize,
+		void (*shutdown)(struct svc_serv *serv))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: net/sunrpc/svc.c:104:
+svc_create_pooled(struct svc_program *prog, unsigned int bufsize,
+		void (*shutdown)(struct svc_serv *serv),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "serv"
#191: FILE: net/sunrpc/svc.c:111:
+	if (serv != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pool"
#220: FILE: net/sunrpc/svc.c:266:
+	if (pool != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: net/sunrpc/svc.c:269:
+ ^Ireturn &serv->sv_pools[(*state)++ % serv->sv_nrpools];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: net/sunrpc/svc.c:269:
+ ^Ireturn &serv->sv_pools[(*state)++ % serv->sv_nrpools];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: net/sunrpc/svc.c:269:
+ ^Ireturn &serv->sv_pools[(*state)++ % serv->sv_nrpools];$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#227: FILE: net/sunrpc/svc.c:273:
+/*
+ * Choose a thread to kill, for svc_set_num_threads

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pool"
#235: FILE: net/sunrpc/svc.c:281:
+	if (pool != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: net/sunrpc/svc.c:285:
+ ^I^Ifor (i = 0 ; i < serv->sv_nrpools ; i++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: net/sunrpc/svc.c:285:
+ ^I^Ifor (i = 0 ; i < serv->sv_nrpools ; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: net/sunrpc/svc.c:285:
+ ^I^Ifor (i = 0 ; i < serv->sv_nrpools ; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: net/sunrpc/svc.c:286:
+ ^I^I^Ipool = &serv->sv_pools[--(*state) % serv->sv_nrpools];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: net/sunrpc/svc.c:286:
+ ^I^I^Ipool = &serv->sv_pools[--(*state) % serv->sv_nrpools];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: net/sunrpc/svc.c:286:
+ ^I^I^Ipool = &serv->sv_pools[--(*state) % serv->sv_nrpools];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: net/sunrpc/svc.c:288:
+ ^I^I^Iif (!list_empty(&pool->sp_all_threads))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: net/sunrpc/svc.c:288:
+ ^I^I^Iif (!list_empty(&pool->sp_all_threads))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: net/sunrpc/svc.c:288:
+ ^I^I^Iif (!list_empty(&pool->sp_all_threads))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: net/sunrpc/svc.c:289:
+ ^I^I^I^Igoto found_pool;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: net/sunrpc/svc.c:289:
+ ^I^I^I^Igoto found_pool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: net/sunrpc/svc.c:289:
+ ^I^I^I^Igoto found_pool;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: net/sunrpc/svc.c:291:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: net/sunrpc/svc.c:291:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: net/sunrpc/svc.c:291:
+ ^I^I}$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#254: FILE: net/sunrpc/svc.c:300:
+		/*
+		 * Remove from the pool->sp_all_threads list

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: net/sunrpc/svc.c:306:
+    ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: net/sunrpc/svc.c:306:
+    ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: net/sunrpc/svc.c:306:
+    ^I}$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#267: FILE: net/sunrpc/svc.c:313:
+/*
+ * Create or destroy enough new threads to make the number

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#285: FILE: net/sunrpc/svc.c:331:
+	unsigned int state = serv->sv_nrthreads-1;
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pool"
#287: FILE: net/sunrpc/svc.c:333:
+	if (pool == NULL) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#289: FILE: net/sunrpc/svc.c:335:
+		nrservs -= (serv->sv_nrthreads-1);
 		                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 32 warnings, 10 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
