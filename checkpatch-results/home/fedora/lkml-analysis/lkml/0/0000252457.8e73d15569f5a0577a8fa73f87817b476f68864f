CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#29: 
Jörn
 ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
Geld macht nicht glücklich.
                   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#33: 
Glück macht nicht satt.
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#43: 
Signed-off-by: Jörn Engel <joern@wohnheim.fh-wedel.de>
                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: fs/read_write.c:567:
+	struct inode * in_inode, * out_inode;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#60: FILE: fs/read_write.c:567:
+	struct inode * in_inode, * out_inode;
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: fs/read_write.c:595:
+	ret = security_file_permission (out_file, MAY_WRITE);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#111: FILE: fs/read_write.c:618:
+EXPORT_SYMBOL(vfs_sendfile);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#188: FILE: include/linux/fs.h:931:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#188: FILE: include/linux/fs.h:931:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#188: FILE: include/linux/fs.h:931:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#188: FILE: include/linux/fs.h:931:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#188: FILE: include/linux/fs.h:931:
+ssize_t vfs_sendfile(struct file *, struct file *, loff_t *, size_t, loff_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 4 checks, 133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
