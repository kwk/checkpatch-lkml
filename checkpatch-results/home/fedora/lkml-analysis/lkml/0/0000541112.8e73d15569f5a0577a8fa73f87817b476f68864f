WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
It simplifies the __wake_up_ctx_common() function and adds an iterative clause

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#159: FILE: arch/i386/kernel/semaphore.c:266:
+asm(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#203: FILE: arch/i386/kernel/semaphore.c:293:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#211: FILE: arch/i386/kernel/semaphore.c:301:
+	__asm__ __volatile__(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#214: FILE: arch/i386/kernel/semaphore.c:304:
+LOCK_PREFIX	"  decb      "RWSEM_SPINLOCK_OFFSET_STR"(%1)\n\t" /* try to grab the spinlock */

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#221: FILE: arch/i386/kernel/semaphore.c:311:
+		"  movb      $1,"RWSEM_SPINLOCK_OFFSET_STR"(%1)\n\t" /* release the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#226: FILE: arch/i386/kernel/semaphore.c:316:
+		"  cmpb      $0,"RWSEM_SPINLOCK_OFFSET_STR"(%1)\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#227: FILE: arch/i386/kernel/semaphore.c:317:
+		"  rep;nop   \n\t"

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#239: FILE: arch/i386/kernel/semaphore.c:328:
+	return tmp+delta;
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#251: FILE: arch/i386/kernel/semaphore.c:337:
+	return cmpxchg((__u16*)&sem->count.counter,0,RWSEM_ACTIVE_BIAS);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: arch/i386/kernel/semaphore.c:337:
+	return cmpxchg((__u16*)&sem->count.counter,0,RWSEM_ACTIVE_BIAS);
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#251: FILE: arch/i386/kernel/semaphore.c:337:
+	return cmpxchg((__u16*)&sem->count.counter,0,RWSEM_ACTIVE_BIAS);
 	                                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#274: FILE: arch/i386/kernel/semaphore.c:342:
+	__asm__ __volatile__(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#277: FILE: arch/i386/kernel/semaphore.c:345:
+LOCK_PREFIX	"  decb      "RWSEM_SPINLOCK_OFFSET_STR"(%3)\n\t" /* try to grab the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#286: FILE: arch/i386/kernel/semaphore.c:354:
+		"  movb      $1,"RWSEM_SPINLOCK_OFFSET_STR"(%3)\n\t" /* release the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#291: FILE: arch/i386/kernel/semaphore.c:359:
+		"  cmpb      $0,"RWSEM_SPINLOCK_OFFSET_STR"(%3)\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#292: FILE: arch/i386/kernel/semaphore.c:360:
+		"  rep;nop   \n\t"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#321: FILE: arch/i386/kernel/semaphore.c:385:
+	DECLARE_WAITQUEUE(wait,tsk);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: arch/i386/kernel/semaphore.c:388:
+	rwsemdebug("[%d] Entering down_read_failed(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: arch/i386/kernel/semaphore.c:388:
+	rwsemdebug("[%d] Entering down_read_failed(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#329: FILE: arch/i386/kernel/semaphore.c:391:
+	__set_bit(RWSEM_WAITING_FOR_READ,&wait.flags);
 	                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#329: FILE: arch/i386/kernel/semaphore.c:391:
+	__set_bit(RWSEM_WAITING_FOR_READ,&wait.flags);
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#338: FILE: arch/i386/kernel/semaphore.c:397:
+	count = rwsem_atomic_update(RWSEM_WAITING_BIAS-RWSEM_ACTIVE_BIAS,sem);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#338: FILE: arch/i386/kernel/semaphore.c:397:
+	count = rwsem_atomic_update(RWSEM_WAITING_BIAS-RWSEM_ACTIVE_BIAS,sem);
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#339: FILE: arch/i386/kernel/semaphore.c:398:
+	rwsemdebug("X(%08x)\n",count);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#349: FILE: arch/i386/kernel/semaphore.c:408:
+		if (!test_bit(RWSEM_WAITING_FOR_READ,&wait.flags))
 		                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#349: FILE: arch/i386/kernel/semaphore.c:408:
+		if (!test_bit(RWSEM_WAITING_FOR_READ,&wait.flags))
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#356: FILE: arch/i386/kernel/semaphore.c:414:
+	remove_wait_queue(&sem->wait,&wait);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#356: FILE: arch/i386/kernel/semaphore.c:414:
+	remove_wait_queue(&sem->wait,&wait);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#359: FILE: arch/i386/kernel/semaphore.c:417:
+	rwsemdebug("[%d] Leaving down_read_failed(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#359: FILE: arch/i386/kernel/semaphore.c:417:
+	rwsemdebug("[%d] Leaving down_read_failed(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: arch/i386/kernel/semaphore.c:428:
+	DECLARE_WAITQUEUE(wait,tsk);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: arch/i386/kernel/semaphore.c:432:
+		   current->pid,atomic_read(&sem->count));
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#382: FILE: arch/i386/kernel/semaphore.c:435:
+	__set_bit(RWSEM_WAITING_FOR_WRITE,&wait.flags);
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#382: FILE: arch/i386/kernel/semaphore.c:435:
+	__set_bit(RWSEM_WAITING_FOR_WRITE,&wait.flags);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: arch/i386/kernel/semaphore.c:441:
+	count = rwsem_atomic_update(-RWSEM_ACTIVE_BIAS,sem);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: arch/i386/kernel/semaphore.c:442:
+	rwsemdebug("[%d] updated(%08x)\n",current->pid,count);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: arch/i386/kernel/semaphore.c:442:
+	rwsemdebug("[%d] updated(%08x)\n",current->pid,count);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#403: FILE: arch/i386/kernel/semaphore.c:452:
+		if (!test_bit(RWSEM_WAITING_FOR_WRITE,&wait.flags))
 		                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#403: FILE: arch/i386/kernel/semaphore.c:452:
+		if (!test_bit(RWSEM_WAITING_FOR_WRITE,&wait.flags))
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#410: FILE: arch/i386/kernel/semaphore.c:458:
+	remove_wait_queue(&sem->wait,&wait);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#410: FILE: arch/i386/kernel/semaphore.c:458:
+	remove_wait_queue(&sem->wait,&wait);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: arch/i386/kernel/semaphore.c:461:
+	rwsemdebug("[%d] Leaving down_write_failed(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: arch/i386/kernel/semaphore.c:461:
+	rwsemdebug("[%d] Leaving down_write_failed(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#438: FILE: arch/i386/kernel/semaphore.c:476:
+	rwsemdebug("[%d] Entering rwsem_wake(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#438: FILE: arch/i386/kernel/semaphore.c:476:
+	rwsemdebug("[%d] Entering rwsem_wake(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rwsem_wake', this function's name, in a string
#438: FILE: arch/i386/kernel/semaphore.c:476:
+	rwsemdebug("[%d] Entering rwsem_wake(%08x)\n",current->pid,atomic_read(&sem->count));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/i386/kernel/semaphore.c:484:
+	if (rwsem_cmpxchgw(sem,0,RWSEM_ACTIVE_BIAS)!=0) {
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/i386/kernel/semaphore.c:484:
+	if (rwsem_cmpxchgw(sem,0,RWSEM_ACTIVE_BIAS)!=0) {
 	                        ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#447: FILE: arch/i386/kernel/semaphore.c:484:
+	if (rwsem_cmpxchgw(sem,0,RWSEM_ACTIVE_BIAS)!=0) {
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#448: FILE: arch/i386/kernel/semaphore.c:485:
+		rwsemdebug("[%d] rwsem_wake: abort wakeup due to renewed activity\n",current->pid);
 		                                                                    ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rwsem_wake', this function's name, in a string
#448: FILE: arch/i386/kernel/semaphore.c:485:
+		rwsemdebug("[%d] rwsem_wake: abort wakeup due to renewed activity\n",current->pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: arch/i386/kernel/semaphore.c:493:
+	if (wake_up_ctx(&sem->wait,1,-RWSEM_WAITING_FOR_WRITE)==1)
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#461: FILE: arch/i386/kernel/semaphore.c:493:
+	if (wake_up_ctx(&sem->wait,1,-RWSEM_WAITING_FOR_WRITE)==1)
 	                            ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#461: FILE: arch/i386/kernel/semaphore.c:493:
+	if (wake_up_ctx(&sem->wait,1,-RWSEM_WAITING_FOR_WRITE)==1)
 	                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#461: FILE: arch/i386/kernel/semaphore.c:493:
+	if (wake_up_ctx(&sem->wait,1,-RWSEM_WAITING_FOR_WRITE)==1)
 	                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: arch/i386/kernel/semaphore.c:500:
+	woken = wake_up_ctx(&sem->wait,65535,-RWSEM_WAITING_FOR_READ);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#479: FILE: arch/i386/kernel/semaphore.c:500:
+	woken = wake_up_ctx(&sem->wait,65535,-RWSEM_WAITING_FOR_READ);
 	                                    ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#479: FILE: arch/i386/kernel/semaphore.c:500:
+	woken = wake_up_ctx(&sem->wait,65535,-RWSEM_WAITING_FOR_READ);
 	                                     ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#480: FILE: arch/i386/kernel/semaphore.c:501:
+	if (woken<=0)
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#483: FILE: arch/i386/kernel/semaphore.c:504:
+	woken *= RWSEM_ACTIVE_BIAS-RWSEM_WAITING_BIAS;
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: arch/i386/kernel/semaphore.c:506:
+	rwsem_atomic_update(woken,sem);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: arch/i386/kernel/semaphore.c:509:
+	rwsemdebug("[%d] Leaving rwsem_wake(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: arch/i386/kernel/semaphore.c:509:
+	rwsemdebug("[%d] Leaving rwsem_wake(%08x)\n",current->pid,atomic_read(&sem->count));
 	                                                         ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rwsem_wake', this function's name, in a string
#493: FILE: arch/i386/kernel/semaphore.c:509:
+	rwsemdebug("[%d] Leaving rwsem_wake(%08x)\n",current->pid,atomic_read(&sem->count));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#498: FILE: arch/i386/kernel/semaphore.c:514:
+	count = rwsem_atomic_update(-RWSEM_ACTIVE_BIAS,sem);
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: arch/i386/kernel/semaphore.c:515:
+	rwsemdebug("[%d] corrected(%08x)\n",current->pid,count);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: arch/i386/kernel/semaphore.c:515:
+	rwsemdebug("[%d] corrected(%08x)\n",current->pid,count);
 	                                                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#520: FILE: include/asm-i386/rwsem-spin.h:1:
+/* rwsem.h: R/W semaphores based on spinlocks

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#545: FILE: include/asm-i386/rwsem-spin.h:26:
+	spinlock_t		lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#564: FILE: include/asm-i386/rwsem-spin.h:45:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#564: FILE: include/asm-i386/rwsem-spin.h:45:
+#define __RWSEM_DEBUG_INIT      , 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#569: FILE: include/asm-i386/rwsem-spin.h:50:
+#define __RWSEM_DEBUG_MINIT(name)	, (int)&(name).__magic, ATOMIC_INIT(0), ATOMIC_INIT(0)
                                  	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#569: FILE: include/asm-i386/rwsem-spin.h:50:
+#define __RWSEM_DEBUG_MINIT(name)	, (int)&(name).__magic, ATOMIC_INIT(0), ATOMIC_INIT(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: include/asm-i386/rwsem-spin.h:55:
+#define __RWSEM_INITIALIZER(name,count) \
                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#574: FILE: include/asm-i386/rwsem-spin.h:55:
+#define __RWSEM_INITIALIZER(name,count) \
+{ ATOMIC_INIT(RWSEM_UNLOCKED_VALUE), SPIN_LOCK_UNLOCKED, \
+	__WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__RWSEM_DEBUG_INIT __RWSEM_DEBUG_MINIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#579: FILE: include/asm-i386/rwsem-spin.h:60:
+#define __DECLARE_RWSEM_GENERIC(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#579: FILE: include/asm-i386/rwsem-spin.h:60:
+#define __DECLARE_RWSEM_GENERIC(name,count) \
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name,count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#580: FILE: include/asm-i386/rwsem-spin.h:61:
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name,count)
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: include/asm-i386/rwsem-spin.h:63:
+#define DECLARE_RWSEM(name) __DECLARE_RWSEM_GENERIC(name,RW_LOCK_BIAS)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#583: FILE: include/asm-i386/rwsem-spin.h:64:
+#define DECLARE_RWSEM_READ_LOCKED(name) __DECLARE_RWSEM_GENERIC(name,RW_LOCK_BIAS-1)
                                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#583: FILE: include/asm-i386/rwsem-spin.h:64:
+#define DECLARE_RWSEM_READ_LOCKED(name) __DECLARE_RWSEM_GENERIC(name,RW_LOCK_BIAS-1)
                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: include/asm-i386/rwsem-spin.h:65:
+#define DECLARE_RWSEM_WRITE_LOCKED(name) __DECLARE_RWSEM_GENERIC(name,0)
                                                                      ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#606: FILE: include/asm-i386/rwsem-spin.h:87:
+	__asm__ __volatile__(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#609: FILE: include/asm-i386/rwsem-spin.h:90:
+LOCK_PREFIX	"  decb      "RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* try to grab the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#615: FILE: include/asm-i386/rwsem-spin.h:96:
+		"  movb      $1,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* release the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#622: FILE: include/asm-i386/rwsem-spin.h:103:
+		"  cmpb      $0,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#623: FILE: include/asm-i386/rwsem-spin.h:104:
+		"  rep;nop   \n\t"

WARNING:SPLIT_STRING: quoted string split across lines
#631: FILE: include/asm-i386/rwsem-spin.h:112:
+		".previous"
+		"# ending __down_read\n\t"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__down_read', this function's name, in a string
#631: FILE: include/asm-i386/rwsem-spin.h:112:
+		"# ending __down_read\n\t"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#645: FILE: include/asm-i386/rwsem-spin.h:126:
+	__asm__ __volatile__(

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#648: FILE: include/asm-i386/rwsem-spin.h:129:
+LOCK_PREFIX	"  decb      "RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* try to grab the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#655: FILE: include/asm-i386/rwsem-spin.h:136:
+		"  movb      $1,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* release the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#663: FILE: include/asm-i386/rwsem-spin.h:144:
+		"  cmpb      $0,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#664: FILE: include/asm-i386/rwsem-spin.h:145:
+		"  rep;nop   \n\t"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#686: FILE: include/asm-i386/rwsem-spin.h:167:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_read', this function's name, in a string
#687: FILE: include/asm-i386/rwsem-spin.h:168:
+		"# beginning __up_read\n\t"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#689: FILE: include/asm-i386/rwsem-spin.h:170:
+LOCK_PREFIX	"  decb      "RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* try to grab the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#696: FILE: include/asm-i386/rwsem-spin.h:177:
+		"  movb      $1,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* release the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#703: FILE: include/asm-i386/rwsem-spin.h:184:
+		"  cmpb      $0,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#704: FILE: include/asm-i386/rwsem-spin.h:185:
+		"  rep;nop   \n\t"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_read', this function's name, in a string
#715: FILE: include/asm-i386/rwsem-spin.h:196:
+		"# ending __up_read\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#726: FILE: include/asm-i386/rwsem-spin.h:207:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_write', this function's name, in a string
#727: FILE: include/asm-i386/rwsem-spin.h:208:
+		"# beginning __up_write\n\t"

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#729: FILE: include/asm-i386/rwsem-spin.h:210:
+LOCK_PREFIX	"  decb      "RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* try to grab the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#735: FILE: include/asm-i386/rwsem-spin.h:216:
+		"  movb      $1,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t" /* release the spinlock */

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#742: FILE: include/asm-i386/rwsem-spin.h:223:
+		"  cmpb      $0,"RWSEM_SPINLOCK_OFFSET_STR"(%%eax)\n\t"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#743: FILE: include/asm-i386/rwsem-spin.h:224:
+		"  rep;nop   \n\t"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_write', this function's name, in a string
#751: FILE: include/asm-i386/rwsem-spin.h:232:
+		"# ending __up_write\n"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#763: FILE: include/asm-i386/rwsem-xadd.h:1:
+/* rwsem-xadd.h: R/W semaphores implemented using XADD/CMPXCHG

WARNING:TYPO_SPELLING: 'consequtive' may be misspelled - perhaps 'consecutive'?
#789: FILE: include/asm-i386/rwsem-xadd.h:27:
+ * that will be woken up; if there's a bunch of consequtive readers at the
                                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#826: FILE: include/asm-i386/rwsem-xadd.h:64:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#826: FILE: include/asm-i386/rwsem-xadd.h:64:
+#define __RWSEM_DEBUG_INIT      , 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#831: FILE: include/asm-i386/rwsem-xadd.h:69:
+#define __RWSEM_DEBUG_MINIT(name)	, (int)&(name).__magic, ATOMIC_INIT(0), ATOMIC_INIT(0)
                                  	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#831: FILE: include/asm-i386/rwsem-xadd.h:69:
+#define __RWSEM_DEBUG_MINIT(name)	, (int)&(name).__magic, ATOMIC_INIT(0), ATOMIC_INIT(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#836: FILE: include/asm-i386/rwsem-xadd.h:74:
+#define __RWSEM_INITIALIZER(name,count) \
                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#836: FILE: include/asm-i386/rwsem-xadd.h:74:
+#define __RWSEM_INITIALIZER(name,count) \
+{ ATOMIC_INIT(RWSEM_UNLOCKED_VALUE), __WAIT_QUEUE_HEAD_INITIALIZER((name).wait) \
+	__RWSEM_DEBUG_INIT __RWSEM_DEBUG_MINIT(name) }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: include/asm-i386/rwsem-xadd.h:78:
+#define __DECLARE_RWSEM_GENERIC(name,count) \
                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#840: FILE: include/asm-i386/rwsem-xadd.h:78:
+#define __DECLARE_RWSEM_GENERIC(name,count) \
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name,count)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#841: FILE: include/asm-i386/rwsem-xadd.h:79:
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name,count)
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#843: FILE: include/asm-i386/rwsem-xadd.h:81:
+#define DECLARE_RWSEM(name) __DECLARE_RWSEM_GENERIC(name,RW_LOCK_BIAS)
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: include/asm-i386/rwsem-xadd.h:82:
+#define DECLARE_RWSEM_READ_LOCKED(name) __DECLARE_RWSEM_GENERIC(name,RW_LOCK_BIAS-1)
                                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#844: FILE: include/asm-i386/rwsem-xadd.h:82:
+#define DECLARE_RWSEM_READ_LOCKED(name) __DECLARE_RWSEM_GENERIC(name,RW_LOCK_BIAS-1)
                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#845: FILE: include/asm-i386/rwsem-xadd.h:83:
+#define DECLARE_RWSEM_WRITE_LOCKED(name) __DECLARE_RWSEM_GENERIC(name,0)
                                                                      ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#866: FILE: include/asm-i386/rwsem-xadd.h:104:
+	__asm__ __volatile__(

WARNING:SPLIT_STRING: quoted string split across lines
#876: FILE: include/asm-i386/rwsem-xadd.h:114:
+		".previous"
+		"# ending down_read\n\t"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#890: FILE: include/asm-i386/rwsem-xadd.h:128:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#915: FILE: include/asm-i386/rwsem-xadd.h:153:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_read', this function's name, in a string
#916: FILE: include/asm-i386/rwsem-xadd.h:154:
+		"# beginning __up_read\n\t"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_read', this function's name, in a string
#928: FILE: include/asm-i386/rwsem-xadd.h:166:
+		"# ending __up_read\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#939: FILE: include/asm-i386/rwsem-xadd.h:177:
+	__asm__ __volatile__(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_write', this function's name, in a string
#940: FILE: include/asm-i386/rwsem-xadd.h:178:
+		"# beginning __up_write\n\t"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__up_write', this function's name, in a string
#949: FILE: include/asm-i386/rwsem-xadd.h:187:
+		"# ending __up_write\n"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#961: FILE: include/asm-i386/rwsem.h:1:
+/* rwsem.h: R/W semaphores based on spinlocks

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#979: FILE: include/asm-i386/rwsem.h:19:
+#include <asm/atomic.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#984: FILE: include/asm-i386/rwsem.h:24:
+#define rwsemdebug(FMT,...) do { if (sem->debug) printk(FMT,__VA_ARGS__); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: include/asm-i386/rwsem.h:24:
+#define rwsemdebug(FMT,...) do { if (sem->debug) printk(FMT,__VA_ARGS__); } while(0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: include/asm-i386/rwsem.h:24:
+#define rwsemdebug(FMT,...) do { if (sem->debug) printk(FMT,__VA_ARGS__); } while(0)
                                                            ^

ERROR:SPACING: space required before the open parenthesis '('
#984: FILE: include/asm-i386/rwsem.h:24:
+#define rwsemdebug(FMT,...) do { if (sem->debug) printk(FMT,__VA_ARGS__); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: include/asm-i386/rwsem.h:26:
+#define rwsemdebug(FMT,...)
                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1003: FILE: include/asm-i386/rwsem.h:43:
+extern struct rw_semaphore *FASTCALL(__down_read_failed(struct rw_semaphore *sem));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1004: FILE: include/asm-i386/rwsem.h:44:
+extern struct rw_semaphore *FASTCALL(__down_write_failed(struct rw_semaphore *sem));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1005: FILE: include/asm-i386/rwsem.h:45:
+extern struct rw_semaphore *FASTCALL(__rwsem_wake(struct rw_semaphore *sem));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1012: FILE: include/asm-i386/rwsem.h:52:
+	rwsemdebug("Entering down_read(count=%08x)\n",atomic_read(&sem->count));
 	                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'down_read', this function's name, in a string
#1012: FILE: include/asm-i386/rwsem.h:52:
+	rwsemdebug("Entering down_read(count=%08x)\n",atomic_read(&sem->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1016: FILE: include/asm-i386/rwsem.h:56:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1023: FILE: include/asm-i386/rwsem.h:63:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1027: FILE: include/asm-i386/rwsem.h:67:
+	rwsemdebug("Leaving down_read(count=%08x)\n",atomic_read(&sem->count));
 	                                            ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'down_read', this function's name, in a string
#1027: FILE: include/asm-i386/rwsem.h:67:
+	rwsemdebug("Leaving down_read(count=%08x)\n",atomic_read(&sem->count));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1035: FILE: include/asm-i386/rwsem.h:75:
+	rwsemdebug("Entering down_write(count=%08x)\n",atomic_read(&sem->count));
 	                                              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'down_write', this function's name, in a string
#1035: FILE: include/asm-i386/rwsem.h:75:
+	rwsemdebug("Entering down_write(count=%08x)\n",atomic_read(&sem->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1039: FILE: include/asm-i386/rwsem.h:79:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1046: FILE: include/asm-i386/rwsem.h:86:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1048: FILE: include/asm-i386/rwsem.h:88:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1052: FILE: include/asm-i386/rwsem.h:92:
+	rwsemdebug("Leaving down_write(count=%08x)\n",atomic_read(&sem->count));
 	                                             ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'down_write', this function's name, in a string
#1052: FILE: include/asm-i386/rwsem.h:92:
+	rwsemdebug("Leaving down_write(count=%08x)\n",atomic_read(&sem->count));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1060: FILE: include/asm-i386/rwsem.h:100:
+	rwsemdebug("Entering up_read(count=%08x)\n",atomic_read(&sem->count));
 	                                           ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'up_read', this function's name, in a string
#1060: FILE: include/asm-i386/rwsem.h:100:
+	rwsemdebug("Entering up_read(count=%08x)\n",atomic_read(&sem->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1064: FILE: include/asm-i386/rwsem.h:104:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1069: FILE: include/asm-i386/rwsem.h:109:
+	rwsemdebug("Leaving up_read(count=%08x)\n",atomic_read(&sem->count));
 	                                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'up_read', this function's name, in a string
#1069: FILE: include/asm-i386/rwsem.h:109:
+	rwsemdebug("Leaving up_read(count=%08x)\n",atomic_read(&sem->count));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1077: FILE: include/asm-i386/rwsem.h:117:
+	rwsemdebug("Entering up_write(count=%08x)\n",atomic_read(&sem->count));
 	                                            ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'up_write', this function's name, in a string
#1077: FILE: include/asm-i386/rwsem.h:117:
+	rwsemdebug("Entering up_write(count=%08x)\n",atomic_read(&sem->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1081: FILE: include/asm-i386/rwsem.h:121:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1083: FILE: include/asm-i386/rwsem.h:123:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1088: FILE: include/asm-i386/rwsem.h:128:
+	rwsemdebug("Leaving up_write(count=%08x)\n",atomic_read(&sem->count));
 	                                           ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'up_write', this function's name, in a string
#1088: FILE: include/asm-i386/rwsem.h:128:
+	rwsemdebug("Leaving up_write(count=%08x)\n",atomic_read(&sem->count));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1091: FILE: include/asm-i386/rwsem.h:131:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1299: FILE: include/linux/sched.h:551:
+extern int FASTCALL(__wake_up_ctx(wait_queue_head_t *q, unsigned int mode, int count, int bit));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1300: FILE: include/linux/sched.h:552:
+extern int FASTCALL(__wake_up_sync_ctx(wait_queue_head_t *q, unsigned int mode, int count, int bit));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1300: FILE: include/linux/sched.h:552:
+extern int FASTCALL(__wake_up_sync_ctx(wait_queue_head_t *q, unsigned int mode, int count, int bit));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1308: FILE: include/linux/sched.h:571:
+#define wake_up_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1308: FILE: include/linux/sched.h:571:
+#define wake_up_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1308: FILE: include/linux/sched.h:571:
+#define wake_up_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1308: FILE: include/linux/sched.h:571:
+#define wake_up_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1308: FILE: include/linux/sched.h:571:
+#define wake_up_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                 	                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1308: FILE: include/linux/sched.h:571:
+#define wake_up_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                 	                                                                 ^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1309: FILE: include/linux/sched.h:572:
+#define wake_up_sync_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1309: FILE: include/linux/sched.h:572:
+#define wake_up_sync_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1309: FILE: include/linux/sched.h:572:
+#define wake_up_sync_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1309: FILE: include/linux/sched.h:572:
+#define wake_up_sync_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                      	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1309: FILE: include/linux/sched.h:572:
+#define wake_up_sync_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                      	                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1309: FILE: include/linux/sched.h:572:
+#define wake_up_sync_ctx(x,count,bit)	__wake_up_ctx((x),TASK_UNINTERRUPTIBLE | TASK_INTERRUPTIBLE,count,bit)
                                      	                                                                 ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1360: FILE: kernel/sched.c:742:
+			if (try_to_wake_up(p, sync) && (curr->flags&WQ_FLAG_EXCLUSIVE) && !--nr_exclusive)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1360: FILE: kernel/sched.c:742:
+			if (try_to_wake_up(p, sync) && (curr->flags&WQ_FLAG_EXCLUSIVE) && !--nr_exclusive)
 			                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1377: FILE: kernel/sched.c:775:
+static inline int __wake_up_ctx_common (wait_queue_head_t *q,

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1385: FILE: kernel/sched.c:783:
+	stop = bit<0;
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1386: FILE: kernel/sched.c:784:
+	if (bit<0) bit = -bit;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1386: FILE: kernel/sched.c:784:
+	if (bit<0) bit = -bit;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1393: FILE: kernel/sched.c:791:
+                wait_queue_t *curr = list_entry(tmp, wait_queue_t, task_list);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: kernel/sched.c:791:
+                wait_queue_t *curr = list_entry(tmp, wait_queue_t, task_list);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1398: FILE: kernel/sched.c:796:
+		if (!test_and_clear_bit(bit,&curr->flags)) {
 		                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1398: FILE: kernel/sched.c:796:
+		if (!test_and_clear_bit(bit,&curr->flags)) {
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1405: FILE: kernel/sched.c:803:
+		try_to_wake_up(p,sync);
 		                ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1408: FILE: kernel/sched.c:806:
+		if (woken>=count)
 		         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1418: FILE: kernel/sched.c:816:
+	int woken = 0;
+	if (q && count) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1420: FILE: kernel/sched.c:818:
+		unsigned long flags;
+		wq_read_lock_irqsave(&q->lock, flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1430: FILE: kernel/sched.c:828:
+	int woken = 0;
+	if (q && count) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1432: FILE: kernel/sched.c:830:
+		unsigned long flags;
+		wq_read_lock_irqsave(&q->lock, flags);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000541112.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 99 errors, 53 warnings, 47 checks, 1346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000541112.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
