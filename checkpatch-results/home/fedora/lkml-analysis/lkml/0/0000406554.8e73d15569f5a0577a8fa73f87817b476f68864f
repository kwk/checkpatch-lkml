ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#37: 
--- a/arch/i386/config.in	Mon Dec 16 13:56:13 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#61: FILE: arch/i386/kernel/time.c:259:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#71: FILE: arch/i386/kernel/time.c:269:
+int use_cyclone = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: arch/i386/kernel/time.c:270:
+int __init cyclone_setup(char *str) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* volatile bar" should be "foo * volatile bar"
#78: FILE: arch/i386/kernel/time.c:276:
+static u32* volatile cyclone_timer;	/* Cyclone MPMC0 register */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#78: FILE: arch/i386/kernel/time.c:276:
+static u32* volatile cyclone_timer;	/* Cyclone MPMC0 register */

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: arch/i386/kernel/time.c:282:
+	int count;
+	spin_lock(&i8253_lock);

ERROR:SPACING: space required before the open parenthesis '('
#86: FILE: arch/i386/kernel/time.c:284:
+	if(cyclone_timer)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#96: FILE: arch/i386/kernel/time.c:294:
+	count = ((LATCH-1) - count) * TICK_SIZE;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#97: FILE: arch/i386/kernel/time.c:295:
+	delay_at_last_interrupt = (count + LATCH/2) / LATCH;
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: arch/i386/kernel/time.c:302:
+	if(!cyclone_timer)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: arch/i386/kernel/time.c:311:
+^I/* convert cyclone ticks to microseconds */^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#115: FILE: arch/i386/kernel/time.c:313:
+	offset = offset/(CYCLONE_TIMER_FREQ/1000000);
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#115: FILE: arch/i386/kernel/time.c:313:
+	offset = offset/(CYCLONE_TIMER_FREQ/1000000);
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: arch/i386/kernel/time.c:321:
+^Iu32* reg;^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#123: FILE: arch/i386/kernel/time.c:321:
+	u32* reg;	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/kernel/time.c:326:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#129: FILE: arch/i386/kernel/time.c:327:
+	printk(KERN_INFO "Summit chipset: Starting Cyclone Counter.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#132: FILE: arch/i386/kernel/time.c:330:
+	pageaddr = (CYCLONE_CBAR_ADDR)&PAGE_MASK;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#133: FILE: arch/i386/kernel/time.c:331:
+	offset = (CYCLONE_CBAR_ADDR)&(~PAGE_MASK);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#135: FILE: arch/i386/kernel/time.c:333:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#136: FILE: arch/i386/kernel/time.c:334:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: arch/i386/kernel/time.c:334:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#137: FILE: arch/i386/kernel/time.c:335:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR register.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: arch/i386/kernel/time.c:339:
+^Ibase = *reg;^I$

ERROR:SPACING: space required before the open brace '{'
#142: FILE: arch/i386/kernel/time.c:340:
+	if(!base){

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: arch/i386/kernel/time.c:340:
+	if(!base){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: arch/i386/kernel/time.c:341:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR value.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: arch/i386/kernel/time.c:345:
+^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#149: FILE: arch/i386/kernel/time.c:347:
+	pageaddr = (base + CYCLONE_PMCC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#150: FILE: arch/i386/kernel/time.c:348:
+	offset = (base + CYCLONE_PMCC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#152: FILE: arch/i386/kernel/time.c:350:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#153: FILE: arch/i386/kernel/time.c:351:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: arch/i386/kernel/time.c:351:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#154: FILE: arch/i386/kernel/time.c:352:
+		printk(KERN_ERR "Summit chipset: Could not find valid PMCC register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#161: FILE: arch/i386/kernel/time.c:359:
+	pageaddr = (base + CYCLONE_MPCS_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#162: FILE: arch/i386/kernel/time.c:360:
+	offset = (base + CYCLONE_MPCS_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#164: FILE: arch/i386/kernel/time.c:362:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#165: FILE: arch/i386/kernel/time.c:363:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: arch/i386/kernel/time.c:363:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#166: FILE: arch/i386/kernel/time.c:364:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPCS register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#173: FILE: arch/i386/kernel/time.c:371:
+	pageaddr = (base + CYCLONE_MPMC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#174: FILE: arch/i386/kernel/time.c:372:
+	offset = (base + CYCLONE_MPMC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#176: FILE: arch/i386/kernel/time.c:374:
+	cyclone_timer = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#177: FILE: arch/i386/kernel/time.c:375:
+	if(!cyclone_timer){

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: arch/i386/kernel/time.c:375:
+	if(!cyclone_timer){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: arch/i386/kernel/time.c:376:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPMC register.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#184: FILE: arch/i386/kernel/time.c:382:
+	for(i=0; i<3; i++){
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#184: FILE: arch/i386/kernel/time.c:382:
+	for(i=0; i<3; i++){
 	          ^

ERROR:SPACING: space required before the open brace '{'
#184: FILE: arch/i386/kernel/time.c:382:
+	for(i=0; i<3; i++){

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: arch/i386/kernel/time.c:382:
+	for(i=0; i<3; i++){

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: arch/i386/kernel/time.c:385:
+		int stall = 100;
+		while(stall--) barrier();

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: arch/i386/kernel/time.c:385:
+		while(stall--) barrier();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#187: FILE: arch/i386/kernel/time.c:385:
+		while(stall--) barrier();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#188: FILE: arch/i386/kernel/time.c:386:
+		if(cyclone_timer[0] == old){

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: arch/i386/kernel/time.c:386:
+		if(cyclone_timer[0] == old){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#189: FILE: arch/i386/kernel/time.c:387:
+			printk(KERN_ERR "Summit chipset: Counter not counting! DISABLED\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: arch/i386/kernel/time.c:394:
+^Ido_gettimeoffset = do_gettimeoffset_cyclone;^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#198: FILE: arch/i386/kernel/time.c:396:
+}
+void __cyclone_delay(unsigned long loops)

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: arch/i386/kernel/time.c:399:
+	unsigned long bclock, now;
+	if(!cyclone_timer)

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: arch/i386/kernel/time.c:399:
+	if(!cyclone_timer)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#207: FILE: arch/i386/kernel/time.c:405:
+	} while ((now-bclock) < loops);
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: arch/i386/kernel/time.c:417:
+int __init cyclone_setup(char *str) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#221: FILE: arch/i386/kernel/time.c:419:
+	printk(KERN_ERR "cyclone: Kernel not compiled with CONFIG_X86_SUMMIT, cannot use the cyclone-timer.\n");

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#225: FILE: arch/i386/kernel/time.c:423:
+const int use_cyclone = 0;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#227: FILE: arch/i386/kernel/time.c:425:
+static unsigned long do_gettimeoffset_cyclone(void) {return 0;}
                                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: arch/i386/kernel/time.c:649:
+	if(use_cyclone)

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/i386/kernel/time.c:862:
+ ^Iif(use_cyclone)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: arch/i386/kernel/time.c:862:
+ ^Iif(use_cyclone)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/i386/kernel/time.c:862:
+ ^Iif(use_cyclone)$

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: arch/i386/kernel/time.c:862:
+ 	if(use_cyclone)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: arch/i386/kernel/time.c:864:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: arch/i386/kernel/time.c:870:
+^I^I^I * However, we want to allow for the cyclone timer $

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#275: FILE: arch/i386/kernel/time.c:871:
+			 * to work w/ or w/o the TSCs being avaliable
 			                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open brace '{'
#279: FILE: arch/i386/kernel/time.c:874:
+			if(!use_cyclone){

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: arch/i386/kernel/time.c:874:
+			if(!use_cyclone){

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: arch/i386/kernel/time.c:878:
+^I^I^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: arch/i386/kernel/time.c:878:
+^I^I^I ^I */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#311: FILE: arch/i386/lib/delay.c:59:
 }
+extern __cyclone_delay(unsigned long loops);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#312: FILE: arch/i386/lib/delay.c:60:
+extern int use_cyclone;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: include/asm-i386/fixmap.h:69:
+#endif $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#342: FILE: include/asm-i386/smpboot.h:17:
+extern int cyclone_setup(char*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: include/asm-i386/smpboot.h:17:
+extern int cyclone_setup(char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#342: FILE: include/asm-i386/smpboot.h:17:
+extern int cyclone_setup(char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406554.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 18 warnings, 17 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406554.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
