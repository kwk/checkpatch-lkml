WARNING:TYPO_SPELLING: 'Wouldnt' may be misspelled - perhaps 'Wouldn't'?
#67: 
Wouldnt it be better to just preallocate the hash nodes, like lockdep 
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/mbcache.c:559:
+			__list_entry(l, struct mb_cache_entry,
 			           e_indexes[index].o_list);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: include/linux/list.h:827:
+#define __hlist_entry(ptr, type, member) __container_of(ptr,type,member)
                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: include/linux/list.h:827:
+#define __hlist_entry(ptr, type, member) __container_of(ptr,type,member)
                                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tpos' - possible side-effects?
#158: FILE: include/linux/list.h:903:
+#define __hlist_for_each_entry_rcu(tpos, pos, head, member)		 \
+	for (pos = (head)->first;					 \
+	     rcu_dereference(pos) && ({ prefetch(pos->next); 1;}) &&	 \
+		({ tpos = __hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = pos->next)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#158: FILE: include/linux/list.h:903:
+#define __hlist_for_each_entry_rcu(tpos, pos, head, member)		 \
+	for (pos = (head)->first;					 \
+	     rcu_dereference(pos) && ({ prefetch(pos->next); 1;}) &&	 \
+		({ tpos = __hlist_entry(pos, typeof(*tpos), member); 1;}); \
+	     pos = pos->next)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#160: FILE: include/linux/list.h:905:
+	     rcu_dereference(pos) && ({ prefetch(pos->next); 1;}) &&	 \
 	                                                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#161: FILE: include/linux/list.h:906:
+		({ tpos = __hlist_entry(pos, typeof(*tpos), member); 1;}); \
 		                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pid' - possible side-effects?
#175: FILE: include/linux/pid.h:128:
+#define __do_each_pid_task(pid, type, task)				\
+	do {								\
+		struct hlist_node *pos___;				\
+		if (pid != NULL)					\
+			__hlist_for_each_entry_rcu((task), pos___,	\
+				&pid->tasks[type], pids[type].node) {

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pid' may be better as '(pid)' to avoid precedence issues
#175: FILE: include/linux/pid.h:128:
+#define __do_each_pid_task(pid, type, task)				\
+	do {								\
+		struct hlist_node *pos___;				\
+		if (pid != NULL)					\
+			__hlist_for_each_entry_rcu((task), pos___,	\
+				&pid->tasks[type], pids[type].node) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pid"
#178: FILE: include/linux/pid.h:131:
+		if (pid != NULL)					\

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#181: FILE: include/linux/pid.h:134:
+				&pid->tasks[type], pids[type].node) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000008620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 1 warnings, 7 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000008620.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
