WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
Content-Type: text/x-patch; name=lk.dump_user_task.patch; charset=iso-8859-1

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: sh/kernel/traps.c:1:
+/* $Id: traps.c,v 1.1.1.1.2.5 2003/10/23 22:08:56 yoshii Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#62: FILE: sh/kernel/traps.c:1:
+/* $Id: traps.c,v 1.1.1.1.2.5 2003/10/23 22:08:56 yoshii Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: sh/kernel/traps.c:35:
+void dump_user_task (struct task_struct *tsk, struct pt_regs *regs);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#79: FILE: sh/kernel/traps.c:119:
+		printk(KERN_ALERT "no fixup: pid=%d pc=0x%lx\n",current->pid,current->thread.pc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: sh/kernel/traps.c:119:
+		printk(KERN_ALERT "no fixup: pid=%d pc=0x%lx\n",current->pid,current->thread.pc);
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: sh/kernel/traps.c:119:
+		printk(KERN_ALERT "no fixup: pid=%d pc=0x%lx\n",current->pid,current->thread.pc);
 		                                                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#96: FILE: sh/kernel/traps.c:613:
+/*
+** This attempts to do a backtrace through the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: sh/kernel/traps.c:666:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#110: FILE: sh/kernel/traps.c:668:
+/*
+** Generate Userspace Backtrace

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: sh/kernel/traps.c:677:
+    unsigned long addr;$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#121: FILE: sh/kernel/traps.c:679:
+#if 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: sh/kernel/traps.c:680:
+    printk(KERN_ALERT "Frame %d (%p->%p)\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#122: FILE: sh/kernel/traps.c:680:
+    printk(KERN_ALERT "Frame %d (%p->%p)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: sh/kernel/traps.c:681:
+    printk(KERN_ALERT "Frame %d (%p->%p)\n",
+	    frame, start_addr, end_addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: sh/kernel/traps.c:683:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: sh/kernel/traps.c:683:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: sh/kernel/traps.c:684:
+    printk(KERN_ALERT "Frame %2d: ", frame);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#126: FILE: sh/kernel/traps.c:684:
+    printk(KERN_ALERT "Frame %2d: ", frame);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: sh/kernel/traps.c:686:
+    do {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: sh/kernel/traps.c:688:
+	printk("0x%08lx ", addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: sh/kernel/traps.c:690:
+    } while (start_addr<end_addr);$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#132: FILE: sh/kernel/traps.c:690:
+    } while (start_addr<end_addr);
                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: sh/kernel/traps.c:691:
+^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: sh/kernel/traps.c:692:
+    get_user(addr, end_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: sh/kernel/traps.c:693:
+    printk(": <0x%08lx>\n",addr);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#135: FILE: sh/kernel/traps.c:693:
+    printk(": <0x%08lx>\n",addr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: sh/kernel/traps.c:693:
+    printk(": <0x%08lx>\n",addr);
                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: sh/kernel/traps.c:696:
+void dump_user_task (struct task_struct *tsk, struct pt_regs *regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: sh/kernel/traps.c:698:
+    unsigned long start_code, end_code, *sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: sh/kernel/traps.c:699:
+    unsigned long *start_frame, *end_frame;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: sh/kernel/traps.c:700:
+    int frame=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: sh/kernel/traps.c:700:
+    int frame=0;
              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: sh/kernel/traps.c:701:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: sh/kernel/traps.c:701:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: sh/kernel/traps.c:702:
+    if (!user_mode(regs)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#145: FILE: sh/kernel/traps.c:703:
+	printk(KERN_ALERT "dump_user_task: not in userspace");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_user_task', this function's name, in a string
#145: FILE: sh/kernel/traps.c:703:
+	printk(KERN_ALERT "dump_user_task: not in userspace");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: sh/kernel/traps.c:705:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: sh/kernel/traps.c:707:
+    printk(KERN_ALERT "dump_user_task (%p): %s, pid %d, pc 0x%lx\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#149: FILE: sh/kernel/traps.c:707:
+    printk(KERN_ALERT "dump_user_task (%p): %s, pid %d, pc 0x%lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dump_user_task', this function's name, in a string
#149: FILE: sh/kernel/traps.c:707:
+    printk(KERN_ALERT "dump_user_task (%p): %s, pid %d, pc 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: sh/kernel/traps.c:708:
+    printk(KERN_ALERT "dump_user_task (%p): %s, pid %d, pc 0x%lx\n",
+	    tsk, tsk->comm, tsk->pid, regs->pc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: sh/kernel/traps.c:709:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: sh/kernel/traps.c:709:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: sh/kernel/traps.c:710:
+    show_regs(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: sh/kernel/traps.c:717:
+    start_code = tsk->mm->start_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: sh/kernel/traps.c:718:
+    end_code = tsk->mm->end_code;$

CHECK:SPACING: No space is necessary after a cast
#161: FILE: sh/kernel/traps.c:719:
+    sp = (unsigned long *)  regs->regs[14];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: sh/kernel/traps.c:719:
+    sp = (unsigned long *)  regs->regs[14];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: sh/kernel/traps.c:720:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: sh/kernel/traps.c:720:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: sh/kernel/traps.c:721:
+    printk(KERN_ALERT "start_code=0x%lx, end_code=0x%lx, sp=%p/0x%lx\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#163: FILE: sh/kernel/traps.c:721:
+    printk(KERN_ALERT "start_code=0x%lx, end_code=0x%lx, sp=%p/0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: sh/kernel/traps.c:722:
+    printk(KERN_ALERT "start_code=0x%lx, end_code=0x%lx, sp=%p/0x%lx\n",
+	    start_code,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: sh/kernel/traps.c:725:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: sh/kernel/traps.c:725:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: sh/kernel/traps.c:734:
+    start_frame = sp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: sh/kernel/traps.c:735:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: sh/kernel/traps.c:735:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: sh/kernel/traps.c:736:
+    do {$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: sh/kernel/traps.c:738:
+	struct vm_area_struct * vma;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#184: FILE: sh/kernel/traps.c:742:
+	if(addr==0)
+	    vma = NULL;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#184: FILE: sh/kernel/traps.c:742:
+	if(addr==0)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: sh/kernel/traps.c:742:
+	if(addr==0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#186: FILE: sh/kernel/traps.c:744:
+	else
+	    vma = find_vma(tsk->mm, addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: sh/kernel/traps.c:746:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#189: FILE: sh/kernel/traps.c:747:
+	if (vma) {
+	    if (vma->vm_flags&VM_EXECUTABLE)

WARNING:TABSTOP: Statements should start on a tabstop
#190: FILE: sh/kernel/traps.c:748:
+	    if (vma->vm_flags&VM_EXECUTABLE)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#190: FILE: sh/kernel/traps.c:748:
+	    if (vma->vm_flags&VM_EXECUTABLE)
+	    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#190: FILE: sh/kernel/traps.c:748:
+	    if (vma->vm_flags&VM_EXECUTABLE)
 	                     ^

WARNING:TABSTOP: Statements should start on a tabstop
#191: FILE: sh/kernel/traps.c:749:
+	    {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#192: FILE: sh/kernel/traps.c:750:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#193: FILE: sh/kernel/traps.c:751:
+		printk(KERN_ALERT "addr %p, vma 0x%lx (0x%lx->0x%lx), flags 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: sh/kernel/traps.c:752:
+		printk(KERN_ALERT "addr %p, vma 0x%lx (0x%lx->0x%lx), flags 0x%x\n",
+			addr, vma, vma->vm_start, vma->vm_end, vma->vm_flags);

WARNING:TABSTOP: Statements should start on a tabstop
#201: FILE: sh/kernel/traps.c:759:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: sh/kernel/traps.c:762:
+    } while ((unsigned long)sp<tsk->mm->start_stack && frame<4 );$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#204: FILE: sh/kernel/traps.c:762:
+    } while ((unsigned long)sp<tsk->mm->start_stack && frame<4 );
                               ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#204: FILE: sh/kernel/traps.c:762:
+    } while ((unsigned long)sp<tsk->mm->start_stack && frame<4 );
                                                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#204: FILE: sh/kernel/traps.c:762:
+    } while ((unsigned long)sp<tsk->mm->start_stack && frame<4 );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: sh/kernel/traps.c:763:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: sh/kernel/traps.c:763:
+    $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#206: FILE: sh/kernel/traps.c:764:
+    
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 55 warnings, 8 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
