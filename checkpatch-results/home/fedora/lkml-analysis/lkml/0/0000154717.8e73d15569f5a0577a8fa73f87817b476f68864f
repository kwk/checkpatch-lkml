ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#60: FILE: kernel/sched.c:4998:
+	sched_group_nodes = kmalloc(sizeof(struct sched_group*)*MAX_NUMNODES,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#60: FILE: kernel/sched.c:4998:
+	sched_group_nodes = kmalloc(sizeof(struct sched_group*)*MAX_NUMNODES,
 	                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: kernel/sched.c:4999:
+	sched_group_nodes = kmalloc(sizeof(struct sched_group*)*MAX_NUMNODES,
+					   GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#63: FILE: kernel/sched.c:5001:
+		printk(KERN_WARNING "Can not alloc sched group node list\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#63: FILE: kernel/sched.c:5001:
+	if (!sched_group_nodes) {
+		printk(KERN_WARNING "Can not alloc sched group node list\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#80: FILE: kernel/sched.c:5022:
+				sched_group_allnodes
+					= kmalloc(sizeof(struct sched_group)

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#84: FILE: kernel/sched.c:5026:
+					printk(KERN_WARNING

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#89: FILE: kernel/sched.c:5031:
+				sched_group_allnodes_bycpu[i]
+						= sched_group_allnodes;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#130: FILE: kernel/sched.c:5261:
+		struct sched_group *sched_group_allnodes
+			= sched_group_allnodes_bycpu[cpu];

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#132: FILE: kernel/sched.c:5263:
+		struct sched_group **sched_group_nodes
+			= sched_group_nodes_bycpu[cpu];

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#135: FILE: kernel/sched.c:5266:
+		if (sched_group_allnodes) {
+			kfree(sched_group_allnodes);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#152: FILE: kernel/sched.c:5281:
+			if (sg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154717.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 7 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154717.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
