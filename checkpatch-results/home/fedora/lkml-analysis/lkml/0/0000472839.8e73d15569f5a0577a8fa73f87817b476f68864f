WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -urN -X txt/diff-exclude linux-2.5-linus/fs/dquot.c linux-2.5/fs/dquot.c

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#39: FILE: fs/dquot.c:705:
number)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: fs/dquot.c:840:
+static int check_bdq(struct dquot *dquot, qsize_t space, int prealloc, char $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#211: FILE: include/linux/fs.h:932:
+	int (*alloc_space) (struct inode *, qsize_t, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#211: FILE: include/linux/fs.h:932:
+	int (*alloc_space) (struct inode *, qsize_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qsize_t' should also have an identifier name
#211: FILE: include/linux/fs.h:932:
+	int (*alloc_space) (struct inode *, qsize_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#211: FILE: include/linux/fs.h:932:
+	int (*alloc_space) (struct inode *, qsize_t, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#214: FILE: include/linux/fs.h:934:
+	void (*free_space) (struct inode *, qsize_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#214: FILE: include/linux/fs.h:934:
+	void (*free_space) (struct inode *, qsize_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qsize_t' should also have an identifier name
#214: FILE: include/linux/fs.h:934:
+	void (*free_space) (struct inode *, qsize_t);

CHECK:BIT_MACRO: Prefer using the BIT macro
#253: FILE: include/linux/quota.h:53:
+#define QUOTABLOCK_SIZE (1 << QUOTABLOCK_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#256: FILE: include/linux/quota.h:56:
+#define qb2kb(x) ((x) << (QUOTABLOCK_BITS-10))
                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#257: FILE: include/linux/quota.h:57:
+#define kb2qb(x) ((x) >> (QUOTABLOCK_BITS-10))
                                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: include/linux/quota.h:108:
+	struct quota_format_type * dqi_format;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: include/linux/quotaops.h:28:
+extern int  dquot_alloc_space(struct inode *inode, qsize_t number, int $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/linux/quotaops.h:28:
+extern int  dquot_alloc_space(struct inode *inode, qsize_t number, int 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/quotaops.h:31:
+extern void dquot_free_space(struct inode *inode, qsize_t number);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: include/linux/quotaops.h:62:
+static __inline__ int DQUOT_PREALLOC_SPACE_NODIRTY(struct inode *inode, $

WARNING:INLINE: plain inline is preferred over __inline__
#316: FILE: include/linux/quotaops.h:62:
+static __inline__ int DQUOT_PREALLOC_SPACE_NODIRTY(struct inode *inode, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: include/linux/quotaops.h:63:
+static __inline__ int DQUOT_PREALLOC_SPACE_NODIRTY(struct inode *inode, 
 {

WARNING:INLINE: plain inline is preferred over __inline__
#338: FILE: include/linux/quotaops.h:78:
+static __inline__ int DQUOT_PREALLOC_SPACE(struct inode *inode, qsize_t nr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: include/linux/quotaops.h:81:
+        if (!(ret =  DQUOT_PREALLOC_SPACE_NODIRTY(inode, nr)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: include/linux/quotaops.h:81:
+        if (!(ret =  DQUOT_PREALLOC_SPACE_NODIRTY(inode, nr)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#342: FILE: include/linux/quotaops.h:81:
+        if (!(ret =  DQUOT_PREALLOC_SPACE_NODIRTY(inode, nr)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: include/linux/quotaops.h:86:
+static __inline__ int DQUOT_ALLOC_SPACE_NODIRTY(struct inode *inode, qsize_t $

WARNING:INLINE: plain inline is preferred over __inline__
#348: FILE: include/linux/quotaops.h:86:
+static __inline__ int DQUOT_ALLOC_SPACE_NODIRTY(struct inode *inode, qsize_t 

WARNING:INLINE: plain inline is preferred over __inline__
#370: FILE: include/linux/quotaops.h:102:
+static __inline__ int DQUOT_ALLOC_SPACE(struct inode *inode, qsize_t nr)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#374: FILE: include/linux/quotaops.h:105:
+	if (!(ret = DQUOT_ALLOC_SPACE_NODIRTY(inode, nr)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: include/linux/quotaops.h:124:
+static __inline__ void DQUOT_FREE_SPACE_NODIRTY(struct inode *inode, qsize_t $

WARNING:INLINE: plain inline is preferred over __inline__
#383: FILE: include/linux/quotaops.h:124:
+static __inline__ void DQUOT_FREE_SPACE_NODIRTY(struct inode *inode, qsize_t 

WARNING:INLINE: plain inline is preferred over __inline__
#398: FILE: include/linux/quotaops.h:134:
+static __inline__ void DQUOT_FREE_SPACE(struct inode *inode, qsize_t nr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: include/linux/quotaops.h:177:
+extern __inline__ int DQUOT_PREALLOC_SPACE_NODIRTY(struct inode *inode, $

WARNING:INLINE: plain inline is preferred over __inline__
#411: FILE: include/linux/quotaops.h:177:
+extern __inline__ int DQUOT_PREALLOC_SPACE_NODIRTY(struct inode *inode, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: include/linux/quotaops.h:178:
+extern __inline__ int DQUOT_PREALLOC_SPACE_NODIRTY(struct inode *inode, 
 {

WARNING:INLINE: plain inline is preferred over __inline__
#422: FILE: include/linux/quotaops.h:185:
+extern __inline__ int DQUOT_PREALLOC_SPACE(struct inode *inode, qsize_t nr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: include/linux/quotaops.h:192:
+extern __inline__ int DQUOT_ALLOC_SPACE_NODIRTY(struct inode *inode, qsize_t $

WARNING:INLINE: plain inline is preferred over __inline__
#431: FILE: include/linux/quotaops.h:192:
+extern __inline__ int DQUOT_ALLOC_SPACE_NODIRTY(struct inode *inode, qsize_t 

WARNING:INLINE: plain inline is preferred over __inline__
#442: FILE: include/linux/quotaops.h:200:
+extern __inline__ int DQUOT_ALLOC_SPACE(struct inode *inode, qsize_t nr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: include/linux/quotaops.h:207:
+extern __inline__ void DQUOT_FREE_SPACE_NODIRTY(struct inode *inode, qsize_t $

WARNING:INLINE: plain inline is preferred over __inline__
#451: FILE: include/linux/quotaops.h:207:
+extern __inline__ void DQUOT_FREE_SPACE_NODIRTY(struct inode *inode, qsize_t 

WARNING:INLINE: plain inline is preferred over __inline__
#461: FILE: include/linux/quotaops.h:214:
+extern __inline__ void DQUOT_FREE_SPACE(struct inode *inode, qsize_t nr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: include/linux/quotaops.h:222:
+#define DQUOT_PREALLOC_BLOCK_NODIRTY(inode, nr)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: include/linux/quotaops.h:223:
+#define DQUOT_PREALLOC_BLOCK(inode, nr)^IDQUOT_PREALLOC_SPACE(inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: include/linux/quotaops.h:224:
+#define DQUOT_ALLOC_BLOCK_NODIRTY(inode, nr) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: include/linux/quotaops.h:225:
+#define DQUOT_ALLOC_BLOCK(inode, nr) DQUOT_ALLOC_SPACE(inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: include/linux/quotaops.h:226:
+#define DQUOT_FREE_BLOCK_NODIRTY(inode, nr) DQUOT_FREE_SPACE_NODIRTY(inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: include/linux/quotaops.h:227:
+#define DQUOT_FREE_BLOCK(inode, nr) DQUOT_FREE_SPACE(inode, $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 21 warnings, 7 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
