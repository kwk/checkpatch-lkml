CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#35: 
I dis this small patch , because i need to know information about swap´s
                                                                      ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: memory.c:52:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: memory.c:1511:
+    struct task_struct *p =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#67: FILE: memory.c:1511:
+    struct task_struct *p =3D NULL;
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#68: FILE: memory.c:1512:
+    struct task_struct *p =3D NULL;
+   =20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: memory.c:1512:
+   =20$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#68: FILE: memory.c:1512:
+   =20
    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: memory.c:1513:
+    for_each_task(p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#69: FILE: memory.c:1513:
+    for_each_task(p)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: memory.c:1514:
+    {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#71: FILE: memory.c:1515:
+	if(p !=3D NULL)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#71: FILE: memory.c:1515:
+	if(p !=3D NULL)
+	{

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#71: FILE: memory.c:1515:
+	if(p !=3D NULL)
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#71: FILE: memory.c:1515:
+	if(p !=3D NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#73: FILE: memory.c:1517:
+	    if(p->pid !=3D 1)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#73: FILE: memory.c:1517:
+	    if(p->pid !=3D 1)
+	    {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#73: FILE: memory.c:1517:
+	    if(p->pid !=3D 1)
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#73: FILE: memory.c:1517:
+	    if(p->pid !=3D 1)

WARNING:TABSTOP: Statements should start on a tabstop
#74: FILE: memory.c:1518:
+	    {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#75: FILE: memory.c:1519:
+		if(p->mm !=3D NULL)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#75: FILE: memory.c:1519:
+		if(p->mm !=3D NULL)
+		{

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#75: FILE: memory.c:1519:
+		if(p->mm !=3D NULL)
 		         ^

ERROR:SPACING: space required before the open parenthesis '('
#75: FILE: memory.c:1519:
+		if(p->mm !=3D NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#77: FILE: memory.c:1521:
+		    if(p->nswap > 0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#77: FILE: memory.c:1521:
+		    if(p->nswap > 0)
+		    {

ERROR:SPACING: space required before the open parenthesis '('
#77: FILE: memory.c:1521:
+		    if(p->nswap > 0)

WARNING:TABSTOP: Statements should start on a tabstop
#78: FILE: memory.c:1522:
+		    {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#79: FILE: memory.c:1523:
+			printk(KERN_CRIT"Process name: %s pid %d\n",p->comm,p->pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: memory.c:1523:
+			printk(KERN_CRIT"Process name: %s pid %d\n",p->comm,p->pid);
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: memory.c:1523:
+			printk(KERN_CRIT"Process name: %s pid %d\n",p->comm,p->pid);
 			                                                   ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#79: FILE: memory.c:1523:
+			printk(KERN_CRIT"Process name: %s pid %d\n",p->comm,p->pid);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#80: FILE: memory.c:1524:
+			printk(KERN_CRIT"Nswap: %lu Totalvm %lu Cswap =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: memory.c:1530:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: memory.c:1531:
+    return 0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 14 warnings, 3 checks, 36 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000339009.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
