ERROR:SPACING: space required before the open brace '{'
#74: FILE: arch/um/drivers/port_user.c:133:
+	if(setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &arg, sizeof(arg)) < 0){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#74: FILE: arch/um/drivers/port_user.c:133:
+	if(setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &arg, sizeof(arg)) < 0){

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#89: FILE: arch/um/kernel/mem_user.c:231:
+#if 0

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#98: FILE: arch/um/kernel/mem_user.c:240:
+int logging_line = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: arch/um/kernel/mem_user.c:245:
+        va_list ap;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/um/kernel/mem_user.c:245:
+        va_list ap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/um/kernel/mem_user.c:246:
+        struct timeval tv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/um/kernel/mem_user.c:246:
+        struct timeval tv;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: arch/um/kernel/mem_user.c:247:
+        struct openflags flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/um/kernel/mem_user.c:247:
+        struct openflags flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: arch/um/kernel/mem_user.c:249:
+        if(logging == 0) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/um/kernel/mem_user.c:249:
+        if(logging == 0) return;$

ERROR:SPACING: space required before the open parenthesis '('
#107: FILE: arch/um/kernel/mem_user.c:249:
+        if(logging == 0) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#107: FILE: arch/um/kernel/mem_user.c:249:
+        if(logging == 0) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/um/kernel/mem_user.c:250:
+        if(logging_fd < 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/um/kernel/mem_user.c:250:
+        if(logging_fd < 0){$

ERROR:SPACING: space required before the open brace '{'
#108: FILE: arch/um/kernel/mem_user.c:250:
+        if(logging_fd < 0){

ERROR:SPACING: space required before the open parenthesis '('
#108: FILE: arch/um/kernel/mem_user.c:250:
+        if(logging_fd < 0){

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/um/kernel/mem_user.c:251:
+                flags = of_create(of_trunc(of_rdwr(OPENFLAGS())));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/um/kernel/mem_user.c:251:
+                flags = of_create(of_trunc(of_rdwr(OPENFLAGS())));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/um/kernel/mem_user.c:252:
+                logging_fd = os_open_file("log", flags, 0644);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/um/kernel/mem_user.c:252:
+                logging_fd = os_open_file("log", flags, 0644);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/um/kernel/mem_user.c:253:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/um/kernel/mem_user.c:253:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/um/kernel/mem_user.c:254:
+        gettimeofday(&tv, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/um/kernel/mem_user.c:254:
+        gettimeofday(&tv, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/um/kernel/mem_user.c:255:
+        sprintf(logging_buf, "%d\t %u.%u  ", logging_line++, tv.tv_sec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/um/kernel/mem_user.c:255:
+        sprintf(logging_buf, "%d\t %u.%u  ", logging_line++, tv.tv_sec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: arch/um/kernel/mem_user.c:256:
+                tv.tv_usec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/um/kernel/mem_user.c:256:
+                tv.tv_usec);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/um/kernel/mem_user.c:257:
+        va_start(ap, fmt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/um/kernel/mem_user.c:257:
+        va_start(ap, fmt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: arch/um/kernel/mem_user.c:258:
+        vsprintf(&logging_buf[strlen(logging_buf)], fmt, ap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/um/kernel/mem_user.c:258:
+        vsprintf(&logging_buf[strlen(logging_buf)], fmt, ap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: arch/um/kernel/mem_user.c:259:
+        va_end(ap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/um/kernel/mem_user.c:259:
+        va_end(ap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/um/kernel/mem_user.c:260:
+        write(logging_fd, logging_buf, strlen(logging_buf));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/um/kernel/mem_user.c:260:
+        write(logging_fd, logging_buf, strlen(logging_buf));$

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: arch/um/kernel/tt/trap_user.c:37:
+	if(sig == SIGSEGV)

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: arch/um/os-Linux/file.c:311:
+	if(actual != offset)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234033.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 16 warnings, 0 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234033.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
