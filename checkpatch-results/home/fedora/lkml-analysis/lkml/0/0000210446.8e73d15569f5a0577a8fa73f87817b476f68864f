WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> interface is still horrible as it duplicates the dnotify calls all over the

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: fs/namei.c:2139:
+		const char *new_name = old_dentry->d_name.name;
+		fsnotify_move(old_dir, new_dir, old_name, new_name);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#355: FILE: fs/open.c:1014:
+	fsnotify_flush(filp, id);
 	               ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == READ'
#506: FILE: fs/compat.c:1195:
+	if ((ret + (type == READ)) > 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#508: FILE: fs/compat.c:1197:
+		struct dentry *dentry = file->f_dentry;
+		if (type == READ)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#523: FILE: include/linux/fsnotify.h:1:
+#ifndef _LINUX_FS_NOTIFY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#549: FILE: include/linux/fsnotify.h:27:
+	if (old_dir == new_dir)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#551: FILE: include/linux/fsnotify.h:29:
+	else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#583: FILE: include/linux/fsnotify.h:61:
+	inotify_inode_queue_event(dir, IN_DELETE_SUBDIR,0,dentry->d_name.name);
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#583: FILE: include/linux/fsnotify.h:61:
+	inotify_inode_queue_event(dir, IN_DELETE_SUBDIR,0,dentry->d_name.name);
 	                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: include/linux/fsnotify.h:141:
+        if (ia_valid & ATTR_UID) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: include/linux/fsnotify.h:141:
+        if (ia_valid & ATTR_UID) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: include/linux/fsnotify.h:142:
+                in_mask |= IN_ATTRIB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: include/linux/fsnotify.h:142:
+                in_mask |= IN_ATTRIB;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: include/linux/fsnotify.h:145:
+        if (ia_valid & ATTR_GID) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: include/linux/fsnotify.h:145:
+        if (ia_valid & ATTR_GID) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: include/linux/fsnotify.h:146:
+                in_mask |= IN_ATTRIB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: include/linux/fsnotify.h:146:
+                in_mask |= IN_ATTRIB;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: include/linux/fsnotify.h:149:
+        if (ia_valid & ATTR_SIZE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: include/linux/fsnotify.h:149:
+        if (ia_valid & ATTR_SIZE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: include/linux/fsnotify.h:150:
+                in_mask |= IN_MODIFY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: include/linux/fsnotify.h:150:
+                in_mask |= IN_MODIFY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: include/linux/fsnotify.h:153:
+        /* both times implies a utime(s) call */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: include/linux/fsnotify.h:154:
+        if ((ia_valid & (ATTR_ATIME|ATTR_MTIME)) == (ATTR_ATIME|ATTR_MTIME)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: include/linux/fsnotify.h:154:
+        if ((ia_valid & (ATTR_ATIME|ATTR_MTIME)) == (ATTR_ATIME|ATTR_MTIME)) {$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#676: FILE: include/linux/fsnotify.h:154:
+        if ((ia_valid & (ATTR_ATIME|ATTR_MTIME)) == (ATTR_ATIME|ATTR_MTIME)) {
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#676: FILE: include/linux/fsnotify.h:154:
+        if ((ia_valid & (ATTR_ATIME|ATTR_MTIME)) == (ATTR_ATIME|ATTR_MTIME)) {
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: include/linux/fsnotify.h:155:
+                in_mask |= IN_ATTRIB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: include/linux/fsnotify.h:155:
+                in_mask |= IN_ATTRIB;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: include/linux/fsnotify.h:158:
+        else if (ia_valid & ATTR_ATIME) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: include/linux/fsnotify.h:158:
+        else if (ia_valid & ATTR_ATIME) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#680: FILE: include/linux/fsnotify.h:158:
+	}
+        else if (ia_valid & ATTR_ATIME) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: include/linux/fsnotify.h:159:
+                in_mask |= IN_ACCESS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: include/linux/fsnotify.h:159:
+                in_mask |= IN_ACCESS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: include/linux/fsnotify.h:162:
+        else if (ia_valid & ATTR_MTIME) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: include/linux/fsnotify.h:162:
+        else if (ia_valid & ATTR_MTIME) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#684: FILE: include/linux/fsnotify.h:162:
+	}
+        else if (ia_valid & ATTR_MTIME) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: include/linux/fsnotify.h:163:
+                in_mask |= IN_MODIFY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: include/linux/fsnotify.h:163:
+                in_mask |= IN_MODIFY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: include/linux/fsnotify.h:166:
+        if (ia_valid & ATTR_MODE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: include/linux/fsnotify.h:166:
+        if (ia_valid & ATTR_MODE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: include/linux/fsnotify.h:167:
+                in_mask |= IN_ATTRIB;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: include/linux/fsnotify.h:167:
+                in_mask |= IN_ATTRIB;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#713: FILE: include/linux/fsnotify.h:191:
+static inline void fsnotify_flush(struct file *filp, fl_owner_t id)
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#715: FILE: include/linux/fsnotify.h:193:
+	dnotify_flush(filp, id);
 	              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#725: FILE: include/linux/fsnotify.h:203:
+static inline char * fsnotify_oldname_init(struct dentry *old_dentry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210446.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 21 warnings, 5 checks, 633 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210446.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
