WARNING:TYPO_SPELLING: 'independend' may be misspelled - perhaps 'independent'?
#31: 
makes CONFIG_SOFTWARE_SUSPEND independend from CONFIG_ACPI_SLEEP,
                              ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
--- linux.orig/drivers/acpi/sleep/main.c	2003-07-22 13:39:42.000000000 +0200

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#56: FILE: drivers/acpi/sleep/main.c:208:
+	printk(KERN_DEBUG "Back to C!\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#210: FILE: include/linux/suspend.h:82:
+extern void refrigerator(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/linux/suspend.h:83:
+extern int freeze_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: include/linux/suspend.h:84:
+extern void thaw_processes(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: include/linux/suspend.h:91:
+extern int prepare_suspend_console(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: include/linux/suspend.h:92:
+extern void restore_console(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#283: FILE: kernel/suspend.c:152:
+# define PRINTK(f, a...)	printk(f, ## a)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_ZOMBIE'
#315: FILE: kernel/suspend.c:174:
+	if ((p->state == TASK_ZOMBIE) || (p->state == TASK_DEAD))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_DEAD'
#315: FILE: kernel/suspend.c:174:
+	if ((p->state == TASK_ZOMBIE) || (p->state == TASK_DEAD))

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: kernel/suspend.c:257:
+ ^I^Iif (!interesting_process(p))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: kernel/suspend.c:257:
+ ^I^Iif (!interesting_process(p))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: kernel/suspend.c:257:
+ ^I^Iif (!interesting_process(p))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: kernel/suspend.c:259:
+ ^I^Iif (p->flags & PF_FROZEN) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#351: FILE: kernel/suspend.c:259:
+ ^I^Iif (p->flags & PF_FROZEN) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: kernel/suspend.c:259:
+ ^I^Iif (p->flags & PF_FROZEN) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#351: FILE: kernel/suspend.c:259:
+ 		if (p->flags & PF_FROZEN) {
[...]
+ 		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: kernel/suspend.c:260:
+ ^I^I^Ip->flags &= ~PF_FROZEN;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: kernel/suspend.c:260:
+ ^I^I^Ip->flags &= ~PF_FROZEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/suspend.c:260:
+ ^I^I^Ip->flags &= ~PF_FROZEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: kernel/suspend.c:261:
+ ^I^I^Iwake_up_process(p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: kernel/suspend.c:261:
+ ^I^I^Iwake_up_process(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: kernel/suspend.c:261:
+ ^I^I^Iwake_up_process(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: kernel/suspend.c:262:
+ ^I^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: kernel/suspend.c:262:
+ ^I^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: kernel/suspend.c:262:
+ ^I^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#354: FILE: kernel/suspend.c:262:
+ 		} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: kernel/suspend.c:263:
+ ^I^I^IPRINTK(KERN_INFO " Strange, %s not frozen\n", p->comm );$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: kernel/suspend.c:263:
+ ^I^I^IPRINTK(KERN_INFO " Strange, %s not frozen\n", p->comm );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: kernel/suspend.c:263:
+ ^I^I^IPRINTK(KERN_INFO " Strange, %s not frozen\n", p->comm );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#355: FILE: kernel/suspend.c:263:
+ 			PRINTK(KERN_INFO " Strange, %s not frozen\n", p->comm );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#372: FILE: kernel/suspend.c:280:
+	if(vc_allocate(SUSPEND_CONSOLE))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#374: FILE: kernel/suspend.c:282:
+	   * we don't want to mess the screen for now. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: kernel/suspend.c:285:
+	set_console (SUSPEND_CONSOLE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#379: FILE: kernel/suspend.c:287:
+		printk(KERN_ERR "Bummer. Can't switch VCs.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: kernel/suspend.c:301:
+	set_console (orig_fgconsole);

WARNING:RETURN_VOID: void function return statements are not generally useful
#396: FILE: kernel/suspend.c:304:
+	return;
+}

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#494: FILE: kernel/suspend.c:869:
+		/* No need to invalidate any vfsmnt list -- they will be valid after resume, anyway. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#518: FILE: kernel/suspend.c:901:
+	BUG_ON(in_atomic());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000348548.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 23 warnings, 9 checks, 433 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000348548.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
