ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#49: 
--- a/drivers/base/core.c	Mon Jun  3 22:27:50 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: drivers/base/core.c:123:
+static int do_driver_unbind(struct device * dev, struct device_driver * drv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: drivers/base/core.c:123:
+static int do_driver_unbind(struct device * dev, struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: drivers/base/core.c:138:
+	struct device * next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/base/core.c:139:
+	struct device * dev = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: drivers/base/core.c:140:
+	struct list_head * node;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/base/core.c:146:
+		next = list_entry(node,struct device,driver_list);
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: drivers/base/core.c:146:
+		next = list_entry(node,struct device,driver_list);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: drivers/base/core.c:153:
+		if ((error = do_driver_unbind(dev,drv))) {
 		                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#91: FILE: drivers/base/core.c:153:
+		if ((error = do_driver_unbind(dev,drv))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: drivers/base/core.c:241:
+		 dev->bus_id,dev->name);
 		            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: drivers/base/driver.c:82:
+static void __remove_driver(struct device_driver * drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: drivers/base/driver.c:99:
+void remove_driver(struct device_driver * drv)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: drivers/base/driver.c:102:
+	atomic_set(&drv->refcount,0);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: drivers/base/driver.c:111:
+void put_driver(struct device_driver * drv)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#182: FILE: drivers/base/driver.c:113:
+	if (!atomic_dec_and_lock(&drv->refcount,&device_lock))
 	                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#182: FILE: drivers/base/driver.c:113:
+	if (!atomic_dec_and_lock(&drv->refcount,&device_lock))
 	                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: drivers/pci/pci-driver.c:64:
+	struct pci_driver * drv = pci_dev->driver;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: include/linux/device.h:121:
+extern void remove_driver(struct device_driver * drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/device.h:121:
+extern void remove_driver(struct device_driver * drv);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452365.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 0 warnings, 1 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452365.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
