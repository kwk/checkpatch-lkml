WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
   NTFS: 2.0.20 - Support non-resident directory index bitmaps, fix page leak in readdir.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#64: 
     index bitmap inode on the final iput().
                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#68: 
--- a/Documentation/filesystems/ntfs.txt	Sun Jul 14 23:52:57 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#104: FILE: fs/ntfs/ChangeLog:22:
+	  index bitmap inode on the final iput().
 	                                  ^^^^

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#116: FILE: fs/ntfs/Makefile:8:
+EXTRA_CFLAGS = -DNTFS_VERSION=\"2.0.20\"

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#166: FILE: fs/ntfs/dir.c:1099:
+	if (unlikely(IS_ERR(m))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: fs/ntfs/dir.c:1129:
+	if (unlikely(!lookup_attr(AT_INDEX_ROOT, I30, 4, CASE_SENSITIVE, 0,
+			NULL, 0, ctx))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#215: FILE: fs/ntfs/dir.c:1149:
+		if (unlikely((u8*)ie < (u8*)ctx->mrec || (u8*)ie +

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#215: FILE: fs/ntfs/dir.c:1149:
+		if (unlikely((u8*)ie < (u8*)ctx->mrec || (u8*)ie +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#215: FILE: fs/ntfs/dir.c:1149:
+		if (unlikely((u8*)ie < (u8*)ctx->mrec || (u8*)ie +

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#264: FILE: fs/ntfs/dir.c:1181:
+		if (unlikely(IS_ERR(bmp_vi))) {

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#289: FILE: fs/ntfs/dir.c:1200:
+	ntfs_debug("Reading bitmap with page index 0x%Lx, bit ofs 0x%Lx",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: fs/ntfs/dir.c:1201:
+	ntfs_debug("Reading bitmap with page index 0x%Lx, bit ofs 0x%Lx",
+			(long long)bmp_pos >> (3 + PAGE_CACHE_SHIFT),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: fs/ntfs/dir.c:1204:
+	bmp_page = ntfs_map_page(bmp_mapping,
+			bmp_pos >> (3 + PAGE_CACHE_SHIFT));

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#294: FILE: fs/ntfs/dir.c:1205:
+	if (unlikely(IS_ERR(bmp_page))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#300: FILE: fs/ntfs/dir.c:1211:
+	bmp = (u8*)page_address(bmp_page);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#326: FILE: fs/ntfs/dir.c:1232:
+	ntfs_debug("Handling index buffer 0x%Lx.",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: fs/ntfs/dir.c:1233:
+	ntfs_debug("Handling index buffer 0x%Lx.",
+			(long long)bmp_pos + cur_bmp_pos);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ia_page"
#333: FILE: fs/ntfs/dir.c:1237:
+		if (likely(ia_page != NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#344: FILE: fs/ntfs/dir.c:1244:
+		if (unlikely(IS_ERR(ia_page))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#350: FILE: fs/ntfs/dir.c:1250:
+		kaddr = (u8*)page_address(ia_page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#357: FILE: fs/ntfs/dir.c:1256:
+	if (unlikely((u8*)ia < kaddr || (u8*)ia > kaddr + PAGE_CACHE_SIZE)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#357: FILE: fs/ntfs/dir.c:1256:
+	if (unlikely((u8*)ia < kaddr || (u8*)ia > kaddr + PAGE_CACHE_SIZE)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#410: FILE: fs/ntfs/dir.c:1296:
+	if (unlikely(index_end > (u8*)ia + ndir->_IDM(index_block_size))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#426: FILE: fs/ntfs/dir.c:1315:
+		if (unlikely((u8*)ie < (u8*)ia || (u8*)ie +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#426: FILE: fs/ntfs/dir.c:1315:
+		if (unlikely((u8*)ie < (u8*)ia || (u8*)ie +

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#426: FILE: fs/ntfs/dir.c:1315:
+		if (unlikely((u8*)ie < (u8*)ia || (u8*)ie +

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#473: FILE: fs/ntfs/dir.c:1362:
+	if (name)
+		kfree(name);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#522: FILE: fs/ntfs/inode.c:789:
+			vi->i_size = ni->initialized_size =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#540: FILE: fs/ntfs/inode.c:838:
+		if (unlikely(IS_ERR(bvi))) {

CHECK:CAMELCASE: Avoid CamelCase: <NInoCompressed>
#549: FILE: fs/ntfs/inode.c:845:
+		if (NInoCompressed(bni) || NInoEncrypted(bni) ||

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <NInoEncrypted>
#549: FILE: fs/ntfs/inode.c:845:
+		if (NInoCompressed(bni) || NInoEncrypted(bni) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: fs/ntfs/inode.c:846:
+		if (NInoCompressed(bni) || NInoEncrypted(bni) ||
+				NInoSparse(bni)) {

CHECK:CAMELCASE: Avoid CamelCase: <NInoSparse>
#550: FILE: fs/ntfs/inode.c:846:
+				NInoSparse(bni)) {

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#595: FILE: fs/ntfs/inode.c:854:
+			ntfs_error(vi->i_sb, "Index bitmap too small (0x%Lx) "

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: fs/ntfs/inode.c:1242:
 						"file. Please notify "
+						"linux-ntfs-dev@lists.sf.net "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <NInoIndexAllocPresent>
#637: FILE: fs/ntfs/inode.c:1774:
+		if (NInoIndexAllocPresent(ni) && ni->_IDM(bmp_ino)) {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#638: FILE: fs/ntfs/inode.c:1775:
+			iput(ni->_IDM(bmp_ino));
 			^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#643: FILE: fs/ntfs/inode.c:1780:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#658: FILE: fs/ntfs/inode.c:1863:
+	if (NInoAttr(ni)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#670: FILE: fs/ntfs/inode.h:96:
+			struct inode *bmp_ino;	/* Attribute inode for the
+						   directory index $BITMAP. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#670: FILE: fs/ntfs/inode.h:96:
+						   directory index $BITMAP. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#703: FILE: fs/ntfs/inode.h:245:
+extern void ntfs_put_inode(struct inode *vi);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#718: FILE: fs/ntfs/super.c:1266:
+	put_inode:	ntfs_put_inode,	/* VFS: Called just before the inode
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#718: FILE: fs/ntfs/super.c:1266:
+	put_inode:	ntfs_put_inode,	/* VFS: Called just before the inode

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#719: FILE: fs/ntfs/super.c:1267:
+	put_inode:	ntfs_put_inode,	/* VFS: Called just before the inode
+					   reference count is decreased. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#719: FILE: fs/ntfs/super.c:1267:
+					   reference count is decreased. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 21 warnings, 13 checks, 607 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000447384.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
