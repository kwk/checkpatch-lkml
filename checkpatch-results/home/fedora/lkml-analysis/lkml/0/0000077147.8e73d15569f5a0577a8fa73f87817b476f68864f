WARNING:TYPO_SPELLING: 'reqister' may be misspelled - perhaps 'register'?
#48: 
- do not set pci command reqister in map_pci_bar
                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#55: 
- fix endianess
      ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: Documentation/scsi/hptiop.txt:77:
+management software. Its ioctl routine acts as a general binary interface $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#178: FILE: MAINTAINERS:1131:
+P:	HighPoint Linux Team
+M:	linux@highpoint-tech.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#180: FILE: MAINTAINERS:1133:
+W:	http://www.highpoint-tech.com
+S:	Supported

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#224: FILE: drivers/scsi/hptiop.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#253: FILE: drivers/scsi/hptiop.c:30:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#254: FILE: drivers/scsi/hptiop.c:31:
+#include <asm/io.h>

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#267: FILE: drivers/scsi/hptiop.c:44:
+static char driver_name[] = "hptiop";

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#293: FILE: drivers/scsi/hptiop.c:70:
+		msleep(1);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#319: FILE: drivers/scsi/hptiop.c:96:
+	while ((req = readl(&hba->iop->outbound_queue)) != IOPMU_QUEUE_EMPTY) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#320: FILE: drivers/scsi/hptiop.c:97:
+		if (req & IOPMU_QUEUE_MASK_HOST_BITS)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#322: FILE: drivers/scsi/hptiop.c:99:
+		else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: drivers/scsi/hptiop.c:100:
+			struct hpt_iop_request_header __iomem * p;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#328: FILE: drivers/scsi/hptiop.c:105:
+			if (readl(&p->flags) & IOP_REQUEST_FLAG_SYNC_REQUEST) {
[...]
+			else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#334: FILE: drivers/scsi/hptiop.c:111:
+			}
+			else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#350: FILE: drivers/scsi/hptiop.c:127:
+		u32 msg = readl(&iop->outbound_msgaddr0);
+		dprintk("received outbound msg %x\n", msg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: drivers/scsi/hptiop.c:142:
+static int iop_send_sync_request(struct hptiop_hba *hba,
+					void __iomem *_req, u32 millisec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/scsi/hptiop.c:148:
+	writel(readl(&req->flags) | IOP_REQUEST_FLAG_SYNC_REQUEST,
+			&req->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/scsi/hptiop.c:153:
+	writel((unsigned long)req - (unsigned long)hba->iop,
+			&hba->iop->inbound_queue);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#384: FILE: drivers/scsi/hptiop.c:161:
+		msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#406: FILE: drivers/scsi/hptiop.c:183:
+		msleep(1);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#409: FILE: drivers/scsi/hptiop.c:186:
+	return hba->msg_done? 0 : -1;
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/scsi/hptiop.c:190:
+static int iop_get_config(struct hptiop_hba *hba,
+				struct hpt_iop_request_get_config *config)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/scsi/hptiop.c:218:
+static int iop_set_config(struct hptiop_hba *hba,
+				struct hpt_iop_request_set_config *config)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/scsi/hptiop.c:231:
+	memcpy_toio((u8 __iomem *)req + sizeof(struct hpt_iop_request_header),
+		(u8 *)config + sizeof(struct hpt_iop_request_header),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/scsi/hptiop.c:255:
+	writel(~(IOPMU_OUTBOUND_INT_POSTQUEUE | IOPMU_OUTBOUND_INT_MSG0),
+			&iop->outbound_intmask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/scsi/hptiop.c:261:
+	if (iop_send_sync_msg(hba,
+			IOPMU_INBOUND_MSG0_START_BACKGROUND_TASK, 5000)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#485: FILE: drivers/scsi/hptiop.c:262:
+		printk(KERN_ERR "scsi%d: fail to start background task\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/scsi/hptiop.c:263:
+		printk(KERN_ERR "scsi%d: fail to start background task\n",
+			hba->host->host_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#499: FILE: drivers/scsi/hptiop.c:276:
+		printk(KERN_ERR "scsi%d: pci resource invalid\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/scsi/hptiop.c:277:
+		printk(KERN_ERR "scsi%d: pci resource invalid\n",
+				hba->host->host_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#509: FILE: drivers/scsi/hptiop.c:286:
+		printk(KERN_ERR "scsi%d: Fail to ioremap memory space\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: drivers/scsi/hptiop.c:287:
+		printk(KERN_ERR "scsi%d: Fail to ioremap memory space\n",
+				hba->host->host_no);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_map_pci_bar', this function's name, in a string
#515: FILE: drivers/scsi/hptiop.c:292:
+	dprintk("hptiop_map_pci_bar: iop=%p\n", hba->iop);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#526: FILE: drivers/scsi/hptiop.c:303:
+	if (msg == IOPMU_INBOUND_MSG0_RESET) {
[...]
+	else if (msg <= IOPMU_INBOUND_MSG0_MAX)
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#530: FILE: drivers/scsi/hptiop.c:307:
+	}
+	else if (msg <= IOPMU_INBOUND_MSG0_MAX)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_req', this function's name, in a string
#538: FILE: drivers/scsi/hptiop.c:315:
+	dprintk("get_req : req=%p\n", hba->req_list);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_req', this function's name, in a string
#549: FILE: drivers/scsi/hptiop.c:326:
+	dprintk("free_req(%d, %p)\n", req->index, req);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_host_request_callback', this function's name, in a string
#560: FILE: drivers/scsi/hptiop.c:337:
+	dprintk("hptiop_host_request_callback: req=%p, type=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#561: FILE: drivers/scsi/hptiop.c:338:
+	dprintk("hptiop_host_request_callback: req=%p, type=%d, "
+			"result=%d, context=0x%x tag=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#565: FILE: drivers/scsi/hptiop.c:342:
+	BUG_ON(!req->header.result);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#566: FILE: drivers/scsi/hptiop.c:343:
+	BUG_ON(req->header.type != cpu_to_le32(IOP_REQUEST_TYPE_SCSI_COMMAND));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: drivers/scsi/hptiop.c:350:
+			pci_unmap_sg(hba->pcidev,
+				(struct scatterlist *)scp->request_buffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/scsi/hptiop.c:356:
+			pci_unmap_single(hba->pcidev,
+				HPT_SCP(scp)->dma_handle,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#587: FILE: drivers/scsi/hptiop.c:364:
+		scp->result = (DID_OK<<16);
 		                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#590: FILE: drivers/scsi/hptiop.c:367:
+		scp->result = (DID_BAD_TARGET<<16);
 		                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#593: FILE: drivers/scsi/hptiop.c:370:
+		scp->result = (DID_BUS_BUSY<<16);
 		                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#596: FILE: drivers/scsi/hptiop.c:373:
+		scp->result = (DID_RESET<<16);
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#599: FILE: drivers/scsi/hptiop.c:376:
+		scp->result = (DID_ERROR<<16);
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#602: FILE: drivers/scsi/hptiop.c:379:
+		scp->result = (DID_ABORT<<16);
 		                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/scsi/hptiop.c:384:
+		memset(&scp->sense_buffer,
+				0, sizeof(scp->sense_buffer));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/scsi/hptiop.c:386:
+		memcpy(&scp->sense_buffer,
+			&req->sg_list, le32_to_cpu(req->dataxfer_length));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#613: FILE: drivers/scsi/hptiop.c:390:
+		scp->result = ((DRIVER_INVALID|SUGGEST_ABORT)<<24) |
 		                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#613: FILE: drivers/scsi/hptiop.c:390:
+		scp->result = ((DRIVER_INVALID|SUGGEST_ABORT)<<24) |
 		                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#614: FILE: drivers/scsi/hptiop.c:391:
+					(DID_ABORT<<16);
 					          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_iop_request_callback', this function's name, in a string
#631: FILE: drivers/scsi/hptiop.c:408:
+	dprintk("hptiop_iop_request_callback: req=%p, type=%d, "

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: drivers/scsi/hptiop.c:409:
+	dprintk("hptiop_iop_request_callback: req=%p, type=%d, "
+			"result=%d, context=0x%x tag=%d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#636: FILE: drivers/scsi/hptiop.c:413:
+	BUG_ON(!readl(&req->result));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#637: FILE: drivers/scsi/hptiop.c:414:
+	BUG_ON(readl(&req->type) != IOP_REQUEST_TYPE_IOCTL_COMMAND);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#642: FILE: drivers/scsi/hptiop.c:419:
+			((u64)readl(&req->context_hi32)<<32));
 			                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#644: FILE: drivers/scsi/hptiop.c:421:
+	if (readl(&req->result) == IOP_RESULT_SUCCESS) {
[...]
+	else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/scsi/hptiop.c:426:
+			memcpy_fromio(arg->outbuf,
+				&p->buf[(readl(&p->inbuf_size) + 3)& ~3],

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#649: FILE: drivers/scsi/hptiop.c:426:
+				&p->buf[(readl(&p->inbuf_size) + 3)& ~3],
 				                                   ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#655: FILE: drivers/scsi/hptiop.c:432:
+	}
+	else

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#677: FILE: drivers/scsi/hptiop.c:454:
+	struct Scsi_Host *host = scp->device->host;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: drivers/scsi/hptiop.c:466:
+		HPT_SCP(scp)->sgcnt = pci_map_sg(hba->pcidev,
+				sglist, scp->use_sg,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#692: FILE: drivers/scsi/hptiop.c:469:
+		BUG_ON(HPT_SCP(scp)->sgcnt > hba->max_sg_descriptors);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#703: FILE: drivers/scsi/hptiop.c:480:
+		return HPT_SCP(scp)->sgcnt;
+	} else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#704: FILE: drivers/scsi/hptiop.c:481:
+		HPT_SCP(scp)->dma_handle = pci_map_single(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/scsi/hptiop.c:496:
+static int hptiop_queuecommand(struct scsi_cmnd *scp,
+				void (*done)(struct scsi_cmnd *))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#727: FILE: drivers/scsi/hptiop.c:504:
+	BUG_ON(!done);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#734: FILE: drivers/scsi/hptiop.c:511:
+		scp->result = DID_OK<<16;
 		                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!_req"
#739: FILE: drivers/scsi/hptiop.c:516:
+	if (_req == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#748: FILE: drivers/scsi/hptiop.c:525:
+	dprintk("hptiop_queuecmd(scp=%p) %d/%d/%d/%d cdb=(%x-%x-%x) "
+			"req_index=%d, req=%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/scsi/hptiop.c:537:
+	if (scp->device->channel || scp->device->lun ||
+			scp->device->id > hba->max_devices) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#784: FILE: drivers/scsi/hptiop.c:561:
+	req->header.size = cpu_to_le32(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: drivers/scsi/hptiop.c:569:
+	writel(IOPMU_QUEUE_ADDR_HOST_BIT | _req->req_shifted_phy,
+			&hba->iop->inbound_queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: drivers/scsi/hptiop.c:589:
+		writel(IOPMU_INBOUND_MSG0_RESET,
+				&hba->iop->outbound_msgaddr0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/scsi/hptiop.c:594:
+	wait_event_timeout(hba->reset_wq,
+			atomic_read(&hba->resetting) == 0, 60 * HZ);

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#820: FILE: drivers/scsi/hptiop.c:597:
+		/* IOP is in unkown state, abort reset */
 		             ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#821: FILE: drivers/scsi/hptiop.c:598:
+		printk(KERN_ERR "scsi%d: reset failed\n", hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/scsi/hptiop.c:603:
+	if (iop_send_sync_msg(hba,
+		IOPMU_INBOUND_MSG0_START_BACKGROUND_TASK, 5000)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: drivers/scsi/hptiop.c:605:
+		dprintk("scsi%d: fail to start background task\n",
+				hba->host->host_no);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#836: FILE: drivers/scsi/hptiop.c:613:
+	struct Scsi_Host * host = scp->device->host;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#837: FILE: drivers/scsi/hptiop.c:614:
+	struct hptiop_hba * hba = (struct hptiop_hba *)host->hostdata;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#839: FILE: drivers/scsi/hptiop.c:616:
+	printk(KERN_WARNING "hptiop_reset(%d/%d/%d) scp=%p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_reset', this function's name, in a string
#839: FILE: drivers/scsi/hptiop.c:616:
+	printk(KERN_WARNING "hptiop_reset(%d/%d/%d) scp=%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: drivers/scsi/hptiop.c:617:
+	printk(KERN_WARNING "hptiop_reset(%d/%d/%d) scp=%p\n",
+			scp->device->host->host_no, scp->device->channel,

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#843: FILE: drivers/scsi/hptiop.c:620:
+	return hptiop_reset_hba(hba)? FAILED : SUCCESS;
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: drivers/scsi/hptiop.c:624:
+static int hptiop_adjust_disk_queue_depth(struct scsi_device *sdev,
+						int queue_depth)

ERROR:SPACING: space required before the open parenthesis '('
#849: FILE: drivers/scsi/hptiop.c:626:
+	if(queue_depth > 256)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/scsi/hptiop.c:641:
+static void hptiop_copy_mem_info(struct hptiop_getinfo *pinfo,
+					char *data, int datalen)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#870: FILE: drivers/scsi/hptiop.c:647:
+			return;
+		} else {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_do_ioctl', this function's name, in a string
#916: FILE: drivers/scsi/hptiop.c:693:
+	dprintk("scsi%d: hptiop_do_ioctl\n", hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: drivers/scsi/hptiop.c:704:
+		dprintk("scsi%d: ioctl buf size (%d/%d) is too large\n",
+				hba->host->host_no,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: drivers/scsi/hptiop.c:725:
+	writel(HPT_CTL_CODE_LINUX_TO_IOP(arg->ioctl_code),
+			&req->ioctl_code);

WARNING:TYPO_SPELLING: 'shoudl' may be misspelled - perhaps 'should'?
#955: FILE: drivers/scsi/hptiop.c:732:
+	 * the caller's request buffer shoudl be little-endian.
 	                               ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: drivers/scsi/hptiop.c:739:
+	if ((arg->ioctl_code == HPT_IOCTL_GET_CHANNEL_INFO ||
+		arg->ioctl_code == HPT_IOCTL_GET_CONTROLLER_INFO_V2 ||

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#964: FILE: drivers/scsi/hptiop.c:741:
+		arg->ioctl_code == HPT_IOCTL_GET_CONTROLLER_INFO)
+		&& arg->inbuf_size >= sizeof(u32))

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#972: FILE: drivers/scsi/hptiop.c:749:
+	writel(BITS_PER_LONG > 32 ? (u32)((unsigned long)arg>>32) : 0,
 	                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#973: FILE: drivers/scsi/hptiop.c:750:
+	writel(BITS_PER_LONG > 32 ? (u32)((unsigned long)arg>>32) : 0,
+			&req->header.context_hi32);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arg->done"
#984: FILE: drivers/scsi/hptiop.c:761:
+	wait_event_timeout(hba->ioctl_wq, arg->done == NULL, 60 * HZ);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "arg->done"
#986: FILE: drivers/scsi/hptiop.c:763:
+	if (arg->done != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/scsi/hptiop.c:770:
+	dprintk("hpt_iop_ioctl %x result %d\n",
+			arg->ioctl_code, arg->result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: drivers/scsi/hptiop.c:774:
+static int __hpt_do_ioctl(struct hptiop_hba *hba, u32 code, void *inbuf,
+			u32 insize, void *outbuf, u32 outsize)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1000: FILE: drivers/scsi/hptiop.c:777:
+	struct hpt_ioctl_k arg;
+	arg.hba = hba;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/scsi/hptiop.c:794:
+static int hptiop_get_controller_info(struct hptiop_hba *hba,
+					struct hpt_controller_info *pinfo)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1025: FILE: drivers/scsi/hptiop.c:802:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1027: FILE: drivers/scsi/hptiop.c:804:
+static int hptiop_get_channel_info(struct hptiop_hba *hba, int bus,
+					struct hpt_channel_info *pinfo)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1036: FILE: drivers/scsi/hptiop.c:813:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1039: FILE: drivers/scsi/hptiop.c:816:
+static int hptiop_get_logical_devices(struct hptiop_hba *hba,
+					__le32 *pids, int maxcount)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: drivers/scsi/hptiop.c:822:
+	if (__hpt_do_ioctl(hba, HPT_IOCTL_GET_LOGICAL_DEVICES,
+			&count, sizeof(u32),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1051: FILE: drivers/scsi/hptiop.c:828:
+		pids[i] = pids[i+1];
 		                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: drivers/scsi/hptiop.c:834:
+static int hptiop_get_device_info_v3(struct hptiop_hba *hba, __le32 id,
+				struct hpt_logical_device_info_v3 *pinfo)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1077: FILE: drivers/scsi/hptiop.c:854:
+			(flags & (ARRAY_FLAG_NEEDBUILDING|ARRAY_FLAG_BROKEN))?
 			                                 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1077: FILE: drivers/scsi/hptiop.c:854:
+			(flags & (ARRAY_FLAG_NEEDBUILDING|ARRAY_FLAG_BROKEN))?
 			                                                     ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1081: FILE: drivers/scsi/hptiop.c:858:
+			 !(flags & ARRAY_FLAG_INITIALIZING))?
 			                                    ^

WARNING:TYPO_SPELLING: 'Unintialized' may be misspelled - perhaps 'Uninitialized'?
#1082: FILE: drivers/scsi/hptiop.c:859:
+					", Unintialized" : "");
 					   ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: drivers/scsi/hptiop.c:861:
+	else if ((flags & ARRAY_FLAG_BROKEN) &&
+				devinfo->u.array.array_type != AT_RAID6)

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1088: FILE: drivers/scsi/hptiop.c:865:
+			(flags & ARRAY_FLAG_NEEDINITIALIZING)?
 			                                     ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1091: FILE: drivers/scsi/hptiop.c:868:
+			(flags & ARRAY_FLAG_BROKEN)? "Critical, " : "",
 			                           ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1096: FILE: drivers/scsi/hptiop.c:873:
+			(flags & ARRAY_FLAG_BROKEN)? "Critical, " : "",
 			                           ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1101: FILE: drivers/scsi/hptiop.c:878:
+			(flags & ARRAY_FLAG_BROKEN)? "Critical, " : "",
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1105: FILE: drivers/scsi/hptiop.c:882:
+		sprintf(s,"%s%s%s", "Need Expanding/Migrating",
 		         ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1106: FILE: drivers/scsi/hptiop.c:883:
+			(flags & ARRAY_FLAG_BROKEN)? "Critical, " : "",
 			                           ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1109: FILE: drivers/scsi/hptiop.c:886:
+			 !(flags & ARRAY_FLAG_INITIALIZING))?
 			                                    ^

WARNING:TYPO_SPELLING: 'Unintialized' may be misspelled - perhaps 'Uninitialized'?
#1110: FILE: drivers/scsi/hptiop.c:887:
+				", Unintialized" : "");
 				   ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/scsi/hptiop.c:889:
+	else if (flags & ARRAY_FLAG_NEEDINITIALIZING &&
+		!(flags & ARRAY_FLAG_REBUILDING) &&

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1114: FILE: drivers/scsi/hptiop.c:891:
+		sprintf(s,"%sUninitialized",
 		         ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1115: FILE: drivers/scsi/hptiop.c:892:
+			(flags & ARRAY_FLAG_BROKEN)? "Critical, " : "");
 			                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: drivers/scsi/hptiop.c:894:
+	else if ((flags & ARRAY_FLAG_NEEDBUILDING) ||
+			(flags & ARRAY_FLAG_BROKEN))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1125: FILE: drivers/scsi/hptiop.c:902:
+static void hptiop_dump_devinfo(struct hptiop_hba *hba,
+			struct hptiop_getinfo *pinfo, __le32 id, int indent)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1140: FILE: drivers/scsi/hptiop.c:917:
+	switch (devinfo.type) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1150: FILE: drivers/scsi/hptiop.c:927:
+			if (flags & DEVICE_FLAG_DISABLED)
[...]
+			else
[...]
+		else {
[...]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1151: FILE: drivers/scsi/hptiop.c:928:
+				hptiop_copy_info(pinfo,"Missing\n");
 				                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: drivers/scsi/hptiop.c:931:
+				hptiop_copy_info(pinfo, "CH%d %s\n",
+					devinfo.u.device.path_id + 1,

CHECK:BRACES: Unbalanced braces around else statement
#1156: FILE: drivers/scsi/hptiop.c:933:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: drivers/scsi/hptiop.c:937:
+			hptiop_copy_info(pinfo,
+				"CH%d %s, %lluMB, %s %s%s%s%s\n",

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1164: FILE: drivers/scsi/hptiop.c:941:
+				(flags & DEVICE_FLAG_DISABLED)?
 				                              ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1166: FILE: drivers/scsi/hptiop.c:943:
+				devinfo.u.device.read_ahead_enabled?
 				                                   ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1168: FILE: drivers/scsi/hptiop.c:945:
+				devinfo.u.device.write_cache_enabled?
 				                                    ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1170: FILE: drivers/scsi/hptiop.c:947:
+				devinfo.u.device.TCQ_enabled?
 				                            ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1172: FILE: drivers/scsi/hptiop.c:949:
+				devinfo.u.device.NCQ_enabled?
 				                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1182: FILE: drivers/scsi/hptiop.c:959:
+			hptiop_copy_info(pinfo, "[DISK %d_%d] ",
+					devinfo.vbus_id, devinfo.target_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1187: FILE: drivers/scsi/hptiop.c:964:
+		hptiop_copy_info(pinfo, "%s (%s), %lluMB, %s\n",
+			devinfo.u.array.name,

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1188: FILE: drivers/scsi/hptiop.c:965:
+			devinfo.u.array.array_type==AT_RAID0? "RAID0" :
 			                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1188: FILE: drivers/scsi/hptiop.c:965:
+			devinfo.u.array.array_type==AT_RAID0? "RAID0" :
 			                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1189: FILE: drivers/scsi/hptiop.c:966:
+				devinfo.u.array.array_type==AT_RAID1? "RAID1" :
 				                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1189: FILE: drivers/scsi/hptiop.c:966:
+				devinfo.u.array.array_type==AT_RAID1? "RAID1" :
 				                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1190: FILE: drivers/scsi/hptiop.c:967:
+				devinfo.u.array.array_type==AT_RAID5? "RAID5" :
 				                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1190: FILE: drivers/scsi/hptiop.c:967:
+				devinfo.u.array.array_type==AT_RAID5? "RAID5" :
 				                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1191: FILE: drivers/scsi/hptiop.c:968:
+				devinfo.u.array.array_type==AT_RAID6? "RAID6" :
 				                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1191: FILE: drivers/scsi/hptiop.c:968:
+				devinfo.u.array.array_type==AT_RAID6? "RAID6" :
 				                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1192: FILE: drivers/scsi/hptiop.c:969:
+				devinfo.u.array.array_type==AT_JBOD? "JBOD" :
 				                          ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1192: FILE: drivers/scsi/hptiop.c:969:
+				devinfo.u.array.array_type==AT_JBOD? "JBOD" :
 				                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1197: FILE: drivers/scsi/hptiop.c:974:
+			if (hpt_id_valid(devinfo.u.array.members[i])) {
[...]
+			else
[...]

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1198: FILE: drivers/scsi/hptiop.c:975:
+				if (cpu_to_le16(1<<i) &
 				                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1202: FILE: drivers/scsi/hptiop.c:979:
+				hptiop_dump_devinfo(hba, pinfo,
+					devinfo.u.array.members[i], indent+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1202: FILE: drivers/scsi/hptiop.c:979:
+					devinfo.u.array.members[i], indent+1);
 					                                  ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1204: FILE: drivers/scsi/hptiop.c:981:
+			}
+			else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: drivers/scsi/hptiop.c:987:
+			hptiop_dump_devinfo(hba, pinfo,
+				devinfo.u.array.transform_target, indent+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1210: FILE: drivers/scsi/hptiop.c:987:
+				devinfo.u.array.transform_target, indent+1);
 				                                        ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1221: FILE: drivers/scsi/hptiop.c:998:
+static ssize_t hptiop_cdev_read(struct file *filp, char __user *buf,
                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1244: FILE: drivers/scsi/hptiop.c:1021:
+				hptiop_dump_devinfo(hba, &info,
+						chan_info.devices[0], 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: drivers/scsi/hptiop.c:1024:
+				hptiop_dump_devinfo(hba, &info,
+						chan_info.devices[1], 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: drivers/scsi/hptiop.c:1029:
+	ndev = hptiop_get_logical_devices(hba, ids,
+					sizeof(ids) / sizeof(ids[0]));

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(ids)
#1252: FILE: drivers/scsi/hptiop.c:1029:
+					sizeof(ids) / sizeof(ids[0]));

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1268: FILE: drivers/scsi/hptiop.c:1045:
+static int hptiop_cdev_ioctl(struct inode *inode,  struct file *file,
+					unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1277: FILE: drivers/scsi/hptiop.c:1054:
+	if (copy_from_user(&ioctl_u,
+		(void __user *)arg, sizeof(struct hpt_ioctl_u)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: drivers/scsi/hptiop.c:1070:
+	if ((ioctl_k.inbuf_size && !access_ok(VERIFY_READ,
+			ioctl_u.inbuf, ioctl_k.inbuf_size)) ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1299: FILE: drivers/scsi/hptiop.c:1076:
+		ioctl_k.inbuf_size + ioctl_k.outbuf_size > 0x10000) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1309: FILE: drivers/scsi/hptiop.c:1086:
+			dprintk("scsi%d: fail to alloc inbuf\n",
+					hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1315: FILE: drivers/scsi/hptiop.c:1092:
+		if (copy_from_user(ioctl_k.inbuf,
+				ioctl_u.inbuf, ioctl_k.inbuf_size)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: drivers/scsi/hptiop.c:1101:
+			dprintk("scsi%d: fail to alloc outbuf\n",
+					hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1334: FILE: drivers/scsi/hptiop.c:1111:
+		if (ioctl_k.outbuf_size &&
+			copy_to_user(ioctl_u.outbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1335: FILE: drivers/scsi/hptiop.c:1112:
+			copy_to_user(ioctl_u.outbuf,
+				ioctl_k.outbuf, ioctl_k.outbuf_size))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/scsi/hptiop.c:1116:
+		if (ioctl_u.bytes_returned &&
+			copy_to_user(ioctl_u.bytes_returned,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1340: FILE: drivers/scsi/hptiop.c:1117:
+			copy_to_user(ioctl_u.bytes_returned,
+				&bytes_returned, sizeof(u32)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1356: FILE: drivers/scsi/hptiop.c:1133:
+	unsigned i = 0, minor = iminor(inode);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1374: FILE: drivers/scsi/hptiop.c:1151:
+static struct file_operations hptiop_cdev_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1396: FILE: drivers/scsi/hptiop.c:1173:
+		.mode = S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1404: FILE: drivers/scsi/hptiop.c:1181:
+		.mode = S_IRUGO,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1431: FILE: drivers/scsi/hptiop.c:1208:
+static int __devinit hptiop_probe(struct pci_dev *pcidev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1432: FILE: drivers/scsi/hptiop.c:1209:
+static int __devinit hptiop_probe(struct pci_dev *pcidev,
+					const struct pci_device_id *id)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_probe', this function's name, in a string
#1442: FILE: drivers/scsi/hptiop.c:1219:
+	dprintk("hptiop_probe(%p)\n", pcidev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1445: FILE: drivers/scsi/hptiop.c:1222:
+		printk(KERN_ERR "hptiop: fail to enable pci device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1449: FILE: drivers/scsi/hptiop.c:1226:
+	printk(KERN_INFO "adapter at PCI %d:%d:%d, IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1450: FILE: drivers/scsi/hptiop.c:1227:
+	printk(KERN_INFO "adapter at PCI %d:%d:%d, IRQ %d\n",
+		pcidev->bus->number, pcidev->devfn >> 3, pcidev->devfn & 7,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1458: FILE: drivers/scsi/hptiop.c:1235:
+			printk(KERN_ERR "hptiop: fail to set dma_mask\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1464: FILE: drivers/scsi/hptiop.c:1241:
+		printk(KERN_ERR "hptiop: pci_request_regions failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1470: FILE: drivers/scsi/hptiop.c:1247:
+		printk(KERN_ERR "hptiop: fail to alloc scsi host\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1496: FILE: drivers/scsi/hptiop.c:1273:
+		printk(KERN_ERR "scsi%d: firmware not ready\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1497: FILE: drivers/scsi/hptiop.c:1274:
+		printk(KERN_ERR "scsi%d: firmware not ready\n",
+				hba->host->host_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1502: FILE: drivers/scsi/hptiop.c:1279:
+		printk(KERN_ERR "scsi%d: get config failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1503: FILE: drivers/scsi/hptiop.c:1280:
+		printk(KERN_ERR "scsi%d: get config failed\n",
+				hba->host->host_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1526: FILE: drivers/scsi/hptiop.c:1303:
+		printk(KERN_ERR "scsi%d: set config failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1527: FILE: drivers/scsi/hptiop.c:1304:
+		printk(KERN_ERR "scsi%d: set config failed\n",
+				hba->host->host_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1532: FILE: drivers/scsi/hptiop.c:1309:
+		printk(KERN_ERR "scsi%d: scsi_add_host failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1533: FILE: drivers/scsi/hptiop.c:1310:
+		printk(KERN_ERR "scsi%d: scsi_add_host failed\n",
+					hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1540: FILE: drivers/scsi/hptiop.c:1317:
+	if (request_irq(pcidev->irq, hptiop_intr, SA_SHIRQ,
+					driver_name, hba)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1541: FILE: drivers/scsi/hptiop.c:1318:
+		printk(KERN_ERR "scsi%d: request irq %d failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1542: FILE: drivers/scsi/hptiop.c:1319:
+		printk(KERN_ERR "scsi%d: request irq %d failed\n",
+					hba->host->host_no, pcidev->irq);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#1549: FILE: drivers/scsi/hptiop.c:1326:
+	if ((req_size& 0x1f) != 0)
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1556: FILE: drivers/scsi/hptiop.c:1333:
+	start_virt = dma_alloc_coherent(&pcidev->dev,
+				hba->req_size*hba->max_requests + 0x20,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1556: FILE: drivers/scsi/hptiop.c:1333:
+				hba->req_size*hba->max_requests + 0x20,
 				             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1560: FILE: drivers/scsi/hptiop.c:1337:
+		printk(KERN_ERR "scsi%d: fail to alloc request mem\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1561: FILE: drivers/scsi/hptiop.c:1338:
+		printk(KERN_ERR "scsi%d: fail to alloc request mem\n",
+					hba->host->host_no);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1568: FILE: drivers/scsi/hptiop.c:1345:
+	if ((start_phy & 0x1f) != 0)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_probe', this function's name, in a string
#1596: FILE: drivers/scsi/hptiop.c:1373:
+	dprintk("scsi%d: hptiop_probe successfully\n", hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1601: FILE: drivers/scsi/hptiop.c:1378:
+	dma_free_coherent(&hba->pcidev->dev,
+			hba->req_size*hba->max_requests + 0x20,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1601: FILE: drivers/scsi/hptiop.c:1378:
+			hba->req_size*hba->max_requests + 0x20,
 			             ^

WARNING:SPACING: space prohibited before semicolon
#1614: FILE: drivers/scsi/hptiop.c:1391:
+	pci_release_regions(pcidev) ;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_probe', this function's name, in a string
#1622: FILE: drivers/scsi/hptiop.c:1399:
+	dprintk("scsi%d: hptiop_probe fail\n", host->host_no);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_shutdown', this function's name, in a string
#1633: FILE: drivers/scsi/hptiop.c:1410:
+	dprintk("hptiop_shutdown(%p)\n", hba);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1637: FILE: drivers/scsi/hptiop.c:1414:
+		printk(KERN_ERR "scsi%d: shutdown the iop timeout\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/scsi/hptiop.c:1415:
+		printk(KERN_ERR "scsi%d: shutdown the iop timeout\n",
+					hba->host->host_no);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_remove', this function's name, in a string
#1653: FILE: drivers/scsi/hptiop.c:1430:
+	dprintk("scsi%d: hptiop_remove\n", hba->host->host_no);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1664: FILE: drivers/scsi/hptiop.c:1441:
+	dma_free_coherent(&hba->pcidev->dev,
+			hba->req_size * hba->max_requests + 0x20,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1698: FILE: drivers/scsi/hptiop.c:1475:
+	printk(KERN_INFO "%s %s\n", driver_name_long, driver_ver);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1706: FILE: drivers/scsi/hptiop.c:1483:
+		printk(KERN_WARNING "unable to register hptiop device.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hptiop_module_exit', this function's name, in a string
#1715: FILE: drivers/scsi/hptiop.c:1492:
+	dprintk("hptiop_module_exit\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1720: FILE: drivers/scsi/hptiop.c:1497:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1731: FILE: drivers/scsi/hptiop.h:1:
+/*

WARNING:TYPO_SPELLING: 'compatiblity' may be misspelled - perhaps 'compatibility'?
#1774: FILE: drivers/scsi/hptiop.h:44:
+/* keep definition for source code compatiblity */
                                    ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'tranform' may be misspelled - perhaps 'transform'?
#1789: FILE: drivers/scsi/hptiop.h:59:
+#define ARRAY_FLAG_TRANSFORMING     0x00000400 /* tranform in progress */
                                                   ^^^^^^^^

WARNING:TYPO_SPELLING: 'tranform' may be misspelled - perhaps 'transform'?
#1790: FILE: drivers/scsi/hptiop.h:60:
+#define ARRAY_FLAG_NEEDTRANSFORM    0x00000800 /* array need tranform */
                                                              ^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1805: FILE: drivers/scsi/hptiop.h:75:
+#define HPT_CTL_CODE(x) (x+0xFF00)
                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1805: FILE: drivers/scsi/hptiop.h:75:
+#define HPT_CTL_CODE(x) (x+0xFF00)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1806: FILE: drivers/scsi/hptiop.h:76:
+#define HPT_CTL_CODE_LINUX_TO_IOP(x) ((x)-0xff00)
                                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1827: FILE: drivers/scsi/hptiop.h:97:
+}
+__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1827: FILE: drivers/scsi/hptiop.h:97:
+__attribute__((packed));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1837: FILE: drivers/scsi/hptiop.h:107:
+}
+__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1837: FILE: drivers/scsi/hptiop.h:107:
+__attribute__((packed));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1867: FILE: drivers/scsi/hptiop.h:137:
+}
+__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1867: FILE: drivers/scsi/hptiop.h:137:
+__attribute__((packed));

WARNING:TYPO_SPELLING: 'partitial' may be misspelled - perhaps 'partial'?
#1908: FILE: drivers/scsi/hptiop.h:178:
+	u8      ident[150];    /* (partitial) Identify Data of this device */
 	                           ^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1915: FILE: drivers/scsi/hptiop.h:185:
+}
+__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1915: FILE: drivers/scsi/hptiop.h:185:
+__attribute__((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1931: FILE: drivers/scsi/hptiop.h:201:
+	__le32   parent_array;           /* don't use this field for physical
+					    device. use ParentArrays field in

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1932: FILE: drivers/scsi/hptiop.h:202:
+					    hpt_device_info_v2 */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1942: FILE: drivers/scsi/hptiop.h:212:
+	} __attribute__((packed)) u;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1944: FILE: drivers/scsi/hptiop.h:214:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1945: FILE: drivers/scsi/hptiop.h:215:
+}
+__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1945: FILE: drivers/scsi/hptiop.h:215:
+__attribute__((packed));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1961: FILE: drivers/scsi/hptiop.h:231:
+}
+__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1961: FILE: drivers/scsi/hptiop.h:231:
+__attribute__((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1963: FILE: drivers/scsi/hptiop.h:233:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1965: FILE: drivers/scsi/hptiop.h:235:
+struct hpt_iopmu
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2017: FILE: drivers/scsi/hptiop.h:287:
+struct hpt_iop_request_header
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2052: FILE: drivers/scsi/hptiop.h:322:
+struct hpt_iop_request_get_config
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2066: FILE: drivers/scsi/hptiop.h:336:
+struct hpt_iop_request_set_config
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2074: FILE: drivers/scsi/hptiop.h:344:
+struct hpt_iopsg
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2081: FILE: drivers/scsi/hptiop.h:351:
+struct hpt_iop_request_block_command
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2100: FILE: drivers/scsi/hptiop.h:370:
+struct hpt_iop_request_scsi_command
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2112: FILE: drivers/scsi/hptiop.h:382:
+struct hpt_iop_request_ioctl_command
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2125: FILE: drivers/scsi/hptiop.h:395:
+	struct hptiop_request * next;

ERROR:POINTER_LOCATION: "foo *                  bar" should be "foo *bar"
#2126: FILE: drivers/scsi/hptiop.h:396:
+	void *                  req_virt;

ERROR:POINTER_LOCATION: "foo *      bar" should be "foo *bar"
#2128: FILE: drivers/scsi/hptiop.h:398:
+	struct scsi_cmnd *      scp;

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#2138: FILE: drivers/scsi/hptiop.h:408:
+#define HPT_SCP(scp) ((struct hpt_scsi_pointer *)&(scp)->SCp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2141: FILE: drivers/scsi/hptiop.h:411:
+	struct hpt_iopmu __iomem * iop;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2142: FILE: drivers/scsi/hptiop.h:412:
+	struct Scsi_Host * host;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2143: FILE: drivers/scsi/hptiop.h:413:
+	struct pci_dev * pcidev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2159: FILE: drivers/scsi/hptiop.h:429:
+	struct hptiop_request * req_list;

ERROR:POINTER_LOCATION: "foo *      bar" should be "foo *bar"
#2163: FILE: drivers/scsi/hptiop.h:433:
+	void *      dma_coherent;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2174: FILE: drivers/scsi/hptiop.h:444:
+struct hpt_ioctl_k
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2175: FILE: drivers/scsi/hptiop.h:445:
+	struct hptiop_hba * hba;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2179: FILE: drivers/scsi/hptiop.h:449:
+	void * inbuf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2180: FILE: drivers/scsi/hptiop.h:450:
+	void * outbuf;

ERROR:POINTER_LOCATION: "foo  * bar" should be "foo  *bar"
#2181: FILE: drivers/scsi/hptiop.h:451:
+	u32  * bytes_returned;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hpt_ioctl_k *' should also have an identifier name
#2182: FILE: drivers/scsi/hptiop.h:452:
+	void (*done)(struct hpt_ioctl_k *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2189: FILE: drivers/scsi/hptiop.h:459:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2190: FILE: drivers/scsi/hptiop.h:460:
+#define dprintk(fmt, args...) do { printk(fmt, ##args); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2190: FILE: drivers/scsi/hptiop.h:460:
+#define dprintk(fmt, args...) do { printk(fmt, ##args); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2190: FILE: drivers/scsi/hptiop.h:460:
+#define dprintk(fmt, args...) do { printk(fmt, ##args); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 86 warnings, 128 checks, 2093 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077147.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
