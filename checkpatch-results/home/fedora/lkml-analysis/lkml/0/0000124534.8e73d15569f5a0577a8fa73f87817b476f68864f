WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#29: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#144: FILE: kernel/mutex-cmpxchg.c:1:
+/* mutex-cmpxchg.c: cmpxchg-based mutex slow paths

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#178: FILE: kernel/mutex-cmpxchg.c:35:
+	me = (unsigned long) current_thread_info();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#244: FILE: kernel/mutex-cmpxchg.c:101:
+EXPORT_SYMBOL(mutex_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#345: FILE: kernel/mutex-cmpxchg.c:202:
+EXPORT_SYMBOL(mutex_lock_interruptible);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#358: FILE: kernel/mutex-cmpxchg.c:215:
+	BUG_ON(mutex->state == CONTENTION_FLAG);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: kernel/mutex-cmpxchg.c:218:
+		printk(KERN_ERR

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#366: FILE: kernel/mutex-cmpxchg.c:223:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#366: FILE: kernel/mutex-cmpxchg.c:223:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#367: FILE: kernel/mutex-cmpxchg.c:224:
+		printk(KERN_ERR

CHECK:SPACING: No space is necessary after a cast
#411: FILE: kernel/mutex-cmpxchg.c:268:
+		state = (unsigned long) tsk;

WARNING:MEMORY_BARRIER: memory barrier without comment
#415: FILE: kernel/mutex-cmpxchg.c:272:
+		smp_mb();

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#420: FILE: kernel/mutex-cmpxchg.c:277:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#420: FILE: kernel/mutex-cmpxchg.c:277:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#441: FILE: kernel/mutex-cmpxchg.c:298:
+EXPORT_SYMBOL(mutex_unlock);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#446: FILE: kernel/mutex-xchg.c:1:
+/* mutex-xchg.c: simple exchange-based mutex slow paths

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#511: FILE: kernel/mutex-xchg.c:66:
+#if 0

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#520: FILE: kernel/mutex-xchg.c:75:
+EXPORT_SYMBOL(__mutex_lock);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#583: FILE: kernel/mutex-xchg.c:138:
+#if 0

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#594: FILE: kernel/mutex-xchg.c:149:
+EXPORT_SYMBOL(__mutex_lock_interruptible);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#603: FILE: kernel/mutex-xchg.c:158:
+		printk(KERN_ERR

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#608: FILE: kernel/mutex-xchg.c:163:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#608: FILE: kernel/mutex-xchg.c:163:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#609: FILE: kernel/mutex-xchg.c:164:
+		printk(KERN_ERR

WARNING:MEMORY_BARRIER: memory barrier without comment
#653: FILE: kernel/mutex-xchg.c:208:
+		smp_mb();

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#658: FILE: kernel/mutex-xchg.c:213:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#658: FILE: kernel/mutex-xchg.c:213:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#665: FILE: kernel/mutex-xchg.c:220:
+EXPORT_SYMBOL(mutex_unlock);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124534.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 18 warnings, 6 checks, 629 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124534.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
