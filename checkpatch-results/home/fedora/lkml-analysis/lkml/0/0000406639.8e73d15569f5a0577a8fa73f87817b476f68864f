WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: pci/quirks.c:541:
+ */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#47: FILE: pci/quirks.c:543:
+static void __devinit quirk_ide_bases(struct pci_dev *dev)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: pci/quirks.c:545:
+       struct resource *res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: pci/quirks.c:546:
+       int first_bar = 2, last_bar = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: pci/quirks.c:548:
+       if ((dev->class >> 8) != PCI_CLASS_STORAGE_IDE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#52: FILE: pci/quirks.c:548:
+       if ((dev->class >> 8) != PCI_CLASS_STORAGE_IDE)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: pci/quirks.c:549:
+               return;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: pci/quirks.c:549:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: pci/quirks.c:551:
+       res = &dev->resource[0];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: pci/quirks.c:554:
+       if (!(dev->class & 1) && (res[0].flags || res[1].flags)) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: pci/quirks.c:554:
+       if (!(dev->class & 1) && (res[0].flags || res[1].flags)) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#58: FILE: pci/quirks.c:554:
+       if (!(dev->class & 1) && (res[0].flags || res[1].flags)) { 
+               res[0].start = res[0].end = res[0].flags = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: pci/quirks.c:555:
+               res[0].start = res[0].end = res[0].flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: pci/quirks.c:555:
+               res[0].start = res[0].end = res[0].flags = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#59: FILE: pci/quirks.c:555:
+               res[0].start = res[0].end = res[0].flags = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: pci/quirks.c:556:
+               res[1].start = res[1].end = res[1].flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: pci/quirks.c:556:
+               res[1].start = res[1].end = res[1].flags = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#60: FILE: pci/quirks.c:556:
+               res[1].start = res[1].end = res[1].flags = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: pci/quirks.c:557:
+               first_bar = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: pci/quirks.c:557:
+               first_bar = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: pci/quirks.c:558:
+               last_bar = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: pci/quirks.c:558:
+               last_bar = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: pci/quirks.c:559:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: pci/quirks.c:562:
+       if (!(dev->class & 4) && (res[2].flags || res[3].flags)) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: pci/quirks.c:562:
+       if (!(dev->class & 4) && (res[2].flags || res[3].flags)) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#66: FILE: pci/quirks.c:562:
+       if (!(dev->class & 4) && (res[2].flags || res[3].flags)) { 
+               res[2].start = res[2].end = res[2].flags = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: pci/quirks.c:563:
+               res[2].start = res[2].end = res[2].flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: pci/quirks.c:563:
+               res[2].start = res[2].end = res[2].flags = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#67: FILE: pci/quirks.c:563:
+               res[2].start = res[2].end = res[2].flags = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: pci/quirks.c:564:
+               res[3].start = res[3].end = res[3].flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: pci/quirks.c:564:
+               res[3].start = res[3].end = res[3].flags = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#68: FILE: pci/quirks.c:564:
+               res[3].start = res[3].end = res[3].flags = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: pci/quirks.c:565:
+               last_bar = 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: pci/quirks.c:565:
+               last_bar = 3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: pci/quirks.c:566:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: pci/quirks.c:568:
+       if (!last_bar)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#72: FILE: pci/quirks.c:568:
+       if (!last_bar)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: pci/quirks.c:569:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: pci/quirks.c:569:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: pci/quirks.c:571:
+       printk(KERN_INFO "PCI: Ignoring BAR%d-%d of IDE controller %s\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#75: FILE: pci/quirks.c:571:
+       printk(KERN_INFO "PCI: Ignoring BAR%d-%d of IDE controller %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: pci/quirks.c:572:
+              first_bar, last_bar, dev->slot_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: pci/quirks.c:572:
+              first_bar, last_bar, dev->slot_name);$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#87: FILE: pci/quirks.c:618:
+	{ PCI_FIXUP_HEADER,     PCI_ANY_ID,             PCI_ANY_ID,                     quirk_ide_bases },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 28 warnings, 4 checks, 63 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
