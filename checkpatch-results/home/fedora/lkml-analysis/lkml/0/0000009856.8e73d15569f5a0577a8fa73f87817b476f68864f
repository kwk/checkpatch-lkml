WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#61: FILE: fs/lockd/svc4proc.c:430:
+		char buf[RPC_MAX_ADDRBUFLEN];
+		printk(KERN_WARNING "lockd: rejected NSM callback from %s\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#61: FILE: fs/lockd/svc4proc.c:430:
+		printk(KERN_WARNING "lockd: rejected NSM callback from %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: fs/lockd/svc4proc.c:431:
+		printk(KERN_WARNING "lockd: rejected NSM callback from %s\n",
+				svc_print_addr(rqstp, buf, sizeof(buf)));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lockd', this function's name, in a string
#84: FILE: fs/lockd/svc.c:179:
+		dprintk("lockd: request from %s\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: fs/lockd/svc.c:180:
+		dprintk("lockd: request from %s\n",
+				svc_print_addr(rqstp, buf, sizeof(buf)));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#105: FILE: fs/lockd/svcproc.c:461:
+		char buf[RPC_MAX_ADDRBUFLEN];
+		printk(KERN_WARNING "lockd: rejected NSM callback from %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#105: FILE: fs/lockd/svcproc.c:461:
+		printk(KERN_WARNING "lockd: rejected NSM callback from %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: fs/lockd/svcproc.c:462:
+		printk(KERN_WARNING "lockd: rejected NSM callback from %s\n",
+				svc_print_addr(rqstp, buf, sizeof(buf)));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#129: FILE: fs/nfs/callback.c:93:
+		dprintk("%s: request from %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/nfs/callback.c:94:
+		dprintk("%s: request from %s\n", __FUNCTION__,
+				svc_print_addr(rqstp, buf, sizeof(buf)));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#146: FILE: fs/nfs/callback.c:178:
+	dprintk("%s: %s NFSv4 callback!\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: fs/nfs/callback.c:179:
+	dprintk("%s: %s NFSv4 callback!\n", __FUNCTION__,
+			svc_print_addr(rqstp, buf, sizeof(buf)));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo *		   bar" should be "foo *bar"
#213: FILE: include/linux/sunrpc/svc.h:369:
+char *		   svc_print_addr(struct svc_rqst *, char *, size_t);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#213: FILE: include/linux/sunrpc/svc.h:369:
+char *		   svc_print_addr(struct svc_rqst *, char *, size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#213: FILE: include/linux/sunrpc/svc.h:369:
+char *		   svc_print_addr(struct svc_rqst *, char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#213: FILE: include/linux/sunrpc/svc.h:369:
+char *		   svc_print_addr(struct svc_rqst *, char *, size_t);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: net/sunrpc/svcsock.c:123:
+		snprintf(buf, len, "%u.%u.%u.%u, port=%u",
+			NIPQUAD(((struct sockaddr_in *) addr)->sin_addr),

CHECK:SPACING: No space is necessary after a cast
#239: FILE: net/sunrpc/svcsock.c:123:
+			NIPQUAD(((struct sockaddr_in *) addr)->sin_addr),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#240: FILE: net/sunrpc/svcsock.c:124:
+			htons(((struct sockaddr_in *) addr)->sin_port));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: net/sunrpc/svcsock.c:129:
+		snprintf(buf, len, "%x:%x:%x:%x:%x:%x:%x:%x, port=%u",
+			NIP6(((struct sockaddr_in6 *) addr)->sin6_addr),

CHECK:SPACING: No space is necessary after a cast
#245: FILE: net/sunrpc/svcsock.c:129:
+			NIP6(((struct sockaddr_in6 *) addr)->sin6_addr),

CHECK:SPACING: No space is necessary after a cast
#246: FILE: net/sunrpc/svcsock.c:130:
+			htons(((struct sockaddr_in6 *) addr)->sin6_port));

CHECK:SPACING: No space is necessary after a cast
#265: FILE: net/sunrpc/svcsock.c:149:
+	return __svc_print_addr((struct sockaddr *) &rqstp->rq_addr, buf, len);

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#287: FILE: net/sunrpc/svcsock.c:523:
+	dprintk("svc: socket %p sendto([%p %Zu... ], %d) = %d (addr %s)\n",

CHECK:SPACING: No space is necessary after a cast
#317: FILE: net/sunrpc/svcsock.c:943:
+			__svc_print_addr((struct sockaddr *) &sin, buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: net/sunrpc/svcsock.c:944:
+			__svc_print_addr((struct sockaddr *) &sin, buf,
+								sizeof(buf)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#336: FILE: net/sunrpc/svcsock.c:980:
+				printk(KERN_NOTICE

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'svc_create_socket', this function's name, in a string
#352: FILE: net/sunrpc/svcsock.c:1605:
+	dprintk("svc: svc_create_socket(%s, %d, %s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: net/sunrpc/svcsock.c:1606:
+	dprintk("svc: svc_create_socket(%s, %d, %s)\n",
+			serv->sv_program->pg_name, protocol,

CHECK:SPACING: No space is necessary after a cast
#354: FILE: net/sunrpc/svcsock.c:1607:
+			__svc_print_addr((struct sockaddr *) sin, buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: net/sunrpc/svcsock.c:1608:
+			__svc_print_addr((struct sockaddr *) sin, buf,
+								sizeof(buf)));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000009856.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 21 warnings, 17 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000009856.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
