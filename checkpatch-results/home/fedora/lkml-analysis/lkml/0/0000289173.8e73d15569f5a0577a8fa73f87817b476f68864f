ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#70: FILE: fs/ufs/dir.c:66:
+	u64     blk= 0L;
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: fs/ufs/inode.c:63:
+	UFSD(("ptrs=uspi->s_apb = %d,double_blocks=%d \n",ptrs,double_blocks));
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: fs/ufs/inode.c:63:
+	UFSD(("ptrs=uspi->s_apb = %d,double_blocks=%d \n",ptrs,double_blocks));
 	                                                      ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#90: FILE: fs/ufs/inode.c:63:
+	UFSD(("ptrs=uspi->s_apb = %d,double_blocks=%d \n",ptrs,double_blocks));

CHECK:SPACING: No space is necessary after a cast
#105: FILE: fs/ufs/inode.c:97:
+	u64 mask = (u64) uspi->s_apbmask>>uspi->s_fpbshift;

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#105: FILE: fs/ufs/inode.c:97:
+	u64 mask = (u64) uspi->s_apbmask>>uspi->s_fpbshift;
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#119: FILE: fs/ufs/inode.c:107:
+	UFSD((": frag = %lu  depth = %d\n",frag,depth));
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#119: FILE: fs/ufs/inode.c:107:
+	UFSD((": frag = %lu  depth = %d\n",frag,depth));
 	                                       ^

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#120: FILE: fs/ufs/inode.c:108:
+	UFSD((": uspi->s_fpbshift = %d ,uspi->s_apbmask = %x, mask=%llx\n",uspi->s_fpbshift,uspi->s_apbmask,mask));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: fs/ufs/inode.c:108:
+	UFSD((": uspi->s_fpbshift = %d ,uspi->s_apbmask = %x, mask=%llx\n",uspi->s_fpbshift,uspi->s_apbmask,mask));
 	                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: fs/ufs/inode.c:108:
+	UFSD((": uspi->s_fpbshift = %d ,uspi->s_apbmask = %x, mask=%llx\n",uspi->s_fpbshift,uspi->s_apbmask,mask));
 	                                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: fs/ufs/inode.c:108:
+	UFSD((": uspi->s_fpbshift = %d ,uspi->s_apbmask = %x, mask=%llx\n",uspi->s_fpbshift,uspi->s_apbmask,mask));
 	                                                                                                   ^

CHECK:SPACING: No space is necessary after a cast
#138: FILE: fs/ufs/inode.c:134:
+	ret = (u64) (uspi->s_sbbase + fs32_to_cpu(sb, block) + (frag & uspi->s_fpbmask));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: fs/ufs/inode.c:146:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#155: FILE: fs/ufs/inode.c:148:
+		bh = sb_bread(sb, temp +(u64) (n>>shift));

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#155: FILE: fs/ufs/inode.c:148:
+		bh = sb_bread(sb, temp +(u64) (n>>shift));
 		                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#155: FILE: fs/ufs/inode.c:148:
+		bh = sb_bread(sb, temp +(u64) (n>>shift));
 		                                ^

CHECK:SPACING: No space is necessary after a cast
#165: FILE: fs/ufs/inode.c:157:
+	ret = temp + (u64) (frag & uspi->s_fpbmask);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: fs/ufs/inode.c:389:
+		UFSD(("phys64 = %lu \n",phys64));
 		                       ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#173: FILE: fs/ufs/inode.c:389:
+		UFSD(("phys64 = %lu \n",phys64));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: fs/ufs/super.c:96:
 
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: fs/ufs/super.c:162:
+	printk("  bsize:         %u\n", fs32_to_cpu(usb, usb->fs_bsize));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: fs/ufs/super.c:163:
+	printk("  fsize:         %u\n", fs32_to_cpu(usb, usb->fs_fsize));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: fs/ufs/super.c:905:
+	UFSD(("uspi->s_bshift = %d,uspi->s_fshift = %d", uspi->s_bshift,
+		uspi->s_fshift));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#212: FILE: fs/ufs/super.c:938:
+	if ((flags & UFS_TYPE_MASK) == UFS_TYPE_UFS2) {
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#215: FILE: fs/ufs/super.c:941:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#215: FILE: fs/ufs/super.c:941:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: include/linux/ufs_fs.h:899:
+extern u64  ufs_frag_map (struct inode *, sector_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: include/linux/ufs_fs.h:899:
+extern u64  ufs_frag_map (struct inode *, sector_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#229: FILE: include/linux/ufs_fs.h:899:
+extern u64  ufs_frag_map (struct inode *, sector_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#229: FILE: include/linux/ufs_fs.h:899:
+extern u64  ufs_frag_map (struct inode *, sector_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 9 warnings, 12 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
