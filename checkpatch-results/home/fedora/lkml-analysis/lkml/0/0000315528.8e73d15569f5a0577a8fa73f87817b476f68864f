WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
D: 1) Doing it from a random process context risks environment contamination:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: include/linux/kthread.h:1:
+#ifndef _LINUX_KTHREAD_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: include/linux/kthread.h:21:
+/* Part II: have thread call initfn(); return thread if successful,
+   otherwise ERR_PTR(-errno). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#90: FILE: include/linux/kthread.h:21:
+   otherwise ERR_PTR(-errno). */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#97: FILE: include/linux/kthread.h:28:
+	struct task_struct *__k						      \
+		= kthread_create(initfn,corefn,data,namefmt, ## __VA_ARGS__); \

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: include/linux/kthread.h:28:
+		= kthread_create(initfn,corefn,data,namefmt, ## __VA_ARGS__); \
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: include/linux/kthread.h:28:
+		= kthread_create(initfn,corefn,data,namefmt, ## __VA_ARGS__); \
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: include/linux/kthread.h:28:
+		= kthread_create(initfn,corefn,data,namefmt, ## __VA_ARGS__); \
 		                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: include/linux/kthread.h:35:
+ * if exited as normal).  Can be called before kthread_start(). */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/workqueue.h:63:
+extern int keventd_up(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: kernel/kthread.c:1:
+/* Kernel thread helper functions.

WARNING:TYPO_SPELLING: 'unneccessary' may be misspelled - perhaps 'unnecessary'?
#152: FILE: kernel/kthread.c:17:
+ * controlling it.  Strictly unneccessary, but without it it's barrier
                              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: kernel/kthread.c:18:
+ * hell. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#158: FILE: kernel/kthread.c:23:
+struct kt_message
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#194: FILE: kernel/kthread.c:59:
+struct kthread
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: kernel/kthread.c:69:
+        int ret = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/kthread.c:69:
+        int ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/kthread.c:71:
+        spin_lock(&ktm_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/kthread.c:71:
+        spin_lock(&ktm_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/kthread.c:72:
+        if (ktm.to == current && ktm.info == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/kthread.c:72:
+        if (ktm.to == current && ktm.info == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ktm.info"
#207: FILE: kernel/kthread.c:72:
+        if (ktm.to == current && ktm.info == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: kernel/kthread.c:73:
+                *m = ktm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: kernel/kthread.c:73:
+                *m = ktm;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/kthread.c:74:
+                ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/kthread.c:74:
+                ret = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/kthread.c:75:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/kthread.c:75:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/kthread.c:76:
+        spin_unlock(&ktm_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/kthread.c:76:
+        spin_unlock(&ktm_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: kernel/kthread.c:77:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/kthread.c:77:
+        return ret;$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#237: FILE: kernel/kthread.c:102:
+	if (k.initfn && (ret = k.initfn(k.data)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#246: FILE: kernel/kthread.c:111:
+		if (k.corefn && (ret = k.corefn(k.data)) < 0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#262: FILE: kernel/kthread.c:127:
+struct kthread_create
+{

CHECK:BRACES: braces {} should be used on all arms of this statement
#279: FILE: kernel/kthread.c:144:
+	if (ret < 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#281: FILE: kernel/kthread.c:146:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: kernel/kthread.c:149:
+		struct kt_message m = ktm_receive();
+		kc->result = m.info;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#313: FILE: kernel/kthread.c:178:
+	 * can't use keventd. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#314: FILE: kernel/kthread.c:179:
+	if (!keventd_up())
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#316: FILE: kernel/kthread.c:181:
+	else {

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#327: FILE: kernel/kthread.c:192:
+		yield();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "keventd_wq"
#373: FILE: kernel/workqueue.c:364:
+	return keventd_wq != NULL;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315528.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 19 warnings, 8 checks, 293 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315528.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
