WARNING:TYPO_SPELLING: 'attatch' may be misspelled - perhaps 'attach'?
#31: 
(I'll attatch his patches here for convenience, they're small, and I don't
      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#220: FILE: include/linux/sched.h:293:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#235: FILE: kernel/fork.c:879:
+	p->last_run =3D jiffies;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#247: FILE: kernel/sched.c:327:
+	unsigned long sleep_time =3D jiffies - p->last_run;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#273: FILE: kernel/sched.c:1162:
+	prev->last_run =3D jiffies;
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#308: FILE: kernel/sched.c:68:
+#define MAX_SLEEP_AVG		(10*HZ)
                      		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#309: FILE: kernel/sched.c:69:
+#define STARVATION_LIMIT	(30*HZ)
                         	   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#347: FILE: kernel/sched.c:564:
+static inline task_t * context_switch(runqueue_t *rq, task_t *prev, task_t =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#357: FILE: kernel/sched.c:577:
+		rq->prev_mm =3D oldmm;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#371: FILE: kernel/sched.c:1221:
+		prev =3D context_switch(rq, prev, next);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#374: FILE: kernel/sched.c:1224:
+		prev_mm =3D rq->prev_mm;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#375: FILE: kernel/sched.c:1225:
+		rq->prev_mm =3D NULL;
 		            ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#409: FILE: kernel/sched.c:332:
+}
+ =20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#409: FILE: kernel/sched.c:332:
+}
+ =20

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: kernel/sched.c:332:
+ =20$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#409: FILE: kernel/sched.c:332:
+ =20
  ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#428: FILE: kernel/sched.c:465:
+	sync &=3D SYNC_WAKEUPS;
 	     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#440: FILE: kernel/sched.c:485:
+		if (sync)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#442: FILE: kernel/sched.c:487:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#456: FILE: kernel/sched.c:527:
+	if (SMART_WAKE_CHILD) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#457: FILE: kernel/sched.c:528:
+		if (unlikely(!current->array))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#459: FILE: kernel/sched.c:530:
+		else {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: kernel/sched.c:531:
+			p->prio =3D current->prio;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#462: FILE: kernel/sched.c:533:
+			p->array =3D current->array;
 			         ^

CHECK:BRACES: Unbalanced braces around else statement
#466: FILE: kernel/sched.c:537:
+	} else

WARNING:TYPO_SPELLING: 'agressivity' may be misspelled - perhaps 'aggressivity'?
#479: FILE: kernel/sched.c:817:
+ * frequency and balancing agressivity depends on whether the CPU is
                            ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#485: FILE: kernel/sched.c:823:
+#define BUSY_REBALANCE_TICK (HZ/4 ?: 1)
                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#486: FILE: kernel/sched.c:824:
+#define IDLE_REBALANCE_TICK (HZ/1000 ?: 1)
                                ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#490: FILE: kernel/sched.c:828:
+static inline void load_balance(runqueue_t *rq, int this_cpu, int idle) { =

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'agressive' may be misspelled - perhaps 'aggressive'?
#502: FILE: kernel/sched.c:1015:
+	 * (except if we are in idle mode which is a more agressive
 	                                                  ^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 4 warnings, 12 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
