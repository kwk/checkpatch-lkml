WARNING:TYPO_SPELLING: 'appearantly' may be misspelled - perhaps 'apparently'?
#26: 
This patch does not look fit for inclusion to me, but appearantly it's
                                                      ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -urN linux-2.4.19-rc3/drivers/scsi/Config.in linux-2.4.19-s390/drivers/scsi/Config.in

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/scsi/hosts.c:91:
+    char name[10];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/scsi/hosts.c:94:
+    if (sh->hostt->use_new_eh_code$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#74: FILE: drivers/scsi/hosts.c:94:
+    if (sh->hostt->use_new_eh_code
[...]
+            DECLARE_MUTEX_LOCKED(sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/scsi/hosts.c:95:
+        && sh->ehandler != NULL) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#75: FILE: drivers/scsi/hosts.c:95:
+    if (sh->hostt->use_new_eh_code
+        && sh->ehandler != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/scsi/hosts.c:95:
+        && sh->ehandler != NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sh->ehandler"
#75: FILE: drivers/scsi/hosts.c:95:
+        && sh->ehandler != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/scsi/hosts.c:96:
+            DECLARE_MUTEX_LOCKED(sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/scsi/hosts.c:96:
+            DECLARE_MUTEX_LOCKED(sem);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: drivers/scsi/hosts.c:97:
+            $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/scsi/hosts.c:97:
+            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/scsi/hosts.c:97:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/scsi/hosts.c:98:
+            sh->eh_notify = &sem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/scsi/hosts.c:98:
+            sh->eh_notify = &sem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/scsi/hosts.c:99:
+            send_sig(SIGHUP, sh->ehandler, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/scsi/hosts.c:99:
+            send_sig(SIGHUP, sh->ehandler, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/scsi/hosts.c:100:
+            down(&sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/scsi/hosts.c:100:
+            down(&sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/scsi/hosts.c:101:
+            sh->eh_notify = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/scsi/hosts.c:101:
+            sh->eh_notify = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/scsi/hosts.c:102:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/scsi/hosts.c:103:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/scsi/hosts.c:103:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/scsi/hosts.c:106:
+    sprintf(name, "%d", sh->host_no);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/scsi/hosts.c:107:
+    remove_proc_entry(name, sh->hostt->proc_dir);$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#96: FILE: drivers/scsi/hosts.c:128:
+#if 1

WARNING:TYPO_SPELLING: 'shoult' may be misspelled - perhaps 'should'?
#97: FILE: drivers/scsi/hosts.c:129:
+    /* We shoult not decrement max_scsi_hosts (and make this value
           ^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/scsi/hosts.c:170:
+    char *name;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/scsi/hosts.c:298:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/scsi/hosts.c:298:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/scsi/hosts.c:300:
+    build_proc_dir_entry(retval);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/scsi/hosts.c:302:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/scsi/hosts.c:302:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/scsi/hosts.c:304:
+    if (retval->hostt->use_new_eh_code) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#139: FILE: drivers/scsi/hosts.c:304:
+    if (retval->hostt->use_new_eh_code) {
+            DECLARE_MUTEX_LOCKED(sem);

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/scsi/hosts.c:305:
+            DECLARE_MUTEX_LOCKED(sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/scsi/hosts.c:305:
+            DECLARE_MUTEX_LOCKED(sem);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: drivers/scsi/hosts.c:306:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: drivers/scsi/hosts.c:306:
+            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/scsi/hosts.c:306:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/scsi/hosts.c:307:
+            retval->eh_notify = &sem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/scsi/hosts.c:307:
+            retval->eh_notify = &sem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/scsi/hosts.c:308:
+            kernel_thread((int (*)(void *)) scsi_error_handler,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/scsi/hosts.c:308:
+            kernel_thread((int (*)(void *)) scsi_error_handler,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/scsi/hosts.c:309:
+                          (void *) retval, 0);$

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/scsi/hosts.c:309:
+                          (void *) retval, 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/scsi/hosts.c:309:
+                          (void *) retval, 0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/scsi/hosts.c:310:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/scsi/hosts.c:310:
+            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/scsi/hosts.c:310:
+            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/scsi/hosts.c:311:
+            /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/scsi/hosts.c:312:
+             * Now wait for the kernel error thread to initialize itself$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: drivers/scsi/hosts.c:313:
+             * as it might be needed when we scan the bus.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/scsi/hosts.c:314:
+             */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/scsi/hosts.c:315:
+            down(&sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/scsi/hosts.c:315:
+            down(&sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/scsi/hosts.c:316:
+            retval->eh_notify = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/scsi/hosts.c:316:
+            retval->eh_notify = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/scsi/hosts.c:317:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/scsi/hosts.c:319:
+    if (tpnt->info) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#154: FILE: drivers/scsi/hosts.c:319:
+    if (tpnt->info) {
+            name = (char *)tpnt->info(retval);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#154: FILE: drivers/scsi/hosts.c:319:
+    if (tpnt->info) {
[...]
+    } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/scsi/hosts.c:320:
+            name = (char *)tpnt->info(retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/scsi/hosts.c:320:
+            name = (char *)tpnt->info(retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/scsi/hosts.c:321:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#156: FILE: drivers/scsi/hosts.c:321:
+    } else {
+            name = (char *)tpnt->name;

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/scsi/hosts.c:322:
+            name = (char *)tpnt->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/scsi/hosts.c:322:
+            name = (char *)tpnt->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/scsi/hosts.c:323:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/scsi/hosts.c:324:
+    printk(KERN_INFO "scsi%d : %s\n",^I^I/* And print a little message */$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#159: FILE: drivers/scsi/hosts.c:324:
+    printk(KERN_INFO "scsi%d : %s\n",		/* And print a little message */

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/scsi/hosts.c:325:
+                   retval->host_no, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/scsi/hosts.c:325:
+                   retval->host_no, name);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/scsi/hosts.c:326:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/scsi/hosts.c:326:
+    $

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host_Template>
#174: FILE: drivers/scsi/hosts.h:468:
+extern void build_proc_dir(Scsi_Host_Template *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: drivers/scsi/hosts.h:468:
+extern void build_proc_dir(Scsi_Host_Template *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#175: FILE: drivers/scsi/hosts.h:469:
+extern void build_proc_dir_entry(struct Scsi_Host *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: drivers/scsi/hosts.h:469:
+extern void build_proc_dir_entry(struct Scsi_Host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#175: FILE: drivers/scsi/hosts.h:469:
+extern void build_proc_dir_entry(struct Scsi_Host *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/scsi/scsi.c:537:
+        /* Note: The eh_thread is now started in scsi_bottom_half_handler for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: drivers/scsi/scsi.c:537:
+        /* Note: The eh_thread is now started in scsi_bottom_half_handler for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/scsi/scsi.c:538:
+         * all cases except command timeout$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/scsi/scsi.c:539:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/scsi/scsi.c:1287:
+                                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/scsi/scsi.c:1287:
+                                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/scsi/scsi.c:1288:
+                                        /* eh not present....trying to continue anyway */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/scsi/scsi.c:1290:
+                                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/scsi/scsi.c:1290:
+                                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/scsi/scsi.c:1291:
+                                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/scsi/scsi.c:1291:
+                                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/scsi/scsi.c:1292:
+                        } // switch$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/scsi/scsi.c:1292:
+                        } // switch$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/scsi/scsi.c:1293:
+                        if (SCpnt->host->eh_wait != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/scsi/scsi.c:1293:
+                        if (SCpnt->host->eh_wait != NULL) {$

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#234: FILE: drivers/scsi/scsi.c:1293:
+                        if (SCpnt->host->eh_wait != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "SCpnt->host->eh_wait"
#234: FILE: drivers/scsi/scsi.c:1293:
+                        if (SCpnt->host->eh_wait != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: drivers/scsi/scsi.c:1294:
+                                /*$

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#236: FILE: drivers/scsi/scsi.c:1295:
+                                 * If the host is having troubles, then look to see if this was the last

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/scsi/scsi.c:1295:
+                                 * If the host is having troubles, then look to see if this was the last$

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#237: FILE: drivers/scsi/scsi.c:1296:
+                                 * command that might have failed.  If so, wake up the error handler.

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/scsi/scsi.c:1296:
+                                 * command that might have failed.  If so, wake up the error handler.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/scsi/scsi.c:1297:
+                                 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/scsi/scsi.c:1298:
+                                if (SCpnt->host->in_recovery && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/scsi/scsi.c:1298:
+                                if (SCpnt->host->in_recovery && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/scsi/scsi.c:1298:
+                                if (SCpnt->host->in_recovery && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SCpnt->host->host_busy == SCpnt->host->host_failed'
#239: FILE: drivers/scsi/scsi.c:1298:
+                                if (SCpnt->host->in_recovery && 
+                                    !SCpnt->host->eh_active &&
+                                    (SCpnt->host->host_busy == SCpnt->host->host_failed)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: drivers/scsi/scsi.c:1299:
+                                    !SCpnt->host->eh_active &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/scsi/scsi.c:1299:
+                                    !SCpnt->host->eh_active &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: drivers/scsi/scsi.c:1300:
+                                    (SCpnt->host->host_busy == SCpnt->host->host_failed)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/scsi/scsi.c:1300:
+                                    (SCpnt->host->host_busy == SCpnt->host->host_failed)) {$

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#242: FILE: drivers/scsi/scsi.c:1301:
+                                        SCSI_LOG_ERROR_RECOVERY(5, printk("Waking error handler thread (%d)\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/scsi/scsi.c:1301:
+                                        SCSI_LOG_ERROR_RECOVERY(5, printk("Waking error handler thread (%d)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/scsi/scsi.c:1301:
+                                        SCSI_LOG_ERROR_RECOVERY(5, printk("Waking error handler thread (%d)\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#242: FILE: drivers/scsi/scsi.c:1301:
+                                        SCSI_LOG_ERROR_RECOVERY(5, printk("Waking error handler thread (%d)\n",

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#243: FILE: drivers/scsi/scsi.c:1302:
+                                                                          atomic_read(&SCpnt->host->eh_wait->count)));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/scsi/scsi.c:1302:
+                                                                          atomic_read(&SCpnt->host->eh_wait->count)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/scsi/scsi.c:1302:
+                                                                          atomic_read(&SCpnt->host->eh_wait->count)));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/scsi/scsi.c:1303:
+                                        printk("(in_recovery=%d, host_busy=%d, host_failed=%d) "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/scsi/scsi.c:1303:
+                                        printk("(in_recovery=%d, host_busy=%d, host_failed=%d) "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: drivers/scsi/scsi.c:1303:
+                                        printk("(in_recovery=%d, host_busy=%d, host_failed=%d) "

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: drivers/scsi/scsi.c:1304:
+                                               "Waking error handler thread bh(%d)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/scsi/scsi.c:1304:
+                                               "Waking error handler thread bh(%d)\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#245: FILE: drivers/scsi/scsi.c:1304:
+                                        printk("(in_recovery=%d, host_busy=%d, host_failed=%d) "
+                                               "Waking error handler thread bh(%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/scsi/scsi.c:1305:
+                                               SCpnt->host->in_recovery,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/scsi/scsi.c:1305:
+                                               SCpnt->host->in_recovery,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/scsi/scsi.c:1306:
+                                               SCpnt->host->host_busy,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/scsi/scsi.c:1306:
+                                               SCpnt->host->host_busy,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/scsi/scsi.c:1307:
+                                               SCpnt->host->host_failed,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/scsi/scsi.c:1307:
+                                               SCpnt->host->host_failed,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/scsi/scsi.c:1308:
+                                               atomic_read(&SCpnt->host->eh_wait->count));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/scsi/scsi.c:1308:
+                                               atomic_read(&SCpnt->host->eh_wait->count));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/scsi/scsi.c:1309:
+                                        up(SCpnt->host->eh_wait);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/scsi/scsi.c:1309:
+                                        up(SCpnt->host->eh_wait);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/scsi/scsi.c:1310:
+                                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/scsi/scsi.c:1310:
+                                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/scsi/scsi.c:1311:
+                        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/scsi/scsi.c:1311:
+                        } else {$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#253: FILE: drivers/scsi/scsi.c:1312:
+                                SCSI_LOG_ERROR_RECOVERY(5, printk("Warning: eh_thread not present\n"));

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/scsi/scsi.c:1312:
+                                SCSI_LOG_ERROR_RECOVERY(5, printk("Warning: eh_thread not present\n"));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/scsi/scsi.c:1312:
+                                SCSI_LOG_ERROR_RECOVERY(5, printk("Warning: eh_thread not present\n"));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: drivers/scsi/scsi.c:1312:
+                                SCSI_LOG_ERROR_RECOVERY(5, printk("Warning: eh_thread not present\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/scsi/scsi.c:1314:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/scsi/scsi.c:1314:
+                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/scsi/scsi.c:1314:
+                        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/scsi/scsi.c:1316:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: drivers/scsi/scsi.c:1316:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/scsi/scsi.c:1316:
+                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/scsi/scsi.c:1318:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: drivers/scsi/scsi.c:1318:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/scsi/scsi.c:1318:
+        $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'xd' - possible side-effects?
#376: FILE: drivers/scsi/scsi.h:394:
+#define _CONTIGUOUS_BUFFERS(xd, xs, yd, ys) \
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'xd' may be better as '(xd)' to avoid precedence issues
#376: FILE: drivers/scsi/scsi.h:394:
+#define _CONTIGUOUS_BUFFERS(xd, xs, yd, ys) \
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'xs' may be better as '(xs)' to avoid precedence issues
#376: FILE: drivers/scsi/scsi.h:394:
+#define _CONTIGUOUS_BUFFERS(xd, xs, yd, ys) \
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'yd' - possible side-effects?
#376: FILE: drivers/scsi/scsi.h:394:
+#define _CONTIGUOUS_BUFFERS(xd, xs, yd, ys) \
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'yd' may be better as '(yd)' to avoid precedence issues
#376: FILE: drivers/scsi/scsi.h:394:
+#define _CONTIGUOUS_BUFFERS(xd, xs, yd, ys) \
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ys' may be better as '(ys)' to avoid precedence issues
#376: FILE: drivers/scsi/scsi.h:394:
+#define _CONTIGUOUS_BUFFERS(xd, xs, yd, ys) \
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/scsi/scsi.h:395:
+     (((xd + xs) == yd) \$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#378: FILE: drivers/scsi/scsi.h:396:
+     (((xd + xs) == yd) \
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/scsi/scsi.h:396:
+      && ((xd & PAGE_MASK) == ((yd + ys - 1) & PAGE_MASK)))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: drivers/scsi/scsi.h:398:
+#define CONTIGUOUS_BUFFERS(X,Y) \
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'X' - possible side-effects?
#380: FILE: drivers/scsi/scsi.h:398:
+#define CONTIGUOUS_BUFFERS(X,Y) \
+	_CONTIGUOUS_BUFFERS( \
+		(unsigned long)(X)->b_data, \
+		(unsigned long)(X)->b_size, \
+		(unsigned long)(Y)->b_data, \
+		(unsigned long)(Y)->b_size)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'Y' - possible side-effects?
#380: FILE: drivers/scsi/scsi.h:398:
+#define CONTIGUOUS_BUFFERS(X,Y) \
+	_CONTIGUOUS_BUFFERS( \
+		(unsigned long)(X)->b_data, \
+		(unsigned long)(X)->b_size, \
+		(unsigned long)(Y)->b_data, \
+		(unsigned long)(Y)->b_size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: drivers/scsi/scsi_lib.c:265:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: drivers/scsi/scsi_lib.c:266:
+                 * We need to recount the number of$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/scsi/scsi_lib.c:267:
+                 * scatter-gather segments here - the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/scsi/scsi_lib.c:268:
+                 * normal case code assumes this to be$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/scsi/scsi_lib.c:269:
+                 * correct, as it would be a performance$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/scsi/scsi_lib.c:270:
+                 * loss to always recount.  Handling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: drivers/scsi/scsi_lib.c:271:
+                 * errors is always unusual, of course.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/scsi/scsi_lib.c:272:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/scsi/scsi_lib.c:273:
+                recount_segments(SCpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/scsi/scsi_lib.c:273:
+                recount_segments(SCpnt);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#435: FILE: drivers/scsi/scsi_proc.c:123:
+void build_proc_dir_entry(struct Scsi_Host *shpnt) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#445: FILE: drivers/scsi/scsi_proc.c:127:
+	if(shpnt->hostt->proc_dir) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#447: FILE: drivers/scsi/scsi_proc.c:129:
+		p = create_proc_read_entry(

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#449: FILE: drivers/scsi/scsi_proc.c:131:
+			S_IFREG | S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/scsi/scsi_proc.c:134:
+			(void *) shpnt

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#456: FILE: drivers/scsi/scsi_proc.c:138:
+		p->write_proc=proc_scsi_write;
 		             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#477: FILE: drivers/scsi/scsi_proc.c:143:
+void build_proc_dir(Scsi_Host_Template * tpnt)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#481: FILE: drivers/scsi/scsi_proc.c:147:
+		printk(KERN_ERR "Unable to proc_mkdir in scsi.c/build_proc_dir_entries");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 83 warnings, 21 checks, 417 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
