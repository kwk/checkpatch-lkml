CHECK:BRACES: braces {} should be used on all arms of this statement
#74: FILE: fs/nfs/inode.c:380:
+	if (xprt)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#76: FILE: fs/nfs/inode.c:382:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#107: FILE: fs/nfs/inode.c:402:
+			printk(KERN_WARNING "NFS: cannot create RPC transport.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: fs/nfs/inode.c:491:
+		server->acl_client = nfs_create_client(server, data,
+			&nfsacl_program, server->client->cl_xprt);

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#158: FILE: include/linux/sunrpc/xprt.h:204:
+struct rpc_xprt *	xprt_get_handle(struct rpc_xprt *);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_xprt *' should also have an identifier name
#158: FILE: include/linux/sunrpc/xprt.h:204:
+struct rpc_xprt *	xprt_get_handle(struct rpc_xprt *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285843.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 2 warnings, 3 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000285843.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
