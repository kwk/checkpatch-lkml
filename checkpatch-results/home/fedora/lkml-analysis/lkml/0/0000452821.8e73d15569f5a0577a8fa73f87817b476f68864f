WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- Move ide_fixstring() from ide.c to probe.c, since this is the place, where it's

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#67: FILE: arch/cris/drivers/ide.c:710:
+	return ata_error(drive, __FUNCTION__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#112: FILE: drivers/ide/device.c:108:
+	if (on)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#114: FILE: drivers/ide/device.c:110:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#124: FILE: drivers/ide/device.c:120:
+EXPORT_SYMBOL(ata_irq_enable);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: drivers/ide/device.c:133:
+	printk("%s: reset\n", ch->name);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#139: FILE: drivers/ide/device.c:135:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#147: FILE: drivers/ide/device.c:143:
+EXPORT_SYMBOL(ata_reset);

CHECK:BRACES: Unbalanced braces around else statement
#195: FILE: drivers/ide/hpt366.c:831:
+		} else

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#216: FILE: drivers/ide/ht6560b.c:126:
+	static u8 current_select = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#217: FILE: drivers/ide/ht6560b.c:127:
+	static u8 current_timing = 0;

CHECK:SPACING: No space is necessary after a cast
#265: FILE: drivers/ide/ht6560b.c:187:
+	(void) inb(0x1f7);               /* STATUS */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#285: FILE: drivers/ide/ht6560b.c:239:
 	} else {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#367: FILE: drivers/ide/icside.c:479:
+	return ata_error(drive, rq, __FUNCTION__);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#446: FILE: drivers/ide/ide.c:512:
+					OUT_BYTE(0x80, drive->channel->io_ports[IDE_CONTROL_OFFSET]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Unbalanced braces around else statement
#481: FILE: drivers/ide/ide.c:614:
+	else {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#531: FILE: drivers/ide/ide.c:669:
+		return ata_error(drive, rq, __FUNCTION__); /* already calls ide_end_drive_cmd */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#675: FILE: drivers/ide/ide-cd.c:676:
+			*startstop = ata_error(drive, rq, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#841: FILE: drivers/ide/ide-taskfile.c:249:
+			startstop = ata_error(drive, rq, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#876: FILE: drivers/ide/ide-taskfile.c:400:
+		return ata_error(drive, rq, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#885: FILE: drivers/ide/ide-taskfile.c:417:
+			return ata_error(drive, rq, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#900: FILE: drivers/ide/ide-taskfile.c:436:
+			return ata_error(drive, rq, __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#911: FILE: drivers/ide/ide-taskfile.c:447:
+	DTF("Read: %p, rq->current_nr_sectors: %d\n", buf, (int) rq->current_nr_sectors);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#930: FILE: drivers/ide/ide-taskfile.c:504:
+		return ata_error(drive, rq, __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#940: FILE: drivers/ide/ide-taskfile.c:512:
+		DTF("write: %p, rq->current_nr_sectors: %d\n", buf, (int) rq->current_nr_sectors);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#962: FILE: drivers/ide/ide-taskfile.c:535:
+		if (drive->status & (ERR_STAT|DRQ_STAT))
 		                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#963: FILE: drivers/ide/ide-taskfile.c:536:
+			return ata_error(drive, rq, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1048: FILE: drivers/ide/pcidma.c:54:
+	return ata_error(drive, rq, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1066: FILE: drivers/ide/pcidma.c:135:
+		return ata_error(drive, rq, __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1088: FILE: drivers/ide/pdc202xx.c:693:
+	printk(KERN_INFO "PDC202XX: %s channel reset.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1089: FILE: drivers/ide/pdc202xx.c:694:
+	printk(KERN_INFO "PDC202XX: %s channel reset.\n",
 		drive->channel->unit ? "Secondary" : "Primary");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1112: FILE: drivers/ide/pdc4030.c:381:
+		return ata_error(drive, rq, __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1139: FILE: drivers/ide/pdc4030.c:542:
+		printk(KERN_ERR "%s: write timed out!\n", drive->name);

CHECK:SPACING: No space is necessary after a cast
#1175: FILE: drivers/ide/probe.c:278:
+			unsigned short *pp = (unsigned short *) (p -= 2);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1187: FILE: drivers/ide/probe.c:290:
+			*p++ = *(s-1);
 			          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1260: FILE: drivers/ide/probe.c:398:
+		outb(inb(ch->dma_base + 2)|(1 << (5 + unit)), ch->dma_base + 2);
 		                          ^

WARNING:TYPO_SPELLING: 'allways' may be misspelled - perhaps 'always'?
#1308: FILE: drivers/ide/probe.c:605:
+	/* FIXME: perhaps we should be just using allways the status register,
 	                                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#1332: FILE: drivers/ide/probe.c:624:
+			hd_status = ch->io_ports[IDE_STATUS_OFFSET];	/* ancient Seagate drives, broken interfaces */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1335: FILE: drivers/ide/probe.c:626:
+			hd_status = ch->io_ports[IDE_ALTSTATUS_OFFSET];	/* use non-intrusive polling */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1416: FILE: drivers/ide/qd65xx.c:176:
+	strncpy(model,drive->id->model, 40);
 	             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1615: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ata_error(struct ata_device *, struct request *rq, const char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1615: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ata_error(struct ata_device *, struct request *rq, const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1615: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ata_error(struct ata_device *, struct request *rq, const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1624: FILE: include/linux/ide.h:648:
+extern void ide_fixstring(char *s, const int bytecount, const int byteswap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1641: FILE: include/linux/ide.h:874:
+extern int ata_irq_enable(struct ata_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1641: FILE: include/linux/ide.h:874:
+extern int ata_irq_enable(struct ata_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1641: FILE: include/linux/ide.h:874:
+extern int ata_irq_enable(struct ata_device *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1642: FILE: include/linux/ide.h:875:
+extern void ata_reset(struct ata_channel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_channel *' should also have an identifier name
#1642: FILE: include/linux/ide.h:875:
+extern void ata_reset(struct ata_channel *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 28 warnings, 18 checks, 1415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
