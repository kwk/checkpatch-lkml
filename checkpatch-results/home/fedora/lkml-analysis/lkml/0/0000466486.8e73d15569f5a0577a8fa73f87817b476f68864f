WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/current-dontdiff --minimal linux-2.5.7-pre1/include/asm-i386/bitops.h working-2.5.7-pre1-bitops/include/asm-i386/bitops.h

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#32: FILE: include/asm-i386/bitops.h:37:
+static __inline__ void set_bit(int nr, volatile unsigned long * addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#32: FILE: include/asm-i386/bitops.h:37:
+static __inline__ void set_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#32: FILE: include/asm-i386/bitops.h:37:
+static __inline__ void set_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#41: FILE: include/asm-i386/bitops.h:54:
+static __inline__ void __set_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#41: FILE: include/asm-i386/bitops.h:54:
+static __inline__ void __set_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#41: FILE: include/asm-i386/bitops.h:54:
+static __inline__ void __set_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#50: FILE: include/asm-i386/bitops.h:72:
+static __inline__ void clear_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#50: FILE: include/asm-i386/bitops.h:72:
+static __inline__ void clear_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#50: FILE: include/asm-i386/bitops.h:72:
+static __inline__ void clear_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: include/asm-i386/bitops.h:80:
+static __inline__ void __clear_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#59: FILE: include/asm-i386/bitops.h:80:
+static __inline__ void __clear_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#59: FILE: include/asm-i386/bitops.h:80:
+static __inline__ void __clear_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#68: FILE: include/asm-i386/bitops.h:99:
+static __inline__ void __change_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#68: FILE: include/asm-i386/bitops.h:99:
+static __inline__ void __change_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#68: FILE: include/asm-i386/bitops.h:99:
+static __inline__ void __change_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: include/asm-i386/bitops.h:116:
+static __inline__ void change_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#77: FILE: include/asm-i386/bitops.h:116:
+static __inline__ void change_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#77: FILE: include/asm-i386/bitops.h:116:
+static __inline__ void change_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: include/asm-i386/bitops.h:132:
+static __inline__ int test_and_set_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#86: FILE: include/asm-i386/bitops.h:132:
+static __inline__ int test_and_set_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#86: FILE: include/asm-i386/bitops.h:132:
+static __inline__ int test_and_set_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: include/asm-i386/bitops.h:152:
+static __inline__ int __test_and_set_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#95: FILE: include/asm-i386/bitops.h:152:
+static __inline__ int __test_and_set_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#95: FILE: include/asm-i386/bitops.h:152:
+static __inline__ int __test_and_set_bit(int nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/asm-i386/bitops.h:171:
+static __inline__ int test_and_clear_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#104: FILE: include/asm-i386/bitops.h:171:
+static __inline__ int test_and_clear_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#104: FILE: include/asm-i386/bitops.h:171:
+static __inline__ int test_and_clear_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#113: FILE: include/asm-i386/bitops.h:191:
+static __inline__ int __test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#113: FILE: include/asm-i386/bitops.h:191:
+static __inline__ int __test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#122: FILE: include/asm-i386/bitops.h:203:
+static __inline__ int __test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#122: FILE: include/asm-i386/bitops.h:203:
+static __inline__ int __test_and_change_bit(int nr, volatile unsigned long *addr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#131: FILE: include/asm-i386/bitops.h:222:
+static __inline__ int test_and_change_bit(int nr, volatile unsigned long* addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#131: FILE: include/asm-i386/bitops.h:222:
+static __inline__ int test_and_change_bit(int nr, volatile unsigned long* addr)

WARNING:INLINE: plain inline is preferred over __inline__
#131: FILE: include/asm-i386/bitops.h:222:
+static __inline__ int test_and_change_bit(int nr, volatile unsigned long* addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: include/asm-i386/bitops.h:242:
+static __inline__ int constant_test_bit(int nr, const volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#140: FILE: include/asm-i386/bitops.h:242:
+static __inline__ int constant_test_bit(int nr, const volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#140: FILE: include/asm-i386/bitops.h:242:
+static __inline__ int constant_test_bit(int nr, const volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: include/asm-i386/bitops.h:247:
+static __inline__ int variable_test_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#146: FILE: include/asm-i386/bitops.h:247:
+static __inline__ int variable_test_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#146: FILE: include/asm-i386/bitops.h:247:
+static __inline__ int variable_test_bit(int nr, volatile unsigned long * addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#155: FILE: include/asm-i386/bitops.h:271:
+static __inline__ int find_first_zero_bit(unsigned long * addr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: include/asm-i386/bitops.h:271:
+static __inline__ int find_first_zero_bit(unsigned long * addr, unsigned size)

WARNING:INLINE: plain inline is preferred over __inline__
#155: FILE: include/asm-i386/bitops.h:271:
+static __inline__ int find_first_zero_bit(unsigned long * addr, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: include/asm-i386/bitops.h:303:
+static __inline__ int find_first_bit(unsigned long * addr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: include/asm-i386/bitops.h:303:
+static __inline__ int find_first_bit(unsigned long * addr, unsigned size)

WARNING:INLINE: plain inline is preferred over __inline__
#164: FILE: include/asm-i386/bitops.h:303:
+static __inline__ int find_first_bit(unsigned long * addr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: include/asm-i386/bitops.h:329:
+static __inline__ int find_next_zero_bit(unsigned long * addr, int size, int offset)

WARNING:INLINE: plain inline is preferred over __inline__
#173: FILE: include/asm-i386/bitops.h:329:
+static __inline__ int find_next_zero_bit(unsigned long * addr, int size, int offset)

WARNING:INLINE: plain inline is preferred over __inline__
#182: FILE: include/asm-i386/bitops.h:362:
+static __inline__ int find_next_bit(unsigned long *addr, int size, int offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#185: FILE: include/asm-i386/bitops.h:364:
+	unsigned long * p = addr + (offset >> 5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: include/asm-i386/bitops.h:385:
+	res = find_first_bit (p, size - 32 * (p - addr));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: include/asm-ppc/bitops.h:33:
+static __inline__ void set_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#206: FILE: include/asm-ppc/bitops.h:33:
+static __inline__ void set_bit(int nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#206: FILE: include/asm-ppc/bitops.h:33:
+static __inline__ void set_bit(int nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#215: FILE: include/asm-ppc/bitops.h:53:
+static __inline__ void __set_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#215: FILE: include/asm-ppc/bitops.h:53:
+static __inline__ void __set_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#224: FILE: include/asm-ppc/bitops.h:67:
+static __inline__ void clear_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#224: FILE: include/asm-ppc/bitops.h:67:
+static __inline__ void clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#233: FILE: include/asm-ppc/bitops.h:87:
+static __inline__ void __clear_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#233: FILE: include/asm-ppc/bitops.h:87:
+static __inline__ void __clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#242: FILE: include/asm-ppc/bitops.h:95:
+static __inline__ void change_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#242: FILE: include/asm-ppc/bitops.h:95:
+static __inline__ void change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#251: FILE: include/asm-ppc/bitops.h:115:
+static __inline__ void __change_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#251: FILE: include/asm-ppc/bitops.h:115:
+static __inline__ void __change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#260: FILE: include/asm-ppc/bitops.h:126:
+static __inline__ int test_and_set_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#260: FILE: include/asm-ppc/bitops.h:126:
+static __inline__ int test_and_set_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#269: FILE: include/asm-ppc/bitops.h:149:
+static __inline__ int __test_and_set_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#269: FILE: include/asm-ppc/bitops.h:149:
+static __inline__ int __test_and_set_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#278: FILE: include/asm-ppc/bitops.h:159:
+static __inline__ int test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#278: FILE: include/asm-ppc/bitops.h:159:
+static __inline__ int test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#287: FILE: include/asm-ppc/bitops.h:182:
+static __inline__ int __test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#287: FILE: include/asm-ppc/bitops.h:182:
+static __inline__ int __test_and_clear_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#296: FILE: include/asm-ppc/bitops.h:192:
+static __inline__ int test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#296: FILE: include/asm-ppc/bitops.h:192:
+static __inline__ int test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#305: FILE: include/asm-ppc/bitops.h:215:
+static __inline__ int __test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#305: FILE: include/asm-ppc/bitops.h:215:
+static __inline__ int __test_and_change_bit(int nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#314: FILE: include/asm-ppc/bitops.h:225:
+static __inline__ int test_bit(int nr, __const__ volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#314: FILE: include/asm-ppc/bitops.h:225:
+static __inline__ int test_bit(int nr, __const__ volatile unsigned long *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#323: FILE: include/asm-ppc/bitops.h:233:
+static __inline__ int __ilog2(unsigned long x)

WARNING:INLINE: plain inline is preferred over __inline__
#332: FILE: include/asm-ppc/bitops.h:241:
+static __inline__ int ffz(unsigned long x)

WARNING:INLINE: plain inline is preferred over __inline__
#341: FILE: include/asm-ppc/bitops.h:299:
+static __inline__ unsigned long find_next_bit(unsigned long *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: include/asm-ppc/bitops.h:300:
+static __inline__ unsigned long find_next_bit(unsigned long *addr,
 	unsigned long size, unsigned long offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: include/asm-ppc/bitops.h:356:
+static __inline__ unsigned long find_next_zero_bit(unsigned long * addr,

WARNING:INLINE: plain inline is preferred over __inline__
#350: FILE: include/asm-ppc/bitops.h:356:
+static __inline__ unsigned long find_next_zero_bit(unsigned long * addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: include/asm-ppc/bitops.h:357:
+static __inline__ unsigned long find_next_zero_bit(unsigned long * addr,
 	unsigned long size, unsigned long offset)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 66 warnings, 2 checks, 289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000466486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
