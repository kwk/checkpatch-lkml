WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -Nur --exclude=SCCS --exclude=BitKeeper --exclude=ChangeSet linux-2.4.19/arch/i386/kernel/pci-pc.c linux-2.4.19-cpci/arch/i386/kernel/pci-pc.c

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#81: FILE: arch/i386/kernel/pci-pc.c:1280:
 void __devinit pcibios_config_init(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#125: FILE: drivers/pci/setup-bus.c:124:
+void __devinit

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: drivers/pci/setup-hp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#134: FILE: drivers/pci/setup-hp.c:2:
+ *	drivers/pci/setup-hp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#149: FILE: drivers/pci/setup-hp.c:17:
+# define DBGC(args)     printk args

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#165: FILE: drivers/pci/setup-hp.c:33:
+};
+#define MAX_BUS_RESERVATIONS 4

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after pci_reservations[MAX_BUS_RESERVATIONS]
#166: FILE: drivers/pci/setup-hp.c:34:
+static struct pci_reservation __initdata pci_reservations[MAX_BUS_RESERVATIONS];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#168: FILE: drivers/pci/setup-hp.c:36:
+int __init pci_write_bridge_bases(struct pci_bus* bus)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#172: FILE: drivers/pci/setup-hp.c:40:
+	struct pci_dev* dev = bus->self;

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: drivers/pci/setup-hp.c:43:
+	for(i = 0; i < 3; i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: drivers/pci/setup-hp.c:44:
+		if(pci_resource_len(dev, PCI_BRIDGE_RESOURCES + i)) {

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: drivers/pci/setup-hp.c:46:
+			if(rc) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: drivers/pci/setup-hp.c:47:
+				printk(KERN_ERR "PCI: Could not reassign resource %d of bus %02x\n",

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#190: FILE: drivers/pci/setup-hp.c:58:
+static int __init pci_reassign_resources(struct pci_dev* dev)

ERROR:SPACING: space required before the open parenthesis '('
#196: FILE: drivers/pci/setup-hp.c:64:
+	if(dev->hdr_type & PCI_HEADER_TYPE_BRIDGE) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#197: FILE: drivers/pci/setup-hp.c:65:
+		struct pci_bus* bus = dev->subordinate;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#198: FILE: drivers/pci/setup-hp.c:66:
+		struct list_head* ln;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#199: FILE: drivers/pci/setup-hp.c:67:
+		struct resource* r;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#200: FILE: drivers/pci/setup-hp.c:68:
+		struct resource* dr;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#201: FILE: drivers/pci/setup-hp.c:69:
+		struct resource* parent;

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: drivers/pci/setup-hp.c:72:
+		for(i = 0; i < 3; i++) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#207: FILE: drivers/pci/setup-hp.c:75:
+			      __FUNCTION__, PCI_BRIDGE_RESOURCES + i, dr->start, dr->end));

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: drivers/pci/setup-hp.c:78:
+			if(r && dr->start < dr->end) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: drivers/pci/setup-hp.c:81:
+				      __FUNCTION__, i, parent->start, parent->end));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#215: FILE: drivers/pci/setup-hp.c:83:
+				      __FUNCTION__, i, r->start, r->end));

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: drivers/pci/setup-hp.c:85:
+				if(size) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/pci/setup-hp.c:89:
+					DBGC(("%s - resource %d new start=0x%08lx, end=0x%08lx\n",
+					       __FUNCTION__, i, r->start, r->end));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#221: FILE: drivers/pci/setup-hp.c:89:
+					       __FUNCTION__, i, r->start, r->end));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#224: FILE: drivers/pci/setup-hp.c:92:
+			}
+			else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#224: FILE: drivers/pci/setup-hp.c:92:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#225: FILE: drivers/pci/setup-hp.c:93:
+				dr->start = dr->end = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/pci/setup-hp.c:99:
+		if(rc) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#232: FILE: drivers/pci/setup-hp.c:100:
+			printk(KERN_ERR "PCI: Could not write bus %02x bases\n",

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: drivers/pci/setup-hp.c:107:
+			if(rc) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#239: FILE: drivers/pci/setup-hp.c:107:
+			if(rc) {
+				return rc;
+			}

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: drivers/pci/setup-hp.c:113:
+	for(i = 0; i < 6; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#246: FILE: drivers/pci/setup-hp.c:114:
+		if(!pci_resource_start(dev, i))

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: drivers/pci/setup-hp.c:117:
+		if(rc) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#250: FILE: drivers/pci/setup-hp.c:118:
+			printk(KERN_ERR "PCI: Could not reassign resource %d of device %02x:%02x\n",

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#261: FILE: drivers/pci/setup-hp.c:129:
+	struct pci_bus* bus;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#262: FILE: drivers/pci/setup-hp.c:130:
+	struct pci_dev* dev;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#263: FILE: drivers/pci/setup-hp.c:131:
+	struct resource* r;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#264: FILE: drivers/pci/setup-hp.c:132:
+	struct list_head* ln;

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#267: FILE: drivers/pci/setup-hp.c:135:
+	unsigned long flags[3] = \

ERROR:SPACING: space required before the open parenthesis '('
#270: FILE: drivers/pci/setup-hp.c:138:
+	for(i = 0; i < MAX_BUS_RESERVATIONS && pci_reservations[i].used; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: drivers/pci/setup-hp.c:140:
+		if(!dev) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#273: FILE: drivers/pci/setup-hp.c:141:
+			printk(KERN_ERR "PCI: Device %02x:%02x.%x does not exist\n",

ERROR:SPACING: space required before the open parenthesis '('
#280: FILE: drivers/pci/setup-hp.c:148:
+		if(!bus) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#281: FILE: drivers/pci/setup-hp.c:149:
+			printk(KERN_ERR "PCI: Device %02x:%02x.%x is not a bridge\n",

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: drivers/pci/setup-hp.c:156:
+		for(j = 0; j < 3; j++) {

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: drivers/pci/setup-hp.c:157:
+			if(!pci_reservations[i].reserve[j])

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: drivers/pci/setup-hp.c:161:
+			if(r->end - r->start > size) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#294: FILE: drivers/pci/setup-hp.c:162:
+				printk(KERN_WARNING \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#294: FILE: drivers/pci/setup-hp.c:162:
+				printk(KERN_WARNING \

ERROR:SPACING: space required before the open parenthesis '('
#306: FILE: drivers/pci/setup-hp.c:174:
+			if(!r->name) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#306: FILE: drivers/pci/setup-hp.c:174:
+			if(!r->name) {
+				r->name = bus->name;
+			}

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#311: FILE: drivers/pci/setup-hp.c:179:
+			      __FUNCTION__ , j, r->start, r->end));
 			                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#311: FILE: drivers/pci/setup-hp.c:179:
+			      __FUNCTION__ , j, r->start, r->end));

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: drivers/pci/setup-hp.c:182:
+		if(pci_write_bridge_bases(bus)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#315: FILE: drivers/pci/setup-hp.c:183:
+			printk(KERN_ERR "PCI: Could not write bridge %02x:%02x.%x bases\n",

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#328: FILE: drivers/pci/setup-hp.c:196:
+static int __init pci_hp_reserve_setup(char* str)

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#333: FILE: drivers/pci/setup-hp.c:201:
+	unsigned long limits[3] = \

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#335: FILE: drivers/pci/setup-hp.c:203:
+	char* p;

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: drivers/pci/setup-hp.c:205:
+	for(r = 0; r < MAX_BUS_RESERVATIONS && pci_reservations[r].used; r++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#337: FILE: drivers/pci/setup-hp.c:205:
+	for(r = 0; r < MAX_BUS_RESERVATIONS && pci_reservations[r].used; r++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#338: FILE: drivers/pci/setup-hp.c:206:
+	if(r == MAX_BUS_RESERVATIONS) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#339: FILE: drivers/pci/setup-hp.c:207:
+		printk(KERN_ERR "PCI: Ignoring resource reservation, only %d allowed\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#344: FILE: drivers/pci/setup-hp.c:212:
+	if (!(*str && (p = strchr(str, ','))))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#346: FILE: drivers/pci/setup-hp.c:214:
+	busnr = simple_strtoul(str, &p, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: drivers/pci/setup-hp.c:215:
+	if(p == str || busnr > 0xff) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#348: FILE: drivers/pci/setup-hp.c:216:
+		printk(KERN_ERR "PCI: Invalid reservation device bus number\n");

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: drivers/pci/setup-hp.c:219:
+	if(*p != ':') {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#352: FILE: drivers/pci/setup-hp.c:220:
+		printk(KERN_ERR "PCI: Invalid reservation device name\n");

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#356: FILE: drivers/pci/setup-hp.c:224:
+	slot = simple_strtoul(str, &p, 16);

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: drivers/pci/setup-hp.c:225:
+	if(p == str || (busnr && slot) || slot > 0x1f) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#358: FILE: drivers/pci/setup-hp.c:226:
+		printk(KERN_ERR "PCI: Invalid reservation device slot number\n");

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: drivers/pci/setup-hp.c:231:
+	for(i = 0; i < 3; i++) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#366: FILE: drivers/pci/setup-hp.c:234:
+		n = simple_strtoul(str, &p, 10);

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: drivers/pci/setup-hp.c:235:
+		if(n > limits[i]) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#368: FILE: drivers/pci/setup-hp.c:236:
+			printk(KERN_ERR "PCI: Invalid reservation resource size\n");

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: drivers/pci/setup-hp.c:244:
+	for(i = 0; i < 3 && !pci_reservations[r].reserve[i]; i++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#376: FILE: drivers/pci/setup-hp.c:244:
+	for(i = 0; i < 3 && !pci_reservations[r].reserve[i]; i++);

ERROR:SPACING: space required before the open parenthesis '('
#377: FILE: drivers/pci/setup-hp.c:245:
+	if(i == 3) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#378: FILE: drivers/pci/setup-hp.c:246:
+		printk(KERN_ERR "PCI: Ignoring empty reservation\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#387: FILE: drivers/pci/setup-hp.c:255:
+__setup("pci_hp_reserve=", pci_hp_reserve_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441423.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 32 warnings, 5 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441423.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
