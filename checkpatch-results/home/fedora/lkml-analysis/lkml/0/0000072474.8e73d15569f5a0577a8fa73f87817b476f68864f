WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'quiessent' may be misspelled - perhaps 'quiescent'?
#93: FILE: Documentation/md.txt:234:
+         Writing this, if accepted, will block until array is quiessent
                                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'quiessent' may be misspelled - perhaps 'quiescent'?
#140: FILE: drivers/md/md.c:2200:
+ *     Writing this, if accepted, will block until array is quiessent
                                                             ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: drivers/md/md.c:2233:
+	int n;
+	for (n=0; list[n]; n++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#173: FILE: drivers/md/md.c:2233:
+	for (n=0; list[n]; n++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: drivers/md/md.c:2245:
+		switch(mddev->ro) {

CHECK:BRACES: Unbalanced braces around else statement
#200: FILE: drivers/md/md.c:2260:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: drivers/md/md.c:2271:
+static int do_md_stop(mddev_t * mddev, int ro);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: drivers/md/md.c:2272:
+static int do_md_run(mddev_t * mddev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/md/md.c:2280:
+	enum array_state st = match_word(buf, array_states);
+	switch(st) {

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: drivers/md/md.c:2280:
+	switch(st) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#242: FILE: drivers/md/md.c:2302:
+		if (mddev->pers)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#244: FILE: drivers/md/md.c:2304:
+		else {

CHECK:CAMELCASE: Avoid CamelCase: <MaxSector>
#271: FILE: drivers/md/md.c:2331:
+			mddev->recovery_cp = MaxSector;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#296: FILE: drivers/md/md.c:2356:
+static struct md_sysfs_entry md_array_state = __ATTR(array_state, 0644, array_state_show, array_state_store);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#296: FILE: drivers/md/md.c:2356:
+}
+static struct md_sysfs_entry md_array_state = __ATTR(array_state, 0644, array_state_show, array_state_store);

CHECK:BRACES: Unbalanced braces around else statement
#316: FILE: drivers/md/md.c:3093:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: drivers/md/md.c:3131:
+static int do_md_stop(mddev_t * mddev, int mode)

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: drivers/md/md.c:3153:
+		switch(mode) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072474.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 7 warnings, 6 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000072474.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
