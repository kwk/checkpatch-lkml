WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#32: FILE: include/linux/slist.h:1:
+#ifdef __KERNEL__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#36: FILE: include/linux/slist.h:5:
+#include <asm/processor.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_new' - possible side-effects?
#56: FILE: include/linux/slist.h:25:
+#define slist_add_front(_new, _head)		\
+do {						\
+	(_new)->next = (_head);			\
+	(_head) = (_new);			\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_head' - possible side-effects?
#56: FILE: include/linux/slist.h:25:
+#define slist_add_front(_new, _head)		\
+do {						\
+	(_new)->next = (_head);			\
+	(_head) = (_new);			\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#62: FILE: include/linux/slist.h:31:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_new' - possible side-effects?
#75: FILE: include/linux/slist.h:44:
+#define slist_add(_new, _head)			\
+do {						\
+	(_new)->next = (_head)->next;		\
+	(_head)->next = (_new);			\
+	(_new) = (_head);			\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_head' - possible side-effects?
#75: FILE: include/linux/slist.h:44:
+#define slist_add(_new, _head)			\
+do {						\
+	(_new)->next = (_head)->next;		\
+	(_head)->next = (_new);			\
+	(_new) = (_head);			\
+} while (0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: include/linux/slist.h:56:
+#define slist_del(_head, _entry)		\
+do {						\
+	(_head)->next = (_entry)->next;		\
+	(_entry)->next = NULL;			\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_entry' - possible side-effects?
#87: FILE: include/linux/slist.h:56:
+#define slist_del(_head, _entry)		\
+do {						\
+	(_head)->next = (_entry)->next;		\
+	(_entry)->next = NULL;			\
+}

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#97: FILE: include/linux/slist.h:66:
+#define slist_del_single(_list)			\
+	(_list)->next = NULL

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_list' - possible side-effects?
#106: FILE: include/linux/slist.h:75:
+#define slist_pop(_list) ({			\
+	typeof(_list) _NODE_ = _list;		\
+	if (_list) {				\
+	    (_list) = (_list)->next;		\
+	    _NODE_->next = NULL;		\
+	}					\
+	_NODE_; })

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#108: FILE: include/linux/slist.h:77:
+	if (_list) {				\
+	    (_list) = (_list)->next;		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#119: FILE: include/linux/slist.h:88:
+#define slist_for_each(pos, head)				\
+	for (pos = head; pos && ({ prefetch(pos->next); 1; });	\
+	    pos = pos->next)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#128: FILE: include/linux/slist.h:97:
+#define slist_for_each_del(pos, head)			\
+	for (pos = slist_pop(head); pos &&		\
+    	    ({ prefetch(pos->next); 1; });		\
+	    pos = slist_pop(head))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#128: FILE: include/linux/slist.h:97:
+#define slist_for_each_del(pos, head)			\
+	for (pos = slist_pop(head); pos &&		\
+    	    ({ prefetch(pos->next); 1; });		\
+	    pos = slist_pop(head))

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: include/linux/slist.h:99:
+    ^I    ({ prefetch(pos->next); 1; });^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: include/linux/slist.h:99:
+    ^I    ({ prefetch(pos->next); 1; });^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: include/linux/slist.h:99:
+    ^I    ({ prefetch(pos->next); 1; });^I^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 10 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
