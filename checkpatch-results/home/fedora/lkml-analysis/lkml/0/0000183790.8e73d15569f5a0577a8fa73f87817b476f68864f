CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#37: 
From: Dirk Herrendörfer <herrend@de.ibm.com>
                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: Documentation/bpa/libspu/Makefile:2:
+#* libbpathread - A wrapper library to adapt the JSRE SPU usage model to SPUFS $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: Documentation/bpa/libspu/Makefile:3:
+#* Copyright (C) 2005 IBM Corp. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#48: FILE: Documentation/bpa/libspu/Makefile:6:
+#* under the terms of the GNU Lesser General Public License as published by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: Documentation/bpa/libspu/Makefile:7:
+#* the Free Software Foundation; either version 2.1 of the License, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: Documentation/bpa/libspu/Makefile:10:
+#*  This library is distributed in the hope that it will be useful, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: Documentation/bpa/libspu/Makefile:11:
+#*  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: Documentation/bpa/libspu/Makefile:12:
+#*  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: Documentation/bpa/libspu/Makefile:15:
+#*   You should have received a copy of the GNU Lesser General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: Documentation/bpa/libspu/Makefile:16:
+#*   along with this library; if not, write to the Free Software Foundation, $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: Documentation/bpa/libspu/Makefile:16:
+#*   along with this library; if not, write to the Free Software Foundation, $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: Documentation/bpa/libspu/Makefile:17:
+#*   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: Documentation/bpa/libspu/Makefile:33:
+tests: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: Documentation/bpa/libspu/Makefile:39:
+clean: $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: Documentation/bpa/libspu/bpathread.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#112: FILE: Documentation/bpa/libspu/bpathread.c:16:
+ *   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#113: FILE: Documentation/bpa/libspu/bpathread.c:17:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: Documentation/bpa/libspu/bpathread.c:38:
+#define __PRINTF(fmt, args...) { fprintf(stderr,fmt , ## args); }
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#134: FILE: Documentation/bpa/libspu/bpathread.c:38:
+#define __PRINTF(fmt, args...) { fprintf(stderr,fmt , ## args); }
                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#136: FILE: Documentation/bpa/libspu/bpathread.c:40:
+#define DEBUG_PRINTF(fmt, args...) __PRINTF(fmt , ## args)
                                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: Documentation/bpa/libspu/bpathread.c:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#142: FILE: Documentation/bpa/libspu/bpathread.c:46:
+int thread_num = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#147: FILE: Documentation/bpa/libspu/bpathread.c:51:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#150: FILE: Documentation/bpa/libspu/bpathread.c:54:
+struct thread_start_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#156: FILE: Documentation/bpa/libspu/bpathread.c:60:
+struct thread_store
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: Documentation/bpa/libspu/bpathread.c:86:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: Documentation/bpa/libspu/bpathread.c:90:
+spe_create_thread (int gid, void *start, void *argp, void *envp, int mask,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: Documentation/bpa/libspu/bpathread.c:101:
+	struct spe_exec_params spe_params __attribute__ ((aligned (4096)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4096) over __attribute__((aligned(4096)))
#197: FILE: Documentation/bpa/libspu/bpathread.c:101:
+	struct spe_exec_params spe_params __attribute__ ((aligned (4096)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: Documentation/bpa/libspu/bpathread.c:103:
+	DEBUG_PRINTF ("spe_create_thread(0x%x, %p, %p, %p, 0x%x, 0x%x)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spe_create_thread', this function's name, in a string
#199: FILE: Documentation/bpa/libspu/bpathread.c:103:
+	DEBUG_PRINTF ("spe_create_thread(0x%x, %p, %p, %p, 0x%x, 0x%x)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#202: FILE: Documentation/bpa/libspu/bpathread.c:106:
+	argp64.ull = (unsigned long long) (unsigned long) argp;

CHECK:SPACING: No space is necessary after a cast
#203: FILE: Documentation/bpa/libspu/bpathread.c:107:
+	envp64.ull = (unsigned long long) (unsigned long) envp;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: Documentation/bpa/libspu/bpathread.c:111:
+	sprintf (pathname, "/spu/bpathread-%i-%i", getpid (), thread_num);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: Documentation/bpa/libspu/bpathread.c:111:
+	sprintf (pathname, "/spu/bpathread-%i-%i", getpid (), thread_num);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#209: FILE: Documentation/bpa/libspu/bpathread.c:113:
+	DEBUG_PRINTF ("mkdir %s\n", pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: Documentation/bpa/libspu/bpathread.c:115:
+	rc = mkdir (pathname, S_IRUSR | S_IWUSR | S_IXUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IXUSR' are not preferred. Consider using octal permissions '0700'.
#211: FILE: Documentation/bpa/libspu/bpathread.c:115:
+	rc = mkdir (pathname, S_IRUSR | S_IWUSR | S_IXUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#212: FILE: Documentation/bpa/libspu/bpathread.c:116:
+	if (rc < 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#212: FILE: Documentation/bpa/libspu/bpathread.c:116:
+	if (rc < 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#213: FILE: Documentation/bpa/libspu/bpathread.c:117:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: Documentation/bpa/libspu/bpathread.c:118:
+		  DEBUG_PRINTF ("Could not make dir %s\n", pathname);

WARNING:TABSTOP: Statements should start on a tabstop
#215: FILE: Documentation/bpa/libspu/bpathread.c:119:
+		  return -1;

WARNING:TABSTOP: Statements should start on a tabstop
#216: FILE: Documentation/bpa/libspu/bpathread.c:120:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: Documentation/bpa/libspu/bpathread.c:122:
+	sprintf (memname, "%s/mem", pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: Documentation/bpa/libspu/bpathread.c:126:
+	memfd = open (memname, O_CREAT | O_RDWR, S_IRUSR | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#222: FILE: Documentation/bpa/libspu/bpathread.c:126:
+	memfd = open (memname, O_CREAT | O_RDWR, S_IRUSR | S_IWUSR);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#223: FILE: Documentation/bpa/libspu/bpathread.c:127:
+	if (memfd < 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#223: FILE: Documentation/bpa/libspu/bpathread.c:127:
+	if (memfd < 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#224: FILE: Documentation/bpa/libspu/bpathread.c:128:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: Documentation/bpa/libspu/bpathread.c:129:
+		  DEBUG_PRINTF ("Could not open SPE mem file.\n");

WARNING:TABSTOP: Statements should start on a tabstop
#226: FILE: Documentation/bpa/libspu/bpathread.c:130:
+		  return -1;

WARNING:TABSTOP: Statements should start on a tabstop
#227: FILE: Documentation/bpa/libspu/bpathread.c:131:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: Documentation/bpa/libspu/bpathread.c:135:
+	spe_ld_buf = malloc (LS_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: Documentation/bpa/libspu/bpathread.c:136:
+	thread_info = malloc (sizeof (*thread_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: Documentation/bpa/libspu/bpathread.c:136:
+	thread_info = malloc (sizeof (*thread_info));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#234: FILE: Documentation/bpa/libspu/bpathread.c:138:
+	if (!spe_ld_buf || !thread_info)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#234: FILE: Documentation/bpa/libspu/bpathread.c:138:
+	if (!spe_ld_buf || !thread_info)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#235: FILE: Documentation/bpa/libspu/bpathread.c:139:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: Documentation/bpa/libspu/bpathread.c:140:
+		  DEBUG_PRINTF ("Could not allocate SPE memory. \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#236: FILE: Documentation/bpa/libspu/bpathread.c:140:
+		  DEBUG_PRINTF ("Could not allocate SPE memory. \n");

WARNING:TABSTOP: Statements should start on a tabstop
#238: FILE: Documentation/bpa/libspu/bpathread.c:142:
+		  return -1;

WARNING:TABSTOP: Statements should start on a tabstop
#239: FILE: Documentation/bpa/libspu/bpathread.c:143:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: Documentation/bpa/libspu/bpathread.c:147:
+	rc = load_spe_elf (start, spe_ld_buf, &ld_info);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#244: FILE: Documentation/bpa/libspu/bpathread.c:148:
+	if (rc != 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#244: FILE: Documentation/bpa/libspu/bpathread.c:148:
+	if (rc != 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#245: FILE: Documentation/bpa/libspu/bpathread.c:149:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: Documentation/bpa/libspu/bpathread.c:150:
+		  DEBUG_PRINTF ("Load SPE ELF failed..\n");

WARNING:TABSTOP: Statements should start on a tabstop
#247: FILE: Documentation/bpa/libspu/bpathread.c:151:
+		  return -1;

WARNING:TABSTOP: Statements should start on a tabstop
#248: FILE: Documentation/bpa/libspu/bpathread.c:152:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: Documentation/bpa/libspu/bpathread.c:156:
+	DEBUG_PRINTF ("Add exec prog dst:0x%04x size:0x%04x\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: Documentation/bpa/libspu/bpathread.c:157:
+		      SPE_LDR_START, sizeof (spe_ldr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: Documentation/bpa/libspu/bpathread.c:158:
+	memcpy (spe_ld_buf + SPE_LDR_START, &spe_ldr, sizeof (spe_ldr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#254: FILE: Documentation/bpa/libspu/bpathread.c:158:
+	memcpy (spe_ld_buf + SPE_LDR_START, &spe_ldr, sizeof (spe_ldr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: Documentation/bpa/libspu/bpathread.c:168:
+	DEBUG_PRINTF ("Add exec param dst:0x%04x size:0x%04x\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: Documentation/bpa/libspu/bpathread.c:169:
+		      SPE_PARAM_START, sizeof (spe_params));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: Documentation/bpa/libspu/bpathread.c:170:
+	memcpy (spe_ld_buf + SPE_PARAM_START, &spe_params,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: Documentation/bpa/libspu/bpathread.c:171:
+		sizeof (spe_params));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#270: FILE: Documentation/bpa/libspu/bpathread.c:174:
+	do
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#270: FILE: Documentation/bpa/libspu/bpathread.c:174:
+	do
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#271: FILE: Documentation/bpa/libspu/bpathread.c:175:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: Documentation/bpa/libspu/bpathread.c:176:
+		  num = write (memfd, spe_ld_buf + count, LS_SIZE - count);

WARNING:TABSTOP: Statements should start on a tabstop
#273: FILE: Documentation/bpa/libspu/bpathread.c:177:
+		  if (num == -1)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#273: FILE: Documentation/bpa/libspu/bpathread.c:177:
+		  if (num == -1)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (18, 28)
#273: FILE: Documentation/bpa/libspu/bpathread.c:177:
+		  if (num == -1)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#274: FILE: Documentation/bpa/libspu/bpathread.c:178:
+		    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: Documentation/bpa/libspu/bpathread.c:179:
+			    DEBUG_PRINTF ("Transfer SPE ELF failed..\n");

WARNING:TABSTOP: Statements should start on a tabstop
#276: FILE: Documentation/bpa/libspu/bpathread.c:180:
+			    return -1;

WARNING:TABSTOP: Statements should start on a tabstop
#277: FILE: Documentation/bpa/libspu/bpathread.c:181:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#280: FILE: Documentation/bpa/libspu/bpathread.c:184:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: Documentation/bpa/libspu/bpathread.c:186:
+	close (memfd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: Documentation/bpa/libspu/bpathread.c:189:
+	free (spe_ld_buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: Documentation/bpa/libspu/bpathread.c:191:
+	strcpy (thread_info->pathname, pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: Documentation/bpa/libspu/bpathread.c:196:
+	rc = pthread_create (&thread, NULL, spe_thread, thread_info);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#296: FILE: Documentation/bpa/libspu/bpathread.c:200:
+	while (spe_thread_store[thread_num].state != BPA_THREAD_IDLE)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#296: FILE: Documentation/bpa/libspu/bpathread.c:200:
+	while (spe_thread_store[thread_num].state != BPA_THREAD_IDLE)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#297: FILE: Documentation/bpa/libspu/bpathread.c:201:
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#299: FILE: Documentation/bpa/libspu/bpathread.c:203:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: Documentation/bpa/libspu/bpathread.c:211:
+spe_wait (speid_t speid, int *status, int options)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: Documentation/bpa/libspu/bpathread.c:215:
+	DEBUG_PRINTF ("spu_wait(0x%x, %p, 0x%x)\n", speid, status, options);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: Documentation/bpa/libspu/bpathread.c:217:
+	rc = pthread_join (spe_thread_store[speid].spe_thread,

CHECK:SPACING: No space is necessary after a cast
#314: FILE: Documentation/bpa/libspu/bpathread.c:218:
+			   (void **) status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: Documentation/bpa/libspu/bpathread.c:222:
+	DEBUG_PRINTF ("Thread ended.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: Documentation/bpa/libspu/bpathread.c:227:
+spe_kill (speid_t speid, int sig)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: Documentation/bpa/libspu/bpathread.c:231:
+	rc = pthread_kill (spe_thread_store[speid].spe_thread, sig);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: Documentation/bpa/libspu/bpathread.c:238:
+ * $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#335: FILE: Documentation/bpa/libspu/bpathread.c:239:
+ * */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: Documentation/bpa/libspu/bpathread.c:242:
+spe_thread (void *ptr)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#346: FILE: Documentation/bpa/libspu/bpathread.c:250:
+	struct spufs_run_arg
+	{

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#347: FILE: Documentation/bpa/libspu/bpathread.c:251:
+		unsigned npc;	/* inout: Next Program Counter */
 		             	   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#347: FILE: Documentation/bpa/libspu/bpathread.c:251:
+		unsigned npc;	/* inout: Next Program Counter */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: Documentation/bpa/libspu/bpathread.c:257:
+	DEBUG_PRINTF ("In thread\n");

CHECK:SPACING: No space is necessary after a cast
#355: FILE: Documentation/bpa/libspu/bpathread.c:259:
+	thread_info = (struct thread_start_info *) ptr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: Documentation/bpa/libspu/bpathread.c:262:
+	strcpy (pathname, thread_info->pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: Documentation/bpa/libspu/bpathread.c:264:
+	free (thread_info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: Documentation/bpa/libspu/bpathread.c:266:
+	DEBUG_PRINTF ("thread: %i.\n", num);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: Documentation/bpa/libspu/bpathread.c:267:
+	DEBUG_PRINTF ("pathname: %s.\n", pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: Documentation/bpa/libspu/bpathread.c:269:
+	sprintf (runname, "%s/run", pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#366: FILE: Documentation/bpa/libspu/bpathread.c:270:
+	runfd = open (runname, O_RDONLY);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#367: FILE: Documentation/bpa/libspu/bpathread.c:271:
+	if (runfd < 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#367: FILE: Documentation/bpa/libspu/bpathread.c:271:
+	if (runfd < 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#368: FILE: Documentation/bpa/libspu/bpathread.c:272:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: Documentation/bpa/libspu/bpathread.c:273:
+		  DEBUG_PRINTF ("Could not open SPU run file.\n");

CHECK:SPACING: No space is necessary after a cast
#371: FILE: Documentation/bpa/libspu/bpathread.c:275:
+		  pthread_exit ((void *) spe_thread_store[num].

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: Documentation/bpa/libspu/bpathread.c:275:
+		  pthread_exit ((void *) spe_thread_store[num].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'spe_thread_store[num].thread_return_value'
#372: FILE: Documentation/bpa/libspu/bpathread.c:276:
+		  pthread_exit ((void *) spe_thread_store[num].
+				thread_return_value);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:TABSTOP: Statements should start on a tabstop
#373: FILE: Documentation/bpa/libspu/bpathread.c:277:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: Documentation/bpa/libspu/bpathread.c:279:
+	sprintf (mboxname, "%s/m_box", pathname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: Documentation/bpa/libspu/bpathread.c:280:
+	mboxfd = open (mboxname, O_RDONLY);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#377: FILE: Documentation/bpa/libspu/bpathread.c:281:
+	if (mboxfd < 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#377: FILE: Documentation/bpa/libspu/bpathread.c:281:
+	if (mboxfd < 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#378: FILE: Documentation/bpa/libspu/bpathread.c:282:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: Documentation/bpa/libspu/bpathread.c:283:
+		  DEBUG_PRINTF ("Could not open SPE mailbox file.\n");

CHECK:SPACING: No space is necessary after a cast
#381: FILE: Documentation/bpa/libspu/bpathread.c:285:
+		  pthread_exit ((void *) spe_thread_store[num].

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#381: FILE: Documentation/bpa/libspu/bpathread.c:285:
+		  pthread_exit ((void *) spe_thread_store[num].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'spe_thread_store[num].thread_return_value'
#382: FILE: Documentation/bpa/libspu/bpathread.c:286:
+		  pthread_exit ((void *) spe_thread_store[num].
+				thread_return_value);

WARNING:TABSTOP: Statements should start on a tabstop
#383: FILE: Documentation/bpa/libspu/bpathread.c:287:
+	  }

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#384: FILE: Documentation/bpa/libspu/bpathread.c:288:
+	else
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#384: FILE: Documentation/bpa/libspu/bpathread.c:288:
+	else
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#385: FILE: Documentation/bpa/libspu/bpathread.c:289:
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#387: FILE: Documentation/bpa/libspu/bpathread.c:291:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: Documentation/bpa/libspu/bpathread.c:295:
+	int ret = ioctl (runfd, _IOWR ('s', 0, struct spufs_run_arg), &arg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: Documentation/bpa/libspu/bpathread.c:295:
+	int ret = ioctl (runfd, _IOWR ('s', 0, struct spufs_run_arg), &arg)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#393: FILE: Documentation/bpa/libspu/bpathread.c:297:
+	if (ret < 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#393: FILE: Documentation/bpa/libspu/bpathread.c:297:
+	if (ret < 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#394: FILE: Documentation/bpa/libspu/bpathread.c:298:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#395: FILE: Documentation/bpa/libspu/bpathread.c:299:
+		  DEBUG_PRINTF ("Could not ioctl() on SPE run file.\n");

CHECK:SPACING: No space is necessary after a cast
#397: FILE: Documentation/bpa/libspu/bpathread.c:301:
+		  pthread_exit ((void *) spe_thread_store[num].

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: Documentation/bpa/libspu/bpathread.c:301:
+		  pthread_exit ((void *) spe_thread_store[num].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'spe_thread_store[num].thread_return_value'
#398: FILE: Documentation/bpa/libspu/bpathread.c:302:
+		  pthread_exit ((void *) spe_thread_store[num].
+				thread_return_value);

WARNING:TABSTOP: Statements should start on a tabstop
#399: FILE: Documentation/bpa/libspu/bpathread.c:303:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: Documentation/bpa/libspu/bpathread.c:305:
+	close (runfd);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: Documentation/bpa/libspu/bpathread.c:309:
+	DEBUG_PRINTF ("SPE thread result: %08x:%04x:%04x\n", arg.npc,

CHECK:SPACING: No space is necessary after a cast
#409: FILE: Documentation/bpa/libspu/bpathread.c:313:
+	return ((void *) spe_thread_store[num].thread_return_value);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#414: FILE: Documentation/bpa/libspu/bpathread.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: Documentation/bpa/libspu/bpathread.h:2:
+ * libbpathread - A wrapper library to adapt the JSRE SPU usage model to SPUFS $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: Documentation/bpa/libspu/bpathread.h:3:
+ * Copyright (C) 2005 IBM Corp. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: Documentation/bpa/libspu/bpathread.h:6:
+ * under the terms of the GNU Lesser General Public License as published by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: Documentation/bpa/libspu/bpathread.h:7:
+ * the Free Software Foundation; either version 2.1 of the License, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: Documentation/bpa/libspu/bpathread.h:10:
+ *  This library is distributed in the hope that it will be useful, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: Documentation/bpa/libspu/bpathread.h:11:
+ *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: Documentation/bpa/libspu/bpathread.h:12:
+ *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: Documentation/bpa/libspu/bpathread.h:15:
+ *   You should have received a copy of the GNU Lesser General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: Documentation/bpa/libspu/bpathread.h:16:
+ *   along with this library; if not, write to the Free Software Foundation, $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#429: FILE: Documentation/bpa/libspu/bpathread.h:16:
+ *   along with this library; if not, write to the Free Software Foundation, $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#430: FILE: Documentation/bpa/libspu/bpathread.h:17:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#435: FILE: Documentation/bpa/libspu/bpathread.h:22:
+typedef int speid_t;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: Documentation/bpa/libspu/bpathread.h:27:
+extern speid_t spe_create_thread (int gid, void *start,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#440: FILE: Documentation/bpa/libspu/bpathread.h:27:
+extern speid_t spe_create_thread (int gid, void *start,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#444: FILE: Documentation/bpa/libspu/bpathread.h:31:
+extern int spe_wait (speid_t speid, int *status, int options);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#444: FILE: Documentation/bpa/libspu/bpathread.h:31:
+extern int spe_wait (speid_t speid, int *status, int options);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: Documentation/bpa/libspu/bpathread.h:33:
+extern int spe_kill (speid_t speid, int sig);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#446: FILE: Documentation/bpa/libspu/bpathread.h:33:
+extern int spe_kill (speid_t speid, int sig);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#448: FILE: Documentation/bpa/libspu/bpathread.h:35:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#452: FILE: Documentation/bpa/libspu/bpathread.h:39:
+void *spe_thread (void *ptr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: Documentation/bpa/libspu/bpathread.h:46:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#464: FILE: Documentation/bpa/libspu/elf_loader.c:1:
+/* libbpathread - A wrapper library to adapt the JSRE SPU usage model to SPUFS

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#475: FILE: Documentation/bpa/libspu/elf_loader.c:12:
+ *   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#476: FILE: Documentation/bpa/libspu/elf_loader.c:13:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: Documentation/bpa/libspu/elf_loader.c:29:
+#define __PRINTF(fmt, args...) { fprintf(stderr,fmt , ## args); }
                                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#492: FILE: Documentation/bpa/libspu/elf_loader.c:29:
+#define __PRINTF(fmt, args...) { fprintf(stderr,fmt , ## args); }
                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#494: FILE: Documentation/bpa/libspu/elf_loader.c:31:
+#define DEBUG_PRINTF(fmt, args...) __PRINTF(fmt , ## args)
                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#500: FILE: Documentation/bpa/libspu/elf_loader.c:37:
+load_spe_elf (void *elf_start, void *ld_buffer, struct spe_ld_info *ld_info)

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#502: FILE: Documentation/bpa/libspu/elf_loader.c:39:
+	Elf32_Ehdr *ehdr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#514: FILE: Documentation/bpa/libspu/elf_loader.c:51:
+	Elf32_Phdr *phdr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#518: FILE: Documentation/bpa/libspu/elf_loader.c:55:
+	DEBUG_PRINTF ("load_spe_elf(%p, %p)\n", elf_start, ld_buffer);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'load_spe_elf', this function's name, in a string
#518: FILE: Documentation/bpa/libspu/elf_loader.c:55:
+	DEBUG_PRINTF ("load_spe_elf(%p, %p)\n", elf_start, ld_buffer);

CHECK:SPACING: No space is necessary after a cast
#519: FILE: Documentation/bpa/libspu/elf_loader.c:56:
+	ehdr = (Elf32_Ehdr *) elf_start;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#522: FILE: Documentation/bpa/libspu/elf_loader.c:59:
+	if (memcmp (ehdr->e_ident, expected, EI_PAD) != 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#522: FILE: Documentation/bpa/libspu/elf_loader.c:59:
+	if (memcmp (ehdr->e_ident, expected, EI_PAD) != 0)
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#522: FILE: Documentation/bpa/libspu/elf_loader.c:59:
+	if (memcmp (ehdr->e_ident, expected, EI_PAD) != 0)

WARNING:TABSTOP: Statements should start on a tabstop
#523: FILE: Documentation/bpa/libspu/elf_loader.c:60:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#524: FILE: Documentation/bpa/libspu/elf_loader.c:61:
+		  DEBUG_PRINTF ("invalid ELF header.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#525: FILE: Documentation/bpa/libspu/elf_loader.c:62:
+		  DEBUG_PRINTF ("expected 0x%016llX != 0x%016llX\n",

CHECK:SPACING: No space is necessary after a cast
#526: FILE: Documentation/bpa/libspu/elf_loader.c:63:
+				*(long long *) expected, *(long long *) ehdr);

WARNING:TABSTOP: Statements should start on a tabstop
#528: FILE: Documentation/bpa/libspu/elf_loader.c:65:
+		  return -errno;

WARNING:TABSTOP: Statements should start on a tabstop
#529: FILE: Documentation/bpa/libspu/elf_loader.c:66:
+	  }

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#532: FILE: Documentation/bpa/libspu/elf_loader.c:69:
+	if (ehdr->e_machine != 0x17)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#532: FILE: Documentation/bpa/libspu/elf_loader.c:69:
+	if (ehdr->e_machine != 0x17)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#533: FILE: Documentation/bpa/libspu/elf_loader.c:70:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#534: FILE: Documentation/bpa/libspu/elf_loader.c:71:
+		  DEBUG_PRINTF ("not an SPE ELF object");

WARNING:TABSTOP: Statements should start on a tabstop
#536: FILE: Documentation/bpa/libspu/elf_loader.c:73:
+		  return -errno;

WARNING:TABSTOP: Statements should start on a tabstop
#537: FILE: Documentation/bpa/libspu/elf_loader.c:74:
+	  }

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#540: FILE: Documentation/bpa/libspu/elf_loader.c:77:
+	if (ehdr->e_type != ET_EXEC)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#540: FILE: Documentation/bpa/libspu/elf_loader.c:77:
+	if (ehdr->e_type != ET_EXEC)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#541: FILE: Documentation/bpa/libspu/elf_loader.c:78:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#542: FILE: Documentation/bpa/libspu/elf_loader.c:79:
+		  DEBUG_PRINTF ("invalid SPE ELF type.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#543: FILE: Documentation/bpa/libspu/elf_loader.c:80:
+		  DEBUG_PRINTF ("SPU type %d != %d\n", ehdr->e_type, ET_EXEC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: Documentation/bpa/libspu/elf_loader.c:82:
+		  DEBUG_PRINTF ("parse_spu_elf(): errno=%d.\n", errno);

WARNING:TABSTOP: Statements should start on a tabstop
#546: FILE: Documentation/bpa/libspu/elf_loader.c:83:
+		  return -errno;

WARNING:TABSTOP: Statements should start on a tabstop
#547: FILE: Documentation/bpa/libspu/elf_loader.c:84:
+	  }

CHECK:SPACING: No space is necessary after a cast
#550: FILE: Documentation/bpa/libspu/elf_loader.c:87:
+	phdr = (Elf32_Phdr *) ((char *) ehdr + ehdr->e_phoff);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: Documentation/bpa/libspu/elf_loader.c:92:
+	DEBUG_PRINTF ("Segments: 0x%x\n", ehdr->e_phnum);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#556: FILE: Documentation/bpa/libspu/elf_loader.c:93:
+	for (ph = phdr; ph < &phdr[ehdr->e_phnum]; ++ph)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#556: FILE: Documentation/bpa/libspu/elf_loader.c:93:
+	for (ph = phdr; ph < &phdr[ehdr->e_phnum]; ++ph)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#557: FILE: Documentation/bpa/libspu/elf_loader.c:94:
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#558: FILE: Documentation/bpa/libspu/elf_loader.c:95:
+		  switch (ph->p_type)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#558: FILE: Documentation/bpa/libspu/elf_loader.c:95:
+		  switch (ph->p_type)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#559: FILE: Documentation/bpa/libspu/elf_loader.c:96:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#560: FILE: Documentation/bpa/libspu/elf_loader.c:97:
+		    case PT_LOAD:

WARNING:TABSTOP: Statements should start on a tabstop
#563: FILE: Documentation/bpa/libspu/elf_loader.c:100:
+			    if (ph->p_filesz)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#563: FILE: Documentation/bpa/libspu/elf_loader.c:100:
+			    if (ph->p_filesz)
+			      {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (28, 38)
#563: FILE: Documentation/bpa/libspu/elf_loader.c:100:
+			    if (ph->p_filesz)
+			      {

WARNING:TABSTOP: Statements should start on a tabstop
#564: FILE: Documentation/bpa/libspu/elf_loader.c:101:
+			      {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#573: FILE: Documentation/bpa/libspu/elf_loader.c:110:
+				      memcpy (ld_buffer + ph->p_vaddr,

WARNING:TABSTOP: Statements should start on a tabstop
#576: FILE: Documentation/bpa/libspu/elf_loader.c:113:
+			      }

WARNING:TABSTOP: Statements should start on a tabstop
#577: FILE: Documentation/bpa/libspu/elf_loader.c:114:
+			    break;

WARNING:TABSTOP: Statements should start on a tabstop
#578: FILE: Documentation/bpa/libspu/elf_loader.c:115:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#579: FILE: Documentation/bpa/libspu/elf_loader.c:116:
+	  }

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#580: FILE: Documentation/bpa/libspu/elf_loader.c:117:
+	if (num_load_seg == 0)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#580: FILE: Documentation/bpa/libspu/elf_loader.c:117:
+	if (num_load_seg == 0)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#581: FILE: Documentation/bpa/libspu/elf_loader.c:118:
+	  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#582: FILE: Documentation/bpa/libspu/elf_loader.c:119:
+		  DEBUG_PRINTF ("no segments to load");

WARNING:TABSTOP: Statements should start on a tabstop
#584: FILE: Documentation/bpa/libspu/elf_loader.c:121:
+		  return -errno;

WARNING:TABSTOP: Statements should start on a tabstop
#585: FILE: Documentation/bpa/libspu/elf_loader.c:122:
+	  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#589: FILE: Documentation/bpa/libspu/elf_loader.c:126:
+	DEBUG_PRINTF ("entry = 0x%x\n", ehdr->e_entry);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#593: FILE: Documentation/bpa/libspu/elf_loader.c:130:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#597: FILE: Documentation/bpa/libspu/elf_loader.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#612: FILE: Documentation/bpa/libspu/elf_loader.h:16:
+ *   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#613: FILE: Documentation/bpa/libspu/elf_loader.h:17:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#621: FILE: Documentation/bpa/libspu/elf_loader.h:25:
+typedef union

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#622: FILE: Documentation/bpa/libspu/elf_loader.h:26:
+typedef union
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#628: FILE: Documentation/bpa/libspu/elf_loader.h:32:
+struct spe_ld_info
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#633: FILE: Documentation/bpa/libspu/elf_loader.h:37:
+ * Global API : */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#635: FILE: Documentation/bpa/libspu/elf_loader.h:39:
+int load_spe_elf (void *elf_start, void *ld_buffer,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#640: FILE: Documentation/bpa/libspu/spe_exec.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#655: FILE: Documentation/bpa/libspu/spe_exec.h:16:
+ *   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#656: FILE: Documentation/bpa/libspu/spe_exec.h:17:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#665: FILE: Documentation/bpa/libspu/spe_exec.h:26:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#670: FILE: Documentation/bpa/libspu/spe_exec.h:31:
+ * Holds the (per thread) parameters for the spe program
+*/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#673: FILE: Documentation/bpa/libspu/spe_exec.h:34:
+struct spe_exec_params
+{

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#701: FILE: Documentation/bpa/libspu/test/start-stop/Makefile:16:
+#*   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#702: FILE: Documentation/bpa/libspu/test/start-stop/Makefile:17:
+#*   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#732: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#747: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:16:
+ *   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#748: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:17:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#761: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:30:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:40:
+^Ibinfd = open(bin, O_RDONLY);^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#800: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:69:
+int main(int argc, char* argv[])

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:72:
+	int threadnum,status;
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:73:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:78:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:82:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:83:
+        threadnum = spe_create_thread(0, binary, NULL, NULL, 0, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:83:
+        threadnum = spe_create_thread(0, binary, NULL, NULL, 0, 0);$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#816: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:85:
+	spe_wait(threadnum,&status,0);
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#816: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:85:
+	spe_wait(threadnum,&status,0);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#816: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:85:
+	spe_wait(threadnum,&status,0);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#818: FILE: Documentation/bpa/libspu/test/start-stop/ppe-start-stop.c:87:
+	printf("Thread returned status: %04x\n",status);
 	                                       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#824: FILE: Documentation/bpa/libspu/test/start-stop/spe-start-stop.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#839: FILE: Documentation/bpa/libspu/test/start-stop/spe-start-stop.c:16:
+ *   along with this library; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#840: FILE: Documentation/bpa/libspu/test/start-stop/spe-start-stop.c:17:
+ *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#862: FILE: Documentation/bpa/libspu/tools/elfspe-register:2:
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: Documentation/bpa/libspu/tools/embedspu:1:
+#/bin/sh $

WARNING:TYPO_SPELLING: 'refering' may be misspelled - perhaps 'referring'?
#872: FILE: Documentation/bpa/libspu/tools/embedspu:5:
+# global pointer variable refering to the embedded file.
                           ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 83 errors, 169 warnings, 23 checks, 845 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
