WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
         ntfs_attr_size_bounds_check(), ntfs_attr_can_be_non_resident(), and

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#33: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: fs/ntfs/attrib.c:965:
+static ATTR_DEF *ntfs_attr_find_in_attrdef(const ntfs_volume *vol,
+		const ATTR_TYPE type)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: fs/ntfs/attrib.c:969:
+	BUG_ON(!vol->attrdef);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#96: FILE: fs/ntfs/attrib.c:970:
+	BUG_ON(!type);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#97: FILE: fs/ntfs/attrib.c:971:
+	for (ad = vol->attrdef; (u8*)ad - (u8*)vol->attrdef <

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#97: FILE: fs/ntfs/attrib.c:971:
+	for (ad = vol->attrdef; (u8*)ad - (u8*)vol->attrdef <

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: fs/ntfs/attrib.c:984:
+	ntfs_debug("Attribute type 0x%x not found in $AttrDef.",
+			le32_to_cpu(type));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: fs/ntfs/attrib.c:1001:
+int ntfs_attr_size_bounds_check(const ntfs_volume *vol, const ATTR_TYPE type,
+		const s64 size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#131: FILE: fs/ntfs/attrib.c:1005:
+	BUG_ON(size < 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: fs/ntfs/attrib.c:1018:
+	if (((sle64_to_cpu(ad->min_size) > 0) &&
+			size < sle64_to_cpu(ad->min_size)) ||

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: fs/ntfs/attrib.h:88:
+extern int ntfs_attr_size_bounds_check(const ntfs_volume *vol,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: fs/ntfs/attrib.h:89:
+extern int ntfs_attr_size_bounds_check(const ntfs_volume *vol,
+		const ATTR_TYPE type, const s64 size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: fs/ntfs/attrib.h:90:
+extern int ntfs_attr_can_be_non_resident(const ntfs_volume *vol,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: fs/ntfs/attrib.h:91:
+extern int ntfs_attr_can_be_non_resident(const ntfs_volume *vol,
+		const ATTR_TYPE type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: fs/ntfs/attrib.h:92:
+extern int ntfs_attr_can_be_resident(const ntfs_volume *vol,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: fs/ntfs/attrib.h:93:
+extern int ntfs_attr_can_be_resident(const ntfs_volume *vol,
+		const ATTR_TYPE type);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 10 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
