WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
This patch adds per disk queue functionality to cciss. Sometime back I submitted a patch but it looks like only part of what I needed. In the 2.6 kernel if we have more than one logical volume the driver will Oops during rmmod. It seems all of the queues actually point back to the same queue. So after deleting the first volume you hit a null pointer on the second one.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#62: FILE: drivers/block/cciss.c:2256:
+	for (j=0; j < h->highest_lun + 1; j++){
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#62: FILE: drivers/block/cciss.c:2256:
+	for (j=0; j < h->highest_lun + 1; j++){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: drivers/block/cciss.c:2261:
+^I^Iif(!(h->drv[curr_queue].queue) || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#68: FILE: drivers/block/cciss.c:2261:
+		if(!(h->drv[curr_queue].queue) || 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: drivers/block/cciss.c:2262:
+		if(!(h->drv[curr_queue].queue) || 
 		 		   !(h->drv[curr_queue].heads))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#115: FILE: drivers/block/cciss.c:2822:
+	for(j=0; j < NWD; j++) { /* mfm */
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#115: FILE: drivers/block/cciss.c:2822:
+	for(j=0; j < NWD; j++) { /* mfm */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hba[i]->drv[j]
#116: FILE: drivers/block/cciss.c:2823:
+		drive_info_struct *drv = &(hba[i]->drv[j]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#121: FILE: drivers/block/cciss.c:2828:
+			printk(KERN_ERR

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 2 warnings, 2 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
