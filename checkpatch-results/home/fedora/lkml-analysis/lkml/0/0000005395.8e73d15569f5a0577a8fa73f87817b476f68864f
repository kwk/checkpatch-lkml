WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#115: 
Preliminary version of support for board-specific declaring GPIO controllers,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#157: FILE: include/asm-generic/gpio.h:22:
+	int	(*direction_input)(void *, unsigned offset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#157: FILE: include/asm-generic/gpio.h:22:
+	int	(*direction_input)(void *, unsigned offset);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#158: FILE: include/asm-generic/gpio.h:23:
+	int	(*direction_output)(void *, unsigned offset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#158: FILE: include/asm-generic/gpio.h:23:
+	int	(*direction_output)(void *, unsigned offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#159: FILE: include/asm-generic/gpio.h:24:
+	int	(*get_value)(void *, unsigned offset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#159: FILE: include/asm-generic/gpio.h:24:
+	int	(*get_value)(void *, unsigned offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#160: FILE: include/asm-generic/gpio.h:25:
+	int	(*set_value)(void *, unsigned offset, int value);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#160: FILE: include/asm-generic/gpio.h:25:
+	int	(*set_value)(void *, unsigned offset, int value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: include/asm-generic/gpio.h:28:
+extern int __init gpiolib_define_controller(struct gpio_ops *, void *, int n);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gpio_ops *' should also have an identifier name
#163: FILE: include/asm-generic/gpio.h:28:
+extern int __init gpiolib_define_controller(struct gpio_ops *, void *, int n);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#163: FILE: include/asm-generic/gpio.h:28:
+extern int __init gpiolib_define_controller(struct gpio_ops *, void *, int n);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: include/asm-generic/gpio.h:30:
+extern int gpiolib_request(unsigned gpio, const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/asm-generic/gpio.h:30:
+extern int gpiolib_request(unsigned gpio, const char *name);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#166: FILE: include/asm-generic/gpio.h:31:
+extern void gpiolib_free(unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/asm-generic/gpio.h:31:
+extern void gpiolib_free(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: include/asm-generic/gpio.h:32:
+extern int gpiolib_direction_input(unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: include/asm-generic/gpio.h:32:
+extern int gpiolib_direction_input(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#168: FILE: include/asm-generic/gpio.h:33:
+extern int gpiolib_direction_output(unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/asm-generic/gpio.h:33:
+extern int gpiolib_direction_output(unsigned gpio);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: include/asm-generic/gpio.h:35:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#172: FILE: include/asm-generic/gpio.h:37:
+static inline int gpio_cansleep(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#178: FILE: include/asm-generic/gpio.h:43:
+extern int gpio_get_value_cansleep(unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/asm-generic/gpio.h:43:
+extern int gpio_get_value_cansleep(unsigned gpio);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: include/asm-generic/gpio.h:44:
+extern void gpio_set_value_cansleep(unsigned gpio, int value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/asm-generic/gpio.h:44:
+extern void gpio_set_value_cansleep(unsigned gpio, int value);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#195: FILE: include/asm-generic/gpio.h:73:
+static inline int gpiolib_request(unsigned gpio, const char *name)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: include/asm-generic/gpio.h:78:
+static inline void gpiolib_free(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: include/asm-generic/gpio.h:82:
+static inline int gpiolib_direction_input(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: include/asm-generic/gpio.h:87:
+static inline int gpiolib_direction_output(unsigned gpio)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#249: FILE: lib/gpiolib.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#257: FILE: lib/gpiolib.c:9:
+#include <asm/gpio.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: lib/gpiolib.c:11:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#271: FILE: lib/gpiolib.c:23:
+	unsigned	n;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: lib/gpiolib.c:30:
+static struct gpio *gpionum2gpio(unsigned gpionum)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#292: FILE: lib/gpiolib.c:44:
+int gpiolib_direction_input(unsigned gpionum)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: lib/gpiolib.c:54:
+int gpiolib_direction_output(unsigned gpionum)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: lib/gpiolib.c:64:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#317: FILE: lib/gpiolib.c:69:
+int gpiolib_request(unsigned gpionum, const char *name)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#320: FILE: lib/gpiolib.c:72:
+	unsigned	offset;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#334: FILE: lib/gpiolib.c:86:
+void gpiolib_free(unsigned gpionum)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#337: FILE: lib/gpiolib.c:89:
+	unsigned	offset;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#351: FILE: lib/gpiolib.c:103:
+int gpio_get_value_cansleep(unsigned gpionum)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#365: FILE: lib/gpiolib.c:117:
+void gpio_set_value_cansleep(unsigned gpionum, int value)

WARNING:SIZEOF_PARENTHESIS: sizeof *g should be sizeof(*g)
#399: FILE: lib/gpiolib.c:151:
+	g = kzalloc(sizeof *g, GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 35 warnings, 10 checks, 313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
