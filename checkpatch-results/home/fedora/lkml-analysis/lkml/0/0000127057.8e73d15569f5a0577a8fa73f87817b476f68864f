CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: drivers/s390/cio/chsc.c:417:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: drivers/s390/cio/chsc.c:419:
+s390_process_res_acc (struct res_acc_data *res_data)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: drivers/s390/cio/chsc.c:636:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#404: FILE: drivers/s390/cio/chsc.c:650:
+	for (i=0; i<8; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#404: FILE: drivers/s390/cio/chsc.c:650:
+	for (i=0; i<8; i++)
 	           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#413: FILE: drivers/s390/cio/chsc.c:659:
+	if (i==8) {
 	     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#600: FILE: drivers/s390/cio/cio.c:707:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#661: FILE: drivers/s390/cio/cio.c:848:
+	switch(__disable_subchannel_easy(schid, &schib)) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#719: FILE: drivers/s390/cio/css.c:35:
+for_each_subchannel(int(*fn)(struct subchannel_id, void *), void *data)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#785: FILE: drivers/s390/cio/css.c:392:
+	if (cio_is_console(schid))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#787: FILE: drivers/s390/cio/css.c:394:
+	else {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#874: FILE: drivers/s390/cio/css.h:129:
+extern int for_each_subchannel(int(*fn)(struct subchannel_id, void *), void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#874: FILE: drivers/s390/cio/css.h:129:
+extern int for_each_subchannel(int(*fn)(struct subchannel_id, void *), void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 2 warnings, 6 checks, 793 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000127057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
