WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#181: FILE: arch/ia64/kernel/efi.c:771:
+		printk(KERN_ERR "No EFI %s variable?\n", name);

CHECK:SPACING: No space is necessary after a cast
#185: FILE: arch/ia64/kernel/efi.c:775:
+	hdr = (struct efi_generic_dev_path *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#186: FILE: arch/ia64/kernel/efi.c:776:
+	end_addr = (struct efi_generic_dev_path *) ((u8 *) data + size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: arch/ia64/kernel/efi.c:782:
+		else if (hdr->type == EFI_DEV_END_PATH ||
+			  hdr->type == EFI_DEV_END_PATH2) {

CHECK:SPACING: No space is necessary after a cast
#199: FILE: arch/ia64/kernel/efi.c:789:
+		hdr = (struct efi_generic_dev_path *) ((u8 *) hdr + hdr->length);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#201: FILE: arch/ia64/kernel/efi.c:791:
+	printk(KERN_ERR "Malformed %s value\n", name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: arch/ia64/kernel/setup.c:266:
+setup_serial_legacy (char *cmdline)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#248: FILE: arch/ia64/kernel/setup.c:292:
+		strlcpy(buf, options, sizeof(buf));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#266: FILE: arch/ia64/kernel/setup.c:323:
+		extern void __init setup_hcdp_console(void *, char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#266: FILE: arch/ia64/kernel/setup.c:323:
+		extern void __init setup_hcdp_console(void *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#266: FILE: arch/ia64/kernel/setup.c:323:
+		extern void __init setup_hcdp_console(void *, char *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/serial/8250.c:1964:
+serial8250_write(struct uart_8250_port *up, const char *s, unsigned int count,
+	int timeout)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#553: FILE: drivers/serial/8250.c:2139:
+		baud = simple_strtoul(options, 0, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#560: FILE: drivers/serial/8250.c:2146:
+	printk("Early serial console at %s 0x%lx (options %s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/serial/8250.c:2147:
+	printk("Early serial console at %s 0x%lx (options %s)\n",
+		port->iotype == SERIAL_IO_MEM ? "MMIO" : "I/O port",

CHECK:SPACING: No space is necessary after a cast
#562: FILE: drivers/serial/8250.c:2148:
+		port->iotype == SERIAL_IO_MEM ? (unsigned long) port->mapbase :

CHECK:SPACING: No space is necessary after a cast
#563: FILE: drivers/serial/8250.c:2149:
+		    (unsigned long) port->iobase,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#594: FILE: drivers/serial/8250.c:2180:
+	printk("Starting serial console on ttyS%d at %s 0x%lx (options %s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/serial/8250.c:2181:
+	printk("Starting serial console on ttyS%d at %s 0x%lx (options %s)\n",
+		line,

CHECK:SPACING: No space is necessary after a cast
#597: FILE: drivers/serial/8250.c:2183:
+		port->iotype == SERIAL_IO_MEM ? (unsigned long) port->mapbase :

CHECK:SPACING: No space is necessary after a cast
#598: FILE: drivers/serial/8250.c:2184:
+		(unsigned long) port->iobase,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#616: FILE: drivers/serial/8250.c:2202:
+		printk("No ttyS device at %s 0x%lx for console\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: drivers/serial/8250.c:2203:
+		printk("No ttyS device at %s 0x%lx for console\n",
+			port->iotype == SERIAL_IO_MEM ?  "MMIO" : "I/O port",

CHECK:SPACING: No space is necessary after a cast
#619: FILE: drivers/serial/8250.c:2205:
+			    (unsigned long) port->mapbase :

CHECK:SPACING: No space is necessary after a cast
#620: FILE: drivers/serial/8250.c:2206:
+			    (unsigned long) port->iobase);

CHECK:BRACES: braces {} should be used on all arms of this statement
#723: FILE: drivers/serial/8250_hcdp.c:29:
+	if (uart->addr.address_space_id == ACPI_ADR_SPACE_SYSTEM_MEMORY) {
[...]
+	} else if (uart->addr.address_space_id == ACPI_ADR_SPACE_SYSTEM_IO) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#730: FILE: drivers/serial/8250_hcdp.c:36:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/serial/8250_hcdp.c:40:
+	snprintf(options, sizeof(options), "%lun%d", uart->baud,
+		uart->bits ? uart->bits : 8);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#905: FILE: drivers/serial/8250_hcdp.c:53:
+	printk(KERN_INFO "HCDP: v%d at 0x%p\n", hcdp->rev, hcdp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: include/linux/efi.h:216:
+    EFI_GUID(  0x8be4df61, 0x93ca, 0x11d2, 0xaa, 0x0d, 0x00, 0xe0, 0x98, 0x03, 0x2b, 0x8c )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1053: FILE: include/linux/efi.h:216:
+    EFI_GUID(  0x8be4df61, 0x93ca, 0x11d2, 0xaa, 0x0d, 0x00, 0xe0, 0x98, 0x03, 0x2b, 0x8c )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1053: FILE: include/linux/efi.h:216:
+    EFI_GUID(  0x8be4df61, 0x93ca, 0x11d2, 0xaa, 0x0d, 0x00, 0xe0, 0x98, 0x03, 0x2b, 0x8c )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: include/linux/efi.h:300:
+extern int __init efi_uart_console_only (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1062: FILE: include/linux/efi.h:300:
+extern int __init efi_uart_console_only (void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1112: FILE: include/linux/efi.h:371:
+} __attribute ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1123: FILE: include/linux/serial.h:184:
+extern void serial8250_early_console_setup(struct uart_port *port, char *options);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286631.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 15 warnings, 19 checks, 930 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286631.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
