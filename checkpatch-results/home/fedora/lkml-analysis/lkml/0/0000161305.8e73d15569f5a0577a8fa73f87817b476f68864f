WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
### cut after ###

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: include/linux/capability.h:41:
+        __u32 bounding;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: include/linux/capability.h:41:
+        __u32 bounding;$

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#145: FILE: include/linux/security.h:43:
+extern int cap_capget (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: include/linux/security.h:43:
+extern int cap_capget (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/security.h:43:
+extern int cap_capget (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 158 exceeds 100 columns
#146: FILE: include/linux/security.h:44:
+extern int cap_capset_check (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: include/linux/security.h:44:
+extern int cap_capset_check (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/security.h:44:
+extern int cap_capset_check (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#147: FILE: include/linux/security.h:45:
+extern void cap_capset_set (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#147: FILE: include/linux/security.h:45:
+extern void cap_capset_set (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/security.h:45:
+extern void cap_capset_set (struct task_struct *target, kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted, kernel_cap_t *bounding);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/linux/security.h:1036:
+		       kernel_cap_t * inheritable, kernel_cap_t * permitted,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/linux/security.h:1036:
+		       kernel_cap_t * inheritable, kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#200: FILE: include/linux/security.h:1037:
+		       kernel_cap_t * bounding);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: include/linux/security.h:1041:
+			     kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: include/linux/security.h:1042:
+			     kernel_cap_t * bounding);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: include/linux/security.h:1046:
+			    kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: include/linux/security.h:1047:
+			    kernel_cap_t * bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: include/linux/security.h:1269:
+	return security_ops->capget (target, effective, inheritable, permitted, bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: include/linux/security.h:1278:
+	return security_ops->capset_check (target, effective, inheritable, permitted, bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: include/linux/security.h:1287:
+	security_ops->capset_set (target, effective, inheritable, permitted, bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: include/linux/security.h:2020:
+	return cap_capget (target, effective, inheritable, permitted, bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: include/linux/security.h:2029:
+	return cap_capset_check (target, effective, inheritable, permitted, bounding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: include/linux/security.h:2038:
+	cap_capset_set (target, effective, inheritable, permitted, bounding);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#302: FILE: kernel/capability.c:72:
+     ret = security_capget(target, &data.effective, &data.inheritable, &data.permitted, &data.bounding);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: kernel/capability.c:72:
+     ret = security_capget(target, &data.effective, &data.inheritable, &data.permitted, &data.bounding);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: kernel/capability.c:162:
+     kernel_cap_t inheritable, permitted, effective, bounding;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#376: FILE: kernel/capability.c:206:
              if (pid == -1)  /* all procs other than current and init */
+                     ret = cap_set_all(&effective, &inheritable, &permitted, &bounding);

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: kernel/capability.c:207:
+                     ret = cap_set_all(&effective, &inheritable, &permitted, &bounding);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: kernel/capability.c:207:
+                     ret = cap_set_all(&effective, &inheritable, &permitted, &bounding);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: kernel/capability.c:211:
+^I^I     ^I^I^I^I^I&permitted,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: kernel/capability.c:211:
+^I^I     ^I^I^I^I^I&permitted,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: kernel/capability.c:212:
+^I^I     ^I^I^I^I^I&bounding);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: kernel/capability.c:212:
+^I^I     ^I^I^I^I^I&bounding);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: kernel/capability.c:215:
+^I     ^I^I^I^I^I^I&permitted,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: kernel/capability.c:215:
+^I     ^I^I^I^I^I^I&permitted,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: kernel/capability.c:216:
+^I     ^I^I^I^I^I^I&bounding);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#389: FILE: kernel/capability.c:216:
+^I     ^I^I^I^I^I^I&bounding);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: kernel/capability.c:219:
+^I^I     ^I^I^I^I^I&permitted,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: kernel/capability.c:219:
+^I^I     ^I^I^I^I^I&permitted,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: kernel/capability.c:220:
+^I^I     ^I^I^I^I^I&bounding);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#394: FILE: kernel/capability.c:220:
+^I^I     ^I^I^I^I^I&bounding);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#431: FILE: security/commoncap.c:102:
+	if (!cap_issubset (*inheritable, *permitted)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#431: FILE: security/commoncap.c:102:
+	if (!cap_issubset (*inheritable, *permitted)) {
+		return -EPERM;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#441: FILE: security/commoncap.c:112:
+	if (!cap_issubset (*bounding, target->cap_bounding)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#441: FILE: security/commoncap.c:112:
+	if (!cap_issubset (*bounding, target->cap_bounding)) {
+		return -EPERM;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: security/commoncap.c:117:
+	if (!cap_issubset (*inheritable, *bounding)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#446: FILE: security/commoncap.c:117:
+	if (!cap_issubset (*inheritable, *bounding)) {
+		return -EPERM;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#474: FILE: security/commoncap.c:141:
+	bprm->cap_effective = cap_intersect (current->cap_inheritable, current->cap_effective);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: security/commoncap.c:170:
+	    !cap_issubset (new_permitted, current->cap_permitted) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#518: FILE: security/commoncap.c:171:
+	    !cap_issubset (new_inheritable, current->cap_inheritable)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#526: FILE: security/commoncap.c:182:
+				new_inheritable = cap_intersect (new_inheritable,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: security/commoncap.c:183:
+				new_inheritable = cap_intersect (new_inheritable,
+							current->cap_inheritable);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: security/commoncap.c:193:
+	current->cap_effective = cap_intersect (new_permitted, bprm->cap_effective);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: security/commoncap.c:269:
+		cap_clear (current->cap_inheritable);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: security/dummy.c:38:
+			 kernel_cap_t * inheritable, kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: security/dummy.c:38:
+			 kernel_cap_t * inheritable, kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#566: FILE: security/dummy.c:39:
+			 kernel_cap_t * bounding)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#590: FILE: security/dummy.c:61:
+			       kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#591: FILE: security/dummy.c:62:
+			       kernel_cap_t * bounding)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#600: FILE: security/dummy.c:70:
+			      kernel_cap_t * permitted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#601: FILE: security/dummy.c:71:
+			      kernel_cap_t * bounding)

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#610: FILE: security/dummy.c:150:
+	dummy_capget(current, &current->cap_effective, &current->cap_inheritable, &current->cap_permitted, &current->cap_bounding);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#619: FILE: security/dummy.c:518:
+	dummy_capget(current, &current->cap_effective, &current->cap_inheritable, &current->cap_permitted, &current->cap_bounding);

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: security/selinux/hooks.c:1365:
+                          kernel_cap_t *inheritable, kernel_cap_t *permitted,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: security/selinux/hooks.c:1365:
+                          kernel_cap_t *inheritable, kernel_cap_t *permitted,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: security/selinux/hooks.c:1378:
+                                kernel_cap_t *inheritable, kernel_cap_t *permitted,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: security/selinux/hooks.c:1378:
+                                kernel_cap_t *inheritable, kernel_cap_t *permitted,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: security/selinux/hooks.c:1391:
+                               kernel_cap_t *inheritable, kernel_cap_t *permitted,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: security/selinux/hooks.c:1391:
+                               kernel_cap_t *inheritable, kernel_cap_t *permitted,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161305.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 42 warnings, 4 checks, 550 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161305.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
