WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
> I propose to develop a common way of registering and accessing GPIO pins on 

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#140: FILE: arm/mach-pxa/pxa27x_gpio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:MISPLACED_INIT: __initdata should be placed after mapping[255]
#169: FILE: arm/mach-pxa/pxa27x_gpio.c:30:
+static char __initdata mapping[255] = "";

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arm/mach-pxa/pxa27x_gpio.c:37:
+MODULE_PARM_DESC(mapping,
+"period delimited options string to map GPIO pins to userland:\n"

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: arm/mach-pxa/pxa27x_gpio.c:57:
+^Ispinlock_t lock; ^I^I/* protects the props field */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#201: FILE: arm/mach-pxa/pxa27x_gpio.c:62:
+};
+#define to_gpio_device(d) container_of(d, struct gpio_device, class_dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#210: FILE: arm/mach-pxa/pxa27x_gpio.c:71:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: arm/mach-pxa/pxa27x_gpio.c:78:
+
+

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#233: FILE: arm/mach-pxa/pxa27x_gpio.c:94:
+ * Called when a read from /sys/class/gpio/gpioX/level occures
                                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#257: FILE: arm/mach-pxa/pxa27x_gpio.c:118:
+ * Called when a write to /sys/class/gpio/gpioX/level occures
                                                       ^^^^^^^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#270: FILE: arm/mach-pxa/pxa27x_gpio.c:131:
+	value = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#277: FILE: arm/mach-pxa/pxa27x_gpio.c:138:
+	switch (value) {
+		case 0:  gpio_clear_pin(gpio_dev->props.pin_nr);
[...]
+		case 1:  gpio_set_pin(gpio_dev->props.pin_nr);
[...]
+		default: break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#278: FILE: arm/mach-pxa/pxa27x_gpio.c:139:
+		case 0:  gpio_clear_pin(gpio_dev->props.pin_nr);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TABSTOP: Statements should start on a tabstop
#280: FILE: arm/mach-pxa/pxa27x_gpio.c:141:
+			 break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#281: FILE: arm/mach-pxa/pxa27x_gpio.c:142:
+		case 1:  gpio_set_pin(gpio_dev->props.pin_nr);

WARNING:TABSTOP: Statements should start on a tabstop
#283: FILE: arm/mach-pxa/pxa27x_gpio.c:144:
+			 break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: arm/mach-pxa/pxa27x_gpio.c:145:
+		default: break;

WARNING:TYPO_SPELLING: 'occures' may be misspelled - perhaps 'occurs'?
#304: FILE: arm/mach-pxa/pxa27x_gpio.c:165:
+ * Called when a read from /sys/class/gpio/gpioX/policy occures
                                                         ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: arm/mach-pxa/pxa27x_gpio.c:175:
+		ret_size += sprintf(buf,"userspace\n");
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#316: FILE: arm/mach-pxa/pxa27x_gpio.c:177:
+		ret_size += sprintf(buf,"kernel\n");
 		                       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: arm/mach-pxa/pxa27x_gpio.c:244:
+ * ^I^I- GPIO_USER or GPIO_KERNEL$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: arm/mach-pxa/pxa27x_gpio.c:245:
+ * ^I^I- GPIO_INPUT or GPIO_OUTPUT$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#385: FILE: arm/mach-pxa/pxa27x_gpio.c:246:
+ * ^I^IFor user space registered pins a sysfs entry is added.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#399: FILE: arm/mach-pxa/pxa27x_gpio.c:260:
+			printk(KERN_ERR "gpio pin %i is already used by %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: arm/mach-pxa/pxa27x_gpio.c:261:
+			printk(KERN_ERR "gpio pin %i is already used by %s\n",
+				pin_nr, gpio_dev->props.owner);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*gpio_dev)...) over kmalloc(sizeof(struct gpio_device)...)
#406: FILE: arm/mach-pxa/pxa27x_gpio.c:267:
+	gpio_dev = kmalloc(sizeof(struct gpio_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#409: FILE: arm/mach-pxa/pxa27x_gpio.c:270:
+		printk(KERN_ERR "%s: couldn't allocate memory\n", DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#432: FILE: arm/mach-pxa/pxa27x_gpio.c:293:
+		printk(KERN_ERR "%s: class registering failed\n", DRIVER_NAME);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#439: FILE: arm/mach-pxa/pxa27x_gpio.c:300:
+		class_device_create_file(&gpio_dev->class_dev,&attr_gpio_level);
 		                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#439: FILE: arm/mach-pxa/pxa27x_gpio.c:300:
+		class_device_create_file(&gpio_dev->class_dev,&attr_gpio_level);
 		                                              ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#447: FILE: arm/mach-pxa/pxa27x_gpio.c:308:
+		switch (init_level) {
+			case 0: gpio_clear_pin(pin_nr); break;
+			case 1: gpio_set_pin(pin_nr); break;
+			default: break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#448: FILE: arm/mach-pxa/pxa27x_gpio.c:309:
+			case 0: gpio_clear_pin(pin_nr); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#449: FILE: arm/mach-pxa/pxa27x_gpio.c:310:
+			case 1: gpio_set_pin(pin_nr); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#450: FILE: arm/mach-pxa/pxa27x_gpio.c:311:
+			default: break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#460: FILE: arm/mach-pxa/pxa27x_gpio.c:321:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#477: FILE: arm/mach-pxa/pxa27x_gpio.c:338:
+			printk(KERN_INFO "unregistering gpio pin %i\n", pin_nr);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#480: FILE: arm/mach-pxa/pxa27x_gpio.c:341:
+				class_device_remove_file(&gpio_dev->class_dev,&attr_gpio_level);
 				                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#480: FILE: arm/mach-pxa/pxa27x_gpio.c:341:
+				class_device_remove_file(&gpio_dev->class_dev,&attr_gpio_level);
 				                                              ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#490: FILE: arm/mach-pxa/pxa27x_gpio.c:351:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#493: FILE: arm/mach-pxa/pxa27x_gpio.c:354:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#503: FILE: arm/mach-pxa/pxa27x_gpio.c:364:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Opt_in>
#505: FILE: arm/mach-pxa/pxa27x_gpio.c:366:
+	Opt_in,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_out_high>
#506: FILE: arm/mach-pxa/pxa27x_gpio.c:367:
+	Opt_out_high,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_out_low>
#507: FILE: arm/mach-pxa/pxa27x_gpio.c:368:
+	Opt_out_low,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#508: FILE: arm/mach-pxa/pxa27x_gpio.c:369:
+	Opt_err,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#511: FILE: arm/mach-pxa/pxa27x_gpio.c:372:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#513: FILE: arm/mach-pxa/pxa27x_gpio.c:374:
+static match_table_t tokens =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#515: FILE: arm/mach-pxa/pxa27x_gpio.c:376:
+	{Opt_out_high,"%u:out:hi"},
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: arm/mach-pxa/pxa27x_gpio.c:377:
+	{Opt_out_low,"%u:out:lo"},
 	            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#520: FILE: arm/mach-pxa/pxa27x_gpio.c:381:
+
+

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#532: FILE: arm/mach-pxa/pxa27x_gpio.c:393:
+ * Returns 0 on success, -EINVAL if it cant parse the string or
                                        ^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#545: FILE: arm/mach-pxa/pxa27x_gpio.c:406:
+	next_string=s;
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#551: FILE: arm/mach-pxa/pxa27x_gpio.c:412:
+		while((*next_string != '\0') && (*next_string != '.'))

ERROR:SPACING: space required before the open parenthesis '('
#564: FILE: arm/mach-pxa/pxa27x_gpio.c:425:
+		switch(token) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#566: FILE: arm/mach-pxa/pxa27x_gpio.c:427:
+		/*
+		* global fallthrough

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#566: FILE: arm/mach-pxa/pxa27x_gpio.c:427:
+		* global fallthrough

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#574: FILE: arm/mach-pxa/pxa27x_gpio.c:435:
+			pin_nr = simple_strtoull(pin_nr_str, &pin_nr_str, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#577: FILE: arm/mach-pxa/pxa27x_gpio.c:438:
+			printk(KERN_ERR "%s: Unrecognized option \"%s\"\n", DRIVER_NAME, s);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#584: FILE: arm/mach-pxa/pxa27x_gpio.c:445:
+			printk(KERN_ERR "%s: could not register GPIO pins!\n",DRIVER_NAME);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: arm/mach-pxa/pxa27x_gpio.c:445:
+			printk(KERN_ERR "%s: could not register GPIO pins!\n",DRIVER_NAME);
 			                                                     ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#590: FILE: arm/mach-pxa/pxa27x_gpio.c:451:
+			break;
+		else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#591: FILE: arm/mach-pxa/pxa27x_gpio.c:452:
+			s=next_string;	/* ... one more */
 			 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#597: FILE: arm/mach-pxa/pxa27x_gpio.c:458:
+
+

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#601: FILE: arm/mach-pxa/pxa27x_gpio.c:462:
+ * @buf: recieved string
          ^^^^^^^^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#618: FILE: arm/mach-pxa/pxa27x_gpio.c:479:
+	tmp = (char *)kmalloc(count, GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#633: FILE: arm/mach-pxa/pxa27x_gpio.c:494:
+
+

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#637: FILE: arm/mach-pxa/pxa27x_gpio.c:498:
+ * @buf: recieved string
          ^^^^^^^^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#649: FILE: arm/mach-pxa/pxa27x_gpio.c:510:
+	pin_nr = (int)simple_strtol(buf, &end, 10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#659: FILE: arm/mach-pxa/pxa27x_gpio.c:520:
+			printk(KERN_INFO "unregistering gpio pin %i\n", pin_nr);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#661: FILE: arm/mach-pxa/pxa27x_gpio.c:522:
+			if (! (gpio_dev->props.policy & GPIO_USER))
 			    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#663: FILE: arm/mach-pxa/pxa27x_gpio.c:524:
+			class_device_remove_file(&gpio_dev->class_dev,&attr_gpio_level);
 			                                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#663: FILE: arm/mach-pxa/pxa27x_gpio.c:524:
+			class_device_remove_file(&gpio_dev->class_dev,&attr_gpio_level);
 			                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#673: FILE: arm/mach-pxa/pxa27x_gpio.c:534:
+	printk(KERN_ERR "could not unregister gpio pin %i\n", pin_nr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#680: FILE: arm/mach-pxa/pxa27x_gpio.c:541:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#685: FILE: arm/mach-pxa/pxa27x_gpio.c:546:
+	printk(KERN_INFO "Initialising gpio device class.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#689: FILE: arm/mach-pxa/pxa27x_gpio.c:550:
+		printk(KERN_ERR "%s: couldn't register class, exiting\n", DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#695: FILE: arm/mach-pxa/pxa27x_gpio.c:556:
+		printk(KERN_ERR "%s: couldn't register sysdev class, exiting\n", DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#701: FILE: arm/mach-pxa/pxa27x_gpio.c:562:
+		printk(KERN_ERR "%s: couldn't register sysdev, exiting\n", DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#707: FILE: arm/mach-pxa/pxa27x_gpio.c:568:
+		printk(KERN_ERR "%s: couldn't register class attribute, exiting\n", DRIVER_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#713: FILE: arm/mach-pxa/pxa27x_gpio.c:574:
+		printk(KERN_ERR "%s: couldn't register class attribute, exiting\n", DRIVER_NAME);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#717: FILE: arm/mach-pxa/pxa27x_gpio.c:578:
+	if (!create_proc_read_entry ("gpio", 0, NULL, gpio_read_proc, NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#718: FILE: arm/mach-pxa/pxa27x_gpio.c:579:
+		printk(KERN_ERR "%s: couldn't register proc entry, exiting\n", DRIVER_NAME);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#726: FILE: arm/mach-pxa/pxa27x_gpio.c:587:
+	ret=gpio_setup(mapping);
 	   ^

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#750: FILE: linux/gpio.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#751: FILE: linux/gpio.h:2:
+ * include/linux/gpio.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#766: FILE: linux/gpio.h:17:
+#define GPIO_USER       (1<<0)
                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#766: FILE: linux/gpio.h:17:
+#define GPIO_USER       (1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#767: FILE: linux/gpio.h:18:
+#define GPIO_OUTPUT     (1<<1)
                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#767: FILE: linux/gpio.h:18:
+#define GPIO_OUTPUT     (1<<1)

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#780: FILE: asm-arm/arch-pxa/gpio.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#781: FILE: asm-arm/arch-pxa/gpio.h:2:
+ * linux/include/asm-arm/arch-pxa/gpio.h

WARNING:RETURN_VOID: void function return statements are not generally useful
#801: FILE: asm-arm/arch-pxa/gpio.h:22:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#807: FILE: asm-arm/arch-pxa/gpio.h:28:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#813: FILE: asm-arm/arch-pxa/gpio.h:34:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#819: FILE: asm-arm/arch-pxa/gpio.h:40:
+	return;
+}

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#823: FILE: asm-arm/arch-pxa/gpio.h:44:
+	return GPLR(gpio_nr) & GPIO_bit(gpio_nr) ? 1:0;
 	                                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 53 warnings, 22 checks, 746 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
