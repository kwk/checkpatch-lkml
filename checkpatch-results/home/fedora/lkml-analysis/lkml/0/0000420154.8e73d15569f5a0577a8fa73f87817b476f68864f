WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
#define STATIC static 

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned *' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const ush *' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const ush *' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct huft **' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#56: FILE: lib/inflate.c:137:
+ int huft_build OF((unsigned *, unsigned, unsigned, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: lib/inflate.c:138:
+ int huft_build OF((unsigned *, unsigned, unsigned, 
 		const ush *, const ush *, struct huft **, int *));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: lib/inflate.c:139:
+ int huft_free OF((struct huft *));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: lib/inflate.c:139:
+ int huft_free OF((struct huft *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct huft *' should also have an identifier name
#65: FILE: lib/inflate.c:139:
+ int huft_free OF((struct huft *));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: lib/inflate.c:140:
+ int inflate_codes OF((struct huft *, struct huft *, int, int));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#66: FILE: lib/inflate.c:140:
+ int inflate_codes OF((struct huft *, struct huft *, int, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct huft *' should also have an identifier name
#66: FILE: lib/inflate.c:140:
+ int inflate_codes OF((struct huft *, struct huft *, int, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct huft *' should also have an identifier name
#66: FILE: lib/inflate.c:140:
+ int inflate_codes OF((struct huft *, struct huft *, int, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#66: FILE: lib/inflate.c:140:
+ int inflate_codes OF((struct huft *, struct huft *, int, int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#66: FILE: lib/inflate.c:140:
+ int inflate_codes OF((struct huft *, struct huft *, int, int));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: lib/inflate.c:141:
+ int inflate_stored OF((void));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#67: FILE: lib/inflate.c:141:
+ int inflate_stored OF((void));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#67: FILE: lib/inflate.c:141:
+ int inflate_stored OF((void));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: lib/inflate.c:142:
+ int inflate_fixed OF((void));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#68: FILE: lib/inflate.c:142:
+ int inflate_fixed OF((void));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#68: FILE: lib/inflate.c:142:
+ int inflate_fixed OF((void));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: lib/inflate.c:143:
+ int inflate_dynamic OF((void));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#69: FILE: lib/inflate.c:143:
+ int inflate_dynamic OF((void));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#69: FILE: lib/inflate.c:143:
+ int inflate_dynamic OF((void));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: lib/inflate.c:144:
+ int inflate_block OF((int *));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#70: FILE: lib/inflate.c:144:
+ int inflate_block OF((int *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#70: FILE: lib/inflate.c:144:
+ int inflate_block OF((int *));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: lib/inflate.c:145:
+ int inflate OF((void));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#71: FILE: lib/inflate.c:145:
+ int inflate OF((void));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#71: FILE: lib/inflate.c:145:
+ int inflate OF((void));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: lib/inflate.c:211:
+ ulg bb;                         /* bit buffer */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: lib/inflate.c:212:
+ unsigned bk;                    /* bits in bit buffer */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#82: FILE: lib/inflate.c:212:
+ unsigned bk;                    /* bits in bit buffer */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: lib/inflate.c:214:
+ const ush mask_bits[] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: lib/inflate.c:258:
+ const int lbits = 9;          /* bits in base literal/length lookup table */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: lib/inflate.c:259:
+ const int dbits = 6;          /* bits in base distance lookup table */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: lib/inflate.c:267:
+ unsigned hufts;         /* track memory usage */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: lib/inflate.c:267:
+ unsigned hufts;         /* track memory usage */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: lib/inflate.c:270:
+ int huft_build(b, n, s, d, e, t, m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: lib/inflate.c:488:
+ int huft_free(t)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: lib/inflate.c:509:
+ int inflate_codes(tl, td, bl, bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: lib/inflate.c:618:
+ int inflate_stored()$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int inflate_stored() should probably be int inflate_stored(void)
#136: FILE: lib/inflate.c:618:
+ int inflate_stored()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: lib/inflate.c:674:
+ int inflate_fixed()$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int inflate_fixed() should probably be int inflate_fixed(void)
#145: FILE: lib/inflate.c:674:
+ int inflate_fixed()

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: lib/inflate.c:728:
+ int inflate_dynamic()$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int inflate_dynamic() should probably be int inflate_dynamic(void)
#154: FILE: lib/inflate.c:728:
+ int inflate_dynamic()

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: lib/inflate.c:906:
+ int inflate_block(e)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: lib/inflate.c:953:
+ int inflate()$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int inflate() should probably be int inflate(void)
#172: FILE: lib/inflate.c:953:
+ int inflate()

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 53 warnings, 1 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420154.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
