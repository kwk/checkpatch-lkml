WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
preempt-issues with the smp_call_function() calls. It compiles and workes=20

WARNING:TYPO_SPELLING: 'workes' may be misspelled - perhaps 'works'?
#51: 
preempt-issues with the smp_call_function() calls. It compiles and workes=20
                                                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#74: FILE: arch/alpha/kernel/process.c:157:
=2D#ifdef CONFIG_SMP

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#90: FILE: arch/alpha/kernel/smp.c:901:
=2D	if (smp_call_function(ipi_imb, NULL, 1, 1))
+	if (on_each_cpu(ipi_imb, NULL, 1, 1))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 8)
#102: FILE: arch/alpha/kernel/smp.c:916:
=2D	if (smp_call_function(ipi_flush_tlb_all, NULL, 1, 1)) {
+	if (on_each_cpu(ipi_flush_tlb_all, NULL, 1, 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#103: FILE: arch/alpha/kernel/smp.c:917:
+	if (on_each_cpu(ipi_flush_tlb_all, NULL, 1, 1)) {
 		printk(KERN_CRIT "flush_tlb_all: timed out\n");
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/cpuid.c:65:
+  cmd.cpu  =3D cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#221: FILE: arch/i386/kernel/cpuid.c:65:
+  cmd.cpu  =3D cpu;
            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/cpuid.c:66:
+  cmd.reg  =3D reg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#222: FILE: arch/i386/kernel/cpuid.c:66:
+  cmd.reg  =3D reg;
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/i386/kernel/cpuid.c:67:
+  cmd.data =3D data;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#223: FILE: arch/i386/kernel/cpuid.c:67:
+  cmd.data =3D data;
            ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#224: FILE: arch/i386/kernel/cpuid.c:68:
+  cmd.data =3D data;
+ =20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/kernel/cpuid.c:68:
+ =20$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#224: FILE: arch/i386/kernel/cpuid.c:68:
+ =20
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/cpuid.c:69:
+  on_each_cpu(cpuid_smp_cpuid, &cmd, 1, 1);$

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#287: FILE: arch/i386/kernel/microcode.c:185:
+	if (on_each_cpu(do_update_one, NULL, 1, 1) !=3D 0)
 	                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/i386/kernel/msr.c:118:
+  cmd.cpu =3D cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#313: FILE: arch/i386/kernel/msr.c:118:
+  cmd.cpu =3D cpu;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: arch/i386/kernel/msr.c:119:
+  cmd.reg =3D reg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#314: FILE: arch/i386/kernel/msr.c:119:
+  cmd.reg =3D reg;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/i386/kernel/msr.c:120:
+  cmd.data[0] =3D eax;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#315: FILE: arch/i386/kernel/msr.c:120:
+  cmd.data[0] =3D eax;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/i386/kernel/msr.c:121:
+  cmd.data[1] =3D edx;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#316: FILE: arch/i386/kernel/msr.c:121:
+  cmd.data[1] =3D edx;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: arch/i386/kernel/msr.c:123:
+  on_each_cpu(msr_smp_wrmsr, &cmd, 1, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/i386/kernel/msr.c:124:
+  return cmd.err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/i386/kernel/msr.c:129:
+  cmd.cpu =3D cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#336: FILE: arch/i386/kernel/msr.c:129:
+  cmd.cpu =3D cpu;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/i386/kernel/msr.c:130:
+  cmd.reg =3D reg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#337: FILE: arch/i386/kernel/msr.c:130:
+  cmd.reg =3D reg;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/i386/kernel/msr.c:132:
+  on_each_cpu(msr_smp_rdmsr, &cmd, 1, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/i386/kernel/msr.c:134:
+  *eax =3D cmd.data[0];$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#341: FILE: arch/i386/kernel/msr.c:134:
+  *eax =3D cmd.data[0];
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/i386/kernel/msr.c:135:
+  *edx =3D cmd.data[1];$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#342: FILE: arch/i386/kernel/msr.c:135:
+  *edx =3D cmd.data[1];
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/i386/kernel/msr.c:136:
+  return cmd.err;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#359: FILE: arch/i386/kernel/smp.c:438:
 }
+void do_flush_tlb_all(void* info)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#359: FILE: arch/i386/kernel/smp.c:438:
+void do_flush_tlb_all(void* info)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#410: FILE: arch/i386/mach-voyager/voyager_smp.c:1211:
 }
+void

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#411: FILE: arch/i386/mach-voyager/voyager_smp.c:1212:
+do_flush_tlb_all(void* info)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#518: FILE: arch/ia64/kernel/smp.c:215:
 	if (likely(mm =3D=3D current->active_mm && atomic_read(&mm->mm_users) =3D=
=3D 1))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#520: FILE: arch/ia64/kernel/smp.c:216:
 	if (likely(mm =3D=3D current->active_mm && atomic_read(&mm->mm_users) =3D=
+	{

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: arch/parisc/kernel/irq.c:71:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#645: FILE: arch/parisc/kernel/irq.c:71:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: arch/parisc/kernel/irq.c:71:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: arch/parisc/kernel/irq.c:82:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);$

CHECK:SPACING: No space is necessary after a cast
#655: FILE: arch/parisc/kernel/irq.c:82:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: arch/parisc/kernel/irq.c:82:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: arch/parisc/kernel/irq.c:99:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);$

CHECK:SPACING: No space is necessary after a cast
#665: FILE: arch/parisc/kernel/irq.c:99:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: arch/parisc/kernel/irq.c:99:
+        on_each_cpu(cpu_set_eiem, (void *) cpu_eiem, 1, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: arch/s390/kernel/smp.c:231:
+        on_each_cpu(do_machine_restart, NULL, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: arch/s390/kernel/smp.c:231:
+        on_each_cpu(do_machine_restart, NULL, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: arch/s390/kernel/smp.c:248:
+        on_each_cpu(do_machine_halt, NULL, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/s390/kernel/smp.c:248:
+        on_each_cpu(do_machine_halt, NULL, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: arch/s390/kernel/smp.c:266:
+        on_each_cpu(do_machine_power_off, NULL, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: arch/s390/kernel/smp.c:266:
+        on_each_cpu(do_machine_power_off, NULL, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: arch/s390/kernel/smp.c:338:
+        on_each_cpu(smp_ptlb_callback, NULL, 0, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: arch/s390/kernel/smp.c:338:
+        on_each_cpu(smp_ptlb_callback, NULL, 0, 1);$

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#785: FILE: arch/s390/kernel/smp.c:399:
+	on_each_cpu(smp_ctl_bit_callback, &parms, 0, 1);
 	                                   ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#795: FILE: arch/s390/kernel/smp.c:412:
+	on_each_cpu(smp_ctl_bit_callback, &parms, 0, 1);
 	                                   ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: arch/s390/kernel/smp.c:230:
+        on_each_cpu(do_machine_restart, NULL, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: arch/s390/kernel/smp.c:230:
+        on_each_cpu(do_machine_restart, NULL, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: arch/s390/kernel/smp.c:247:
+        on_each_cpu(do_machine_halt, NULL, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: arch/s390/kernel/smp.c:247:
+        on_each_cpu(do_machine_halt, NULL, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: arch/s390/kernel/smp.c:265:
+        on_each_cpu(do_machine_power_off, NULL, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: arch/s390/kernel/smp.c:265:
+        on_each_cpu(do_machine_power_off, NULL, 0, 0);$

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#839: FILE: arch/s390/kernel/smp.c:383:
+	on_each_cpu(smp_ctl_bit_callback, &parms, 0, 1);
 	                                   ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#849: FILE: arch/s390/kernel/smp.c:396:
+	on_each_cpu(smp_ctl_bit_callback, &parms, 0, 1);
 	                                   ^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#888: FILE: arch/x86_64/kernel/bluesmoke.c:132:
+	on_each_cpu (mce_checkregs, NULL, 1, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: arch/x86_64/kernel/cpuid.c:67:
+  cmd.cpu  =3D cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#911: FILE: arch/x86_64/kernel/cpuid.c:67:
+  cmd.cpu  =3D cpu;
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: arch/x86_64/kernel/cpuid.c:68:
+  cmd.reg  =3D reg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#912: FILE: arch/x86_64/kernel/cpuid.c:68:
+  cmd.reg  =3D reg;
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: arch/x86_64/kernel/cpuid.c:69:
+  cmd.data =3D data;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#913: FILE: arch/x86_64/kernel/cpuid.c:69:
+  cmd.data =3D data;
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: arch/x86_64/kernel/cpuid.c:71:
+  on_each_cpu(cpuid_smp_cpuid, &cmd, 1, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: arch/x86_64/kernel/msr.c:122:
+  cmd.cpu =3D cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#973: FILE: arch/x86_64/kernel/msr.c:122:
+  cmd.cpu =3D cpu;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: arch/x86_64/kernel/msr.c:123:
+  cmd.reg =3D reg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#974: FILE: arch/x86_64/kernel/msr.c:123:
+  cmd.reg =3D reg;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: arch/x86_64/kernel/msr.c:124:
+  cmd.data[0] =3D eax;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#975: FILE: arch/x86_64/kernel/msr.c:124:
+  cmd.data[0] =3D eax;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: arch/x86_64/kernel/msr.c:125:
+  cmd.data[1] =3D edx;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#976: FILE: arch/x86_64/kernel/msr.c:125:
+  cmd.data[1] =3D edx;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: arch/x86_64/kernel/msr.c:127:
+  on_each_cpu(msr_smp_wrmsr, &cmd, 1, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: arch/x86_64/kernel/msr.c:128:
+  return cmd.err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: arch/x86_64/kernel/msr.c:133:
+  cmd.cpu =3D cpu;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#996: FILE: arch/x86_64/kernel/msr.c:133:
+  cmd.cpu =3D cpu;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: arch/x86_64/kernel/msr.c:134:
+  cmd.reg =3D reg;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#997: FILE: arch/x86_64/kernel/msr.c:134:
+  cmd.reg =3D reg;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: arch/x86_64/kernel/msr.c:136:
+  on_each_cpu(msr_smp_rdmsr, &cmd, 1, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: arch/x86_64/kernel/msr.c:138:
+  *eax =3D cmd.data[0];$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1001: FILE: arch/x86_64/kernel/msr.c:138:
+  *eax =3D cmd.data[0];
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: arch/x86_64/kernel/msr.c:139:
+  *edx =3D cmd.data[1];$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1002: FILE: arch/x86_64/kernel/msr.c:139:
+  *edx =3D cmd.data[1];
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: arch/x86_64/kernel/msr.c:140:
+  return cmd.err;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1019: FILE: arch/x86_64/kernel/smp.c:330:
 }
+void do_flush_tlb_all(void* info)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1019: FILE: arch/x86_64/kernel/smp.c:330:
+void do_flush_tlb_all(void* info)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1156: FILE: include/asm-alpha/agp.h:12:
+static void flush_agp_cache(void* info)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1158: FILE: include/asm-alpha/agp.h:14:
+	mb();

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1174: FILE: include/asm-i386/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1174: FILE: include/asm-i386/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1189: FILE: include/asm-ia64/agp.h:21:
+/* Could use CLFLUSH here if the cpu supports it. But then it would
+   need to be called for each cacheline of the whole page so it may not be=

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1191: FILE: include/asm-ia64/agp.h:22:
+   worth it. Would need a page for it. */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1192: FILE: include/asm-ia64/agp.h:23:
+static void flush_agp_cache(void* info)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1194: FILE: include/asm-ia64/agp.h:25:
+	mb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1234: FILE: include/asm-ia64/agp.h:11:
+/* Could use CLFLUSH here if the cpu supports it. But then it would
+   need to be called for each cacheline of the whole page so it may not be=

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1236: FILE: include/asm-ia64/agp.h:12:
+   worth it. Would need a page for it. */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1237: FILE: include/asm-ia64/agp.h:13:
+static void flush_agp_cache(void* info)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1239: FILE: include/asm-ia64/agp.h:15:
+	mb();

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1253: FILE: include/asm-x86_64/agp.h:21:
+static void flush_agp_cache(void* info)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1255: FILE: include/asm-x86_64/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1255: FILE: include/asm-x86_64/agp.h:23:
+	__asm__ __volatile__ ("wbinvd": : :"memory");
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1284: FILE: include/linux/smp.h:62:
+	int ret =3D 0;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1288: FILE: include/linux/smp.h:66:
+	if(num_online_cpus() =3D=3D 1)
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1288: FILE: include/linux/smp.h:66:
+	if(num_online_cpus() =3D=3D 1)
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1288: FILE: include/linux/smp.h:66:
+	if(num_online_cpus() =3D=3D 1)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1288: FILE: include/linux/smp.h:66:
+	if(num_online_cpus() =3D=3D 1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1291: FILE: include/linux/smp.h:69:
+	ret =3D smp_call_function(func, info, retry, wait);
 	    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1292: FILE: include/linux/smp.h:70:
+	if(ret !=3D 0)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#1292: FILE: include/linux/smp.h:70:
+	if(ret !=3D 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1293: FILE: include/linux/smp.h:71:
+		printk(KERN_ERR "%p: IPI timeout, giving up\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1294: FILE: include/linux/smp.h:72:
+		printk(KERN_ERR "%p: IPI timeout, giving up\n",
+			__builtin_return_address(0));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1311: FILE: include/linux/smp.h:125:
+#define on_each_cpu(func,info,retry,wait)	({ func(info); 0; })
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1311: FILE: include/linux/smp.h:125:
+#define on_each_cpu(func,info,retry,wait)	({ func(info); 0; })
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1311: FILE: include/linux/smp.h:125:
+#define on_each_cpu(func,info,retry,wait)	({ func(info); 0; })
                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 61 warnings, 8 checks, 1131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391429.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
