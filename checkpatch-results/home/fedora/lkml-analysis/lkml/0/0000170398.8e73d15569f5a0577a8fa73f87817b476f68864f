WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 510-version-specific-mac.patch-old/arch/ppc/Kconfig 510-version-specific-mac.patch-new/arch/ppc/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: arch/ppc/kernel/swsusp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#88: FILE: arch/ppc/kernel/swsusp.c:27:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#89: FILE: arch/ppc/kernel/swsusp.c:28:
+#include <asm/uaccess.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#95: FILE: arch/ppc/kernel/swsusp.c:34:
+extern int nr_copy_pages __nosavedata;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#97: FILE: arch/ppc/kernel/swsusp.c:36:
+extern asmlinkage int swsusp_save(void);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#99: FILE: arch/ppc/kernel/swsusp.c:38:
+static void inline do_swsusp_copyback(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: arch/ppc/kernel/swsusp.c:40:
+^Iregister int i = 0; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: arch/ppc/kernel/swsusp.c:41:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/ppc/kernel/swsusp.c:45:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/ppc/kernel/swsusp.c:48:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: arch/ppc/kernel/swsusp.c:49:
+^I^Ifor (loop = 0; $

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#112: FILE: arch/ppc/kernel/swsusp.c:51:
+		     loop ++)
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#260: FILE: drivers/macintosh/Kconfig:198:
+config SOFTWARE_REPLACE_SLEEP
+	bool "Using Software suspend replace broken sleep function"
+	depends on SOFTWARE_SUSPEND2
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#274: FILE: drivers/macintosh/via-pmu.c:2899:
+		extern void software_suspend_pending(void);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#276: FILE: drivers/macintosh/via-pmu.c:2901:
+		return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#286: FILE: include/asm-ppc/cpu_context.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: include/asm-ppc/cpu_context.h:13:
+^Iu32 r[20]; /* r12 - r31 */                                                 $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#301: FILE: include/asm-ppc/cpu_context.h:16:
+} __attribute__((packed));

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#303: FILE: include/asm-ppc/cpu_context.h:18:
+inline static void __save_processor_state(struct saved_context *s)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#313: FILE: include/asm-ppc/cpu_context.h:28:
+	asm volatile ("mfsdr1 4; stw 4,%0": "=m" (s->sdr1));
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: include/asm-ppc/cpu_context.h:36:
+^I^I^I  "bne 1b" : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: include/asm-ppc/cpu_context.h:39:
+^I^I$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#332: FILE: include/asm-ppc/cpu_context.h:47:
+inline static void __restore_processor_state(struct saved_context *s)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#338: FILE: include/asm-ppc/cpu_context.h:53:
+	asm volatile ("lwz 4,%0; mtsprg 0,4": "=m" (s->sprg[0]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#339: FILE: include/asm-ppc/cpu_context.h:54:
+	asm volatile ("lwz 4,%0; mtsprg 1,4": "=m" (s->sprg[1]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#340: FILE: include/asm-ppc/cpu_context.h:55:
+	asm volatile ("lwz 4,%0; mtsprg 2,4": "=m" (s->sprg[2]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#341: FILE: include/asm-ppc/cpu_context.h:56:
+	asm volatile ("lwz 4,%0; mtsprg 3,4": "=m" (s->sprg[3]));
 	                                    ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#344: FILE: include/asm-ppc/cpu_context.h:59:
+	asm volatile ("li 3,0; mttbl 3; \n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: include/asm-ppc/cpu_context.h:66:
+^Iasm volatile ("lmw 12,%0" : "=m" (s->r)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: include/asm-ppc/cpu_context.h:69:
+^Iasm volatile ("lwz 0,%0; mtcr 0" : "=m" (s->cr)); ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: include/asm-ppc/cpu_context.h:69:
+^Iasm volatile ("lwz 0,%0; mtcr 0" : "=m" (s->cr)); ^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: include/asm-ppc/cpu_context.h:75:
+	printk("pmu suspend\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: include/asm-ppc/cpu_context.h:79:
+extern void enable_kernel_altivec(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: include/asm-ppc/cpu_context.h:83:
+	printk("set context: <%p>\n", current);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: include/asm-ppc/cpu_context.h:85:
+	set_context(current->active_mm->context,
+			current->active_mm->pgd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#372: FILE: include/asm-ppc/cpu_context.h:87:
+	printk("pmu_resume\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#377: FILE: include/asm-ppc/cpu_context.h:92:
+		printk("enable altivec\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#381: FILE: include/asm-ppc/cpu_context.h:96:
+	printk("enable fp\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#388: FILE: include/asm-ppc/suspend2.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: include/asm-ppc/suspend2.h:53:
+^Inew_stack_page = $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#443: FILE: include/asm-ppc/suspend2.h:56:
+	BUG_ON(!new_stack_page);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: include/asm-ppc/suspend2.h:57:
+^I$

WARNING:TYPO_SPELLING: 'geting' may be misspelled - perhaps 'getting'?
#447: FILE: include/asm-ppc/suspend2.h:60:
+	/* geting stack address */
 	   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: include/asm-ppc/suspend2.h:64:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#453: FILE: include/asm-ppc/suspend2.h:66:
+	memcpy((void*)new_stack_page, (void*)src, THREAD_SIZE);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#453: FILE: include/asm-ppc/suspend2.h:66:
+	memcpy((void*)new_stack_page, (void*)src, THREAD_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: include/asm-ppc/suspend2.h:72:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 18 warnings, 4 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
