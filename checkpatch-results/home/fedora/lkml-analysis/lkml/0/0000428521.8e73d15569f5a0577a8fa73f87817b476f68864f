WARNING:REPEATED_WORD: Possible repeated word: 'in'
#45: 
I have put scx200.c in in arch/i386/kernel in the hope that this

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	           ChangeSet	1.634   -> 1.636  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	drivers/mtd/maps/Makefile	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	drivers/i2c/Makefile	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	arch/i386/Config.help	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	arch/i386/kernel/Makefile	1.22    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	drivers/i2c/Config.help	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	drivers/char/Config.in	1.37    -> 1.38   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	drivers/mtd/maps/Config.help	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	 arch/i386/config.in	1.49    -> 1.50   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	include/linux/pci_ids.h	1.59    -> 1.60   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	drivers/char/Config.help	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	drivers/mtd/maps/Config.in	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	         MAINTAINERS	1.101   -> 1.102  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	drivers/char/Makefile	1.37    -> 1.38   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	drivers/i2c/Config.in	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	               (new)	        -> 1.2     drivers/char/scx200_wdt.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	               (new)	        -> 1.1     drivers/i2c/scx200_acb.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	               (new)	        -> 1.1     include/linux/scx200.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	               (new)	        -> 1.1     drivers/mtd/maps/scx200_docflash.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	               (new)	        -> 1.1     drivers/char/scx200_gpio.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	               (new)	        -> 1.1     include/linux/scx200_gpio.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	               (new)	        -> 1.1     drivers/i2c/scx200_i2c.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#	               (new)	        -> 1.1     arch/i386/kernel/scx200.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# 02/09/30	wingel@weinigel.se	1.635

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# scx200-2.5.diff

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# 02/09/30	wingel@weinigel.se	1.636

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# Removed unneccesary ifdefs.

WARNING:TYPO_SPELLING: 'unneccesary' may be misspelled - perhaps 'unnecessary'?
#89: 
# Removed unneccesary ifdefs.
          ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
# Cleaned up fault handling.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#92: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#94: 
--- a/MAINTAINERS	Mon Sep 30 13:07:40 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#102: FILE: MAINTAINERS:1435:
+P:	Christer Weinigel
+M:	christer@weinigel.se

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#104: FILE: MAINTAINERS:1437:
+W:	http://www.weinigel.se
+S:	Supported

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: arch/i386/Config.help:986:
+  This provides basic support for the National Semiconductor SCx200 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#152: FILE: arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#152: FILE: arch/i386/kernel/scx200.c:1:
+/* linux/arch/i386/kernel/scx200.c 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#153: FILE: arch/i386/kernel/scx200.c:2:
+/* linux/arch/i386/kernel/scx200.c 
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: arch/i386/kernel/scx200.c:5:
+   National Semiconductor SCx200 support. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#174: FILE: arch/i386/kernel/scx200.c:23:
+unsigned scx200_gpio_base = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#174: FILE: arch/i386/kernel/scx200.c:23:
+unsigned scx200_gpio_base = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: arch/i386/kernel/scx200.c:47:
+void scx200_gpio_dump(unsigned index)

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: arch/i386/kernel/scx200.c:50:
+	u32 config = scx200_gpio_configure(index, ~0, 0);
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#201: FILE: arch/i386/kernel/scx200.c:50:
+	printk(KERN_DEBUG "GPIO%02u: 0x%08lx", index, (unsigned long)config);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: arch/i386/kernel/scx200.c:51:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/kernel/scx200.c:52:
+^Iif (config & 1) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#204: FILE: arch/i386/kernel/scx200.c:53:
+		printk(" OE"); /* output enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: arch/i386/kernel/scx200.c:55:
+		printk(" TS"); /* tristate */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/i386/kernel/scx200.c:56:
+^Iif (config & 2) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: arch/i386/kernel/scx200.c:57:
+		printk(" PP"); /* push pull */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#210: FILE: arch/i386/kernel/scx200.c:59:
+		printk(" OD"); /* open drain */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/i386/kernel/scx200.c:60:
+^Iif (config & 4) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#212: FILE: arch/i386/kernel/scx200.c:61:
+		printk(" PUE"); /* pull up enabled */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: arch/i386/kernel/scx200.c:63:
+		printk(" PUD"); /* pull up disabled */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: arch/i386/kernel/scx200.c:64:
+^Iif (config & 8) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#216: FILE: arch/i386/kernel/scx200.c:65:
+		printk(" LOCKED"); /* locked */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: arch/i386/kernel/scx200.c:66:
+^Iif (config & 16) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#218: FILE: arch/i386/kernel/scx200.c:67:
+		printk(" LEVEL"); /* level input */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/i386/kernel/scx200.c:69:
+		printk(" EDGE"); /* edge input */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: arch/i386/kernel/scx200.c:70:
+^Iif (config & 32) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: arch/i386/kernel/scx200.c:71:
+		printk(" HI"); /* trigger on rising edge */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#224: FILE: arch/i386/kernel/scx200.c:73:
+		printk(" LO"); /* trigger on falling edge */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/i386/kernel/scx200.c:74:
+^Iif (config & 64) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: arch/i386/kernel/scx200.c:75:
+		printk(" DEBOUNCE"); /* debounce */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: arch/i386/kernel/scx200.c:76:
+	printk("\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#234: FILE: arch/i386/kernel/scx200.c:83:
+	unsigned base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#236: FILE: arch/i386/kernel/scx200.c:85:
+	printk(KERN_INFO NAME ": NatSemi SCx200 Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: arch/i386/kernel/scx200.c:87:
+^Iif ((bridge = pci_find_device(PCI_VENDOR_ID_NS, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#238: FILE: arch/i386/kernel/scx200.c:87:
+	if ((bridge = pci_find_device(PCI_VENDOR_ID_NS, 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#244: FILE: arch/i386/kernel/scx200.c:93:
+	printk(KERN_INFO NAME ": GPIO base 0x%x\n", base);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_GPIO_SIZE>
#246: FILE: arch/i386/kernel/scx200.c:95:
+	if (request_region(base, SCx200_GPIO_SIZE, "NatSemi SCx200 GPIO") == 0) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#247: FILE: arch/i386/kernel/scx200.c:96:
+		printk(KERN_ERR NAME ": can't allocate I/O for GPIOs\n");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#268: FILE: arch/i386/kernel/scx200.c:117:
+EXPORT_SYMBOL(scx200_gpio_base);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#269: FILE: arch/i386/kernel/scx200.c:118:
+EXPORT_SYMBOL(scx200_gpio_shadow);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#270: FILE: arch/i386/kernel/scx200.c:119:
+EXPORT_SYMBOL(scx200_gpio_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#271: FILE: arch/i386/kernel/scx200.c:120:
+EXPORT_SYMBOL(scx200_gpio_configure);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#272: FILE: arch/i386/kernel/scx200.c:121:
+EXPORT_SYMBOL(scx200_gpio_dump);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#275: FILE: arch/i386/kernel/scx200.c:124:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/i386/kernel/scx200.c:125:
+        compile-command: "make -k -C ../../.. SUBDIRS=arch/i386/kernel modules"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/i386/kernel/scx200.c:126:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/char/Config.help:807:
+  Enable the built-in watchdog timer support on the National $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/char/scx200_gpio.c:1:
+/* linux/drivers/char/scx200_gpio.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#350: FILE: drivers/char/scx200_gpio.c:1:
+/* linux/drivers/char/scx200_gpio.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#350: FILE: drivers/char/scx200_gpio.c:1:
+/* linux/drivers/char/scx200_gpio.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#351: FILE: drivers/char/scx200_gpio.c:2:
+/* linux/drivers/char/scx200_gpio.c 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: drivers/char/scx200_gpio.c:6:
+   Copyright (c) 2001,2002 Christer Weinigel <wingel@nano-system.com> */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#362: FILE: drivers/char/scx200_gpio.c:13:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#363: FILE: drivers/char/scx200_gpio.c:14:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#373: FILE: drivers/char/scx200_gpio.c:24:
+static int major = 0;		/* default to dynamic major */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/char/scx200_gpio.c:28:
+static ssize_t scx200_gpio_write(struct file *file, const char *data, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#380: FILE: drivers/char/scx200_gpio.c:31:
+	unsigned m = minor(file->f_dentry->d_inode->i_rdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: drivers/char/scx200_gpio.c:39:
+		char c;
+		if (get_user(c, data+i))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#388: FILE: drivers/char/scx200_gpio.c:39:
+		if (get_user(c, data+i))
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#390: FILE: drivers/char/scx200_gpio.c:41:
+		switch (c)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/char/scx200_gpio.c:43:
+^I^Icase '0': $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/char/scx200_gpio.c:44:
+^I^I^Iscx200_gpio_set(m, 0); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/char/scx200_gpio.c:46:
+^I^Icase '1': $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/char/scx200_gpio.c:47:
+^I^I^Iscx200_gpio_set(m, 1); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#399: FILE: drivers/char/scx200_gpio.c:50:
+			printk(KERN_INFO NAME ": GPIO%d output enabled\n", m);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#403: FILE: drivers/char/scx200_gpio.c:54:
+			printk(KERN_INFO NAME ": GPIO%d output disabled\n", m);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#407: FILE: drivers/char/scx200_gpio.c:58:
+			printk(KERN_INFO NAME ": GPIO%d output is push pull\n", m);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#411: FILE: drivers/char/scx200_gpio.c:62:
+			printk(KERN_INFO NAME ": GPIO%d output is open drain\n", m);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#415: FILE: drivers/char/scx200_gpio.c:66:
+			printk(KERN_INFO NAME ": GPIO%d pull up enabled\n", m);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#419: FILE: drivers/char/scx200_gpio.c:70:
+			printk(KERN_INFO NAME ": GPIO%d pull up disabled\n", m);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#431: FILE: drivers/char/scx200_gpio.c:82:
+	unsigned m = minor(file->f_dentry->d_inode->i_rdev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/char/scx200_gpio.c:91:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#446: FILE: drivers/char/scx200_gpio.c:97:
+	unsigned m = minor(inode->i_rdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#447: FILE: drivers/char/scx200_gpio.c:98:
+	unsigned m = minor(inode->i_rdev);
+	if (m > 63)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#457: FILE: drivers/char/scx200_gpio.c:108:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#458: FILE: drivers/char/scx200_gpio.c:109:
+static struct file_operations scx200_gpio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#470: FILE: drivers/char/scx200_gpio.c:121:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 GPIO Driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#473: FILE: drivers/char/scx200_gpio.c:124:
+		printk(KERN_ERR NAME ": no SCx200 gpio pins available\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#479: FILE: drivers/char/scx200_gpio.c:130:
+		printk(KERN_ERR NAME ": unable to register character device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#484: FILE: drivers/char/scx200_gpio.c:135:
+		printk(KERN_DEBUG NAME ": got dynamic major %d\n", major);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#499: FILE: drivers/char/scx200_gpio.c:150:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/char/scx200_gpio.c:151:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/char modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: drivers/char/scx200_gpio.c:152:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/char/scx200_wdt.c:1:
+/* linux/drivers/char/scx200_wdt.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#508: FILE: drivers/char/scx200_wdt.c:1:
+/* linux/drivers/char/scx200_wdt.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#508: FILE: drivers/char/scx200_wdt.c:1:
+/* linux/drivers/char/scx200_wdt.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#509: FILE: drivers/char/scx200_wdt.c:2:
+/* linux/drivers/char/scx200_wdt.c 
+

WARNING:TYPO_SPELLING: 'Som' may be misspelled - perhaps 'Some'?
#514: FILE: drivers/char/scx200_wdt.c:7:
+   Som code taken from:
    ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#525: FILE: drivers/char/scx200_wdt.c:18:
+   software is provided AS-IS with no warranties. */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#537: FILE: drivers/char/scx200_wdt.c:30:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#538: FILE: drivers/char/scx200_wdt.c:31:
+#include <asm/io.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#562: FILE: drivers/char/scx200_wdt.c:55:
+static unsigned expect_close;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#569: FILE: drivers/char/scx200_wdt.c:62:
+#define W_SCALE (32768/1024)
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CB_BASE>
#573: FILE: drivers/char/scx200_wdt.c:66:
+	outw(wdto_restart, SCx200_CB_BASE + SCx200_WDT_WDTO);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDTO>
#573: FILE: drivers/char/scx200_wdt.c:66:
+	outw(wdto_restart, SCx200_CB_BASE + SCx200_WDT_WDTO);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#578: FILE: drivers/char/scx200_wdt.c:71:
+	printk(KERN_INFO NAME ": timer margin %d seconds\n", margin);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: drivers/char/scx200_wdt.c:77:
+^Iprintk(KERN_DEBUG NAME ": enabling watchdog timer, wdto_restart = %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#584: FILE: drivers/char/scx200_wdt.c:77:
+	printk(KERN_DEBUG NAME ": enabling watchdog timer, wdto_restart = %d\n", 

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDSTS_WDOVF>
#588: FILE: drivers/char/scx200_wdt.c:81:
+	outb(SCx200_WDT_WDSTS_WDOVF, SCx200_CB_BASE + SCx200_WDT_WDSTS);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDSTS>
#588: FILE: drivers/char/scx200_wdt.c:81:
+	outb(SCx200_WDT_WDSTS_WDOVF, SCx200_CB_BASE + SCx200_WDT_WDSTS);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDCNFG>
#589: FILE: drivers/char/scx200_wdt.c:82:
+	outw(W_ENABLE, SCx200_CB_BASE + SCx200_WDT_WDCNFG);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#596: FILE: drivers/char/scx200_wdt.c:89:
+	printk(KERN_DEBUG NAME ": disabling watchdog timer\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: drivers/char/scx200_wdt.c:90:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/char/scx200_wdt.c:98:
+        /* only allow one at a time */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: drivers/char/scx200_wdt.c:99:
+        if (down_trylock(&open_semaphore))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/char/scx200_wdt.c:99:
+        if (down_trylock(&open_semaphore))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: drivers/char/scx200_wdt.c:100:
+                return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/char/scx200_wdt.c:100:
+                return -EBUSY;$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#616: FILE: drivers/char/scx200_wdt.c:109:
+	if (!expect_close) {
[...]
+	} else if (!nowayout) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#617: FILE: drivers/char/scx200_wdt.c:110:
+		printk(KERN_WARNING NAME ": watchdog device closed unexpectedly, will not disable the watchdog timer\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: drivers/char/scx200_wdt.c:114:
+        up(&open_semaphore);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: drivers/char/scx200_wdt.c:114:
+        up(&open_semaphore);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/char/scx200_wdt.c:119:
+static int scx200_wdt_notify_sys(struct notifier_block *this, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: drivers/char/scx200_wdt.c:120:
+static int scx200_wdt_notify_sys(struct notifier_block *this, 
+				      unsigned long code, void *unused)

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: drivers/char/scx200_wdt.c:122:
+        if (code == SYS_HALT || code == SYS_POWER_OFF)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/char/scx200_wdt.c:122:
+        if (code == SYS_HALT || code == SYS_POWER_OFF)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/char/scx200_wdt.c:126:
+        return NOTIFY_DONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/char/scx200_wdt.c:126:
+        return NOTIFY_DONE;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#637: FILE: drivers/char/scx200_wdt.c:130:
+static struct notifier_block scx200_wdt_notifier =
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: drivers/char/scx200_wdt.c:131:
+        notifier_call: scx200_wdt_notify_sys$

WARNING:INDENTED_LABEL: labels should not be indented
#638: FILE: drivers/char/scx200_wdt.c:131:
+        notifier_call: scx200_wdt_notify_sys

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: drivers/char/scx200_wdt.c:134:
+static ssize_t scx200_wdt_write(struct file *file, const char *data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: drivers/char/scx200_wdt.c:135:
+static ssize_t scx200_wdt_write(struct file *file, const char *data, 
+				     size_t len, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: drivers/char/scx200_wdt.c:141:
+^Iif (len) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#648: FILE: drivers/char/scx200_wdt.c:141:
+	if (len) 
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#657: FILE: drivers/char/scx200_wdt.c:150:
+			char c;
+			if (get_user(c, data+i))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#657: FILE: drivers/char/scx200_wdt.c:150:
+			if (get_user(c, data+i))
 			                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/char/scx200_wdt.c:163:
+static int scx200_wdt_ioctl(struct inode *inode, struct file *file,
+	unsigned int cmd, unsigned long arg)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: drivers/char/scx200_wdt.c:167:
+^I^I.firmware_version = 1, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/char/scx200_wdt.c:171:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/char/scx200_wdt.c:176:
+^I^Iif(copy_to_user((struct watchdog_info *)arg, &ident, $

ERROR:SPACING: space required before the open parenthesis '('
#683: FILE: drivers/char/scx200_wdt.c:176:
+		if(copy_to_user((struct watchdog_info *)arg, &ident, 

WARNING:CONST_STRUCT: struct file_operations should normally be const
#710: FILE: drivers/char/scx200_wdt.c:203:
+static struct file_operations scx200_wdt_fops = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#728: FILE: drivers/char/scx200_wdt.c:221:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 Watchdog Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: drivers/char/scx200_wdt.c:224:
+^Iif ((pci_find_device(PCI_VENDOR_ID_NS, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#738: FILE: drivers/char/scx200_wdt.c:231:
+		printk(KERN_WARNING NAME ": no configuration block found\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: drivers/char/scx200_wdt.c:235:
+^Iif (!request_region(SCx200_CB_BASE + SCx200_WDT_OFFSET, $

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_OFFSET>
#742: FILE: drivers/char/scx200_wdt.c:235:
+	if (!request_region(SCx200_CB_BASE + SCx200_WDT_OFFSET, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: drivers/char/scx200_wdt.c:236:
+^I^I^I    SCx200_WDT_SIZE, $

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_SIZE>
#743: FILE: drivers/char/scx200_wdt.c:236:
+			    SCx200_WDT_SIZE, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#745: FILE: drivers/char/scx200_wdt.c:238:
+		printk(KERN_WARNING NAME ": watchdog I/O region busy\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#759: FILE: drivers/char/scx200_wdt.c:252:
+        if (r) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: drivers/char/scx200_wdt.c:252:
+        if (r) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#760: FILE: drivers/char/scx200_wdt.c:253:
+                printk(KERN_ERR NAME ": unable to register reboot notifier");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: drivers/char/scx200_wdt.c:253:
+                printk(KERN_ERR NAME ": unable to register reboot notifier");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#760: FILE: drivers/char/scx200_wdt.c:253:
+                printk(KERN_ERR NAME ": unable to register reboot notifier");

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: drivers/char/scx200_wdt.c:255:
+                return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/char/scx200_wdt.c:255:
+                return r;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: drivers/char/scx200_wdt.c:256:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: drivers/char/scx200_wdt.c:256:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: drivers/char/scx200_wdt.c:263:
+        unregister_reboot_notifier(&scx200_wdt_notifier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/char/scx200_wdt.c:263:
+        unregister_reboot_notifier(&scx200_wdt_notifier);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#780: FILE: drivers/char/scx200_wdt.c:273:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: drivers/char/scx200_wdt.c:274:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/char modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: drivers/char/scx200_wdt.c:275:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: drivers/i2c/scx200_acb.c:1:
+/*  linux/drivers/i2c/scx200_acb.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#849: FILE: drivers/i2c/scx200_acb.c:1:
+/*  linux/drivers/i2c/scx200_acb.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#849: FILE: drivers/i2c/scx200_acb.c:1:
+/*  linux/drivers/i2c/scx200_acb.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#850: FILE: drivers/i2c/scx200_acb.c:2:
+/*  linux/drivers/i2c/scx200_acb.c 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#854: FILE: drivers/i2c/scx200_acb.c:6:
+    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: drivers/i2c/scx200_acb.c:8:
+        Copyright (c) 2001 Benjamin Herrenschmidt <benh@kernel.crashing.org>$

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: drivers/i2c/scx200_acb.c:9:
+        Copyright (c) 2000 Philip Edelbrock <phil@stimpy.netroedge.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/i2c/scx200_acb.c:10:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/i2c/scx200_acb.c:15:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: drivers/i2c/scx200_acb.c:20:
+   $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#870: FILE: drivers/i2c/scx200_acb.c:22:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#871: FILE: drivers/i2c/scx200_acb.c:23:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#883: FILE: drivers/i2c/scx200_acb.c:35:
+#include <asm/io.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#901: FILE: drivers/i2c/scx200_acb.c:53:
+#define DBG(x...) printk(KERN_DEBUG NAME ": " x)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#907: FILE: drivers/i2c/scx200_acb.c:59:
+/* The hardware supports interrupt driven mode too, but I haven't
+   implemented that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#907: FILE: drivers/i2c/scx200_acb.c:59:
+   implemented that. */

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#921: FILE: drivers/i2c/scx200_acb.c:73:
+static const char *scx200_acb_state_name[] = {

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#933: FILE: drivers/i2c/scx200_acb.c:85:
+struct scx200_acb_iface
+{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#936: FILE: drivers/i2c/scx200_acb.c:88:
+	unsigned base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#946: FILE: drivers/i2c/scx200_acb.c:98:
+	unsigned len;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: drivers/i2c/scx200_acb.c:105:
+#define    ACBST_BER^I^I0x20 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: drivers/i2c/scx200_acb.c:127:
+^IDBG("state %s, status = 0x%02x\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#991: FILE: drivers/i2c/scx200_acb.c:143:
+^I^Iprintk(KERN_WARNING NAME ": %s, interrupt in idle state\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#991: FILE: drivers/i2c/scx200_acb.c:143:
+		printk(KERN_WARNING NAME ": %s, interrupt in idle state\n", 

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1013: FILE: drivers/i2c/scx200_acb.c:165:
+		/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1014: FILE: drivers/i2c/scx200_acb.c:166:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1017: FILE: drivers/i2c/scx200_acb.c:169:
+^I^I^Iif (iface->len == 1) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: drivers/i2c/scx200_acb.c:208:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/i2c/scx200_acb.c:211:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: drivers/i2c/scx200_acb.c:218:
+^IDBG("negative acknowledge in state %s\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: drivers/i2c/scx200_acb.c:229:
+^Iprintk(KERN_ERR NAME ": %s, %s in state %s\n", iface->adapter.name, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1077: FILE: drivers/i2c/scx200_acb.c:229:
+	printk(KERN_ERR NAME ": %s, %s in state %s\n", iface->adapter.name, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1085: FILE: drivers/i2c/scx200_acb.c:237:
+static void scx200_acb_timeout(struct scx200_acb_iface *iface) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: drivers/i2c/scx200_acb.c:239:
+^Iprintk(KERN_ERR NAME ": %s, timeout in state %s\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1087: FILE: drivers/i2c/scx200_acb.c:239:
+	printk(KERN_ERR NAME ": %s, timeout in state %s\n", 

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1104: FILE: drivers/i2c/scx200_acb.c:256:
+		if ((status & (ACBST_SDAST|ACBST_BER|ACBST_NEGACK)) != 0) {
 		                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1104: FILE: drivers/i2c/scx200_acb.c:256:
+		if ((status & (ACBST_SDAST|ACBST_BER|ACBST_NEGACK)) != 0) {
 		                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1108: FILE: drivers/i2c/scx200_acb.c:260:
+		schedule_timeout(HZ/100+1);
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1108: FILE: drivers/i2c/scx200_acb.c:260:
+		schedule_timeout(HZ/100+1);
 		                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1118: FILE: drivers/i2c/scx200_acb.c:270:
+           frequency: 16 clock cycles */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1118: FILE: drivers/i2c/scx200_acb.c:270:
+	/* Disable the ACCESS.bus device and Configure the SCL
+           frequency: 16 clock cycles */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1118: FILE: drivers/i2c/scx200_acb.c:270:
+           frequency: 16 clock cycles */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1137: FILE: drivers/i2c/scx200_acb.c:289:
+^I^I^I^Iu16 address, unsigned short flags,^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: drivers/i2c/scx200_acb.c:289:
+static s32 scx200_acb_smbus_xfer(struct i2c_adapter *adapter,
+				u16 address, unsigned short flags,	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: drivers/i2c/scx200_acb.c:290:
+^I^I^I^Ichar rw, u8 command, int size, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: drivers/i2c/scx200_acb.c:301:
+^I    ^Ilen = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1149: FILE: drivers/i2c/scx200_acb.c:301:
+^I    ^Ilen = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1150: FILE: drivers/i2c/scx200_acb.c:302:
+^I    ^Ibuffer = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1150: FILE: drivers/i2c/scx200_acb.c:302:
+^I    ^Ibuffer = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: drivers/i2c/scx200_acb.c:303:
+^I    ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1151: FILE: drivers/i2c/scx200_acb.c:303:
+^I    ^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1160: FILE: drivers/i2c/scx200_acb.c:312:
+^I    ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1160: FILE: drivers/i2c/scx200_acb.c:312:
+^I    ^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1162: FILE: drivers/i2c/scx200_acb.c:314:
+^I    ^Ilen = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1162: FILE: drivers/i2c/scx200_acb.c:314:
+^I    ^Ilen = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1163: FILE: drivers/i2c/scx200_acb.c:315:
+^I    ^Ibuffer = &data->byte;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1163: FILE: drivers/i2c/scx200_acb.c:315:
+^I    ^Ibuffer = &data->byte;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1164: FILE: drivers/i2c/scx200_acb.c:316:
+^I    ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1164: FILE: drivers/i2c/scx200_acb.c:316:
+^I    ^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: drivers/i2c/scx200_acb.c:319:
+^I    ^Icur_word = cpu_to_le16(data->word);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1167: FILE: drivers/i2c/scx200_acb.c:319:
+^I    ^Icur_word = cpu_to_le16(data->word);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1168: FILE: drivers/i2c/scx200_acb.c:320:
+^I    ^Ibuffer = (u8 *)&cur_word;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1168: FILE: drivers/i2c/scx200_acb.c:320:
+^I    ^Ibuffer = (u8 *)&cur_word;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1171: FILE: drivers/i2c/scx200_acb.c:323:
+^I    ^Ilen = data->block[0];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1171: FILE: drivers/i2c/scx200_acb.c:323:
+^I    ^Ilen = data->block[0];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1172: FILE: drivers/i2c/scx200_acb.c:324:
+^I    ^Ibuffer = &data->block[1];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1172: FILE: drivers/i2c/scx200_acb.c:324:
+^I    ^Ibuffer = &data->block[1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1175: FILE: drivers/i2c/scx200_acb.c:327:
+^I    ^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1175: FILE: drivers/i2c/scx200_acb.c:327:
+^I    ^Ireturn -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1182: FILE: drivers/i2c/scx200_acb.c:334:
+^I^Iprintk(KERN_WARNING NAME ": %s, zero length read\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1182: FILE: drivers/i2c/scx200_acb.c:334:
+		printk(KERN_WARNING NAME ": %s, zero length read\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1188: FILE: drivers/i2c/scx200_acb.c:340:
+		printk(KERN_WARNING NAME ": %s, nonzero length but no buffer\n", adapter->name);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1194: FILE: drivers/i2c/scx200_acb.c:346:
+	iface->address_byte = address<<1;
 	                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/i2c/scx200_acb.c:367:
+#endif /* POLLED_MODE */^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1225: FILE: drivers/i2c/scx200_acb.c:377:
+^I    ^Idata->word = le16_to_cpu(cur_word);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1225: FILE: drivers/i2c/scx200_acb.c:377:
+^I    ^Idata->word = le16_to_cpu(cur_word);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1228: FILE: drivers/i2c/scx200_acb.c:380:
+	printk(KERN_DEBUG NAME ": transfer done, result: %d", rc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1231: FILE: drivers/i2c/scx200_acb.c:383:
+		int i;
+		printk(" data:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1231: FILE: drivers/i2c/scx200_acb.c:383:
+		printk(" data:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1233: FILE: drivers/i2c/scx200_acb.c:385:
+			printk(" %02x", buffer[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1235: FILE: drivers/i2c/scx200_acb.c:387:
+	printk("\n");

WARNING:INDENTED_LABEL: labels should not be indented
#1270: FILE: drivers/i2c/scx200_acb.c:422:
+	name:		"NatSemi SCx200 ACCESS.bus",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1271: FILE: drivers/i2c/scx200_acb.c:423:
+	id:		I2C_ALGO_SMBUS,
 	  ^

WARNING:INDENTED_LABEL: labels should not be indented
#1271: FILE: drivers/i2c/scx200_acb.c:423:
+	id:		I2C_ALGO_SMBUS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1272: FILE: drivers/i2c/scx200_acb.c:424:
+	smbus_xfer:	scx200_acb_smbus_xfer,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#1272: FILE: drivers/i2c/scx200_acb.c:424:
+	smbus_xfer:	scx200_acb_smbus_xfer,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1273: FILE: drivers/i2c/scx200_acb.c:425:
+	functionality:	scx200_acb_func,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#1273: FILE: drivers/i2c/scx200_acb.c:425:
+	functionality:	scx200_acb_func,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: drivers/i2c/scx200_acb.c:435:
+           frequency: 16 clock cycles */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1283: FILE: drivers/i2c/scx200_acb.c:435:
+	/* Disable the ACCESS.bus device and Configure the SCL
+           frequency: 16 clock cycles */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1283: FILE: drivers/i2c/scx200_acb.c:435:
+           frequency: 16 clock cycles */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1321: FILE: drivers/i2c/scx200_acb.c:473:
+		printk(KERN_ERR NAME ": can't allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1321: FILE: drivers/i2c/scx200_acb.c:473:
+	if (!iface) {
+		printk(KERN_ERR NAME ": can't allocate memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1341: FILE: drivers/i2c/scx200_acb.c:493:
+^I^Iprintk(KERN_ERR NAME ": %s, can't allocate io 0x%x-0x%x\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1341: FILE: drivers/i2c/scx200_acb.c:493:
+		printk(KERN_ERR NAME ": %s, can't allocate io 0x%x-0x%x\n", 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1342: FILE: drivers/i2c/scx200_acb.c:494:
+		       adapter->name, base, base + 8-1);
 		                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1350: FILE: drivers/i2c/scx200_acb.c:502:
+		printk(KERN_WARNING NAME ": %s, probe failed\n", adapter->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1357: FILE: drivers/i2c/scx200_acb.c:509:
+		printk(KERN_ERR NAME ": %s, failed to register\n", adapter->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1383: FILE: drivers/i2c/scx200_acb.c:535:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 ACCESS.bus Driver\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1404: FILE: drivers/i2c/scx200_acb.c:556:
+	struct scx200_acb_iface *iface;
+	lock_kernel();

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1421: FILE: drivers/i2c/scx200_acb.c:573:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1422: FILE: drivers/i2c/scx200_acb.c:574:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/i2c modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1423: FILE: drivers/i2c/scx200_acb.c:575:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1431: FILE: drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1431: FILE: drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1431: FILE: drivers/i2c/scx200_i2c.c:1:
+/* linux/drivers/i2c/scx200_i2c.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1432: FILE: drivers/i2c/scx200_i2c.c:2:
+/* linux/drivers/i2c/scx200_i2c.c 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1443: FILE: drivers/i2c/scx200_i2c.c:13:
+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1448: FILE: drivers/i2c/scx200_i2c.c:18:
+   $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1450: FILE: drivers/i2c/scx200_i2c.c:20:
+   along with this program; if not, write to the Free Software$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1451: FILE: drivers/i2c/scx200_i2c.c:21:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1451: FILE: drivers/i2c/scx200_i2c.c:21:
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1461: FILE: drivers/i2c/scx200_i2c.c:31:
+#include <asm/io.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1487: FILE: drivers/i2c/scx200_i2c.c:57:
+} $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1545: FILE: drivers/i2c/scx200_i2c.c:115:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 I2C Driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1548: FILE: drivers/i2c/scx200_i2c.c:118:
+		printk(KERN_ERR NAME ": no SCx200 gpio pins available\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1552: FILE: drivers/i2c/scx200_i2c.c:122:
+^Iprintk(KERN_DEBUG NAME ": SCL=GPIO%02u, SDA=GPIO%02u\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1552: FILE: drivers/i2c/scx200_i2c.c:122:
+	printk(KERN_DEBUG NAME ": SCL=GPIO%02u, SDA=GPIO%02u\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1556: FILE: drivers/i2c/scx200_i2c.c:126:
+		printk(KERN_ERR NAME ": scl and sda must be specified\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1565: FILE: drivers/i2c/scx200_i2c.c:135:
+^I^Iprintk(KERN_ERR NAME ": adapter %s registration failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1565: FILE: drivers/i2c/scx200_i2c.c:135:
+		printk(KERN_ERR NAME ": adapter %s registration failed\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1569: FILE: drivers/i2c/scx200_i2c.c:139:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1582: FILE: drivers/i2c/scx200_i2c.c:152:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1583: FILE: drivers/i2c/scx200_i2c.c:153:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/i2c modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1584: FILE: drivers/i2c/scx200_i2c.c:154:
+        c-basic-offset: 8$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1631: FILE: drivers/mtd/maps/scx200_docflash.c:1:
+/* linux/drivers/mtd/maps/scx200_docflash.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1631: FILE: drivers/mtd/maps/scx200_docflash.c:1:
+/* linux/drivers/mtd/maps/scx200_docflash.c 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1631: FILE: drivers/mtd/maps/scx200_docflash.c:1:
+/* linux/drivers/mtd/maps/scx200_docflash.c 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1632: FILE: drivers/mtd/maps/scx200_docflash.c:2:
+/* linux/drivers/mtd/maps/scx200_docflash.c 
+

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1642: FILE: drivers/mtd/maps/scx200_docflash.c:12:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1668: FILE: drivers/mtd/maps/scx200_docflash.c:38:
+static int probe = 0;		/* Don't autoprobe */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1669: FILE: drivers/mtd/maps/scx200_docflash.c:39:
+static unsigned size = 0x1000000; /* 16 MB the whole ISA address space */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1670: FILE: drivers/mtd/maps/scx200_docflash.c:40:
+static unsigned width = 8;	/* Default to 8 bits wide */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1682: FILE: drivers/mtd/maps/scx200_docflash.c:52:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1683: FILE: drivers/mtd/maps/scx200_docflash.c:53:
+^I^I.name   = "DOCCS Boot kernel", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1684: FILE: drivers/mtd/maps/scx200_docflash.c:54:
+^I^I.offset = 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1687: FILE: drivers/mtd/maps/scx200_docflash.c:57:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1688: FILE: drivers/mtd/maps/scx200_docflash.c:58:
+^I^I.name   = "DOCCS Low BIOS", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1689: FILE: drivers/mtd/maps/scx200_docflash.c:59:
+^I^I.offset = 0xc0000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1692: FILE: drivers/mtd/maps/scx200_docflash.c:62:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1693: FILE: drivers/mtd/maps/scx200_docflash.c:63:
+^I^I.name   = "DOCCS File system", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1694: FILE: drivers/mtd/maps/scx200_docflash.c:64:
+^I^I.offset = 0x100000, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1697: FILE: drivers/mtd/maps/scx200_docflash.c:67:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1698: FILE: drivers/mtd/maps/scx200_docflash.c:68:
+^I^I.name   = "DOCCS High BIOS", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1699: FILE: drivers/mtd/maps/scx200_docflash.c:69:
+^I^I.offset = ~0, ^I/* calculate from flash size */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1703: FILE: drivers/mtd/maps/scx200_docflash.c:73:
+};
+#define NUM_PARTITIONS (sizeof(partition_info)/sizeof(partition_info[0]))

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(partition_info)
#1703: FILE: drivers/mtd/maps/scx200_docflash.c:73:
+#define NUM_PARTITIONS (sizeof(partition_info)/sizeof(partition_info[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1703: FILE: drivers/mtd/maps/scx200_docflash.c:73:
+#define NUM_PARTITIONS (sizeof(partition_info)/sizeof(partition_info[0]))
                                               ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1716: FILE: drivers/mtd/maps/scx200_docflash.c:86:
+static void scx200_docflash_copy_from(struct map_info *map, void *to, unsigned long from, ssize_t len)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:MEMORY_BARRIER: memory barrier without comment
#1724: FILE: drivers/mtd/maps/scx200_docflash.c:94:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1730: FILE: drivers/mtd/maps/scx200_docflash.c:100:
+	mb();

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1733: FILE: drivers/mtd/maps/scx200_docflash.c:103:
+static void scx200_docflash_copy_to(struct map_info *map, unsigned long to, const void *from, ssize_t len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1750: FILE: drivers/mtd/maps/scx200_docflash.c:120:
+	unsigned u;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1751: FILE: drivers/mtd/maps/scx200_docflash.c:121:
+	unsigned base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1752: FILE: drivers/mtd/maps/scx200_docflash.c:122:
+	unsigned ctrl;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1753: FILE: drivers/mtd/maps/scx200_docflash.c:123:
+	unsigned pmr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1756: FILE: drivers/mtd/maps/scx200_docflash.c:126:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 DOCCS Flash Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1758: FILE: drivers/mtd/maps/scx200_docflash.c:128:
+^Iif ((bridge = pci_find_device(PCI_VENDOR_ID_NS, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1758: FILE: drivers/mtd/maps/scx200_docflash.c:128:
+	if ((bridge = pci_find_device(PCI_VENDOR_ID_NS, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1762: FILE: drivers/mtd/maps/scx200_docflash.c:132:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1764: FILE: drivers/mtd/maps/scx200_docflash.c:134:
+		printk(KERN_WARNING NAME ": no configuration block found\n");

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_DOCCS_BASE>
#1770: FILE: drivers/mtd/maps/scx200_docflash.c:140:
+		pci_read_config_dword(bridge, SCx200_DOCCS_BASE, &base);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_DOCCS_CTRL>
#1771: FILE: drivers/mtd/maps/scx200_docflash.c:141:
+		pci_read_config_dword(bridge, SCx200_DOCCS_CTRL, &ctrl);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_PMR>
#1772: FILE: drivers/mtd/maps/scx200_docflash.c:142:
+		pmr = inl(SCx200_CB_BASE + SCx200_PMR);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1775: FILE: drivers/mtd/maps/scx200_docflash.c:145:
+		if (base == 0
+		    || (ctrl & 0x07000000) != 0x07000000

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1776: FILE: drivers/mtd/maps/scx200_docflash.c:146:
+		    || (ctrl & 0x07000000) != 0x07000000
+		    || (ctrl & 0x0007ffff) == 0)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1779: FILE: drivers/mtd/maps/scx200_docflash.c:149:
+		size = ((ctrl&0x1fff)<<13) + (1<<13);
 		             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1779: FILE: drivers/mtd/maps/scx200_docflash.c:149:
+		size = ((ctrl&0x1fff)<<13) + (1<<13);
 		                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1779: FILE: drivers/mtd/maps/scx200_docflash.c:149:
+		size = ((ctrl&0x1fff)<<13) + (1<<13);
 		                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1786: FILE: drivers/mtd/maps/scx200_docflash.c:156:
+		if (pmr & (1<<6))
 		            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1795: FILE: drivers/mtd/maps/scx200_docflash.c:165:
+			printk(KERN_ERR NAME ": unable to allocate memory for flash mapping\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1802: FILE: drivers/mtd/maps/scx200_docflash.c:172:
+			printk(KERN_ERR NAME ": invalid size for flash mapping\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1805: FILE: drivers/mtd/maps/scx200_docflash.c:175:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1807: FILE: drivers/mtd/maps/scx200_docflash.c:177:
+			printk(KERN_ERR NAME ": invalid bus width for flash mapping\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1810: FILE: drivers/mtd/maps/scx200_docflash.c:180:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1811: FILE: drivers/mtd/maps/scx200_docflash.c:181:
+^I^Iif (allocate_resource(&iomem_resource, &docmem, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1813: FILE: drivers/mtd/maps/scx200_docflash.c:183:
+^I^I^I^I      0xc0000000, 0xffffffff, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1815: FILE: drivers/mtd/maps/scx200_docflash.c:185:
+			printk(KERN_ERR NAME ": unable to allocate memory for flash mapping\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1818: FILE: drivers/mtd/maps/scx200_docflash.c:188:
+^I^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1819: FILE: drivers/mtd/maps/scx200_docflash.c:189:
+		ctrl = 0x07000000 | ((size-1) >> 13);
 		                          ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1821: FILE: drivers/mtd/maps/scx200_docflash.c:191:
+		printk(KERN_INFO "DOCCS BASE=0x%08lx, CTRL=0x%08lx\n", (long)docmem.start, (long)ctrl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1821: FILE: drivers/mtd/maps/scx200_docflash.c:191:
+		printk(KERN_INFO "DOCCS BASE=0x%08lx, CTRL=0x%08lx\n", (long)docmem.start, (long)ctrl);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1822: FILE: drivers/mtd/maps/scx200_docflash.c:192:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1826: FILE: drivers/mtd/maps/scx200_docflash.c:196:
+^I^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1827: FILE: drivers/mtd/maps/scx200_docflash.c:197:
+		if (width == 8) {
[...]
+		} else {
[...]

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1828: FILE: drivers/mtd/maps/scx200_docflash.c:198:
+			pmr &= ~(1<<6);
 			          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1830: FILE: drivers/mtd/maps/scx200_docflash.c:200:
+			pmr |= (1<<6);
 			         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1834: FILE: drivers/mtd/maps/scx200_docflash.c:204:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1835: FILE: drivers/mtd/maps/scx200_docflash.c:205:
+       ^Iprintk(KERN_INFO NAME ": DOCCS mapped at 0x%lx-0x%lx, width %d\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1835: FILE: drivers/mtd/maps/scx200_docflash.c:205:
+       ^Iprintk(KERN_INFO NAME ": DOCCS mapped at 0x%lx-0x%lx, width %d\n", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1835: FILE: drivers/mtd/maps/scx200_docflash.c:205:
+       ^Iprintk(KERN_INFO NAME ": DOCCS mapped at 0x%lx-0x%lx, width %d\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1835: FILE: drivers/mtd/maps/scx200_docflash.c:205:
+       ^Iprintk(KERN_INFO NAME ": DOCCS mapped at 0x%lx-0x%lx, width %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1835: FILE: drivers/mtd/maps/scx200_docflash.c:205:
+       	printk(KERN_INFO NAME ": DOCCS mapped at 0x%lx-0x%lx, width %d\n", 

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1844: FILE: drivers/mtd/maps/scx200_docflash.c:214:
+	scx200_docflash_map.map_priv_1 = (unsigned long)ioremap(docmem.start, scx200_docflash_map.size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1846: FILE: drivers/mtd/maps/scx200_docflash.c:216:
+		printk(KERN_ERR NAME ": failed to ioremap the flash\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1853: FILE: drivers/mtd/maps/scx200_docflash.c:223:
+		printk(KERN_ERR NAME ": unable to detect flash\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1860: FILE: drivers/mtd/maps/scx200_docflash.c:230:
+		printk(KERN_WARNING NAME ": warning, flash mapping is smaller than flash size\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1865: FILE: drivers/mtd/maps/scx200_docflash.c:235:
+	partition_info[3].offset = mymtd->size-partition_info[3].size;
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1866: FILE: drivers/mtd/maps/scx200_docflash.c:236:
+	partition_info[2].size = partition_info[3].offset-partition_info[2].offset;
 	                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1894: FILE: drivers/mtd/maps/scx200_docflash.c:264:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1895: FILE: drivers/mtd/maps/scx200_docflash.c:265:
+        compile-command: "make -k -C ../../.. SUBDIRS=drivers/mtd/maps modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1896: FILE: drivers/mtd/maps/scx200_docflash.c:266:
+        c-basic-offset: 8$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1919: FILE: include/linux/scx200.h:1:
+/* linux/include/linux/scx200.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1919: FILE: include/linux/scx200.h:1:
+/* linux/include/linux/scx200.h

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1920: FILE: include/linux/scx200.h:2:
+/* linux/include/linux/scx200.h
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1945: FILE: include/linux/scx200.h:27:
+#define SCx200_WDT_WDSTS_WDOVF (1<<0) /* Overflow bit */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1945: FILE: include/linux/scx200.h:27:
+#define SCx200_WDT_WDSTS_WDOVF (1<<0) /* Overflow bit */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_TIMER_OFFSET>
#1948: FILE: include/linux/scx200.h:30:
+#define SCx200_TIMER_OFFSET 0x08

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_TIMER_SIZE>
#1949: FILE: include/linux/scx200.h:31:
+#define SCx200_TIMER_SIZE 0x05

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CLOCKGEN_OFFSET>
#1952: FILE: include/linux/scx200.h:34:
+#define SCx200_CLOCKGEN_OFFSET 0x10

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CLOCKGEN_SIZE>
#1953: FILE: include/linux/scx200.h:35:
+#define SCx200_CLOCKGEN_SIZE 0x10

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MISC_OFFSET>
#1956: FILE: include/linux/scx200.h:38:
+#define SCx200_MISC_OFFSET 0x30

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MISC_SIZE>
#1957: FILE: include/linux/scx200.h:39:
+#define SCx200_MISC_SIZE 0x10

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MCR>
#1960: FILE: include/linux/scx200.h:42:
+#define SCx200_MCR 0x34		/* Miscellaneous Configuration Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_INTSEL>
#1961: FILE: include/linux/scx200.h:43:
+#define SCx200_INTSEL 0x38	/* Interrupt Selection Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_IID>
#1962: FILE: include/linux/scx200.h:44:
+#define SCx200_IID 0x3c		/* IA On a Chip Identification Number Reg */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_REV>
#1963: FILE: include/linux/scx200.h:45:
+#define SCx200_REV 0x3d		/* Revision Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CBA>
#1964: FILE: include/linux/scx200.h:46:
+#define SCx200_CBA 0x3e		/* Configuration Base Address Register */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#1967: FILE: include/linux/scx200.h:49:
+#define scx200_cb_probe(base) (inw((base) + SCx200_CBA) == (base))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1970: FILE: include/linux/scx200.h:52:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1971: FILE: include/linux/scx200.h:53:
+        compile-command: "make -C ../.. bzImage modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1972: FILE: include/linux/scx200.h:54:
+        c-basic-offset: 8$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1979: FILE: include/linux/scx200_gpio.h:1:
+#include <linux/spinlock.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1982: FILE: include/linux/scx200_gpio.h:4:
+void scx200_gpio_dump(unsigned index);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1984: FILE: include/linux/scx200_gpio.h:6:
+extern unsigned scx200_gpio_base;

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1988: FILE: include/linux/scx200_gpio.h:10:
+#define scx200_gpio_present() (scx200_gpio_base!=0)
                                                ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1991: FILE: include/linux/scx200_gpio.h:13:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1991: FILE: include/linux/scx200_gpio.h:13:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5
                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_BANK>
#1991: FILE: include/linux/scx200_gpio.h:13:
+#define __SCx200_GPIO_BANK unsigned bank = index>>5

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1992: FILE: include/linux/scx200_gpio.h:14:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank
                                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1992: FILE: include/linux/scx200_gpio.h:14:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank
                                                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_IOADDR>
#1992: FILE: include/linux/scx200_gpio.h:14:
+#define __SCx200_GPIO_IOADDR unsigned short ioaddr = scx200_gpio_base+0x10*bank

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1993: FILE: include/linux/scx200_gpio.h:15:
+#define __SCx200_GPIO_SHADOW long *shadow = scx200_gpio_shadow+bank
                                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_SHADOW>
#1993: FILE: include/linux/scx200_gpio.h:15:
+#define __SCx200_GPIO_SHADOW long *shadow = scx200_gpio_shadow+bank

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_INDEX>
#1994: FILE: include/linux/scx200_gpio.h:16:
+#define __SCx200_GPIO_INDEX index &= 31

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1994: FILE: include/linux/scx200_gpio.h:16:
+#define __SCx200_GPIO_INDEX index &= 31

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1996: FILE: include/linux/scx200_gpio.h:18:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))
                                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1996: FILE: include/linux/scx200_gpio.h:18:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))
                                                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <__SCx200_GPIO_OUT>
#1996: FILE: include/linux/scx200_gpio.h:18:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1996: FILE: include/linux/scx200_gpio.h:18:
+#define __SCx200_GPIO_OUT __asm__ __volatile__("outsl":"=mS" (shadow):"d" (ioaddr), "0" (shadow))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2000: FILE: include/linux/scx200_gpio.h:22:
+static inline int scx200_gpio_get(int index) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2004: FILE: include/linux/scx200_gpio.h:26:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2005: FILE: include/linux/scx200_gpio.h:27:
+	return (inl(ioaddr) & (1<<index)) ? 1 : 0;
 	                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2009: FILE: include/linux/scx200_gpio.h:31:
+/* return the value driven on the GPIO signal (the value that will be
+   driven if the GPIO is configured as an output, it might not be the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2010: FILE: include/linux/scx200_gpio.h:32:
+   state of the GPIO right now if the GPIO is configured as an input) */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2012: FILE: include/linux/scx200_gpio.h:34:
+static inline int scx200_gpio_current(int index) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2013: FILE: include/linux/scx200_gpio.h:35:
+        __SCx200_GPIO_BANK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2013: FILE: include/linux/scx200_gpio.h:35:
+        __SCx200_GPIO_BANK;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2015: FILE: include/linux/scx200_gpio.h:37:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2016: FILE: include/linux/scx200_gpio.h:38:
+	return (scx200_gpio_shadow[bank] & (1<<index)) ? 1 : 0;
 	                                     ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2021: FILE: include/linux/scx200_gpio.h:43:
+static inline void scx200_gpio_set_high(int index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2032: FILE: include/linux/scx200_gpio.h:54:
+static inline void scx200_gpio_set_low(int index) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2043: FILE: include/linux/scx200_gpio.h:65:
+static inline void scx200_gpio_set(int index, int state) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#2056: FILE: include/linux/scx200_gpio.h:78:
+static inline void scx200_gpio_change(int index) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2072: FILE: include/linux/scx200_gpio.h:94:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#2073: FILE: include/linux/scx200_gpio.h:95:
+        compile-command: "make -C ../.. bzImage modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2074: FILE: include/linux/scx200_gpio.h:96:
+        c-basic-offset: 8$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 159 errors, 233 warnings, 65 checks, 1893 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
