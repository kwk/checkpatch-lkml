WARNING:TYPO_SPELLING: 'overrideable' may be misspelled - perhaps 'overridable'?
#59: 
>>The default_pagecache_policy is overrideable on a per process basis, so
                                  ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#81: 
>arbitary files. Even in this case a global default would be useful.
 ^^^^^^^^

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#94: 
patch, I will reply to your points seperately. Sorry I haven't replied 
                                   ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#156: 
diff -Nuar -X /home/stevel/dontdiff 2.6.8-rc3.orig/fs/exec.c 2.6.8-rc3/fs/exec.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: fs/exec.c:445:
+				struct page * new_page =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: fs/inode.c:153:
+ ^I^Impol_shared_policy_init(&mapping->policy);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: fs/inode.c:153:
+ ^I^Impol_shared_policy_init(&mapping->policy);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: fs/inode.c:153:
+ ^I^Impol_shared_policy_init(&mapping->policy);$

CHECK:BRACES: Unbalanced braces around else statement
#201: FILE: fs/inode.c:181:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: include/linux/mempolicy.h:155:
+struct page *alloc_page_shared_policy(unsigned gfp, struct shared_policy *sp,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#250: FILE: include/linux/pagemap.h:53:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#270: FILE: include/linux/pagemap.h:70:
+	return __page_cache_alloc(x, idx, mapping_gfp_mask(x)|__GFP_COLD);
 	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: mm/filemap.c:1074:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: mm/filemap.c:1095:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: mm/filemap.c:1198:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#374: FILE: mm/filemap.c:1468:
 
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#380: FILE: mm/filemap.c:1474:
+	struct address_space *mapping = vma->vm_file->f_mapping;
+	return mpol_set_shared_policy(&mapping->policy, vma, new);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: mm/filemap.c:1483:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#395: FILE: mm/filemap.c:1489:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: mm/mempolicy.c:641:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#439: FILE: mm/mempolicy.c:687:
 
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#448: FILE: mm/mempolicy.c:1009:
+alloc_page_shared_policy(unsigned gfp, struct shared_policy *sp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: mm/mempolicy.c:1013:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248144.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 9 warnings, 8 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248144.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
