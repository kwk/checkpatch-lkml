ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/drivers/input/keyboard/atkbd.c	2002-12-08 20:06:16.000000000 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#43: FILE: drivers/input/keyboard/atkbd.c:449:
+static struct atkbd *atkbd_blinkdev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#44: FILE: drivers/input/keyboard/atkbd.c:450:
+int atkbd_blink(char led) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#46: FILE: drivers/input/keyboard/atkbd.c:452:
+	char param[2] = "\0\0";
+	led = led ? (0x01 | 0x04) : 0x00;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!atkbd_blinkdev"
#49: FILE: drivers/input/keyboard/atkbd.c:455:
+	if (atkbd_blinkdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/panic.c:38:
+ extern int atkbd_blink(char led);^I/* drivers/input/keyboards/atkbd.c */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: kernel/panic.c:48:
+^I055, 0155, 0, 0, 0163, 0141, 0152, 0051, ^I^I/* ()*+,-./ */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: kernel/panic.c:50:
+^I0107, 0125, 0, 0061, 0, 0114, 0, ^I^I^I/* :;<=>?@ */$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#140: FILE: kernel/panic.c:57:
+static inline unsigned char tomorse(char c) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#143: FILE: kernel/panic.c:60:
+	if (c >= '"' && c <= '_') {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#145: FILE: kernel/panic.c:62:
+	} else

WARNING:TYPO_SPELLING: 'distingush' may be misspelled - perhaps 'distinguish'?
#156: FILE: kernel/panic.c:73:
+ *  we have panic'd.  This is to distingush panics from "real lockups."
                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: kernel/panic.c:85:
+{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#169: FILE: kernel/panic.c:86:
+	static unsigned long next_jiffie = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#170: FILE: kernel/panic.c:87:
+	static char * bufpos = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: kernel/panic.c:87:
+	static char * bufpos = 0;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#171: FILE: kernel/panic.c:88:
+	static unsigned char morse = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: kernel/panic.c:90:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: kernel/panic.c:91:
+^Iif (!morse_setting) $

CHECK:SPACING: No space is necessary after a cast
#198: FILE: kernel/panic.c:115:
+				bufpos = (char *) buf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#202: FILE: kernel/panic.c:119:
+				bufpos = (char *) buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/panic.c:123:
+^I^I^I^Inext_jiffie = jiffies + DAHLEN; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#209: FILE: kernel/panic.c:126:
+			if (!(morse = tomorse(*bufpos))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: kernel/panic.c:156:
+^Iif (get_option(&str, &par)) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#239: FILE: kernel/panic.c:156:
+	int par;
+	if (get_option(&str, &par)) 

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#250: FILE: kernel/panic.c:167:
+__setup("panicmorse=", panicmorse_setup);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396570.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 7 warnings, 5 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396570.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
