WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#55: FILE: include/linux/videodev.h:7:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: include/linux/videodev.h:12:
+ */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: include/linux/videodev.h:27:
+    ^Ichar name[32];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: include/linux/videodev.h:27:
+    ^Ichar name[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: include/linux/videodev.h:27:
+    ^Ichar name[32];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: include/linux/videodev.h:40:
+^Iint (*initialize)(struct video_device *);       $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct video_device *' should also have an identifier name
#94: FILE: include/linux/videodev.h:40:
+	int (*initialize)(struct video_device *);       

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: include/linux/videodev.h:46:
+	 * ioctl arguments */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CONST_STRUCT: struct file_operations should normally be const
#101: FILE: include/linux/videodev.h:47:
+	struct file_operations *fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#114: FILE: include/linux/videodev.h:66:
+extern struct video_device* video_devdata(struct file*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#114: FILE: include/linux/videodev.h:66:
+extern struct video_device* video_devdata(struct file*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/linux/videodev.h:66:
+extern struct video_device* video_devdata(struct file*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file*' should also have an identifier name
#114: FILE: include/linux/videodev.h:66:
+extern struct video_device* video_devdata(struct file*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/videodev.h:68:
+extern int video_generic_ioctl(struct inode *inode, struct file *file,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: drivers/media/video/skeleton.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#200: FILE: drivers/media/video/skeleton.c:36:
+	 * handles apart and decorate the debug printk's a bit */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/media/video/skeleton.c:37:
+^Iint                  cookie; $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#208: FILE: drivers/media/video/skeleton.c:44:
+static unsigned int exclusive = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/media/video/skeleton.c:47:
+MODULE_PARM(debug,"i");
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: drivers/media/video/skeleton.c:48:
+MODULE_PARM_DESC(debug,"enable debug messages (default: on)");
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/media/video/skeleton.c:49:
+MODULE_PARM(exclusive,"i");
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: drivers/media/video/skeleton.c:50:
+MODULE_PARM_DESC(exclusive,"only one process can open the device (default: off)");
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: drivers/media/video/skeleton.c:51:
+MODULE_PARM(video_nr,"i");
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: drivers/media/video/skeleton.c:52:
+MODULE_PARM_DESC(video_nr,"device number");
                          ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#222: FILE: drivers/media/video/skeleton.c:58:
+#define dprintk(fmt, arg...)	if (debug) \
+	printk(KERN_DEBUG DEVNAME ": " fmt, ## arg)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#223: FILE: drivers/media/video/skeleton.c:59:
+	printk(KERN_DEBUG DEVNAME ": " fmt, ## arg)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#233: FILE: drivers/media/video/skeleton.c:69:
+	struct device_data *h,*dev = NULL;
 	                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#233: FILE: drivers/media/video/skeleton.c:69:
+	struct device_data *h,*dev = NULL;
 	                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: drivers/media/video/skeleton.c:72:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: drivers/media/video/skeleton.c:73:
+	dprintk("open: looking for my device [minor=%d]\n",minor);
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#239: FILE: drivers/media/video/skeleton.c:75:
+	list_for_each(list,&skeldev) {
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#239: FILE: drivers/media/video/skeleton.c:75:
+	list_for_each(list,&skeldev) {
 	                   ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#244: FILE: drivers/media/video/skeleton.c:80:
+	if (NULL == dev)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: drivers/media/video/skeleton.c:82:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#248: FILE: drivers/media/video/skeleton.c:84:
+	dprintk("open: device found (%d users)\n",dev->users);
 	                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/media/video/skeleton.c:90:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#256: FILE: drivers/media/video/skeleton.c:92:
+	fh = kmalloc(sizeof(*fh),GFP_KERNEL);
 	                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#257: FILE: drivers/media/video/skeleton.c:93:
+	if (NULL == fh)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/media/video/skeleton.c:96:
+	memset(fh,0,sizeof(*fh));
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/media/video/skeleton.c:96:
+	memset(fh,0,sizeof(*fh));
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: drivers/media/video/skeleton.c:101:
+		dev->vdev.minor,fh->cookie);
 		               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/media/video/skeleton.c:104:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/media/video/skeleton.c:104:
+        return 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: drivers/media/video/skeleton.c:113:
+		dev->vdev.minor,fh->cookie);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#291: FILE: drivers/media/video/skeleton.c:127:
+		dev->vdev.minor,fh->cookie);
 		               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: drivers/media/video/skeleton.c:132:
+skeleton_mmap(struct file *file, struct vm_area_struct * vma)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#302: FILE: drivers/media/video/skeleton.c:138:
+		dev->vdev.minor,fh->cookie);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/media/video/skeleton.c:154:
+		dev->vdev.minor,fh->cookie,cmd,arg);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/media/video/skeleton.c:154:
+		dev->vdev.minor,fh->cookie,cmd,arg);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: drivers/media/video/skeleton.c:154:
+		dev->vdev.minor,fh->cookie,cmd,arg);
 		                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/media/video/skeleton.c:158:
+                struct video_capability *cap = arg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/media/video/skeleton.c:158:
+                struct video_capability *cap = arg;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: drivers/media/video/skeleton.c:159:
+		memset(cap,0,sizeof(*cap));
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: drivers/media/video/skeleton.c:159:
+		memset(cap,0,sizeof(*cap));
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: drivers/media/video/skeleton.c:160:
+		strcpy(cap->name,dev->vdev.name);
 		                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: drivers/media/video/skeleton.c:161:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/media/video/skeleton.c:161:
+                return 0;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#335: FILE: drivers/media/video/skeleton.c:171:
+static struct file_operations skeleton_fops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#336: FILE: drivers/media/video/skeleton.c:172:
+static struct file_operations skeleton_fops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#337: FILE: drivers/media/video/skeleton.c:173:
+	owner:	  THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#338: FILE: drivers/media/video/skeleton.c:174:
+	open:	  skeleton_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#338: FILE: drivers/media/video/skeleton.c:174:
+	open:	  skeleton_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#339: FILE: drivers/media/video/skeleton.c:175:
+	release:  skeleton_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#339: FILE: drivers/media/video/skeleton.c:175:
+	release:  skeleton_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#340: FILE: drivers/media/video/skeleton.c:176:
+	read:	  skeleton_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#340: FILE: drivers/media/video/skeleton.c:176:
+	read:	  skeleton_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#341: FILE: drivers/media/video/skeleton.c:177:
+	mmap:	  skeleton_mmap,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#341: FILE: drivers/media/video/skeleton.c:177:
+	mmap:	  skeleton_mmap,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#342: FILE: drivers/media/video/skeleton.c:178:
+	ioctl:	  video_generic_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#342: FILE: drivers/media/video/skeleton.c:178:
+	ioctl:	  video_generic_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#343: FILE: drivers/media/video/skeleton.c:179:
+	llseek:   no_llseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#343: FILE: drivers/media/video/skeleton.c:179:
+	llseek:   no_llseek,

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#347: FILE: drivers/media/video/skeleton.c:183:
+static struct video_device skeleton_template =
+{

WARNING:INDENTED_LABEL: labels should not be indented
#348: FILE: drivers/media/video/skeleton.c:184:
+	name:          "undef",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#351: FILE: drivers/media/video/skeleton.c:187:
+	fops:          &skeleton_fops,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#351: FILE: drivers/media/video/skeleton.c:187:
+	fops:          &skeleton_fops,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#352: FILE: drivers/media/video/skeleton.c:188:
+	kernel_ioctl:  skeleton_ioctl,
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#352: FILE: drivers/media/video/skeleton.c:188:
+	kernel_ioctl:  skeleton_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#353: FILE: drivers/media/video/skeleton.c:189:
+	minor:         -1,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#353: FILE: drivers/media/video/skeleton.c:189:
+	minor:         -1,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/media/video/skeleton.c:199:
+	dev = kmalloc(sizeof(*dev),GFP_KERNEL);
 	                          ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#364: FILE: drivers/media/video/skeleton.c:200:
+	if (NULL == dev)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: drivers/media/video/skeleton.c:202:
+	memset(dev,0,sizeof(*dev));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: drivers/media/video/skeleton.c:202:
+	memset(dev,0,sizeof(*dev));
 	            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/media/video/skeleton.c:203:
+        init_MUTEX(&dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/media/video/skeleton.c:203:
+        init_MUTEX(&dev->lock);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: drivers/media/video/skeleton.c:210:
+	err = video_register_device(&dev->vdev,VFL_TYPE_GRABBER,video_nr);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: drivers/media/video/skeleton.c:210:
+	err = video_register_device(&dev->vdev,VFL_TYPE_GRABBER,video_nr);
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#379: FILE: drivers/media/video/skeleton.c:215:
+	list_add_tail(&dev->devlist,&skeldev);
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#379: FILE: drivers/media/video/skeleton.c:215:
+	list_add_tail(&dev->devlist,&skeldev);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: drivers/media/video/skeleton.c:216:
+	dprintk("registered device %s [minor=%d]\n",name,dev->vdev.minor);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: drivers/media/video/skeleton.c:216:
+	dprintk("registered device %s [minor=%d]\n",name,dev->vdev.minor);
 	                                                ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#455: FILE: drivers/media/video/videodev.c:94:
+struct video_device* video_devdata(struct file *file)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#478: FILE: drivers/media/video/videodev.c:141:
+		struct file_operations *old_fops;

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: drivers/media/video/videodev.c:145:
+                file->f_op = fops_get(vfl->fops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/media/video/videodev.c:145:
+                file->f_op = fops_get(vfl->fops);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: drivers/media/video/videodev.c:146:
+                if(file->f_op->open)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/media/video/videodev.c:146:
+                if(file->f_op->open)$

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: drivers/media/video/videodev.c:146:
+                if(file->f_op->open)

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: drivers/media/video/videodev.c:147:
+                        err = file->f_op->open(inode,file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/media/video/videodev.c:147:
+                        err = file->f_op->open(inode,file);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#484: FILE: drivers/media/video/videodev.c:147:
+                        err = file->f_op->open(inode,file);
                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: drivers/media/video/videodev.c:148:
+                if (err) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/media/video/videodev.c:148:
+                if (err) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: drivers/media/video/videodev.c:149:
+                        fops_put(file->f_op);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/media/video/videodev.c:149:
+                        fops_put(file->f_op);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: drivers/media/video/videodev.c:150:
+                        file->f_op = fops_get(old_fops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/media/video/videodev.c:150:
+                        file->f_op = fops_get(old_fops);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: drivers/media/video/videodev.c:151:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/media/video/videodev.c:151:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: drivers/media/video/videodev.c:152:
+                fops_put(old_fops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/media/video/videodev.c:152:
+                fops_put(old_fops);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: drivers/media/video/videodev.c:153:
+                return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/media/video/videodev.c:153:
+                return err;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: drivers/media/video/videodev.c:247:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vfl->kernel_ioctl"
#538: FILE: drivers/media/video/videodev.c:248:
+	if (vfl->kernel_ioctl == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: drivers/media/video/videodev.c:263:
+			mbuf = kmalloc(_IOC_SIZE(cmd),GFP_KERNEL);
 			                             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#554: FILE: drivers/media/video/videodev.c:264:
+			if (NULL == mbuf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: drivers/media/video/videodev.c:268:
+^I^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#573: FILE: drivers/media/video/videodev.c:283:
+	switch (_IOC_DIR(cmd))
+	{

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#584: FILE: drivers/media/video/videodev.c:294:
+	if (mbuf)
+		kfree(mbuf);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#597: FILE: drivers/media/video/videodev.c:640:
+EXPORT_SYMBOL(video_generic_ioctl);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: Documentation/Configure.help:21279:
+  which can be inserted in and removed from the running kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: Documentation/Configure.help:21280:
+  whenever you want). If you want to compile it as a module, say M $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477988.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 42 warnings, 3 checks, 543 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477988.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
