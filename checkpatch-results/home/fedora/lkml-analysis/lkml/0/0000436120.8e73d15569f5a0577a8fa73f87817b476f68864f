WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
diff -Nru a/arch/sparc64/kernel/pci_sabre.c b/arch/sparc64/kernel/pci_sabre.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#46: 
--- a/arch/sparc64/kernel/pci_sabre.c	Fri Aug 30 13:59:47 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: arch/sparc64/kernel/pci_sabre.c:294:
+			printk("pci_read_config_word: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: arch/sparc64/kernel/pci_sabre.c:303:
+			printk("pci_read_config_dword: misaligned reg [%x]\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#209: FILE: arch/sparc64/kernel/pci_sabre.c:337:
+		if (where < 8) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#217: FILE: arch/sparc64/kernel/pci_sabre.c:345:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#222: FILE: arch/sparc64/kernel/pci_sabre.c:350:
+		if (where < 8)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#224: FILE: arch/sparc64/kernel/pci_sabre.c:352:
+			return __sabre_read(bus, devfn, where, 2, value);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#224: FILE: arch/sparc64/kernel/pci_sabre.c:352:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: arch/sparc64/kernel/pci_sabre.c:393:
+			printk("pci_write_config_word: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#321: FILE: arch/sparc64/kernel/pci_sabre.c:402:
+			printk("pci_write_config_dword: misaligned reg [%x]\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#372: FILE: arch/sparc64/kernel/pci_sabre.c:424:
+		if (where < 8) {
[...]
-	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#411: FILE: arch/sparc64/kernel/pci_sabre.c:436:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#415: FILE: arch/sparc64/kernel/pci_sabre.c:440:
+		if (where < 8)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#417: FILE: arch/sparc64/kernel/pci_sabre.c:442:
+			return __sabre_write(bus, devfn, where, 2, value);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#417: FILE: arch/sparc64/kernel/pci_sabre.c:442:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#585: FILE: arch/sparc64/kernel/pci_psycho.c:142:
+			printk("pci_read_config_word: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#594: FILE: arch/sparc64/kernel/pci_psycho.c:151:
+			printk("pci_read_config_dword: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#632: FILE: arch/sparc64/kernel/pci_psycho.c:182:
+			printk("pci_write_config_word: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#641: FILE: arch/sparc64/kernel/pci_psycho.c:191:
+			printk("pci_write_config_dword: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#794: FILE: arch/sparc64/kernel/pci_schizo.c:159:
+			printk("pci_read_config_word: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#803: FILE: arch/sparc64/kernel/pci_schizo.c:168:
+			printk("pci_read_config_dword: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#841: FILE: arch/sparc64/kernel/pci_schizo.c:199:
+			printk("pci_write_config_word: misaligned reg [%x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#850: FILE: arch/sparc64/kernel/pci_schizo.c:208:
+			printk("pci_write_config_dword: misaligned reg [%x]\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436120.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 15 warnings, 8 checks, 811 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436120.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
