CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#179: FILE: drivers/char/mxser.c:341:
+	spinlock_t slock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/char/mxser.c:421:
+static int mxser_block_til_ready(struct tty_struct *, struct file *,
+		struct mxser_port *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/char/mxser.c:426:
+static int mxser_get_serial_info(struct mxser_port *,
+		struct serial_struct __user *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/char/mxser.c:428:
+static int mxser_set_serial_info(struct mxser_port *,
+		struct serial_struct __user *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/char/mxser.c:433:
+static int mxser_tiocmset(struct tty_struct *, struct file *, unsigned int,
+		unsigned int);

CHECK:BRACES: braces {} should be used on all arms of this statement
#296: FILE: drivers/char/mxser.c:520:
+		if (mxser_boards[i].board_type == -1)
[...]
 		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#309: FILE: drivers/char/mxser.c:529:
+				release_region(mxser_boards[i].ports[0].ioaddr, 8 * mxser_boards[i].nports);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Unbalanced braces around else statement
#330: FILE: drivers/char/mxser.c:547:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <Gpci_uart_info>
#332: FILE: drivers/char/mxser.c:549:
+			if (info->board->chip_flag == Gpci_uart_info[i].type) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/char/mxser.c:598:
+		outb(inb(info->ioaddr + UART_IER) & 0xf0,
+			info->ioaddr + UART_IER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/char/mxser.c:605:
+	retval = request_irq(brd->irq, mxser_interrupt,
+			(brd->ports[0].flags & ASYNC_SHARE_IRQ) ? IRQF_SHARED :

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#431: FILE: drivers/char/mxser.c:608:
+		printk(KERN_ERR "Board %s: Request irq failed, IRQ (%d) may "

WARNING:SPLIT_STRING: quoted string split across lines
#432: FILE: drivers/char/mxser.c:609:
+		printk(KERN_ERR "Board %s: Request irq failed, IRQ (%d) may "
+			"conflict with another device.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: drivers/char/mxser.c:617:
+static int mxser_get_PCI_conf(int board_type, struct mxser_board *brd,
+		struct pci_dev *pdev)

CHECK:CAMELCASE: Avoid CamelCase: <CheckIsMoxaMust>
#483: FILE: drivers/char/mxser.c:641:
+	brd->chip_flag = CheckIsMoxaMust(brd->ports[0].ioaddr);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#652: FILE: drivers/char/mxser.c:807:
+		if (pdev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#675: FILE: drivers/char/mxser.c:828:
+			retval = mxser_get_PCI_conf(

CHECK:BRACES: braces {} should be used on all arms of this statement
#706: FILE: drivers/char/mxser.c:864:
+			if (mxser_boards[i].board_type == -1)
[...]
 			else {
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#766: FILE: drivers/char/mxser.c:1002:
 		printk(KERN_ERR "mxser_close: bad serial port count for "
+			"ttys%d: %d\n", tty->index, info->count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#980: FILE: drivers/char/mxser.c:1479:
+		return 0;*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <GMStatus>
#1017: FILE: drivers/char/mxser.c:1509:
+				GMStatus[i].ri = 0;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1042: FILE: drivers/char/mxser.c:1525:
+				if (status & 0x80 /*UART_MSR_DCD */ )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1051: FILE: drivers/char/mxser.c:1530:
+				if (status & 0x20 /*UART_MSR_DSR */ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1062: FILE: drivers/char/mxser.c:1536:
+				if (status & 0x10 /*UART_MSR_CTS */ )

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1077: FILE: drivers/char/mxser.c:1548:
+		unsigned cflag, iflag;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: drivers/char/mxser.c:1616:
+			if (copy_to_user(argp, &mon_data_ext,
+						sizeof(mon_data_ext)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1363: FILE: drivers/char/mxser.c:1864:
+		outb(inb(info->ioaddr + UART_LCR) | UART_LCR_SBC,
+			info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1368: FILE: drivers/char/mxser.c:1867:
+		outb(inb(info->ioaddr + UART_LCR) & ~UART_LCR_SBC,
+			info->ioaddr + UART_LCR);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!brd"
#1401: FILE: drivers/char/mxser.c:1897:
+	if (brd == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1477: FILE: drivers/char/mxser.c:1954:
+						mxser_receive_chars(port,
 								&status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1487: FILE: drivers/char/mxser.c:1962:
+						mxser_receive_chars(port,
 								&status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'recv_room == 0'
#1535: FILE: drivers/char/mxser.c:2004:
+	if ((recv_room == 0) && (!port->ldisc_stop_rx)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->ldisc_stop_rx'
#1535: FILE: drivers/char/mxser.c:2004:
+	if ((recv_room == 0) && (!port->ldisc_stop_rx)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1550: FILE: drivers/char/mxser.c:2017:
+		if (port->board->chip_flag == MOXA_MUST_MU860_HWID &&
 				(*status & MOXA_MUST_LSR_RERR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->type != PORT_16550A'
#1713: FILE: drivers/char/mxser.c:2147:
+	if (port->tty->stopped || (port->tty->hw_stopped &&
+			(port->type != PORT_16550A) &&
+			(!port->board->chip_flag))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->board->chip_flag'
#1713: FILE: drivers/char/mxser.c:2147:
+	if (port->tty->stopped || (port->tty->hw_stopped &&
+			(port->type != PORT_16550A) &&
+			(!port->board->chip_flag))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1714: FILE: drivers/char/mxser.c:2148:
+	if (port->tty->stopped || (port->tty->hw_stopped &&
+			(port->type != PORT_16550A) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1731: FILE: drivers/char/mxser.c:2159:
+		outb(port->xmit_buf[port->xmit_tail++],
+			port->ioaddr + UART_TX);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->type != PORT_16550A'
#1813: FILE: drivers/char/mxser.c:2210:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->board->chip_flag'
#1813: FILE: drivers/char/mxser.c:2210:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1814: FILE: drivers/char/mxser.c:2211:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: drivers/char/mxser.c:2213:
+					outb(port->IER & ~UART_IER_THRI,
+						port->ioaddr + UART_IER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1835: FILE: drivers/char/mxser.c:2225:
+				if (port->type != PORT_16550A &&
+						!port->board->chip_flag) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1846: FILE: drivers/char/mxser.c:2235:
+static int mxser_block_til_ready(struct tty_struct *tty, struct file *filp, struct mxser_port *port)
                                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1893: FILE: drivers/char/mxser.c:2275:
+		if (tty_hung_up_p(filp) || !(port->flags & ASYNC_INITIALIZED)) {
 		                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1902: FILE: drivers/char/mxser.c:2283:
+		if (!(port->flags & ASYNC_CLOSING) &&
 				(do_clocal ||

CHECK:SPACING: No space is necessary after a cast
#1973: FILE: drivers/char/mxser.c:2362:
+	(void) inb(info->ioaddr + UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#1974: FILE: drivers/char/mxser.c:2363:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:SPACING: No space is necessary after a cast
#1975: FILE: drivers/char/mxser.c:2364:
+	(void) inb(info->ioaddr + UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#1976: FILE: drivers/char/mxser.c:2365:
+	(void) inb(info->ioaddr + UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#2007: FILE: drivers/char/mxser.c:2389:
+	(void) inb(info->ioaddr + UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#2008: FILE: drivers/char/mxser.c:2390:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:SPACING: No space is necessary after a cast
#2009: FILE: drivers/char/mxser.c:2391:
+	(void) inb(info->ioaddr + UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#2010: FILE: drivers/char/mxser.c:2392:
+	(void) inb(info->ioaddr + UART_MSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2050: FILE: drivers/char/mxser.c:2451:
+		outb(UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT,
+			info->ioaddr + UART_FCR);

CHECK:SPACING: No space is necessary after a cast
#2054: FILE: drivers/char/mxser.c:2454:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2075: FILE: drivers/char/mxser.c:2474:
+static int mxser_change_speed(struct mxser_port *info,
+		struct termios *old_termios)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_16550A'
#2118: FILE: drivers/char/mxser.c:2625:
+		if ((info->type == PORT_16550A) || (info->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->board->chip_flag'
#2118: FILE: drivers/char/mxser.c:2625:
+		if ((info->type == PORT_16550A) || (info->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2287: FILE: drivers/char/mxser.c:2804:
+static int mxser_get_serial_info(struct mxser_port *info,
+		struct serial_struct __user *retinfo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2310: FILE: drivers/char/mxser.c:2827:
+static int mxser_set_serial_info(struct mxser_port *info,
+		struct serial_struct __user *new_info)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq != info->board->irq'
#2324: FILE: drivers/char/mxser.c:2838:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
 			(new_serial.custom_divisor != info->custom_divisor) ||
 			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.port != info->ioaddr'
#2324: FILE: drivers/char/mxser.c:2838:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
 			(new_serial.custom_divisor != info->custom_divisor) ||
 			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.custom_divisor != info->custom_divisor'
#2324: FILE: drivers/char/mxser.c:2838:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
 			(new_serial.custom_divisor != info->custom_divisor) ||
 			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base != info->baud_base'
#2324: FILE: drivers/char/mxser.c:2838:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
 			(new_serial.custom_divisor != info->custom_divisor) ||
 			(new_serial.baud_base != info->baud_base))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2325: FILE: drivers/char/mxser.c:2839:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||

CHECK:BRACES: Unbalanced braces around else statement
#2338: FILE: drivers/char/mxser.c:2875:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2351: FILE: drivers/char/mxser.c:2892:
+static int mxser_get_lsr_info(struct mxser_port *info,
+		unsigned int __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2380: FILE: drivers/char/mxser.c:2917:
+	outb(inb(info->ioaddr + UART_LCR) | UART_LCR_SBC,
+		info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2387: FILE: drivers/char/mxser.c:2922:
+	outb(inb(info->ioaddr + UART_LCR) & ~UART_LCR_SBC,
+		info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2413: FILE: drivers/char/mxser.c:2954:
+static int mxser_tiocmset(struct tty_struct *tty, struct file *file,
+		unsigned int set, unsigned int clear)

CHECK:SPACING: No space is necessary after a cast
#2504: FILE: drivers/char/mxser.c:3041:
+		brd->ports[i].ioaddr = (int) regs[i + 1] & 0xFFF8;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2564: FILE: drivers/char/mxser.h:303:
+	__oldlcr = inb((info)->ioaddr+UART_LCR);	\
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2565: FILE: drivers/char/mxser.h:304:
+	outb(MOXA_MUST_ENTER_ENCHANCE, (info)->ioaddr+UART_LCR);	\
 	                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2566: FILE: drivers/char/mxser.h:305:
+	__efr = inb((info)->ioaddr+MOXA_MUST_EFR_REGISTER);	\
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2574: FILE: drivers/char/mxser.h:308:
+	outb(__efr, (info)->ioaddr+MOXA_MUST_EFR_REGISTER);	\
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2575: FILE: drivers/char/mxser.h:309:
+	outb((u8)((info)->rx_high_water), (info)->ioaddr+MOXA_MUST_RBRTH_REGISTER);	\
 	                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2576: FILE: drivers/char/mxser.h:310:
+	outb((u8)((info)->rx_trigger), (info)->ioaddr+MOXA_MUST_RBRTI_REGISTER);	\
 	                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2577: FILE: drivers/char/mxser.h:311:
+	outb((u8)((info)->rx_low_water), (info)->ioaddr+MOXA_MUST_RBRTL_REGISTER);	\
 	                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2578: FILE: drivers/char/mxser.h:312:
+	outb(__oldlcr, (info)->ioaddr+UART_LCR);	\
 	                             ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053546.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 8 warnings, 69 checks, 2433 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053546.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
