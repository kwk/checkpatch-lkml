WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: fs/compat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#103: FILE: fs/compat.c:2:
+ *  linux/fs/compat.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'compatibililty' may be misspelled - perhaps 'compatibility'?
#105: FILE: fs/compat.c:4:
+ *  Kernel compatibililty routines for e.g. 32 bit syscall support
            ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#121: FILE: fs/compat.c:20:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: fs/compat.c:40:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/compat.c:41:
+asmlinkage long compat_sys_newstat(char * filename,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/compat.c:42:
+asmlinkage long compat_sys_newstat(char * filename,
+		struct compat_stat *statbuf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: fs/compat.c:52:
+asmlinkage long compat_sys_newlstat(char * filename,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: fs/compat.c:53:
+asmlinkage long compat_sys_newlstat(char * filename,
+		struct compat_stat *statbuf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: fs/compat.c:64:
+asmlinkage long compat_sys_newfstat(unsigned int fd,
+		struct compat_stat * statbuf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: fs/compat.c:64:
+		struct compat_stat * statbuf)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: include/linux/compat.h:33:
+extern int cp_compat_stat(struct kstat *, struct compat_stat *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstat *' should also have an identifier name
#189: FILE: include/linux/compat.h:33:
+extern int cp_compat_stat(struct kstat *, struct compat_stat *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct compat_stat *' should also have an identifier name
#189: FILE: include/linux/compat.h:33:
+extern int cp_compat_stat(struct kstat *, struct compat_stat *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000407244.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 5 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000407244.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
