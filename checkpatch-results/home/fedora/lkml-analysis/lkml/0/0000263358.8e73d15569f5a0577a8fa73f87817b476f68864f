WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#73: FILE: arch/i386/pci/fixup.c:240:
+static void __devinit pci_fixup_video(struct pci_dev *pdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/i386/pci/fixup.c:245:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/i386/pci/fixup.c:248:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/pci/pci-sysfs.c:180:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: drivers/pci/pci-sysfs.c:216:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: drivers/pci/pci-sysfs.c:216:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res->parent"
#179: FILE: drivers/pci/pci-sysfs.c:227:
+		if (res->parent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/pci/pci-sysfs.c:229:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/pci/pci-sysfs.c:232:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/pci/pci-sysfs.c:238:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: drivers/pci/pci-sysfs.c:241:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#195: FILE: drivers/pci/pci-sysfs.c:243:
+	if (rom) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#198: FILE: drivers/pci/pci-sysfs.c:246:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/pci/pci-sysfs.c:248:
+^I^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#202: FILE: drivers/pci/pci-sysfs.c:250:
+	if (!(res->flags & (PCI_ROM_ADDRESS_ENABLE|PCI_ROM_SHADOW)))
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/pci/pci-sysfs.c:252:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#219: FILE: drivers/pci/pci-sysfs.c:281:
+		.mode = S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: drivers/pci/pci-sysfs.c:298:
+		struct resource *res = &pdev->resource[PCI_ROM_RESOURCE];
+		if (res->flags & PCI_ROM_SHADOW) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#236: FILE: drivers/pci/pci-sysfs.c:298:
+		if (res->flags & PCI_ROM_SHADOW) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#238: FILE: drivers/pci/pci-sysfs.c:300:
+		} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: drivers/pci/pci.h:6:
+extern void pci_remove_sysfs_dev_files(struct pci_dev *pdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 4 warnings, 6 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
