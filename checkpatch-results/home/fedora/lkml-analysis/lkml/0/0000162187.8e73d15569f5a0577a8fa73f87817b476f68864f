WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
This patch converts kcalloc(1, ...) calls to use the new kzalloc() function.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#50: FILE: fs/cifs/connect.c:854:
+				vol->password = kzalloc(temp_len+1, GFP_KERNEL);
 				                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ses_init_buf)...) over kzalloc(sizeof(struct rfc1002_session_packet)...)
#59: FILE: fs/cifs/connect.c:1320:
+		ses_init_buf = kzalloc(sizeof(struct rfc1002_session_packet), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <serverOS>
#68: FILE: fs/cifs/connect.c:1967:
+				ses->serverOS = kzalloc(2 * (len + 1), GFP_KERNEL);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: fs/cifs/connect.c:1979:
+					ses->serverNOS = kzalloc(2 * (len + 1),GFP_KERNEL);
 					                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <serverNOS>
#77: FILE: fs/cifs/connect.c:1979:
+					ses->serverNOS = kzalloc(2 * (len + 1),GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#86: FILE: fs/cifs/connect.c:1997:
+						    kzalloc(2*(len+1),GFP_KERNEL);
 						             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#86: FILE: fs/cifs/connect.c:1997:
+						    kzalloc(2*(len+1),GFP_KERNEL);
 						                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: fs/cifs/connect.c:1997:
+						    kzalloc(2*(len+1),GFP_KERNEL);
 						                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: fs/cifs/connect.c:2023:
+					ses->serverOS = kzalloc(len + 1,GFP_KERNEL);
 					                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: fs/cifs/connect.c:2033:
+					ses->serverNOS = kzalloc(len + 1,GFP_KERNEL);
 					                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: fs/cifs/connect.c:2042:
+					ses->serverDomain = kzalloc(len + 1,GFP_KERNEL);
 					                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <serverDomain>
#131: FILE: fs/cifs/connect.c:2042:
+					ses->serverDomain = kzalloc(len + 1,GFP_KERNEL);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#158: FILE: fs/cifs/connect.c:2270:
+							ses->serverDomain = kzalloc(2*(len+1),GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#158: FILE: fs/cifs/connect.c:2270:
+							ses->serverDomain = kzalloc(2*(len+1),GFP_KERNEL);
 							                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: fs/cifs/connect.c:2270:
+							ses->serverDomain = kzalloc(2*(len+1),GFP_KERNEL);
 							                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: fs/cifs/connect.c:2270:
+							ses->serverDomain = kzalloc(2*(len+1),GFP_KERNEL);
 							                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: fs/cifs/connect.c:2281:
+							    kzalloc(2,GFP_KERNEL);
 							             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: fs/cifs/connect.c:2300:
+						ses->serverNOS = kzalloc(len + 1,GFP_KERNEL);
 						                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: fs/cifs/connect.c:3007:
+							ses->serverDomain = kzalloc(2,GFP_KERNEL);
 							                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: fs/cifs/connect.c:3017:
+						ses->serverOS = kzalloc(len + 1,GFP_KERNEL);
 						                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: fs/cifs/connect.c:3025:
+						ses->serverNOS = kzalloc(len+1,GFP_KERNEL);
 						                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#327: FILE: fs/cifs/connect.c:3025:
+						ses->serverNOS = kzalloc(len+1,GFP_KERNEL);
 						                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#335: FILE: fs/cifs/connect.c:3032:
+						ses->serverDomain = kzalloc(len+1,GFP_KERNEL);
 						                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: fs/cifs/connect.c:3032:
+						ses->serverDomain = kzalloc(len+1,GFP_KERNEL);
 						                                 ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 2 warnings, 11 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
