WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > I only implemented parse_early_param two years ago; maybe it is time for

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: arch/i386/kernel/machine_kexec.c:223:
+	unsigned long size, base;
+	size = memparse(arg, &arg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#110: FILE: arch/i386/kernel/machine_kexec.c:225:
+		base = memparse(arg+1, &arg);
 		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#119: FILE: arch/i386/kernel/machine_kexec.c:234:
+}
+early_param("crashkernel", parse_crashkernel);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#143: FILE: arch/i386/kernel/setup.c:717:
+static int __initdata user_defined_memmap = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after user_defined_memmap
#143: FILE: arch/i386/kernel/setup.c:717:
+static int __initdata user_defined_memmap = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#207: FILE: arch/i386/kernel/setup.c:749:
+}
+early_param("mem", parse_mem);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#271: FILE: arch/i386/kernel/setup.c:776:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#274: FILE: arch/i386/kernel/setup.c:779:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#277: FILE: arch/i386/kernel/setup.c:782:
+			start_at = memparse(arg+1, &arg);
 			                       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#286: FILE: arch/i386/kernel/setup.c:791:
+}
+early_param("memmap", parse_memmap);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#306: FILE: arch/i386/kernel/setup.c:800:
+	extern unsigned int maxcpus;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#310: FILE: arch/i386/kernel/setup.c:802:
+	maxcpus = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#313: FILE: arch/i386/kernel/setup.c:805:
+}
+early_param("maxcpus", parse_maxcpus);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#322: FILE: arch/i386/kernel/setup.c:812:
+	if (strcmp(arg, "off") == 0) {
+		disable_acpi();
+	} 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: arch/i386/kernel/setup.c:814:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#332: FILE: arch/i386/kernel/setup.c:822:
+	else if (strcmp(arg, "strict") == 0) {
+		acpi_strict = 1;
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#391: FILE: arch/i386/kernel/setup.c:840:
+}
+early_param("acpi", parse_acpi);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#401: FILE: arch/i386/kernel/setup.c:848:
+}
+early_param("acpi_skip_timer_override", parse_acpi_skip_timer_override);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#412: FILE: arch/i386/kernel/setup.c:855:
+}
+early_param("disable_timer_pin_1", parse_disable_timer_pin_1);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#422: FILE: arch/i386/kernel/setup.c:862:
+}
+early_param("enable_timer_pin_1", parse_enable_timer_pin_1);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#430: FILE: arch/i386/kernel/setup.c:870:
+}
+early_param("noapic", parse_noapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#447: FILE: arch/i386/kernel/setup.c:880:
+}
+early_param("lapic", parse_lapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#453: FILE: arch/i386/kernel/setup.c:886:
+}
+early_param("nolapic", parse_nolapic);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#491: FILE: arch/i386/kernel/setup.c:898:
+}
+early_param("elfcorehdr", parse_elfcorehdr);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#519: FILE: arch/i386/kernel/setup.c:911:
+}
+early_param("highmem", parse_highmem);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#545: FILE: arch/i386/kernel/setup.c:923:
 }
+early_param("vmalloc", parse_vmalloc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#564: FILE: arch/i386/kernel/setup.c:1557:
+	 * overriding drivers/pci/pci.c's __setup("pci="). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#564: FILE: arch/i386/kernel/setup.c:1557:
+	 * overriding drivers/pci/pci.c's __setup("pci="). */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#566: FILE: arch/i386/kernel/setup.c:1559:
+	if (strstr(saved_command_line, "pci=noacpi")) {
+		acpi_disable_pci();
 	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#573: FILE: arch/i386/kernel/setup.c:1566:
+		printk(KERN_INFO "user-defined physical RAM map:\n");

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#577: FILE: arch/i386/kernel/setup.c:1570:
+	strlcpy(command_line, saved_command_line, COMMAND_LINE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: arch/i386/mach-generic/probe.c:39:
+^I^Iif (!strcmp(apic_probe[i]->name, arg)) { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#621: FILE: arch/i386/mach-generic/probe.c:47:
+}
+early_param("apic", parse_apic);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: arch/i386/mach-generic/probe.c:66:
+void __init generic_apic_probe(void) $

CHECK:SPACING: No space is necessary after a cast
#630: FILE: arch/i386/mach-generic/probe.c:66:
+void __init generic_apic_probe(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: arch/i386/mach-generic/probe.c:70:
+^I^Ifor (i = 0; apic_probe[i]; i++) { $

WARNING:LINE_SPACING: Missing a blank line after declarations
#648: FILE: arch/i386/mach-generic/probe.c:70:
+		int i;
+		for (i = 0; apic_probe[i]; i++) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: arch/i386/mach-generic/probe.c:76:
+^I^I/* Not visible without early console */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: arch/i386/mach-generic/probe.c:78:
+^I^I^Ipanic("Didn't find an APIC driver"); $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#693: FILE: arch/i386/mm/init.c:449:
 }
+early_param("noexec", noexec_setup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#704: FILE: include/asm-i386/apic.h:45:
+extern void generic_apic_probe(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000052204.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 12 warnings, 23 checks, 607 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000052204.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
