WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#84: 
diff -Naur linux.org/include/linux/evl_log.h linux.kernel.patched/include/linux/evl_log.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: include/linux/evl_log.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: include/linux/evl_log.h:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: include/linux/evl_log.h:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: include/linux/evl_log.h:39:
+#define EVL_INITIAL_BOOT_EVENT ^I0x4$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#144: FILE: include/linux/evl_log.h:57:
+typedef unsigned int posix_log_facility_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#145: FILE: include/linux/evl_log.h:58:
+typedef int posix_log_severity_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#146: FILE: include/linux/evl_log.h:59:
+typedef int posix_log_recid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#147: FILE: include/linux/evl_log.h:60:
+typedef int posix_log_procid_t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: include/linux/evl_log.h:66:
+        posix_log_recid_t   ^Ilog_recid;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: include/linux/evl_log.h:66:
+        posix_log_recid_t   ^Ilog_recid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: include/linux/evl_log.h:66:
+        posix_log_recid_t   ^Ilog_recid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: include/linux/evl_log.h:67:
+        size_t          ^Ilog_size;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: include/linux/evl_log.h:67:
+        size_t          ^Ilog_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: include/linux/evl_log.h:67:
+        size_t          ^Ilog_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: include/linux/evl_log.h:68:
+        int             ^Ilog_format;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: include/linux/evl_log.h:68:
+        int             ^Ilog_format;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/linux/evl_log.h:68:
+        int             ^Ilog_format;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: include/linux/evl_log.h:69:
+        int             ^Ilog_event_type;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: include/linux/evl_log.h:69:
+        int             ^Ilog_event_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/evl_log.h:69:
+        int             ^Ilog_event_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: include/linux/evl_log.h:70:
+        posix_log_facility_t ^Ilog_facility;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: include/linux/evl_log.h:70:
+        posix_log_facility_t ^Ilog_facility;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/evl_log.h:70:
+        posix_log_facility_t ^Ilog_facility;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: include/linux/evl_log.h:71:
+        posix_log_severity_t    log_severity;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: include/linux/evl_log.h:71:
+        posix_log_severity_t    log_severity;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: include/linux/evl_log.h:72:
+        uid_t           ^Ilog_uid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: include/linux/evl_log.h:72:
+        uid_t           ^Ilog_uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: include/linux/evl_log.h:72:
+        uid_t           ^Ilog_uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: include/linux/evl_log.h:73:
+        gid_t           ^Ilog_gid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: include/linux/evl_log.h:73:
+        gid_t           ^Ilog_gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/evl_log.h:73:
+        gid_t           ^Ilog_gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: include/linux/evl_log.h:74:
+        pid_t           ^Ilog_pid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: include/linux/evl_log.h:74:
+        pid_t           ^Ilog_pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/evl_log.h:74:
+        pid_t           ^Ilog_pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/evl_log.h:75:
+        pid_t           ^Ilog_pgrp;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: include/linux/evl_log.h:75:
+        pid_t           ^Ilog_pgrp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/evl_log.h:75:
+        pid_t           ^Ilog_pgrp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: include/linux/evl_log.h:76:
+        struct timespec ^Ilog_time;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: include/linux/evl_log.h:76:
+        struct timespec ^Ilog_time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: include/linux/evl_log.h:76:
+        struct timespec ^Ilog_time;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: include/linux/evl_log.h:77:
+        unsigned int    ^Ilog_flags;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: include/linux/evl_log.h:77:
+        unsigned int    ^Ilog_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/evl_log.h:77:
+        unsigned int    ^Ilog_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: include/linux/evl_log.h:79:
+        unsigned long int^Ilog_thread;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: include/linux/evl_log.h:79:
+        unsigned long int^Ilog_thread;$

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#166: FILE: include/linux/evl_log.h:79:
+        unsigned long int	log_thread;

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#171: FILE: include/linux/evl_log.h:84:
+	unsigned long int	log_thread;

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: include/linux/evl_log.h:87:
+        posix_log_procid_t^Ilog_processor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: include/linux/evl_log.h:87:
+        posix_log_procid_t^Ilog_processor;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: include/linux/evl_log.h:88:
+}; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#177: FILE: include/linux/evl_log.h:90:
+typedef struct posix_log_entry rec_hdr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#178: FILE: include/linux/evl_log.h:91:
+typedef struct evl_buf_rec {

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: include/linux/evl_log.h:92:
+        struct posix_log_entry  rechdr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: include/linux/evl_log.h:92:
+        struct posix_log_entry  rechdr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: include/linux/evl_log.h:93:
+        char                    varbuf[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: include/linux/evl_log.h:93:
+        char                    varbuf[1];$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: include/linux/evl_log.h:96:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#196: FILE: include/linux/evl_log.h:109:
+#define LOG_LOGMGMT              (12<<3)	/* EVL Facility */
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#202: FILE: include/linux/evl_log.h:115:
+#define LOG_KERN        (0<<3)  /* Kernel Facility */
                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#203: FILE: include/linux/evl_log.h:116:
+#define LOG_AUTHPRIV    (10<<3) /* security/authorization messages (private) */
                            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/evl_log.h:130:
+extern int posix_log_write(posix_log_facility_t facility, int event_type,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: include/linux/evl_log.h:131:
+         ^Iposix_log_severity_t severity, const void *buf,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: include/linux/evl_log.h:131:
+         ^Iposix_log_severity_t severity, const void *buf,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: include/linux/evl_log.h:131:
+extern int posix_log_write(posix_log_facility_t facility, int event_type,
+         	posix_log_severity_t severity, const void *buf,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: include/linux/evl_log.h:131:
+         ^Iposix_log_severity_t severity, const void *buf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: include/linux/evl_log.h:132:
+        ^Isize_t len, int format, unsigned int flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/evl_log.h:132:
+        ^Isize_t len, int format, unsigned int flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/evl_log.h:132:
+        ^Isize_t len, int format, unsigned int flags);$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#224: FILE: include/linux/evl_log.h:137:
+		{ return -ENOSYS; }

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#284: FILE: kernel/evlog.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#300: FILE: kernel/evlog.c:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#301: FILE: kernel/evlog.c:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#310: FILE: kernel/evlog.c:27:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#322: FILE: kernel/evlog.c:39:
+#include <asm/uaccess.h>

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#333: FILE: kernel/evlog.c:50:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#340: FILE: kernel/evlog.c:57:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#341: FILE: kernel/evlog.c:58:
+#include <asm/smp.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: kernel/evlog.c:62:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: kernel/evlog.c:64:
+static void mk_rec_header(struct posix_log_entry *rechdr,
+	posix_log_facility_t facility, int event_type,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#351: FILE: kernel/evlog.c:68:
+extern struct timezone sys_tz;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#354: FILE: kernel/evlog.c:71:
+#define EVL_BUF_FREESPACE (64*1024U) /* max free space reqd after buff */
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: kernel/evlog.c:95:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: kernel/evlog.c:95:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: kernel/evlog.c:103:
+^Ievl_buffer, $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#433: FILE: kernel/evlog.c:150:
+		if (dont_split_hdr
+		    && bf_curr + REC_HDR_SIZE > evl_ebuf.bf_end) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#480: FILE: kernel/evlog.c:197:
+		return e;
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: kernel/evlog.c:242:
+^I^Ievl_ebuf.bf_curr = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: kernel/evlog.c:245:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: kernel/evlog.c:268:
+^Isnprintf(sbuf, sizeof(sbuf), "%d event records dropped due to EVL buffer overflow.", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: kernel/evlog.c:269:
+	snprintf(sbuf, sizeof(sbuf), "%d event records dropped due to EVL buffer overflow.", 
+		evl_ebuf.bf_dropped);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: kernel/evlog.c:273:
+	mk_rec_header(&drechdr, LOG_KERN, EVL_BUFFER_OVERRUN, LOG_INFO,
+		vbuflen, 0, POSIX_LOG_STRING);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#557: FILE: kernel/evlog.c:274:
+	evl_ebuf.bf_curr = cbufwrap(evl_ebuf.bf_curr, REC_HDR_SIZE+vbuflen, 1);
 	                                                          ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#561: FILE: kernel/evlog.c:278:
+		return 0;
+	} else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#610: FILE: kernel/evlog.c:327:
+	if (avail < water_mark) {
+		return -1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#616: FILE: kernel/evlog.c:333:
+	if (evl_ebuf.bf_dropped != 0) {
+		return log_dropped_recs_event();
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#635: FILE: kernel/evlog.c:352:
+	if (rec == NULL) {
[...]
+	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rec"
#635: FILE: kernel/evlog.c:352:
+	if (rec == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#641: FILE: kernel/evlog.c:358:
+	if (rec == tail) {
+		return rec;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#646: FILE: kernel/evlog.c:363:
+	if ((rec + REC_HDR_SIZE) > evl_ebuf.bf_end) {
+		rec = evl_ebuf.bf_buf;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#674: FILE: kernel/evlog.c:391:
+	if (bufsize < REC_HDR_SIZE) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: kernel/evlog.c:394:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: kernel/evlog.c:395:
+^I * Serialize all reads, just in case someone got sneaky $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#681: FILE: kernel/evlog.c:398:
+	if (error == -EINTR) {
+		return -EINTR;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: kernel/evlog.c:404:
+^Ierror = wait_event_interruptible(readq, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: kernel/evlog.c:405:
+	error = wait_event_interruptible(readq, 
+		(evl_ebuf.bf_head != evl_ebuf.bf_tail));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#705: FILE: kernel/evlog.c:422:
+^Iif (rec == NULL) { $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rec"
#705: FILE: kernel/evlog.c:422:
+	if (rec == NULL) { 

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#706: FILE: kernel/evlog.c:423:
+		/* Should not happen. Buffer must have atleast one record. */
 		                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#714: FILE: kernel/evlog.c:431:
+		evl_buf_rec_t record;
+		memcpy(&record, rec, sizeof(evl_buf_rec_t));

CHECK:SPACING: No space is necessary after a cast
#718: FILE: kernel/evlog.c:435:
+		p_rec = (evl_buf_rec_t *) rec;

WARNING:LINE_SPACING: Missing a blank line after declarations
#718: FILE: kernel/evlog.c:435:
+		evl_buf_rec_t *p_rec;
+		p_rec = (evl_buf_rec_t *) rec;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: kernel/evlog.c:444:
+^I^I^I/* $

WARNING:LINE_SPACING: Missing a blank line after declarations
#742: FILE: kernel/evlog.c:459:
+			size_t lw = evl_ebuf.bf_end - rec;
+			error = copy_to_user(buf, rec, lw);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: kernel/evlog.c:461:
+^I^I^I^Ierror = copy_to_user(buf + lw, evl_ebuf.bf_buf, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: kernel/evlog.c:462:
+^I^I^I^I^Irec_size - lw); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: kernel/evlog.c:462:
+				error = copy_to_user(buf + lw, evl_ebuf.bf_buf, 
+					rec_size - lw); 

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#767: FILE: kernel/evlog.c:484:
+	return(error);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LINE_SPACING: Missing a blank line after declarations
#784: FILE: kernel/evlog.c:501:
+	unsigned char *rec;
+	if (rec_hdr->log_size > POSIX_LOG_ENTRY_MAXLEN) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#790: FILE: kernel/evlog.c:507:
+	if (rec == (unsigned char *)NULL) {
+		return -ENOSPC;
+	}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#803: FILE: kernel/evlog.c:520:
+		if (evl_ebuf.bf_curr == evl_ebuf.bf_buf) {
[...]
+		} else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: kernel/evlog.c:536:
+evl_kwrite_buf(posix_log_facility_t    fac,
+		int                    ev_type,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: kernel/evlog.c:541:
+^I^Iuint                   flags) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: kernel/evlog.c:547:
+^I^I/* Used to wake the read call if it sleeps */ $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#833: FILE: kernel/evlog.c:550:
+	if (sev > LOG_DEBUG) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#836: FILE: kernel/evlog.c:553:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: kernel/evlog.c:554:
+^Irecflags |= EVL_KERNEL_EVENT;   /* kernel mesagge */    $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#838: FILE: kernel/evlog.c:555:
+	if (in_interrupt()) {
+		recflags |= EVL_INTERRUPT;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: kernel/evlog.c:559:
+	mk_rec_header(&rec_hdr, fac, ev_type, sev, var_rec_len, recflags,
+		format);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: kernel/evlog.c:560:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'evl_ebuf.bf_head == oldtail'
#855: FILE: kernel/evlog.c:572:
+		if ((evl_ebuf.bf_head == oldtail) &&
+		    (evl_ebuf.bf_head != evl_ebuf.bf_tail)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'evl_ebuf.bf_head != evl_ebuf.bf_tail'
#855: FILE: kernel/evlog.c:572:
+		if ((evl_ebuf.bf_head == oldtail) &&
+		    (evl_ebuf.bf_head != evl_ebuf.bf_tail)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: kernel/evlog.c:576:
+^I} else if (error == -ENOSPC) {        $

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#867: FILE: kernel/evlog.c:584:
+ *      This is the standard POSIX function for writing events to the event log, *      See event logging specification at:

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: kernel/evlog.c:588:
+                posix_log_severity_t severity, const void *buf,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#871: FILE: kernel/evlog.c:588:
+int posix_log_write(posix_log_facility_t facility, int event_type,
+                posix_log_severity_t severity, const void *buf,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: kernel/evlog.c:588:
+                posix_log_severity_t severity, const void *buf,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: kernel/evlog.c:589:
+                size_t recsize, int format, unsigned int flags)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: kernel/evlog.c:589:
+                size_t recsize, int format, unsigned int flags)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: kernel/evlog.c:591:
+        int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: kernel/evlog.c:591:
+        int ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: kernel/evlog.c:593:
+        if ((buf == (void *)NULL) && (recsize > 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: kernel/evlog.c:593:
+        if ((buf == (void *)NULL) && (recsize > 0)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'recsize > 0'
#876: FILE: kernel/evlog.c:593:
+        if ((buf == (void *)NULL) && (recsize > 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#876: FILE: kernel/evlog.c:593:
+        if ((buf == (void *)NULL) && (recsize > 0)) {
+                return -EINVAL;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: kernel/evlog.c:594:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: kernel/evlog.c:594:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: kernel/evlog.c:595:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#878: FILE: kernel/evlog.c:595:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#879: FILE: kernel/evlog.c:596:
+        if (recsize == 0 && format != POSIX_LOG_NODATA) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: kernel/evlog.c:596:
+        if (recsize == 0 && format != POSIX_LOG_NODATA) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#879: FILE: kernel/evlog.c:596:
+        if (recsize == 0 && format != POSIX_LOG_NODATA) {
+                return -EINVAL;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#880: FILE: kernel/evlog.c:597:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: kernel/evlog.c:597:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: kernel/evlog.c:598:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: kernel/evlog.c:598:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: kernel/evlog.c:599:
+        if (format == POSIX_LOG_STRING) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: kernel/evlog.c:599:
+        if (format == POSIX_LOG_STRING) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: kernel/evlog.c:600:
+                if (strlen((const char*)buf) != recsize-1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: kernel/evlog.c:600:
+                if (strlen((const char*)buf) != recsize-1) {$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#883: FILE: kernel/evlog.c:600:
+                if (strlen((const char*)buf) != recsize-1) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#883: FILE: kernel/evlog.c:600:
+                if (strlen((const char*)buf) != recsize-1) {
                                                        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#883: FILE: kernel/evlog.c:600:
+                if (strlen((const char*)buf) != recsize-1) {
+                        return -EBADMSG;
+                }

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: kernel/evlog.c:601:
+                        return -EBADMSG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: kernel/evlog.c:601:
+                        return -EBADMSG;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: kernel/evlog.c:602:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: kernel/evlog.c:602:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: kernel/evlog.c:603:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: kernel/evlog.c:603:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: kernel/evlog.c:605:
+        ret = evl_kwrite_buf(facility, event_type, severity, format,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: kernel/evlog.c:605:
+        ret = evl_kwrite_buf(facility, event_type, severity, format,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: kernel/evlog.c:606:
+                                (char *)buf, recsize, flags);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#889: FILE: kernel/evlog.c:606:
+        ret = evl_kwrite_buf(facility, event_type, severity, format,
+                                (char *)buf, recsize, flags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: kernel/evlog.c:606:
+                                (char *)buf, recsize, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: kernel/evlog.c:608:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: kernel/evlog.c:608:
+        return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#902: FILE: kernel/evlog.c:619:
+        int copysz = (int) datasz;$

CHECK:SPACING: No space is necessary after a cast
#902: FILE: kernel/evlog.c:619:
+        int copysz = (int) datasz;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: kernel/evlog.c:619:
+        int copysz = (int) datasz;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: kernel/evlog.c:620:
+        int room = (int) POSIX_LOG_ENTRY_MAXLEN - (int) *reclen;$

CHECK:SPACING: No space is necessary after a cast
#903: FILE: kernel/evlog.c:620:
+        int room = (int) POSIX_LOG_ENTRY_MAXLEN - (int) *reclen;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: kernel/evlog.c:620:
+        int room = (int) POSIX_LOG_ENTRY_MAXLEN - (int) *reclen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: kernel/evlog.c:621:
+        if (room > 0) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#904: FILE: kernel/evlog.c:621:
+        int room = (int) POSIX_LOG_ENTRY_MAXLEN - (int) *reclen;
+        if (room > 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: kernel/evlog.c:621:
+        if (room > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#905: FILE: kernel/evlog.c:622:
+                if (copysz > room) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: kernel/evlog.c:622:
+                if (copysz > room) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#905: FILE: kernel/evlog.c:622:
+                if (copysz > room) {
+                        copysz = room;
+                }

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: kernel/evlog.c:623:
+                        copysz = room;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: kernel/evlog.c:623:
+                        copysz = room;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: kernel/evlog.c:624:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: kernel/evlog.c:624:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: kernel/evlog.c:625:
+                (void) memcpy(buf + *reclen, data, copysz);$

CHECK:SPACING: No space is necessary after a cast
#908: FILE: kernel/evlog.c:625:
+                (void) memcpy(buf + *reclen, data, copysz);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: kernel/evlog.c:625:
+                (void) memcpy(buf + *reclen, data, copysz);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: kernel/evlog.c:626:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: kernel/evlog.c:626:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: kernel/evlog.c:627:
+        *reclen += datasz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: kernel/evlog.c:627:
+        *reclen += datasz;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: kernel/evlog.c:638:
+        size_t old_reclen = *reclen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: kernel/evlog.c:638:
+        size_t old_reclen = *reclen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: kernel/evlog.c:639:
+        evl_append_to_buf(buf, reclen, s, strlen(s) + null);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#922: FILE: kernel/evlog.c:639:
+        size_t old_reclen = *reclen;
+        evl_append_to_buf(buf, reclen, s, strlen(s) + null);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: kernel/evlog.c:639:
+        evl_append_to_buf(buf, reclen, s, strlen(s) + null);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: kernel/evlog.c:640:
+        if (*reclen > POSIX_LOG_ENTRY_MAXLEN$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: kernel/evlog.c:640:
+        if (*reclen > POSIX_LOG_ENTRY_MAXLEN$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: kernel/evlog.c:641:
+            && old_reclen < POSIX_LOG_ENTRY_MAXLEN) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#924: FILE: kernel/evlog.c:641:
+        if (*reclen > POSIX_LOG_ENTRY_MAXLEN
+            && old_reclen < POSIX_LOG_ENTRY_MAXLEN) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: kernel/evlog.c:641:
+            && old_reclen < POSIX_LOG_ENTRY_MAXLEN) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: kernel/evlog.c:642:
+                buf[POSIX_LOG_ENTRY_MAXLEN-1] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: kernel/evlog.c:642:
+                buf[POSIX_LOG_ENTRY_MAXLEN-1] = '\0';$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#925: FILE: kernel/evlog.c:642:
+                buf[POSIX_LOG_ENTRY_MAXLEN-1] = '\0';
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: kernel/evlog.c:643:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: kernel/evlog.c:643:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: kernel/evlog.c:653:
+        int i=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: kernel/evlog.c:653:
+        int i=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#936: FILE: kernel/evlog.c:653:
+        int i=0;
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: kernel/evlog.c:655:
+        while (isdigit(**s))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: kernel/evlog.c:655:
+        while (isdigit(**s))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: kernel/evlog.c:656:
+                i = i*10 + *((*s)++) - '0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: kernel/evlog.c:656:
+                i = i*10 + *((*s)++) - '0';$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#939: FILE: kernel/evlog.c:656:
+                i = i*10 + *((*s)++) - '0';
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: kernel/evlog.c:657:
+        return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: kernel/evlog.c:657:
+        return i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: kernel/evlog.c:677:
+        int qualifier = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: kernel/evlog.c:677:
+        int qualifier = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: kernel/evlog.c:678:
+        *wp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: kernel/evlog.c:678:
+        *wp = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: kernel/evlog.c:680:
+        /* process flags */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: kernel/evlog.c:681:
+        repeat:$

WARNING:INDENTED_LABEL: labels should not be indented
#964: FILE: kernel/evlog.c:681:
+        repeat:

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: kernel/evlog.c:682:
+                ++fmt;          /* this also skips first '%' */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: kernel/evlog.c:682:
+                ++fmt;          /* this also skips first '%' */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: kernel/evlog.c:683:
+                switch (*fmt) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: kernel/evlog.c:683:
+                switch (*fmt) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#966: FILE: kernel/evlog.c:683:
+                switch (*fmt) {
+                        case '-':
+                        case '+':
+                        case ' ':
+                        case '#':
+                        case '0':

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: kernel/evlog.c:684:
+                        case '-':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: kernel/evlog.c:684:
+                        case '-':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: kernel/evlog.c:685:
+                        case '+':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: kernel/evlog.c:685:
+                        case '+':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: kernel/evlog.c:686:
+                        case ' ':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: kernel/evlog.c:686:
+                        case ' ':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: kernel/evlog.c:687:
+                        case '#':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: kernel/evlog.c:687:
+                        case '#':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: kernel/evlog.c:688:
+                        case '0':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: kernel/evlog.c:688:
+                        case '0':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: kernel/evlog.c:689:
+                                goto repeat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: kernel/evlog.c:689:
+                                goto repeat;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: kernel/evlog.c:690:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: kernel/evlog.c:690:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: kernel/evlog.c:692:
+        /* get field width */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: kernel/evlog.c:693:
+        if (isdigit(*fmt))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: kernel/evlog.c:693:
+        if (isdigit(*fmt))$

CHECK:BRACES: braces {} should be used on all arms of this statement
#976: FILE: kernel/evlog.c:693:
+        if (isdigit(*fmt))
[...]
+        else if (*fmt == '*') {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: kernel/evlog.c:694:
+                skip_atoi(&fmt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: kernel/evlog.c:694:
+                skip_atoi(&fmt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: kernel/evlog.c:695:
+        else if (*fmt == '*') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: kernel/evlog.c:695:
+        else if (*fmt == '*') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#979: FILE: kernel/evlog.c:696:
+                ++fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: kernel/evlog.c:696:
+                ++fmt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: kernel/evlog.c:697:
+                /* it's the next argument */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: kernel/evlog.c:698:
+                *wp |= 0x1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: kernel/evlog.c:698:
+                *wp |= 0x1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: kernel/evlog.c:699:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: kernel/evlog.c:699:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: kernel/evlog.c:701:
+        /* get the precision */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: kernel/evlog.c:702:
+        if (*fmt == '.') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: kernel/evlog.c:702:
+        if (*fmt == '.') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: kernel/evlog.c:703:
+                ++fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: kernel/evlog.c:703:
+                ++fmt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: kernel/evlog.c:704:
+                if (isdigit(*fmt))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: kernel/evlog.c:704:
+                if (isdigit(*fmt))$

CHECK:BRACES: braces {} should be used on all arms of this statement
#987: FILE: kernel/evlog.c:704:
+                if (isdigit(*fmt))
[...]
+                else if (*fmt == '*') {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: kernel/evlog.c:705:
+                        skip_atoi(&fmt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: kernel/evlog.c:705:
+                        skip_atoi(&fmt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: kernel/evlog.c:706:
+                else if (*fmt == '*') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: kernel/evlog.c:706:
+                else if (*fmt == '*') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#990: FILE: kernel/evlog.c:707:
+                        ++fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: kernel/evlog.c:707:
+                        ++fmt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: kernel/evlog.c:708:
+                        /* it's the next argument */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#992: FILE: kernel/evlog.c:709:
+                        *wp |= 0x2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: kernel/evlog.c:709:
+                        *wp |= 0x2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: kernel/evlog.c:710:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: kernel/evlog.c:710:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: kernel/evlog.c:711:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: kernel/evlog.c:711:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: kernel/evlog.c:713:
+        /* get the conversion qualifier */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: kernel/evlog.c:714:
+        if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' || *fmt =='Z') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: kernel/evlog.c:714:
+        if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' || *fmt =='Z') {$

ERROR:SPACING: spaces required around that '==' (ctx:WxV)
#997: FILE: kernel/evlog.c:714:
+        if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' || *fmt =='Z') {
                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: kernel/evlog.c:715:
+                qualifier = *fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: kernel/evlog.c:715:
+                qualifier = *fmt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: kernel/evlog.c:716:
+                ++fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: kernel/evlog.c:716:
+                ++fmt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: kernel/evlog.c:717:
+                if (qualifier == 'l' && *fmt == 'l') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: kernel/evlog.c:717:
+                if (qualifier == 'l' && *fmt == 'l') {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: kernel/evlog.c:718:
+                        qualifier = 'L';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: kernel/evlog.c:718:
+                        qualifier = 'L';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: kernel/evlog.c:719:
+                        ++fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: kernel/evlog.c:719:
+                        ++fmt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: kernel/evlog.c:720:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: kernel/evlog.c:720:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: kernel/evlog.c:721:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: kernel/evlog.c:721:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1006: FILE: kernel/evlog.c:723:
+        *pqualifier = qualifier;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: kernel/evlog.c:723:
+        *pqualifier = qualifier;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: kernel/evlog.c:724:
+        return fmt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: kernel/evlog.c:724:
+        return fmt;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1013: FILE: kernel/evlog.c:730:
+#define COPYARG(type) { type v=va_arg(args,type); evl_append_to_buf(buf,reclen,&v,sizeof(v)); }
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1013: FILE: kernel/evlog.c:730:
+#define COPYARG(type) { type v=va_arg(args,type); evl_append_to_buf(buf,reclen,&v,sizeof(v)); }
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1013: FILE: kernel/evlog.c:730:
+#define COPYARG(type) { type v=va_arg(args,type); evl_append_to_buf(buf,reclen,&v,sizeof(v)); }
                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1013: FILE: kernel/evlog.c:730:
+#define COPYARG(type) { type v=va_arg(args,type); evl_append_to_buf(buf,reclen,&v,sizeof(v)); }
                                                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1013: FILE: kernel/evlog.c:730:
+#define COPYARG(type) { type v=va_arg(args,type); evl_append_to_buf(buf,reclen,&v,sizeof(v)); }
                                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1013: FILE: kernel/evlog.c:730:
+#define COPYARG(type) { type v=va_arg(args,type); evl_append_to_buf(buf,reclen,&v,sizeof(v)); }
                                                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: kernel/evlog.c:733:
+^I                    /* 'z' support added 23/7/1999 S.H.    */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: kernel/evlog.c:734:
+^I                    /* 'z' changed to 'Z' --davidm 1/25/99 */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1021: FILE: kernel/evlog.c:738:
+		int wp = 0x0;
+		if (*fmt != '%') {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1021: FILE: kernel/evlog.c:738:
+		if (*fmt != '%') {
+			continue;
+		}

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1035: FILE: kernel/evlog.c:752:
+		switch (*fmt) {
+			case 'c':
[...]
+			case 's':
[...]
+			case 'p':
[...]
+			case 'n':
[...]
+			case '%':
[...]
+			case 'o':
+			case 'X':
+			case 'x':
+			case 'd':
+			case 'i':
+			case 'u':
[...]
+			default:

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1046: FILE: kernel/evlog.c:763:
+				COPYARG(void*)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1051: FILE: kernel/evlog.c:768:
+				if (qualifier == 'l') {
[...]
+				} else if (qualifier == 'Z') {
[...]
+				} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#1052: FILE: kernel/evlog.c:769:
+					(void) va_arg(args, long *);

CHECK:SPACING: No space is necessary after a cast
#1054: FILE: kernel/evlog.c:771:
+					(void) va_arg(args, size_t *);

CHECK:SPACING: No space is necessary after a cast
#1056: FILE: kernel/evlog.c:773:
+					(void) va_arg(args, int *);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1078: FILE: kernel/evlog.c:795:
+		if (qualifier == 'L') {
[...]
+		} else if (qualifier == 'l') {
[...]
+		} else if (qualifier == 'Z') {
[...]
+		} else if (qualifier == 'h') {
[...]
+		} else {
[...]

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1100: FILE: kernel/evlog.c:817:
+static int msgbuf_idx = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1124: FILE: kernel/evlog.c:841:
+	int last_segment = (msglen > 0 && msg[msglen-1] == '\n');
 	                                            ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1130: FILE: kernel/evlog.c:847:
+		if (msg[0] == '<'
+		    && msg[1] >= '0' && msg[1] <= '7'

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1131: FILE: kernel/evlog.c:848:
+		    && msg[1] >= '0' && msg[1] <= '7'
+		    && msg[2] == '>') {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1140: FILE: kernel/evlog.c:857:
+	if (!last_segment) {
+		return 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1149: FILE: kernel/evlog.c:866:
+	if (msgbuf_idx <= POSIX_LOG_ENTRY_MAXLEN) {
+		prtk_msgbuf[msgbuf_idx-1] = '\0';
+	}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1150: FILE: kernel/evlog.c:867:
+		prtk_msgbuf[msgbuf_idx-1] = '\0';
 		                      ^

CHECK:SPACING: No space is necessary after a cast
#1153: FILE: kernel/evlog.c:870:
+	argsz = (int) argbuf_idx;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1157: FILE: kernel/evlog.c:874:
+	if (msgbuf_idx > POSIX_LOG_ENTRY_MAXLEN) {
+		msgbuf_idx = POSIX_LOG_ENTRY_MAXLEN;
+	}

CHECK:SPACING: No space is necessary after a cast
#1162: FILE: kernel/evlog.c:879:
+	event_type = (int) crc32(0, prtk_msgbuf, strlen(prtk_msgbuf));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1163: FILE: kernel/evlog.c:880:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1165: FILE: kernel/evlog.c:882:
+	ret = evl_kwrite_buf(LOG_KERN, event_type, sev, POSIX_LOG_PRINTF,
+		prtk_msgbuf, msgbuf_idx, EVL_PRINTK);

WARNING:TYPO_SPELLING: 'stucture' may be misspelled - perhaps 'structure'?
#1172: FILE: kernel/evlog.c:889:
+ * ARGS                 : rec_hdr - the record header stucture
                                                       ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1182: FILE: kernel/evlog.c:899:
+static void mk_rec_header(struct posix_log_entry *rec_hdr,
+		   posix_log_facility_t   facility,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1187: FILE: kernel/evlog.c:904:
+^I^I   int            ^I  format)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1189: FILE: kernel/evlog.c:906:
+{
+

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1206: FILE: kernel/evlog.c:923:
+#if defined(__i386__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1209: FILE: kernel/evlog.c:926:
+                        rec_hdr->log_flags |= EVL_KERNTIME_LOCAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: kernel/evlog.c:926:
+                        rec_hdr->log_flags |= EVL_KERNTIME_LOCAL;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1216: FILE: kernel/evlog.c:933:
+EXPORT_SYMBOL(posix_log_write);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1238: FILE: kernel/printk.c:164:
+ *     20 -- Read from event logging buffer $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1249: FILE: kernel/printk.c:282:
+		if (error) {
+			goto out;
+		}

CHECK:SPACING: No space is necessary after a cast
#1265: FILE: kernel/printk.c:431:
+	(void) evl_fwd_printk(fmt, args, printk_buf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378515.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 139 errors, 159 warnings, 50 checks, 1163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378515.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
