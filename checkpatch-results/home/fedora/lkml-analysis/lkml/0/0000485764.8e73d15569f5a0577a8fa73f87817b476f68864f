WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.5.2-pre11/drivers/char/Makefile working-2.5.2-pre11-usem/drivers/char/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/char/usersem.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#75: FILE: drivers/char/usersem.c:14:
+struct usersem
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#87: FILE: drivers/char/usersem.c:26:
+	struct usersem *usem = file->private_data;
+	return down_interruptible(&usem->mutex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/char/usersem.c:30:
+static ssize_t write_usem(struct file *file, const char *buf, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#95: FILE: drivers/char/usersem.c:34:
+	struct usersem *usem = file->private_data;
+	up(&usem->mutex);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#114: FILE: drivers/char/usersem.c:53:
+static int open_usem(struct inode *inode, struct file *filp)
                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*usem)...) over kmalloc(sizeof(struct usersem)...)
#118: FILE: drivers/char/usersem.c:57:
+	usem = kmalloc(sizeof(struct usersem), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#131: FILE: drivers/char/usersem.c:70:
+static int release(struct inode *inode, struct file *filp)
                                                      ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#140: FILE: drivers/char/usersem.c:79:
+static struct file_operations usem_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#141: FILE: drivers/char/usersem.c:80:
+	read:		read_usem,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#142: FILE: drivers/char/usersem.c:81:
+	write:		write_usem,
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#142: FILE: drivers/char/usersem.c:81:
+	write:		write_usem,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#143: FILE: drivers/char/usersem.c:82:
+	open:		open_usem,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#143: FILE: drivers/char/usersem.c:82:
+	open:		open_usem,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#144: FILE: drivers/char/usersem.c:83:
+	release:	release_usem,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#144: FILE: drivers/char/usersem.c:83:
+	release:	release_usem,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: drivers/char/usersem.c:89:
+		printk("unable to get major %d for usem devs\n", USEM_MAJOR);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#154: FILE: drivers/char/usersem.c:93:
+__initcall(usem_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485764.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 13 warnings, 1 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000485764.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
