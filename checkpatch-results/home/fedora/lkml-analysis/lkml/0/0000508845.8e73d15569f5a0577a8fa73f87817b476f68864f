WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
  I'm sending you a change for quotactl interface which Nathan Scott proposed

WARNING:TYPO_SPELLING: 'overidden' may be misspelled - perhaps 'overridden'?
#27: 
  It allows quotactl() to be overidden by a filesystem and so XFS can do it's
                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: fs/dquot.c:1575:
+	if ((len -= offset) > count)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: fs/dquot.c:1581:
+}
+#define quota_proc_init()	\

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#131: FILE: fs/dquot.c:1581:
+#define quota_proc_init()	\
+	create_proc_read_entry("fs/quota", 0, 0, read_stats, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: No space is necessary after a cast
#173: FILE: fs/dquot.c:2070:
+	if ((uint) type >= MAXQUOTAS || cmd > 0x1100 || cmd < 0x100 ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#225: FILE: fs/dquot.c:2093:
+			return quota_on(sb, type, (char *) addr);

CHECK:SPACING: No space is necessary after a cast
#233: FILE: fs/dquot.c:2097:
+			return get_quota(sb, id, type, (struct mem_dqblk *) addr);

CHECK:SPACING: No space is necessary after a cast
#237: FILE: fs/dquot.c:2099:
+			return set_dqblk(sb, id, type, SET_QUOTA, (struct mem_dqblk *) addr);

CHECK:SPACING: No space is necessary after a cast
#241: FILE: fs/dquot.c:2101:
+			return set_dqblk(sb, id, type, SET_USE, (struct mem_dqblk *) addr);

CHECK:SPACING: No space is necessary after a cast
#245: FILE: fs/dquot.c:2103:
+			return set_dqblk(sb, id, type, SET_QLIMIT, (struct mem_dqblk *) addr);

CHECK:SPACING: No space is necessary after a cast
#256: FILE: fs/dquot.c:2107:
+			return get_info(sb, type, (struct mem_dqinfo *) addr);

WARNING:INDENTED_LABEL: labels should not be indented
#285: FILE: fs/dquot.c:2120:
+	quotactl:	generic_quotactl

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#315: FILE: fs/quota.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:RETURN_VOID: void function return statements are not generally useful
#333: FILE: fs/quota.c:19:
+	return;
+}

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#341: FILE: fs/quota.c:27:
+	struct nameidata nd;
 	                 ^^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#348: FILE: fs/quota.c:34:
+	ret = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#355: FILE: fs/quota.c:41:
+	ret = user_path_walk(special, &nd);
 	                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#359: FILE: fs/quota.c:45:
+	dev = nd.dentry->d_inode->i_rdev;
 	      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#360: FILE: fs/quota.c:46:
+	mode = nd.dentry->d_inode->i_mode;
 	       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#361: FILE: fs/quota.c:47:
+	path_release(&nd);
 	              ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: fs/quota.c:56:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#371: FILE: fs/quota.c:57:
+	ret = -ENOSYS;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#450: FILE: include/linux/fs.h:660:
+	int (*quotactl)(struct super_block *, int, int, qid_t, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#450: FILE: include/linux/fs.h:660:
+	int (*quotactl)(struct super_block *, int, int, qid_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#450: FILE: include/linux/fs.h:660:
+	int (*quotactl)(struct super_block *, int, int, qid_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'qid_t' should also have an identifier name
#450: FILE: include/linux/fs.h:660:
+	int (*quotactl)(struct super_block *, int, int, qid_t, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#450: FILE: include/linux/fs.h:660:
+	int (*quotactl)(struct super_block *, int, int, qid_t, void *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508845.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 18 warnings, 8 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508845.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
