WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#39: FILE: arch/um/Kconfig:71:
+source "arch/um/Kconfig_arch"

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: arch/um/Kconfig_i386:1:
+config 3_LEVEL_PGTABLES
+	bool "Three-level pagetables"
+	default n
+	help
+	Three-level pagetables will let UML have more than 4G of physical
+	memory.  All the memory that can't be mapped directly will be treated
+	as high memory.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: arch/um/kernel/mem.c:245:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: arch/um/kernel/mem.c:340:
+	pte = alloc_page(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: arch/um/kernel/mem.c:340:
+	pte = alloc_page(GFP_KERNEL|__GFP_REPEAT|__GFP_ZERO);
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/um/kernel/physmem.c:322:
+^Iif(pte_present(pte)) $

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: arch/um/kernel/physmem.c:322:
+	if(pte_present(pte)) 

ERROR:SPACING: space required before the open brace '{'
#178: FILE: arch/um/kernel/skas/tlb.c:32:
+		if(!pgd_present(*npgd)){

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: arch/um/kernel/skas/tlb.c:32:
+		if(!pgd_present(*npgd)){

ERROR:SPACING: space required before the open brace '{'
#179: FILE: arch/um/kernel/skas/tlb.c:33:
+			if(force || pgd_newpage(*npgd)){

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: arch/um/kernel/skas/tlb.c:33:
+			if(force || pgd_newpage(*npgd)){

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: arch/um/kernel/skas/tlb.c:35:
+				if(end > end_addr)

CHECK:SPACING: No space is necessary after a cast
#183: FILE: arch/um/kernel/skas/tlb.c:37:
+				err = unmap(fd, (void *) addr, end - addr);

ERROR:SPACING: space required before the open brace '{'
#200: FILE: arch/um/kernel/skas/tlb.c:48:
+		if(!pud_present(*npud)){

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: arch/um/kernel/skas/tlb.c:48:
+		if(!pud_present(*npud)){

ERROR:SPACING: space required before the open brace '{'
#201: FILE: arch/um/kernel/skas/tlb.c:49:
+			if(force || pud_newpage(*npud)){

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: arch/um/kernel/skas/tlb.c:49:
+			if(force || pud_newpage(*npud)){

ERROR:SPACING: space required before the open parenthesis '('
#203: FILE: arch/um/kernel/skas/tlb.c:51:
+				if(end > end_addr)

CHECK:SPACING: No space is necessary after a cast
#205: FILE: arch/um/kernel/skas/tlb.c:53:
+				err = unmap(fd, (void *) addr, end - addr);

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: arch/um/kernel/skas/tlb.c:54:
+				if(err < 0)

ERROR:SPACING: space required before the open brace '{'
#219: FILE: arch/um/kernel/skas/tlb.c:64:
+		if(!pmd_present(*npmd)){

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: arch/um/kernel/skas/tlb.c:64:
+		if(!pmd_present(*npmd)){

ERROR:SPACING: space required before the open parenthesis '('
#223: FILE: arch/um/kernel/skas/tlb.c:67:
+				if(end > end_addr)

CHECK:SPACING: No space is necessary after a cast
#225: FILE: arch/um/kernel/skas/tlb.c:69:
+				err = unmap(fd, (void *) addr, end - addr);

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: arch/um/kernel/skas/tlb.c:83:
+		if(!pte_dirty(*npte))

ERROR:SPACING: space required before the open brace '{'
#241: FILE: arch/um/kernel/skas/tlb.c:85:
+		if(!pte_young(*npte)){

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: arch/um/kernel/skas/tlb.c:85:
+		if(!pte_young(*npte)){

ERROR:SPACING: space required before the open brace '{'
#245: FILE: arch/um/kernel/skas/tlb.c:89:
+		if(force || pte_newpage(*npte)){

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: arch/um/kernel/skas/tlb.c:89:
+		if(force || pte_newpage(*npte)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#245: FILE: arch/um/kernel/skas/tlb.c:89:
+		if(force || pte_newpage(*npte)){
[...]
+		else if(pte_newprot(*npte))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#246: FILE: arch/um/kernel/skas/tlb.c:90:
+			err = unmap(fd, (void *) addr, PAGE_SIZE);

ERROR:SPACING: space required before the open parenthesis '('
#247: FILE: arch/um/kernel/skas/tlb.c:91:
+			if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: arch/um/kernel/skas/tlb.c:93:
+			if(pte_present(*npte))

ERROR:SPACING: space required before the open parenthesis '('
#253: FILE: arch/um/kernel/skas/tlb.c:97:
+		else if(pte_newprot(*npte))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#253: FILE: arch/um/kernel/skas/tlb.c:97:
 		}
+		else if(pte_newprot(*npte))

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/um/kernel/skas/tlb.c:120:
+ ^I^Iif(!pgd_present(*pgd)){$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: arch/um/kernel/skas/tlb.c:120:
+ ^I^Iif(!pgd_present(*pgd)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/um/kernel/skas/tlb.c:120:
+ ^I^Iif(!pgd_present(*pgd)){$

ERROR:SPACING: space required before the open brace '{'
#280: FILE: arch/um/kernel/skas/tlb.c:120:
+ 		if(!pgd_present(*pgd)){

ERROR:SPACING: space required before the open parenthesis '('
#280: FILE: arch/um/kernel/skas/tlb.c:120:
+ 		if(!pgd_present(*pgd)){

ERROR:SPACING: space required before the open brace '{'
#281: FILE: arch/um/kernel/skas/tlb.c:121:
+			if(pgd_newpage(*pgd)){

ERROR:SPACING: space required before the open parenthesis '('
#281: FILE: arch/um/kernel/skas/tlb.c:121:
+			if(pgd_newpage(*pgd)){

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: arch/um/kernel/skas/tlb.c:124:
+				if(last > end)

ERROR:SPACING: space required before the open brace '{'
#303: FILE: arch/um/kernel/skas/tlb.c:137:
+		if(!pud_present(*pud)){

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: arch/um/kernel/skas/tlb.c:137:
+		if(!pud_present(*pud)){

ERROR:SPACING: space required before the open brace '{'
#304: FILE: arch/um/kernel/skas/tlb.c:138:
+			if(pud_newpage(*pud)){

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: arch/um/kernel/skas/tlb.c:138:
+			if(pud_newpage(*pud)){

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: arch/um/kernel/skas/tlb.c:141:
+				if(last > end)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: arch/um/kernel/skas/tlb.c:143:
+^I^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#310: FILE: arch/um/kernel/skas/tlb.c:143:
+				err = os_unmap_memory((void *) addr, 

ERROR:SPACING: space required before the open parenthesis '('
#312: FILE: arch/um/kernel/skas/tlb.c:145:
+				if(err < 0)

ERROR:SPACING: space required before the open brace '{'
#323: FILE: arch/um/kernel/skas/tlb.c:154:
+		if(!pmd_present(*pmd)){

ERROR:SPACING: space required before the open parenthesis '('
#323: FILE: arch/um/kernel/skas/tlb.c:154:
+		if(!pmd_present(*pmd)){

ERROR:SPACING: space required before the open parenthesis '('
#328: FILE: arch/um/kernel/skas/tlb.c:158:
+				if(last > end)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: arch/um/kernel/skas/tlb.c:160:
+^I^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#330: FILE: arch/um/kernel/skas/tlb.c:160:
+				err = os_unmap_memory((void *) addr, 

ERROR:SPACING: space required before the open brace '{'
#341: FILE: arch/um/kernel/skas/tlb.c:171:
+		if(!pte_present(*pte) || pte_newpage(*pte)){

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: arch/um/kernel/skas/tlb.c:171:
+		if(!pte_present(*pte) || pte_newpage(*pte)){

CHECK:SPACING: No space is necessary after a cast
#343: FILE: arch/um/kernel/skas/tlb.c:173:
+			err = os_unmap_memory((void *) addr, PAGE_SIZE);

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: arch/um/kernel/skas/tlb.c:174:
+			if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: arch/um/kernel/skas/tlb.c:176:
+			if(pte_present(*pte))

ERROR:SPACING: space required before the open brace '{'
#350: FILE: arch/um/kernel/skas/tlb.c:180:
+		else if(pte_newprot(*pte)){

ERROR:SPACING: space required before the open parenthesis '('
#350: FILE: arch/um/kernel/skas/tlb.c:180:
+		else if(pte_newprot(*pte)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#350: FILE: arch/um/kernel/skas/tlb.c:180:
 		}
+		else if(pte_newprot(*pte)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/um/kernel/skas/tlb.c:183:
+  ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: arch/um/kernel/skas/tlb.c:183:
+  ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/um/kernel/skas/tlb.c:183:
+  ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/um/kernel/tt/tlb.c:48:
+ ^I^Iif(!pgd_present(*npgd)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: arch/um/kernel/tt/tlb.c:48:
+ ^I^Iif(!pgd_present(*npgd)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: arch/um/kernel/tt/tlb.c:48:
+ ^I^Iif(!pgd_present(*npgd)){$

ERROR:SPACING: space required before the open brace '{'
#407: FILE: arch/um/kernel/tt/tlb.c:48:
+ 		if(!pgd_present(*npgd)){

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: arch/um/kernel/tt/tlb.c:48:
+ 		if(!pgd_present(*npgd)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/um/kernel/tt/tlb.c:49:
+ ^I^I^Iif(force || pgd_newpage(*npgd)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#408: FILE: arch/um/kernel/tt/tlb.c:49:
+ ^I^I^Iif(force || pgd_newpage(*npgd)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/um/kernel/tt/tlb.c:49:
+ ^I^I^Iif(force || pgd_newpage(*npgd)){$

ERROR:SPACING: space required before the open brace '{'
#408: FILE: arch/um/kernel/tt/tlb.c:49:
+ 			if(force || pgd_newpage(*npgd)){

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: arch/um/kernel/tt/tlb.c:49:
+ 			if(force || pgd_newpage(*npgd)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/um/kernel/tt/tlb.c:50:
+ ^I^I^I^Iend = addr + PGDIR_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: arch/um/kernel/tt/tlb.c:50:
+ ^I^I^I^Iend = addr + PGDIR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/um/kernel/tt/tlb.c:50:
+ ^I^I^I^Iend = addr + PGDIR_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/um/kernel/tt/tlb.c:51:
+ ^I^I^I^Iif(end > end_addr)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: arch/um/kernel/tt/tlb.c:51:
+ ^I^I^I^Iif(end > end_addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/um/kernel/tt/tlb.c:51:
+ ^I^I^I^Iif(end > end_addr)$

ERROR:SPACING: space required before the open parenthesis '('
#410: FILE: arch/um/kernel/tt/tlb.c:51:
+ 				if(end > end_addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: arch/um/kernel/tt/tlb.c:52:
+ ^I^I^I^I^Iend = end_addr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: arch/um/kernel/tt/tlb.c:52:
+ ^I^I^I^I^Iend = end_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/um/kernel/tt/tlb.c:52:
+ ^I^I^I^I^Iend = end_addr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/um/kernel/tt/tlb.c:53:
+^I^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#412: FILE: arch/um/kernel/tt/tlb.c:53:
+				err = os_unmap_memory((void *) addr, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/um/kernel/tt/tlb.c:54:
+ ^I^I^I^I^I^I      end - addr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: arch/um/kernel/tt/tlb.c:54:
+ ^I^I^I^I^I^I      end - addr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: arch/um/kernel/tt/tlb.c:54:
+				err = os_unmap_memory((void *) addr, 
+ 						      end - addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/um/kernel/tt/tlb.c:54:
+ ^I^I^I^I^I^I      end - addr);$

ERROR:SPACING: space required before the open parenthesis '('
#414: FILE: arch/um/kernel/tt/tlb.c:55:
+				if(err < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/um/kernel/tt/tlb.c:59:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#418: FILE: arch/um/kernel/tt/tlb.c:59:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/um/kernel/tt/tlb.c:59:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/um/kernel/tt/tlb.c:62:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#421: FILE: arch/um/kernel/tt/tlb.c:62:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/um/kernel/tt/tlb.c:62:
+ ^I^I}$

ERROR:SPACING: space required before the open brace '{'
#436: FILE: arch/um/kernel/tt/tlb.c:65:
+		if(!pud_present(*npud)){

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: arch/um/kernel/tt/tlb.c:65:
+		if(!pud_present(*npud)){

ERROR:SPACING: space required before the open brace '{'
#437: FILE: arch/um/kernel/tt/tlb.c:66:
+			if(force || pud_newpage(*npud)){

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: arch/um/kernel/tt/tlb.c:66:
+			if(force || pud_newpage(*npud)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: arch/um/kernel/tt/tlb.c:67:
+ ^I^I^I^Iend = addr + PUD_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#438: FILE: arch/um/kernel/tt/tlb.c:67:
+ ^I^I^I^Iend = addr + PUD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: arch/um/kernel/tt/tlb.c:67:
+ ^I^I^I^Iend = addr + PUD_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: arch/um/kernel/tt/tlb.c:68:
+ ^I^I^I^Iif(end > end_addr)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: arch/um/kernel/tt/tlb.c:68:
+ ^I^I^I^Iif(end > end_addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/um/kernel/tt/tlb.c:68:
+ ^I^I^I^Iif(end > end_addr)$

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: arch/um/kernel/tt/tlb.c:68:
+ 				if(end > end_addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: arch/um/kernel/tt/tlb.c:69:
+ ^I^I^I^I^Iend = end_addr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: arch/um/kernel/tt/tlb.c:69:
+ ^I^I^I^I^Iend = end_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/um/kernel/tt/tlb.c:69:
+ ^I^I^I^I^Iend = end_addr;$

ERROR:SPACING: space required before the open brace '{'
#464: FILE: arch/um/kernel/tt/tlb.c:82:
+		if(!pmd_present(*npmd)){

ERROR:SPACING: space required before the open parenthesis '('
#464: FILE: arch/um/kernel/tt/tlb.c:82:
+		if(!pmd_present(*npmd)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/um/kernel/tt/tlb.c:84:
+ ^I^I^I^Iend = addr + PMD_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#467: FILE: arch/um/kernel/tt/tlb.c:84:
+ ^I^I^I^Iend = addr + PMD_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/um/kernel/tt/tlb.c:84:
+ ^I^I^I^Iend = addr + PMD_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/um/kernel/tt/tlb.c:85:
+ ^I^I^I^Iif(end > end_addr)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#468: FILE: arch/um/kernel/tt/tlb.c:85:
+ ^I^I^I^Iif(end > end_addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/um/kernel/tt/tlb.c:85:
+ ^I^I^I^Iif(end > end_addr)$

ERROR:SPACING: space required before the open parenthesis '('
#468: FILE: arch/um/kernel/tt/tlb.c:85:
+ 				if(end > end_addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: arch/um/kernel/tt/tlb.c:86:
+ ^I^I^I^I^Iend = end_addr;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#469: FILE: arch/um/kernel/tt/tlb.c:86:
+ ^I^I^I^I^Iend = end_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/um/kernel/tt/tlb.c:86:
+ ^I^I^I^I^Iend = end_addr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: arch/um/kernel/tt/tlb.c:87:
+^I^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#470: FILE: arch/um/kernel/tt/tlb.c:87:
+				err = os_unmap_memory((void *) addr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: arch/um/kernel/tt/tlb.c:102:
+^I^Iif(!pte_dirty(*npte)) $

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: arch/um/kernel/tt/tlb.c:102:
+		if(!pte_dirty(*npte)) 

ERROR:SPACING: space required before the open brace '{'
#487: FILE: arch/um/kernel/tt/tlb.c:104:
+		if(!pte_young(*npte)){

ERROR:SPACING: space required before the open parenthesis '('
#487: FILE: arch/um/kernel/tt/tlb.c:104:
+		if(!pte_young(*npte)){

ERROR:SPACING: space required before the open brace '{'
#491: FILE: arch/um/kernel/tt/tlb.c:108:
+		if(force || pte_newpage(*npte)){

ERROR:SPACING: space required before the open parenthesis '('
#491: FILE: arch/um/kernel/tt/tlb.c:108:
+		if(force || pte_newpage(*npte)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#491: FILE: arch/um/kernel/tt/tlb.c:108:
+		if(force || pte_newpage(*npte)){
[...]
+		else if(pte_newprot(*npte))
[...]

CHECK:SPACING: No space is necessary after a cast
#492: FILE: arch/um/kernel/tt/tlb.c:109:
+			err = os_unmap_memory((void *) addr, PAGE_SIZE);

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: arch/um/kernel/tt/tlb.c:110:
+			if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#495: FILE: arch/um/kernel/tt/tlb.c:112:
+			if(pte_present(*npte))

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: arch/um/kernel/tt/tlb.c:116:
+		else if(pte_newprot(*npte))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#499: FILE: arch/um/kernel/tt/tlb.c:116:
+		}
+		else if(pte_newprot(*npte))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: arch/um/kernel/tt/tlb.c:118:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: arch/um/kernel/tt/tlb.c:140:
+ ^I^Iif(!pgd_present(*pgd)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#527: FILE: arch/um/kernel/tt/tlb.c:140:
+ ^I^Iif(!pgd_present(*pgd)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/um/kernel/tt/tlb.c:140:
+ ^I^Iif(!pgd_present(*pgd)){$

ERROR:SPACING: space required before the open brace '{'
#527: FILE: arch/um/kernel/tt/tlb.c:140:
+ 		if(!pgd_present(*pgd)){

ERROR:SPACING: space required before the open parenthesis '('
#527: FILE: arch/um/kernel/tt/tlb.c:140:
+ 		if(!pgd_present(*pgd)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: arch/um/kernel/tt/tlb.c:141:
+ ^I^I^Iif(pgd_newpage(*pgd)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#528: FILE: arch/um/kernel/tt/tlb.c:141:
+ ^I^I^Iif(pgd_newpage(*pgd)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/um/kernel/tt/tlb.c:141:
+ ^I^I^Iif(pgd_newpage(*pgd)){$

ERROR:SPACING: space required before the open brace '{'
#528: FILE: arch/um/kernel/tt/tlb.c:141:
+ 			if(pgd_newpage(*pgd)){

ERROR:SPACING: space required before the open parenthesis '('
#528: FILE: arch/um/kernel/tt/tlb.c:141:
+ 			if(pgd_newpage(*pgd)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: arch/um/kernel/tt/tlb.c:143:
+ ^I^I^I^Ilast = addr + PGDIR_SIZE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#530: FILE: arch/um/kernel/tt/tlb.c:143:
+ ^I^I^I^Ilast = addr + PGDIR_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/um/kernel/tt/tlb.c:143:
+ ^I^I^I^Ilast = addr + PGDIR_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: arch/um/kernel/tt/tlb.c:144:
+ ^I^I^I^Iif(last > end)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#531: FILE: arch/um/kernel/tt/tlb.c:144:
+ ^I^I^I^Iif(last > end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/um/kernel/tt/tlb.c:144:
+ ^I^I^I^Iif(last > end)$

ERROR:SPACING: space required before the open parenthesis '('
#531: FILE: arch/um/kernel/tt/tlb.c:144:
+ 				if(last > end)

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: arch/um/kernel/tt/tlb.c:145:
+ ^I^I^I^I^Ilast = end;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#532: FILE: arch/um/kernel/tt/tlb.c:145:
+ ^I^I^I^I^Ilast = end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/um/kernel/tt/tlb.c:145:
+ ^I^I^I^I^Ilast = end;$

ERROR:SPACING: space required before the open brace '{'
#550: FILE: arch/um/kernel/tt/tlb.c:157:
+		if(!pud_present(*pud)){

ERROR:SPACING: space required before the open parenthesis '('
#550: FILE: arch/um/kernel/tt/tlb.c:157:
+		if(!pud_present(*pud)){

ERROR:SPACING: space required before the open brace '{'
#551: FILE: arch/um/kernel/tt/tlb.c:158:
+			if(pud_newpage(*pud)){

ERROR:SPACING: space required before the open parenthesis '('
#551: FILE: arch/um/kernel/tt/tlb.c:158:
+			if(pud_newpage(*pud)){

ERROR:SPACING: space required before the open parenthesis '('
#555: FILE: arch/um/kernel/tt/tlb.c:161:
+				if(last > end)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: arch/um/kernel/tt/tlb.c:163:
+^I^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#557: FILE: arch/um/kernel/tt/tlb.c:163:
+				err = os_unmap_memory((void *) addr, 

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: arch/um/kernel/tt/tlb.c:165:
+				if(err < 0)

ERROR:SPACING: space required before the open brace '{'
#570: FILE: arch/um/kernel/tt/tlb.c:174:
+		if(!pmd_present(*pmd)){

ERROR:SPACING: space required before the open parenthesis '('
#570: FILE: arch/um/kernel/tt/tlb.c:174:
+		if(!pmd_present(*pmd)){

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: arch/um/kernel/tt/tlb.c:178:
+				if(last > end)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: arch/um/kernel/tt/tlb.c:180:
+^I^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#577: FILE: arch/um/kernel/tt/tlb.c:180:
+				err = os_unmap_memory((void *) addr, 

ERROR:SPACING: space required before the open brace '{'
#588: FILE: arch/um/kernel/tt/tlb.c:191:
+		if(!pte_present(*pte) || pte_newpage(*pte)){

ERROR:SPACING: space required before the open parenthesis '('
#588: FILE: arch/um/kernel/tt/tlb.c:191:
+		if(!pte_present(*pte) || pte_newpage(*pte)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: arch/um/kernel/tt/tlb.c:193:
+^I^I^Ierr = os_unmap_memory((void *) addr, $

CHECK:SPACING: No space is necessary after a cast
#590: FILE: arch/um/kernel/tt/tlb.c:193:
+			err = os_unmap_memory((void *) addr, 

ERROR:SPACING: space required before the open parenthesis '('
#592: FILE: arch/um/kernel/tt/tlb.c:195:
+			if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#595: FILE: arch/um/kernel/tt/tlb.c:198:
+			if(pte_present(*pte))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: arch/um/kernel/tt/tlb.c:199:
+^I^I^I^Imap_memory(addr, $

ERROR:SPACING: space required before the open brace '{'
#600: FILE: arch/um/kernel/tt/tlb.c:203:
+		else if(pte_newprot(*pte)){

ERROR:SPACING: space required before the open parenthesis '('
#600: FILE: arch/um/kernel/tt/tlb.c:203:
+		else if(pte_newprot(*pte)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#600: FILE: arch/um/kernel/tt/tlb.c:203:
+		}
+		else if(pte_newprot(*pte)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: include/asm-um/page.h:14:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: include/asm-um/page.h:14:
+  $

CHECK:BIT_MACRO: Prefer using the BIT macro
#630: FILE: include/asm-um/page.h:17:
+#define PAGE_SIZE	(1UL << PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#631: FILE: include/asm-um/page.h:18:
+#define PAGE_MASK	(~(PAGE_SIZE-1))
                  	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#638: FILE: include/asm-um/page.h:25:
+#define copy_page(to,from)	memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                     ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#645: FILE: include/asm-um/page.h:32:
+typedef struct { unsigned long pte_low, pte_high; } pte_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#646: FILE: include/asm-um/page.h:33:
+typedef struct { unsigned long long pmd; } pmd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#647: FILE: include/asm-um/page.h:34:
+typedef struct { unsigned long pgd; } pgd_t;

CHECK:SPACING: No space is necessary after a cast
#648: FILE: include/asm-um/page.h:35:
+#define pte_val(x) ((x).pte_low | ((unsigned long long) (x).pte_high << 32))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#648: FILE: include/asm-um/page.h:35:
+#define pte_val(x) ((x).pte_low | ((unsigned long long) (x).pte_high << 32))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'to' - possible side-effects?
#653: FILE: include/asm-um/page.h:40:
+#define pte_copy(to, from) ({ (to).pte_high = (from).pte_high; \
+			      smp_wmb(); \
+			      (to).pte_low = (from).pte_low; })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'from' - possible side-effects?
#653: FILE: include/asm-um/page.h:40:
+#define pte_copy(to, from) ({ (to).pte_high = (from).pte_high; \
+			      smp_wmb(); \
+			      (to).pte_low = (from).pte_low; })

WARNING:MEMORY_BARRIER: memory barrier without comment
#654: FILE: include/asm-um/page.h:41:
+			      smp_wmb(); \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#656: FILE: include/asm-um/page.h:43:
+#define pte_is_zero(pte) (!((pte).pte_low & ~_PAGE_NEWPAGE) && !(pte).pte_high)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#657: FILE: include/asm-um/page.h:44:
+#define pte_set_val(pte, phys, prot) \
+	({ (pte).pte_high = (phys) >> 32; \
+	   (pte).pte_low = (phys) | pgprot_val(prot); })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'phys' - possible side-effects?
#657: FILE: include/asm-um/page.h:44:
+#define pte_set_val(pte, phys, prot) \
+	({ (pte).pte_high = (phys) >> 32; \
+	   (pte).pte_low = (phys) | pgprot_val(prot); })

WARNING:NEW_TYPEDEFS: do not add new typedefs
#661: FILE: include/asm-um/page.h:48:
+typedef unsigned long long pfn_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#662: FILE: include/asm-um/page.h:49:
+typedef unsigned long long phys_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#666: FILE: include/asm-um/page.h:53:
+typedef struct { unsigned long pte; } pte_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#667: FILE: include/asm-um/page.h:54:
+typedef struct { unsigned long pgd; } pgd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#670: FILE: include/asm-um/page.h:57:
+typedef struct { unsigned long pmd; } pmd_t;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#672: FILE: include/asm-um/page.h:59:
+#define __pmd(x) ((pmd_t) { (x) } )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'phys' may be better as '(phys)' to avoid precedence issues
#693: FILE: include/asm-um/page.h:70:
+#define pte_set_val(p, phys, prot) (p).pte = (phys | pgprot_val(prot))

WARNING:NEW_TYPEDEFS: do not add new typedefs
#695: FILE: include/asm-um/page.h:72:
+typedef unsigned long pfn_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#696: FILE: include/asm-um/page.h:73:
+typedef unsigned long phys_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#700: FILE: include/asm-um/page.h:77:
+typedef struct { unsigned long pgprot; } pgprot_t;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#705: FILE: include/asm-um/page.h:82:
+#define __pte(x) ((pte_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#706: FILE: include/asm-um/page.h:83:
+#define __pgd(x) ((pgd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#707: FILE: include/asm-um/page.h:84:
+#define __pgprot(x)	((pgprot_t) { (x) } )

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#710: FILE: include/asm-um/page.h:87:
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
                         	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#710: FILE: include/asm-um/page.h:87:
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
                         	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#710: FILE: include/asm-um/page.h:87:
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
                         	                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: include/asm-um/page.h:88:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: include/asm-um/page.h:88:
+  $

WARNING:INLINE: plain inline is preferred over __inline__
#728: FILE: include/asm-um/page.h:115:
+static __inline__ int get_order(unsigned long size)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#732: FILE: include/asm-um/page.h:119:
+	size = (size-1) >> (PAGE_SHIFT-1);
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#732: FILE: include/asm-um/page.h:119:
+	size = (size-1) >> (PAGE_SHIFT-1);
 	                              ^

CHECK:SPACING: No space is necessary after a cast
#765: FILE: include/asm-um/pgalloc.h:16:
+	set_pmd(pmd, __pmd(_PAGE_TABLE + (unsigned long) __pa(pte)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: include/asm-um/pgtable-2level.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#793: FILE: include/asm-um/pgtable-2level.h:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#808: FILE: include/asm-um/pgtable-2level.h:16:
+#define PGDIR_SIZE	(1UL << PGDIR_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#809: FILE: include/asm-um/pgtable-2level.h:17:
+#define PGDIR_MASK	(~(PGDIR_SIZE-1))
                   	             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#821: FILE: include/asm-um/pgtable-2level.h:29:
+#define pte_ERROR(e) \
+        printk("%s:%d: bad pte %p(%08lx).\n", __FILE__, __LINE__, &(e), \
+	       pte_val(e))

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: include/asm-um/pgtable-2level.h:30:
+        printk("%s:%d: bad pte %p(%08lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: include/asm-um/pgtable-2level.h:30:
+        printk("%s:%d: bad pte %p(%08lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#822: FILE: include/asm-um/pgtable-2level.h:30:
+        printk("%s:%d: bad pte %p(%08lx).\n", __FILE__, __LINE__, &(e), \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#824: FILE: include/asm-um/pgtable-2level.h:32:
+#define pgd_ERROR(e) \
+        printk("%s:%d: bad pgd %p(%08lx).\n", __FILE__, __LINE__, &(e), \
+	       pgd_val(e))

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: include/asm-um/pgtable-2level.h:33:
+        printk("%s:%d: bad pgd %p(%08lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: include/asm-um/pgtable-2level.h:33:
+        printk("%s:%d: bad pgd %p(%08lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#825: FILE: include/asm-um/pgtable-2level.h:33:
+        printk("%s:%d: bad pgd %p(%08lx).\n", __FILE__, __LINE__, &(e), \

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: include/asm-um/pgtable-2level.h:43:
+ ^Ipte_val(pte) |= _PAGE_NEWPROT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#835: FILE: include/asm-um/pgtable-2level.h:43:
+ ^Ipte_val(pte) |= _PAGE_NEWPROT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: include/asm-um/pgtable-2level.h:43:
+ ^Ipte_val(pte) |= _PAGE_NEWPROT;$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#836: FILE: include/asm-um/pgtable-2level.h:44:
+	return(pte);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#842: FILE: include/asm-um/pgtable-2level.h:50:
+	return(pte);

ERROR:SPACING: space required before the open parenthesis '('
#852: FILE: include/asm-um/pgtable-2level.h:60:
+	if(pte_present(*pteptr)) *pteptr = pte_mknewprot(*pteptr);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#852: FILE: include/asm-um/pgtable-2level.h:60:
+	if(pte_present(*pteptr)) *pteptr = pte_mknewprot(*pteptr);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#864: FILE: include/asm-um/pgtable-2level.h:72:
+	((unsigned long) __va(pmd_val(pmd) & PAGE_MASK))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: include/asm-um/pgtable-3level.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#881: FILE: include/asm-um/pgtable-3level.h:1:
+/* 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#883: FILE: include/asm-um/pgtable-3level.h:3:
+ * Derived from include/asm-i386/pgtable.h $

CHECK:BIT_MACRO: Prefer using the BIT macro
#895: FILE: include/asm-um/pgtable-3level.h:15:
+#define PGDIR_SIZE	(1UL << PGDIR_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#896: FILE: include/asm-um/pgtable-3level.h:16:
+#define PGDIR_MASK	(~(PGDIR_SIZE-1))
                   	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: include/asm-um/pgtable-3level.h:18:
+/* PMD_SHIFT determines the size of the area a second-level page table can $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: include/asm-um/pgtable-3level.h:19:
+ * map $

CHECK:BIT_MACRO: Prefer using the BIT macro
#903: FILE: include/asm-um/pgtable-3level.h:23:
+#define PMD_SIZE	(1UL << PMD_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#904: FILE: include/asm-um/pgtable-3level.h:24:
+#define PMD_MASK	(~(PMD_SIZE-1))
                 	           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#916: FILE: include/asm-um/pgtable-3level.h:36:
+#define pte_ERROR(e) \
+        printk("%s:%d: bad pte %p(%016lx).\n", __FILE__, __LINE__, &(e), \
+	       pte_val(e))

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: include/asm-um/pgtable-3level.h:37:
+        printk("%s:%d: bad pte %p(%016lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: include/asm-um/pgtable-3level.h:37:
+        printk("%s:%d: bad pte %p(%016lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#917: FILE: include/asm-um/pgtable-3level.h:37:
+        printk("%s:%d: bad pte %p(%016lx).\n", __FILE__, __LINE__, &(e), \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#919: FILE: include/asm-um/pgtable-3level.h:39:
+#define pmd_ERROR(e) \
+        printk("%s:%d: bad pmd %p(%016lx).\n", __FILE__, __LINE__, &(e), \
+	       pmd_val(e))

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: include/asm-um/pgtable-3level.h:40:
+        printk("%s:%d: bad pmd %p(%016lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: include/asm-um/pgtable-3level.h:40:
+        printk("%s:%d: bad pmd %p(%016lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#920: FILE: include/asm-um/pgtable-3level.h:40:
+        printk("%s:%d: bad pmd %p(%016lx).\n", __FILE__, __LINE__, &(e), \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#922: FILE: include/asm-um/pgtable-3level.h:42:
+#define pgd_ERROR(e) \
+        printk("%s:%d: bad pgd %p(%016lx).\n", __FILE__, __LINE__, &(e), \
+	       pgd_val(e))

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: include/asm-um/pgtable-3level.h:43:
+        printk("%s:%d: bad pgd %p(%016lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: include/asm-um/pgtable-3level.h:43:
+        printk("%s:%d: bad pgd %p(%016lx).\n", __FILE__, __LINE__, &(e), \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#923: FILE: include/asm-um/pgtable-3level.h:43:
+        printk("%s:%d: bad pgd %p(%016lx).\n", __FILE__, __LINE__, &(e), \

CHECK:SPACING: No space is necessary after a cast
#932: FILE: include/asm-um/pgtable-3level.h:52:
+#define set_pud(pudptr, pudval) set_64bit((phys_t *) (pudptr), pud_val(pudval))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#940: FILE: include/asm-um/pgtable-3level.h:60:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: include/asm-um/pgtable-3level.h:65:
+        pte_set_bits(pte, _PAGE_NEWPROT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: include/asm-um/pgtable-3level.h:65:
+        pte_set_bits(pte, _PAGE_NEWPROT);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#946: FILE: include/asm-um/pgtable-3level.h:66:
+	return(pte);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#952: FILE: include/asm-um/pgtable-3level.h:72:
+	return(pte);

ERROR:SPACING: space required before the open parenthesis '('
#965: FILE: include/asm-um/pgtable-3level.h:85:
+	if(pte_present(*pteptr)) *pteptr = pte_mknewprot(*pteptr);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#965: FILE: include/asm-um/pgtable-3level.h:85:
+	if(pte_present(*pteptr)) *pteptr = pte_mknewprot(*pteptr);

CHECK:SPACING: No space is necessary after a cast
#968: FILE: include/asm-um/pgtable-3level.h:88:
+#define set_pmd(pmdptr, pmdval) set_64bit((phys_t *) (pmdptr), pmd_val(pmdval))

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: include/asm-um/pgtable-3level.h:92:
+        pmd_t *pmd = (pmd_t *) __get_free_page(GFP_KERNEL);$

CHECK:SPACING: No space is necessary after a cast
#972: FILE: include/asm-um/pgtable-3level.h:92:
+        pmd_t *pmd = (pmd_t *) __get_free_page(GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: include/asm-um/pgtable-3level.h:92:
+        pmd_t *pmd = (pmd_t *) __get_free_page(GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: include/asm-um/pgtable-3level.h:94:
+        if(pmd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: include/asm-um/pgtable-3level.h:94:
+        if(pmd)$

ERROR:SPACING: space required before the open parenthesis '('
#974: FILE: include/asm-um/pgtable-3level.h:94:
+        if(pmd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: include/asm-um/pgtable-3level.h:95:
+                memset(pmd, 0, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: include/asm-um/pgtable-3level.h:95:
+                memset(pmd, 0, PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: include/asm-um/pgtable-3level.h:97:
+        return pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: include/asm-um/pgtable-3level.h:97:
+        return pmd;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#980: FILE: include/asm-um/pgtable-3level.h:100:
+static inline void pmd_free(pmd_t *pmd){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#980: FILE: include/asm-um/pgtable-3level.h:100:
+static inline void pmd_free(pmd_t *pmd){

CHECK:SPACING: No space is necessary after a cast
#981: FILE: include/asm-um/pgtable-3level.h:101:
+	free_page((unsigned long) pmd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: include/asm-um/pgtable-3level.h:104:
+#define __pmd_free_tlb(tlb,x)   do { } while (0)
                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#986: FILE: include/asm-um/pgtable-3level.h:106:
+static inline void pud_clear (pud_t * pud) { }

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#986: FILE: include/asm-um/pgtable-3level.h:106:
+static inline void pud_clear (pud_t * pud) { }

CHECK:SPACING: No space is necessary after a cast
#989: FILE: include/asm-um/pgtable-3level.h:109:
+	((struct page *) __va(pud_val(pud) & PAGE_MASK))

CHECK:SPACING: No space is necessary after a cast
#992: FILE: include/asm-um/pgtable-3level.h:112:
+#define pmd_offset(pud, address) ((pmd_t *) pud_page(*(pud)) + \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1128: FILE: include/asm-um/pgtable.h:61:
+#define VMALLOC_START ((end_iomem + VMALLOC_OFFSET) & ~(VMALLOC_OFFSET-1))
                                                                       ^

CHECK:SPACING: No space is necessary after a cast
#1149: FILE: include/asm-um/pgtable.h:70:
+#define REGION_MASK	(((unsigned long) 0xf) << REGION_SHIFT)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long) 0xf' could be '0xfUL'
#1149: FILE: include/asm-um/pgtable.h:70:
+#define REGION_MASK	(((unsigned long) 0xf) << REGION_SHIFT)

CHECK:SPACING: No space is necessary after a cast
#1168: FILE: include/asm-um/pgtable.h:144:
+#define pte_clear(xp) pte_set_val(*(xp), (phys_t) 0, __pgprot(_PAGE_NEWPAGE))

CHECK:SPACING: No space is necessary after a cast
#1239: FILE: include/asm-um/pgtable.h:168:
+#define mk_phys(a, r) ((a) + (((unsigned long) r) << REGION_SHIFT))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1241: FILE: include/asm-um/pgtable.h:170:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: include/asm-um/pgtable.h:170:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1250: FILE: include/asm-um/pgtable.h:177:
+^Ireturn((pte_get_bits(pte, _PAGE_USER)) && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: include/asm-um/pgtable.h:183:
+^Ireturn((pte_get_bits(pte, _PAGE_USER)) && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: include/asm-um/pgtable.h:206:
+static inline int pte_dirty(pte_t pte) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: include/asm-um/pgtable.h:289:
+^Iif(pte_present(pte)) $

ERROR:SPACING: space required before the open parenthesis '('
#1385: FILE: include/asm-um/pgtable.h:289:
+	if(pte_present(pte)) 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1391: FILE: include/asm-um/pgtable.h:294:
+extern phys_t page_to_phys(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1414: FILE: include/asm-um/pgtable.h:340:
+#define pmd_index(address) (((address) >> PMD_SHIFT) & (PTRS_PER_PMD-1))
                                                                     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1429: FILE: include/asm-um/pgtable.h:378:
+extern struct page *phys_to_page(const unsigned long phys);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1430: FILE: include/asm-um/pgtable.h:379:
+extern struct page *__virt_to_page(const unsigned long virt);

CHECK:SPACING: No space is necessary after a cast
#1431: FILE: include/asm-um/pgtable.h:380:
+#define virt_to_page(addr) __virt_to_page((const unsigned long) addr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1441: FILE: include/asm-um/vm-flags-i386.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1441: FILE: include/asm-um/vm-flags-i386.h:1:
+/* 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1451: FILE: include/asm-um/vm-flags-i386.h:11:
+	((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: include/asm-um/vm-flags-x86_64.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1460: FILE: include/asm-um/vm-flags-x86_64.h:1:
+/* 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1471: FILE: include/asm-um/vm-flags-x86_64.h:12:
+#define __VM_STACK_FLAGS ^I(VM_GROWSDOWN | VM_READ | VM_WRITE | \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1481: FILE: include/asm-um/vm-flags-x86_64.h:22:
+^I  vm_data_default_flags) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1484: FILE: include/asm-um/vm-flags-x86_64.h:25:
+^I(test_thread_flag(TIF_IA32) ? vm_stack_flags32 : vm_stack_flags) $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217276.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 169 errors, 84 warnings, 62 checks, 1351 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217276.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
