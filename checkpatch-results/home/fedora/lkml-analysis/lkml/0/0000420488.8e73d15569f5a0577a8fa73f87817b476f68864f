WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal working-2.5.44-mm3-cpu-iterators/arch/i386/kernel/cpu/common.c working-2.5.44-mm3-cpu-driverfs/arch/i386/kernel/cpu/common.c

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/smp.h:104:
+extern int register_cpu_notifier(struct notifier_block *nb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/linux/smp.h:105:
+extern void unregister_cpu_notifier(struct notifier_block *nb);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#176: FILE: kernel/cpu.c:74:
+}
+void unregister_cpu_notifier(struct notifier_block *nb)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#179: FILE: kernel/cpu.c:77:
+}
+int __devinit cpu_up(unsigned int cpu)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#179: FILE: kernel/cpu.c:77:
+int __devinit cpu_up(unsigned int cpu)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#181: FILE: kernel/cpu.c:79:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#202: FILE: kernel/cpu.c:100:
+	for (i = first_possible_cpu(); i < NR_CPUS; i = next_possible_cpu(i)) {

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#209: FILE: kernel/cpu.c:107:
+__initcall(register_cpus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#211: FILE: kernel/cpu.c:109:
+EXPORT_SYMBOL_GPL(register_cpu_notifier);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#212: FILE: kernel/cpu.c:110:
+EXPORT_SYMBOL_GPL(unregister_cpu_notifier);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 4 checks, 133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
