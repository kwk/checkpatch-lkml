WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
>>diff -Nuar linux-2.6.9.orig/drivers/serial/jsm/jsm_tty.c linux-2.6.9.new/drivers/serial/jsm/jsm_tty.c

WARNING:TYPO_SPELLING: 'informaion' may be misspelled - perhaps 'information'?
#134: 
For patch2, the major changes are debug informaion.
                                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#154: FILE: drivers/serial/jsm/jsm_tty.c:1:
+/************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/serial/jsm/jsm_tty.c:10:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/serial/jsm/jsm_tty.c:12:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/serial/jsm/jsm_tty.c:13:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: drivers/serial/jsm/jsm_tty.c:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/serial/jsm/jsm_tty.c:16:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: drivers/serial/jsm/jsm_tty.c:17:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#170: FILE: drivers/serial/jsm/jsm_tty.c:17:
+ * along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/serial/jsm/jsm_tty.c:28:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/serial/jsm/jsm_tty.c:31:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#194: FILE: drivers/serial/jsm/jsm_tty.c:41:
+#include <asm/uaccess.h>	/* For copy_from_user/copy_to_user */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#276: FILE: drivers/serial/jsm/jsm_tty.c:123:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: drivers/serial/jsm/jsm_tty.c:141:
+	struct jsm_channel *channel = (struct jsm_channel *)port;
+	DPRINTK(IOCTL, INFO, "start\n");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#354: FILE: drivers/serial/jsm/jsm_tty.c:201:
+		channel->ch_rqueue = (u8 *) kmalloc(RQUEUESIZE, GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#354: FILE: drivers/serial/jsm/jsm_tty.c:201:
+		channel->ch_rqueue = (u8 *) kmalloc(RQUEUESIZE, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#362: FILE: drivers/serial/jsm/jsm_tty.c:209:
+		channel->ch_equeue = (u8 *) kmalloc(EQUEUESIZE, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#362: FILE: drivers/serial/jsm/jsm_tty.c:209:
+		channel->ch_equeue = (u8 *) kmalloc(EQUEUESIZE, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#370: FILE: drivers/serial/jsm/jsm_tty.c:217:
+		channel->ch_wqueue = (u8 *) kmalloc(WQUEUESIZE, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#370: FILE: drivers/serial/jsm/jsm_tty.c:217:
+		channel->ch_wqueue = (u8 *) kmalloc(WQUEUESIZE, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#387: FILE: drivers/serial/jsm/jsm_tty.c:234:
+	channel->ch_r_head = channel->ch_r_tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#388: FILE: drivers/serial/jsm/jsm_tty.c:235:
+	channel->ch_e_head = channel->ch_e_tail = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#389: FILE: drivers/serial/jsm/jsm_tty.c:236:
+	channel->ch_w_head = channel->ch_w_tail = 0;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#427: FILE: drivers/serial/jsm/jsm_tty.c:274:
+	DPRINTK(CLOSE, INFO, "start \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#456: FILE: drivers/serial/jsm/jsm_tty.c:303:
+static void jsm_tty_set_termios(struct uart_port *port,
+				 struct termios *termios,

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#494: FILE: drivers/serial/jsm/jsm_tty.c:341:
+static struct uart_ops jsm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#525: FILE: drivers/serial/jsm/jsm_tty.c:372:
+			printk(KERN_ERR "Can't register tty device (%d)\n", rc);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#568: FILE: drivers/serial/jsm/jsm_tty.c:415:
+		if (!brd->channels[i]) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*brd->channels[i])...) over kmalloc(sizeof(struct jsm_channel)...)
#573: FILE: drivers/serial/jsm/jsm_tty.c:420:
+			brd->channels[i] = kmalloc(sizeof(struct jsm_channel), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE_STRING: line length of 106 exceeds 100 columns
#575: FILE: drivers/serial/jsm/jsm_tty.c:422:
+				DPRINTK(CORE, ERR, "%s:%d Unable to allocate memory for channel struct\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/serial/jsm/jsm_tty.c:423:
+				DPRINTK(CORE, ERR, "%s:%d Unable to allocate memory for channel struct\n",
+							 __FILE__, __LINE__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#587: FILE: drivers/serial/jsm/jsm_tty.c:434:
+	for (i = 0; i < brd->nasync; i++, ch = brd->channels[i]) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/serial/jsm/jsm_tty.c:441:
+^I^I^Ich->ch_neo_uart = (struct neo_uart_struct *) ((u64) vaddr $

CHECK:SPACING: No space is necessary after a cast
#594: FILE: drivers/serial/jsm/jsm_tty.c:441:
+			ch->ch_neo_uart = (struct neo_uart_struct *) ((u64) vaddr 

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#630: FILE: drivers/serial/jsm/jsm_tty.c:477:
+	for (i = 0; i < brd->nasync; i++, ch = brd->channels[i]) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: drivers/serial/jsm/jsm_tty.c:488:
+^I^Iif (uart_add_one_port (&jsm_uart_driver, &brd->channels[i]->uart_port)) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#641: FILE: drivers/serial/jsm/jsm_tty.c:488:
+		if (uart_add_one_port (&jsm_uart_driver, &brd->channels[i]->uart_port)) 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#642: FILE: drivers/serial/jsm/jsm_tty.c:489:
+			printk(KERN_INFO "Added device failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#644: FILE: drivers/serial/jsm/jsm_tty.c:491:
+			printk(KERN_INFO "Added device \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#644: FILE: drivers/serial/jsm/jsm_tty.c:491:
+			printk(KERN_INFO "Added device \n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#669: FILE: drivers/serial/jsm/jsm_tty.c:516:
+	for (i = 0; i < brd->nasync; i++) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/serial/jsm/jsm_tty.c:522:
+^I^Iuart_remove_one_port(&jsm_uart_driver, &brd->channels[i]->uart_port);  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: drivers/serial/jsm/jsm_tty.c:533:
+ * resources. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: drivers/serial/jsm/jsm_tty.c:545:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/serial/jsm/jsm_tty.c:547:
+ * $

WARNING:TYPO_SPELLING: 'strat' may be misspelled - perhaps 'start'?
#720: FILE: drivers/serial/jsm/jsm_tty.c:567:
+	DPRINTK(READ, INFO, "strat\n");
 	                     ^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#727: FILE: drivers/serial/jsm/jsm_tty.c:574:
+	if(!bd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: drivers/serial/jsm/jsm_tty.c:579:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: drivers/serial/jsm/jsm_tty.c:601:
+^Iif (!tp || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: drivers/serial/jsm/jsm_tty.c:602:
+	if (!tp || 
+		!(tp->termios->c_cflag & CREAD) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#755: FILE: drivers/serial/jsm/jsm_tty.c:602:
+		!(tp->termios->c_cflag & CREAD) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#756: FILE: drivers/serial/jsm/jsm_tty.c:603:
+		!(tp->termios->c_cflag & CREAD) ) {
+

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#757: FILE: drivers/serial/jsm/jsm_tty.c:604:
+		DPRINTK(READ, INFO, "input. dropping %d bytes on port %d...\n", data_len, ch->ch_portnum);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: drivers/serial/jsm/jsm_tty.c:628:
+^I * as we can directly into the linux TTY flip buffer.  $

CHECK:BRACES: braces {} should be used on all arms of this statement
#790: FILE: drivers/serial/jsm/jsm_tty.c:637:
+	if (rawreadok) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#795: FILE: drivers/serial/jsm/jsm_tty.c:642:
+	} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_input', this function's name, in a string
#803: FILE: drivers/serial/jsm/jsm_tty.c:650:
+		DPRINTK(READ, INFO, "jsm_input 1 - finish\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: drivers/serial/jsm/jsm_tty.c:657:
+^I */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: drivers/serial/jsm/jsm_tty.c:706:
+^I/*  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: drivers/serial/jsm/jsm_tty.c:723:
+^I^I^I^Ielse $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#887: FILE: drivers/serial/jsm/jsm_tty.c:734:
+	}
+	else if (!tp->real_raw) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#888: FILE: drivers/serial/jsm/jsm_tty.c:735:
+		if (I_PARMRK(tp) || I_BRKINT(tp) || I_INPCK(tp)) {
[...]
+		} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#900: FILE: drivers/serial/jsm/jsm_tty.c:747:
+^I^I^I^Ielse $

CHECK:BRACES: Unbalanced braces around else statement
#903: FILE: drivers/serial/jsm/jsm_tty.c:750:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#922: FILE: drivers/serial/jsm/jsm_tty.c:769:
+^I^I^IDPRINTK(READ, INFO, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_input', this function's name, in a string
#923: FILE: drivers/serial/jsm/jsm_tty.c:770:
+				"jsm_input. %d real_raw len:%d calling receive_buf for board %d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#942: FILE: drivers/serial/jsm/jsm_tty.c:789:
+^I^I^I^I"jsm_input. %d not real_raw len:%d calling receive_buf for board %d\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_input', this function's name, in a string
#942: FILE: drivers/serial/jsm/jsm_tty.c:789:
+				"jsm_input. %d not real_raw len:%d calling receive_buf for board %d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: drivers/serial/jsm/jsm_tty.c:802:
+^I^IDPRINTK(READ, INFO, "jsm_input. %d not jsm_read raw okay scheduling flip\n", __LINE__); $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#955: FILE: drivers/serial/jsm/jsm_tty.c:802:
+		DPRINTK(READ, INFO, "jsm_input. %d not jsm_read raw okay scheduling flip\n", __LINE__); 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_input', this function's name, in a string
#955: FILE: drivers/serial/jsm/jsm_tty.c:802:
+		DPRINTK(READ, INFO, "jsm_input. %d not jsm_read raw okay scheduling flip\n", __LINE__); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#968: FILE: drivers/serial/jsm/jsm_tty.c:815:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: drivers/serial/jsm/jsm_tty.c:815:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: drivers/serial/jsm/jsm_tty.c:818:
+   ^I^Ireturn;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#971: FILE: drivers/serial/jsm/jsm_tty.c:818:
+   ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: drivers/serial/jsm/jsm_tty.c:818:
+   ^I^Ireturn;$

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#979: FILE: drivers/serial/jsm/jsm_tty.c:826:
+		DPRINTK(CARR, INFO, "mistat: %x  D_CD: %x\n", ch->ch_mistat, ch->ch_mistat & UART_MSR_DCD);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'virt_carrier == 1'
#991: FILE: drivers/serial/jsm/jsm_tty.c:838:
+	if (((ch->ch_flags & CH_FCAR) == 0) && (virt_carrier == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#992: FILE: drivers/serial/jsm/jsm_tty.c:839:
+	if (((ch->ch_flags & CH_FCAR) == 0) && (virt_carrier == 1)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ch->ch_flags_wait
#1000: FILE: drivers/serial/jsm/jsm_tty.c:847:
+		if (waitqueue_active(&(ch->ch_flags_wait)))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1000: FILE: drivers/serial/jsm/jsm_tty.c:847:
+		if (waitqueue_active(&(ch->ch_flags_wait)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phys_carrier == 1'
#1007: FILE: drivers/serial/jsm/jsm_tty.c:854:
+	if (((ch->ch_flags & CH_CD) == 0) && (phys_carrier == 1)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1008: FILE: drivers/serial/jsm/jsm_tty.c:855:
+	if (((ch->ch_flags & CH_CD) == 0) && (phys_carrier == 1)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ch->ch_flags_wait
#1016: FILE: drivers/serial/jsm/jsm_tty.c:863:
+		if (waitqueue_active(&(ch->ch_flags_wait)))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#1016: FILE: drivers/serial/jsm/jsm_tty.c:863:
+		if (waitqueue_active(&(ch->ch_flags_wait)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: drivers/serial/jsm/jsm_tty.c:876:
+^Iif ((virt_carrier == 0) && ((ch->ch_flags & CH_CD) != 0) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'virt_carrier == 0'
#1029: FILE: drivers/serial/jsm/jsm_tty.c:876:
+	if ((virt_carrier == 0) && ((ch->ch_flags & CH_CD) != 0) 
+			&& (phys_carrier == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phys_carrier == 0'
#1029: FILE: drivers/serial/jsm/jsm_tty.c:876:
+	if ((virt_carrier == 0) && ((ch->ch_flags & CH_CD) != 0) 
+			&& (phys_carrier == 0)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1030: FILE: drivers/serial/jsm/jsm_tty.c:877:
+	if ((virt_carrier == 0) && ((ch->ch_flags & CH_CD) != 0) 
+			&& (phys_carrier == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ch->ch_flags_wait
#1043: FILE: drivers/serial/jsm/jsm_tty.c:890:
+		if (waitqueue_active(&(ch->ch_flags_wait)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: drivers/serial/jsm/jsm_tty.c:908:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1067: FILE: drivers/serial/jsm/jsm_tty.c:914:
+	if ((qleft = ch->ch_r_tail - ch->ch_r_head - 1) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#1088: FILE: drivers/serial/jsm/jsm_tty.c:935:
+			if(!(ch->ch_flags & CH_RECEIVER_OFF)) {

WARNING:LONG_LINE_STRING: line length of 118 exceeds 100 columns
#1091: FILE: drivers/serial/jsm/jsm_tty.c:938:
+				DPRINTK(READ, INFO, "Internal queue hit hilevel mark (%d)! Turning off interrupts.\n",

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1100: FILE: drivers/serial/jsm/jsm_tty.c:947:
+				DPRINTK(READ, INFO, "Sending stop char!  Times sent: %x\n", ch->ch_stops_sent);

WARNING:LONG_LINE_STRING: line length of 118 exceeds 100 columns
#1126: FILE: drivers/serial/jsm/jsm_tty.c:973:
+				DPRINTK(READ, INFO, "Internal queue hit lowlevel mark (%d)! Turning on interrupts.\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1148: FILE: drivers/serial/jsm/jsm_tty.c:995:
+	int data_count = 0,data_count1 =0;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1148: FILE: drivers/serial/jsm/jsm_tty.c:995:
+	int data_count = 0,data_count1 =0;
 	                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1160: FILE: drivers/serial/jsm/jsm_tty.c:1007:
+	if ((bufcount = tail - head - 1) < 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1172: FILE: drivers/serial/jsm/jsm_tty.c:1019:
+		while ((port->info->xmit.head != temp_tail) &&
+		(data_count < remain)) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1180: FILE: drivers/serial/jsm/jsm_tty.c:1027:
+		if (data_count == remain) head = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1187: FILE: drivers/serial/jsm/jsm_tty.c:1034:
+		while ((port->info->xmit.head != temp_tail) &&
+			(data_count1 < remain)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1195: FILE: drivers/serial/jsm/jsm_tty.c:1042:
+
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1206: FILE: drivers/serial/jsm/jsm_tty.c:1053:
+	if (data_count) {
+		channel->ch_bd->bd_ops->copy_data_from_queue_to_uart(channel);
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1212: FILE: drivers/serial/jsm/jsm_tty.c:1059:
+}
+#if TRC_TO_IOCTL

ERROR:SPACING: space required before the open parenthesis '('
#1220: FILE: drivers/serial/jsm/jsm_tty.c:1067:
+	switch(cmd) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1221: FILE: drivers/serial/jsm/jsm_tty.c:1068:
+	switch(cmd) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1222: FILE: drivers/serial/jsm/jsm_tty.c:1069:
+	case TCGETA:		return("TCGETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1223: FILE: drivers/serial/jsm/jsm_tty.c:1070:
+	case TCGETS:		return("TCGETS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1224: FILE: drivers/serial/jsm/jsm_tty.c:1071:
+	case TCSETA:		return("TCSETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1225: FILE: drivers/serial/jsm/jsm_tty.c:1072:
+	case TCSETS:		return("TCSETS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1226: FILE: drivers/serial/jsm/jsm_tty.c:1073:
+	case TCSETAW:		return("TCSETAW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1227: FILE: drivers/serial/jsm/jsm_tty.c:1074:
+	case TCSETSW:		return("TCSETSW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1228: FILE: drivers/serial/jsm/jsm_tty.c:1075:
+	case TCSETAF:		return("TCSETAF");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1229: FILE: drivers/serial/jsm/jsm_tty.c:1076:
+	case TCSETSF:		return("TCSETSF");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1230: FILE: drivers/serial/jsm/jsm_tty.c:1077:
+	case TCSBRK:		return("TCSBRK");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1231: FILE: drivers/serial/jsm/jsm_tty.c:1078:
+	case TCXONC:		return("TCXONC");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1232: FILE: drivers/serial/jsm/jsm_tty.c:1079:
+	case TCFLSH:		return("TCFLSH");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1233: FILE: drivers/serial/jsm/jsm_tty.c:1080:
+	case TIOCGSID:		return("TIOCGSID");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1235: FILE: drivers/serial/jsm/jsm_tty.c:1082:
+	case TIOCGETD:		return("TIOCGETD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1236: FILE: drivers/serial/jsm/jsm_tty.c:1083:
+	case TIOCSETD:		return("TIOCSETD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1237: FILE: drivers/serial/jsm/jsm_tty.c:1084:
+	case TIOCGWINSZ:	return("TIOCGWINSZ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1238: FILE: drivers/serial/jsm/jsm_tty.c:1085:
+	case TIOCSWINSZ:	return("TIOCSWINSZ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1240: FILE: drivers/serial/jsm/jsm_tty.c:1087:
+	case TIOCMGET:		return("TIOCMGET");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1241: FILE: drivers/serial/jsm/jsm_tty.c:1088:
+	case TIOCMSET:		return("TIOCMSET");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1242: FILE: drivers/serial/jsm/jsm_tty.c:1089:
+	case TIOCMBIS:		return("TIOCMBIS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1243: FILE: drivers/serial/jsm/jsm_tty.c:1090:
+	case TIOCMBIC:		return("TIOCMBIC");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1246: FILE: drivers/serial/jsm/jsm_tty.c:1093:
+	case DIGI_SETA:		return("DIGI_SETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1247: FILE: drivers/serial/jsm/jsm_tty.c:1094:
+	case DIGI_SETAW:	return("DIGI_SETAW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1248: FILE: drivers/serial/jsm/jsm_tty.c:1095:
+	case DIGI_SETAF:	return("DIGI_SETAF");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1249: FILE: drivers/serial/jsm/jsm_tty.c:1096:
+	case DIGI_SETFLOW:	return("DIGI_SETFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1250: FILE: drivers/serial/jsm/jsm_tty.c:1097:
+	case DIGI_SETAFLOW:	return("DIGI_SETAFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1251: FILE: drivers/serial/jsm/jsm_tty.c:1098:
+	case DIGI_GETFLOW:	return("DIGI_GETFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1252: FILE: drivers/serial/jsm/jsm_tty.c:1099:
+	case DIGI_GETAFLOW:	return("DIGI_GETAFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1253: FILE: drivers/serial/jsm/jsm_tty.c:1100:
+	case DIGI_GETA:		return("DIGI_GETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1254: FILE: drivers/serial/jsm/jsm_tty.c:1101:
+	case DIGI_GEDELAY:	return("DIGI_GEDELAY");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1255: FILE: drivers/serial/jsm/jsm_tty.c:1102:
+	case DIGI_SEDELAY:	return("DIGI_SEDELAY");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1256: FILE: drivers/serial/jsm/jsm_tty.c:1103:
+	case DIGI_GETCUSTOMBAUD: return("DIGI_GETCUSTOMBAUD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1257: FILE: drivers/serial/jsm/jsm_tty.c:1104:
+	case DIGI_SETCUSTOMBAUD: return("DIGI_SETCUSTOMBAUD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1258: FILE: drivers/serial/jsm/jsm_tty.c:1105:
+	case TIOCMODG:		return("TIOCMODG");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1259: FILE: drivers/serial/jsm/jsm_tty.c:1106:
+	case TIOCMODS:		return("TIOCMODS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1260: FILE: drivers/serial/jsm/jsm_tty.c:1107:
+	case TIOCSDTR:		return("TIOCSDTR");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1261: FILE: drivers/serial/jsm/jsm_tty.c:1108:
+	case TIOCCDTR:		return("TIOCCDTR");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1263: FILE: drivers/serial/jsm/jsm_tty.c:1110:
+	default:		return("unknown");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 75 errors, 33 warnings, 37 checks, 1113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
