WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
>>>>In general your patch is still does what mine do, so I will be happy if 

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#36: 
>>>>any of this is commited mainstream. In future, please, keep the 
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: fs/dcache.c:126:
+static void dcache_shrinker_add(struct dcache_shrinker *ds,
+		struct dentry *parent, struct dentry *dentry)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ds"
#93: FILE: fs/dcache.c:138:
+	if (ds == NULL || list_empty(&ds->list))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: fs/dcache.c:288:
+ * @dentry: dentry to release $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: fs/dcache.c:462:
+static void prune_one_dentry(struct dentry * dentry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: fs/dcache.c:661:
+static int select_parent(struct dentry * parent, int * racecheck)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: fs/dcache.c:661:
+static int select_parent(struct dentry * parent, int * racecheck)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "racecheck"
#283: FILE: fs/dcache.c:709:
+		if (!found && racecheck != NULL)

WARNING:TYPO_SPELLING: 'shrinked' may be misspelled - perhaps 'shrunk'?
#312: FILE: fs/dcache.c:747:
+		 * it returns quickly if everything was really shrinked
 		                                               ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: fs/dcache.c:778:
+		struct dentry *this = hlist_entry(lp, struct dentry, d_hash);
+		if (!list_empty(&this->d_lru)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: fs/dcache.c:783:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: fs/dcache.c:784:
+^I^I * move only zero ref count dentries to the end $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "racecheck"
#358: FILE: fs/dcache.c:793:
+		if (!found && racecheck != NULL)

WARNING:TYPO_SPELLING: 'shrinked' may be misspelled - perhaps 'shrunk'?
#402: FILE: fs/dcache.c:821:
+		 * it returns quickly if everything was really shrinked
 		                                               ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#452: FILE: include/linux/dcache.h:212:
+extern void shrink_dcache_anon(struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#452: FILE: include/linux/dcache.h:212:
+extern void shrink_dcache_anon(struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/dcache.h:213:
+extern void dcache_shrinker_wait_sb(struct super_block *sb);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 6 warnings, 6 checks, 378 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
