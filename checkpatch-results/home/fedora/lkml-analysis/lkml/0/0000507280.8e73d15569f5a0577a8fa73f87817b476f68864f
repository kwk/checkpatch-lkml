WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
 linux-2.4.13-pre1.crc/lib/crc32.c           |  151 ++++++++++++++++++++++++++++

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#108: 
#2 Linux Server provider with 17% in the US and 14% Worldwide (IDC)!

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#109: 
#3 Unix provider with 18% in the US (Dataquest)!

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: include/linux/crc32.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/crc32.h:12:
+extern void crc32_init(void) __init;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: include/linux/crc32.h:19:
+extern u32 crc32 (u32 seed, const void *buf, unsigned long len);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#136: FILE: include/linux/crc32.h:19:
+extern u32 crc32 (u32 seed, const void *buf, unsigned long len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: include/linux/crc32.h:30:
+static inline unsigned ether_crc_le(int length, unsigned char *data)

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: include/linux/crc32.h:48:
+	while(--length >= 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: include/linux/crc32.h:51:
+		int bit;
+		for (bit = 0; bit < 8; bit++, current_octet >>= 1) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: include/linux/crc32.h:60:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#199: FILE: lib/crc32.c:1:
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: lib/crc32.c:76:
+    defined(CONFIG_ATP)           || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: lib/crc32.c:77:
+    defined(CONFIG_DL2K)          || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: lib/crc32.c:78:
+    defined(CONFIG_DM9102)        || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: lib/crc32.c:79:
+    defined(CONFIG_EPIC100)       || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: lib/crc32.c:80:
+    defined(CONFIG_SMC9194)       || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: lib/crc32.c:81:
+    defined(CONFIG_STARFIRE)      || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: lib/crc32.c:82:
+    defined(CONFIG_SUNDANCE)      || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: lib/crc32.c:83:
+    defined(CONFIG_TULIP)         || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: lib/crc32.c:84:
+    defined(CONFIG_YELLOWFIN)     || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: lib/crc32.c:85:
+    defined(CONFIG_FS_JFFS2)      || \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: lib/crc32.c:86:
+    defined(CONFIG_EFI_PARTITION)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: lib/crc32.c:96:
+	const int p[] = {0,1,2,4,5,7,8,10,11,12,16,22,23,26};
 	                                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#296: FILE: lib/crc32.c:98:
+	if (crc_32_tab) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#297: FILE: lib/crc32.c:99:
+	else crc_32_tab = kmalloc(256*sizeof(u32), GFP_KERNEL);
 	                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#297: FILE: lib/crc32.c:99:
+	else crc_32_tab = kmalloc(256*sizeof(u32), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#301: FILE: lib/crc32.c:103:
+	for (i = 0; i < sizeof(p)/sizeof(int); i++)
 	                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#330: FILE: lib/crc32.c:132:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: lib/crc32.c:137:
+	unsigned long i;
+	register u32 crc32val;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#339: FILE: lib/crc32.c:141:
+#error You must add the CONFIG variable for this module to lib/crc32.c:init_crc32().

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#349: FILE: lib/crc32.c:151:
+EXPORT_SYMBOL(crc32);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000507280.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 22 warnings, 6 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000507280.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
