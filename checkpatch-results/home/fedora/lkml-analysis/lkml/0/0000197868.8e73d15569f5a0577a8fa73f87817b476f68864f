CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: arch/sparc/mm/generic.c:123:
+int io_remap_pfn_range(struct vm_area_struct *vma, unsigned long from,
+			unsigned long pfn, unsigned long size, pgprot_t prot)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: arch/sparc/mm/generic.c:126:
+	pgd_t * dir;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: arch/sparc/mm/generic.c:141:
+		pmd_t *pmd = pmd_alloc(current->mm, dir, from);
+		error = -ENOMEM;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#128: FILE: arch/sparc64/kernel/pci.c:21:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#138: FILE: arch/sparc64/kernel/pci.c:739:
+	/* Our io_remap_page_range/io_remap_pfn_range takes care of this,
+	   do nothing. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#138: FILE: arch/sparc64/kernel/pci.c:739:
+	   do nothing. */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#170: FILE: arch/sparc64/kernel/sparc64_ksyms.c:90:
+extern int io_remap_page_range(struct vm_area_struct *vma, unsigned long from,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/sparc64/kernel/sparc64_ksyms.c:91:
+extern int io_remap_page_range(struct vm_area_struct *vma, unsigned long from,
+	unsigned long offset, unsigned long size, pgprot_t prot, int space);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#172: FILE: arch/sparc64/kernel/sparc64_ksyms.c:92:
+extern int io_remap_pfn_range(struct vm_area_struct *vma, unsigned long from,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/sparc64/kernel/sparc64_ksyms.c:93:
+extern int io_remap_pfn_range(struct vm_area_struct *vma, unsigned long from,
+	unsigned long pfn, unsigned long size, pgprot_t prot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: arch/sparc64/mm/generic.c:151:
+int io_remap_pfn_range(struct vm_area_struct *vma, unsigned long from,
+		unsigned long pfn, unsigned long size, pgprot_t prot)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: arch/sparc64/mm/generic.c:154:
+	pgd_t * dir;

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: arch/sparc64/mm/generic.c:169:
+		pud_t *pud = pud_alloc(current->mm, dir, from);
+		error = -ENOMEM;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: include/asm-arm/pgtable.h:422:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: include/asm-arm/pgtable.h:422:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: include/asm-arm/pgtable.h:422:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: include/asm-arm/pgtable.h:422:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: include/asm-arm26/pgtable.h:296:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: include/asm-arm26/pgtable.h:296:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: include/asm-arm26/pgtable.h:296:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: include/asm-arm26/pgtable.h:296:
+#define io_remap_pfn_range(vma,from,pfn,size,prot) \
                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: include/asm-mips/pgtable.h:372:
+static inline int io_remap_pfn_range(struct vm_area_struct *vma,
+		unsigned long vaddr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#467: FILE: include/asm-mips/pgtable.h:378:
+	phys_t phys_addr_high = fixup_bigphys_addr(pfn << PAGE_SHIFT, size);
+	return remap_pfn_range(vma, vaddr, pfn, size, prot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: include/asm-ppc/pgtable.h:740:
+static inline int io_remap_pfn_range(struct vm_area_struct *vma,
+					unsigned long vaddr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#516: FILE: include/asm-ppc/pgtable.h:746:
+	phys_addr_t paddr64 = fixup_bigphys_addr(pfn << PAGE_SHIFT, size);
+	return remap_pfn_range(vma, vaddr, pfn, size, prot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#592: FILE: include/asm-sparc/pgtable.h:457:
+extern int io_remap_page_range(struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#595: FILE: include/asm-sparc/pgtable.h:460:
+extern int io_remap_pfn_range(struct vm_area_struct *vma,

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'space' may be better as '(space)' to avoid precedence issues
#603: FILE: include/asm-sparc/pgtable.h:468:
+#define MK_IOSPACE_PFN(space, pfn)	(pfn | (space << (BITS_PER_LONG - 4)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#603: FILE: include/asm-sparc/pgtable.h:468:
+#define MK_IOSPACE_PFN(space, pfn)	(pfn | (space << (BITS_PER_LONG - 4)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#604: FILE: include/asm-sparc/pgtable.h:469:
+#define GET_IOSPACE(pfn)		(pfn >> (BITS_PER_LONG - 4))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#605: FILE: include/asm-sparc/pgtable.h:470:
+#define GET_PFN(pfn)			(pfn & 0x0fffffffUL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#624: FILE: include/asm-sparc64/pgtable.h:435:
+extern int io_remap_pfn_range(struct vm_area_struct *vma, unsigned long from,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: include/asm-sparc64/pgtable.h:436:
+extern int io_remap_pfn_range(struct vm_area_struct *vma, unsigned long from,
+			       unsigned long pfn,

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'space' may be better as '(space)' to avoid precedence issues
#632: FILE: include/asm-sparc64/pgtable.h:443:
+#define MK_IOSPACE_PFN(space, pfn)	(pfn | (space << (BITS_PER_LONG - 4)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#632: FILE: include/asm-sparc64/pgtable.h:443:
+#define MK_IOSPACE_PFN(space, pfn)	(pfn | (space << (BITS_PER_LONG - 4)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#633: FILE: include/asm-sparc64/pgtable.h:444:
+#define GET_IOSPACE(pfn)		(pfn >> (BITS_PER_LONG - 4))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pfn' may be better as '(pfn)' to avoid precedence issues
#634: FILE: include/asm-sparc64/pgtable.h:445:
+#define GET_PFN(pfn)			(pfn & 0x0fffffffffffffffUL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 19 checks, 482 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197868.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
