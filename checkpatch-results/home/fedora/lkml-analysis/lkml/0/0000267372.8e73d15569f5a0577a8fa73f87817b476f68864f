WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
- Add copy_thread() callback to inherit perfctr settings from parent to child

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/perfctr/version.h:1:
+#define VERSION "2.7.4"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#120: FILE: drivers/perfctr/virtual.c:274:
+ * PREEMPT note: do_fork() etc do not run with preemption disabled.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#127: FILE: drivers/perfctr/virtual.c:281:
+	/* Do not inherit perfctr settings to kernel-generated
+	   threads, like those created by kmod. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#127: FILE: drivers/perfctr/virtual.c:281:
+	   threads, like those created by kmod. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: drivers/perfctr/virtual.c:294:
+	/* Although we're executing in the parent, if it is scheduled
+	   then a remote monitor may attach and change the perfctr

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#143: FILE: drivers/perfctr/virtual.c:297:
+	   in the child cannot be trusted. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#217: FILE: drivers/perfctr/virtual.c:365:
+	/* Our caller holds tasklist_lock, protecting child_tsk->parent.
+	   We must also task_lock(child_tsk->parent), to prevent its

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#218: FILE: drivers/perfctr/virtual.c:366:
+	   ->thread.perfctr from changing. */

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/perfctr/virtual.c:379:
+		for(i = 0; i < nrctrs; ++i)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof perfctr->children should be sizeof(perfctr->children)
#248: FILE: drivers/perfctr/virtual.c:534:
+	memset(&perfctr->children, 0, sizeof perfctr->children);

WARNING:SIZEOF_PARENTHESIS: sizeof tmp->children should be sizeof(tmp->children)
#300: FILE: drivers/perfctr/virtual.c:648:
+	if (childrenp && copy_to_user(childrenp, &tmp->children, sizeof tmp->children))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/linux/perfctr.h:92:
+extern void __vperfctr_copy(struct task_struct*, struct pt_regs*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#359: FILE: include/linux/perfctr.h:92:
+extern void __vperfctr_copy(struct task_struct*, struct pt_regs*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs*' should also have an identifier name
#359: FILE: include/linux/perfctr.h:92:
+extern void __vperfctr_copy(struct task_struct*, struct pt_regs*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#360: FILE: include/linux/perfctr.h:93:
+extern void __vperfctr_release(struct task_struct*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: include/linux/perfctr.h:93:
+extern void __vperfctr_release(struct task_struct*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#360: FILE: include/linux/perfctr.h:93:
+extern void __vperfctr_release(struct task_struct*);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267372.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 2 checks, 330 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267372.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
