WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#39: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#86: FILE: drivers/input/mouse/psmouse-base.c:758:
+		printk(KERN_INFO "serio: %s port at %s\n", psmouse->ptport->serio->name, psmouse->phys);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#86: FILE: drivers/input/mouse/psmouse-base.c:758:
+		printk(KERN_INFO "serio: %s port at %s\n", psmouse->ptport->serio->name, psmouse->phys);

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/input/mouse/psmouse-base.c:793:
+       ^I^Iif (psmouse_reconnect(psmouse->ptport->serio)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: drivers/input/mouse/psmouse-base.c:793:
+       ^I^Iif (psmouse_reconnect(psmouse->ptport->serio)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/input/mouse/psmouse-base.c:793:
+       ^I^Iif (psmouse_reconnect(psmouse->ptport->serio)) {$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*port)...) over kmalloc(sizeof(struct psmouse_ptport)...)
#153: FILE: drivers/input/mouse/synaptics.c:265:
+	port = kmalloc(sizeof(struct psmouse_ptport), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#154: FILE: drivers/input/mouse/synaptics.c:266:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#169: FILE: drivers/input/mouse/synaptics.c:276:
+	strlcpy(serio->name, "Synaptics pass-through", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#170: FILE: drivers/input/mouse/synaptics.c:277:
+	strlcpy(serio->phys, "synaptics-pt/serio0", sizeof(serio->name));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#188: FILE: drivers/input/mouse/synaptics.c:480:
+		if (psmouse->ptport && psmouse->ptport->serio->drv && synaptics_is_pt_packet(psmouse->packet))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*io)...) over kmalloc(sizeof(struct serio)...)
#227: FILE: drivers/input/serio/ambakmi.c:128:
+	io = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#247: FILE: drivers/input/serio/ambakmi.c:141:
+	strlcpy(io->name, dev->dev.bus_id, sizeof(io->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#248: FILE: drivers/input/serio/ambakmi.c:142:
+	strlcpy(io->phys, dev->dev.bus_id, sizeof(io->phys));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: drivers/input/serio/ambakmi.c:145:
+^Ikmi->io ^I= io;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: drivers/input/serio/ct82c710.c:65:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: drivers/input/serio/ct82c710.c:71:
+static irqreturn_t ct82c710_interrupt(int cpl, void *dev_id, struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#370: FILE: drivers/input/serio/ct82c710.c:177:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#377: FILE: drivers/input/serio/ct82c710.c:184:
+		strlcpy(serio->name, "C&T 82c710 mouse port", sizeof(serio->name));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: drivers/input/serio/ct82c710.c:199:
+	if (!(ct82c710_port = ct82c710_allocate_port())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#456: FILE: drivers/input/serio/gscps2.c:358:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#485: FILE: drivers/input/serio/gscps2.c:378:
+	strlcpy(serio->phys, dev->dev.bus_id, sizeof(serio->phys));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#560: FILE: drivers/input/serio/i8042.c:83:
+^I.irqen ^I^I= I8042_CTR_KBDINT,$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#742: FILE: drivers/input/serio/i8042.c:909:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#750: FILE: drivers/input/serio/i8042.c:917:
+		strlcpy(serio->name, "i8042 Kbd Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#751: FILE: drivers/input/serio/i8042.c:918:
+		strlcpy(serio->phys, I8042_KBD_PHYS_DESC, sizeof(serio->phys));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#771: FILE: drivers/input/serio/i8042.c:928:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#778: FILE: drivers/input/serio/i8042.c:935:
+		serio->port_data	= &i8042_aux_values,
+		strlcpy(serio->name, "i8042 Aux Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#779: FILE: drivers/input/serio/i8042.c:936:
+		strlcpy(serio->name, "i8042 Aux Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#780: FILE: drivers/input/serio/i8042.c:937:
+		strlcpy(serio->phys, I8042_AUX_PHYS_DESC, sizeof(serio->phys));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#791: FILE: drivers/input/serio/i8042.c:948:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

CHECK:BRACES: Unbalanced braces around else statement
#835: FILE: drivers/input/serio/i8042.c:999:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#934: FILE: drivers/input/serio/maceps2.c:123:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1029: FILE: drivers/input/serio/parkbd.c:119:
+			serio_interrupt(parkbd_port, (parkbd_buffer >> (2 - parkbd_mode)) & 0xff, 0, regs);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1041: FILE: drivers/input/serio/parkbd.c:161:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#1044: FILE: drivers/input/serio/parkbd.c:164:
+		serio->write = parkbd_write,
+		strlcpy(serio->name, "PARKBD AT/XT keyboard adapter", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1045: FILE: drivers/input/serio/parkbd.c:165:
+		strlcpy(serio->name, "PARKBD AT/XT keyboard adapter", sizeof(serio->name));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1108: FILE: drivers/input/serio/pcips2.c:129:
 static int __devinit pcips2_probe(struct pci_dev *dev, const struct pci_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1120: FILE: drivers/input/serio/pcips2.c:146:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1140: FILE: drivers/input/serio/pcips2.c:159:
+	strlcpy(serio->name, pci_name(dev), sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1141: FILE: drivers/input/serio/pcips2.c:160:
+	strlcpy(serio->phys, dev->dev.bus_id, sizeof(serio->phys));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: drivers/input/serio/q40kbd.c:75:
+ ^Iint maxread = 100;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1212: FILE: drivers/input/serio/q40kbd.c:75:
+ ^Iint maxread = 100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1212: FILE: drivers/input/serio/q40kbd.c:75:
+ ^Iint maxread = 100;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1217: FILE: drivers/input/serio/q40kbd.c:80:
+ ^Iwhile (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1217: FILE: drivers/input/serio/q40kbd.c:80:
+ ^Iwhile (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: drivers/input/serio/q40kbd.c:80:
+ ^Iwhile (maxread-- && (Q40_IRQ_KEYB_MASK & master_inb(INTERRUPT_REG)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1218: FILE: drivers/input/serio/q40kbd.c:81:
+ ^I^Imaster_inb(KEYCODE_REG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1218: FILE: drivers/input/serio/q40kbd.c:81:
+ ^I^Imaster_inb(KEYCODE_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: drivers/input/serio/q40kbd.c:81:
+ ^I^Imaster_inb(KEYCODE_REG);$

WARNING:REPEATED_WORD: Possible repeated word: 'in'
#1225: FILE: drivers/input/serio/q40kbd.c:88:
+ * It allocates the interrupt and enables in in the chip.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1233: FILE: drivers/input/serio/q40kbd.c:96:
+		printk(KERN_ERR "q40kbd.c: Can't get irq %d.\n", Q40_IRQ_KEYBOARD);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1237: FILE: drivers/input/serio/q40kbd.c:100:
+ ^I/* off we go */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1237: FILE: drivers/input/serio/q40kbd.c:100:
+ ^I/* off we go */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1237: FILE: drivers/input/serio/q40kbd.c:100:
+ ^I/* off we go */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1238: FILE: drivers/input/serio/q40kbd.c:101:
+ ^Imaster_outb(-1, KEYBOARD_UNLOCK_REG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1238: FILE: drivers/input/serio/q40kbd.c:101:
+ ^Imaster_outb(-1, KEYBOARD_UNLOCK_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/input/serio/q40kbd.c:101:
+ ^Imaster_outb(-1, KEYBOARD_UNLOCK_REG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1239: FILE: drivers/input/serio/q40kbd.c:102:
+ ^Imaster_outb(1, KEY_IRQ_ENABLE_REG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1239: FILE: drivers/input/serio/q40kbd.c:102:
+ ^Imaster_outb(1, KEY_IRQ_ENABLE_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1239: FILE: drivers/input/serio/q40kbd.c:102:
+ ^Imaster_outb(1, KEY_IRQ_ENABLE_REG);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1241: FILE: drivers/input/serio/q40kbd.c:104:
+ ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1241: FILE: drivers/input/serio/q40kbd.c:104:
+ ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1241: FILE: drivers/input/serio/q40kbd.c:104:
+ ^Ireturn 0;$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1257: FILE: drivers/input/serio/q40kbd.c:120:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1263: FILE: drivers/input/serio/q40kbd.c:126:
+		strlcpy(serio->name, "Q40 Kbd Port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1264: FILE: drivers/input/serio/q40kbd.c:127:
+		strlcpy(serio->phys, "Q40", sizeof(serio->phys));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1285: FILE: drivers/input/serio/q40kbd.c:138:
+	if (!(q40kbd_port = q40kbd_allocate_port()))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1340: FILE: drivers/input/serio/rpckbd.c:115:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1347: FILE: drivers/input/serio/rpckbd.c:122:
+		strlcpy(serio->name, "RiscPC PS/2 kbd port", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1348: FILE: drivers/input/serio/rpckbd.c:123:
+		strlcpy(serio->phys, "rpckbd/serio0", sizeof(serio->phys));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1357: FILE: drivers/input/serio/rpckbd.c:131:
+	if (!(rpckbd_port = rpckbd_allocate_port()))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1402: FILE: drivers/input/serio/sa1111ps2.c:239:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1422: FILE: drivers/input/serio/sa1111ps2.c:252:
+	strlcpy(serio->name, dev->dev.bus_id, sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1423: FILE: drivers/input/serio/sa1111ps2.c:253:
+	strlcpy(serio->phys, dev->dev.bus_id, sizeof(serio->phys));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1502: FILE: drivers/input/serio/serport.c:68:
+	serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1526: FILE: drivers/input/serio/serport.c:82:
+	strlcpy(serio->name, "Serial port", sizeof(serio->name));

CHECK:SPACING: No space is necessary after a cast
#1563: FILE: drivers/input/serio/serport.c:165:
+		return get_user(serport->serio->type, (unsigned long __user *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1645: FILE: drivers/serial/sunsu.c:1304:
+	printk(KERN_INFO "su%d at 0x%p (irq = %s) is a %s\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1652: FILE: drivers/serial/sunsu.c:1310:
+	up->serio = serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1652: FILE: drivers/serial/sunsu.c:1310:
+	up->serio = serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1665: FILE: drivers/serial/sunsu.c:1319:
+			strlcpy(serio->name, "sukbd", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1670: FILE: drivers/serial/sunsu.c:1322:
+			strlcpy(serio->name, "sums", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1673: FILE: drivers/serial/sunsu.c:1324:
+		strlcpy(serio->phys, (channel == 0 ? "su/serio0" : "su/serio1"),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1686: FILE: drivers/serial/sunsu.c:1333:
+		printk(KERN_WARNING "su%d: not enough memory for serio port\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1687: FILE: drivers/serial/sunsu.c:1334:
+		printk(KERN_WARNING "su%d: not enough memory for serio port\n",
+			channel);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1766: FILE: drivers/serial/sunzilog.c:1551:
+	up->serio = serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*serio)...) over kmalloc(sizeof(struct serio)...)
#1766: FILE: drivers/serial/sunzilog.c:1551:
+	up->serio = serio = kmalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1790: FILE: drivers/serial/sunzilog.c:1561:
+			strlcpy(serio->name, "zskbd", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1793: FILE: drivers/serial/sunzilog.c:1564:
+			strlcpy(serio->name, "zsms", sizeof(serio->name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1795: FILE: drivers/serial/sunzilog.c:1566:
+		strlcpy(serio->phys,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1806: FILE: drivers/serial/sunzilog.c:1576:
+		printk(KERN_WARNING "zs%d: not enough memory for serio port\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1807: FILE: drivers/serial/sunzilog.c:1577:
+		printk(KERN_WARNING "zs%d: not enough memory for serio port\n",
+			channel);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1820: FILE: drivers/serial/sunzilog.c:1744:
+		if (ZS_IS_KEYB(up) || ZS_IS_MOUSE(up)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1827: FILE: drivers/serial/sunzilog.c:1751:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 57 warnings, 26 checks, 1635 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000271650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
