WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#100: FILE: drivers/char/sx.c:290:
+static int sx_fw_ioctl(struct inode *inode, struct file *filp,
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: drivers/char/sx.c:291:
+static int sx_fw_ioctl(struct inode *inode, struct file *filp,
+		unsigned int cmd, unsigned long arg);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#129: FILE: drivers/char/sx.c:331:
+};
+static int si_probe_addrs[] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#133: FILE: drivers/char/sx.c:335:
+};
+static int si1_probe_addrs[] = {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: drivers/char/sx.c:382:
+#define sx_dprintk(f, str...)	if (sx_debug & f) printk (str)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/char/sx.c:382:
+#define sx_dprintk(f, str...)	if (sx_debug & f) printk (str)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#162: FILE: drivers/char/sx.c:382:
+#define sx_dprintk(f, str...)	if (sx_debug & f) printk (str)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'f' may be better as '(f)' to avoid precedence issues
#162: FILE: drivers/char/sx.c:382:
+#define sx_dprintk(f, str...)	if (sx_debug & f) printk (str)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#168: FILE: drivers/char/sx.c:387:
+#define func_enter()	sx_dprintk(SX_DEBUG_FLOW, "sx: enter %s\n",__FUNCTION__)
                     	                                          ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#168: FILE: drivers/char/sx.c:387:
+#define func_enter()	sx_dprintk(SX_DEBUG_FLOW, "sx: enter %s\n",__FUNCTION__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: drivers/char/sx.c:388:
+#define func_exit()	sx_dprintk(SX_DEBUG_FLOW, "sx: exit  %s\n",__FUNCTION__)
                    	                                          ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#169: FILE: drivers/char/sx.c:388:
+#define func_exit()	sx_dprintk(SX_DEBUG_FLOW, "sx: exit  %s\n",__FUNCTION__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#181: FILE: drivers/char/sx.c:391:
+				__FUNCTION__, port->line)

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: drivers/char/sx.c:415:
+	static const char *badmagic = KERN_ERR "sx: Warning: bad sx port magic "
+			"number for device %s in %s\n";

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: drivers/char/sx.c:417:
+	static const char *badinfo = KERN_ERR "sx: Warning: null sx port for "
+			"device %s in %s\n";

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: drivers/char/sx.c:448:
+		printk("%p ", addr + i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#242: FILE: drivers/char/sx.c:450:
+			printk("%02x %s", readb(addr + j + i),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/char/sx.c:451:
+			printk("%02x %s", readb(addr + j + i),
+					(j == 7) ? " " : "");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#250: FILE: drivers/char/sx.c:455:
+			printk("%c", (ch < 0x20) ? '.' :

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: drivers/char/sx.c:458:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: drivers/char/sx.c:467:
+		printk("%p ", addr + i);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#268: FILE: drivers/char/sx.c:468:
+		for (j = 0; j < 16; j++) {
+			printk("%02x %s", addr[j + i], (j == 7) ? " " : "");
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: drivers/char/sx.c:469:
+			printk("%02x %s", addr[j + i], (j == 7) ? " " : "");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#276: FILE: drivers/char/sx.c:473:
+			printk("%c", (ch < 0x20) ? '.' :

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#280: FILE: drivers/char/sx.c:476:
+		printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/char/sx.c:504:
+static int sx_busy_wait_eq(struct sx_board *board,
+		int offset, int mask, int correctval)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/char/sx.c:529:
+static int sx_busy_wait_neq(struct sx_board *board,
+		int offset, int mask, int badval)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#412: FILE: drivers/char/sx.c:564:
+			printk(KERN_INFO "sx: Card doesn't respond to "

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/char/sx.c:565:
+			printk(KERN_INFO "sx: Card doesn't respond to "
+					"reset...\n");

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'strct' may be better as '(strct)' to avoid precedence issues
#455: FILE: drivers/char/sx.c:591:
+#define OFFSETOF(strct, elem)	((long)&(((struct strct *)NULL)->elem))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'elem' may be better as '(elem)' to avoid precedence issues
#455: FILE: drivers/char/sx.c:591:
+#define OFFSETOF(strct, elem)	((long)&(((struct strct *)NULL)->elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#457: FILE: drivers/char/sx.c:593:
+#define CHAN_OFFSET(port,elem)	(port->ch_base + OFFSETOF (_SXCHANNEL, elem))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: drivers/char/sx.c:593:
+#define CHAN_OFFSET(port,elem)	(port->ch_base + OFFSETOF (_SXCHANNEL, elem))
                         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#457: FILE: drivers/char/sx.c:593:
+#define CHAN_OFFSET(port,elem)	(port->ch_base + OFFSETOF (_SXCHANNEL, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#458: FILE: drivers/char/sx.c:594:
+#define MODU_OFFSET(board,addr,elem)	(addr + OFFSETOF (_SXMODULE, elem))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#458: FILE: drivers/char/sx.c:594:
+#define MODU_OFFSET(board,addr,elem)	(addr + OFFSETOF (_SXMODULE, elem))
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#458: FILE: drivers/char/sx.c:594:
+#define MODU_OFFSET(board,addr,elem)	(addr + OFFSETOF (_SXMODULE, elem))
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#458: FILE: drivers/char/sx.c:594:
+#define MODU_OFFSET(board,addr,elem)	(addr + OFFSETOF (_SXMODULE, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: drivers/char/sx.c:595:
+#define  BRD_OFFSET(board,elem)	(OFFSETOF (_SXCARD, elem))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: drivers/char/sx.c:595:
+#define  BRD_OFFSET(board,elem)	(OFFSETOF (_SXCARD, elem))
                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: drivers/char/sx.c:598:
+	write_sx_byte (port->board, CHAN_OFFSET (port, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: drivers/char/sx.c:598:
+	write_sx_byte (port->board, CHAN_OFFSET (port, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: drivers/char/sx.c:601:
+	read_sx_byte (port->board, CHAN_OFFSET (port, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: drivers/char/sx.c:601:
+	read_sx_byte (port->board, CHAN_OFFSET (port, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: drivers/char/sx.c:604:
+	write_sx_word (port->board, CHAN_OFFSET (port, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: drivers/char/sx.c:604:
+	write_sx_word (port->board, CHAN_OFFSET (port, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: drivers/char/sx.c:607:
+	read_sx_word (port->board, CHAN_OFFSET (port, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: drivers/char/sx.c:607:
+	read_sx_word (port->board, CHAN_OFFSET (port, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#480: FILE: drivers/char/sx.c:610:
+	write_sx_byte (board, MODU_OFFSET (board, addr, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#480: FILE: drivers/char/sx.c:610:
+	write_sx_byte (board, MODU_OFFSET (board, addr, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: drivers/char/sx.c:613:
+	read_sx_byte (board, MODU_OFFSET (board, addr, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: drivers/char/sx.c:613:
+	read_sx_byte (board, MODU_OFFSET (board, addr, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: drivers/char/sx.c:616:
+	write_sx_word (board, MODU_OFFSET (board, addr, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: drivers/char/sx.c:616:
+	write_sx_word (board, MODU_OFFSET (board, addr, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#493: FILE: drivers/char/sx.c:619:
+	read_sx_word (board, MODU_OFFSET (board, addr, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#493: FILE: drivers/char/sx.c:619:
+	read_sx_word (board, MODU_OFFSET (board, addr, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#497: FILE: drivers/char/sx.c:622:
+	write_sx_byte (board, BRD_OFFSET (board, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#497: FILE: drivers/char/sx.c:622:
+	write_sx_byte (board, BRD_OFFSET (board, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: drivers/char/sx.c:625:
+	read_sx_byte (board, BRD_OFFSET (board, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: drivers/char/sx.c:625:
+	read_sx_byte (board, BRD_OFFSET (board, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: drivers/char/sx.c:628:
+	write_sx_word (board, BRD_OFFSET (board, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: drivers/char/sx.c:628:
+	write_sx_word (board, BRD_OFFSET (board, elem), val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: drivers/char/sx.c:631:
+	read_sx_word (board, BRD_OFFSET (board, elem))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: drivers/char/sx.c:631:
+	read_sx_word (board, BRD_OFFSET (board, elem))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#583: FILE: drivers/char/sx.c:682:
+			printk(KERN_INFO "sx: SI/XIO card doesn't support "

WARNING:SPLIT_STRING: quoted string split across lines
#584: FILE: drivers/char/sx.c:683:
+			printk(KERN_INFO "sx: SI/XIO card doesn't support "
+					"interrupt %d.\n", board->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/char/sx.c:693:
+static int sx_send_command(struct sx_port *port,
+		int command, int mask, int newstat)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#695: FILE: drivers/char/sx.c:759:
+			printk(KERN_WARNING "sx: Sent reconfigure command, but "

WARNING:SPLIT_STRING: quoted string split across lines
#696: FILE: drivers/char/sx.c:760:
+			printk(KERN_WARNING "sx: Sent reconfigure command, but "
+					"card didn't react.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#704: FILE: drivers/char/sx.c:764:
+		sx_dprintk(SX_DEBUG_TERMIOS, "sx: Not sending reconfigure: "
+				"port isn't open (%02x).\n",

WARNING:SPLIT_STRING: quoted string split across lines
#762: FILE: drivers/char/sx.c:793:
+	sx_dprintk(SX_DEBUG_MODEMSIGNALS, "getsignals: %d/%d  (%d/%d) "
+			"%02x/%02x\n",

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#796: FILE: drivers/char/sx.c:814:
+#define e(x) case x: t = BAUD_ ## x; break

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#836: FILE: drivers/char/sx.c:853:
+			printk(KERN_INFO "sx: unsupported baud rate: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: drivers/char/sx.c:854:
+			printk(KERN_INFO "sx: unsupported baud rate: %d.\n",
+					port->gs.baud);

WARNING:TYPO_SPELLING: 'enabeling' may be misspelled - perhaps 'enabling'?
#844: FILE: drivers/char/sx.c:859:
+/* The baud rate is not set to 0, so we're enabeling DTR... -- REW */
                                            ^^^^^^^^^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#866: FILE: drivers/char/sx.c:871:
+#define e(x) case x: t = CSR_ ## x; break

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#887: FILE: drivers/char/sx.c:891:
+				printk(KERN_INFO "sx: Unsupported baud rate: "

WARNING:SPLIT_STRING: quoted string split across lines
#888: FILE: drivers/char/sx.c:892:
+				printk(KERN_INFO "sx: Unsupported baud rate: "
+						"%d.\n", port->gs.baud);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#896: FILE: drivers/char/sx.c:898:
+				printk(KERN_INFO "sx: Unsupported baud rate: "

WARNING:SPLIT_STRING: quoted string split across lines
#897: FILE: drivers/char/sx.c:899:
+				printk(KERN_INFO "sx: Unsupported baud rate: "
+						"%d.\n", port->gs.baud);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#911: FILE: drivers/char/sx.c:910:
+			printk(KERN_INFO "sx: Unsupported baud rate: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: drivers/char/sx.c:911:
+			printk(KERN_INFO "sx: Unsupported baud rate: %d.\n",
+					port->gs.baud);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#958: FILE: drivers/char/sx.c:946:
+	sx_write_channel_byte(port, hi_mr1,
+			(C_PARENB(port->gs.tty) ? MR1_WITH : MR1_NONE) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: drivers/char/sx.c:955:
+	sx_write_channel_byte(port, hi_mr2,
+			(C_CRTSCTS(port->gs.tty) ? MR2_CTS_TXFLOW : 0) |

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#990: FILE: drivers/char/sx.c:973:
+		printk(KERN_INFO "sx: Invalid wordsize: %u\n", CFLAG & CSIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: drivers/char/sx.c:978:
+	sx_write_channel_byte(port, hi_prtcl,
+			(I_IXON(port->gs.tty) ? SP_TXEN : 0) |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: drivers/char/sx.c:983:
+	sx_write_channel_byte(port, hi_break,
+			(I_IGNBRK(port->gs.tty) ? BR_IGN : 0 |

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1024: FILE: drivers/char/sx.c:994:
+	if (I_OTHER(port->gs.tty)) {
[...]
 	} else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: drivers/char/sx.c:1000:
+	sx_dprintk(SX_DEBUG_TERMIOS, "iflags: %x(%d) ",
+			port->gs.tty->termios->c_iflag, I_OTHER(port->gs.tty));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1042: FILE: drivers/char/sx.c:1007:
+	if (O_OPOST(port->gs.tty) && !O_OTHER(port->gs.tty)) {
[...]
 	} else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: drivers/char/sx.c:1013:
+	sx_dprintk(SX_DEBUG_TERMIOS, "oflags: %x(%d)\n",
+			port->gs.tty->termios->c_oflag, O_OTHER(port->gs.tty));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1080: FILE: drivers/char/sx.c:1042:
+	sx_dprintk(SX_DEBUG_TRANSMIT, "Port %p: transmit %d chars\n",
+			port, port->gs.xmit_cnt);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1083: FILE: drivers/char/sx.c:1044:
+	if (test_and_set_bit(SX_PORT_TRANSMIT_LOCK, &port->locks)) {
 		return;
 	}

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1125: FILE: drivers/char/sx.c:1074:
+		sx_dprintk(SX_DEBUG_TRANSMIT, " %d(%ld) \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1126: FILE: drivers/char/sx.c:1075:
+		sx_dprintk(SX_DEBUG_TRANSMIT, " %d(%ld) \n",
+				c, SERIAL_XMIT_SIZE - port->gs.xmit_tail);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1129: FILE: drivers/char/sx.c:1078:
+		/* If for one reason or another, we can't copy more data, we're
+		   done! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1129: FILE: drivers/char/sx.c:1078:
+		   done! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1150: FILE: drivers/char/sx.c:1094:
+		   buffer! */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1164: FILE: drivers/char/sx.c:1105:
+		sx_dprintk(SX_DEBUG_TRANSMIT, "Waking up.... ldisc (%d)....\n",
+				port->gs.wakeup_chars);

WARNING:SPLIT_STRING: quoted string split across lines
#1227: FILE: drivers/char/sx.c:1150:
+		sx_dprintk(SX_DEBUG_RECEIVE, "Copying over %d chars. First is "
+				"%d at %lx\n", c, read_sx_byte(port->board,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1236: FILE: drivers/char/sx.c:1158:
+^I^I   buffer! $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1253: FILE: drivers/char/sx.c:1169:
+		sx_dprintk(SX_DEBUG_RECEIVE, "pushing flipq port %d (%3d "
+				"chars): %d.%06d  (%d/%d)\n", port->line,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1259: FILE: drivers/char/sx.c:1173:
+^I^I/* Tell the rest of the system the news. Great news. New $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1260: FILE: drivers/char/sx.c:1174:
+		/* Tell the rest of the system the news. Great news. New 
+		   characters! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1260: FILE: drivers/char/sx.c:1174:
+		   characters! */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1282: FILE: drivers/char/sx.c:1191:
+	sx_dprintk(SX_DEBUG_MODEMSIGNALS, "Checking modem signals (%d/%d)\n",
+			port->c_dcd, sx_get_CD(port));

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'port->gs.tty->termios->c_cflag'
#1316: FILE: drivers/char/sx.c:1212:
+						!(port->gs.tty->termios->
+							c_cflag & CLOCAL)) {

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:SPLIT_STRING: quoted string split across lines
#1319: FILE: drivers/char/sx.c:1215:
+					sx_dprintk(SX_DEBUG_MODEMSIGNALS, "DCD "
+						"active, unblocking open\n");

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'port->gs.open_wait'
#1321: FILE: drivers/char/sx.c:1217:
+					wake_up_interruptible(&port->gs.
+							open_wait);

WARNING:SPLIT_STRING: quoted string split across lines
#1325: FILE: drivers/char/sx.c:1220:
+					sx_dprintk(SX_DEBUG_MODEMSIGNALS, "DCD "
+						"raised. Ignoring.\n");

ERROR:SPACING: space required before the open brace '{'
#1332: FILE: drivers/char/sx.c:1224:
+				if (!(port->gs.tty->termios->c_cflag & CLOCAL)){

WARNING:SPLIT_STRING: quoted string split across lines
#1334: FILE: drivers/char/sx.c:1226:
+					sx_dprintk(SX_DEBUG_MODEMSIGNALS, "DCD "
+						"dropped. hanging up....\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1339: FILE: drivers/char/sx.c:1230:
+					sx_dprintk(SX_DEBUG_MODEMSIGNALS, "DCD "
+						"dropped. ignoring.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1345: FILE: drivers/char/sx.c:1235:
+			sx_dprintk(SX_DEBUG_MODEMSIGNALS, "Hmmm. card told us "
+				"DCD changed, but it didn't.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sx_interrupt', this function's name, in a string
#1365: FILE: drivers/char/sx.c:1251:
+	sx_dprintk(SX_DEBUG_FLOW, "sx: enter sx_interrupt (%d/%d)\n", irq,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/char/sx.c:1252:
+	sx_dprintk(SX_DEBUG_FLOW, "sx: enter sx_interrupt (%d/%d)\n", irq,
+			board->irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: drivers/char/sx.c:1258:
+^I   recursive calls will hang the machine in the interrupt routine. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1401: FILE: drivers/char/sx.c:1277:
+	   comment) */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1405: FILE: drivers/char/sx.c:1280:
+		static int nintr = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1413: FILE: drivers/char/sx.c:1285:
+				printk(KERN_ERR "sx: Too many interrupts. "

WARNING:SPLIT_STRING: quoted string split across lines
#1414: FILE: drivers/char/sx.c:1286:
+				printk(KERN_ERR "sx: Too many interrupts. "
+						"Turning off interrupt %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1442: FILE: drivers/char/sx.c:1307:
+			write_sx_byte(board, SI2_ISA_INTCLEAR,
+					SI2_ISA_INTCLEAR_CLEAR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1444: FILE: drivers/char/sx.c:1309:
+			write_sx_byte(board, SI2_ISA_INTCLEAR,
+					SI2_ISA_INTCLEAR_SET);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1455: FILE: drivers/char/sx.c:1319:
+		printk(KERN_ERR "Recursive interrupt! (%d)\n", board->irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1469: FILE: drivers/char/sx.c:1328:
+						"modem signal change?... \n",i);
 						                            ^

WARNING:SPLIT_STRING: quoted string split across lines
#1469: FILE: drivers/char/sx.c:1328:
+				sx_dprintk(SX_DEBUG_INTERRUPTS, "Port %d: "
+						"modem signal change?... \n",i);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1469: FILE: drivers/char/sx.c:1328:
+						"modem signal change?... \n",i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1489: FILE: drivers/char/sx.c:1343:
+	sx_dprintk(SX_DEBUG_FLOW, "sx: exit sx_interrupt (%d/%d)\n", irq,
+			board->irq);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1642: FILE: drivers/char/sx.c:1459:
+static int sx_open(struct tty_struct *tty, struct file *filp)
                                                         ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1653: FILE: drivers/char/sx.c:1473:
+	sx_dprintk(SX_DEBUG_OPEN, "%d: opening line %d. tty=%p ctty=%p, "
+			"np=%d)\n", current->pid, line, tty,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1664: FILE: drivers/char/sx.c:1481:
+			    1 -> 0 transition. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1708: FILE: drivers/char/sx.c:1518:
+			printk(KERN_ERR "sx: Card didn't respond to LOPEN "

WARNING:SPLIT_STRING: quoted string split across lines
#1709: FILE: drivers/char/sx.c:1519:
+			printk(KERN_ERR "sx: Card didn't respond to LOPEN "
+					"command.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1720: FILE: drivers/char/sx.c:1529:
+	sx_dprintk(SX_DEBUG_OPEN, "Block til ready returned %d. Count=%d\n",
+			retval, port->gs.count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1726: FILE: drivers/char/sx.c:1532:
+/* $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1775: FILE: drivers/char/sx.c:1566:
+			printk(KERN_ERR "sx: sent the force_close command, but "

WARNING:SPLIT_STRING: quoted string split across lines
#1776: FILE: drivers/char/sx.c:1567:
+			printk(KERN_ERR "sx: sent the force_close command, but "
+					"card didn't react\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1780: FILE: drivers/char/sx.c:1570:
+			sx_dprintk(SX_DEBUG_CLOSE, "sent the force_close "
+					"command.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1786: FILE: drivers/char/sx.c:1574:
+	sx_dprintk(SX_DEBUG_CLOSE, "waited %d jiffies for close. count=%d\n",
+			5 * HZ - to - 1, port->gs.count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1794: FILE: drivers/char/sx.c:1578:
+		sx_dprintk(SX_DEBUG_CLOSE, "WARNING port count:%d\n",
+				port->gs.count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1796: FILE: drivers/char/sx.c:1580:
+		/*printk("%s SETTING port count to zero: %p count: %d\n",
+				__FUNCTION__, port, port->gs.count);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1797: FILE: drivers/char/sx.c:1581:
+		port->gs.count = 0;*/

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1817: FILE: drivers/char/sx.c:1592:
+#define R0		if (read_sx_byte(board, i) != 0x55) return 1

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1817: FILE: drivers/char/sx.c:1592:
+#define R0		if (read_sx_byte(board, i) != 0x55) return 1

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1818: FILE: drivers/char/sx.c:1593:
+#define R1		if (read_sx_byte(board, i) != 0xaa) return 1

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1818: FILE: drivers/char/sx.c:1593:
+#define R1		if (read_sx_byte(board, i) != 0xaa) return 1

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1885: FILE: drivers/char/sx.c:1648:
+#define R0		if (read_sx_word(board, i) != 0x55aa) return 1

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1885: FILE: drivers/char/sx.c:1648:
+#define R0		if (read_sx_word(board, i) != 0x55aa) return 1

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1886: FILE: drivers/char/sx.c:1649:
+#define R1		if (read_sx_word(board, i) != 0xaa55) return 1

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1886: FILE: drivers/char/sx.c:1649:
+#define R1		if (read_sx_word(board, i) != 0xaa55) return 1

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1936: FILE: drivers/char/sx.c:1690:
+static int sx_fw_ioctl(struct inode *inode, struct file *filp,
                                                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1937: FILE: drivers/char/sx.c:1691:
+static int sx_fw_ioctl(struct inode *inode, struct file *filp,
+		unsigned int cmd, unsigned long arg)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1946: FILE: drivers/char/sx.c:1703:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1964: FILE: drivers/char/sx.c:1717:
+		sx_dprintk(SX_DEBUG_FIRMWARE, "Board present! (%x)\n",
+				board->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1972: FILE: drivers/char/sx.c:1720:
+		sx_dprintk(SX_DEBUG_FIRMWARE, "Board not present! (%x) all:",
+				board->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2069: FILE: drivers/char/sx.c:1783:
+				if (copy_from_user(tmp, (char __user *)data + i,
+						(i + SX_CHUNK_SIZE > nbytes) ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2077: FILE: drivers/char/sx.c:1789:
+				memcpy_toio(board->base2 + offset + i, tmp,
+						(i + SX_CHUNK_SIZE > nbytes) ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2104: FILE: drivers/char/sx.c:1807:
+			if ((boards[i].flags & SX_BOARD_PRESENT) &&
+				!(boards[i].flags & SX_BOARD_INITIALIZED))

WARNING:SPLIT_STRING: quoted string split across lines
#2121: FILE: drivers/char/sx.c:1815:
+		sx_dprintk(SX_DEBUG_FIRMWARE, "initing portstructs, %d boards, "
+				"%d channels, first board: %d ports\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2134: FILE: drivers/char/sx.c:1836:
+		printk(KERN_WARNING "Unknown ioctl on firmware device (%x).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2135: FILE: drivers/char/sx.c:1837:
+		printk(KERN_WARNING "Unknown ioctl on firmware device (%x).\n",
+				cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2164: FILE: drivers/char/sx.c:1856:
+		printk(KERN_ERR "sx: couldn't send break (%x).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2165: FILE: drivers/char/sx.c:1857:
+		printk(KERN_ERR "sx: couldn't send break (%x).\n",
+			read_sx_byte(port->board, CHAN_OFFSET(port, hi_hstat)));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2190: FILE: drivers/char/sx.c:1888:
+static int sx_ioctl(struct tty_struct *tty, struct file *filp,
                                                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2191: FILE: drivers/char/sx.c:1889:
+static int sx_ioctl(struct tty_struct *tty, struct file *filp,
+		unsigned int cmd, unsigned long arg)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2204: FILE: drivers/char/sx.c:1905:
+		if ((rc = get_user(ival, (unsigned __user *)argp)) == 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2230: FILE: drivers/char/sx.c:1950:
+	if ((tty->termios->c_cflag & CRTSCTS) || (I_IXOFF(tty))) {
 		port->gs.flags |= SX_RX_THROTTLE;
 	}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2280: FILE: drivers/char/sx.c:1996:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2282: FILE: drivers/char/sx.c:1998:
+		printk(KERN_ERR "sx: Ooops. Board won't initialize.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2308: FILE: drivers/char/sx.c:2012:
+	sx_dprintk(SX_DEBUG_INIT, "init_status: %x, %dk memory, firmware "
+			"V%x.%02x,\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2313: FILE: drivers/char/sx.c:2017:
+		printk(KERN_INFO "sx: No modules found. Sorry.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2327: FILE: drivers/char/sx.c:2029:
+			sx_write_board_word(board, cc_int_count,
+					SI_PROCESSOR_CLOCK / 8 / sx_maxints);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2335: FILE: drivers/char/sx.c:2035:
+	board->ta_type = mod_compat_type(sx_read_module_byte(board, 0x80,
+				mc_chip));

ERROR:SPACING: space required before the open brace '{'
#2354: FILE: drivers/char/sx.c:2038:
+	for (addr = 0x80; addr != 0; addr = read_sx_word(board, addr) & 0x7fff){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2357: FILE: drivers/char/sx.c:2041:
+		sx_dprintk(SX_DEBUG_INIT, "Module at %x: %d channels\n",
+				addr, read_sx_byte(board, addr + 2));

WARNING:SPLIT_STRING: quoted string split across lines
#2362: FILE: drivers/char/sx.c:2046:
+		sx_dprintk(SX_DEBUG_INIT, "module is an %s, which has %s/%s "
+				"panels\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2365: FILE: drivers/char/sx.c:2049:
+				pan_type_s(sx_read_module_byte(board, addr,
+						mc_mods) & 0xf),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2367: FILE: drivers/char/sx.c:2051:
+				pan_type_s(sx_read_module_byte(board, addr,
+						mc_mods) >> 4));

WARNING:SPLIT_STRING: quoted string split across lines
#2370: FILE: drivers/char/sx.c:2054:
+		sx_dprintk(SX_DEBUG_INIT, "CD1400 versions: %x/%x, ASIC "
+			"version: %x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2383: FILE: drivers/char/sx.c:2063:
+			printk(KERN_ERR "sx: This is an invalid "

WARNING:SPLIT_STRING: quoted string split across lines
#2384: FILE: drivers/char/sx.c:2064:
+			printk(KERN_ERR "sx: This is an invalid "
+				"configuration.\nDon't mix TA/MTA/SXDC on the "

WARNING:SPLIT_STRING: quoted string split across lines
#2385: FILE: drivers/char/sx.c:2065:
+				"configuration.\nDon't mix TA/MTA/SXDC on the "
+				"same hostadapter.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2395: FILE: drivers/char/sx.c:2070:
+		if ((IS_EISA_BOARD(board) ||
+				IS_SI_BOARD(board)) &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2397: FILE: drivers/char/sx.c:2072:
+			printk(KERN_ERR	"sx: This is an invalid "

WARNING:SPLIT_STRING: quoted string split across lines
#2398: FILE: drivers/char/sx.c:2073:
+			printk(KERN_ERR	"sx: This is an invalid "
+				"configuration.\nDon't use SXDCs on an SI/XIO "

WARNING:SPLIT_STRING: quoted string split across lines
#2399: FILE: drivers/char/sx.c:2074:
+				"configuration.\nDon't use SXDCs on an SI/XIO "
+				"adapter.\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2404: FILE: drivers/char/sx.c:2078:
+#if 0				/* Problem fixed: firmware 3.05 */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2413: FILE: drivers/char/sx.c:2084:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2415: FILE: drivers/char/sx.c:2086:
+			       "sx: The SX host doesn't work too well "
+			       "with the TA8 adapters.\nSpecialix is working on it.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#2427: FILE: drivers/char/sx.c:2094:
+			if (sx_irqmask & (1 << board->irq)) {	/* may we use this irq? */
[...]
 			} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2431: FILE: drivers/char/sx.c:2098:
+					printk(KERN_ERR "sx: Cannot allocate "

WARNING:SPLIT_STRING: quoted string split across lines
#2432: FILE: drivers/char/sx.c:2099:
+					printk(KERN_ERR "sx: Cannot allocate "
+						"irq %d.\n", board->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2450: FILE: drivers/char/sx.c:2112:
+					if (!request_irq(irqnr, sx_interrupt,
+						IRQF_SHARED | IRQF_DISABLED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2465: FILE: drivers/char/sx.c:2124:
+			sx_dprintk(SX_DEBUG_INIT, "Using irq %d.\n",
+					board->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2474: FILE: drivers/char/sx.c:2132:
+			sx_dprintk(SX_DEBUG_INIT, "Using poll-interval %d.\n",
+					board->poll);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2481: FILE: drivers/char/sx.c:2136:
+		/* The timer should be initialized anyway: That way we can
+		   safely del_timer it when the module is unloaded. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2481: FILE: drivers/char/sx.c:2136:
+		   safely del_timer it when the module is unloaded. */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2505: FILE: drivers/char/sx.c:2156:
 static void __devinit printheader(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2513: FILE: drivers/char/sx.c:2161:
+		printk(KERN_INFO "Specialix SX driver "

WARNING:SPLIT_STRING: quoted string split across lines
#2514: FILE: drivers/char/sx.c:2162:
+		printk(KERN_INFO "Specialix SX driver "
+			"(C) 1998/1999 R.E.Wolff@BitWizard.nl\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2515: FILE: drivers/char/sx.c:2163:
+		printk(KERN_INFO "sx: version " __stringify(SX_VERSION) "\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2522: FILE: drivers/char/sx.c:2168:
+static int __devinit probe_sx(struct sx_board *board)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2535: FILE: drivers/char/sx.c:2178:
+		sx_dprintk(SX_DEBUG_PROBE, "Going to verify vpd prom at %p.\n",
+				board->base + SX_VPD_ROM);

WARNING:SPLIT_STRING: quoted string split across lines
#2559: FILE: drivers/char/sx.c:2194:
+			sx_dprintk(SX_DEBUG_PROBE, "Got non-SX identifier: "
+					"'%s'\n", vpdp.identifier);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2575: FILE: drivers/char/sx.c:2202:
+		printk(KERN_DEBUG "sx: Found an SX board at %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2576: FILE: drivers/char/sx.c:2203:
+		printk(KERN_DEBUG "sx: Found an SX board at %lx\n",
+			board->hw_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2577: FILE: drivers/char/sx.c:2204:
+		printk(KERN_DEBUG "sx: hw_rev: %d, assembly level: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#2578: FILE: drivers/char/sx.c:2205:
+		printk(KERN_DEBUG "sx: hw_rev: %d, assembly level: %d, "
+				"uniq ID:%08x, ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2580: FILE: drivers/char/sx.c:2207:
+		printk("Manufactured: %d/%d\n", 1970 + vpdp.myear, vpdp.mweek);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2591: FILE: drivers/char/sx.c:2213:
+			/* This might be a bit harsh. This was the primary
+			   reason the SX/ISA card didn't work at first... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2591: FILE: drivers/char/sx.c:2213:
+			   reason the SX/ISA card didn't work at first... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2592: FILE: drivers/char/sx.c:2214:
+			printk(KERN_ERR "sx: Hmm. Not an SX/PCI or SX/ISA "

WARNING:SPLIT_STRING: quoted string split across lines
#2593: FILE: drivers/char/sx.c:2215:
+			printk(KERN_ERR "sx: Hmm. Not an SX/PCI or SX/ISA "
+					"card. Sorry: giving up.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2603: FILE: drivers/char/sx.c:2222:
+				printk(KERN_WARNING "sx: Warning: There may be "

WARNING:SPLIT_STRING: quoted string split across lines
#2604: FILE: drivers/char/sx.c:2223:
+				printk(KERN_WARNING "sx: Warning: There may be "
+					"hardware problems with the card at "

WARNING:SPLIT_STRING: quoted string split across lines
#2605: FILE: drivers/char/sx.c:2224:
+					"hardware problems with the card at "
+					"%lx.\n", board->hw_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2606: FILE: drivers/char/sx.c:2225:
+				printk(KERN_WARNING "sx: Read sx.txt for more "

WARNING:SPLIT_STRING: quoted string split across lines
#2607: FILE: drivers/char/sx.c:2226:
+				printk(KERN_WARNING "sx: Read sx.txt for more "
+						"info.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2628: FILE: drivers/char/sx.c:2250:
+static int __devinit probe_si(struct sx_board *board)

WARNING:SPLIT_STRING: quoted string split across lines
#2636: FILE: drivers/char/sx.c:2256:
+	sx_dprintk(SX_DEBUG_PROBE, "Going to verify SI signature hw %lx at "
+		"%p.\n", board->hw_base, board->base + SI2_ISA_ID_BASE);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2648: FILE: drivers/char/sx.c:2263:
+			for (i = 0; i < 8; i++) {
+				write_sx_byte(board, SI2_ISA_ID_BASE + 7 - i,i);
+			}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2649: FILE: drivers/char/sx.c:2264:
+				write_sx_byte(board, SI2_ISA_ID_BASE + 7 - i,i);
 				                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2724: FILE: drivers/char/sx.c:2320:
+	printk(KERN_DEBUG "sx: Found an SI board at %lx\n", board->hw_base);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2727: FILE: drivers/char/sx.c:2322:
+	   this card is up to... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2782: FILE: drivers/char/sx.c:2401:
+	   Is there? -- REW */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2818: FILE: drivers/char/sx.c:2438:
+		sx_dprintk(SX_DEBUG_PROBE, "Board has %d channels\n",
+				board->nports);

WARNING:SPLIT_STRING: quoted string split across lines
#2835: FILE: drivers/char/sx.c:2446:
+			sx_dprintk(SX_DEBUG_PROBE, "Module at %x: %d "
+					"channels\n", addr, chans);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2839: FILE: drivers/char/sx.c:2450:
+				/* The "sx-way" is the way it SHOULD be done.
+				   That way in the future, the firmware may for

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2842: FILE: drivers/char/sx.c:2453:
+				   happen anytime soon though. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2845: FILE: drivers/char/sx.c:2455:
+					port->ch_base = sx_read_module_word(

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#2850: FILE: drivers/char/sx.c:2459:
+					port->ch_base = addr + 0x100 + 0x300 *j;
 					                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2854: FILE: drivers/char/sx.c:2462:
+				sx_dprintk(SX_DEBUG_PROBE, " %x",
+						port->ch_base);

WARNING:SPLIT_STRING: quoted string split across lines
#2889: FILE: drivers/char/sx.c:2533:
 	dev_info(dev, "XIO : Signature found in EISA slot %lu, "
+		 "Product %d Rev %d (REPORT THIS TO LKLM)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2929: FILE: drivers/char/sx.c:2617:
+		printk(KERN_DEBUG "sx: performing cntrl reg fix: %08x -> "

WARNING:SPLIT_STRING: quoted string split across lines
#2930: FILE: drivers/char/sx.c:2618:
+		printk(KERN_DEBUG "sx: performing cntrl reg fix: %08x -> "
+			"%08x\n", t, CNTRL_REG_GOODVALUE);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2936: FILE: drivers/char/sx.c:2624:
 static int __devinit sx_pci_probe(struct pci_dev *pdev,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2981: FILE: drivers/char/sx.c:2699:
+		.subvendor = 0x0200,.subdevice = PCI_ANY_ID },
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2984: FILE: drivers/char/sx.c:2701:
+		.subvendor = 0x0300,.subdevice = PCI_ANY_ID },
 		                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3011: FILE: drivers/char/sx.c:2728:
+	sx_dprintk(SX_DEBUG_INIT, "Initing sx module... (sx_debug=%d)\n",
+			sx_debug);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3013: FILE: drivers/char/sx.c:2730:
+		printk(KERN_WARNING "sx: sx_debug is an address, instead of a "

WARNING:SPLIT_STRING: quoted string split across lines
#3014: FILE: drivers/char/sx.c:2731:
+		printk(KERN_WARNING "sx: sx_debug is an address, instead of a "
+				"value. Assuming -1.\n(%p)\n", &sx_debug);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3020: FILE: drivers/char/sx.c:2736:
+		printk(KERN_ERR "SX: Unable to register firmware loader "

WARNING:SPLIT_STRING: quoted string split across lines
#3021: FILE: drivers/char/sx.c:2737:
+		printk(KERN_ERR "SX: Unable to register firmware loader "
+				"driver.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3094: FILE: drivers/char/sx.c:2797:
+		printk(KERN_INFO "sx: total of %d boards detected.\n", found);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3122: FILE: drivers/char/sx.c:2824:
+		printk(KERN_INFO "sx: couldn't deregister firmware loader "

WARNING:SPLIT_STRING: quoted string split across lines
#3123: FILE: drivers/char/sx.c:2825:
+		printk(KERN_INFO "sx: couldn't deregister firmware loader "
+				"device\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3127: FILE: drivers/char/sx.c:2828:
+	sx_dprintk(SX_DEBUG_CLEANUP, "Cleaning up drivers (%d)\n",
+			sx_initialized);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023212.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 163 warnings, 59 checks, 3034 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000023212.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
