WARNING:REPEATED_WORD: Possible repeated word: 'void'
#82: FILE: include/linux/fs.h:1628:
+extern void void drop_pagecache_sb(struct super_block *sb, int nr_goal);:q

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#82: FILE: include/linux/fs.h:1628:
 }
+extern void void drop_pagecache_sb(struct super_block *sb, int nr_goal);:q

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxO)
#82: FILE: include/linux/fs.h:1628:
+extern void void drop_pagecache_sb(struct super_block *sb, int nr_goal);:q
                                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:OxV)
#82: FILE: include/linux/fs.h:1628:
+extern void void drop_pagecache_sb(struct super_block *sb, int nr_goal);:q
                                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: include/linux/fs.h:1629:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: include/linux/fs.h:1629:
+ $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#97: FILE: fs/drop_caches.c:18:
+	int nr_count=0;
 	            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#102: FILE: fs/drop_caches.c:22:
+		if (nr_goal) {
[...]
+		} else if (inode->i_state & (I_FREEING|I_WILL_FREE))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#108: FILE: fs/drop_caches.c:28:
+		} else if (inode->i_state & (I_FREEING|I_WILL_FREE))
 		                                      ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: fs/drop_caches.c:77:
+EXPORT_SYMBOL(drop_pagecache_sb);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013852.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 3 checks, 45 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013852.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
