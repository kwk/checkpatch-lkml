WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
----------------------------------------------------------------------------

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#56: 
diff -HNaur /tmp/linux-2.4.22/include/net/ip_fib.h

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#58: 
--- /tmp/linux-2.4.22/include/net/ip_fib.h 2001-02-09

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#62: FILE: include/net/ip_fib.h:226:
/* Exported by fib_hash.c */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: include/net/ip_fib.h:229:
+extern struct fib_table *fib_table_init(int id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#68: FILE: include/net/ip_fib.h:231:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/net/table.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: include/net/table.h:18:
+ * along with GNU Zebra; see the file COPYING. If not, write to the Free$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#96: FILE: include/net/table.h:19:
+ * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#107: FILE: include/net/table.h:30:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#109: FILE: include/net/table.h:32:
+#define PREFIXLEN_MAX (PREFIX_SIZE*8) //160 bits of key.
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#112: FILE: include/net/table.h:35:
+struct prefix
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: include/net/table.h:36:
+ u_char prefix[PREFIX_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/net/table.h:37:
+ u_char prefixlen;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: include/net/table.h:41:
+int prefix_match (struct prefix *n, struct prefix *p);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#122: FILE: include/net/table.h:45:
+struct route_table
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: include/net/table.h:46:
+ struct route_node *top;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#128: FILE: include/net/table.h:51:
+struct route_node
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: include/net/table.h:53:
+ struct prefix p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: include/net/table.h:56:
+ struct route_table *table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: include/net/table.h:57:
+ struct route_node *parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/net/table.h:58:
+ struct route_node *link[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: include/net/table.h:63:
+ unsigned int lock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: include/net/table.h:66:
+ void *info;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#147: FILE: include/net/table.h:70:
+struct route_table *route_table_init (void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: include/net/table.h:71:
+void route_table_finish (struct route_table *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_table *' should also have an identifier name
#148: FILE: include/net/table.h:71:
+void route_table_finish (struct route_table *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: include/net/table.h:73:
+void route_unlock_node (struct route_node *node);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: include/net/table.h:74:
+struct route_node *route_top (struct route_table *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_table *' should also have an identifier name
#151: FILE: include/net/table.h:74:
+struct route_node *route_top (struct route_table *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: include/net/table.h:75:
+struct route_node *route_next (struct route_node *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_node *' should also have an identifier name
#152: FILE: include/net/table.h:75:
+struct route_node *route_next (struct route_node *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: include/net/table.h:76:
+struct route_node *route_next_until (struct route_node *, struct route_node

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_node *' should also have an identifier name
#153: FILE: include/net/table.h:76:
+struct route_node *route_next_until (struct route_node *, struct route_node

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_node' should also have an identifier name
#153: FILE: include/net/table.h:76:
+struct route_node *route_next_until (struct route_node *, struct route_node

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: include/net/table.h:77:
+struct route_node *route_node_get (struct route_table *, struct prefix *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_table *' should also have an identifier name
#155: FILE: include/net/table.h:77:
+struct route_node *route_node_get (struct route_table *, struct prefix *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct prefix *' should also have an identifier name
#155: FILE: include/net/table.h:77:
+struct route_node *route_node_get (struct route_table *, struct prefix *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: include/net/table.h:78:
+struct route_node *route_node_lookup (struct route_table *, struct prefix

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_table *' should also have an identifier name
#156: FILE: include/net/table.h:78:
+struct route_node *route_node_lookup (struct route_table *, struct prefix

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct prefix' should also have an identifier name
#156: FILE: include/net/table.h:78:
+struct route_node *route_node_lookup (struct route_table *, struct prefix

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: include/net/table.h:79:
+struct route_node *route_lock_node (struct route_node *node);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: include/net/table.h:80:
+struct route_node *route_node_match (struct route_table *, struct prefix

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_table *' should also have an identifier name
#159: FILE: include/net/table.h:80:
+struct route_node *route_node_match (struct route_table *, struct prefix

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct prefix' should also have an identifier name
#159: FILE: include/net/table.h:80:
+struct route_node *route_node_match (struct route_table *, struct prefix

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#182: FILE: net/core/table.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#199: FILE: net/core/table.c:18:
+ * along with GNU Zebra; see the file COPYING. If not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#200: FILE: net/core/table.c:19:
+ * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#208: FILE: net/core/table.c:27:
+static u_char maskbit[] =
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: net/core/table.c:28:
+ 0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xff$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#212: FILE: net/core/table.c:31:
+void prefix_copy(struct prefix *to, struct prefix *from){

ERROR:SPACING: space required before the open brace '{'
#212: FILE: net/core/table.c:31:
+void prefix_copy(struct prefix *to, struct prefix *from){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: net/core/table.c:32:
+ to->prefixlen = from->prefixlen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: net/core/table.c:33:
+ memcpy(to->prefix, from->prefix, PREFIX_SIZE);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: net/core/table.c:37:
+int prefix_match (struct prefix *n, struct prefix *p)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: net/core/table.c:39:
+ int offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: net/core/table.c:40:
+ int shift;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: net/core/table.c:43:
+ u_char *np = n->prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: net/core/table.c:44:
+ u_char *pp = p->prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: net/core/table.c:47:
+ if (n->prefixlen > p->prefixlen) return 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#228: FILE: net/core/table.c:47:
+ if (n->prefixlen > p->prefixlen) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: net/core/table.c:49:
+ offset = n->prefixlen / 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: net/core/table.c:50:
+ shift = n->prefixlen % 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: net/core/table.c:52:
+ if (shift) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#233: FILE: net/core/table.c:52:
+ if (shift) {
+ if (maskbit[shift] & (np[offset] ^ pp[offset])) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: net/core/table.c:53:
+ if (maskbit[shift] & (np[offset] ^ pp[offset])) return 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#234: FILE: net/core/table.c:53:
+ if (maskbit[shift] & (np[offset] ^ pp[offset])) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: net/core/table.c:54:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: net/core/table.c:56:
+ while (offset--) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#237: FILE: net/core/table.c:56:
+ while (offset--) {
+ if (np[offset] != pp[offset]) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: net/core/table.c:57:
+ if (np[offset] != pp[offset]) return 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#238: FILE: net/core/table.c:57:
+ if (np[offset] != pp[offset]) return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: net/core/table.c:58:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: net/core/table.c:59:
+ return 1;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: net/core/table.c:62:
+void route_node_delete (struct route_node *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: net/core/table.c:63:
+void route_table_free (struct route_table *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#244: FILE: net/core/table.c:63:
+void route_table_free (struct route_table *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct route_table *' should also have an identifier name
#244: FILE: net/core/table.c:63:
+void route_table_free (struct route_table *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: net/core/table.c:65:
+struct route_table * route_table_init (void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: net/core/table.c:65:
+struct route_table * route_table_init (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: net/core/table.c:67:
+ struct route_table *rt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: net/core/table.c:69:
+ rt = kmalloc(sizeof (struct route_table), GFP_KERNEL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: net/core/table.c:69:
+ rt = kmalloc(sizeof (struct route_table), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rt)...) over kmalloc(sizeof (struct route_table)...)
#250: FILE: net/core/table.c:69:
+ rt = kmalloc(sizeof (struct route_table), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: net/core/table.c:70:
+ if(rt != NULL) memset(rt, 0, sizeof(struct route_table));$

ERROR:SPACING: space required before the open parenthesis '('
#251: FILE: net/core/table.c:70:
+ if(rt != NULL) memset(rt, 0, sizeof(struct route_table));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#251: FILE: net/core/table.c:70:
+ if(rt != NULL) memset(rt, 0, sizeof(struct route_table));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rt"
#251: FILE: net/core/table.c:70:
+ if(rt != NULL) memset(rt, 0, sizeof(struct route_table));

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: net/core/table.c:72:
+ return rt;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: net/core/table.c:75:
+void route_table_finish (struct route_table *rt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: net/core/table.c:77:
+ route_table_free (rt);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: net/core/table.c:77:
+ route_table_free (rt);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: net/core/table.c:81:
+struct route_node * route_node_new (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: net/core/table.c:81:
+struct route_node * route_node_new (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: net/core/table.c:83:
+ struct route_node *node;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: net/core/table.c:84:
+ struct route_node *node;
+ node = kmalloc(sizeof (struct route_node), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: net/core/table.c:84:
+ node = kmalloc(sizeof (struct route_node), GFP_KERNEL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: net/core/table.c:84:
+ node = kmalloc(sizeof (struct route_node), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*node)...) over kmalloc(sizeof (struct route_node)...)
#265: FILE: net/core/table.c:84:
+ node = kmalloc(sizeof (struct route_node), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: net/core/table.c:85:
+ if(node != NULL) memset(node, 0, sizeof(struct route_node));$

ERROR:SPACING: space required before the open parenthesis '('
#266: FILE: net/core/table.c:85:
+ if(node != NULL) memset(node, 0, sizeof(struct route_node));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: net/core/table.c:85:
+ if(node != NULL) memset(node, 0, sizeof(struct route_node));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#266: FILE: net/core/table.c:85:
+ if(node != NULL) memset(node, 0, sizeof(struct route_node));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: net/core/table.c:87:
+ return node;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: net/core/table.c:91:
+struct route_node * route_node_set (struct route_table *table, struct

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: net/core/table.c:91:
+struct route_node * route_node_set (struct route_table *table, struct

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: net/core/table.c:93:
+ struct route_node *node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: net/core/table.c:95:
+ node = route_node_new ();$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: net/core/table.c:95:
+ node = route_node_new ();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: net/core/table.c:97:
+ prefix_copy (&node->p, prefix);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: net/core/table.c:97:
+ prefix_copy (&node->p, prefix);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: net/core/table.c:98:
+ node->table = table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: net/core/table.c:100:
+ return node;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: net/core/table.c:104:
+void route_node_free (struct route_node *node)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: net/core/table.c:106:
+ kfree (node);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: net/core/table.c:106:
+ kfree (node);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: net/core/table.c:110:
+void route_table_free (struct route_table *rt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: net/core/table.c:112:
+ struct route_node *tmp_node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: net/core/table.c:113:
+ struct route_node *node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: net/core/table.c:115:
+ if (rt == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#297: FILE: net/core/table.c:115:
+ if (rt == NULL)
+ return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rt"
#297: FILE: net/core/table.c:115:
+ if (rt == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: net/core/table.c:116:
+ return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: net/core/table.c:118:
+ node = rt->top;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: net/core/table.c:120:
+ while (node)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#302: FILE: net/core/table.c:120:
+ while (node)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#302: FILE: net/core/table.c:120:
+ while (node)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: net/core/table.c:121:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: net/core/table.c:122:
+ if (node->l_left)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#304: FILE: net/core/table.c:122:
+ if (node->l_left)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#304: FILE: net/core/table.c:122:
+ if (node->l_left)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: net/core/table.c:123:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: net/core/table.c:124:
+ node = node->l_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: net/core/table.c:125:
+ continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: net/core/table.c:126:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: net/core/table.c:128:
+ if (node->l_right)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#310: FILE: net/core/table.c:128:
+ if (node->l_right)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#310: FILE: net/core/table.c:128:
+ if (node->l_right)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: net/core/table.c:129:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: net/core/table.c:130:
+ node = node->l_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: net/core/table.c:131:
+ continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: net/core/table.c:132:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: net/core/table.c:134:
+ tmp_node = node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: net/core/table.c:135:
+ node = node->parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: net/core/table.c:137:
+ if (node != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#319: FILE: net/core/table.c:137:
+ if (node != NULL)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#319: FILE: net/core/table.c:137:
+ if (node != NULL)
+ {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#319: FILE: net/core/table.c:137:
+ if (node != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: net/core/table.c:138:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: net/core/table.c:139:
+ if (node->l_left == tmp_node)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#321: FILE: net/core/table.c:139:
+ if (node->l_left == tmp_node)
+ node->l_left = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: net/core/table.c:140:
+ node->l_left = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: net/core/table.c:141:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#323: FILE: net/core/table.c:141:
+ else
+ node->l_right = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: net/core/table.c:142:
+ node->l_right = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: net/core/table.c:144:
+ route_node_free (tmp_node);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: net/core/table.c:144:
+ route_node_free (tmp_node);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: net/core/table.c:145:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: net/core/table.c:146:
+ else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#328: FILE: net/core/table.c:146:
+ else
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#328: FILE: net/core/table.c:146:
+ else
+ {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#328: FILE: net/core/table.c:146:
+ }
+ else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: net/core/table.c:147:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: net/core/table.c:148:
+ route_node_free (tmp_node);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: net/core/table.c:148:
+ route_node_free (tmp_node);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: net/core/table.c:149:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: net/core/table.c:150:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: net/core/table.c:151:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: net/core/table.c:153:
+ kfree(rt);$

WARNING:TYPO_SPELLING: 'genaration' may be misspelled - perhaps 'generation'?
#338: FILE: net/core/table.c:156:
+/* Common prefix route genaration. */
                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: net/core/table.c:157:
+static void route_common (struct prefix *n, struct prefix *p, struct prefix

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: net/core/table.c:159:
+ int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: net/core/table.c:160:
+ u_char diff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: net/core/table.c:161:
+ u_char mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: net/core/table.c:163:
+ u_char *np = n->prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: net/core/table.c:164:
+ u_char *pp = p->prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: net/core/table.c:165:
+ u_char *newp = new->prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: net/core/table.c:167:
+ for (i = 0; i < p->prefixlen / 8; i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#350: FILE: net/core/table.c:167:
+ for (i = 0; i < p->prefixlen / 8; i++)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#350: FILE: net/core/table.c:167:
+ for (i = 0; i < p->prefixlen / 8; i++)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: net/core/table.c:168:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: net/core/table.c:169:
+ if (np[i] == pp[i])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#352: FILE: net/core/table.c:169:
+ if (np[i] == pp[i])
+ newp[i] = np[i];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: net/core/table.c:170:
+ newp[i] = np[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: net/core/table.c:171:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#354: FILE: net/core/table.c:171:
+ else
+ break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: net/core/table.c:172:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: net/core/table.c:173:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: net/core/table.c:175:
+ new->prefixlen = i * 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: net/core/table.c:177:
+ if (new->prefixlen != p->prefixlen)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: net/core/table.c:177:
+ if (new->prefixlen != p->prefixlen)
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#360: FILE: net/core/table.c:177:
+ if (new->prefixlen != p->prefixlen)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: net/core/table.c:178:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: net/core/table.c:179:
+ diff = np[i] ^ pp[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: net/core/table.c:180:
+ mask = 0x80;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: net/core/table.c:181:
+ while (new->prefixlen < p->prefixlen && !(mask & diff))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#364: FILE: net/core/table.c:181:
+ while (new->prefixlen < p->prefixlen && !(mask & diff))
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#364: FILE: net/core/table.c:181:
+ while (new->prefixlen < p->prefixlen && !(mask & diff))
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: net/core/table.c:182:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: net/core/table.c:183:
+ mask >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: net/core/table.c:184:
+ new->prefixlen++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: net/core/table.c:185:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: net/core/table.c:186:
+ newp[i] = np[i] & maskbit[new->prefixlen % 8];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: net/core/table.c:187:
+ }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: net/core/table.c:191:
+#define CHECK_BIT(X,P) ((((u_char *)(X))[(P) / 8]) >> (7 - ((P) % 8)) & 1)
                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'P' - possible side-effects?
#374: FILE: net/core/table.c:191:
+#define CHECK_BIT(X,P) ((((u_char *)(X))[(P) / 8]) >> (7 - ((P) % 8)) & 1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: net/core/table.c:194:
+static int check_bit (u_char *prefix, u_char prefixlen)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: net/core/table.c:196:
+ int offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: net/core/table.c:197:
+ int shift;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: net/core/table.c:198:
+ u_char *p = (u_char *)prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: net/core/table.c:200:
+ offset = prefixlen / 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: net/core/table.c:201:
+ shift = 7 - (prefixlen % 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: net/core/table.c:203:
+ return (p[offset] >> shift & 1);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#390: FILE: net/core/table.c:207:
+#define SET_LINK(X,Y) (X)->link[CHECK_BIT(&(Y)->prefix,(X)->prefixlen)] =
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#390: FILE: net/core/table.c:207:
+#define SET_LINK(X,Y) (X)->link[CHECK_BIT(&(Y)->prefix,(X)->prefixlen)] =
                                                       ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#390: FILE: net/core/table.c:207:
+#define SET_LINK(X,Y) (X)->link[CHECK_BIT(&(Y)->prefix,(X)->prefixlen)] =

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'X' - possible side-effects?
#390: FILE: net/core/table.c:207:
+#define SET_LINK(X,Y) (X)->link[CHECK_BIT(&(Y)->prefix,(X)->prefixlen)] =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: net/core/table.c:208:
+ (Y)->parent = (X)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: net/core/table.c:210:
+static void set_link (struct route_node *node, struct route_node *new)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: net/core/table.c:212:
+ int bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: net/core/table.c:214:
+ bit = check_bit (new->p.prefix, node->p.prefixlen);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: net/core/table.c:214:
+ bit = check_bit (new->p.prefix, node->p.prefixlen);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: net/core/table.c:216:
+ node->link[bit] = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: net/core/table.c:217:
+ new->parent = node;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: net/core/table.c:221:
+struct route_node * route_lock_node (struct route_node *node)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: net/core/table.c:221:
+struct route_node * route_lock_node (struct route_node *node)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: net/core/table.c:223:
+ node->lock++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: net/core/table.c:224:
+ return node;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: net/core/table.c:228:
+void route_unlock_node (struct route_node *node)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: net/core/table.c:230:
+ node->lock--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: net/core/table.c:232:
+ if (node->lock == 0) route_node_delete (node);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#416: FILE: net/core/table.c:232:
+ if (node->lock == 0) route_node_delete (node);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#416: FILE: net/core/table.c:232:
+ if (node->lock == 0) route_node_delete (node);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: net/core/table.c:236:
+struct route_node * route_node_match (struct route_table *table, struct

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: net/core/table.c:236:
+struct route_node * route_node_match (struct route_table *table, struct

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: net/core/table.c:238:
+ struct route_node *node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: net/core/table.c:239:
+ struct route_node *matched;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: net/core/table.c:241:
+ matched = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: net/core/table.c:242:
+ node = table->top;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#430: FILE: net/core/table.c:245:
+ /* Walk down tree. If there is matched route then store it to
+ matched. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: net/core/table.c:245:
+ matched. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: net/core/table.c:246:
+ while (node && node->p.prefixlen <= p->prefixlen && prefix_match$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#431: FILE: net/core/table.c:246:
+ while (node && node->p.prefixlen <= p->prefixlen && prefix_match
(&node->p, p))
+ {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#431: FILE: net/core/table.c:246:
+ while (node && node->p.prefixlen <= p->prefixlen && prefix_match
[...]
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: net/core/table.c:247:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: net/core/table.c:248:
+ if (node->info != NULL) matched = node;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#434: FILE: net/core/table.c:248:
+ if (node->info != NULL) matched = node;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node->info"
#434: FILE: net/core/table.c:248:
+ if (node->info != NULL) matched = node;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: net/core/table.c:249:
+ node = node->link[check_bit(p->prefix, node->p.prefixlen)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: net/core/table.c:250:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: net/core/table.c:253:
+ if (matched) return route_lock_node (matched);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#439: FILE: net/core/table.c:253:
+ if (matched) return route_lock_node (matched);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#439: FILE: net/core/table.c:253:
+ if (matched) return route_lock_node (matched);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: net/core/table.c:255:
+ return NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: net/core/table.c:259:
+struct route_node * route_node_lookup (struct route_table *table, struct

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: net/core/table.c:259:
+struct route_node * route_node_lookup (struct route_table *table, struct

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: net/core/table.c:261:
+ struct route_node *node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: net/core/table.c:263:
+ node = table->top;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: net/core/table.c:265:
+ while (node && node->p.prefixlen <= p->prefixlen && prefix_match$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#452: FILE: net/core/table.c:265:
+ while (node && node->p.prefixlen <= p->prefixlen && prefix_match
[...]
+ if (node->p.prefixlen == p->prefixlen && (node->info != NULL)) return

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: net/core/table.c:266:
+ if (node->p.prefixlen == p->prefixlen && (node->info != NULL)) return$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node->info != NULL'
#454: FILE: net/core/table.c:266:
+ if (node->p.prefixlen == p->prefixlen && (node->info != NULL)) return

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#454: FILE: net/core/table.c:266:
+ if (node->p.prefixlen == p->prefixlen && (node->info != NULL)) return

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node->info"
#454: FILE: net/core/table.c:266:
+ if (node->p.prefixlen == p->prefixlen && (node->info != NULL)) return

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: net/core/table.c:267:
+ node = node->link[check_bit(p->prefix, node->p.prefixlen)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: net/core/table.c:268:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: net/core/table.c:270:
+ return NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: net/core/table.c:274:
+struct route_node * route_node_get (struct route_table *table, struct

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: net/core/table.c:274:
+struct route_node * route_node_get (struct route_table *table, struct

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: net/core/table.c:276:
+ struct route_node *new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: net/core/table.c:277:
+ struct route_node *node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: net/core/table.c:278:
+ struct route_node *match;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: net/core/table.c:280:
+ if(p->prefixlen > PREFIXLEN_MAX) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#470: FILE: net/core/table.c:280:
+ if(p->prefixlen > PREFIXLEN_MAX) {
+ printk(KERN_ERR "table: route_node_get prefix length to big for this table

ERROR:SPACING: space required before the open parenthesis '('
#470: FILE: net/core/table.c:280:
+ if(p->prefixlen > PREFIXLEN_MAX) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: net/core/table.c:281:
+ printk(KERN_ERR "table: route_node_get prefix length to big for this table$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#471: FILE: net/core/table.c:281:
+ printk(KERN_ERR "table: route_node_get prefix length to big for this table

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: net/core/table.c:282:
+ return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: net/core/table.c:283:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: net/core/table.c:285:
+ match = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: net/core/table.c:286:
+ node = table->top;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: net/core/table.c:287:
+ while (node && node->p.prefixlen <= p->prefixlen &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: net/core/table.c:288:
+ prefix_match (&node->p, p))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: net/core/table.c:289:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: net/core/table.c:290:
+ if (node->p.prefixlen == p->prefixlen)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: net/core/table.c:291:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: net/core/table.c:292:
+ route_lock_node (node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: net/core/table.c:293:
+ return node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: net/core/table.c:294:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: net/core/table.c:295:
+ match = node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: net/core/table.c:296:
+ node = node->link[check_bit(p->prefix, node->p.prefixlen)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: net/core/table.c:297:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: net/core/table.c:299:
+ if (node == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: net/core/table.c:300:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: net/core/table.c:301:
+ new = route_node_set (table, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: net/core/table.c:302:
+ if (match)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: net/core/table.c:303:
+ set_link (match, new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: net/core/table.c:304:
+ else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: net/core/table.c:305:
+ table->top = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: net/core/table.c:306:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: net/core/table.c:307:
+ else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: net/core/table.c:308:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: net/core/table.c:309:
+ new = route_node_new ();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: net/core/table.c:310:
+ route_common (&node->p, p, &new->p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: net/core/table.c:311:
+ new->table = table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: net/core/table.c:312:
+ set_link (new, node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: net/core/table.c:314:
+ if (match)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: net/core/table.c:315:
+ set_link (match, new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: net/core/table.c:316:
+ else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: net/core/table.c:317:
+ table->top = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: net/core/table.c:319:
+ if (new->p.prefixlen != p->prefixlen)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: net/core/table.c:320:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: net/core/table.c:321:
+ match = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: net/core/table.c:322:
+ new = route_node_set (table, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: net/core/table.c:323:
+ set_link (match, new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: net/core/table.c:324:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: net/core/table.c:325:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: net/core/table.c:326:
+ route_lock_node (new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: net/core/table.c:328:
+ return new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: net/core/table.c:334:
+ struct route_node *child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: net/core/table.c:335:
+ struct route_node *parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: net/core/table.c:337:
+ if (node->l_left && node->l_right) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: net/core/table.c:339:
+ if (node->l_left) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: net/core/table.c:340:
+ child = node->l_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: net/core/table.c:341:
+ } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: net/core/table.c:342:
+ child = node->l_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: net/core/table.c:343:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: net/core/table.c:345:
+ parent = node->parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: net/core/table.c:347:
+ if (child) child->parent = parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: net/core/table.c:349:
+ if (parent) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: net/core/table.c:350:
+ if (parent->l_left == node) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: net/core/table.c:351:
+ parent->l_left = child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: net/core/table.c:352:
+ } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: net/core/table.c:353:
+ parent->l_right = child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: net/core/table.c:354:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: net/core/table.c:355:
+ } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: net/core/table.c:356:
+ node->table->top = child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: net/core/table.c:357:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: net/core/table.c:359:
+ route_node_free (node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: net/core/table.c:361:
+ /* If parent node is stub then delete it also. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: net/core/table.c:362:
+ if (parent && parent->lock == 0) route_node_delete (parent);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#557: FILE: net/core/table.c:366:
+ to lookup all the node exist in the routing table. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: net/core/table.c:366:
+ to lookup all the node exist in the routing table. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: net/core/table.c:369:
+ /* If there is no node in the routing table return NULL. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: net/core/table.c:370:
+ if (table->top == NULL) return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: net/core/table.c:372:
+ /* Lock the top node and return it. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: net/core/table.c:373:
+ route_lock_node (table->top);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: net/core/table.c:374:
+ return table->top;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: net/core/table.c:380:
+ struct route_node *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: net/core/table.c:381:
+ struct route_node *start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: net/core/table.c:383:
+ /* Node may be deleted from route_unlock_node so we have to preserve$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#575: FILE: net/core/table.c:384:
+ next node's pointer. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: net/core/table.c:384:
+ next node's pointer. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: net/core/table.c:386:
+ if (node->l_left)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: net/core/table.c:387:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: net/core/table.c:388:
+ next = node->l_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: net/core/table.c:389:
+ route_lock_node (next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: net/core/table.c:390:
+ route_unlock_node (node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: net/core/table.c:391:
+ return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: net/core/table.c:392:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: net/core/table.c:393:
+ if (node->l_right)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: net/core/table.c:394:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: net/core/table.c:395:
+ next = node->l_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: net/core/table.c:396:
+ route_lock_node (next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: net/core/table.c:397:
+ route_unlock_node (node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: net/core/table.c:398:
+ return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: net/core/table.c:399:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: net/core/table.c:401:
+ start = node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: net/core/table.c:402:
+ while (node->parent)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: net/core/table.c:403:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: net/core/table.c:404:
+ if (node->parent->l_left == node && node->parent->l_right)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: net/core/table.c:405:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: net/core/table.c:406:
+ next = node->parent->l_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: net/core/table.c:407:
+ route_lock_node (next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: net/core/table.c:408:
+ route_unlock_node (start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: net/core/table.c:409:
+ return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: net/core/table.c:410:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: net/core/table.c:411:
+ node = node->parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: net/core/table.c:412:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: net/core/table.c:413:
+ route_unlock_node (start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: net/core/table.c:414:
+ return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: net/core/table.c:420:
+ struct route_node *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: net/core/table.c:421:
+ struct route_node *start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: net/core/table.c:423:
+ /* Node may be deleted from route_unlock_node so we have to preserve$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#616: FILE: net/core/table.c:424:
+ next node's pointer. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: net/core/table.c:424:
+ next node's pointer. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: net/core/table.c:426:
+ if (node->l_left)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: net/core/table.c:427:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: net/core/table.c:428:
+ next = node->l_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: net/core/table.c:429:
+ route_lock_node (next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: net/core/table.c:430:
+ route_unlock_node (node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: net/core/table.c:431:
+ return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: net/core/table.c:432:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: net/core/table.c:433:
+ if (node->l_right)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: net/core/table.c:434:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: net/core/table.c:435:
+ next = node->l_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: net/core/table.c:436:
+ route_lock_node (next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: net/core/table.c:437:
+ route_unlock_node (node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: net/core/table.c:438:
+ return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: net/core/table.c:439:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: net/core/table.c:441:
+ start = node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: net/core/table.c:442:
+ while (node->parent && node != limit)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: net/core/table.c:443:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: net/core/table.c:444:
+ if (node->parent->l_left == node && node->parent->l_right)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: net/core/table.c:445:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: net/core/table.c:446:
+ next = node->parent->l_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: net/core/table.c:447:
+ route_lock_node (next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: net/core/table.c:448:
+ route_unlock_node (start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: net/core/table.c:449:
+ return next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: net/core/table.c:450:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: net/core/table.c:451:
+ node = node->parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: net/core/table.c:452:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: net/core/table.c:453:
+ route_unlock_node (start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: net/core/table.c:454:
+ return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: net/ipv4/fib_frontend.c:65:
+ tb = fib_table_init(id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: net/ipv4/fib_frontend.c:649:
+ local_table = fib_table_init(RT_TABLE_LOCAL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: net/ipv4/fib_frontend.c:650:
+ main_table = fib_table_init(RT_TABLE_MAIN);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#692: FILE: net/ipv4/fib_table.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#699: FILE: net/ipv4/fib_table.c:8:
+ * Version: $Id: fib_hash.c,v 1.13 2001/10/31 21:55:54 davem Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#710: FILE: net/ipv4/fib_table.c:19:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#712: FILE: net/ipv4/fib_table.c:21:
+#include <asm/bitops.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#738: FILE: net/ipv4/fib_table.c:47:
+static kmem_cache_t * fn_table_kmem;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#747: FILE: net/ipv4/fib_table.c:56:
+struct fib_node
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: net/ipv4/fib_table.c:57:
+ struct fib_info *fn_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: net/ipv4/fib_table.c:59:
+ u8 fn_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: net/ipv4/fib_table.c:60:
+ u8 fn_scope;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#757: FILE: net/ipv4/fib_table.c:65:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#759: FILE: net/ipv4/fib_table.c:67:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#761: FILE: net/ipv4/fib_table.c:69:
+static void fn_free_node(struct fib_node * f)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: net/ipv4/fib_table.c:71:
+ fib_release_info(FIB_INFO(f));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: net/ipv4/fib_table.c:72:
+ kmem_cache_free(fn_table_kmem, f);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#767: FILE: net/ipv4/fib_table.c:75:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#768: FILE: net/ipv4/fib_table.c:76:
+static int fn_table_lookup(struct fib_table *tb, const struct rt_key *key,
struct fib_result *res) {
+ struct route_table *table = (struct route_table*)tb->tb_data;
+ int err = -EINVAL;
+ struct prefix p;
+ struct route_node *rn = NULL;
+ struct fib_node *fn = NULL;
+
+ memset(&p, 0, sizeof(struct prefix));
+ p.prefixlen = KEY_BITMASK_TOTAL; //add 16 bits length for the VR + 32 for
IPv4
+ memcpy(p.prefix+KEY_IPV4_OFFSET, &key->dst, 4);
+
+ rn = route_node_match(table, &p);
+ if(rn == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#770: FILE: net/ipv4/fib_table.c:77:
+static int fn_table_lookup(struct fib_table *tb, const struct rt_key *key,
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: net/ipv4/fib_table.c:77:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#770: FILE: net/ipv4/fib_table.c:77:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: net/ipv4/fib_table.c:78:
+ int err = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: net/ipv4/fib_table.c:79:
+ struct prefix p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: net/ipv4/fib_table.c:80:
+ struct route_node *rn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: net/ipv4/fib_table.c:81:
+ struct fib_node *fn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: net/ipv4/fib_table.c:83:
+ memset(&p, 0, sizeof(struct prefix));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: net/ipv4/fib_table.c:84:
+ p.prefixlen = KEY_BITMASK_TOTAL; //add 16 bits length for the VR + 32 for$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: net/ipv4/fib_table.c:85:
+ memcpy(p.prefix+KEY_IPV4_OFFSET, &key->dst, 4);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#779: FILE: net/ipv4/fib_table.c:85:
+ memcpy(p.prefix+KEY_IPV4_OFFSET, &key->dst, 4);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: net/ipv4/fib_table.c:87:
+ rn = route_node_match(table, &p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: net/ipv4/fib_table.c:88:
+ if(rn == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#782: FILE: net/ipv4/fib_table.c:88:
+ if(rn == NULL) {
+ return 1; //Return 1 if not found

ERROR:SPACING: space required before the open parenthesis '('
#782: FILE: net/ipv4/fib_table.c:88:
+ if(rn == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#782: FILE: net/ipv4/fib_table.c:88:
+ if(rn == NULL) {
+ return 1; //Return 1 if not found
+ }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rn"
#782: FILE: net/ipv4/fib_table.c:88:
+ if(rn == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: net/ipv4/fib_table.c:89:
+ return 1; //Return 1 if not found$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: net/ipv4/fib_table.c:90:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: net/ipv4/fib_table.c:92:
+ fn = (struct fib_node *)rn->info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: net/ipv4/fib_table.c:94:
+ err = fib_semantic_match(fn->fn_type, FIB_INFO(fn), key, res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: net/ipv4/fib_table.c:95:
+ if (err == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#789: FILE: net/ipv4/fib_table.c:95:
+ if (err == 0) {
+ res->type = fn->fn_type;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: net/ipv4/fib_table.c:96:
+ res->type = fn->fn_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: net/ipv4/fib_table.c:97:
+ res->scope = fn->fn_scope;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: net/ipv4/fib_table.c:98:
+ res->prefixlen = rn->p.prefixlen-KEY_BITMASK_TO_IPV4;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#792: FILE: net/ipv4/fib_table.c:98:
+ res->prefixlen = rn->p.prefixlen-KEY_BITMASK_TO_IPV4;
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: net/ipv4/fib_table.c:99:
+ goto out; //Return 0 if found$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: net/ipv4/fib_table.c:100:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: net/ipv4/fib_table.c:101:
+ if (err < 0) goto out;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#795: FILE: net/ipv4/fib_table.c:101:
+ if (err < 0) goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: net/ipv4/fib_table.c:102:
+ err = 1; //Return 1 if not found$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: net/ipv4/fib_table.c:105:
+ route_unlock_node(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: net/ipv4/fib_table.c:106:
+ return err;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#803: FILE: net/ipv4/fib_table.c:109:
+static void fn_table_select_default(struct fib_table *tb, const struct
rt_key *key, struct fib_result *res){
+ struct route_table *table = (struct route_table*)tb->tb_data;
+
+ printk(KERN_ERR "fn_table_select_default.\n");
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: net/ipv4/fib_table.c:110:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#805: FILE: net/ipv4/fib_table.c:110:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: net/ipv4/fib_table.c:112:
+ printk(KERN_ERR "fn_table_select_default.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#807: FILE: net/ipv4/fib_table.c:112:
+ printk(KERN_ERR "fn_table_select_default.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fn_table_select_default', this function's name, in a string
#807: FILE: net/ipv4/fib_table.c:112:
+ printk(KERN_ERR "fn_table_select_default.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#810: FILE: net/ipv4/fib_table.c:115:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#811: FILE: net/ipv4/fib_table.c:116:
+static int fn_table_insert(struct fib_table *tb, struct rtmsg *r, struct
kern_rta *rta, struct nlmsghdr *n, struct netlink_skb_parms *req) {
+ struct route_table *table = (struct route_table*)tb->tb_data;
+ struct fib_info *fi = NULL;
+ struct fib_node *fn = NULL;
+ struct prefix p;
+ struct route_node *rn = NULL;
+ int err = -EINVAL;
+
+ memset(&p, 0, sizeof(struct prefix));
+ p.prefixlen = r->rtm_dst_len+KEY_BITMASK_TO_IPV4; //add 16 bits length for
the VR.
+
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: net/ipv4/fib_table.c:117:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#813: FILE: net/ipv4/fib_table.c:117:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: net/ipv4/fib_table.c:118:
+ struct fib_info *fi = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: net/ipv4/fib_table.c:119:
+ struct fib_node *fn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: net/ipv4/fib_table.c:120:
+ struct prefix p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: net/ipv4/fib_table.c:121:
+ struct route_node *rn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: net/ipv4/fib_table.c:122:
+ int err = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: net/ipv4/fib_table.c:124:
+ memset(&p, 0, sizeof(struct prefix));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: net/ipv4/fib_table.c:125:
+ p.prefixlen = r->rtm_dst_len+KEY_BITMASK_TO_IPV4; //add 16 bits length for$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#821: FILE: net/ipv4/fib_table.c:125:
+ p.prefixlen = r->rtm_dst_len+KEY_BITMASK_TO_IPV4; //add 16 bits length for
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: net/ipv4/fib_table.c:127:
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#824: FILE: net/ipv4/fib_table.c:127:
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",

ERROR:SPACING: space required before the open parenthesis '('
#824: FILE: net/ipv4/fib_table.c:127:
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: net/ipv4/fib_table.c:128:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#825: FILE: net/ipv4/fib_table.c:128:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fn_table_insert', this function's name, in a string
#825: FILE: net/ipv4/fib_table.c:128:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: net/ipv4/fib_table.c:129:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",
+ return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: net/ipv4/fib_table.c:129:
+ return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: net/ipv4/fib_table.c:130:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: net/ipv4/fib_table.c:131:
+ if (rta->rta_dst) memcpy(p.prefix+KEY_IPV4_OFFSET, rta->rta_dst, 4);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#829: FILE: net/ipv4/fib_table.c:131:
+ if (rta->rta_dst) memcpy(p.prefix+KEY_IPV4_OFFSET, rta->rta_dst, 4);
                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#829: FILE: net/ipv4/fib_table.c:131:
+ if (rta->rta_dst) memcpy(p.prefix+KEY_IPV4_OFFSET, rta->rta_dst, 4);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: net/ipv4/fib_table.c:133:
+ if ((fi = fib_create_info(r, rta, n, &err)) == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#831: FILE: net/ipv4/fib_table.c:133:
+ if ((fi = fib_create_info(r, rta, n, &err)) == NULL) {
+ printk(KERN_ERR "fn_table_insert, fib_create_info failed %d.\n", err);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#831: FILE: net/ipv4/fib_table.c:133:
+ if ((fi = fib_create_info(r, rta, n, &err)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: net/ipv4/fib_table.c:134:
+ printk(KERN_ERR "fn_table_insert, fib_create_info failed %d.\n", err);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#832: FILE: net/ipv4/fib_table.c:134:
+ printk(KERN_ERR "fn_table_insert, fib_create_info failed %d.\n", err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fn_table_insert', this function's name, in a string
#832: FILE: net/ipv4/fib_table.c:134:
+ printk(KERN_ERR "fn_table_insert, fib_create_info failed %d.\n", err);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: net/ipv4/fib_table.c:135:
+ return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: net/ipv4/fib_table.c:136:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: net/ipv4/fib_table.c:138:
+ rn = route_node_get(table, &p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: net/ipv4/fib_table.c:139:
+ if(rn == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#837: FILE: net/ipv4/fib_table.c:139:
+ if(rn == NULL) {
+ printk(KERN_ERR "fn_table_insert, node_get.\n");

ERROR:SPACING: space required before the open parenthesis '('
#837: FILE: net/ipv4/fib_table.c:139:
+ if(rn == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rn"
#837: FILE: net/ipv4/fib_table.c:139:
+ if(rn == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: net/ipv4/fib_table.c:140:
+ printk(KERN_ERR "fn_table_insert, node_get.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#838: FILE: net/ipv4/fib_table.c:140:
+ printk(KERN_ERR "fn_table_insert, node_get.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fn_table_insert', this function's name, in a string
#838: FILE: net/ipv4/fib_table.c:140:
+ printk(KERN_ERR "fn_table_insert, node_get.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: net/ipv4/fib_table.c:141:
+ goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: net/ipv4/fib_table.c:142:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: net/ipv4/fib_table.c:144:
+ if(rn->info != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#842: FILE: net/ipv4/fib_table.c:144:
+ if(rn->info != NULL) {
+ if(n->nlmsg_flags&NLM_F_EXCL) goto out; // An entry, but need to to

ERROR:SPACING: space required before the open parenthesis '('
#842: FILE: net/ipv4/fib_table.c:144:
+ if(rn->info != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn->info"
#842: FILE: net/ipv4/fib_table.c:144:
+ if(rn->info != NULL) {

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#843: FILE: net/ipv4/fib_table.c:145:
+ if(n->nlmsg_flags&NLM_F_EXCL) goto out; // An entry, but need to to

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: net/ipv4/fib_table.c:145:
+ if(n->nlmsg_flags&NLM_F_EXCL) goto out; // An entry, but need to to$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#843: FILE: net/ipv4/fib_table.c:145:
+ if(n->nlmsg_flags&NLM_F_EXCL) goto out; // An entry, but need to to
                   ^

ERROR:SPACING: space required before the open parenthesis '('
#843: FILE: net/ipv4/fib_table.c:145:
+ if(n->nlmsg_flags&NLM_F_EXCL) goto out; // An entry, but need to to

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#843: FILE: net/ipv4/fib_table.c:145:
+ if(n->nlmsg_flags&NLM_F_EXCL) goto out; // An entry, but need to to

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: net/ipv4/fib_table.c:148:
+ rtmsg_fib(RTM_DELROUTE, rn, tb->tb_id, n, req);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: net/ipv4/fib_table.c:149:
+ fn_free_node((struct fib_node *)rn->info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: net/ipv4/fib_table.c:150:
+ route_unlock_node(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: net/ipv4/fib_table.c:151:
+ } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#851: FILE: net/ipv4/fib_table.c:151:
+ } else {
+ if(!(n->nlmsg_flags&NLM_F_CREATE)) goto out; //Not already define and not

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: net/ipv4/fib_table.c:152:
+ if(!(n->nlmsg_flags&NLM_F_CREATE)) goto out; //Not already define and not$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#852: FILE: net/ipv4/fib_table.c:152:
+ if(!(n->nlmsg_flags&NLM_F_CREATE)) goto out; //Not already define and not
                     ^

ERROR:SPACING: space required before the open parenthesis '('
#852: FILE: net/ipv4/fib_table.c:152:
+ if(!(n->nlmsg_flags&NLM_F_CREATE)) goto out; //Not already define and not

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#852: FILE: net/ipv4/fib_table.c:152:
+ if(!(n->nlmsg_flags&NLM_F_CREATE)) goto out; //Not already define and not

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: net/ipv4/fib_table.c:153:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: net/ipv4/fib_table.c:156:
+ fn = kmem_cache_alloc(fn_table_kmem, SLAB_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: net/ipv4/fib_table.c:157:
+ if(fn == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#858: FILE: net/ipv4/fib_table.c:157:
+ if(fn == NULL) {
+ printk(KERN_ERR "fn_table_insert, cache alloc failed.\n");

ERROR:SPACING: space required before the open parenthesis '('
#858: FILE: net/ipv4/fib_table.c:157:
+ if(fn == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fn"
#858: FILE: net/ipv4/fib_table.c:157:
+ if(fn == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: net/ipv4/fib_table.c:158:
+ printk(KERN_ERR "fn_table_insert, cache alloc failed.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#859: FILE: net/ipv4/fib_table.c:158:
+ printk(KERN_ERR "fn_table_insert, cache alloc failed.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fn_table_insert', this function's name, in a string
#859: FILE: net/ipv4/fib_table.c:158:
+ printk(KERN_ERR "fn_table_insert, cache alloc failed.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: net/ipv4/fib_table.c:159:
+ goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: net/ipv4/fib_table.c:160:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: net/ipv4/fib_table.c:163:
+ memset(fn, 0, sizeof(struct fib_node));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: net/ipv4/fib_table.c:164:
+ fn->fn_type = r->rtm_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: net/ipv4/fib_table.c:165:
+ fn->fn_scope = r->rtm_scope;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: net/ipv4/fib_table.c:166:
+ FIB_INFO(fn) = fi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: net/ipv4/fib_table.c:167:
+ rn->info = fn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: net/ipv4/fib_table.c:169:
+ rtmsg_fib(RTM_NEWROUTE, rn, tb->tb_id, n, req);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#871: FILE: net/ipv4/fib_table.c:170:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: net/ipv4/fib_table.c:173:
+ if(rn != NULL) route_unlock_node(rn);$

ERROR:SPACING: space required before the open parenthesis '('
#874: FILE: net/ipv4/fib_table.c:173:
+ if(rn != NULL) route_unlock_node(rn);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#874: FILE: net/ipv4/fib_table.c:173:
+ if(rn != NULL) route_unlock_node(rn);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn"
#874: FILE: net/ipv4/fib_table.c:173:
+ if(rn != NULL) route_unlock_node(rn);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: net/ipv4/fib_table.c:174:
+ fib_release_info(fi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: net/ipv4/fib_table.c:175:
+ return err;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#879: FILE: net/ipv4/fib_table.c:178:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#880: FILE: net/ipv4/fib_table.c:179:
+static int fn_table_delete(struct fib_table *tb, struct rtmsg *r, struct
kern_rta *rta, struct nlmsghdr *n, struct netlink_skb_parms *req) {
+ struct route_table *table = (struct route_table*)tb->tb_data;
+ struct prefix p;
+ struct route_node *rn = NULL;
+
+ memset(&p, 0, sizeof(struct prefix));
+ p.prefixlen = r->rtm_dst_len+KEY_BITMASK_TO_IPV4; //add 16 bits length for
the VR.
+
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: net/ipv4/fib_table.c:180:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#882: FILE: net/ipv4/fib_table.c:180:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: net/ipv4/fib_table.c:181:
+ struct prefix p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: net/ipv4/fib_table.c:182:
+ struct route_node *rn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: net/ipv4/fib_table.c:184:
+ memset(&p, 0, sizeof(struct prefix));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: net/ipv4/fib_table.c:185:
+ p.prefixlen = r->rtm_dst_len+KEY_BITMASK_TO_IPV4; //add 16 bits length for$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#887: FILE: net/ipv4/fib_table.c:185:
+ p.prefixlen = r->rtm_dst_len+KEY_BITMASK_TO_IPV4; //add 16 bits length for
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: net/ipv4/fib_table.c:187:
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#890: FILE: net/ipv4/fib_table.c:187:
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",

ERROR:SPACING: space required before the open parenthesis '('
#890: FILE: net/ipv4/fib_table.c:187:
+ if(p.prefixlen > KEY_BITMASK_TOTAL) { //16 bits for VR + 32 bits for IPv4

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: net/ipv4/fib_table.c:188:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#891: FILE: net/ipv4/fib_table.c:188:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: net/ipv4/fib_table.c:189:
+ printk(KERN_ERR "fn_table_insert, prefix too long %d, max%d.\n",
+ return -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: net/ipv4/fib_table.c:189:
+ return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: net/ipv4/fib_table.c:190:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: net/ipv4/fib_table.c:191:
+ if (rta->rta_dst) memcpy(p.prefix+KEY_IPV4_OFFSET, rta->rta_dst, 4);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#895: FILE: net/ipv4/fib_table.c:191:
+ if (rta->rta_dst) memcpy(p.prefix+KEY_IPV4_OFFSET, rta->rta_dst, 4);
                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#895: FILE: net/ipv4/fib_table.c:191:
+ if (rta->rta_dst) memcpy(p.prefix+KEY_IPV4_OFFSET, rta->rta_dst, 4);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: net/ipv4/fib_table.c:193:
+ rn = route_node_lookup(table, &p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: net/ipv4/fib_table.c:194:
+ if(rn != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#898: FILE: net/ipv4/fib_table.c:194:
+ if(rn != NULL) {
+ struct fib_node *f = (struct fib_node*)rn->info;

ERROR:SPACING: space required before the open parenthesis '('
#898: FILE: net/ipv4/fib_table.c:194:
+ if(rn != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn"
#898: FILE: net/ipv4/fib_table.c:194:
+ if(rn != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: net/ipv4/fib_table.c:195:
+ struct fib_node *f = (struct fib_node*)rn->info;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#899: FILE: net/ipv4/fib_table.c:195:
+ struct fib_node *f = (struct fib_node*)rn->info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: net/ipv4/fib_table.c:197:
+ rtmsg_fib(RTM_DELROUTE, rn, tb->tb_id, n, req);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: net/ipv4/fib_table.c:198:
+ fn_free_node(f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: net/ipv4/fib_table.c:200:
+ rn->info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: net/ipv4/fib_table.c:201:
+ route_unlock_node(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: net/ipv4/fib_table.c:202:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: net/ipv4/fib_table.c:203:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: net/ipv4/fib_table.c:205:
+ return -ESRCH;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#912: FILE: net/ipv4/fib_table.c:208:
+static int fn_table_flush(struct fib_table *tb) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: net/ipv4/fib_table.c:209:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#913: FILE: net/ipv4/fib_table.c:209:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: net/ipv4/fib_table.c:210:
+ struct route_node *rn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: net/ipv4/fib_table.c:211:
+ struct fib_node *f = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: net/ipv4/fib_table.c:212:
+ struct fib_info *fi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: net/ipv4/fib_table.c:213:
+ int found = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: net/ipv4/fib_table.c:215:
+ rn = route_top(table); //Not defined use the top.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: net/ipv4/fib_table.c:217:
+ while(rn != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#921: FILE: net/ipv4/fib_table.c:217:
+ while(rn != NULL) {
+ if(rn->info != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#921: FILE: net/ipv4/fib_table.c:217:
+ while(rn != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn"
#921: FILE: net/ipv4/fib_table.c:217:
+ while(rn != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: net/ipv4/fib_table.c:218:
+ if(rn->info != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#922: FILE: net/ipv4/fib_table.c:218:
+ if(rn->info != NULL) {
+ f = (struct fib_node*)rn->info;

ERROR:SPACING: space required before the open parenthesis '('
#922: FILE: net/ipv4/fib_table.c:218:
+ if(rn->info != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn->info"
#922: FILE: net/ipv4/fib_table.c:218:
+ if(rn->info != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: net/ipv4/fib_table.c:219:
+ f = (struct fib_node*)rn->info;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#923: FILE: net/ipv4/fib_table.c:219:
+ f = (struct fib_node*)rn->info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: net/ipv4/fib_table.c:220:
+ fi = FIB_INFO(f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: net/ipv4/fib_table.c:221:
+ if (fi && fi->fib_flags&RTNH_F_DEAD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#925: FILE: net/ipv4/fib_table.c:221:
+ if (fi && fi->fib_flags&RTNH_F_DEAD) {
+ fn_free_node(f);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#925: FILE: net/ipv4/fib_table.c:221:
+ if (fi && fi->fib_flags&RTNH_F_DEAD) {
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: net/ipv4/fib_table.c:222:
+ fn_free_node(f);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: net/ipv4/fib_table.c:223:
+ found++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: net/ipv4/fib_table.c:225:
+ rn->info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: net/ipv4/fib_table.c:226:
+ route_unlock_node(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: net/ipv4/fib_table.c:227:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: net/ipv4/fib_table.c:228:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: net/ipv4/fib_table.c:229:
+ rn = route_next(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: net/ipv4/fib_table.c:230:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: net/ipv4/fib_table.c:232:
+ return found;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#939: FILE: net/ipv4/fib_table.c:235:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#942: FILE: net/ipv4/fib_table.c:238:
+static int fn_table_get_info(struct fib_table *tb, char *buffer, int first,
int count) {
+ struct route_table *table = (struct route_table*)tb->tb_data;
+ struct route_node *rn = NULL;
+ struct fib_node *f = NULL;
+ int pos = 0;
+ int n = 0;
+
+ rn = route_top(table);
+ while(rn != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: net/ipv4/fib_table.c:239:
+static int fn_table_get_info(struct fib_table *tb, char *buffer, int first,
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: net/ipv4/fib_table.c:239:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#944: FILE: net/ipv4/fib_table.c:239:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: net/ipv4/fib_table.c:240:
+ struct route_node *rn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: net/ipv4/fib_table.c:241:
+ struct fib_node *f = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: net/ipv4/fib_table.c:242:
+ int pos = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: net/ipv4/fib_table.c:243:
+ int n = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: net/ipv4/fib_table.c:245:
+ rn = route_top(table);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: net/ipv4/fib_table.c:246:
+ while(rn != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#951: FILE: net/ipv4/fib_table.c:246:
+ while(rn != NULL) {
+ if(rn->info != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#951: FILE: net/ipv4/fib_table.c:246:
+ while(rn != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn"
#951: FILE: net/ipv4/fib_table.c:246:
+ while(rn != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: net/ipv4/fib_table.c:247:
+ if(rn->info != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#952: FILE: net/ipv4/fib_table.c:247:
+ if(rn->info != NULL) {
+ if(++pos > first) {

ERROR:SPACING: space required before the open parenthesis '('
#952: FILE: net/ipv4/fib_table.c:247:
+ if(rn->info != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn->info"
#952: FILE: net/ipv4/fib_table.c:247:
+ if(rn->info != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: net/ipv4/fib_table.c:248:
+ if(++pos > first) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#953: FILE: net/ipv4/fib_table.c:248:
+ if(++pos > first) {
+ int ipv4_mask_len = rn->p.prefixlen-KEY_BITMASK_TO_IPV4;

ERROR:SPACING: space required before the open parenthesis '('
#953: FILE: net/ipv4/fib_table.c:248:
+ if(++pos > first) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: net/ipv4/fib_table.c:249:
+ int ipv4_mask_len = rn->p.prefixlen-KEY_BITMASK_TO_IPV4;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#954: FILE: net/ipv4/fib_table.c:249:
+ int ipv4_mask_len = rn->p.prefixlen-KEY_BITMASK_TO_IPV4;
                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#955: FILE: net/ipv4/fib_table.c:250:
+ int ipv4_mask_len = rn->p.prefixlen-KEY_BITMASK_TO_IPV4;
+ f = (struct fib_node*)rn->info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: net/ipv4/fib_table.c:250:
+ f = (struct fib_node*)rn->info;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#955: FILE: net/ipv4/fib_table.c:250:
+ f = (struct fib_node*)rn->info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: net/ipv4/fib_table.c:252:
+ fib_node_get_info(f->fn_type, 0, FIB_INFO(f),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#960: FILE: net/ipv4/fib_table.c:253:
+ fib_node_get_info(f->fn_type, 0, FIB_INFO(f),
+ buffer += 128;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: net/ipv4/fib_table.c:253:
+ buffer += 128;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: net/ipv4/fib_table.c:254:
+ if (++n >= count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#961: FILE: net/ipv4/fib_table.c:254:
+ if (++n >= count) {
+ route_unlock_node(rn);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: net/ipv4/fib_table.c:255:
+ route_unlock_node(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: net/ipv4/fib_table.c:256:
+ return n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: net/ipv4/fib_table.c:257:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: net/ipv4/fib_table.c:258:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: net/ipv4/fib_table.c:259:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: net/ipv4/fib_table.c:260:
+ rn = route_next(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: net/ipv4/fib_table.c:261:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: net/ipv4/fib_table.c:263:
+ return n;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#974: FILE: net/ipv4/fib_table.c:267:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#975: FILE: net/ipv4/fib_table.c:268:
+static int fn_table_dump(struct fib_table *tb, struct sk_buff *skb, struct
netlink_callback *cb) {
+ struct route_table *table = (struct route_table*)tb->tb_data;
+ struct route_node *rn = NULL;
+ struct fib_node *f = NULL;
+
+ rn = (struct route_node *)cb->args[1];
+
+ if(rn == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: net/ipv4/fib_table.c:269:
+ struct route_table *table = (struct route_table*)tb->tb_data;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#977: FILE: net/ipv4/fib_table.c:269:
+ struct route_table *table = (struct route_table*)tb->tb_data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: net/ipv4/fib_table.c:270:
+ struct route_node *rn = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: net/ipv4/fib_table.c:271:
+ struct fib_node *f = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: net/ipv4/fib_table.c:273:
+ rn = (struct route_node *)cb->args[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: net/ipv4/fib_table.c:275:
+ if(rn == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#983: FILE: net/ipv4/fib_table.c:275:
+ if(rn == NULL) {
+ rn = route_top(table); //Not defined use the top.

ERROR:SPACING: space required before the open parenthesis '('
#983: FILE: net/ipv4/fib_table.c:275:
+ if(rn == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#983: FILE: net/ipv4/fib_table.c:275:
+ if(rn == NULL) {
+ rn = route_top(table); //Not defined use the top.
+ }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rn"
#983: FILE: net/ipv4/fib_table.c:275:
+ if(rn == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: net/ipv4/fib_table.c:276:
+ rn = route_top(table); //Not defined use the top.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: net/ipv4/fib_table.c:277:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: net/ipv4/fib_table.c:279:
+ while(rn != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#987: FILE: net/ipv4/fib_table.c:279:
+ while(rn != NULL) {
+ printk(KERN_ERR "fn_table_dump, Route Node found %d.%d.%d.%d/%d.\n",

ERROR:SPACING: space required before the open parenthesis '('
#987: FILE: net/ipv4/fib_table.c:279:
+ while(rn != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn"
#987: FILE: net/ipv4/fib_table.c:279:
+ while(rn != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: net/ipv4/fib_table.c:280:
+ printk(KERN_ERR "fn_table_dump, Route Node found %d.%d.%d.%d/%d.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#988: FILE: net/ipv4/fib_table.c:280:
+ printk(KERN_ERR "fn_table_dump, Route Node found %d.%d.%d.%d/%d.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fn_table_dump', this function's name, in a string
#988: FILE: net/ipv4/fib_table.c:280:
+ printk(KERN_ERR "fn_table_dump, Route Node found %d.%d.%d.%d/%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: net/ipv4/fib_table.c:281:
+ printk(KERN_ERR "fn_table_dump, Route Node found %d.%d.%d.%d/%d.\n",
+ if(rn->info != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: net/ipv4/fib_table.c:281:
+ if(rn->info != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#992: FILE: net/ipv4/fib_table.c:281:
+ if(rn->info != NULL) {
+ f = (struct fib_node*)rn->info;

ERROR:SPACING: space required before the open parenthesis '('
#992: FILE: net/ipv4/fib_table.c:281:
+ if(rn->info != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rn->info"
#992: FILE: net/ipv4/fib_table.c:281:
+ if(rn->info != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: net/ipv4/fib_table.c:282:
+ f = (struct fib_node*)rn->info;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#993: FILE: net/ipv4/fib_table.c:282:
+ f = (struct fib_node*)rn->info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: net/ipv4/fib_table.c:284:
+ if (fib_dump_info(skb, NETLINK_CB(cb->skb).pid, cb->nlh->nlmsg_seq,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#995: FILE: net/ipv4/fib_table.c:284:
+ if (fib_dump_info(skb, NETLINK_CB(cb->skb).pid, cb->nlh->nlmsg_seq,
[...]
+ cb->args[1] = (long)rn; //continue from this node.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#999: FILE: net/ipv4/fib_table.c:285:
+ if (fib_dump_info(skb, NETLINK_CB(cb->skb).pid, cb->nlh->nlmsg_seq,
+ cb->args[1] = (long)rn; //continue from this node.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: net/ipv4/fib_table.c:285:
+ cb->args[1] = (long)rn; //continue from this node.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: net/ipv4/fib_table.c:286:
+ return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: net/ipv4/fib_table.c:287:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: net/ipv4/fib_table.c:288:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: net/ipv4/fib_table.c:289:
+ rn = route_next(rn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: net/ipv4/fib_table.c:290:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: net/ipv4/fib_table.c:292:
+ return skb->len;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1009: FILE: net/ipv4/fib_table.c:295:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: net/ipv4/fib_table.c:298:
+ struct fib_node* f = (struct fib_node*)rn->info;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1013: FILE: net/ipv4/fib_table.c:298:
+ struct fib_node* f = (struct fib_node*)rn->info;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1013: FILE: net/ipv4/fib_table.c:298:
+ struct fib_node* f = (struct fib_node*)rn->info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: net/ipv4/fib_table.c:299:
+ struct sk_buff *skb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: net/ipv4/fib_table.c:300:
+ u32 pid = req ? req->pid : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: net/ipv4/fib_table.c:301:
+ int size = NLMSG_SPACE(sizeof(struct rtmsg)+256);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1016: FILE: net/ipv4/fib_table.c:301:
+ int size = NLMSG_SPACE(sizeof(struct rtmsg)+256);
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: net/ipv4/fib_table.c:303:
+ skb = alloc_skb(size, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: net/ipv4/fib_table.c:304:
+ if (!skb) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1019: FILE: net/ipv4/fib_table.c:304:
+ if (!skb) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: net/ipv4/fib_table.c:306:
+ if (fib_dump_info(skb, pid, n->nlmsg_seq, event, tb_id, f->fn_type,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#1021: FILE: net/ipv4/fib_table.c:306:
+ if (fib_dump_info(skb, pid, n->nlmsg_seq, event, tb_id, f->fn_type,
[...]
+ kfree_skb(skb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: net/ipv4/fib_table.c:307:
+ if (fib_dump_info(skb, pid, n->nlmsg_seq, event, tb_id, f->fn_type,
+ kfree_skb(skb);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: net/ipv4/fib_table.c:307:
+ kfree_skb(skb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: net/ipv4/fib_table.c:308:
+ return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: net/ipv4/fib_table.c:309:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: net/ipv4/fib_table.c:310:
+ NETLINK_CB(skb).dst_groups = RTMGRP_IPV4_ROUTE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: net/ipv4/fib_table.c:311:
+ if (n->nlmsg_flags&NLM_F_ECHO) atomic_inc(&skb->users);$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1028: FILE: net/ipv4/fib_table.c:311:
+ if (n->nlmsg_flags&NLM_F_ECHO) atomic_inc(&skb->users);
                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1028: FILE: net/ipv4/fib_table.c:311:
+ if (n->nlmsg_flags&NLM_F_ECHO) atomic_inc(&skb->users);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: net/ipv4/fib_table.c:312:
+ netlink_broadcast(rtnl, skb, pid, RTMGRP_IPV4_ROUTE, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: net/ipv4/fib_table.c:313:
+ if (n->nlmsg_flags&NLM_F_ECHO) netlink_unicast(rtnl, skb, pid,$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1030: FILE: net/ipv4/fib_table.c:313:
+ if (n->nlmsg_flags&NLM_F_ECHO) netlink_unicast(rtnl, skb, pid,
                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1030: FILE: net/ipv4/fib_table.c:313:
+ if (n->nlmsg_flags&NLM_F_ECHO) netlink_unicast(rtnl, skb, pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1032: FILE: net/ipv4/fib_table.c:314:
+ if (n->nlmsg_flags&NLM_F_ECHO) netlink_unicast(rtnl, skb, pid,
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1034: FILE: net/ipv4/fib_table.c:316:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1037: FILE: net/ipv4/fib_table.c:319:
+struct fib_table * fib_table_init(int id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: net/ipv4/fib_table.c:324:
+ struct fib_table *tb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: net/ipv4/fib_table.c:326:
+ if (fn_table_kmem == NULL) fn_table_kmem =$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1044: FILE: net/ipv4/fib_table.c:326:
+ if (fn_table_kmem == NULL) fn_table_kmem =

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fn_table_kmem"
#1044: FILE: net/ipv4/fib_table.c:326:
+ if (fn_table_kmem == NULL) fn_table_kmem =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: net/ipv4/fib_table.c:328:
+ tb = kmalloc(sizeof(struct fib_table) + sizeof(struct route_table),$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tb)...) over kmalloc(sizeof(struct fib_table)...)
#1048: FILE: net/ipv4/fib_table.c:328:
+ tb = kmalloc(sizeof(struct fib_table) + sizeof(struct route_table),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: net/ipv4/fib_table.c:329:
+ tb = kmalloc(sizeof(struct fib_table) + sizeof(struct route_table),
+ if (tb == NULL) return NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: net/ipv4/fib_table.c:329:
+ if (tb == NULL) return NULL;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1050: FILE: net/ipv4/fib_table.c:329:
+ if (tb == NULL) return NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tb"
#1050: FILE: net/ipv4/fib_table.c:329:
+ if (tb == NULL) return NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: net/ipv4/fib_table.c:331:
+ tb->tb_id = id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: net/ipv4/fib_table.c:332:
+ tb->tb_lookup = fn_table_lookup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: net/ipv4/fib_table.c:333:
+ tb->tb_insert = fn_table_insert;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: net/ipv4/fib_table.c:334:
+ tb->tb_delete = fn_table_delete;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: net/ipv4/fib_table.c:335:
+ tb->tb_flush = fn_table_flush;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: net/ipv4/fib_table.c:336:
+ tb->tb_select_default = fn_table_select_default;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: net/ipv4/fib_table.c:337:
+ tb->tb_dump = fn_table_dump;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: net/ipv4/fib_table.c:339:
+ tb->tb_get_info = fn_table_get_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: net/ipv4/fib_table.c:341:
+ memset(tb->tb_data, 0, sizeof(struct route_table)); //Finish the init of$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: net/ipv4/fib_table.c:342:
+ return tb;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 98 errors, 586 warnings, 63 checks, 992 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000289680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
