ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: fs/proc/base.c:140:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUGO),
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#73: FILE: fs/proc/base.c:140:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUGO),
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#73: FILE: fs/proc/base.c:140:
+	E(PROC_TGID_OOM_SCORE, "oom_score",S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#74: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#74: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#74: FILE: fs/proc/base.c:141:
+	E(PROC_TGID_OOM_ADJUST,"oom_adj", S_IFREG|S_IRUGO|S_IWUSR),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#82: FILE: fs/proc/base.c:167:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUGO),
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#82: FILE: fs/proc/base.c:167:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUGO),
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#82: FILE: fs/proc/base.c:167:
+	E(PROC_TID_OOM_SCORE,  "oom_score",S_IFREG|S_IRUGO),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#83: FILE: fs/proc/base.c:168:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#83: FILE: fs/proc/base.c:168:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUGO|S_IWUSR),
 	                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#83: FILE: fs/proc/base.c:168:
+	E(PROC_TID_OOM_ADJUST, "oom_adj", S_IFREG|S_IRUGO|S_IWUSR),

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: fs/proc/base.c:680:
+static ssize_t oom_adjust_read(struct file * file, char * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: fs/proc/base.c:680:
+static ssize_t oom_adjust_read(struct file * file, char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: fs/proc/base.c:681:
+static ssize_t oom_adjust_read(struct file * file, char * buf,
+				size_t count, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#122: FILE: fs/proc/base.c:692:
+	if (count > len-__ppos)
 	               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#123: FILE: fs/proc/base.c:693:
+		count = len-__ppos;
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: fs/proc/base.c:694:
+^Iif (copy_to_user(buf, buffer + __ppos, count)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: fs/proc/base.c:700:
+static ssize_t oom_adjust_write(struct file * file, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: fs/proc/base.c:700:
+static ssize_t oom_adjust_write(struct file * file, const char * buf,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: fs/proc/base.c:709:
+^Imemset(buffer, 0, 8);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: fs/proc/base.c:712:
+^Iif (copy_from_user(buffer, buf, count)) $

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#144: FILE: fs/proc/base.c:714:
+	oom_adjust = simple_strtol(buffer, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: fs/proc/base.c:720:
+^Iif (end - buffer == 0) $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#155: FILE: fs/proc/base.c:725:
+static struct file_operations proc_oom_adjust_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#156: FILE: fs/proc/base.c:726:
+	read:		oom_adjust_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#157: FILE: fs/proc/base.c:727:
+	write:		oom_adjust_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#157: FILE: fs/proc/base.c:727:
+	write:		oom_adjust_write,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: fs/proc/base.c:1409:
+^I^Icase PROC_TID_OOM_SCORE:^I$

WARNING:REPEATED_WORD: Possible repeated word: 'be'
#188: FILE: include/linux/sched.h:619:
+ * Must be changed atomically so it shouldn't be
+ * be a shareable bitflag.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: mm/oom_kill.c:103:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: mm/oom_kill.c:112:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 9 warnings, 9 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
