WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: arch/sh/kernel/machine_kexec.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#76: FILE: arch/sh/kernel/machine_kexec.c:16:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#78: FILE: arch/sh/kernel/machine_kexec.c:18:
+#include <asm/mmu_context.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#79: FILE: arch/sh/kernel/machine_kexec.c:19:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#80: FILE: arch/sh/kernel/machine_kexec.c:20:
+#include <asm/cacheflush.h>

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#82: FILE: arch/sh/kernel/machine_kexec.c:22:
+typedef NORET_TYPE void (*relocate_new_kernel_t)(

WARNING:NEW_TYPEDEFS: do not add new typedefs
#82: FILE: arch/sh/kernel/machine_kexec.c:22:
+typedef NORET_TYPE void (*relocate_new_kernel_t)(

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#90: FILE: arch/sh/kernel/machine_kexec.c:30:
+extern void *gdb_vbr_vector;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#96: FILE: arch/sh/kernel/machine_kexec.c:36:
+void *crash_notes = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/sh/kernel/machine_kexec.c:62:
+        int i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/sh/kernel/machine_kexec.c:62:
+        int i;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: arch/sh/kernel/machine_kexec.c:63:
+	printk("kexec information\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/sh/kernel/machine_kexec.c:65:
+^I        printk("  segment[%d]: 0x%08x - 0x%08x (0x%08x)\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: arch/sh/kernel/machine_kexec.c:65:
+	        printk("  segment[%d]: 0x%08x - 0x%08x (0x%08x)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/sh/kernel/machine_kexec.c:70:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: arch/sh/kernel/machine_kexec.c:70:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/sh/kernel/machine_kexec.c:70:
+ ^I}$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: arch/sh/kernel/machine_kexec.c:71:
+	printk("  start     : 0x%08x\n\n", (unsigned int)image->start);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: arch/sh/kernel/machine_kexec.c:74:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#141: FILE: arch/sh/kernel/machine_kexec.c:81:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#148: FILE: arch/sh/kernel/machine_kexec.c:88:
+	vbr_reg = ((unsigned long )gdb_vbr_vector) - 0x100;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: arch/sh/kernel/machine_kexec.c:103:
+	memcpy((void *)reboot_code_buffer, relocate_new_kernel,
+						relocate_new_kernel_size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/sh/kernel/machine_kexec.c:105:
+        kexec_info(image);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/sh/kernel/machine_kexec.c:105:
+        kexec_info(image);$

CHECK:SPACING: No space is necessary after a cast
#169: FILE: arch/sh/kernel/machine_kexec.c:109:
+	rnk = (relocate_new_kernel_t) reboot_code_buffer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/sh/kernel/machine_kexec.c:110:
+       ^I(*rnk)(page_list, reboot_code_buffer, image->start, vbr_reg);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: arch/sh/kernel/machine_kexec.c:110:
+       ^I(*rnk)(page_list, reboot_code_buffer, image->start, vbr_reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/sh/kernel/machine_kexec.c:110:
+       ^I(*rnk)(page_list, reboot_code_buffer, image->start, vbr_reg);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#178: FILE: arch/sh/kernel/relocate_kernel.S:1:
+/*

WARNING:TYPO_SPELLING: 'archtecture' may be misspelled - perhaps 'architecture'?
#182: FILE: arch/sh/kernel/relocate_kernel.S:5:
+ * LANDISK/sh4 is supported. Maybe, SH archtecture works well.
                                        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: arch/sh/kernel/relocate_kernel.S:15:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/sh/kernel/relocate_kernel.S:16:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/sh/kernel/relocate_kernel.S:33:
+0:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: arch/sh/kernel/relocate_kernel.S:40:
+^Iand^Ir1,r2^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: arch/sh/kernel/relocate_kernel.S:43:
+^Itst^I#1,r0^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/sh/kernel/relocate_kernel.S:45:
+^Ibra^I0b^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/sh/kernel/relocate_kernel.S:46:
+^Imov^Ir2,r5^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: arch/sh/kernel/relocate_kernel.S:51:
+^Ibra^I0b^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: arch/sh/kernel/relocate_kernel.S:65:
+^Ishlr2^Ir3^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: arch/sh/kernel/relocate_kernel.S:66:
+^Ishlr2^Ir3^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: arch/sh/kernel/relocate_kernel.S:67:
+5:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: arch/sh/kernel/relocate_kernel.S:82:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#285: FILE: include/asm-sh/kexec.h:1:
+#ifndef _SH_KEXEC_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/asm-sh/kexec.h:28:
+extern void machine_shutdown(void);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#337: FILE: arch/sh/kernel/process.c:84:
 {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#340: FILE: arch/sh/kernel/process.c:87:
+	struct kimage *image;
+	image = xchg(&kexec_image, 0);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115351.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 16 warnings, 11 checks, 277 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115351.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
