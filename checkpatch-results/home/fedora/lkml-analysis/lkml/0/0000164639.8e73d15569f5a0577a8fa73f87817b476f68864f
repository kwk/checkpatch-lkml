WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#26: 
depends upon the ioc4 driver and the extint abstraction layer
                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#100: FILE: Documentation/sgi-ioc4.txt:66:
+For the most part this driver simply registers with the "extint"
                                                          ^^^^^^

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#102: FILE: Documentation/sgi-ioc4.txt:68:
+the user-facing details.  You are directed the Documentation/extint.txt
                                                              ^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#190: FILE: Documentation/sgi-ioc4.txt:156:
+The internal driver circuit for the the output connector is as follows:

WARNING:TYPO_SPELLING: 'EXTINT' may be misspelled - perhaps 'EXTINCT'?
#278: FILE: drivers/char/Kconfig:425:
+	depends on (IA64_GENERIC || IA64_SGI_SN2) && EXTINT && BLK_DEV_SGIIOC4
 	                                             ^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#300: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#304: FILE: drivers/char/ioc4_extint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#339: FILE: drivers/char/ioc4_extint.c:36:
+#include <linux/extint.h>
                 ^^^^^^

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#365: FILE: drivers/char/ioc4_extint.c:62:
+#define IOC4_OTHER_IR_GEN_INT_1	0x2	/* Generic pin bit for extint input */
                                	   	                       ^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#369: FILE: drivers/char/ioc4_extint.c:66:
+static char* ioc4_extint_modenames[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#389: FILE: drivers/char/ioc4_extint.c:86:
+	uint32_t *a_int_out;		/* INT_OUT register alias page */

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#393: FILE: drivers/char/ioc4_extint.c:90:
+ * extint driver abstraction routines *
    ^^^^^^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#417: FILE: drivers/char/ioc4_extint.c:114:
+		if (0 == strncmp(buf, ioc4_extint_modenames[mode],

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#448: FILE: drivers/char/ioc4_extint.c:145:
+static ssize_t ioc4_extint_get_modelist(struct extint_device *ed, char *buf) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#498: FILE: drivers/char/ioc4_extint.c:195:
+/* Emit enough information so that an extint user can find the corresponding
                                       ^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#515: FILE: drivers/char/ioc4_extint.c:212:
+	struct ioc4_extint_device *ied = extint_get_devdata(ed);
+	return ied->idd->count_period;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#542: FILE: drivers/char/ioc4_extint.c:239:
+	if (0 == strncmp(buf, "loopback", 8)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#542: FILE: drivers/char/ioc4_extint.c:239:
+	if (0 == strncmp(buf, "loopback", 8)) {
[...]
+	} else if (0 == strncmp(buf, "external", 8)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#545: FILE: drivers/char/ioc4_extint.c:242:
+	} else if (0 == strncmp(buf, "external", 8)) {

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: drivers/char/ioc4_extint.c:245:
+	} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: drivers/char/ioc4_extint.c:295:
+#define DECLARE_ATTR(_name,_mode,_show,_store)	\
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: drivers/char/ioc4_extint.c:295:
+#define DECLARE_ATTR(_name,_mode,_show,_store)	\
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: drivers/char/ioc4_extint.c:295:
+#define DECLARE_ATTR(_name,_mode,_show,_store)	\
                                       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#599: FILE: drivers/char/ioc4_extint.c:296:
+{^I^I^I^I^I ^I\$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#615: FILE: drivers/char/ioc4_extint.c:312:
+static int ioc4_extint_mmap(struct file *filp, struct vm_area_struct *vma)
                                          ^^^^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#621: FILE: drivers/char/ioc4_extint.c:318:
+	if ((IOC4_A_INT_OUT_LENGTH != vma->vm_end - vma->vm_start) ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#622: FILE: drivers/char/ioc4_extint.c:319:
+	    (0 != vma->vm_pgoff))

CHECK:SPACING: No space is necessary after a cast
#631: FILE: drivers/char/ioc4_extint.c:328:
+	a_int_out = (unsigned long) ied->a_int_out;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#642: FILE: drivers/char/ioc4_extint.c:339:
+static struct file_operations ioc4_extint_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#669: FILE: drivers/char/ioc4_extint.c:366:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#671: FILE: drivers/char/ioc4_extint.c:368:
+		       "%s: failed to add cdev for IOC4 device ioc4_intout%d "
+		       "for pci_dev 0x%p.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#672: FILE: drivers/char/ioc4_extint.c:369:
+		       __FUNCTION__, MINOR(ied->devt), ied->idd->idd_pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#683: FILE: drivers/char/ioc4_extint.c:380:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#685: FILE: drivers/char/ioc4_extint.c:382:
+		       "%s: failed to add class device for IOC4 device "
+		       "intout%d "

WARNING:SPLIT_STRING: quoted string split across lines
#686: FILE: drivers/char/ioc4_extint.c:383:
+		       "intout%d "
+		       "for pci_dev 0x%p.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#687: FILE: drivers/char/ioc4_extint.c:384:
+		       __FUNCTION__, MINOR(ied->devt), ied->idd->idd_pdev);

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#737: FILE: drivers/char/ioc4_extint.c:434:
+	/* Check if this is an extint interrupt (vs. serial or IDE) */
 	                       ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#784: FILE: drivers/char/ioc4_extint.c:481:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#786: FILE: drivers/char/ioc4_extint.c:483:
+		       "%s: Unable to get IOC4 int_out alias mapping "
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#786: FILE: drivers/char/ioc4_extint.c:483:
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#791: FILE: drivers/char/ioc4_extint.c:488:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#793: FILE: drivers/char/ioc4_extint.c:490:
+		       "%s: Unable to request IOC4 int_out alias region "
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#793: FILE: drivers/char/ioc4_extint.c:490:
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#798: FILE: drivers/char/ioc4_extint.c:495:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#800: FILE: drivers/char/ioc4_extint.c:497:
+		       "%s: unable to remap IOC4 int_out alias page "
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#800: FILE: drivers/char/ioc4_extint.c:497:
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:RETURN_VOID: void function return statements are not generally useful
#806: FILE: drivers/char/ioc4_extint.c:503:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#830: FILE: drivers/char/ioc4_extint.c:527:
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#831: FILE: drivers/char/ioc4_extint.c:528:
+		       "%s: Unable to get IOC4 extint register alias mapping "
 		                               ^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#832: FILE: drivers/char/ioc4_extint.c:529:
+		       "%s: Unable to get IOC4 extint register alias mapping "
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#832: FILE: drivers/char/ioc4_extint.c:529:
+		       "for pci_dev 0x%p.\n", __FUNCTION__, ied->idd->idd_pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#876: FILE: drivers/char/ioc4_extint.c:573:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#878: FILE: drivers/char/ioc4_extint.c:575:
+		       "%s: Request for IRQ %d failed "
+		       "for pci_dev 0x%p.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#879: FILE: drivers/char/ioc4_extint.c:576:
+		       __FUNCTION__, ied->idd->idd_pdev->irq,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ied)...) over kmalloc(sizeof(struct ioc4_extint_device)...)
#942: FILE: drivers/char/ioc4_extint.c:639:
+	ied = kmalloc(sizeof(struct ioc4_extint_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#944: FILE: drivers/char/ioc4_extint.c:641:
+		printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#944: FILE: drivers/char/ioc4_extint.c:641:
+	if (!ied) {
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#945: FILE: drivers/char/ioc4_extint.c:642:
+		       "%s: failed to allocate IOC4 extint device structure "
 		                                    ^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#946: FILE: drivers/char/ioc4_extint.c:643:
+		       "%s: failed to allocate IOC4 extint device structure "
+		       "for pci_dev 0x%p.\n", __FUNCTION__, idd->idd_pdev);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#946: FILE: drivers/char/ioc4_extint.c:643:
+		       "for pci_dev 0x%p.\n", __FUNCTION__, idd->idd_pdev);

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#962: FILE: drivers/char/ioc4_extint.c:659:
+	/* Register with extint abstraction layer */
 	                 ^^^^^^

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#1004: FILE: drivers/char/ioc4_extint.c:701:
+	/* Unregister with extint abstraction layer */
 	                   ^^^^^^

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#1007: FILE: drivers/char/ioc4_extint.c:704:
+	/* Destroy IOC4-specific external interupt devices */
 	                                  ^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1031: FILE: drivers/char/ioc4_extint.c:728:
+static int __devinit

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1039: FILE: drivers/char/ioc4_extint.c:736:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#1041: FILE: drivers/char/ioc4_extint.c:738:
+		       "%s: failed to allocate IOC4 external interrupt output"
+		       "device numbers.\n", __FUNCTION__);

WARNING:MISSING_SPACE: break quoted strings at a space character
#1041: FILE: drivers/char/ioc4_extint.c:738:
+		       "%s: failed to allocate IOC4 external interrupt output"
+		       "device numbers.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1041: FILE: drivers/char/ioc4_extint.c:738:
+		       "device numbers.\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1051: FILE: drivers/char/ioc4_extint.c:748:
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1053: FILE: drivers/char/ioc4_extint.c:750:
+			__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1060: FILE: drivers/char/ioc4_extint.c:757:
+		printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'extint' may be misspelled - perhaps 'extinct'?
#1061: FILE: drivers/char/ioc4_extint.c:758:
+			"%s: failed to register IOC4 extint subdriver.\n",
 			                             ^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1062: FILE: drivers/char/ioc4_extint.c:759:
+			__FUNCTION__);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1076: FILE: drivers/char/ioc4_extint.c:773:
+static void __devexit

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 64 warnings, 5 checks, 1027 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000164639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
