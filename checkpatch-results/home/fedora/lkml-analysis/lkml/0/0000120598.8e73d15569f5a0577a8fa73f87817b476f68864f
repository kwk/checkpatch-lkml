ERROR:SPACING: space required after that ',' (ctx:VxO)
#95: FILE: fs/select.c:68:
+	remove_wait_queue(entry->wait_address,&entry->wait);
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#95: FILE: fs/select.c:68:
+	remove_wait_queue(entry->wait_address,&entry->wait);
 	                                      ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#96: FILE: fs/select.c:69:
+	fput(entry->filp);
 	            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#103: FILE: fs/select.c:76:
+	int i;
+	for (i = 0; i < pwq->inline_index; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: fs/select.c:77:
+^I^Ifree_poll_entry(pwq->inline_entries + i); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: fs/select.c:95:
+static struct poll_table_entry *poll_get_entry(poll_table *_p) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: fs/select.c:96:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: fs/select.c:101:
+^I^Ireturn p->inline_entries + p->inline_index++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: fs/select.c:118:
+^Ireturn table->entry++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: fs/select.c:119:
+} $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#163: FILE: fs/select.c:122:
+static void __pollwait(struct file *filp, wait_queue_head_t *wait_address,
                                     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: fs/select.c:126:
+^Iif (!entry) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: fs/select.c:126:
+	struct poll_table_entry *entry = poll_get_entry(p);
+	if (!entry) 

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#169: FILE: fs/select.c:128:
+	get_file(filp);
 	         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#170: FILE: fs/select.c:129:
+	entry->filp = filp;
 	       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#170: FILE: fs/select.c:129:
+	entry->filp = filp;
 	              ^^^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#173: FILE: fs/select.c:132:
+	add_wait_queue(wait_address,&entry->wait);
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#173: FILE: fs/select.c:132:
+	add_wait_queue(wait_address,&entry->wait);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#208: FILE: fs/select.c:349:
+	if (6*size < SELECT_STACK_ALLOC)
 	     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: fs/select.c:512:
+^I^Iint num, size; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: fs/select.c:513:
+		int num, size; 
+		if (stack_pp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!stack_pp"
#255: FILE: fs/select.c:513:
+		if (stack_pp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: fs/select.c:515:
+^I^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: fs/select.c:517:
+^I^Iif (num > i) $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#261: FILE: fs/select.c:519:
+		size = sizeof(struct poll_list) + sizeof(struct pollfd)*num;
 		                                                       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#262: FILE: fs/select.c:520:
+		if (!stack_pp)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#263: FILE: fs/select.c:521:
+			stack_pp = pp = (struct poll_list *)stack_pps;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#264: FILE: fs/select.c:522:
+		else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#280: FILE: fs/select.c:536:
+				sizeof(struct pollfd)*num)) {
 				                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: include/linux/poll.h:14:
+/* ~832 bytes of stack space used max in sys_select/sys_poll before allocating $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: include/linux/poll.h:15:
+/* ~832 bytes of stack space used max in sys_select/sys_poll before allocating 
+   additional memory. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: include/linux/poll.h:15:
+   additional memory. */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#319: FILE: include/linux/poll.h:46:
+	struct file * filp;
 	              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: include/linux/poll.h:46:
+	struct file * filp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: include/linux/poll.h:48:
+	wait_queue_head_t * wait_address;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: include/linux/poll.h:54:
+struct poll_wqueues {^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: include/linux/poll.h:55:
+^Ipoll_table pt;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: include/linux/poll.h:58:
+^Iint inline_index; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120598.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 11 warnings, 7 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000120598.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
