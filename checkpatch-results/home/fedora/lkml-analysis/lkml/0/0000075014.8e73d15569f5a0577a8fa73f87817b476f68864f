ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#62: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_done=0, rmw_done=0;
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#62: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_done=0, rmw_done=0;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#62: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_done=0, rmw_done=0;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#62: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_done=0, rmw_done=0;
 	                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: drivers/md/raid5.c:870:
+^IPRINTK("%s, stripe %llu, state %lx, op_state %lx\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: drivers/md/raid5.c:871:
+^I^I__FUNCTION__, (unsigned long long)sh->sector, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: drivers/md/raid5.c:871:
+	PRINTK("%s, stripe %llu, state %lx, op_state %lx\n", 
+		__FUNCTION__, (unsigned long long)sh->sector, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#65: FILE: drivers/md/raid5.c:871:
+		__FUNCTION__, (unsigned long long)sh->sector, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: drivers/md/raid5.c:878:
+	if (!(test_bit(STRIPE_OP_RCW, &sh->state) ||
+		test_bit(STRIPE_OP_RMW, &sh->state))) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#73: FILE: drivers/md/raid5.c:879:
+		if (rcw==0)
 		       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#73: FILE: drivers/md/raid5.c:879:
+		if (rcw==0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#75: FILE: drivers/md/raid5.c:881:
+		else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#76: FILE: drivers/md/raid5.c:882:
+			BUG_ON(!test_bit(R5_UPTODATE, &sh->dev[pd_idx].flags));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/md/raid5.c:887:
+^I      ^I^I    test_bit(STRIPE_OP_RMW, &sh->state)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: drivers/md/raid5.c:887:
+^I      ^I^I    test_bit(STRIPE_OP_RMW, &sh->state)))$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#82: FILE: drivers/md/raid5.c:888:
+		BUG();

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#88: FILE: drivers/md/raid5.c:894:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: drivers/md/raid5.c:896:
+				struct r5dev *dev = &sh->dev[i];
+				if (i==pd_idx)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#90: FILE: drivers/md/raid5.c:896:
+				if (i==pd_idx)
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: drivers/md/raid5.c:911:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: drivers/md/raid5.c:913:
+				struct r5dev *dev = &sh->dev[i];
+				if (dev->written)

CHECK:BRACES: braces {} should be used on all arms of this statement
#112: FILE: drivers/md/raid5.c:918:
+			if (!test_and_clear_bit(STRIPE_OP_RMW_Done, &sh->op_state)) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#115: FILE: drivers/md/raid5.c:921:
+			} else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#121: FILE: drivers/md/raid5.c:927:
+			for (i=disks ; i-- ;) {
 			      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#125: FILE: drivers/md/raid5.c:931:
+				if (i!=pd_idx && dev->towrite) {
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: drivers/md/raid5.c:939:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: drivers/md/raid5.c:941:
+				struct r5dev *dev = &sh->dev[i];
+				if (dev->written)

CHECK:BRACES: braces {} should be used on all arms of this statement
#140: FILE: drivers/md/raid5.c:946:
+			if (!test_and_clear_bit(STRIPE_OP_RCW_Done, &sh->op_state)) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#143: FILE: drivers/md/raid5.c:949:
+			} else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#194: FILE: drivers/md/raid5.c:1175:
+	int overlap=0, rcw_done=0, rmw_done=0;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#194: FILE: drivers/md/raid5.c:1175:
+	int overlap=0, rcw_done=0, rmw_done=0;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#194: FILE: drivers/md/raid5.c:1175:
+	int overlap=0, rcw_done=0, rmw_done=0;
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/md/raid5.c:1181:
+^I^IPRINTK("%s: stripe %llu STRIPE_OP_RMW op_state: %lx\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/md/raid5.c:1182:
+^I^I^I__FUNCTION__, (unsigned long long)sh->sector, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/md/raid5.c:1182:
+		PRINTK("%s: stripe %llu STRIPE_OP_RMW op_state: %lx\n", 
+			__FUNCTION__, (unsigned long long)sh->sector, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#201: FILE: drivers/md/raid5.c:1182:
+			__FUNCTION__, (unsigned long long)sh->sector, 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#207: FILE: drivers/md/raid5.c:1188:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#222: FILE: drivers/md/raid5.c:1203:
+					BUG_ON(dev->written);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: drivers/md/raid5.c:1209:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/md/raid5.c:1211:
+				struct r5dev *dev = &sh->dev[i];
+				drain_bio(dev->written, dev->sector, dev->page);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#233: FILE: drivers/md/raid5.c:1214:
+			for (i=disks ; i-- ;) {
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: drivers/md/raid5.c:1216:
+				struct r5dev *dev = &sh->dev[i];
+				if (dev->written) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#245: FILE: drivers/md/raid5.c:1226:
+			BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: drivers/md/raid5.c:1229:
+^I^IPRINTK("%s: stripe %llu STRIPE_OP_RCW op_state: %lx\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: drivers/md/raid5.c:1230:
+^I^I^I__FUNCTION__, (unsigned long long)sh->sector, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/md/raid5.c:1230:
+		PRINTK("%s: stripe %llu STRIPE_OP_RCW op_state: %lx\n", 
+			__FUNCTION__, (unsigned long long)sh->sector, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#249: FILE: drivers/md/raid5.c:1230:
+			__FUNCTION__, (unsigned long long)sh->sector, 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#255: FILE: drivers/md/raid5.c:1236:
+			for (i=disks ; i-- ;) {
 			      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: drivers/md/raid5.c:1238:
+^I^I^I^Iif (i!=pd_idx && dev->towrite && $

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: drivers/md/raid5.c:1238:
+				struct r5dev *dev = &sh->dev[i];
+				if (i!=pd_idx && dev->towrite && 

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#257: FILE: drivers/md/raid5.c:1238:
+				if (i!=pd_idx && dev->towrite && 
 				     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: drivers/md/raid5.c:1238:
+				if (i!=pd_idx && dev->towrite && 
[...]
+				} else if (i==pd_idx)
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/md/raid5.c:1239:
+				if (i!=pd_idx && dev->towrite && 
+					test_bit(R5_LOCKED, &dev->flags)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: drivers/md/raid5.c:1243:
+					BUG_ON(dev->written);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/md/raid5.c:1249:
+					drain_bio(dev->written, dev->sector,
+						dev->page);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#269: FILE: drivers/md/raid5.c:1250:
+				} else if (i==pd_idx)
 				            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#273: FILE: drivers/md/raid5.c:1254:
+			for (i=disks; i--;)
 			      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#283: FILE: drivers/md/raid5.c:1264:
+			BUG();

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#292: FILE: drivers/md/raid5.c:1273:
+		for (i= disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: drivers/md/raid5.c:1275:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#294: FILE: drivers/md/raid5.c:1275:
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#298: FILE: drivers/md/raid5.c:1279:
+	if (! --sh->op_count) {
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: drivers/md/raid5.c:1288:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/md/raid5.c:1288:
+ $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#333: FILE: drivers/md/raid5.c:1321:
+	int block_ops=0;
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/md/raid5.c:1579:
+^Iif ((to_write || test_bit(STRIPE_OP_RCW, &sh->state) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/md/raid5.c:1580:
+^I^Itest_bit(STRIPE_OP_RMW, &sh->state)) && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: drivers/md/raid5.c:1580:
+	if ((to_write || test_bit(STRIPE_OP_RCW, &sh->state) || 
+		test_bit(STRIPE_OP_RMW, &sh->state)) && 

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#392: FILE: drivers/md/raid5.c:1653:
+		/* ...or, if we have previously started write operations we can now advance the state */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '||' (ctx:WxV)
#393: FILE: drivers/md/raid5.c:1654:
+		if ((locked == 0 && (rcw == 0 ||rmw == 0) &&
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/md/raid5.c:1655:
+		if ((locked == 0 && (rcw == 0 ||rmw == 0) &&
+		    !test_bit(STRIPE_BIT_DELAY, &sh->state)) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: drivers/md/raid5.c:1658:
+			int block_ops_prev = block_ops;
+			block_ops += handle_write_operations(sh, rcw);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#400: FILE: drivers/md/raid5.c:1661:
+				for (i=disks; i--;)
 				      ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#404: FILE: drivers/md/raid5.c:1665:
+						set_bit(R5_Wantwrite, &sh->dev[i].flags);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#405: FILE: drivers/md/raid5.c:1666:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#405: FILE: drivers/md/raid5.c:1666:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#406: FILE: drivers/md/raid5.c:1667:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)
+						    || (i==sh->pd_idx && failed == 0))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#406: FILE: drivers/md/raid5.c:1667:
+						    || (i==sh->pd_idx && failed == 0))
 						         ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#411: FILE: drivers/md/raid5.c:1672:
+					if (atomic_read(&conf->preread_active_stripes) < IO_THRESHOLD)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#454: FILE: drivers/md/raid5.c:2532:
+	if ((conf->block_ops_queue = create_workqueue(conf->workqueue_name))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: include/linux/raid/raid5.h:135:
+ * asynchronous engine and release the lock, as long as it maintains the completion $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: include/linux/raid/raid5.h:136:
+ * order of events.  The operations state machine sends a completion request when it $

CHECK:CAMELCASE: Avoid CamelCase: <R5_Consistent>
#542: FILE: include/linux/raid/raid5.h:176:
+#define	R5_Consistent	11	/* Block is HW DMA-able */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#572: FILE: include/linux/raid/raid5.h:220:
+#define^ISTRIPE_OP_CHECK_Gen   ^I9$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#590: FILE: include/linux/raid/raid5.h:280:
+	void (*do_block_ops)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075014.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 24 warnings, 20 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075014.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
