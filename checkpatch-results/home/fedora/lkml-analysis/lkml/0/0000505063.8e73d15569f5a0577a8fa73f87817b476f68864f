WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
diff -urN S13-pre6/drivers/block/paride/pcd.c S13-pre6-current/drivers/block/paride/pcd.c

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#47: FILE: drivers/block/paride/pcd.c:270:
+struct block_device_operations pcd_bdops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#48: FILE: drivers/block/paride/pcd.c:271:
+	open:			pcd_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#49: FILE: drivers/block/paride/pcd.c:272:
+	release:		pcd_dev_release,
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#49: FILE: drivers/block/paride/pcd.c:272:
+	release:		pcd_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#50: FILE: drivers/block/paride/pcd.c:273:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#50: FILE: drivers/block/paride/pcd.c:273:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#51: FILE: drivers/block/paride/pcd.c:274:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#51: FILE: drivers/block/paride/pcd.c:274:
+	check_media_change:	cdrom_media_changed,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: drivers/block/paride/pcd.c:347:
+	if (register_blkdev(MAJOR_NR,name,&pcd_bdops)) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#62: FILE: drivers/block/paride/pcd.c:347:
+	if (register_blkdev(MAJOR_NR,name,&pcd_bdops)) {
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#62: FILE: drivers/block/paride/pcd.c:347:
+	if (register_blkdev(MAJOR_NR,name,&pcd_bdops)) {
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#69: FILE: drivers/block/paride/pcd.c:352:
+	for (unit=0;unit<PCD_UNITS;unit++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#69: FILE: drivers/block/paride/pcd.c:352:
+	for (unit=0;unit<PCD_UNITS;unit++) {
 	           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#69: FILE: drivers/block/paride/pcd.c:352:
+	for (unit=0;unit<PCD_UNITS;unit++) {
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#69: FILE: drivers/block/paride/pcd.c:352:
+	for (unit=0;unit<PCD_UNITS;unit++) {
 	                          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: drivers/block/paride/pcd.c:382:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: drivers/cdrom/cdrom.c:394:
+			char vname[16];
+			sprintf (vname, "cdrom%d", cdi->number);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: drivers/cdrom/cdrom.c:394:
+			sprintf (vname, "cdrom%d", cdi->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/cdrom/cdrom.c:1462:
+int cdrom_ioctl(struct inode *ip, struct file *fp, unsigned int cmd,
 		       unsigned long arg)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#227: FILE: drivers/cdrom/cdrom.c:2373:
+EXPORT_SYMBOL(cdrom_release);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#228: FILE: drivers/cdrom/cdrom.c:2374:
+EXPORT_SYMBOL(cdrom_ioctl);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#229: FILE: drivers/cdrom/cdrom.c:2375:
+EXPORT_SYMBOL(cdrom_media_changed);

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: drivers/cdrom/cdu31a.c:3108:
+	int err;
+	MOD_INC_USE_COUNT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: drivers/cdrom/cdu31a.c:3118:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#286: FILE: drivers/cdrom/cdu31a.c:3201:
+struct block_device_operations scd_bdops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#287: FILE: drivers/cdrom/cdu31a.c:3202:
+struct block_device_operations scd_bdops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#288: FILE: drivers/cdrom/cdu31a.c:3203:
+	open:			scd_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#289: FILE: drivers/cdrom/cdu31a.c:3204:
+	release:		scd_dev_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#289: FILE: drivers/cdrom/cdu31a.c:3204:
+	release:		scd_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#290: FILE: drivers/cdrom/cdu31a.c:3205:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#290: FILE: drivers/cdrom/cdu31a.c:3205:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#291: FILE: drivers/cdrom/cdu31a.c:3206:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#291: FILE: drivers/cdrom/cdu31a.c:3206:
+	check_media_change:	cdrom_media_changed,

WARNING:LINE_SPACING: Missing a blank line after declarations
#324: FILE: drivers/cdrom/cm206.c:771:
+	int err;
+	MOD_INC_USE_COUNT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#334: FILE: drivers/cdrom/cm206.c:781:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#338: FILE: drivers/cdrom/cm206.c:785:
+struct block_device_operations cm206_bdops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#339: FILE: drivers/cdrom/cm206.c:786:
+struct block_device_operations cm206_bdops =
+{

WARNING:INDENTED_LABEL: labels should not be indented
#340: FILE: drivers/cdrom/cm206.c:787:
+	open:			cm206_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#341: FILE: drivers/cdrom/cm206.c:788:
+	release:		cm206_dev_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#341: FILE: drivers/cdrom/cm206.c:788:
+	release:		cm206_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#342: FILE: drivers/cdrom/cm206.c:789:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#342: FILE: drivers/cdrom/cm206.c:789:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#343: FILE: drivers/cdrom/cm206.c:790:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#343: FILE: drivers/cdrom/cm206.c:790:
+	check_media_change:	cdrom_media_changed,

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: drivers/cdrom/mcd.c:195:
+	int err;
+	MOD_INC_USE_COUNT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: drivers/cdrom/mcd.c:205:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#403: FILE: drivers/cdrom/mcd.c:209:
+struct block_device_operations mcd_bdops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#404: FILE: drivers/cdrom/mcd.c:210:
+struct block_device_operations mcd_bdops =
+{

WARNING:INDENTED_LABEL: labels should not be indented
#405: FILE: drivers/cdrom/mcd.c:211:
+	open:			mcd_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#406: FILE: drivers/cdrom/mcd.c:212:
+	release:		mcd_dev_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#406: FILE: drivers/cdrom/mcd.c:212:
+	release:		mcd_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#407: FILE: drivers/cdrom/mcd.c:213:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#407: FILE: drivers/cdrom/mcd.c:213:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#408: FILE: drivers/cdrom/mcd.c:214:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#408: FILE: drivers/cdrom/mcd.c:214:
+	check_media_change:	cdrom_media_changed,

WARNING:LINE_SPACING: Missing a blank line after declarations
#466: FILE: drivers/cdrom/mcdx.c:225:
+	int err;
+	MOD_INC_USE_COUNT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: drivers/cdrom/mcdx.c:235:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#480: FILE: drivers/cdrom/mcdx.c:239:
+struct block_device_operations mcdx_bdops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#481: FILE: drivers/cdrom/mcdx.c:240:
+struct block_device_operations mcdx_bdops =
+{

WARNING:INDENTED_LABEL: labels should not be indented
#482: FILE: drivers/cdrom/mcdx.c:241:
+	open:			mcdx_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#483: FILE: drivers/cdrom/mcdx.c:242:
+	release:		mcdx_dev_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#483: FILE: drivers/cdrom/mcdx.c:242:
+	release:		mcdx_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#484: FILE: drivers/cdrom/mcdx.c:243:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#484: FILE: drivers/cdrom/mcdx.c:243:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#485: FILE: drivers/cdrom/mcdx.c:244:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#485: FILE: drivers/cdrom/mcdx.c:244:
+	check_media_change:	cdrom_media_changed,

WARNING:LINE_SPACING: Missing a blank line after declarations
#576: FILE: drivers/cdrom/sbpcd.c:5425:
+	int err;
+	MOD_INC_USE_COUNT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#586: FILE: drivers/cdrom/sbpcd.c:5435:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#590: FILE: drivers/cdrom/sbpcd.c:5439:
+static struct block_device_operations sbpcd_bdops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#591: FILE: drivers/cdrom/sbpcd.c:5440:
+static struct block_device_operations sbpcd_bdops =
+{

WARNING:INDENTED_LABEL: labels should not be indented
#592: FILE: drivers/cdrom/sbpcd.c:5441:
+	open:			sbpcd_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#593: FILE: drivers/cdrom/sbpcd.c:5442:
+	release:		sbpcd_dev_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#593: FILE: drivers/cdrom/sbpcd.c:5442:
+	release:		sbpcd_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#594: FILE: drivers/cdrom/sbpcd.c:5443:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#594: FILE: drivers/cdrom/sbpcd.c:5443:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#595: FILE: drivers/cdrom/sbpcd.c:5444:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#595: FILE: drivers/cdrom/sbpcd.c:5444:
+	check_media_change:	cdrom_media_changed,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: drivers/ide/ide-cd.c:2866:
+	return cdrom_ioctl (inode, file, cmd, arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: drivers/ide/ide-cd.c:2878:
+        if ((info->buffer == NULL) || (rc = cdrom_open(ip, fp))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/ide/ide-cd.c:2878:
+        if ((info->buffer == NULL) || (rc = cdrom_open(ip, fp))) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->buffer == NULL'
#651: FILE: drivers/ide/ide-cd.c:2878:
+        if ((info->buffer == NULL) || (rc = cdrom_open(ip, fp))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#651: FILE: drivers/ide/ide-cd.c:2878:
+        if ((info->buffer == NULL) || (rc = cdrom_open(ip, fp))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->buffer"
#651: FILE: drivers/ide/ide-cd.c:2878:
+        if ((info->buffer == NULL) || (rc = cdrom_open(ip, fp))) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: drivers/ide/ide-cd.c:2889:
+	cdrom_release (inode, file);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: drivers/ide/ide-cd.c:2896:
+	return cdrom_media_change(MKDEV (HWIF (drive)->major,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: drivers/ide/ide-cd.c:2896:
+	return cdrom_media_change(MKDEV (HWIF (drive)->major,

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: drivers/scsi/sr.c:490:
+	int err;
+	MOD_INC_USE_COUNT;

WARNING:LINE_SPACING: Missing a blank line after declarations
#692: FILE: drivers/scsi/sr.c:500:
+	int err = cdrom_release(inode, file);
+	MOD_DEC_USE_COUNT;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#696: FILE: drivers/scsi/sr.c:504:
+struct block_device_operations sr_bdops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#697: FILE: drivers/scsi/sr.c:505:
+struct block_device_operations sr_bdops =
+{

WARNING:INDENTED_LABEL: labels should not be indented
#698: FILE: drivers/scsi/sr.c:506:
+	open:			sr_dev_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#699: FILE: drivers/scsi/sr.c:507:
+	release:		sr_dev_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#699: FILE: drivers/scsi/sr.c:507:
+	release:		sr_dev_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#700: FILE: drivers/scsi/sr.c:508:
+	ioctl:			cdrom_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#700: FILE: drivers/scsi/sr.c:508:
+	ioctl:			cdrom_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#701: FILE: drivers/scsi/sr.c:509:
+	check_media_change:	cdrom_media_changed,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#701: FILE: drivers/scsi/sr.c:509:
+	check_media_change:	cdrom_media_changed,

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: drivers/scsi/sr.c:903:
+                                    &sr_bdops, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/scsi/sr.c:903:
+                                    &sr_bdops, NULL);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#733: FILE: include/linux/cdrom.h:780:
+extern int cdrom_open(struct inode *, struct file *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#733: FILE: include/linux/cdrom.h:780:
+extern int cdrom_open(struct inode *, struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#733: FILE: include/linux/cdrom.h:780:
+extern int cdrom_open(struct inode *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#734: FILE: include/linux/cdrom.h:781:
+extern int cdrom_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#734: FILE: include/linux/cdrom.h:781:
+extern int cdrom_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#734: FILE: include/linux/cdrom.h:781:
+extern int cdrom_release(struct inode *, struct file *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#735: FILE: include/linux/cdrom.h:782:
+extern int cdrom_ioctl(struct inode *, struct file *, unsigned, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#735: FILE: include/linux/cdrom.h:782:
+extern int cdrom_ioctl(struct inode *, struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#735: FILE: include/linux/cdrom.h:782:
+extern int cdrom_ioctl(struct inode *, struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#735: FILE: include/linux/cdrom.h:782:
+extern int cdrom_ioctl(struct inode *, struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#735: FILE: include/linux/cdrom.h:782:
+extern int cdrom_ioctl(struct inode *, struct file *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#735: FILE: include/linux/cdrom.h:782:
+extern int cdrom_ioctl(struct inode *, struct file *, unsigned, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#736: FILE: include/linux/cdrom.h:783:
+extern int cdrom_media_changed(kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#736: FILE: include/linux/cdrom.h:783:
+extern int cdrom_media_changed(kdev_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: include/linux/cdrom.h:789:
+static inline void devfs_plain_cdrom(struct cdrom_device_info *cdi,
+				struct block_device_operations *ops)

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#742: FILE: include/linux/cdrom.h:789:
+				struct block_device_operations *ops)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: include/linux/cdrom.h:793:
+	sprintf (vname, "cdroms/cdrom%d", cdi->number);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: include/linux/cdrom.h:794:
+	cdi->de = devfs_register (NULL, vname, DEVFS_FL_DEFAULT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: include/linux/cdrom.h:795:
+	cdi->de = devfs_register (NULL, vname, DEVFS_FL_DEFAULT,
+				    MAJOR (cdi->dev), MINOR (cdi->dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: include/linux/cdrom.h:795:
+				    MAJOR (cdi->dev), MINOR (cdi->dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: include/linux/cdrom.h:795:
+				    MAJOR (cdi->dev), MINOR (cdi->dev),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#749: FILE: include/linux/cdrom.h:796:
+				    S_IFBLK | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000505063.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 76 warnings, 9 checks, 644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000505063.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
