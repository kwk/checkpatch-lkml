WARNING:TYPO_SPELLING: 'devic' may be misspelled - perhaps 'device'?
#22: 
	What's causing the "devic.." interrupts ?
	                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#80: 
2aad2000-2aad3000 r-xp 00000000 08:02 441462     /opt/informix/lib/iosm09a.so

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#141: FILE: internals.h:244:
+/* lowest bottom of stack of any other thread ever allocated
+   This is used for checking stack pointer between this value

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#145: FILE: internals.h:248:
+   and make thread_self() working correctly. see also internals.h */

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#145: FILE: internals.h:248:
+   and make thread_self() working correctly. see also internals.h */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: internals.h:349:
+  if (sp >= __pthread_manager_thread_bos$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 5)
#160: FILE: internals.h:349:
+  if (sp >= __pthread_manager_thread_bos
[...]
      return &__pthread_manager_thread;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#161: FILE: internals.h:350:
+  if (sp >= __pthread_manager_thread_bos
+      && sp < __pthread_manager_thread_tos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: internals.h:350:
+      && sp < __pthread_manager_thread_tos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: internals.h:352:
+  else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#167: FILE: internals.h:352:
+  else
+  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#167: FILE: internals.h:352:
+  else
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: internals.h:353:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: internals.h:354:
+    if(__pthread_nonstandard_stacks)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#169: FILE: internals.h:354:
+    if(__pthread_nonstandard_stacks)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#169: FILE: internals.h:354:
+    if(__pthread_nonstandard_stacks)
+    {

ERROR:SPACING: space required before the open parenthesis '('
#169: FILE: internals.h:354:
+    if(__pthread_nonstandard_stacks)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: internals.h:355:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: internals.h:356:
+      pthread_descr pd;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: internals.h:357:
+      pthread_descr pd;
+      if( (pd = __pthread_find_self()) != NULL )

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: internals.h:357:
+      if( (pd = __pthread_find_self()) != NULL )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#172: FILE: internals.h:357:
+      if( (pd = __pthread_find_self()) != NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#172: FILE: internals.h:357:
+      if( (pd = __pthread_find_self()) != NULL )

ERROR:SPACING: space required before the open parenthesis '('
#172: FILE: internals.h:357:
+      if( (pd = __pthread_find_self()) != NULL )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#172: FILE: internals.h:357:
+      if( (pd = __pthread_find_self()) != NULL )

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: internals.h:358:
+        return pd;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: internals.h:358:
+        return pd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: internals.h:359:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: internals.h:360:
+    else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#175: FILE: internals.h:360:
+    else
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#175: FILE: internals.h:360:
+    else
+    {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#175: FILE: internals.h:360:
+    }
+    else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: internals.h:361:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: internals.h:362:
+      if( __pthread_other_threads_lowest_bos != NULL &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 6)
#177: FILE: internals.h:362:
+      if( __pthread_other_threads_lowest_bos != NULL &&
[...]
+      return (pthread_descr)(((unsigned long)sp | (STACK_SIZE-1))+1) - 1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#177: FILE: internals.h:362:
+      if( __pthread_other_threads_lowest_bos != NULL &&

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: internals.h:362:
+      if( __pthread_other_threads_lowest_bos != NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "__pthread_other_threads_lowest_bos"
#177: FILE: internals.h:362:
+      if( __pthread_other_threads_lowest_bos != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: internals.h:363:
+          sp < __pthread_initial_thread_bos &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: internals.h:363:
+      if( __pthread_other_threads_lowest_bos != NULL &&
+          sp < __pthread_initial_thread_bos &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: internals.h:363:
+          sp < __pthread_initial_thread_bos &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: internals.h:364:
+          sp >= __pthread_other_threads_lowest_bos )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: internals.h:364:
+          sp >= __pthread_other_threads_lowest_bos )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#179: FILE: internals.h:364:
+          sp >= __pthread_other_threads_lowest_bos )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: internals.h:365:
+      return (pthread_descr)(((unsigned long)sp | (STACK_SIZE-1))+1) - 1;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#180: FILE: internals.h:365:
+      return (pthread_descr)(((unsigned long)sp | (STACK_SIZE-1))+1) - 1;
                                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: internals.h:365:
+      return (pthread_descr)(((unsigned long)sp | (STACK_SIZE-1))+1) - 1;
                                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: internals.h:366:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: internals.h:367:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: internals.h:368:
+  return &__pthread_initial_thread;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#195: FILE: pthread.c:140:
+/* lowest bottom of stack of any other thread ever allocated
+   This is used for checking stack pointer between this value

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: pthread.c:144:
+   and make thread_self() working correctly. see also internals.h */

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#201: FILE: pthread.c:146:
+char *__pthread_other_threads_lowest_bos = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: No space is necessary after a cast
#212: FILE: pthread.c:556:
+  while (! (sp <= (char *) h->h_descr && sp >= h->h_bottom &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: pthread.c:556:
+  while (! (sp <= (char *) h->h_descr && sp >= h->h_bottom &&$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#212: FILE: pthread.c:556:
+  while (! (sp <= (char *) h->h_descr && sp >= h->h_bottom &&
          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#212: FILE: pthread.c:556:
+  while (! (sp <= (char *) h->h_descr && sp >= h->h_bottom &&
+            h < (__pthread_handles + PTHREAD_THREADS_MAX) )) h++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: pthread.c:557:
+            h < (__pthread_handles + PTHREAD_THREADS_MAX) )) h++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: pthread.c:557:
+            h < (__pthread_handles + PTHREAD_THREADS_MAX) )) h++;$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#213: FILE: pthread.c:557:
+            h < (__pthread_handles + PTHREAD_THREADS_MAX) )) h++;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: pthread.c:558:
+  if( h < (__pthread_handles + PTHREAD_THREADS_MAX) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#214: FILE: pthread.c:558:
+  if( h < (__pthread_handles + PTHREAD_THREADS_MAX) )
+    return h->h_descr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#214: FILE: pthread.c:558:
+  if( h < (__pthread_handles + PTHREAD_THREADS_MAX) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#214: FILE: pthread.c:558:
+  if( h < (__pthread_handles + PTHREAD_THREADS_MAX) )

ERROR:SPACING: space required before the open parenthesis '('
#214: FILE: pthread.c:558:
+  if( h < (__pthread_handles + PTHREAD_THREADS_MAX) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: pthread.c:559:
+    return h->h_descr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: pthread.c:560:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#216: FILE: pthread.c:560:
+  else
+    return NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: pthread.c:561:
+    return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: manager.c:305:
+      if( __pthread_other_threads_lowest_bos == NULL ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 6)
#230: FILE: manager.c:305:
+      if( __pthread_other_threads_lowest_bos == NULL ||
[...]
+      __pthread_other_threads_lowest_bos = new_thread_bottom;

ERROR:SPACING: space prohibited after that open parenthesis '('
#230: FILE: manager.c:305:
+      if( __pthread_other_threads_lowest_bos == NULL ||

ERROR:SPACING: space required before the open parenthesis '('
#230: FILE: manager.c:305:
+      if( __pthread_other_threads_lowest_bos == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!__pthread_other_threads_lowest_bos"
#230: FILE: manager.c:305:
+      if( __pthread_other_threads_lowest_bos == NULL ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: manager.c:306:
+          __pthread_other_threads_lowest_bos > new_thread_bottom )$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: manager.c:306:
+      if( __pthread_other_threads_lowest_bos == NULL ||
+          __pthread_other_threads_lowest_bos > new_thread_bottom )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: manager.c:306:
+          __pthread_other_threads_lowest_bos > new_thread_bottom )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#231: FILE: manager.c:306:
+          __pthread_other_threads_lowest_bos > new_thread_bottom )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: manager.c:307:
+      __pthread_other_threads_lowest_bos = new_thread_bottom;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395985.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 44 warnings, 8 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395985.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
