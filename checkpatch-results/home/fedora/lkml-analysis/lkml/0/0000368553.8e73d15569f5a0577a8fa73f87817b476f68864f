WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#72: 
diff -ur linux-2.4.20-pre11/include/asm-arm/system.h linux/include/asm-arm/system.h

WARNING:MEMORY_BARRIER: memory barrier without comment
#79: FILE: include/asm-arm/system.h:42:
+#define set_mb(var, value)  do { var = value; mb(); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#80: FILE: include/asm-arm/system.h:43:
+#define set_wmb(var, value) do { var = value; wmb(); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#91: FILE: include/asm-cris/system.h:153:
+#define set_mb(var, value)  do { var = value; mb(); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#92: FILE: include/asm-cris/system.h:154:
+#define set_wmb(var, value) do { var = value; wmb(); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#103: FILE: include/asm-i386/system.h:308:
+#define set_mb(var, value) do { xchg(&var, value); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#103: FILE: include/asm-i386/system.h:308:
+#define set_mb(var, value) do { xchg(&var, value); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:MEMORY_BARRIER: memory barrier without comment
#124: FILE: include/asm-m68k/system.h:85:
+#define set_mb(var, value)     do { var = value; mb(); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#137: FILE: include/asm-sh/system.h:103:
+#define set_mb(var, value)  do { var = value; mb(); } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 1 checks, 70 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
