WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -Nru a/drivers/char/watchdog/softdog.c b/drivers/char/watchdog/softdog.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#29: 
--- a/drivers/char/watchdog/softdog.c	Fri Feb 28 20:09:48 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: drivers/char/watchdog/softdog.c:37:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#45: FILE: drivers/char/watchdog/softdog.c:40:
+ *      adds the softdog to the sysfs topography and moves the common $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: drivers/char/watchdog/softdog.c:42:
+ *       $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: drivers/char/watchdog/softdog.c:56:
+module_param(soft_margin,int,0);
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: drivers/char/watchdog/softdog.c:56:
+module_param(soft_margin,int,0);
                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#75: FILE: drivers/char/watchdog/softdog.c:59:
+static int soft_noboot = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: drivers/char/watchdog/softdog.c:60:
+module_param(soft_noboot,int,0);
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: drivers/char/watchdog/softdog.c:60:
+module_param(soft_noboot,int,0);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: drivers/char/watchdog/softdog.c:68:
+module_param(nowayout,int,0);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: drivers/char/watchdog/softdog.c:68:
+module_param(nowayout,int,0);
                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#122: FILE: drivers/char/watchdog/softdog.c:94:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/char/watchdog/softdog.c:95:
+/* $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#145: FILE: drivers/char/watchdog/softdog.c:108:
+		printk(KERN_CRIT "SOFTDOG: WDT device closed unexpectedly.  "

WARNING:SPLIT_STRING: quoted string split across lines
#146: FILE: drivers/char/watchdog/softdog.c:109:
+		printk(KERN_CRIT "SOFTDOG: WDT device closed unexpectedly.  "
+		       "WDT will not stop!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/char/watchdog/softdog.c:117:
+static int softdog_keepalive(struct watchdog_driver *d) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/char/watchdog/softdog.c:119:
+	mod_timer(&watchdog_ticktock, jiffies+(soft_margin*HZ));
 	                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#161: FILE: drivers/char/watchdog/softdog.c:119:
+	mod_timer(&watchdog_ticktock, jiffies+(soft_margin*HZ));
 	                                                  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#185: FILE: drivers/char/watchdog/softdog.c:135:
+	if (timer_pending(&watchdog_ticktock))
+	  mod_timer(&watchdog_ticktock, jiffies+(soft_margin*HZ));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: drivers/char/watchdog/softdog.c:136:
+	  mod_timer(&watchdog_ticktock, jiffies+(soft_margin*HZ));
 	                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#186: FILE: drivers/char/watchdog/softdog.c:136:
+	  mod_timer(&watchdog_ticktock, jiffies+(soft_margin*HZ));
 	                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: drivers/char/watchdog/softdog.c:156:
+^Ielse $

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#263: FILE: drivers/char/watchdog/softdog.c:165:
+static struct watchdog_ops softdog_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/char/watchdog/softdog.c:189:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/char/watchdog/softdog.c:190:
+ *      enable testing the of driver to not cause a machine restart $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: drivers/char/watchdog/softdog.c:193:
+static ssize_t soft_noboot_show(struct device_driver * d, char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: drivers/char/watchdog/softdog.c:193:
+static ssize_t soft_noboot_show(struct device_driver * d, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: drivers/char/watchdog/softdog.c:195:
+	return sprintf(buf, "%i\n",soft_noboot);
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: drivers/char/watchdog/softdog.c:197:
+static ssize_t soft_noboot_store(struct device_driver *d,const char * buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#300: FILE: drivers/char/watchdog/softdog.c:197:
+}
+static ssize_t soft_noboot_store(struct device_driver *d,const char * buf, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: drivers/char/watchdog/softdog.c:197:
+static ssize_t soft_noboot_store(struct device_driver *d,const char * buf, 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: drivers/char/watchdog/softdog.c:197:
+static ssize_t soft_noboot_store(struct device_driver *d,const char * buf, 
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: drivers/char/watchdog/softdog.c:202:
+	if (sscanf(buf,"%i",&tmp) != 1)
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#305: FILE: drivers/char/watchdog/softdog.c:202:
+	if (sscanf(buf,"%i",&tmp) != 1)
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#305: FILE: drivers/char/watchdog/softdog.c:202:
+	if (sscanf(buf,"%i",&tmp) != 1)
 	                    ^

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#305: FILE: drivers/char/watchdog/softdog.c:202:
+	if (sscanf(buf,"%i",&tmp) != 1)
+		return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/char/watchdog/softdog.c:211:
+DRIVER_ATTR(soft_noboot,0644,soft_noboot_show,soft_noboot_store);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/char/watchdog/softdog.c:211:
+DRIVER_ATTR(soft_noboot,0644,soft_noboot_show,soft_noboot_store);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/char/watchdog/softdog.c:211:
+DRIVER_ATTR(soft_noboot,0644,soft_noboot_show,soft_noboot_store);
                                              ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#316: FILE: drivers/char/watchdog/softdog.c:213:
+static char banner[] __initdata = KERN_INFO "Software Watchdog Timer: 0.07, soft_margin: %d sec, nowayout: %d\n";

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: drivers/char/watchdog/softdog.c:229:
+{     $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388968.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 7 warnings, 6 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388968.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
