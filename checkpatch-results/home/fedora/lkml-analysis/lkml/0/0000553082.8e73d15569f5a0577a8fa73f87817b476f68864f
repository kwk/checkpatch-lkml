WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
diff -u --recursive ppp-2.4.0-orig/chat/Makefile.linux ppp-2.4.0-hacked/chat/Makefile.linux

WARNING:REPEATED_WORD: Possible repeated word: 'chat'
#78: FILE: chat/Makefile.linux:16:
+	$(CC) $(LDFLAGS) -o chat chat.o

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#89: FILE: pppd/options.c:80:
+bool	killoldaddr = 0;		/* If our IP is reassigned on

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: pppd/options.c:81:
+bool	killoldaddr = 0;		/* If our IP is reassigned on
+				    reconnect, kill active TCP

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: pppd/options.c:82:
+				     connections using the old IP. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: pppd/options.c:200:
+    { "killoldaddr", o_bool, &killoldaddr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: pppd/options.c:201:
+      "Kill connections from an old source address", 1},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: pppd/options.c:202:
+    { "nokilloldaddr", o_bool,&killoldaddr,$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#101: FILE: pppd/options.c:202:
+    { "nokilloldaddr", o_bool,&killoldaddr,
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#101: FILE: pppd/options.c:202:
+    { "nokilloldaddr", o_bool,&killoldaddr,
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: pppd/options.c:203:
+      "Don't kill connections from an old source address" },$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: pppd/pppd.h:239:
+extern bool	killoldaddr;	/* If our IP is reassigned on
+				    reconnect, kill active TCP

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#115: FILE: pppd/pppd.h:240:
+				     connections using the old IP. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#137: FILE: pppd/sys-linux.c:159:
+static u_int32_t our_current_addr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: pppd/sys-linux.c:501:
+    struct ifreq   ifr; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: pppd/sys-linux.c:501:
+    struct ifreq   ifr; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: pppd/sys-linux.c:503:
+    memset(&ifr,0,sizeof ifr);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: pppd/sys-linux.c:503:
+    memset(&ifr,0,sizeof ifr);
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: pppd/sys-linux.c:503:
+    memset(&ifr,0,sizeof ifr);
                  ^

WARNING:SIZEOF_PARENTHESIS: sizeof ifr should be sizeof(ifr)
#149: FILE: pppd/sys-linux.c:503:
+    memset(&ifr,0,sizeof ifr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: pppd/sys-linux.c:505:
+    SET_SA_FAMILY (ifr.ifr_addr,    AF_INET); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: pppd/sys-linux.c:505:
+    SET_SA_FAMILY (ifr.ifr_addr,    AF_INET); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: pppd/sys-linux.c:505:
+    SET_SA_FAMILY (ifr.ifr_addr,    AF_INET); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: pppd/sys-linux.c:506:
+    SET_SA_FAMILY (ifr.ifr_dstaddr, AF_INET); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: pppd/sys-linux.c:506:
+    SET_SA_FAMILY (ifr.ifr_dstaddr, AF_INET); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: pppd/sys-linux.c:506:
+    SET_SA_FAMILY (ifr.ifr_dstaddr, AF_INET); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: pppd/sys-linux.c:507:
+    SET_SA_FAMILY (ifr.ifr_netmask, AF_INET); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: pppd/sys-linux.c:507:
+    SET_SA_FAMILY (ifr.ifr_netmask, AF_INET); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: pppd/sys-linux.c:507:
+    SET_SA_FAMILY (ifr.ifr_netmask, AF_INET); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: pppd/sys-linux.c:508:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: pppd/sys-linux.c:508:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: pppd/sys-linux.c:509:
+    SIN_ADDR(ifr.ifr_addr) = oldaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: pppd/sys-linux.c:511:
+    strlcpy(ifr.ifr_name, ifname, sizeof (ifr.ifr_name));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: pppd/sys-linux.c:511:
+    strlcpy(ifr.ifr_name, ifname, sizeof (ifr.ifr_name));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#157: FILE: pppd/sys-linux.c:511:
+    strlcpy(ifr.ifr_name, ifname, sizeof (ifr.ifr_name));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: pppd/sys-linux.c:512:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: pppd/sys-linux.c:512:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: pppd/sys-linux.c:513:
+    if(ioctl(sock_fd,SIOCKILLADDR,&ifr) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#159: FILE: pppd/sys-linux.c:513:
+    if(ioctl(sock_fd,SIOCKILLADDR,&ifr) < 0) {
+      if (!ok_error (errno))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: pppd/sys-linux.c:513:
+    if(ioctl(sock_fd,SIOCKILLADDR,&ifr) < 0) {
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#159: FILE: pppd/sys-linux.c:513:
+    if(ioctl(sock_fd,SIOCKILLADDR,&ifr) < 0) {
                                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#159: FILE: pppd/sys-linux.c:513:
+    if(ioctl(sock_fd,SIOCKILLADDR,&ifr) < 0) {
                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#159: FILE: pppd/sys-linux.c:513:
+    if(ioctl(sock_fd,SIOCKILLADDR,&ifr) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: pppd/sys-linux.c:514:
+      if (!ok_error (errno))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: pppd/sys-linux.c:514:
+      if (!ok_error (errno))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: pppd/sys-linux.c:516:
+      return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: pppd/sys-linux.c:517:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: pppd/sys-linux.c:2279:
+    if(persist && our_old_addr && our_old_addr != our_adr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#189: FILE: pppd/sys-linux.c:2279:
+    if(persist && our_old_addr && our_old_addr != our_adr) {
[...]
+      if(killoldaddr)

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: pppd/sys-linux.c:2279:
+    if(persist && our_old_addr && our_old_addr != our_adr) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#190: FILE: pppd/sys-linux.c:2280:
+    if(persist && our_old_addr && our_old_addr != our_adr) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: pppd/sys-linux.c:2281:
+      if(killoldaddr)$

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: pppd/sys-linux.c:2281:
+      if(killoldaddr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: pppd/sys-linux.c:2284:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: pppd/sys-linux.c:2284:
+
+	

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: pppd/sys-linux.c:2286:
+      if (tune_kernel && !dynaddr_set) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#202: FILE: pppd/sys-linux.c:2292:
 	if (path != 0 && (fd = open(path, O_WRONLY)) >= 0) {
+	  if (write(fd, "1", 1) != 1)

WARNING:TABSTOP: Statements should start on a tabstop
#206: FILE: pppd/sys-linux.c:2293:
+	  if (write(fd, "1", 1) != 1)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#206: FILE: pppd/sys-linux.c:2293:
+	  if (write(fd, "1", 1) != 1)
+	    error("Couldn't enable dynamic IP addressing: %m");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: pppd/sys-linux.c:2298:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: pppd/sys-linux.c:2301:
+    our_current_addr = our_adr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: pppd/sys-linux.c:2357:
+    our_current_addr = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: pppd/sys-linux.c:2358:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: pppd/sys-linux.c:2358:
+    $

WARNING:REPEATED_WORD: Possible repeated word: 'pppstats'
#254: FILE: pppstats/Makefile.linux:25:
+	$(CC) $(CFLAGS) $(LDFLAGS) -o pppstats pppstats.c $(LIBS)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000553082.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 43 warnings, 3 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000553082.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
