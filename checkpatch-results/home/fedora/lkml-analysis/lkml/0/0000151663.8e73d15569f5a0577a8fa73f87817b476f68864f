WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#76: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#80: FILE: drivers/infiniband/ulp/srp/Kbuild:1:
+EXTRA_CFLAGS += -Idrivers/infiniband/include

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#88: FILE: drivers/infiniband/ulp/srp/Kconfig:1:
+config INFINIBAND_SRP
+	tristate "InfiniBand SCSI RDMA Protocol"
+	depends on INFINIBAND && SCSI
+	---help---
+	  Support for the SCSI RDMA Protocol over InfiniBand.  This
+	  allows you to access storage devices that speak SRP over
+	  InfiniBand.
+
+	  The SRP protocol is defined by the INCITS T10 technical
+	  committee.  See <http://www.t10.org/>.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#135: FILE: drivers/infiniband/ulp/srp/ib_srp.c:32:
+ * $Id: ib_srp.c 3395 2005-09-13 05:10:39Z roland $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#146: FILE: drivers/infiniband/ulp/srp/ib_srp.c:43:
+#include <asm/atomic.h>

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#184: FILE: drivers/infiniband/ulp/srp/ib_srp.c:81:
+static inline struct srp_target_port *host_to_target(struct Scsi_Host *host)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#186: FILE: drivers/infiniband/ulp/srp/ib_srp.c:83:
+	return (struct srp_target_port *) host->hostdata;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *iu should be sizeof(*iu)
#200: FILE: drivers/infiniband/ulp/srp/ib_srp.c:97:
+	iu = kmalloc(sizeof *iu, gfp_mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#237: FILE: drivers/infiniband/ulp/srp/ib_srp.c:134:
+	printk(KERN_ERR PFX "QP event %d\n", event->event);

WARNING:SIZEOF_PARENTHESIS: sizeof *attr should be sizeof(*attr)
#246: FILE: drivers/infiniband/ulp/srp/ib_srp.c:143:
+	attr = kmalloc(sizeof *attr, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: drivers/infiniband/ulp/srp/ib_srp.c:194:
+		printk(KERN_ERR PFX "Got failed path rec status %d\n", status);

WARNING:SIZEOF_PARENTHESIS: sizeof *init_attr should be sizeof(*init_attr)
#314: FILE: drivers/infiniband/ulp/srp/ib_srp.c:211:
+	init_attr = kzalloc(sizeof *init_attr, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#378: FILE: drivers/infiniband/ulp/srp/ib_srp.c:275:
+		printk(KERN_WARNING PFX "Path record query failed\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#391: FILE: drivers/infiniband/ulp/srp/ib_srp.c:288:
+	req = kzalloc(sizeof *req, GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: drivers/infiniband/ulp/srp/ib_srp.c:292:
+^Ireq->param.primary_path ^I      = &target->path;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#396: FILE: drivers/infiniband/ulp/srp/ib_srp.c:293:
+^Ireq->param.alternate_path ^I      = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#397: FILE: drivers/infiniband/ulp/srp/ib_srp.c:294:
+^Ireq->param.service_id ^I^I      = target->service_id;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#398: FILE: drivers/infiniband/ulp/srp/ib_srp.c:295:
+^Ireq->param.qp_num ^I^I      = target->qp->qp_num;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#399: FILE: drivers/infiniband/ulp/srp/ib_srp.c:296:
+^Ireq->param.qp_type ^I^I      = target->qp->qp_type;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#400: FILE: drivers/infiniband/ulp/srp/ib_srp.c:297:
+^Ireq->param.starting_psn ^I      = 0; /* XXX */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#401: FILE: drivers/infiniband/ulp/srp/ib_srp.c:298:
+^Ireq->param.private_data ^I      = &req->priv;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#402: FILE: drivers/infiniband/ulp/srp/ib_srp.c:299:
+^Ireq->param.private_data_len ^I      = sizeof req->priv;$

WARNING:SIZEOF_PARENTHESIS: sizeof req->priv should be sizeof(req->priv)
#402: FILE: drivers/infiniband/ulp/srp/ib_srp.c:299:
+	req->param.private_data_len 	      = sizeof req->priv;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#405: FILE: drivers/infiniband/ulp/srp/ib_srp.c:302:
+^Ireq->param.flow_control ^I      = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: drivers/infiniband/ulp/srp/ib_srp.c:304:
+^Ireq->param.retry_count ^I^I      = 7;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#408: FILE: drivers/infiniband/ulp/srp/ib_srp.c:305:
+^Ireq->param.rnr_retry_count ^I      = 7;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: drivers/infiniband/ulp/srp/ib_srp.c:306:
+^Ireq->param.max_cm_retries ^I      = 15;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: drivers/infiniband/ulp/srp/ib_srp.c:308:
+^Ireq->priv.opcode     ^I= SRP_LOGIN_REQ;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#412: FILE: drivers/infiniband/ulp/srp/ib_srp.c:309:
+^Ireq->priv.tag        ^I= 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/infiniband/ulp/srp/ib_srp.c:311:
+^Ireq->priv.req_buf_fmt ^I= cpu_to_be16(SRP_BUF_FORMAT_DIRECT |$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#424: FILE: drivers/infiniband/ulp/srp/ib_srp.c:321:
+		printk(KERN_DEBUG PFX "Topspin/Cisco initiator port ID workaround "

WARNING:SPLIT_STRING: quoted string split across lines
#425: FILE: drivers/infiniband/ulp/srp/ib_srp.c:322:
+		printk(KERN_DEBUG PFX "Topspin/Cisco initiator port ID workaround "
+		       "activated for target GUID %016llx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#426: FILE: drivers/infiniband/ulp/srp/ib_srp.c:323:
+		       (unsigned long long) be64_to_cpu(target->ioc_guid));

CHECK:BRACES: braces {} should be used on all arms of this statement
#586: FILE: drivers/infiniband/ulp/srp/ib_srp.c:483:
+	if (target->state == SRP_TARGET_CONNECTING) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#589: FILE: drivers/infiniband/ulp/srp/ib_srp.c:486:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#596: FILE: drivers/infiniband/ulp/srp/ib_srp.c:493:
+	printk(KERN_ERR PFX "reconnect failed, removing target port.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#623: FILE: drivers/infiniband/ulp/srp/ib_srp.c:520:
+		return sizeof (struct srp_cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#627: FILE: drivers/infiniband/ulp/srp/ib_srp.c:524:
+		printk(KERN_WARNING PFX "Unhandled data direction %d\n",

CHECK:SPACING: No space is necessary after a cast
#641: FILE: drivers/infiniband/ulp/srp/ib_srp.c:538:
+			struct srp_direct_buf *buf = (void *) cmd->add_data;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: drivers/infiniband/ulp/srp/ib_srp.c:546:
+			len = sizeof (struct srp_cmd) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: drivers/infiniband/ulp/srp/ib_srp.c:547:
+				sizeof (struct srp_direct_buf);

CHECK:SPACING: No space is necessary after a cast
#652: FILE: drivers/infiniband/ulp/srp/ib_srp.c:549:
+			struct srp_indirect_buf *buf = (void *) cmd->add_data;

WARNING:SIZEOF_PARENTHESIS: sizeof *cmd should be sizeof(*cmd)
#663: FILE: drivers/infiniband/ulp/srp/ib_srp.c:560:
+							  sizeof *cmd +

WARNING:SIZEOF_PARENTHESIS: sizeof *buf should be sizeof(*buf)
#664: FILE: drivers/infiniband/ulp/srp/ib_srp.c:561:
+							  sizeof *buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: drivers/infiniband/ulp/srp/ib_srp.c:565:
+				cpu_to_be32(n * sizeof (struct srp_direct_buf));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#681: FILE: drivers/infiniband/ulp/srp/ib_srp.c:578:
+			len = sizeof (struct srp_cmd) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: drivers/infiniband/ulp/srp/ib_srp.c:579:
+				sizeof (struct srp_indirect_buf) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#683: FILE: drivers/infiniband/ulp/srp/ib_srp.c:580:
+				n * sizeof (struct srp_direct_buf);

CHECK:SPACING: No space is necessary after a cast
#686: FILE: drivers/infiniband/ulp/srp/ib_srp.c:583:
+		struct srp_direct_buf *buf = (void *) cmd->add_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#693: FILE: drivers/infiniband/ulp/srp/ib_srp.c:590:
+			printk(KERN_WARNING PFX "unable to map %p/%d (dir %d)\n",

CHECK:SPACING: No space is necessary after a cast
#694: FILE: drivers/infiniband/ulp/srp/ib_srp.c:591:
+			       scmnd->request_buffer, (int) scmnd->request_bufflen,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: drivers/infiniband/ulp/srp/ib_srp.c:602:
+		len = sizeof (struct srp_cmd) + sizeof (struct srp_direct_buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: drivers/infiniband/ulp/srp/ib_srp.c:602:
+		len = sizeof (struct srp_cmd) + sizeof (struct srp_direct_buf);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#713: FILE: drivers/infiniband/ulp/srp/ib_srp.c:610:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#721: FILE: drivers/infiniband/ulp/srp/ib_srp.c:618:
+	if (!scmnd->request_buffer ||
[...]
+	    return;

WARNING:TABSTOP: Statements should start on a tabstop
#724: FILE: drivers/infiniband/ulp/srp/ib_srp.c:621:
+	    return;

CHECK:SPACING: No space is necessary after a cast
#728: FILE: drivers/infiniband/ulp/srp/ib_srp.c:625:
+			     (struct scatterlist *) scmnd->request_buffer,

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/infiniband/ulp/srp/ib_srp.c:629:
+				 be64_to_cpu(((struct srp_direct_buf *) cmd->add_data)->va),

CHECK:SPACING: No space is necessary after a cast
#745: FILE: drivers/infiniband/ulp/srp/ib_srp.c:642:
+	delta = (s32) be32_to_cpu(rsp->req_lim_delta);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#760: FILE: drivers/infiniband/ulp/srp/ib_srp.c:657:
+^I^Iiu ^I      = req->cmd;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#761: FILE: drivers/infiniband/ulp/srp/ib_srp.c:658:
+^I^Iscmnd ^I      = req->scmnd;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#778: FILE: drivers/infiniband/ulp/srp/ib_srp.c:675:
+		if (!req->tsk_mgmt) {
[...]
+		} else
[...]

CHECK:SPACING: No space is necessary after a cast
#780: FILE: drivers/infiniband/ulp/srp/ib_srp.c:677:
+			scmnd->host_scribble = (void *) -1L;

CHECK:BRACES: Unbalanced braces around else statement
#786: FILE: drivers/infiniband/ulp/srp/ib_srp.c:683:
+		} else

CHECK:SPACING: No space is necessary after a cast
#810: FILE: drivers/infiniband/ulp/srp/ib_srp.c:707:
+	opcode = *(u8 *) iu->buf;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#815: FILE: drivers/infiniband/ulp/srp/ib_srp.c:712:
+		printk(KERN_ERR PFX "recv completion, opcode 0x%02x\n", opcode);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#819: FILE: drivers/infiniband/ulp/srp/ib_srp.c:716:
+				printk(KERN_ERR "  [%02x] ", i);

CHECK:SPACING: No space is necessary after a cast
#820: FILE: drivers/infiniband/ulp/srp/ib_srp.c:717:
+			printk(" %02x", ((u8 *) iu->buf)[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#820: FILE: drivers/infiniband/ulp/srp/ib_srp.c:717:
+			printk(" %02x", ((u8 *) iu->buf)[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#822: FILE: drivers/infiniband/ulp/srp/ib_srp.c:719:
+				printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#826: FILE: drivers/infiniband/ulp/srp/ib_srp.c:723:
+			printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#836: FILE: drivers/infiniband/ulp/srp/ib_srp.c:733:
+		printk(KERN_WARNING PFX "Got target logout request\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#840: FILE: drivers/infiniband/ulp/srp/ib_srp.c:737:
+		printk(KERN_WARNING PFX "Unhandled SRP opcode 0x%02x\n", opcode);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#859: FILE: drivers/infiniband/ulp/srp/ib_srp.c:756:
+			printk(KERN_ERR PFX "failed %s status %d\n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#885: FILE: drivers/infiniband/ulp/srp/ib_srp.c:782:
+^Inext ^I = target->rx_head & (SRP_RQ_SIZE - 1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#887: FILE: drivers/infiniband/ulp/srp/ib_srp.c:784:
+^Iiu ^I = target->rx_ring[next];$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#941: FILE: drivers/infiniband/ulp/srp/ib_srp.c:838:
+		printk(KERN_ERR PFX "Target has req_lim %d\n", target->req_lim);

CHECK:SPACING: No space is necessary after a cast
#997: FILE: drivers/infiniband/ulp/srp/ib_srp.c:894:
+	scmnd->host_scribble = (void *) req_index;

WARNING:SIZEOF_PARENTHESIS: sizeof *cmd should be sizeof(*cmd)
#1000: FILE: drivers/infiniband/ulp/srp/ib_srp.c:897:
+	memset(cmd, 0, sizeof *cmd);

CHECK:SPACING: No space is necessary after a cast
#1003: FILE: drivers/infiniband/ulp/srp/ib_srp.c:900:
+	cmd->lun    = cpu_to_be64((u64) scmnd->device->lun << 48);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1016: FILE: drivers/infiniband/ulp/srp/ib_srp.c:913:
+		printk(KERN_ERR PFX "Failed to map data\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1021: FILE: drivers/infiniband/ulp/srp/ib_srp.c:918:
+		printk(KERN_ERR PFX "Recv failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1029: FILE: drivers/infiniband/ulp/srp/ib_srp.c:926:
+		printk(KERN_ERR PFX "Send failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1092: FILE: drivers/infiniband/ulp/srp/ib_srp.c:989:
+		printk(KERN_DEBUG PFX "Sending CM REQ failed\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *qp_attr should be sizeof(*qp_attr)
#1116: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1013:
+		qp_attr = kmalloc(sizeof *qp_attr, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1154: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1051:
+		printk(KERN_DEBUG PFX "REJ received\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1177: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1074:
+			printk(KERN_DEBUG PFX "Topspin/Cisco redirect to target port GID %016llx%016llx\n",

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1178: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1075:
+			       (unsigned long long) be64_to_cpu(target->path.dgid.global.subnet_prefix),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#1178: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1075:
+			       (unsigned long long) be64_to_cpu(target->path.dgid.global.subnet_prefix),

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1179: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1076:
+			       (unsigned long long) be64_to_cpu(target->path.dgid.global.interface_id));

CHECK:SPACING: No space is necessary after a cast
#1179: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1076:
+			       (unsigned long long) be64_to_cpu(target->path.dgid.global.interface_id));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1183: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1080:
+			printk(KERN_WARNING "  REJ reason 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1192: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1089:
+		printk(KERN_ERR PFX "MRA received\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1199: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1096:
+		printk(KERN_ERR PFX "connection closed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1207: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1104:
+		printk(KERN_WARNING PFX "Unhandled CM event %d\n", event->event);

CHECK:SPACING: No space is necessary after a cast
#1230: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1127:
+	if (scmnd->host_scribble == (void *) -1L)

CHECK:SPACING: No space is necessary after a cast
#1233: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1130:
+	req_index = (long) scmnd->host_scribble;

WARNING:SIZEOF_PARENTHESIS: sizeof *tsk_mgmt should be sizeof(*tsk_mgmt)
#1243: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1140:
+	memset(tsk_mgmt, 0, sizeof *tsk_mgmt);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1245: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1142:
+^Itsk_mgmt->opcode ^I= SRP_TSK_MGMT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1246: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1143:
+^Itsk_mgmt->lun ^I^I= cpu_to_be64((u64) scmnd->device->lun << 48);$

CHECK:SPACING: No space is necessary after a cast
#1246: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1143:
+	tsk_mgmt->lun 		= cpu_to_be64((u64) scmnd->device->lun << 48);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1247: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1144:
+^Itsk_mgmt->tag ^I^I= req_index | SRP_TAG_TSK_MGMT;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1249: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1146:
+^Itsk_mgmt->task_tag ^I= req_index;$

WARNING:SIZEOF_PARENTHESIS: sizeof tsk_mgmt should be sizeof(tsk_mgmt)
#1251: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1148:
+	if (__srp_post_send(target, iu, sizeof tsk_mgmt))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1280: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1177:
+	printk(KERN_ERR "SRP abort called\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1287: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1184:
+	printk(KERN_ERR "SRP reset_device called\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1297: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1194:
+	printk(KERN_ERR PFX "SRP reset_host called\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1323: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1220:
+	sprintf(target->target_name, "SRP.T10:%016llX",
+		 (unsigned long long) be64_to_cpu(target->id_ext));

CHECK:SPACING: No space is necessary after a cast
#1323: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1220:
+		 (unsigned long long) be64_to_cpu(target->id_ext));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1378: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1275:
+^I{ SRP_OPT_ID_EXT,^I"id_ext=%s" ^I},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1379: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1276:
+^I{ SRP_OPT_IOC_GUID,^I"ioc_guid=%s" ^I},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1380: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1277:
+^I{ SRP_OPT_DGID,^I^I"dgid=%s" ^I},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1381: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1278:
+^I{ SRP_OPT_PKEY,^I^I"pkey=%x" ^I},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1383: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1280:
+^I{ SRP_OPT_MAX_SECT,     "max_sect=%d" ^I},$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1384: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1281:
+^I{ SRP_OPT_ERR,^I^INULL ^I^I}$

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#1412: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1309:
+			target->id_ext = cpu_to_be64(simple_strtoull(p, NULL, 16));

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#1418: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1315:
+			target->ioc_guid = cpu_to_be64(simple_strtoull(p, NULL, 16));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1428: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1325:
+				strlcpy(dgid, p + i * 2, 3);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1429: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1326:
+				target->path.dgid.raw[i] = simple_strtoul(dgid, NULL, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#1441: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1338:
+			target->service_id = cpu_to_be64(simple_strtoull(p, NULL, 16));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1475: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1372:
+				      sizeof (struct srp_target_port));

WARNING:SIZEOF_PARENTHESIS: sizeof *target should be sizeof(*target)
#1480: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1377:
+	memset(target, 0, sizeof *target);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1504: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1401:
+	printk(KERN_DEBUG PFX "new target: id_ext %016llx ioc_guid %016llx pkey %04x "

WARNING:SPLIT_STRING: quoted string split across lines
#1505: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1402:
+	printk(KERN_DEBUG PFX "new target: id_ext %016llx ioc_guid %016llx pkey %04x "
+	       "service_id %016llx dgid %04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x\n",

CHECK:SPACING: No space is necessary after a cast
#1506: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1403:
+	       (unsigned long long) be64_to_cpu(target->id_ext),

CHECK:SPACING: No space is necessary after a cast
#1507: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1404:
+	       (unsigned long long) be64_to_cpu(target->ioc_guid),

CHECK:SPACING: No space is necessary after a cast
#1509: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1406:
+	       (unsigned long long) be64_to_cpu(target->service_id),

CHECK:SPACING: No space is necessary after a cast
#1510: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1407:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[0]),

CHECK:SPACING: No space is necessary after a cast
#1511: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1408:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[2]),

CHECK:SPACING: No space is necessary after a cast
#1512: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1409:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[4]),

CHECK:SPACING: No space is necessary after a cast
#1513: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1410:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[6]),

CHECK:SPACING: No space is necessary after a cast
#1514: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1411:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[8]),

CHECK:SPACING: No space is necessary after a cast
#1515: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1412:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[10]),

CHECK:SPACING: No space is necessary after a cast
#1516: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1413:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[12]),

CHECK:SPACING: No space is necessary after a cast
#1517: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1414:
+	       (int) be16_to_cpu(*(__be16 *) &target->path.dgid.raw[14]));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1527: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1424:
+		printk(KERN_ERR PFX "Connection failed\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1556: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1453:
+static CLASS_DEVICE_ATTR(add_target, S_IWUSR, NULL, srp_create_target);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#1563: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1460:
+	host = kzalloc(sizeof *host, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *dev_attr should be sizeof(*dev_attr)
#1622: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1519:
+	dev_attr = kmalloc(sizeof *dev_attr, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1627: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1524:
+		printk(KERN_WARNING PFX "Couldn't query node GUID for %s.\n",

WARNING:SIZEOF_PARENTHESIS: sizeof *dev_list should be sizeof(*dev_list)
#1632: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1529:
+	dev_list = kmalloc(sizeof *dev_list, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1719: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1616:
+		printk(KERN_ERR PFX "couldn't register class infiniband_srp\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1725: FILE: drivers/infiniband/ulp/srp/ib_srp.c:1622:
+		printk(KERN_ERR PFX "couldn't register IB client\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1746: FILE: drivers/infiniband/ulp/srp/ib_srp.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1777: FILE: drivers/infiniband/ulp/srp/ib_srp.h:32:
+ * $Id: ib_srp.h 3394 2005-09-13 05:04:31Z roland $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1804: FILE: drivers/infiniband/ulp/srp/ib_srp.h:59:
+^ISRP_RQ_SHIFT    ^I= 6,$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1812: FILE: drivers/infiniband/ulp/srp/ib_srp.h:67:
+#define SRP_OP_RECV		(1 << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1814: FILE: drivers/infiniband/ulp/srp/ib_srp.h:69:
+				  sizeof (struct srp_cmd) -		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1815: FILE: drivers/infiniband/ulp/srp/ib_srp.h:70:
+				  sizeof (struct srp_indirect_buf)) / 16)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1868: FILE: drivers/infiniband/ulp/srp/ib_srp.h:123:
+	unsigned		rx_head;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1869: FILE: drivers/infiniband/ulp/srp/ib_srp.h:124:
+	unsigned		rx_tail;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1872: FILE: drivers/infiniband/ulp/srp/ib_srp.h:127:
+	unsigned		tx_head;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1873: FILE: drivers/infiniband/ulp/srp/ib_srp.h:128:
+	unsigned		tx_tail;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1947: FILE: drivers/infiniband/ulp/srp/ib_srp.h:202:
+	struct srp_direct_buf	desc_list[0] __attribute__((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2014: FILE: drivers/infiniband/ulp/srp/ib_srp.h:269:
+	u8	reserved2[4];
+	__be64	lun __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2014: FILE: drivers/infiniband/ulp/srp/ib_srp.h:269:
+	__be64	lun __attribute__((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#2035: FILE: drivers/infiniband/ulp/srp/ib_srp.h:290:
+	u8	reserved2[4];
+	__be64	lun __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2035: FILE: drivers/infiniband/ulp/srp/ib_srp.h:290:
+	__be64	lun __attribute__((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151663.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 120 warnings, 39 checks, 1985 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151663.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
