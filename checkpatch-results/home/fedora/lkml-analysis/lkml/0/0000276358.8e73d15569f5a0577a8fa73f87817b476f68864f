WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> The most _common_ bug (and the one I don't see any code for at all in your

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#200: FILE: arch/ppc64/kernel/entry.S:497:
+	mtmsrd	r10,1		/* reenable interrupts */
 	      	     		   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#225: FILE: arch/ppc64/kernel/process.c:70:
+ * Make sure the floating-point register state in the
+ * the thread_struct is up to date for task tsk.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#248: FILE: arch/ppc64/kernel/process.c:93:
+			BUG_ON(tsk != current);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#293: FILE: arch/ppc64/kernel/process.c:146:
+ * Make sure the VMX/Altivec register state in the
+ * the thread_struct is up to date for task tsk.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: arch/ppc64/kernel/process.c:155:
+			BUG_ON(tsk != current);

CHECK:CAMELCASE: Avoid CamelCase: <xRtas>
#471: FILE: arch/ppc64/kernel/rtas.c:75:
+	args = &(get_paca()->xRtas);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptep"
#613: FILE: arch/ppc64/mm/hash_utils.c:316:
+		if (ptep == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#730: FILE: include/asm-ppc64/system.h:114:
+extern void flush_fp_to_thread(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#730: FILE: include/asm-ppc64/system.h:114:
+extern void flush_fp_to_thread(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#731: FILE: include/asm-ppc64/system.h:115:
+extern void flush_altivec_to_thread(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#731: FILE: include/asm-ppc64/system.h:115:
+extern void flush_altivec_to_thread(struct task_struct *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 4 checks, 610 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
