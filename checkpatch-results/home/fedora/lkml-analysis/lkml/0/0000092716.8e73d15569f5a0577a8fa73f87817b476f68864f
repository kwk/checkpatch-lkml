CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: fs/sysfs/dir.c:61:
+int sysfs_dirent_exist(struct sysfs_dirent *parent_sd,
+			  const unsigned char *new)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: fs/sysfs/dir.c:63:
+	struct sysfs_dirent * sd;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#65: FILE: fs/sysfs/dir.c:68:
+			const unsigned char *existing = sysfs_get_name(sd);
+			if (strcmp(existing, new))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: fs/sysfs/dir.c:78:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: fs/sysfs/dir.c:131:
+ ^I^Iif (sysfs_dirent_exist(p->d_fsdata, n))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: fs/sysfs/dir.c:131:
+ ^I^Iif (sysfs_dirent_exist(p->d_fsdata, n))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: fs/sysfs/dir.c:131:
+ ^I^Iif (sysfs_dirent_exist(p->d_fsdata, n))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/sysfs/dir.c:132:
+  ^I^I^Ierror = -EEXIST;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: fs/sysfs/dir.c:132:
+  ^I^I^Ierror = -EEXIST;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/sysfs/dir.c:132:
+  ^I^I^Ierror = -EEXIST;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: fs/sysfs/dir.c:133:
+  ^I^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: fs/sysfs/dir.c:133:
+  ^I^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: fs/sysfs/dir.c:133:
+  ^I^Ielse$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: fs/sysfs/dir.c:135:
+			error = sysfs_make_dirent(p->d_fsdata, *d, k, mode,
+								SYSFS_DIR);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: fs/sysfs/sysfs.h:8:
+extern int sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysfs_dirent *' should also have an identifier name
#139: FILE: fs/sysfs/sysfs.h:8:
+extern int sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const unsigned char *' should also have an identifier name
#139: FILE: fs/sysfs/sysfs.h:8:
+extern int sysfs_dirent_exist(struct sysfs_dirent *, const unsigned char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 9 warnings, 4 checks, 80 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
