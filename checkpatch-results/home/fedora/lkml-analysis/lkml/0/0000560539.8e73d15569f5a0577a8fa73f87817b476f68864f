WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -Nur --exclude=Documentation linux-vanila/fs/buffer.c linux-reiser/fs/buffer.c

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#32: FILE: fs/buffer.c:830:
+void set_buffer_async_io(struct buffer_head *bh) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited before semicolon
#33: FILE: fs/buffer.c:831:
+	bh->b_end_io = end_buffer_io_async ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: fs/reiserfs/inode.c:1570:
+static int map_block_for_writepage(struct inode *inode, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#56: FILE: fs/reiserfs/inode.c:1570:
+static int map_block_for_writepage(struct inode *inode, 
 			       struct buffer_head *bh_result, 
                                unsigned long block) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: fs/reiserfs/inode.c:1571:
+static int map_block_for_writepage(struct inode *inode, 
 			       struct buffer_head *bh_result, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: fs/reiserfs/inode.c:1573:
+                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: fs/reiserfs/inode.c:1573:
+                               $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: fs/reiserfs/inode.c:1573:
+                               $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#59: FILE: fs/reiserfs/inode.c:1573:
                                unsigned long block) {
+                               

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: fs/reiserfs/inode.c:1574:
+                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: fs/reiserfs/inode.c:1574:
+                               $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#60: FILE: fs/reiserfs/inode.c:1574:
+                               
+                               

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/reiserfs/inode.c:1574:
+                               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: fs/reiserfs/inode.c:1575:
+                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: fs/reiserfs/inode.c:1575:
+                               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs/reiserfs/inode.c:1575:
+                               $

WARNING:SPACING: space prohibited before semicolon
#76: FILE: fs/reiserfs/inode.c:1630:
+	fs_gen = get_generation(inode->i_sb) ;

WARNING:SPACING: space prohibited before semicolon
#77: FILE: fs/reiserfs/inode.c:1631:
+	copy_item_head(&tmp_ih, ih) ;

WARNING:SPACING: space prohibited before semicolon
#78: FILE: fs/reiserfs/inode.c:1632:
+	reiserfs_prepare_for_journal(inode->i_sb, bh, 1) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#79: FILE: fs/reiserfs/inode.c:1633:
+	if (fs_changed (fs_gen, inode->i_sb) && item_moved (&tmp_ih, &path)) {
+	    reiserfs_restore_prepared_buffer(inode->i_sb, bh) ;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: fs/reiserfs/inode.c:1633:
+	if (fs_changed (fs_gen, inode->i_sb) && item_moved (&tmp_ih, &path)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: fs/reiserfs/inode.c:1633:
+	if (fs_changed (fs_gen, inode->i_sb) && item_moved (&tmp_ih, &path)) {

WARNING:SPACING: space prohibited before semicolon
#80: FILE: fs/reiserfs/inode.c:1634:
+	    reiserfs_restore_prepared_buffer(inode->i_sb, bh) ;

WARNING:TABSTOP: Statements should start on a tabstop
#81: FILE: fs/reiserfs/inode.c:1635:
+	    goto research;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: fs/reiserfs/inode.c:1642:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#102: FILE: fs/reiserfs/inode.c:1669:
 	if (!retval) {
+	    if (!buffer_mapped(bh_result) || bh_result->b_blocknr == 0) {

WARNING:TABSTOP: Statements should start on a tabstop
#107: FILE: fs/reiserfs/inode.c:1670:
+	    if (!buffer_mapped(bh_result) || bh_result->b_blocknr == 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#117: FILE: fs/reiserfs/inode.c:1681:
+/* helper func to get a buffer head ready for writepage to send to
+** ll_rw_block

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#119: FILE: fs/reiserfs/inode.c:1683:
+static inline void ready_bh_for_writepage(struct buffer_head *bh) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/reiserfs/inode.c:1684:
+    atomic_inc(&bh->b_count) ; /* async end_io handler decs this */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/reiserfs/inode.c:1685:
+    set_buffer_async_io(bh) ;$

WARNING:SPACING: space prohibited before semicolon
#121: FILE: fs/reiserfs/inode.c:1685:
+    set_buffer_async_io(bh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/reiserfs/inode.c:1686:
+    set_bit(BH_Dirty, &bh->b_state) ;$

WARNING:SPACING: space prohibited before semicolon
#122: FILE: fs/reiserfs/inode.c:1686:
+    set_bit(BH_Dirty, &bh->b_state) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/reiserfs/inode.c:1687:
+    set_bit(BH_Uptodate, &bh->b_state) ;$

WARNING:SPACING: space prohibited before semicolon
#123: FILE: fs/reiserfs/inode.c:1687:
+    set_bit(BH_Uptodate, &bh->b_state) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: fs/reiserfs/inode.c:1699:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/reiserfs/inode.c:1699:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: fs/reiserfs/inode.c:1700:
+    struct buffer_head *arr[PAGE_CACHE_SIZE/512] ;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#135: FILE: fs/reiserfs/inode.c:1700:
+    struct buffer_head *arr[PAGE_CACHE_SIZE/512] ;
                                            ^

WARNING:SPACING: space prohibited before semicolon
#135: FILE: fs/reiserfs/inode.c:1700:
+    struct buffer_head *arr[PAGE_CACHE_SIZE/512] ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: fs/reiserfs/inode.c:1701:
+    int nr = 0 ;$

WARNING:SPACING: space prohibited before semicolon
#136: FILE: fs/reiserfs/inode.c:1701:
+    int nr = 0 ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: fs/reiserfs/inode.c:1702:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/reiserfs/inode.c:1702:
+    $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#145: FILE: fs/reiserfs/inode.c:1709:
+    /* last page in the file, zero out any contents past the
+    ** last byte in the file

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: fs/reiserfs/inode.c:1710:
+    */    $

WARNING:SPACING: space prohibited before semicolon
#152: FILE: fs/reiserfs/inode.c:1715:
+		error =  -EIO ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: fs/reiserfs/inode.c:1716:
+^I^Igoto fail ;^I^I$

WARNING:SPACING: space prohibited before semicolon
#153: FILE: fs/reiserfs/inode.c:1716:
+		goto fail ;		

WARNING:SPACING: space prohibited before semicolon
#168: FILE: fs/reiserfs/inode.c:1733:
+		ready_bh_for_writepage(bh) ;

WARNING:SPACING: space prohibited before semicolon
#169: FILE: fs/reiserfs/inode.c:1734:
+		arr[nr++] = bh ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#175: FILE: fs/reiserfs/inode.c:1739:
+		if ((error = map_block_for_writepage(inode, bh, block))) {
 		    goto fail ;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#175: FILE: fs/reiserfs/inode.c:1739:
+		if ((error = map_block_for_writepage(inode, bh, block))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#175: FILE: fs/reiserfs/inode.c:1739:
+		if ((error = map_block_for_writepage(inode, bh, block))) {
 		    goto fail ;
 		}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#179: FILE: fs/reiserfs/inode.c:1743:
+		/* map_block_for_writepage either found an unformatted node
+		** and mapped it for us, or it found a direct item

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: fs/reiserfs/inode.c:1744:
+^I^I** and logged the changes.  $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#182: FILE: fs/reiserfs/inode.c:1746:
+		if (buffer_mapped(bh) && bh->b_blocknr != 0) {
+		    ready_bh_for_writepage(bh) ;

WARNING:SPACING: space prohibited before semicolon
#183: FILE: fs/reiserfs/inode.c:1747:
+		    ready_bh_for_writepage(bh) ;

WARNING:SPACING: space prohibited before semicolon
#184: FILE: fs/reiserfs/inode.c:1748:
+		    arr[nr++] = bh ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: fs/reiserfs/inode.c:1756:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: fs/reiserfs/inode.c:1756:
+    $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#195: FILE: fs/reiserfs/inode.c:1758:
+    /* if this page only had a direct item, it is very possible for
+    ** nr == 0 without there being any kind of error.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: fs/reiserfs/inode.c:1760:
+    if (nr) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#197: FILE: fs/reiserfs/inode.c:1760:
+    if (nr) {
[...]
+    } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: fs/reiserfs/inode.c:1761:
+        ll_rw_block(WRITE, nr, arr) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: fs/reiserfs/inode.c:1761:
+        ll_rw_block(WRITE, nr, arr) ;$

WARNING:SPACING: space prohibited before semicolon
#198: FILE: fs/reiserfs/inode.c:1761:
+        ll_rw_block(WRITE, nr, arr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/reiserfs/inode.c:1762:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: fs/reiserfs/inode.c:1763:
+        UnlockPage(page) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: fs/reiserfs/inode.c:1763:
+        UnlockPage(page) ;$

WARNING:SPACING: space prohibited before semicolon
#200: FILE: fs/reiserfs/inode.c:1763:
+        UnlockPage(page) ;

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#200: FILE: fs/reiserfs/inode.c:1763:
+        UnlockPage(page) ;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: fs/reiserfs/inode.c:1764:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: fs/reiserfs/inode.c:1771:
+    if (nr) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#208: FILE: fs/reiserfs/inode.c:1771:
+    if (nr) {
[...]
+    } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: fs/reiserfs/inode.c:1772:
+        ll_rw_block(WRITE, nr, arr) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/reiserfs/inode.c:1772:
+        ll_rw_block(WRITE, nr, arr) ;$

WARNING:SPACING: space prohibited before semicolon
#209: FILE: fs/reiserfs/inode.c:1772:
+        ll_rw_block(WRITE, nr, arr) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/reiserfs/inode.c:1773:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: fs/reiserfs/inode.c:1774:
+        UnlockPage(page) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/reiserfs/inode.c:1774:
+        UnlockPage(page) ;$

WARNING:SPACING: space prohibited before semicolon
#211: FILE: fs/reiserfs/inode.c:1774:
+        UnlockPage(page) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: fs/reiserfs/inode.c:1775:
+    }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: fs/reiserfs/inode.c:1792:
+static int reiserfs_writepage (struct page * page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: fs/reiserfs/inode.c:1792:
+static int reiserfs_writepage (struct page * page)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: fs/reiserfs/journal.c:1765:
+  INIT_LIST_HEAD(&ct->task.list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: fs/reiserfs/journal.c:1805:
+  printk("reiserfs_journal_commit_thread\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: fs/reiserfs/journal.c:1805:
+  printk("reiserfs_journal_commit_thread\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#253: FILE: fs/reiserfs/journal.c:1815:
   while(1) {
+    while(!list_empty(&reiserfs_commit_thread_tq)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/reiserfs/journal.c:1816:
+    while(!list_empty(&reiserfs_commit_thread_tq)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#257: FILE: fs/reiserfs/journal.c:1816:
+    while(!list_empty(&reiserfs_commit_thread_tq)) {
+      printk("while\n");

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: fs/reiserfs/journal.c:1816:
+    while(!list_empty(&reiserfs_commit_thread_tq)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/reiserfs/journal.c:1817:
+      printk("while\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#258: FILE: fs/reiserfs/journal.c:1817:
+      printk("while\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/reiserfs/journal.c:1818:
+      my_run_task_queue(&reiserfs_commit_thread_tq) ;$

WARNING:SPACING: space prohibited before semicolon
#259: FILE: fs/reiserfs/journal.c:1818:
+      my_run_task_queue(&reiserfs_commit_thread_tq) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#263: FILE: fs/reiserfs/journal.c:1822:
     if (reiserfs_mounted_fs_count <= 0) {
+      printk("reiserfs_mounted_fs_count >=0\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/reiserfs/journal.c:1823:
+      printk("reiserfs_mounted_fs_count >=0\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#265: FILE: fs/reiserfs/journal.c:1823:
+      printk("reiserfs_mounted_fs_count >=0\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: fs/reiserfs/journal.c:1824:
+      my_run_task_queue(&reiserfs_commit_thread_tq) ;$

WARNING:SPACING: space prohibited before semicolon
#266: FILE: fs/reiserfs/journal.c:1824:
+      my_run_task_queue(&reiserfs_commit_thread_tq) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/reiserfs/journal.c:1826:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: fs/reiserfs/journal.c:1827:
+    ^Iprintk("reiserfs_mounted_fs_count < 0 :-)\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: fs/reiserfs/journal.c:1827:
+    ^Iprintk("reiserfs_mounted_fs_count < 0 :-)\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/reiserfs/journal.c:1827:
+    ^Iprintk("reiserfs_mounted_fs_count < 0 :-)\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: fs/reiserfs/journal.c:1827:
+    	printk("reiserfs_mounted_fs_count < 0 :-)\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: fs/reiserfs/journal.c:1829:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/reiserfs/journal.c:1829:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/reiserfs/journal.c:1829:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/reiserfs/journal.c:1830:
+    printk("wake_up\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: fs/reiserfs/journal.c:1830:
+    printk("wake_up\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/reiserfs/journal.c:1832:
+    printk("interruptible_sleep_on_timeout\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#274: FILE: fs/reiserfs/journal.c:1832:
+    printk("interruptible_sleep_on_timeout\n");

WARNING:SPACING: space prohibited before semicolon
#317: FILE: include/linux/fs.h:995:
+extern void set_buffer_async_io(struct buffer_head *bh) ;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: include/linux/fs.h:995:
+extern void set_buffer_async_io(struct buffer_head *bh) ;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#338: FILE: include/linux/reiserfs_fs.h:2088:
+			void (*f) (void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#338: FILE: include/linux/reiserfs_fs.h:2088:
+			void (*f) (void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#363: FILE: kernel/ksyms.c:162:
+EXPORT_SYMBOL(set_buffer_async_io); /* for reiserfs_writepage */

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560539.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 87 warnings, 6 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560539.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
