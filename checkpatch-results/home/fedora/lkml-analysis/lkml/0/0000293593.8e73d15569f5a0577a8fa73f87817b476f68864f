WARNING:REPEATED_WORD: Possible repeated word: 'patches'
#66: 
The third and fourth patches patches set the scene.  These are the most

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
Content-Disposition: attachment; filename="075-mem_acctdom_hugetlb_arch.txt";

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#108: FILE: arch/i386/mm/hugetlbpage.c:512:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#111: FILE: arch/i386/mm/hugetlbpage.c:515:
+	int committed =3D atomic_read(&vm_committed_space[VM_AD_HUGETLB]);
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#122: FILE: arch/i386/mm/hugetlbpage.c:524:
+			HPAGE_SIZE/1024,
 			          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: arch/i386/mm/hugetlbpage.c:533:
 }
+/* Return the number pages of memory we physically have, in PAGE_SIZE =

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#133: FILE: arch/i386/mm/hugetlbpage.c:534:
+/* Return the number pages of memory we physically have, in PAGE_SIZE =
+int hugetlb_total_pages(void)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#159: FILE: arch/i386/mm/hugetlbpage.c:578:
+	int committed =3D atomic_read(&vm_committed_space[VM_AD_HUGETLB]);
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#170: FILE: arch/i386/mm/hugetlbpage.c:587:
+			HPAGE_SIZE/1024,
 			          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#179: FILE: arch/i386/mm/hugetlbpage.c:598:
 }
+/* Return the number pages of memory we physically have, in PAGE_SIZE =

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#181: FILE: arch/i386/mm/hugetlbpage.c:599:
+/* Return the number pages of memory we physically have, in PAGE_SIZE =
+unsigned long hugetlb_total_pages(void)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#208: FILE: arch/i386/mm/hugetlbpage.c:898:
+	int committed =3D atomic_read(&vm_committed_space[VM_AD_HUGETLB]);
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#219: FILE: arch/i386/mm/hugetlbpage.c:907:
+			HPAGE_SIZE/1024,
 			          ^

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#220: FILE: arch/i386/mm/hugetlbpage.c:908:
+			K(commited));
 			  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#228: FILE: arch/i386/mm/hugetlbpage.c:918:
 }
+/* Return the number pages of memory we physically have, in PAGE_SIZE =

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#230: FILE: arch/i386/mm/hugetlbpage.c:919:
+/* Return the number pages of memory we physically have, in PAGE_SIZE =
+int hugetlb_total_pages(void)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#259: FILE: arch/i386/mm/hugetlbpage.c:485:
+	int committed =3D atomic_read(&vm_committed_space[VM_AD_HUGETLB]);
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#270: FILE: arch/i386/mm/hugetlbpage.c:494:
+			HPAGE_SIZE/1024,
 			          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#279: FILE: arch/i386/mm/hugetlbpage.c:503:
 }
+/* Return the number pages of memory we physically have, in PAGE_SIZE =

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#281: FILE: arch/i386/mm/hugetlbpage.c:504:
+/* Return the number pages of memory we physically have, in PAGE_SIZE =
+int hugetlb_total_pages(void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: include/linux/security.h:54:
+extern int cap_vm_enough_memory (int domain, long pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#428: FILE: include/linux/security.h:54:
+extern int cap_vm_enough_memory (int domain, long pages);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#447: FILE: include/linux/security.h:1026:
+	int (*vm_enough_memory) (int domain, long pages);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#456: FILE: include/linux/security.h:1279:
 }
+static inline int security_vm_enough_memory(int domain, long pages)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#468: FILE: include/linux/security.h:1950:
 }
+static inline int security_vm_enough_memory(int domain, long pages)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#487: FILE: kernel/fork.c:306:
+			if (VM_ACCTDOM(mpnt) =3D=3D VM_AD_DEFAULT)
 			                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#487: FILE: kernel/fork.c:306:
+			if (VM_ACCTDOM(mpnt) =3D=3D VM_AD_DEFAULT)
 			                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#487: FILE: kernel/fork.c:306:
+			if (VM_ACCTDOM(mpnt) =3D=3D VM_AD_DEFAULT)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#488: FILE: kernel/fork.c:307:
+				charge +=3D len;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#522: FILE: mm/mmap.c:476:
+	long acctdom =3D VM_AD_DEFAULT;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#526: FILE: mm/mmap.c:479:
+			acctdom =3D VM_AD_HUGETLB;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#535: FILE: mm/mmap.c:596:
+	if (acctdom =3D=3D VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) ||=20
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#535: FILE: mm/mmap.c:596:
+	if (acctdom =3D=3D VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) ||=20
 	               ^

ERROR:SPACING: spaces required around that '||' (ctx:WxO)
#535: FILE: mm/mmap.c:596:
+	if (acctdom =3D=3D VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) ||=20
 	                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#535: FILE: mm/mmap.c:596:
+	if (acctdom =3D=3D VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) ||=20
 	                                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#535: FILE: mm/mmap.c:596:
+	if (acctdom =3D=3D VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) ||=20

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#589: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#589: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&
 		                                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#589: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: mm/mprotect.c:177:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&
+				VM_ACCTDOM(vma) =3D=3D VM_AD_DEFAULT) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#590: FILE: mm/mprotect.c:177:
+				VM_ACCTDOM(vma) =3D=3D VM_AD_DEFAULT) {
 				                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#590: FILE: mm/mprotect.c:177:
+				VM_ACCTDOM(vma) =3D=3D VM_AD_DEFAULT) {
 				                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: mm/mremap.c:403:
+ ^I^Iif (security_vm_enough_memory(VM_ACCTDOM(vma), charged))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: mm/mremap.c:403:
+ ^I^Iif (security_vm_enough_memory(VM_ACCTDOM(vma), charged))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: mm/mremap.c:403:
+ ^I^Iif (security_vm_enough_memory(VM_ACCTDOM(vma), charged))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: mm/shmem.c:1197:
+		if (security_vm_enough_memory(VM_AD_DEFAULT,
+				VM_ACCT(maxpos) - VM_ACCT(inode->i_size))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: mm/shmem.c:1954:
+	if ((flags & VM_ACCOUNT) && security_vm_enough_memory(VM_AD_DEFAULT,
+			VM_ACCT(size)))

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#685: FILE: security/commoncap.c:317:
+	if (domain !=3D VM_AD_DEFAULT)
 	           ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#708: FILE: security/commoncap.c:118:
+	if (domain !=3D VM_AD_DEFAULT)
 	           ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#732: FILE: security/commoncap.c:1508:
+	if (domain !=3D VM_AD_DEFAULT)
 	           ^

CHECK:SPACING: No space is necessary after a cast
#765: FILE: arch/ia64/ia32/binfmt_elf32.c:171:
+			(PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#765: FILE: arch/ia64/ia32/binfmt_elf32.c:171:
+			(PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {
 			                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: arch/mips/kernel/sysirix.c:582:
+	if (security_vm_enough_memory(VM_AD_DEFAULT,
+			(newbrk-oldbrk) >> PAGE_SHIFT)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#780: FILE: arch/mips/kernel/sysirix.c:582:
+			(newbrk-oldbrk) >> PAGE_SHIFT)) {
 			       ^

CHECK:SPACING: No space is necessary after a cast
#797: FILE: arch/s390/kernel/compat_exec.c:60:
+			(PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#797: FILE: arch/s390/kernel/compat_exec.c:60:
+			(PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {
 			                                      ^

CHECK:SPACING: No space is necessary after a cast
#814: FILE: arch/x86_64/ia32/ia32_binfmt.c:349:
+			(PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#814: FILE: arch/x86_64/ia32/ia32_binfmt.c:349:
+			(PAGE_MASK & (unsigned long) bprm->p))>>PAGE_SHIFT)) {
 			                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#858: FILE: fs/proc/proc_misc.c:177:
+	committed =3D atomic_read(&vm_committed_space[VM_AD_DEFAULT]);
 	          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#875: FILE: include/linux/mman.h:16:
+extern void vm_acct_memory(int domain, long pages);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#902: FILE: include/linux/mman.h:120:
+typedef struct {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#905: FILE: include/linux/mman.h:123:
+#define MADV_NONE { {[0 ... VM_ACCTDOM_NR-1] =3D  0UL} }
                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#905: FILE: include/linux/mman.h:123:
+#define MADV_NONE { {[0 ... VM_ACCTDOM_NR-1] =3D  0UL} }
                                              ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#908: FILE: include/linux/mman.h:126:
+	madv->vec[domain] +=3D size;
 	                  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#910: FILE: include/linux/mman.h:128:
+}
+void vm_unacct_memory_domains(madv_t *madv);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#911: FILE: include/linux/mman.h:129:
+void vm_unacct_memory_domains(madv_t *madv);
+ =20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: include/linux/mman.h:129:
+ =20$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#911: FILE: include/linux/mman.h:129:
+ =20
  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#934: FILE: kernel/fork.c:270:
+	madv_t charge =3D MADV_NONE;
 	              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: kernel/fork.c:306:
+ ^I^I^Imadv_add(&charge, VM_ACCTDOM(mpnt), len);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#944: FILE: kernel/fork.c:306:
+ ^I^I^Imadv_add(&charge, VM_ACCTDOM(mpnt), len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: kernel/fork.c:306:
+ ^I^I^Imadv_add(&charge, VM_ACCTDOM(mpnt), len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: mm/memory.c:556:
+			madv_add(nr_accounted,
+				VM_ACCTDOM(vma), (end - start) >> PAGE_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#978: FILE: mm/memory.c:556:
+			madv_add(nr_accounted,
=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#986: FILE: mm/memory.c:606:
+	madv_t nr_accounted =3D MADV_NONE;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1004: FILE: mm/mmap.c:56:
+atomic_t vm_committed_space[VM_ACCTDOM_NR] =3D=20
                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1004: FILE: mm/mmap.c:56:
+atomic_t vm_committed_space[VM_ACCTDOM_NR] =3D=20
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: mm/mmap.c:57:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1005: FILE: mm/mmap.c:57:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };
                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1005: FILE: mm/mmap.c:57:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };
                                  ^

ERROR:SPACING: space prohibited after that open square bracket '['
#1005: FILE: mm/mmap.c:57:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };

ERROR:SPACING: space prohibited before that close square bracket ']'
#1005: FILE: mm/mmap.c:57:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };

ERROR:SPACING: spaces required around that '||' (ctx:WxO)
#1015: FILE: mm/mmap.c:597:
+	if (!(flags & MAP_NORESERVE) ||=20
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1015: FILE: mm/mmap.c:597:
+	if (!(flags & MAP_NORESERVE) ||=20
 	                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1015: FILE: mm/mmap.c:597:
+	if (!(flags & MAP_NORESERVE) ||=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1016: FILE: mm/mmap.c:598:
+	    (acctdom =3D=3D VM_AD_DEFAULT && sysctl_overcommit_memory > 1)) {
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1016: FILE: mm/mmap.c:598:
+	    (acctdom =3D=3D VM_AD_DEFAULT && sysctl_overcommit_memory > 1)) {
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1052: FILE: mm/mmap.c:1139:
+	madv_t nr_accounted =3D MADV_NONE;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1076: FILE: mm/mmap.c:1417:
+	madv_t nr_accounted =3D MADV_NONE;
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1099: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED))) {
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1099: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED))) {
 		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1134: FILE: mm/nommu.c:32:
+atomic_t vm_committed_space[VM_ACCTDOM_NR] =3D=20
                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1134: FILE: mm/nommu.c:32:
+atomic_t vm_committed_space[VM_ACCTDOM_NR] =3D=20
                                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1135: FILE: mm/nommu.c:33:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1135: FILE: mm/nommu.c:33:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };
                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1135: FILE: mm/nommu.c:33:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };
                                  ^

ERROR:SPACING: space prohibited after that open square bracket '['
#1135: FILE: mm/nommu.c:33:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };

ERROR:SPACING: space prohibited before that close square bracket ']'
#1135: FILE: mm/nommu.c:33:
+     { [ 0 ... VM_ACCTDOM_NR-1 ] =3D ATOMIC_INIT(0) };

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1217: FILE: mm/swap.c:373:
+	local =3D &__get_cpu_var(committed_space[domain]);
 	      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1217: FILE: mm/swap.c:373:
+	local =3D &__get_cpu_var(committed_space[domain]);
 	          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1249: FILE: mm/swapfile.c:1052:
+	 * from the default memory accounting domain to this device. */

CHECK:SPACING: No space is necessary after a cast
#1414: FILE: fs/hugetlbfs/inode.c:33:
+#define VM_ACCT(size)    (PAGE_CACHE_ALIGN(size) >> PAGE_SHIFT)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1431: FILE: fs/hugetlbfs/inode.c:204:
+	change =3D VM_ACCT(inode->i_size) - VM_ACCT(0);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1449: FILE: fs/hugetlbfs/inode.c:250:
+	change =3D VM_ACCT(inode->i_size) - VM_ACCT(0);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1470: FILE: fs/hugetlbfs/inode.c:350:
+	long change =3D 0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1479: FILE: fs/hugetlbfs/inode.c:363:
+		csize =3D i_size_read(inode);
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1484: FILE: fs/hugetlbfs/inode.c:365:
+		if (!(attr->ia_size & ~HPAGE_MASK))=20
 		                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1484: FILE: fs/hugetlbfs/inode.c:365:
+		if (!(attr->ia_size & ~HPAGE_MASK))=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1488: FILE: fs/hugetlbfs/inode.c:369:
+		change =3D VM_ACCT(csize) - VM_ACCT(attr->ia_size);
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1524: FILE: fs/hugetlbfs/inode.c:740:
+		error =3D -ENOMEM;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1524: FILE: fs/hugetlbfs/inode.c:740:
+		error =3D -ENOMEM;
 		          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1556: FILE: include/linux/hugetlb.h:52:
 }
+static inline unsigned long hugetlb_total_pages(void)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1572: FILE: security/commoncap.c:316:
+	if (domain =3D=3D VM_AD_HUGETLB) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1572: FILE: security/commoncap.c:316:
+	if (domain =3D=3D VM_AD_HUGETLB) {
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1572: FILE: security/commoncap.c:316:
+	if (domain =3D=3D VM_AD_HUGETLB) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1573: FILE: security/commoncap.c:317:
+		allowed =3D hugetlb_total_pages();
 		        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1585: FILE: security/commoncap.c:376:
+check:
      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1598: FILE: security/dummy.c:117:
+	if (domain =3D=3D VM_AD_HUGETLB) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1598: FILE: security/dummy.c:117:
+	if (domain =3D=3D VM_AD_HUGETLB) {
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1598: FILE: security/dummy.c:117:
+	if (domain =3D=3D VM_AD_HUGETLB) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1599: FILE: security/dummy.c:118:
+		allowed =3D hugetlb_total_pages();
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1616: FILE: security/selinux/hooks.c:1507:
+	if (domain =3D=3D VM_AD_HUGETLB) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1616: FILE: security/selinux/hooks.c:1507:
+	if (domain =3D=3D VM_AD_HUGETLB) {
 	              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1616: FILE: security/selinux/hooks.c:1507:
+	if (domain =3D=3D VM_AD_HUGETLB) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1617: FILE: security/selinux/hooks.c:1508:
+		allowed =3D hugetlb_total_pages();
 		        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1657: FILE: security/dummy.c:103:
 }
+/*

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293593.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 69 errors, 18 warnings, 39 checks, 1275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293593.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
