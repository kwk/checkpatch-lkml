WARNING:LINE_SPACING: Missing a blank line after declarations
#52: FILE: drivers/block/cpqarray.c:966:
+	struct buffer_head *xbh;
+	while(bh) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#52: FILE: drivers/block/cpqarray.c:966:
+	while(bh) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: drivers/block/cpqarray.c:969:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#95: FILE: drivers/block/cciss.c:174:
+static inline void addQ(CommandList_struct **Qptr, CommandList_struct *c)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Qptr>
#95: FILE: drivers/block/cciss.c:174:
+static inline void addQ(CommandList_struct **Qptr, CommandList_struct *c)

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/block/cciss.c:176:
+        if (*Qptr == NULL) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/block/cciss.c:176:
+        if (*Qptr == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Qptr"
#97: FILE: drivers/block/cciss.c:176:
+        if (*Qptr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/block/cciss.c:177:
+                *Qptr = c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/block/cciss.c:177:
+                *Qptr = c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/block/cciss.c:178:
+                c->next = c->prev = c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/block/cciss.c:178:
+                c->next = c->prev = c;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#99: FILE: drivers/block/cciss.c:178:
+                c->next = c->prev = c;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: drivers/block/cciss.c:179:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/block/cciss.c:179:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/block/cciss.c:180:
+                c->prev = (*Qptr)->prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/block/cciss.c:180:
+                c->prev = (*Qptr)->prev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/block/cciss.c:181:
+                c->next = (*Qptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/block/cciss.c:181:
+                c->next = (*Qptr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/block/cciss.c:182:
+                (*Qptr)->prev->next = c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/block/cciss.c:182:
+                (*Qptr)->prev->next = c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/block/cciss.c:183:
+                (*Qptr)->prev = c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/block/cciss.c:183:
+                (*Qptr)->prev = c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/block/cciss.c:184:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/block/cciss.c:184:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/block/cciss.c:187:
+static inline CommandList_struct *removeQ(CommandList_struct **Qptr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: drivers/block/cciss.c:188:
+static inline CommandList_struct *removeQ(CommandList_struct **Qptr, 
+						CommandList_struct *c)

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: drivers/block/cciss.c:190:
+        if (c && c->next != c) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/block/cciss.c:190:
+        if (c && c->next != c) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: drivers/block/cciss.c:191:
+                if (*Qptr == c) *Qptr = c->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/block/cciss.c:191:
+                if (*Qptr == c) *Qptr = c->next;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#112: FILE: drivers/block/cciss.c:191:
+                if (*Qptr == c) *Qptr = c->next;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: drivers/block/cciss.c:192:
+                c->prev->next = c->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/block/cciss.c:192:
+                c->prev->next = c->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: drivers/block/cciss.c:193:
+                c->next->prev = c->prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/block/cciss.c:193:
+                c->next->prev = c->prev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/block/cciss.c:194:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/block/cciss.c:194:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/block/cciss.c:195:
+                *Qptr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/block/cciss.c:195:
+                *Qptr = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/block/cciss.c:196:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/block/cciss.c:196:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/block/cciss.c:197:
+        return c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/block/cciss.c:197:
+        return c;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 18 warnings, 5 checks, 116 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259430.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
