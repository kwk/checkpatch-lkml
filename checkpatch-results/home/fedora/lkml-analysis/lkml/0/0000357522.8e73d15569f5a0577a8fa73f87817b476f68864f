WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#51: 
> If the IO fairness still doesnt
                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: fs/buffer.c:1050:
+		DECLARE_WAITQUEUE(wait, current);
+		add_wait_queue_exclusive(&bdflush_progress_wait, &wait);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#120: FILE: fs/buffer.c:1057:
+		} while(gen == atomic_read(&bdflush_generation));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#123: FILE: fs/buffer.c:1060:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#132: FILE: fs/buffer.c:2962:
+static void poke_throttled_writers(int all) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#134: FILE: fs/buffer.c:2964:
+	smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#135: FILE: fs/buffer.c:2965:
+	if (waitqueue_active(&bdflush_progress_wait)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: fs/buffer.c:3021:
+^I^I^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#198: FILE: drivers/block/ll_rw_blk.c:184:
+		printk("blk_cleanup_queue: leaked sectors (%d)\n", atomic_read(&q->nr_sectors));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/block/ll_rw_blk.c:230:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/block/ll_rw_blk.c:230:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: drivers/block/ll_rw_blk.c:231:
+void blk_queue_throttle_sectors(request_queue_t * q, int active)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/block/ll_rw_blk.c:427:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: drivers/block/ll_rw_blk.c:427:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/block/ll_rw_blk.c:427:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/block/ll_rw_blk.c:428:
+ ^I^Iq->rq.count++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/block/ll_rw_blk.c:428:
+ ^I^Iq->rq.count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/block/ll_rw_blk.c:428:
+ ^I^Iq->rq.count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: drivers/block/ll_rw_blk.c:433:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: drivers/block/ll_rw_blk.c:433:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/block/ll_rw_blk.c:433:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/block/ll_rw_blk.c:434:
+ ^I * Wakeup waiters after both one quarter of the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: drivers/block/ll_rw_blk.c:434:
+ ^I * Wakeup waiters after both one quarter of the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: drivers/block/ll_rw_blk.c:435:
+ ^I * max-in-fligh queue and one quarter of the requests$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: drivers/block/ll_rw_blk.c:435:
+ ^I * max-in-fligh queue and one quarter of the requests$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/block/ll_rw_blk.c:436:
+ ^I * are available again.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: drivers/block/ll_rw_blk.c:436:
+ ^I * are available again.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/block/ll_rw_blk.c:437:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/block/ll_rw_blk.c:437:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: drivers/block/ll_rw_blk.c:442:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: drivers/block/ll_rw_blk.c:442:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/block/ll_rw_blk.c:442:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: drivers/block/ll_rw_blk.c:443:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/block/ll_rw_blk.c:443:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/block/ll_rw_blk.c:444:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: drivers/block/ll_rw_blk.c:444:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/block/ll_rw_blk.c:444:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: drivers/block/ll_rw_blk.c:445:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/block/ll_rw_blk.c:445:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: drivers/block/ll_rw_blk.c:446:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: drivers/block/ll_rw_blk.c:446:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/block/ll_rw_blk.c:446:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#269: FILE: drivers/block/ll_rw_blk.c:446:
+ 	BUG_ON(!q->batch_sectors);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: drivers/block/ll_rw_blk.c:447:
+ ^Iatomic_set(&q->nr_sectors, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: drivers/block/ll_rw_blk.c:447:
+ ^Iatomic_set(&q->nr_sectors, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/block/ll_rw_blk.c:447:
+ ^Iatomic_set(&q->nr_sectors, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: drivers/block/ll_rw_blk.c:457:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: drivers/block/ll_rw_blk.c:457:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/block/ll_rw_blk.c:457:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/block/ll_rw_blk.c:458:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/block/ll_rw_blk.c:458:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/block/ll_rw_blk.c:459:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/block/ll_rw_blk.c:459:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/block/ll_rw_blk.c:459:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: drivers/block/ll_rw_blk.c:465:
+ ^Inr_requests = MAX_NR_REQUESTS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#297: FILE: drivers/block/ll_rw_blk.c:465:
+ ^Inr_requests = MAX_NR_REQUESTS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/block/ll_rw_blk.c:465:
+ ^Inr_requests = MAX_NR_REQUESTS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/block/ll_rw_blk.c:466:
+ ^Iif (megs < 30) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: drivers/block/ll_rw_blk.c:466:
+ ^Iif (megs < 30) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/block/ll_rw_blk.c:466:
+ ^Iif (megs < 30) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: drivers/block/ll_rw_blk.c:467:
+  ^I^Inr_requests /= 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: drivers/block/ll_rw_blk.c:467:
+  ^I^Inr_requests /= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/block/ll_rw_blk.c:467:
+  ^I^Inr_requests /= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/block/ll_rw_blk.c:468:
+ ^I^Imax_queue_sectors /= 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: drivers/block/ll_rw_blk.c:468:
+ ^I^Imax_queue_sectors /= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/block/ll_rw_blk.c:468:
+ ^I^Imax_queue_sectors /= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/block/ll_rw_blk.c:469:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: drivers/block/ll_rw_blk.c:469:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/block/ll_rw_blk.c:469:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/block/ll_rw_blk.c:470:
+ ^I/* notice early if anybody screwed the defaults */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: drivers/block/ll_rw_blk.c:470:
+ ^I/* notice early if anybody screwed the defaults */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/block/ll_rw_blk.c:470:
+ ^I/* notice early if anybody screwed the defaults */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/block/ll_rw_blk.c:471:
+ ^IBUG_ON(!nr_requests);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: drivers/block/ll_rw_blk.c:471:
+ ^IBUG_ON(!nr_requests);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/block/ll_rw_blk.c:471:
+ ^IBUG_ON(!nr_requests);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: drivers/block/ll_rw_blk.c:471:
+ 	BUG_ON(!nr_requests);

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/block/ll_rw_blk.c:472:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: drivers/block/ll_rw_blk.c:472:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/block/ll_rw_blk.c:472:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#304: FILE: drivers/block/ll_rw_blk.c:472:
+ 	BUG_ON(!max_queue_sectors);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: drivers/block/ll_rw_blk.c:473:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/block/ll_rw_blk.c:473:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/block/ll_rw_blk.c:474:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: drivers/block/ll_rw_blk.c:474:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/block/ll_rw_blk.c:474:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/block/ll_rw_blk.c:476:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: drivers/block/ll_rw_blk.c:476:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/block/ll_rw_blk.c:476:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: drivers/block/ll_rw_blk.c:577:
+ * number of requests once it has woken up.  But, there's no way to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/block/ll_rw_blk.c:642:
+^I */^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#485: FILE: drivers/block/ll_rw_blk.c:876:
+			smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#486: FILE: drivers/block/ll_rw_blk.c:877:
+			if (waitqueue_active(&q->wait_for_requests))

WARNING:TYPO_SPELLING: 'suprious' may be misspelled - perhaps 'spurious'?
#651: FILE: fs/buffer.c:167:
+		 * don't do a suprious unplug if we get a racy
 		              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: include/linux/blkdev.h:141:
+^I * and blk_finished_io.  It enables the throttling code to $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#791: FILE: include/linux/blkdev.h:241:
+extern int blk_grow_request_list(request_queue_t *q, int nr_requests, int max_queue_sectors);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#795: FILE: include/linux/blkdev.h:245:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#795: FILE: include/linux/blkdev.h:245:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#795: FILE: include/linux/blkdev.h:245:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#812: FILE: include/linux/blkdev.h:291:
+static inline int blk_oversized_queue(request_queue_t * q)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: include/linux/blkdev.h:298:
+static inline int blk_oversized_queue_batch(request_queue_t * q)

WARNING:LINE_SPACING: Missing a blank line after declarations
#830: FILE: include/linux/blkdev.h:309:
+	request_queue_t *q = rq->q;
+	if (q && q->can_throttle) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#833: FILE: include/linux/blkdev.h:312:
+			printk("nr_sectors is %d\n", atomic_read(&q->nr_sectors));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#834: FILE: include/linux/blkdev.h:313:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#842: FILE: include/linux/blkdev.h:321:
+	request_queue_t *q = rq->q;
+	if (q && q->can_throttle) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: include/linux/blkdev.h:323:
+^I^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#845: FILE: include/linux/blkdev.h:324:
+		smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#847: FILE: include/linux/blkdev.h:326:
+			if (waitqueue_active(&q->wait_for_requests))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#851: FILE: include/linux/blkdev.h:330:
+			printk("nr_sectors is %d\n", atomic_read(&q->nr_sectors));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#852: FILE: include/linux/blkdev.h:331:
+			BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#889: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#889: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#917: FILE: mm/filemap.c:818:
+void wakeup_page_waiters(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#919: FILE: mm/filemap.c:820:
+	wait_queue_head_t * head;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#922: FILE: mm/filemap.c:823:
+	if (waitqueue_active(head))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 69 warnings, 4 checks, 752 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
