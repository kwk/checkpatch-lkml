WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -u --recursive --new-file -X /linux/dontdiff a/drivers/block/Kconfig b/drivers/block/Kconfig

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#47: 
--- a/drivers/block/Kconfig	Thu May 22 13:16:20 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#95: FILE: drivers/block/Kconfig:265:
+config BLK_DEV_CRYPTOLOOP
+	tristate "Cryptoloop Support"
+	depends on BLK_DEV_LOOP
+	---help---
+	  Say Y here if you want to be able to use the ciphers that are 
+	  provided by the CryptoAPI as loop transformation. This might be
+	  used as hard disk encryption.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/block/Kconfig:269:
+^I  Say Y here if you want to be able to use the ciphers that are $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: drivers/block/cryptoloop.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: drivers/block/cryptoloop.c:2:
+/*
+   Linux loop encryption enabling module

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#135: FILE: drivers/block/cryptoloop.c:18:
+   along with this module; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#136: FILE: drivers/block/cryptoloop.c:19:
+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#148: FILE: drivers/block/cryptoloop.c:31:
+#include <asm/uaccess.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: drivers/block/cryptoloop.c:38:
+#define LOOP_IV_SECTOR_SIZE (1 << LOOP_IV_SECTOR_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mode"
#177: FILE: drivers/block/cryptoloop.c:60:
+	if (mode == NULL || strcmp(mode, "cbc") == 0)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfm"
#181: FILE: drivers/block/cryptoloop.c:64:
+	if (tfm == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/block/cryptoloop.c:69:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/block/cryptoloop.c:90:
+cryptoloop_transfer(struct loop_device *lo, int cmd, char *raw_buf,
+		     char *loop_buf, int size, sector_t IV)

CHECK:SPACING: No space is necessary after a cast
#209: FILE: drivers/block/cryptoloop.c:92:
+	struct crypto_tfm *tfm = (struct crypto_tfm *) lo->key_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: drivers/block/cryptoloop.c:113:
+		u32 iv[4] = { 0, };
+		iv[0] = cpu_to_le32(IV & 0xffffffff);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#251: FILE: drivers/block/cryptoloop.c:134:
+
+

CHECK:SPACING: No space is necessary after a cast
#261: FILE: drivers/block/cryptoloop.c:144:
+	struct crypto_tfm *tfm = (struct crypto_tfm *) lo->key_data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: drivers/block/cryptoloop.c:145:
+	struct crypto_tfm *tfm = (struct crypto_tfm *) lo->key_data;
+	if (tfm != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tfm"
#262: FILE: drivers/block/cryptoloop.c:145:
+	if (tfm != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#267: FILE: drivers/block/cryptoloop.c:150:
+	printk(KERN_ERR "cryptoloop_release(): tfm == NULL?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cryptoloop_release', this function's name, in a string
#267: FILE: drivers/block/cryptoloop.c:150:
+	printk(KERN_ERR "cryptoloop_release(): tfm == NULL?\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: drivers/block/cryptoloop.c:169:
+		printk(KERN_ERR "cryptoloop: loop_register_transfer failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#294: FILE: drivers/block/cryptoloop.c:177:
+		printk(KERN_ERR

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#320: FILE: drivers/block/loop.c:898:
+	lo->lo_file_name[LO_NAME_SIZE-1] = 0;
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#321: FILE: drivers/block/loop.c:899:
+	lo->lo_crypt_name[LO_NAME_SIZE-1] = 0;
 	                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 10 checks, 319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
