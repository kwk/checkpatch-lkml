WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#35: FILE: drivers/md/Kconfig:189:
+config DM_MIRROR
+       tristate "Mirror target (EXPERIMENTAL)"
+       depends on BLK_DEV_DM && EXPERIMENTAL
+       ---help---
+         Allow volume managers to mirror logical volumes, also
+         needed for live data migration tools such as 'pvmove'.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: drivers/md/dm-log.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#99: FILE: drivers/md/dm-log.c:35:
+	if (type->use_count)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#101: FILE: drivers/md/dm-log.c:37:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: drivers/md/dm-log.c:52:
+	list_for_each_entry (type, &_log_types, list)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#170: FILE: drivers/md/dm-log.c:106:
+ *---------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#183: FILE: drivers/md/dm-log.c:119:
+	uint32_t magic;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#189: FILE: drivers/md/dm-log.c:125:
+	uint32_t version;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: drivers/md/dm-log.c:136:
+	unsigned bitset_uint32_count;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#201: FILE: drivers/md/dm-log.c:137:
+	uint32_t *clean_bits;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#202: FILE: drivers/md/dm-log.c:138:
+	uint32_t *sync_bits;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#203: FILE: drivers/md/dm-log.c:139:
+	uint32_t *recovering_bits;	/* FIXME: this seems excessive */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#217: FILE: drivers/md/dm-log.c:153:
+	uint32_t *disk_bits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: drivers/md/dm-log.c:160:
+static  inline int log_test_bit(uint32_t *bs, unsigned bit)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#224: FILE: drivers/md/dm-log.c:160:
+static  inline int log_test_bit(uint32_t *bs, unsigned bit)

CHECK:SPACING: No space is necessary after a cast
#226: FILE: drivers/md/dm-log.c:162:
+	return test_bit(bit, (unsigned long *) bs) ? 1 : 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: drivers/md/dm-log.c:166:
+			       uint32_t *bs, unsigned bit)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#230: FILE: drivers/md/dm-log.c:166:
+			       uint32_t *bs, unsigned bit)

CHECK:SPACING: No space is necessary after a cast
#232: FILE: drivers/md/dm-log.c:168:
+	set_bit(bit, (unsigned long *) bs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: drivers/md/dm-log.c:173:
+				 uint32_t *bs, unsigned bit)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#237: FILE: drivers/md/dm-log.c:173:
+				 uint32_t *bs, unsigned bit)

CHECK:SPACING: No space is necessary after a cast
#239: FILE: drivers/md/dm-log.c:175:
+	clear_bit(bit, (unsigned long *) bs);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#245: FILE: drivers/md/dm-log.c:181:
+ *--------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#297: FILE: drivers/md/dm-log.c:233:
+ *--------------------------------------------------------------*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#298: FILE: drivers/md/dm-log.c:234:
+static inline void bits_to_core(uint32_t *core, uint32_t *disk, unsigned count)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#298: FILE: drivers/md/dm-log.c:234:
+static inline void bits_to_core(uint32_t *core, uint32_t *disk, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#300: FILE: drivers/md/dm-log.c:236:
+	unsigned i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#306: FILE: drivers/md/dm-log.c:242:
+static inline void bits_to_disk(uint32_t *core, uint32_t *disk, unsigned count)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#306: FILE: drivers/md/dm-log.c:242:
+static inline void bits_to_disk(uint32_t *core, uint32_t *disk, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#308: FILE: drivers/md/dm-log.c:244:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: drivers/md/dm-log.c:269:
+	unsigned long ebits;
+	bits_to_disk(log->clean_bits, log->disk_bits,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#341: FILE: drivers/md/dm-log.c:277:
+ *--------------------------------------------------------------*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/md/dm-log.c:334:
+        lc->sync_count = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/md/dm-log.c:334:
+        lc->sync_count = 0;$

CHECK:SPACING: No space is necessary after a cast
#416: FILE: drivers/md/dm-log.c:352:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/md/dm-log.c:353:
+	struct log_c *lc = (struct log_c *) log->context;
+	vfree(lc->clean_bits);

CHECK:SPACING: No space is necessary after a cast
#447: FILE: drivers/md/dm-log.c:383:
+	lc = (struct log_c *) log->context;

CHECK:SPACING: No space is necessary after a cast
#485: FILE: drivers/md/dm-log.c:421:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#486: FILE: drivers/md/dm-log.c:422:
+	struct log_c *lc = (struct log_c *) log->context;
+	dm_put_device(lc->ti, lc->log_dev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#492: FILE: drivers/md/dm-log.c:428:
+static int count_bits32(uint32_t *addr, unsigned size)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#492: FILE: drivers/md/dm-log.c:428:
+static int count_bits32(uint32_t *addr, unsigned size)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#496: FILE: drivers/md/dm-log.c:432:
+	for (i = 0; i < size; i++) {
+		count += hweight32(*(addr+i));
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#497: FILE: drivers/md/dm-log.c:433:
+		count += hweight32(*(addr+i));
 		                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#505: FILE: drivers/md/dm-log.c:441:
+	unsigned i;

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/md/dm-log.c:442:
+	struct log_c *lc = (struct log_c *) log->context;

CHECK:SPACING: No space is necessary after a cast
#542: FILE: drivers/md/dm-log.c:478:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#543: FILE: drivers/md/dm-log.c:479:
+	struct log_c *lc = (struct log_c *) log->context;
+	return lc->region_size;

CHECK:SPACING: No space is necessary after a cast
#548: FILE: drivers/md/dm-log.c:484:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: drivers/md/dm-log.c:485:
+	struct log_c *lc = (struct log_c *) log->context;
+	return log_test_bit(lc->clean_bits, region);

CHECK:SPACING: No space is necessary after a cast
#554: FILE: drivers/md/dm-log.c:490:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#555: FILE: drivers/md/dm-log.c:491:
+	struct log_c *lc = (struct log_c *) log->context;
+	return log_test_bit(lc->sync_bits, region);

CHECK:SPACING: No space is necessary after a cast
#567: FILE: drivers/md/dm-log.c:503:
+	struct log_c *lc = (struct log_c *) log->context;

CHECK:SPACING: No space is necessary after a cast
#582: FILE: drivers/md/dm-log.c:518:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#583: FILE: drivers/md/dm-log.c:519:
+	struct log_c *lc = (struct log_c *) log->context;
+	log_clear_bit(lc, lc->clean_bits, region);

CHECK:SPACING: No space is necessary after a cast
#588: FILE: drivers/md/dm-log.c:524:
+	struct log_c *lc = (struct log_c *) log->context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#589: FILE: drivers/md/dm-log.c:525:
+	struct log_c *lc = (struct log_c *) log->context;
+	log_set_bit(lc, lc->clean_bits, region);

CHECK:SPACING: No space is necessary after a cast
#594: FILE: drivers/md/dm-log.c:530:
+	struct log_c *lc = (struct log_c *) log->context;

CHECK:SPACING: No space is necessary after a cast
#600: FILE: drivers/md/dm-log.c:536:
+		*region = find_next_zero_bit((unsigned long *) lc->sync_bits,

CHECK:SPACING: No space is necessary after a cast
#617: FILE: drivers/md/dm-log.c:553:
+	struct log_c *lc = (struct log_c *) log->context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: drivers/md/dm-log.c:558:
+                lc->sync_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/md/dm-log.c:558:
+                lc->sync_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: drivers/md/dm-log.c:559:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/md/dm-log.c:559:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: drivers/md/dm-log.c:564:
+        struct log_c *lc = (struct log_c *) log->context;$

CHECK:SPACING: No space is necessary after a cast
#628: FILE: drivers/md/dm-log.c:564:
+        struct log_c *lc = (struct log_c *) log->context;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: drivers/md/dm-log.c:564:
+        struct log_c *lc = (struct log_c *) log->context;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: drivers/md/dm-log.c:566:
+        return lc->sync_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/md/dm-log.c:566:
+        return lc->sync_count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: drivers/md/dm-log.c:582:
+        .get_sync_count = core_get_sync_count$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/md/dm-log.c:582:
+        .get_sync_count = core_get_sync_count$

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: drivers/md/dm-log.c:600:
+        .get_sync_count = core_get_sync_count$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/md/dm-log.c:600:
+        .get_sync_count = core_get_sync_count$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#690: FILE: drivers/md/dm-log.c:626:
+EXPORT_SYMBOL(dm_register_dirty_log_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#691: FILE: drivers/md/dm-log.c:627:
+EXPORT_SYMBOL(dm_unregister_dirty_log_type);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#692: FILE: drivers/md/dm-log.c:628:
+EXPORT_SYMBOL(dm_create_dirty_log);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#693: FILE: drivers/md/dm-log.c:629:
+EXPORT_SYMBOL(dm_destroy_dirty_log);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#697: FILE: drivers/md/dm-log.h:1:
+/*

WARNING:NEW_TYPEDEFS: do not add new typedefs
#708: FILE: drivers/md/dm-log.h:12:
+typedef sector_t region_t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/md/dm-log.h:44:
+        /*$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#785: FILE: drivers/md/dm-log.h:89:
+	 * assigns recovery work.
+	*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: drivers/md/dm-log.h:100:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/md/dm-log.h:102:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: drivers/md/dm-log.h:103:
+        region_t (*get_sync_count)(struct dirty_log *log);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/md/dm-log.h:103:
+        region_t (*get_sync_count)(struct dirty_log *log);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#805: FILE: drivers/md/dm-log.h:109:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#824: FILE: drivers/md/dm-raid1.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#889: FILE: drivers/md/dm-raid1.c:66:
+ *---------------------------------------------------------------*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#894: FILE: drivers/md/dm-raid1.c:71:
+	unsigned region_shift;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#906: FILE: drivers/md/dm-raid1.c:83:
+	spinlock_t region_lock;

WARNING:CONSIDER_COMPLETION: consider using a completion
#994: FILE: drivers/md/dm-raid1.c:171:
+	sema_init(&rh->recovery_count, 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1016: FILE: drivers/md/dm-raid1.c:193:
+	BUG_ON(!list_empty(&rh->quiesced_regions));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1018: FILE: drivers/md/dm-raid1.c:195:
+		list_for_each_safe (tmp, tmp2, rh->buckets + h) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1020: FILE: drivers/md/dm-raid1.c:197:
+			BUG_ON(atomic_read(&reg->pending));

WARNING:NEEDLESS_IF: mempool_destroy(NULL) is safe and this check is probably not required
#1028: FILE: drivers/md/dm-raid1.c:205:
+	if (rh->region_pool)
+		mempool_destroy(rh->region_pool);

CHECK:SPACING: No space is necessary after a cast
#1036: FILE: drivers/md/dm-raid1.c:213:
+	return (unsigned int) ((region * RH_HASH_MULT) >> 12) & rh->mask;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1043: FILE: drivers/md/dm-raid1.c:220:
+	list_for_each_entry (reg, rh->buckets + rh_hash(rh, region), hash_list)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1053: FILE: drivers/md/dm-raid1.c:230:
+	unsigned int h = rh_hash(rh, reg->key);
+	list_add(&reg->hash_list, rh->buckets + h);

CHECK:BRACES: Unbalanced braces around else statement
#1078: FILE: drivers/md/dm-raid1.c:255:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1163: FILE: drivers/md/dm-raid1.c:340:
+		list_for_each_entry (reg, &clean, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1173: FILE: drivers/md/dm-raid1.c:350:
+		list_for_each_entry (reg, &recovered, list)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1184: FILE: drivers/md/dm-raid1.c:361:
+	list_for_each_entry_safe (reg, next, &recovered, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1195: FILE: drivers/md/dm-raid1.c:372:
+	list_for_each_entry_safe (reg, next, &clean, list)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1280: FILE: drivers/md/dm-raid1.c:457:
+	if (atomic_read(&reg->pending))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1283: FILE: drivers/md/dm-raid1.c:460:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1368: FILE: drivers/md/dm-raid1.c:545:
+ *---------------------------------------------------------------*/

CHECK:SPACING: No space is necessary after a cast
#1405: FILE: drivers/md/dm-raid1.c:582:
+	return (struct mirror_set *) bio->bi_next;

CHECK:SPACING: No space is necessary after a cast
#1410: FILE: drivers/md/dm-raid1.c:587:
+	bio->bi_next = (struct bio *) ms;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1419: FILE: drivers/md/dm-raid1.c:596:
+ *---------------------------------------------------------------*/

CHECK:SPACING: No space is necessary after a cast
#1423: FILE: drivers/md/dm-raid1.c:600:
+	struct region *reg = (struct region *) context;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1441: FILE: drivers/md/dm-raid1.c:618:
+	if (reg->key == (ms->nr_regions - 1)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1449: FILE: drivers/md/dm-raid1.c:626:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1505: FILE: drivers/md/dm-raid1.c:682:
+ *---------------------------------------------------------------*/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1549: FILE: drivers/md/dm-raid1.c:726:
+ * SYNC: ^Iincrement pending, use kcopyd to write to *all* mirrors$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1552: FILE: drivers/md/dm-raid1.c:729:
+ *---------------------------------------------------------------*/

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1556: FILE: drivers/md/dm-raid1.c:733:
+	int uptodate = 1;
 	    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#1557: FILE: drivers/md/dm-raid1.c:734:
+	struct bio *bio = (struct bio *) context;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1575: FILE: drivers/md/dm-raid1.c:752:
+		uptodate = 0;
 		^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1578: FILE: drivers/md/dm-raid1.c:755:
+				uptodate = 1;
 				^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1667: FILE: drivers/md/dm-raid1.c:844:
+ *---------------------------------------------------------------*/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1693: FILE: drivers/md/dm-raid1.c:870:
+	list_for_each_entry (ms, &_mirror_sets, list)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1700: FILE: drivers/md/dm-raid1.c:877:
+ *---------------------------------------------------------------*/

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1807: FILE: drivers/md/dm-raid1.c:984:
+	if (sscanf(argv[1], "%u", &param_count) != 1) {
+		ti->error = "dm-mirror: Invalid mirror log argument count";
+		return NULL;
+	}

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1858: FILE: drivers/md/dm-raid1.c:1035:
+	if (!argc || sscanf(argv[0], "%u", &nr_mirrors) != 1 ||
+	    nr_mirrors < 2) {
+		ti->error = "dm-mirror: Invalid number of mirrors";
+		dm_destroy_dirty_log(dl);
+		return -EINVAL;
+	}

CHECK:SPACING: No space is necessary after a cast
#1904: FILE: drivers/md/dm-raid1.c:1081:
+	struct mirror_set *ms = (struct mirror_set *) ti->private;

CHECK:SPACING: No space is necessary after a cast
#1977: FILE: drivers/md/dm-raid1.c:1154:
+	struct mirror_set *ms = (struct mirror_set *) ti->private;

CHECK:SPACING: No space is necessary after a cast
#1991: FILE: drivers/md/dm-raid1.c:1168:
+	struct mirror_set *ms = (struct mirror_set *) ti->private;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1993: FILE: drivers/md/dm-raid1.c:1170:
+	struct dirty_log *log = ms->rh.log;
+	rh_stop_recovery(&ms->rh);

CHECK:SPACING: No space is necessary after a cast
#2001: FILE: drivers/md/dm-raid1.c:1178:
+	struct mirror_set *ms = (struct mirror_set *) ti->private;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2003: FILE: drivers/md/dm-raid1.c:1180:
+	struct dirty_log *log = ms->rh.log;
+	if (log->type->resume && log->type->resume(log))

CHECK:SPACING: No space is necessary after a cast
#2014: FILE: drivers/md/dm-raid1.c:1191:
+	struct mirror_set *ms = (struct mirror_set *) ti->private;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2016: FILE: drivers/md/dm-raid1.c:1193:
+#define EMIT(x...) sz += ((sz >= maxlen) ? \
+			  0 : scnprintf(result + sz, maxlen - sz, x))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000277823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 70 warnings, 49 checks, 2062 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000277823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
