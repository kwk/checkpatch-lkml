WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#51: FILE: MAINTAINERS:498:
+P:	Arnd Bergmann
+M:	arnd@arndb.de

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#54: FILE: MAINTAINERS:501:
+W:	http://linuxppc64.org
+S:	Supported

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#67: FILE: arch/ppc64/Kconfig:80:
+config PPC_BPA
+	bool "  Broadband Processor Architecture"
+	depends on PPC_MULTIPLATFORM
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: arch/ppc64/kernel/bpa_setup.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#161: FILE: arch/ppc64/kernel/bpa_setup.c:34:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#162: FILE: arch/ppc64/kernel/bpa_setup.c:35:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#163: FILE: arch/ppc64/kernel/bpa_setup.c:36:
+#include <asm/pgtable.h>

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_get_boot_time>
#182: FILE: arch/ppc64/kernel/bpa_setup.c:55:
+extern void pSeries_get_boot_time(struct rtc_time *rtc_time);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#182: FILE: arch/ppc64/kernel/bpa_setup.c:55:
+extern void pSeries_get_boot_time(struct rtc_time *rtc_time);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_get_rtc_time>
#183: FILE: arch/ppc64/kernel/bpa_setup.c:56:
+extern void pSeries_get_rtc_time(struct rtc_time *rtc_time);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#183: FILE: arch/ppc64/kernel/bpa_setup.c:56:
+extern void pSeries_get_rtc_time(struct rtc_time *rtc_time);

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_set_rtc_time>
#184: FILE: arch/ppc64/kernel/bpa_setup.c:57:
+extern int  pSeries_set_rtc_time(struct rtc_time *rtc_time);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#184: FILE: arch/ppc64/kernel/bpa_setup.c:57:
+extern int  pSeries_set_rtc_time(struct rtc_time *rtc_time);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#186: FILE: arch/ppc64/kernel/bpa_setup.c:59:
+extern unsigned long ppc_proc_freq;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#187: FILE: arch/ppc64/kernel/bpa_setup.c:60:
+extern unsigned long ppc_tb_freq;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#203: FILE: arch/ppc64/kernel/bpa_setup.c:76:
+	printk("*** %04x : %s\n", hex, s ? s : "");

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_calibrate_decr>
#213: FILE: arch/ppc64/kernel/bpa_setup.c:86:
+static void __init pSeries_calibrate_decr(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#237: FILE: arch/ppc64/kernel/bpa_setup.c:110:
+		printk(KERN_ERR "WARNING: Estimating decrementer frequency "

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: arch/ppc64/kernel/bpa_setup.c:111:
+		printk(KERN_ERR "WARNING: Estimating decrementer frequency "
+				"(not found)\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#251: FILE: arch/ppc64/kernel/bpa_setup.c:124:
+		printk(KERN_ERR "WARNING: Estimating processor frequency "

WARNING:SPLIT_STRING: quoted string split across lines
#252: FILE: arch/ppc64/kernel/bpa_setup.c:125:
+		printk(KERN_ERR "WARNING: Estimating processor frequency "
+				"(not found)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#256: FILE: arch/ppc64/kernel/bpa_setup.c:129:
+	printk(KERN_INFO "time_init: decrementer frequency = %lu.%.6lu MHz\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#257: FILE: arch/ppc64/kernel/bpa_setup.c:130:
+	       ppc_tb_freq/1000000, ppc_tb_freq%1000000);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#257: FILE: arch/ppc64/kernel/bpa_setup.c:130:
+	       ppc_tb_freq/1000000, ppc_tb_freq%1000000);
 	                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#258: FILE: arch/ppc64/kernel/bpa_setup.c:131:
+	printk(KERN_INFO "time_init: processor frequency   = %lu.%.6lu MHz\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#259: FILE: arch/ppc64/kernel/bpa_setup.c:132:
+	       ppc_proc_freq/1000000, ppc_proc_freq%1000000);
 	                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#259: FILE: arch/ppc64/kernel/bpa_setup.c:132:
+	       ppc_proc_freq/1000000, ppc_proc_freq%1000000);
 	                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#265: FILE: arch/ppc64/kernel/bpa_setup.c:138:
+	div128_by_32(1024*1024, 0, tb_ticks_per_sec, &divres);
 	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <smp_init_pSeries>
#274: FILE: arch/ppc64/kernel/bpa_setup.c:147:
+	smp_init_pSeries();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: arch/ppc64/kernel/bpa_setup.c:154:
+		printk("No ramdisk, default root is /dev/hda2\n");

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDA2>
#282: FILE: arch/ppc64/kernel/bpa_setup.c:155:
+		ROOT_DEV = Root_HDA2;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bpa_init_early', this function's name, in a string
#301: FILE: arch/ppc64/kernel/bpa_setup.c:174:
+	DBG(" -> bpa_init_early()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bpa_init_early', this function's name, in a string
#309: FILE: arch/ppc64/kernel/bpa_setup.c:182:
+	DBG(" <- bpa_init_early()\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: arch/ppc64/kernel/bpa_setup.c:185:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#370: FILE: arch/ppc64/kernel/cputable.c:37:
+extern void __setup_cpu_be(unsigned long offset, struct cpu_spec* spec);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#370: FILE: arch/ppc64/kernel/cputable.c:37:
+extern void __setup_cpu_be(unsigned long offset, struct cpu_spec* spec);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/ppc64/kernel/cputable.c:166:
+    {^I/* BE DD1.x  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/ppc64/kernel/cputable.c:175:
+    },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: arch/ppc64/kernel/prom_init.c:1849:
+       ^Iif (RELOC(of_platform) & (PLATFORM_PSERIES | PLATFORM_BPA))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#430: FILE: arch/ppc64/kernel/prom_init.c:1849:
+       ^Iif (RELOC(of_platform) & (PLATFORM_PSERIES | PLATFORM_BPA))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: arch/ppc64/kernel/prom_init.c:1849:
+       ^Iif (RELOC(of_platform) & (PLATFORM_PSERIES | PLATFORM_BPA))$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#442: FILE: arch/ppc64/kernel/setup.c:351:
+extern struct machdep_calls bpa_md;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#465: FILE: arch/ppc64/kernel/traps.c:130:
+			printk("BPA ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: include/asm-ppc64/mmu.h:53:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: include/asm-ppc64/mmu.h:53:
+ $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#497: FILE: include/asm-ppc64/processor.h:221:
+#define	  HID6_LB	(0x0F<<12)	/* Concurrent Large Page Modes */
        	         	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#498: FILE: include/asm-ppc64/processor.h:222:
+#define	  HID6_DLP	(1<<20)		/* Disable all large page modes (4K only) */
        	          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#498: FILE: include/asm-ppc64/processor.h:222:
+#define	  HID6_DLP	(1<<20)		/* Disable all large page modes (4K only) */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: include/asm-ppc64/processor.h:234:
+#define^ISPRN_TSC ^I0x3FD^I/* Thread switch control on others */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: include/asm-ppc64/processor.h:235:
+#define^ISPRN_TST ^I0x3FC^I/* Thread switch timeout on others */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 29 warnings, 18 checks, 441 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000183785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
