WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Support multiple controllers in the via82cxxx IDE driver, revised patch. Cable 

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#62: FILE: drivers/ide/pci/via82cxxx.c:107:
+struct via82cxxx_dev
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#156: FILE: drivers/ide/pci/via82cxxx.c:249:
+		if ((*isa = pci_find_device(PCI_VENDOR_ID_VIA +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#159: FILE: drivers/ide/pci/via82cxxx.c:252:
+			via_config->id, NULL))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#171: FILE: drivers/ide/pci/via82cxxx.c:271:
 static unsigned int __devinit init_chipset_via82cxxx(struct pci_dev *dev, const char *name)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#256: FILE: drivers/ide/pci/via82cxxx.c:294:
+		pci_write_config_dword(dev, VIA_UDMA_TIMING, u|0x80008);
 		                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#268: FILE: drivers/ide/pci/via82cxxx.c:368:
+static void __devinit via_cable_detect(struct pci_dev *dev, struct via82cxxx_dev *vdev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/ide/pci/via82cxxx.c:372:
+	int i;
+	pci_read_config_dword(dev, VIA_UDMA_TIMING, &u);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#274: FILE: drivers/ide/pci/via82cxxx.c:374:
+	switch (vdev->via_config->flags & VIA_UDMA) {
[...]
+		case VIA_UDMA_66:
[...]
+		case VIA_UDMA_100:
[...]
+		case VIA_UDMA_133:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#275: FILE: drivers/ide/pci/via82cxxx.c:375:
+	switch (vdev->via_config->flags & VIA_UDMA) {
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#313: FILE: drivers/ide/pci/via82cxxx.c:413:
+
+	}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#316: FILE: drivers/ide/pci/via82cxxx.c:416:
 static void __devinit init_hwif_via82cxxx(ide_hwif_t *hwif)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vdev)...) over kmalloc(sizeof(struct via82cxxx_dev)...)
#318: FILE: drivers/ide/pci/via82cxxx.c:418:
+	struct via82cxxx_dev *vdev = kmalloc(sizeof(struct via82cxxx_dev),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vdev"
#323: FILE: drivers/ide/pci/via82cxxx.c:423:
+	if (vdev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#324: FILE: drivers/ide/pci/via82cxxx.c:424:
+		printk(KERN_ERR "VP_IDE: out of memory :(\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 6 warnings, 6 checks, 292 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
