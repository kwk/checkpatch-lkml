WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Please consider the following patch for submission.  This patch contains the

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#51: 
--- a/drivers/pci/hotplug/Kconfig	Fri Feb 20 10:44:50 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: drivers/pci/hotplug/Kconfig:212:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/pci/hotplug/rpadlpar.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: drivers/pci/hotplug/rpadlpar.h:18:
+extern int dlpar_sysfs_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: drivers/pci/hotplug/rpadlpar.h:19:
+extern void dlpar_sysfs_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: drivers/pci/hotplug/rpadlpar.h:21:
+extern int dlpar_add_slot(char *drc_name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: drivers/pci/hotplug/rpadlpar.h:22:
+extern int dlpar_remove_slot(char *drc_name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#124: FILE: drivers/pci/hotplug/rpadlpar_core.c:1:
+/*

CHECK:SPACING: No space is necessary after a cast
#154: FILE: drivers/pci/hotplug/rpadlpar_core.c:31:
+	return (int) (ptr != NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ptr"
#154: FILE: drivers/pci/hotplug/rpadlpar_core.c:31:
+	return (int) (ptr != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#162: FILE: drivers/pci/hotplug/rpadlpar_core.c:39:
+	drc_names = (int *) get_property(dn, "ibm,drc-names", NULL);

CHECK:SPACING: No space is necessary after a cast
#164: FILE: drivers/pci/hotplug/rpadlpar_core.c:41:
+		ptr = (char *) &drc_names[1];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/pci/hotplug/rpadlpar_core.c:75:
+^I$

CHECK:SPACING: No space is necessary after a cast
#202: FILE: drivers/pci/hotplug/rpadlpar_core.c:79:
+	return (struct slot *) php_slot->private;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/pci/hotplug/rpadlpar_core.c:105:
+static int pci_add_secondary_bus(struct device_node *dn,
+		struct pci_dev *bridge_dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#240: FILE: drivers/pci/hotplug/rpadlpar_core.c:117:
+		printk(KERN_ERR "%s: could not add secondary bus\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#240: FILE: drivers/pci/hotplug/rpadlpar_core.c:117:
+		printk(KERN_ERR "%s: could not add secondary bus\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/pci/hotplug/rpadlpar_core.c:130:
+^I    ^Ihose->last_busno = child->number;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/pci/hotplug/rpadlpar_core.c:130:
+^I    ^Ihose->last_busno = child->number;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#259: FILE: drivers/pci/hotplug/rpadlpar_core.c:136:
+		printk(KERN_ERR "%s: could not ioremap() child bus\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/pci/hotplug/rpadlpar_core.c:137:
+		printk(KERN_ERR "%s: could not ioremap() child bus\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#260: FILE: drivers/pci/hotplug/rpadlpar_core.c:137:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#274: FILE: drivers/pci/hotplug/rpadlpar_core.c:151:
+		printk(KERN_ERR "%s: found no device on bus\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#274: FILE: drivers/pci/hotplug/rpadlpar_core.c:151:
+		printk(KERN_ERR "%s: found no device on bus\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#284: FILE: drivers/pci/hotplug/rpadlpar_core.c:161:
+		printk(KERN_ERR "%s: failed to add pci device\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#284: FILE: drivers/pci/hotplug/rpadlpar_core.c:161:
+		printk(KERN_ERR "%s: failed to add pci device\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#289: FILE: drivers/pci/hotplug/rpadlpar_core.c:166:
+		printk(KERN_ERR "%s: unexpected header type %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/pci/hotplug/rpadlpar_core.c:167:
+		printk(KERN_ERR "%s: unexpected header type %d\n",
+				__FUNCTION__, dev->hdr_type);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#290: FILE: drivers/pci/hotplug/rpadlpar_core.c:167:
+				__FUNCTION__, dev->hdr_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: drivers/pci/hotplug/rpadlpar_core.c:182:
+		printk(KERN_ERR "%s: unexpected null device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/pci/hotplug/rpadlpar_core.c:183:
+		printk(KERN_ERR "%s: unexpected null device\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#306: FILE: drivers/pci/hotplug/rpadlpar_core.c:183:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#313: FILE: drivers/pci/hotplug/rpadlpar_core.c:190:
+		printk(KERN_ERR "%s: failed to unmap bus range\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: drivers/pci/hotplug/rpadlpar_core.c:191:
+		printk(KERN_ERR "%s: failed to unmap bus range\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#314: FILE: drivers/pci/hotplug/rpadlpar_core.c:191:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#359: FILE: drivers/pci/hotplug/rpadlpar_core.c:236:
+		printk(KERN_ERR "%s: unable to add bus %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#359: FILE: drivers/pci/hotplug/rpadlpar_core.c:236:
+		printk(KERN_ERR "%s: unable to add bus %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: drivers/pci/hotplug/rpadlpar_core.c:237:
+		printk(KERN_ERR "%s: unable to add bus %s\n", __FUNCTION__,
+				drc_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#367: FILE: drivers/pci/hotplug/rpadlpar_core.c:244:
+		printk(KERN_ERR "%s: unable to add hotplug slot %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/pci/hotplug/rpadlpar_core.c:245:
+		printk(KERN_ERR "%s: unable to add hotplug slot %s\n",
+				__FUNCTION__, drc_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#368: FILE: drivers/pci/hotplug/rpadlpar_core.c:245:
+				__FUNCTION__, drc_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#412: FILE: drivers/pci/hotplug/rpadlpar_core.c:289:
+		printk(KERN_ERR "%s: unexpected null bridge device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/pci/hotplug/rpadlpar_core.c:290:
+		printk(KERN_ERR "%s: unexpected null bridge device\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#413: FILE: drivers/pci/hotplug/rpadlpar_core.c:290:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#420: FILE: drivers/pci/hotplug/rpadlpar_core.c:297:
+		printk(KERN_ERR "%s: unable to remove hotplug slot %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/pci/hotplug/rpadlpar_core.c:298:
+		printk(KERN_ERR "%s: unable to remove hotplug slot %s\n",
+				__FUNCTION__, drc_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#421: FILE: drivers/pci/hotplug/rpadlpar_core.c:298:
+				__FUNCTION__, drc_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#428: FILE: drivers/pci/hotplug/rpadlpar_core.c:305:
+		printk(KERN_ERR "%s: unable to remove pci bus %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/pci/hotplug/rpadlpar_core.c:306:
+		printk(KERN_ERR "%s: unable to remove pci bus %s\n",
+				__FUNCTION__, drc_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#429: FILE: drivers/pci/hotplug/rpadlpar_core.c:306:
+				__FUNCTION__, drc_name);

CHECK:SPACING: No space is necessary after a cast
#441: FILE: drivers/pci/hotplug/rpadlpar_core.c:318:
+	return (int) (rc != RTAS_UNKNOWN_SERVICE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#449: FILE: drivers/pci/hotplug/rpadlpar_core.c:326:
+		printk(KERN_WARNING "%s: partition not DLPAR capable\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/pci/hotplug/rpadlpar_core.c:327:
+		printk(KERN_WARNING "%s: partition not DLPAR capable\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#450: FILE: drivers/pci/hotplug/rpadlpar_core.c:327:
+				__FUNCTION__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#462: FILE: drivers/pci/hotplug/rpadlpar_core.c:339:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#471: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:31:
+	ssize_t (*store)(struct dlpar_io_attr *dlpar_attr, const char *buf,
+		size_t nbytes);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#505: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:35:
+ * of the dlpar op */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:37:
+dlpar_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:37:
+dlpar_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:37:
+dlpar_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#515: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:45:
+dlpar_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#515: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:45:
+dlpar_attr_store(struct kobject * kobj, struct attribute * attr,

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#524: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:54:
+static struct sysfs_ops dlpar_attr_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:60:
+static ssize_t add_slot_store(struct dlpar_io_attr *dlpar_attr,
+				const char *buf, size_t nbytes)

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:81:
+^I^I ^I^Iconst char *buf, size_t nbytes)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#551: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:81:
+^I^I ^I^Iconst char *buf, size_t nbytes)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:81:
+static ssize_t remove_slot_store(struct dlpar_io_attr *dlpar_attr,
+		 		const char *buf, size_t nbytes)

WARNING:RETURN_VOID: void function return statements are not generally useful
#593: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:123:
+	return;
+}

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#603: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:133:
+	.kobj = {.name = DLPAR_KOBJ_NAME, .ktype=&ktype_dlpar_io,},
 	                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#603: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:133:
+	.kobj = {.name = DLPAR_KOBJ_NAME, .ktype=&ktype_dlpar_io,},
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#610: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:140:
+		printk(KERN_ERR "rpadlpar_io: cannot register kset for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/pci/hotplug/rpadlpar_sysfs.c:141:
+		printk(KERN_ERR "rpadlpar_io: cannot register kset for %s\n",
+				dlpar_io_kset.kobj.name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000302123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 37 warnings, 25 checks, 551 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000302123.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
