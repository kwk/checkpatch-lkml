WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#98: 
Content-Type: text/x-patch; name=hvcs_to_mainline_draft4.patch; charset=ISO-8859-15

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#107: FILE: include/asm-ppc64/hvcserver.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#124: FILE: include/asm-ppc64/hvcserver.h:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#125: FILE: include/asm-ppc64/hvcserver.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/asm-ppc64/hvcserver.h:37:
+extern int hvcs_free_partner_info(struct list_head *head);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/asm-ppc64/hvcserver.h:38:
+extern int hvcs_get_partner_info(unsigned int unit_address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: include/asm-ppc64/hvcserver.h:39:
+extern int hvcs_get_partner_info(unsigned int unit_address,
+		struct list_head *head, unsigned long *pi_buff);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/asm-ppc64/hvcserver.h:40:
+extern int hvcs_register_connection(unsigned int unit_address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: include/asm-ppc64/hvcserver.h:41:
+extern int hvcs_register_connection(unsigned int unit_address,
+		unsigned int p_partition_ID, unsigned int p_unit_address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/asm-ppc64/hvcserver.h:42:
+extern int hvcs_free_connection(unsigned int unit_address);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#177: FILE: arch/ppc64/kernel/hvconsole.c:54:
+EXPORT_SYMBOL(hvc_get_chars);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#187: FILE: arch/ppc64/kernel/hvconsole.c:70:
+EXPORT_SYMBOL(hvc_put_chars);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#195: FILE: arch/ppc64/kernel/hvcserver.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#212: FILE: arch/ppc64/kernel/hvcserver.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#213: FILE: arch/ppc64/kernel/hvcserver.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#221: FILE: arch/ppc64/kernel/hvcserver.c:27:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#237: FILE: arch/ppc64/kernel/hvcserver.c:43:
+	switch (to_convert) {
+		case H_Success:
[...]
+		case H_Parameter:
[...]
+		case H_Hardware:
[...]
+		case H_Busy:
+		case H_LongBusyOrder1msec:
+		case H_LongBusyOrder10msec:
+		case H_LongBusyOrder100msec:
+		case H_LongBusyOrder1sec:
+		case H_LongBusyOrder10sec:
+		case H_LongBusyOrder100sec:
[...]
+		case H_Function: /* fall through */
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#252: FILE: arch/ppc64/kernel/hvcserver.c:58:
+		case H_Function: /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#263: FILE: arch/ppc64/kernel/hvcserver.c:69:
+	if (!head) {
+		return -EINVAL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: arch/ppc64/kernel/hvcserver.c:86:
+int hvcs_next_partner(unsigned int unit_address,
+		unsigned long last_p_partition_ID,

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: arch/ppc64/kernel/hvcserver.c:91:
+	long retval;
+	retval = plpar_hcall_norets(H_VTERM_PARTNER_INFO, unit_address,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: arch/ppc64/kernel/hvcserver.c:92:
+	retval = plpar_hcall_norets(H_VTERM_PARTNER_INFO, unit_address,
+			last_p_partition_ID,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: arch/ppc64/kernel/hvcserver.c:108:
+int hvcs_get_partner_info(unsigned int unit_address, struct list_head *head,
+		unsigned long *pi_buff)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#322: FILE: arch/ppc64/kernel/hvcserver.c:128:
+	last_p_partition_ID = last_p_unit_address = ~0UL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/ppc64/kernel/hvcserver.c:136:
+		retval = hvcs_next_partner(unit_address, last_p_partition_ID,
+				last_p_unit_address, pi_buff);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#346: FILE: arch/ppc64/kernel/hvcserver.c:152:
+		if (last_p_partition_ID == ~0UL
+				&& last_p_unit_address == ~0UL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: arch/ppc64/kernel/hvcserver.c:156:
+		 * hvcs_free_partner_info(). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*next_partner_info)...) over kmalloc(sizeof(struct hvcs_partner_info)...)
#351: FILE: arch/ppc64/kernel/hvcserver.c:157:
+		next_partner_info = kmalloc(sizeof(struct hvcs_partner_info),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: arch/ppc64/kernel/hvcserver.c:158:
+		next_partner_info = kmalloc(sizeof(struct hvcs_partner_info),
+				GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#355: FILE: arch/ppc64/kernel/hvcserver.c:161:
+			printk(KERN_WARNING "HVCONSOLE: kmalloc() failed to"

WARNING:SPLIT_STRING: quoted string split across lines
#356: FILE: arch/ppc64/kernel/hvcserver.c:162:
+			printk(KERN_WARNING "HVCONSOLE: kmalloc() failed to"
+				" allocate partner info struct.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#362: FILE: arch/ppc64/kernel/hvcserver.c:168:
+		next_partner_info->unit_address
+			= (unsigned int)last_p_unit_address;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#364: FILE: arch/ppc64/kernel/hvcserver.c:170:
+		next_partner_info->partition_ID
+			= (unsigned int)last_p_partition_ID;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around next_partner_info->node
#371: FILE: arch/ppc64/kernel/hvcserver.c:177:
+		list_add_tail(&(next_partner_info->node), head);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#388: FILE: arch/ppc64/kernel/hvcserver.c:194:
+ * -EINVAL may indicate that one of the parms is not valid, for
                                         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that open parenthesis '('
#393: FILE: arch/ppc64/kernel/hvcserver.c:199:
+int hvcs_register_connection( unsigned int unit_address,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: arch/ppc64/kernel/hvcserver.c:200:
+int hvcs_register_connection( unsigned int unit_address,
+		unsigned int p_partition_ID, unsigned int p_unit_address)

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: arch/ppc64/kernel/hvcserver.c:203:
+	long retval;
+	retval = plpar_hcall_norets(H_REGISTER_VTERM, unit_address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: arch/ppc64/kernel/hvcserver.c:204:
+	retval = plpar_hcall_norets(H_REGISTER_VTERM, unit_address,
+				p_partition_ID, p_unit_address);

WARNING:LINE_SPACING: Missing a blank line after declarations
#410: FILE: arch/ppc64/kernel/hvcserver.c:216:
+	long retval;
+	retval = plpar_hcall_norets(H_FREE_VTERM, unit_address);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#456: FILE: drivers/char/hvcs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#472: FILE: drivers/char/hvcs.c:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#473: FILE: drivers/char/hvcs.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#542: FILE: drivers/char/hvcs.c:87:
+#include <asm/uaccess.h>

WARNING:REPEATED_WORD: Possible repeated word: 'then'
#555: FILE: drivers/char/hvcs.c:100:
+ * then then quickly closing the connection would cause data loss on the

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((__aligned__(8)))
#608: FILE: drivers/char/hvcs.c:153:
+#define __ALIGNED__	__attribute__((__aligned__(8)))

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#649: FILE: drivers/char/hvcs.c:194:
+char hvcs_driver_string[]
+	= "IBM hvcs (Hypervisor Virtual Console Server) Driver";

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#652: FILE: drivers/char/hvcs.c:197:
+static int hvcs_rescan_status = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#670: FILE: drivers/char/hvcs.c:215:
+static int hvcs_kicked = 0;

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#672: FILE: drivers/char/hvcs.c:217:
+/* Used the the kthread construct for task operations */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#685: FILE: drivers/char/hvcs.c:230:
+	spinlock_t lock;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'kobj' - possible side-effects?
#729: FILE: drivers/char/hvcs.c:274:
+#define from_kobj(kobj) container_of(kobj, struct hvcs_struct, kobj)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: drivers/char/hvcs.c:282:
+static irqreturn_t hvcs_handle_interrupt(int irq, void *dev_instance,
+		struct pt_regs *regs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#740: FILE: drivers/char/hvcs.c:285:
+static int hvcs_write(struct tty_struct *tty, int from_user,
+		const unsigned char *buf, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/char/hvcs.c:291:
+static void hvcs_set_pi(struct hvcs_partner_info *pi,
+		struct hvcs_struct *hvcsd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: drivers/char/hvcs.c:299:
+static int hvcs_enable_device(struct hvcs_struct *hvcsd,
+		uint32_t unit_address, unsigned int irq, struct vio_dev *dev);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#754: FILE: drivers/char/hvcs.c:299:
+		uint32_t unit_address, unsigned int irq, struct vio_dev *dev);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#758: FILE: drivers/char/hvcs.c:303:
+static int hvcs_open(struct tty_struct *tty, struct file *filp);
                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#759: FILE: drivers/char/hvcs.c:304:
+static void hvcs_close(struct tty_struct *tty, struct file *filp);
                                                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#760: FILE: drivers/char/hvcs.c:305:
+static void hvcs_hangup(struct tty_struct * tty);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#767: FILE: drivers/char/hvcs.c:312:
+static int __devinit hvcs_probe(struct vio_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: drivers/char/hvcs.c:313:
+static int __devinit hvcs_probe(struct vio_dev *dev,
+		const struct vio_device_id *id);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#769: FILE: drivers/char/hvcs.c:314:
+static int __devexit hvcs_remove(struct vio_dev *dev);

WARNING:MEMORY_BARRIER: memory barrier without comment
#781: FILE: drivers/char/hvcs.c:326:
+	wmb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#812: FILE: drivers/char/hvcs.c:357:
+static irqreturn_t hvcs_handle_interrupt(int irq, void *dev_instance,
+		struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/char/hvcs.c:381:
+		sent = hvc_put_chars(unit_address,
+				&hvcsd->buffer[0],

ERROR:SPACING: space prohibited before that close parenthesis ')'
#837: FILE: drivers/char/hvcs.c:382:
+				hvcsd->chars_in_buffer );

WARNING:MEMORY_BARRIER: memory barrier without comment
#840: FILE: drivers/char/hvcs.c:385:
+			wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#842: FILE: drivers/char/hvcs.c:387:
+			wmb();

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#847: FILE: drivers/char/hvcs.c:392:
+			 * we commited to delivering it.  But don't try to wake
 			      ^^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#852: FILE: drivers/char/hvcs.c:397:
+				if ((tty->flags & (1 << TTY_DO_WRITE_WAKEUP))
+						&& tty->ldisc.write_wakeup)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.write_wakeup)
#853: FILE: drivers/char/hvcs.c:398:
+					(tty->ldisc.write_wakeup) (tty);

CHECK:BRACES: braces {} should be used on all arms of this statement
#876: FILE: drivers/char/hvcs.c:421:
+	if (!tty || test_bit(TTY_THROTTLED, &tty->flags)) {
[...]
+	} else if (!(hvcsd->todo_mask & (HVCS_READ_MASK)))
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: drivers/char/hvcs.c:432:
+		got = hvc_get_chars(unit_address,
+				&buf[0],

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#889: FILE: drivers/char/hvcs.c:434:
+		for (i=0;got && i<got;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#889: FILE: drivers/char/hvcs.c:434:
+		for (i=0;got && i<got;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#889: FILE: drivers/char/hvcs.c:434:
+		for (i=0;got && i<got;i++)
 		                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#889: FILE: drivers/char/hvcs.c:434:
+		for (i=0;got && i<got;i++)
 		                     ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#930: FILE: drivers/char/hvcs.c:475:
+		wmb();

WARNING:TABSTOP: Statements should start on a tabstop
#944: FILE: drivers/char/hvcs.c:489:
+		 if (hvcs_todo_mask & (HVCS_TRY_WRITE | HVCS_QUICK_READ)) {

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#945: FILE: drivers/char/hvcs.c:490:
+			yield();

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#958: FILE: drivers/char/hvcs.c:503:
+static struct vio_device_id hvcs_driver_table[] __devinitdata= {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#958: FILE: drivers/char/hvcs.c:503:
+static struct vio_device_id hvcs_driver_table[] __devinitdata= {
                                                              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcsd->next
#974: FILE: drivers/char/hvcs.c:519:
+	list_del(&(hvcsd->next));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#978: FILE: drivers/char/hvcs.c:523:
+		printk(KERN_INFO "HVCS: Closed vty-server@%X and"

WARNING:SPLIT_STRING: quoted string split across lines
#979: FILE: drivers/char/hvcs.c:524:
+		printk(KERN_INFO "HVCS: Closed vty-server@%X and"
+				" partner vty@%X:%d connection.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#984: FILE: drivers/char/hvcs.c:529:
+	printk(KERN_INFO "HVCS: Destroyed hvcs_struct for vty-server@%X.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#985: FILE: drivers/char/hvcs.c:530:
+	printk(KERN_INFO "HVCS: Destroyed hvcs_struct for vty-server@%X.\n",
+			hvcsd->vdev->unit_address);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1025: FILE: drivers/char/hvcs.c:570:
+static int __devinit hvcs_probe(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1025: FILE: drivers/char/hvcs.c:570:
+static int __devinit hvcs_probe(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1033: FILE: drivers/char/hvcs.c:578:
+		printk(KERN_ERR "HVCS: probed with invalid parameter.\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1038: FILE: drivers/char/hvcs.c:583:
+	if (!hvcsd) {
+		return -ENODEV;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1064: FILE: drivers/char/hvcs.c:609:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"

WARNING:SPLIT_STRING: quoted string split across lines
#1065: FILE: drivers/char/hvcs.c:610:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"
+			" info for vty-server@%X on device probe.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcsd->next
#1077: FILE: drivers/char/hvcs.c:622:
+	list_add_tail(&(hvcsd->next), &hvcs_structs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1083: FILE: drivers/char/hvcs.c:628:
+	printk(KERN_INFO "HVCS: Added vty-server@%X.\n", dev->unit_address);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1092: FILE: drivers/char/hvcs.c:637:
+static int __devexit hvcs_remove(struct vio_dev *dev)

WARNING:TYPO_SPELLING: 'interrups' may be misspelled - perhaps 'interrupts'?
#1102: FILE: drivers/char/hvcs.c:647:
+	/* By this time the vty-server won't be getting any more interrups */
 	                                                         ^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1116: FILE: drivers/char/hvcs.c:661:
+	kobject_put (kobjp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1126: FILE: drivers/char/hvcs.c:671:
+	printk(KERN_INFO "HVCS: vty-server@%X removed from the"

WARNING:SPLIT_STRING: quoted string split across lines
#1127: FILE: drivers/char/hvcs.c:672:
+	printk(KERN_INFO "HVCS: vty-server@%X removed from the"
+			" vio bus.\n", dev->unit_address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: drivers/char/hvcs.c:696:
+	strncpy(&hvcsd->p_location_code[0],
+			&pi->location_code[0], clclength + 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1184: FILE: drivers/char/hvcs.c:729:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"

WARNING:SPLIT_STRING: quoted string split across lines
#1185: FILE: drivers/char/hvcs.c:730:
+		printk(KERN_ERR "HVCS: Failed to fetch partner"
+			" info for vty-server@%x.\n", unit_address);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hvcsd->p_unit_address'
#1230: FILE: drivers/char/hvcs.c:775:
+	if ((!hvcsd->p_unit_address) || (!hvcsd->p_partition_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hvcsd->p_partition_ID'
#1230: FILE: drivers/char/hvcs.c:775:
+	if ((!hvcsd->p_unit_address) || (!hvcsd->p_partition_ID))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1254: FILE: drivers/char/hvcs.c:799:
+	retval = hvcs_register_connection(unit_address,
+			hvcsd->p_partition_ID,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1256: FILE: drivers/char/hvcs.c:801:
+	if (!retval) {
[...]
+	} else if (retval != -EINVAL)
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1273: FILE: drivers/char/hvcs.c:818:
+	retval = hvcs_register_connection(unit_address,
+			hvcsd->p_partition_ID,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1286: FILE: drivers/char/hvcs.c:831:
+	printk(KERN_INFO "HVCS: vty-server or partner"

WARNING:SPLIT_STRING: quoted string split across lines
#1287: FILE: drivers/char/hvcs.c:832:
+	printk(KERN_INFO "HVCS: vty-server or partner"
+			" vty is busy.  Try again later.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1295: FILE: drivers/char/hvcs.c:840:
+	int retval;
+	do {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1303: FILE: drivers/char/hvcs.c:848:
+static int hvcs_enable_device(struct hvcs_struct *hvcsd, uint32_t unit_address,
+		unsigned int irq, struct vio_dev *vdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: drivers/char/hvcs.c:857:
+	if (!request_irq(irq, &hvcs_handle_interrupt,
+				SA_INTERRUPT, "ibmhvcs", hvcsd)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1317: FILE: drivers/char/hvcs.c:862:
+		if (vio_enable_interrupts(vdev) == H_Success)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1319: FILE: drivers/char/hvcs.c:864:
+			return 0;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1319: FILE: drivers/char/hvcs.c:864:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1320: FILE: drivers/char/hvcs.c:865:
+			printk(KERN_ERR "HVCS: int enable failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#1321: FILE: drivers/char/hvcs.c:866:
+			printk(KERN_ERR "HVCS: int enable failed for"
+					" vty-server@%X.\n", unit_address);

CHECK:BRACES: Unbalanced braces around else statement
#1324: FILE: drivers/char/hvcs.c:869:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1325: FILE: drivers/char/hvcs.c:870:
+		printk(KERN_ERR "HVCS: irq req failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#1326: FILE: drivers/char/hvcs.c:871:
+		printk(KERN_ERR "HVCS: irq req failed for"
+				" vty-server@%X.\n", unit_address);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1334: FILE: drivers/char/hvcs.c:879:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1361: FILE: drivers/char/hvcs.c:906:
+				spin_unlock_irqrestore(&hvcs_structs_lock,
+						structs_flags);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1377: FILE: drivers/char/hvcs.c:922:
+static int hvcs_open(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1393: FILE: drivers/char/hvcs.c:938:
+	if (!(hvcsd = hvcs_get_by_index(tty->index))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1394: FILE: drivers/char/hvcs.c:939:
+		printk(KERN_WARNING "HVCS: open failed, no index.\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1401: FILE: drivers/char/hvcs.c:946:
+		if ((retval = hvcs_partner_connect(hvcsd)))

WARNING:TYPO_SPELLING: 'spinlcok' may be misspelled - perhaps 'spinlock'?
#1432: FILE: drivers/char/hvcs.c:977:
+	 * and will grab the spinlcok and free the connection if it fails.
 	                     ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1436: FILE: drivers/char/hvcs.c:981:
+		printk(KERN_WARNING "HVCS: enable device failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1448: FILE: drivers/char/hvcs.c:993:
+		printk(KERN_ERR "HVCS: Kobject of open"

WARNING:SPLIT_STRING: quoted string split across lines
#1449: FILE: drivers/char/hvcs.c:994:
+		printk(KERN_ERR "HVCS: Kobject of open"
+			" hvcs doesn't exist.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1460: FILE: drivers/char/hvcs.c:1005:
+	printk(KERN_INFO "HVCS: vty-server@%X opened.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1461: FILE: drivers/char/hvcs.c:1006:
+	printk(KERN_INFO "HVCS: vty-server@%X opened.\n",
+		hvcsd->vdev->unit_address );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1461: FILE: drivers/char/hvcs.c:1006:
+		hvcsd->vdev->unit_address );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1469: FILE: drivers/char/hvcs.c:1014:
+	printk(KERN_WARNING "HVCS: HVCS partner connect failed.\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1473: FILE: drivers/char/hvcs.c:1018:
+static void hvcs_close(struct tty_struct *tty, struct file *filp)
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1483: FILE: drivers/char/hvcs.c:1028:
+	if (tty_hung_up_p(filp))
 	                  ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1498: FILE: drivers/char/hvcs.c:1043:
+	if (--hvcsd->open_count == 0) {
+

ERROR:SPACING: space required before the open parenthesis '('
#1517: FILE: drivers/char/hvcs.c:1062:
+		while(hvcsd->chars_in_buffer) {

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1526: FILE: drivers/char/hvcs.c:1071:
+			yield();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1533: FILE: drivers/char/hvcs.c:1078:
+		printk(KERN_ERR "HVCS: vty-server@%X open_count: %d"

WARNING:TYPO_SPELLING: 'missmanaged' may be misspelled - perhaps 'mismanaged'?
#1534: FILE: drivers/char/hvcs.c:1079:
+				" is missmanaged.\n",
 				     ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1534: FILE: drivers/char/hvcs.c:1079:
+		printk(KERN_ERR "HVCS: vty-server@%X open_count: %d"
+				" is missmanaged.\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1544: FILE: drivers/char/hvcs.c:1089:
+static void hvcs_hangup(struct tty_struct * tty)

ERROR:SPACING: space required before the open parenthesis '('
#1573: FILE: drivers/char/hvcs.c:1118:
+	while(temp_open_count) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1592: FILE: drivers/char/hvcs.c:1137:
+static int hvcs_write(struct tty_struct *tty, int from_user,
+		const unsigned char *buf, int count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1611: FILE: drivers/char/hvcs.c:1156:
+		printk(KERN_WARNING "HVCS write: count being truncated to"

WARNING:SPLIT_STRING: quoted string split across lines
#1612: FILE: drivers/char/hvcs.c:1157:
+		printk(KERN_WARNING "HVCS write: count being truncated to"
+				" HVCS_MAX_FROM_USER.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1616: FILE: drivers/char/hvcs.c:1161:
+	if (!from_user)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1618: FILE: drivers/char/hvcs.c:1163:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1621: FILE: drivers/char/hvcs.c:1166:
+			printk(KERN_WARNING "HVCS: write -ENOMEM.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1621: FILE: drivers/char/hvcs.c:1166:
+		if (!charbuf) {
+			printk(KERN_WARNING "HVCS: write -ENOMEM.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1627: FILE: drivers/char/hvcs.c:1172:
+			printk(KERN_WARNING "HVCS: write -EFAULT.\n");

WARNING:TYPO_SPELLING: 'succedded' may be misspelled - perhaps 'succeeded'?
#1635: FILE: drivers/char/hvcs.c:1180:
+	 * Somehow an open succedded but the device was removed or the
 	                   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1659: FILE: drivers/char/hvcs.c:1204:
+		memcpy(&hvcsd->buffer[hvcsd->chars_in_buffer],
+				&charbuf[total_sent],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1674: FILE: drivers/char/hvcs.c:1219:
+			result = hvc_put_chars(unit_address,
+					&hvcsd->buffer[0],

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#1682: FILE: drivers/char/hvcs.c:1227:
+		total_sent+=tosend;
 		          ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#1683: FILE: drivers/char/hvcs.c:1228:
+		count-=tosend;
 		     ^

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#1710: FILE: drivers/char/hvcs.c:1255:
+ * This is really asking how much can we guarentee that we can send or that we
                                          ^^^^^^^^^

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#1741: FILE: drivers/char/hvcs.c:1286:
+static struct tty_operations hvcs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1757: FILE: drivers/char/hvcs.c:1302:
+	printk(KERN_INFO "Initializing %s\n", hvcs_driver_string);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hvcs_parm_num_devs > HVCS_MAX_SERVER_ADAPTERS'
#1760: FILE: drivers/char/hvcs.c:1305:
+	if (hvcs_parm_num_devs <= 0 ||
+		(hvcs_parm_num_devs > HVCS_MAX_SERVER_ADAPTERS)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1760: FILE: drivers/char/hvcs.c:1305:
+	if (hvcs_parm_num_devs <= 0 ||
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1761: FILE: drivers/char/hvcs.c:1306:
+	if (hvcs_parm_num_devs <= 0 ||
+		(hvcs_parm_num_devs > HVCS_MAX_SERVER_ADAPTERS)) {

CHECK:BRACES: Unbalanced braces around else statement
#1763: FILE: drivers/char/hvcs.c:1308:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1798: FILE: drivers/char/hvcs.c:1343:
+		printk(KERN_ERR "HVCS: registration "

WARNING:SPLIT_STRING: quoted string split across lines
#1799: FILE: drivers/char/hvcs.c:1344:
+		printk(KERN_ERR "HVCS: registration "
+			" as a tty driver failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1811: FILE: drivers/char/hvcs.c:1356:
+		printk("khvcsd creation failed.  Driver not loaded.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1825: FILE: drivers/char/hvcs.c:1370:
+	printk(KERN_INFO "HVCS: driver module inserted.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1858: FILE: drivers/char/hvcs.c:1403:
+	printk(KERN_INFO "HVCS: driver module removed.\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1868: FILE: drivers/char/hvcs.c:1413:
+}
+/* The sysfs interface for the driver and devices */

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_partner_vtys_show' to 'partner_vtys_show'
#1881: FILE: drivers/char/hvcs.c:1426:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1882: FILE: drivers/char/hvcs.c:1427:
+static DEVICE_ATTR(partner_vtys, S_IRUGO, hvcs_partner_vtys_show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_partner_clcs_show' to 'partner_clcs_show'
#1895: FILE: drivers/char/hvcs.c:1440:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1896: FILE: drivers/char/hvcs.c:1441:
+static DEVICE_ATTR(partner_clcs, S_IRUGO, hvcs_partner_clcs_show, NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1898: FILE: drivers/char/hvcs.c:1443:
+static ssize_t hvcs_current_vty_store(struct device *dev, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1899: FILE: drivers/char/hvcs.c:1444:
+static ssize_t hvcs_current_vty_store(struct device *dev, const char * buf,
+		size_t count)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1905: FILE: drivers/char/hvcs.c:1450:
+	printk(KERN_INFO "HVCS: Denied current_vty change: -EPERM.\n");

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_current_vty_show' to 'current_vty_show' 'hvcs_current_vty_store' to 'current_vty_store'
#1920: FILE: drivers/char/hvcs.c:1465:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1923: FILE: drivers/char/hvcs.c:1468:
+	S_IRUGO | S_IWUSR, hvcs_current_vty_show, hvcs_current_vty_store);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1926: FILE: drivers/char/hvcs.c:1471:
+static ssize_t hvcs_vterm_state_store(struct device *dev, const char *buf,
+		size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1933: FILE: drivers/char/hvcs.c:1478:
+	if (simple_strtol(buf, NULL, 0) != 0)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1940: FILE: drivers/char/hvcs.c:1485:
+		printk(KERN_INFO "HVCS: vterm state unchanged.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1941: FILE: drivers/char/hvcs.c:1486:
+		printk(KERN_INFO "HVCS: vterm state unchanged.  "
+				"The hvcs device node is still in use.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1947: FILE: drivers/char/hvcs.c:1492:
+		printk(KERN_INFO "HVCS: vterm state unchanged. The"

WARNING:SPLIT_STRING: quoted string split across lines
#1948: FILE: drivers/char/hvcs.c:1493:
+		printk(KERN_INFO "HVCS: vterm state unchanged. The"
+				" vty-server is not connected to a vty.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1953: FILE: drivers/char/hvcs.c:1498:
+	printk(KERN_INFO "HVCS: Closed vty-server@%X and"

WARNING:SPLIT_STRING: quoted string split across lines
#1954: FILE: drivers/char/hvcs.c:1499:
+	printk(KERN_INFO "HVCS: Closed vty-server@%X and"
+			" partner vty@%X:%d connection.\n",

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hvcs_vterm_state_show' to 'vterm_state_show' 'hvcs_vterm_state_store' to 'vterm_state_store'
#1974: FILE: drivers/char/hvcs.c:1519:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1975: FILE: drivers/char/hvcs.c:1520:
+static DEVICE_ATTR(vterm_state, S_IRUGO | S_IWUSR,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1993: FILE: drivers/char/hvcs.c:1538:
+	struct vio_dev *vdev = hvcsd->vdev;
+	sysfs_create_group(&vdev->dev.kobj, &hvcs_attr_group);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2007: FILE: drivers/char/hvcs.c:1552:
+static ssize_t hvcs_rescan_store(struct device_driver *ddp, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: drivers/char/hvcs.c:1553:
+static ssize_t hvcs_rescan_store(struct device_driver *ddp, const char * buf,
+		size_t count)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hvcs_rescan_status != 0'
#2010: FILE: drivers/char/hvcs.c:1555:
+	if ((simple_strtol(buf, NULL, 0) != 1)
+		&& (hvcs_rescan_status != 0))

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#2010: FILE: drivers/char/hvcs.c:1555:
+	if ((simple_strtol(buf, NULL, 0) != 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2011: FILE: drivers/char/hvcs.c:1556:
+	if ((simple_strtol(buf, NULL, 0) != 1)
+		&& (hvcs_rescan_status != 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2015: FILE: drivers/char/hvcs.c:1560:
+	printk(KERN_INFO "HVCS: rescanning partner info for all"

WARNING:SPLIT_STRING: quoted string split across lines
#2016: FILE: drivers/char/hvcs.c:1561:
+	printk(KERN_INFO "HVCS: rescanning partner info for all"
+		" vty-servers.\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2022: FILE: drivers/char/hvcs.c:1567:
+	S_IRUGO | S_IWUSR, hvcs_rescan_show, hvcs_rescan_store);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcs_vio_driver.driver
#2026: FILE: drivers/char/hvcs.c:1571:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2027: FILE: drivers/char/hvcs.c:1572:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);
+	driver_create_file(driverfs, &driver_attr_rescan);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hvcs_vio_driver.driver
#2032: FILE: drivers/char/hvcs.c:1577:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2033: FILE: drivers/char/hvcs.c:1578:
+	struct device_driver *driverfs = &(hvcs_vio_driver.driver);
+	driver_remove_file(driverfs, &driver_attr_rescan);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265265.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 106 warnings, 71 checks, 2436 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265265.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
