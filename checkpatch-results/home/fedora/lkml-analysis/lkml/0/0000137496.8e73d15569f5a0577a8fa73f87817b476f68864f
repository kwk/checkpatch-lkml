ERROR:INITIALISED_STATIC: do not initialise statics to 0
#56: FILE: drivers/media/video/saa7134/saa7134-alsa.c:39:
+static unsigned int debug  = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#58: FILE: drivers/media/video/saa7134/saa7134-alsa.c:41:
+MODULE_PARM_DESC(debug,"enable debug messages [alsa]");
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#60: FILE: drivers/media/video/saa7134/saa7134-alsa.c:43:
+unsigned int dsp_nr = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#71: FILE: drivers/media/video/saa7134/saa7134-alsa.c:76:
+#define dprintk(fmt, arg...)    if (debug) \
 	printk(KERN_DEBUG "%s/alsa: " fmt, dev->name, ## arg)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: drivers/media/video/saa7134/saa7134-alsa.c:116:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#110: FILE: drivers/media/video/saa7134/saa7134-alsa.c:230:
+	struct saa7134_dev *dev = (struct saa7134_dev*) dev_id;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#110: FILE: drivers/media/video/saa7134/saa7134-alsa.c:230:
+	struct saa7134_dev *dev = (struct saa7134_dev*) dev_id;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: drivers/media/video/saa7134/saa7134-alsa.c:240:
+			saa_writel(SAA7134_IRQ_REPORT,report);
 			                             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#127: FILE: drivers/media/video/saa7134/saa7134-alsa.c:247:
+	if (loop == 10) {
+		dprintk("error! looping IRQ!");
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: drivers/media/video/saa7134/saa7134-alsa.c:931:
+int alsa_card_saa7134_create (struct saa7134_dev *saadev, unsigned int devicenum)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/media/video/saa7134/saa7134-alsa.c:942:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/media/video/saa7134/saa7134-alsa.c:977:
+	err = request_irq(chip->pci->irq, saa7134_alsa_irq,
+				SA_SHIRQ | SA_INTERRUPT, saadev->name, saadev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#187: FILE: drivers/media/video/saa7134/saa7134-alsa.c:980:
+		printk(KERN_ERR "%s: can't get IRQ %d for ALSA\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/media/video/saa7134/saa7134-alsa.c:981:
+		printk(KERN_ERR "%s: can't get IRQ %d for ALSA\n",
+			saadev->name, saadev->pci->irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1027:
+        struct saa7134_dev *saadev = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1027:
+        struct saa7134_dev *saadev = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1028:
+        struct list_head *list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1028:
+        struct list_head *list;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#213: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1030:
+	printk(KERN_INFO "saa7134 ALSA driver for DMA sound loaded\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#215: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {
                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#215: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1032:
+        list_for_each(list,&saa7134_devlist) {
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1033:
+                saadev = list_entry(list, struct saa7134_dev, devlist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1033:
+                saadev = list_entry(list, struct saa7134_dev, devlist);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1034:
+		alsa_card_saa7134_create(saadev,dsp_nr);
 		                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1035:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1035:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1037:
+^Iif (saadev == NULL) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!saadev"
#220: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1037:
+	if (saadev == NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#221: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1038:
+		printk(KERN_INFO "saa7134 ALSA: no saa7134 cards found\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#225: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1042:
+
+}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#235: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1051:
+	for (idx = 0; idx < SNDRV_CARDS; idx++) {
 		snd_card_free(snd_saa7134_cards[idx]);
 	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#238: FILE: drivers/media/video/saa7134/saa7134-alsa.c:1054:
+	printk(KERN_INFO "saa7134 ALSA driver for DMA sound unloaded\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#254: FILE: drivers/media/video/saa7134/saa7134-core.c:579:
+		/* If alsa support is active and we get a sound report, exit
+		   and let the saa7134-alsa module deal with it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#254: FILE: drivers/media/video/saa7134/saa7134-core.c:579:
+		   and let the saa7134-alsa module deal with it */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#258: FILE: drivers/media/video/saa7134/saa7134-core.c:583:
+				printk(KERN_DEBUG "%s/irq: ignoring interrupt for ALSA\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#311: FILE: drivers/media/video/saa7134/saa7134-core.c:1223:
+EXPORT_SYMBOL(saa7134_pgtable_free);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#312: FILE: drivers/media/video/saa7134/saa7134-core.c:1224:
+EXPORT_SYMBOL(saa7134_pgtable_build);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#313: FILE: drivers/media/video/saa7134/saa7134-core.c:1225:
+EXPORT_SYMBOL(saa7134_pgtable_alloc);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#314: FILE: drivers/media/video/saa7134/saa7134-core.c:1226:
+EXPORT_SYMBOL(saa7134_set_dmabits);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#342: FILE: drivers/media/video/saa7134/saa7134-tvaudio.c:1027:
+EXPORT_SYMBOL(saa_dsp_writel);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137496.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 20 warnings, 7 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137496.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
