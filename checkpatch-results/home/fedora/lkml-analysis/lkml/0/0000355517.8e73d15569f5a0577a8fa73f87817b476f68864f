WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
diff -Nru a/drivers/pci/hotplug/phprm_acpi.c b/drivers/pci/hotplug/phprm_acpi.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#23: 
--- a/drivers/pci/hotplug/phprm_acpi.c	1969-12-31 16:00:00.000000000 -0800

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#26: FILE: drivers/pci/hotplug/phprm_acpi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#41: FILE: drivers/pci/hotplug/phprm_acpi.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#42: FILE: drivers/pci/hotplug/phprm_acpi.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#56: FILE: drivers/pci/hotplug/phprm_acpi.c:31:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: drivers/pci/hotplug/phprm_acpi.c:93:
+^Istruct pci_resource ^I*tmem_head;^I/* total from crs^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/pci/hotplug/phprm_acpi.c:94:
+^Istruct pci_resource ^I*tp_mem_head;^I/* total from crs^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: drivers/pci/hotplug/phprm_acpi.c:95:
+^Istruct pci_resource ^I*tio_head;^I/* total from crs^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/pci/hotplug/phprm_acpi.c:96:
+^Istruct pci_resource ^I*tbus_head;^I/* total from crs^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: drivers/pci/hotplug/phprm_acpi.c:97:
+^Istruct pci_resource ^I*mem_head;^I/* available^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: drivers/pci/hotplug/phprm_acpi.c:98:
+^Istruct pci_resource ^I*p_mem_head;^I/* available^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: drivers/pci/hotplug/phprm_acpi.c:99:
+^Istruct pci_resource ^I*io_head;^I/* available^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: drivers/pci/hotplug/phprm_acpi.c:100:
+^Istruct pci_resource ^I*bus_head;^I/* available^I*/$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: drivers/pci/hotplug/phprm_acpi.c:107:
+static u8 * acpi_path_name( acpi_handle	handle)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#132: FILE: drivers/pci/hotplug/phprm_acpi.c:107:
+static u8 * acpi_path_name( acpi_handle	handle)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: drivers/pci/hotplug/phprm_acpi.c:113:
+	memset(path_name, 0, sizeof (path_name));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/pci/hotplug/phprm_acpi.c:119:
+^I^Ireturn path_name;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#147: FILE: drivers/pci/hotplug/phprm_acpi.c:122:
+static void acpi_get__hpp ( struct acpi_bridge	*ab);

ERROR:SPACING: space prohibited after that open parenthesis '('
#147: FILE: drivers/pci/hotplug/phprm_acpi.c:122:
+static void acpi_get__hpp ( struct acpi_bridge	*ab);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#149: FILE: drivers/pci/hotplug/phprm_acpi.c:124:
+static int acpi_add_slot_to_php_slots(

CHECK:SPACING: No space is necessary after a cast
#160: FILE: drivers/pci/hotplug/phprm_acpi.c:135:
+	aps = (struct acpi_php_slot *) kmalloc (sizeof(struct acpi_php_slot), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: drivers/pci/hotplug/phprm_acpi.c:135:
+	aps = (struct acpi_php_slot *) kmalloc (sizeof(struct acpi_php_slot), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#160: FILE: drivers/pci/hotplug/phprm_acpi.c:135:
+	aps = (struct acpi_php_slot *) kmalloc (sizeof(struct acpi_php_slot), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*aps)...) over kmalloc(sizeof(struct acpi_php_slot)...)
#160: FILE: drivers/pci/hotplug/phprm_acpi.c:135:
+	aps = (struct acpi_php_slot *) kmalloc (sizeof(struct acpi_php_slot), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/pci/hotplug/phprm_acpi.c:137:
+		err ("acpi_phprm: alloc for aps fail\n");

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#182: FILE: drivers/pci/hotplug/phprm_acpi.c:157:
+		info("acpi_phprm:   Slot sun(%x) at s:b:d:f=0x%02x:%02x:%02x:%02x\n", aps->sun, ab->seg, aps->bus, aps->dev, aps->fun);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: drivers/pci/hotplug/phprm_acpi.c:163:
+static void acpi_get__hpp ( struct acpi_bridge	*ab)

ERROR:SPACING: space prohibited after that open parenthesis '('
#188: FILE: drivers/pci/hotplug/phprm_acpi.c:163:
+static void acpi_get__hpp ( struct acpi_bridge	*ab)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: drivers/pci/hotplug/phprm_acpi.c:176:
+		ret_buf.pointer = kmalloc (ret_buf.length, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: drivers/pci/hotplug/phprm_acpi.c:178:
+			err ("acpi_phprm:%s alloc for _HPP fail\n", path_name);

CHECK:SPACING: No space is necessary after a cast
#216: FILE: drivers/pci/hotplug/phprm_acpi.c:191:
+	ext_obj = (union acpi_object *) ret_buf.pointer;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: drivers/pci/hotplug/phprm_acpi.c:193:
+		err ("acpi_phprm:%s _HPP obj not a package\n", path_name);

CHECK:SPACING: No space is necessary after a cast
#223: FILE: drivers/pci/hotplug/phprm_acpi.c:198:
+	package = (union acpi_object *) ret_buf.pointer;

ERROR:SPACING: space prohibited after that open parenthesis '('
#224: FILE: drivers/pci/hotplug/phprm_acpi.c:199:
+	for ( i = 0; (i < len) || (i < 4); i++) {

CHECK:SPACING: No space is necessary after a cast
#225: FILE: drivers/pci/hotplug/phprm_acpi.c:200:
+		ext_obj = (union acpi_object *) &package->package.elements[i];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: drivers/pci/hotplug/phprm_acpi.c:206:
+			err ("acpi_phprm:%s _HPP obj type incorrect\n", path_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: drivers/pci/hotplug/phprm_acpi.c:211:
+	ab->_hpp = kmalloc (sizeof (struct acpi__hpp), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: drivers/pci/hotplug/phprm_acpi.c:211:
+	ab->_hpp = kmalloc (sizeof (struct acpi__hpp), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ab->_hpp)...) over kmalloc(sizeof (struct acpi__hpp)...)
#236: FILE: drivers/pci/hotplug/phprm_acpi.c:211:
+	ab->_hpp = kmalloc (sizeof (struct acpi__hpp), GFP_KERNEL);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#253: FILE: drivers/pci/hotplug/phprm_acpi.c:228:
+static acpi_status acpi_evaluate_crs(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: drivers/pci/hotplug/phprm_acpi.c:240:
+	status = acpi_get_current_resources (handle, &crsbuf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: drivers/pci/hotplug/phprm_acpi.c:249:
+		err ("acpi_phprm:%s _CRS fail=0x%x\n", path_name, status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: drivers/pci/hotplug/phprm_acpi.c:253:
+	crsbuf.pointer = kmalloc (crsbuf.length, GFP_KERNEL);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#280: FILE: drivers/pci/hotplug/phprm_acpi.c:255:
+		err ("acpi_phprm: alloc %ld bytes for %s _CRS fail\n", (ulong)crsbuf.length, path_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/pci/hotplug/phprm_acpi.c:255:
+		err ("acpi_phprm: alloc %ld bytes for %s _CRS fail\n", (ulong)crsbuf.length, path_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: drivers/pci/hotplug/phprm_acpi.c:259:
+	status = acpi_get_current_resources (handle, &crsbuf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: drivers/pci/hotplug/phprm_acpi.c:271:
+static void free_pci_resource ( struct pci_resource	*aprh)

ERROR:SPACING: space prohibited after that open parenthesis '('
#296: FILE: drivers/pci/hotplug/phprm_acpi.c:271:
+static void free_pci_resource ( struct pci_resource	*aprh)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: drivers/pci/hotplug/phprm_acpi.c:281:
+static void print_pci_resource ( struct pci_resource	*aprh)

ERROR:SPACING: space prohibited after that open parenthesis '('
#306: FILE: drivers/pci/hotplug/phprm_acpi.c:281:
+static void print_pci_resource ( struct pci_resource	*aprh)

ERROR:SPACING: space prohibited after that open parenthesis '('
#314: FILE: drivers/pci/hotplug/phprm_acpi.c:289:
+static void print_slot_resources( struct acpi_php_slot	*aps)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: drivers/pci/hotplug/phprm_acpi.c:293:
+		print_pci_resource (aps->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: drivers/pci/hotplug/phprm_acpi.c:298:
+		print_pci_resource (aps->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: drivers/pci/hotplug/phprm_acpi.c:303:
+		print_pci_resource (aps->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: drivers/pci/hotplug/phprm_acpi.c:308:
+		print_pci_resource (aps->p_mem_head);

ERROR:SPACING: space prohibited after that open parenthesis '('
#337: FILE: drivers/pci/hotplug/phprm_acpi.c:312:
+static void print_pci_resources( struct acpi_bridge	*ab)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#341: FILE: drivers/pci/hotplug/phprm_acpi.c:316:
+		print_pci_resource (ab->tbus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: drivers/pci/hotplug/phprm_acpi.c:320:
+		print_pci_resource (ab->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: drivers/pci/hotplug/phprm_acpi.c:325:
+		print_pci_resource (ab->tio_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#354: FILE: drivers/pci/hotplug/phprm_acpi.c:329:
+		print_pci_resource (ab->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: drivers/pci/hotplug/phprm_acpi.c:334:
+		print_pci_resource (ab->tmem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: drivers/pci/hotplug/phprm_acpi.c:338:
+		print_pci_resource (ab->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: drivers/pci/hotplug/phprm_acpi.c:343:
+		print_pci_resource (ab->tp_mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#372: FILE: drivers/pci/hotplug/phprm_acpi.c:347:
+		print_pci_resource (ab->p_mem_head);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#382: FILE: drivers/pci/hotplug/phprm_acpi.c:357:
+static int phprm_delete_resource(

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#407: FILE: drivers/pci/hotplug/phprm_acpi.c:382:
+			split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#407: FILE: drivers/pci/hotplug/phprm_acpi.c:382:
+			split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#407: FILE: drivers/pci/hotplug/phprm_acpi.c:382:
+			split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*split_node)...) over kmalloc(sizeof(struct pci_resource)...)
#407: FILE: drivers/pci/hotplug/phprm_acpi.c:382:
+			split_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#421: FILE: drivers/pci/hotplug/phprm_acpi.c:396:
+			split_node = (struct pci_resource*) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#421: FILE: drivers/pci/hotplug/phprm_acpi.c:396:
+			split_node = (struct pci_resource*) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#421: FILE: drivers/pci/hotplug/phprm_acpi.c:396:
+			split_node = (struct pci_resource*) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#421: FILE: drivers/pci/hotplug/phprm_acpi.c:396:
+			split_node = (struct pci_resource*) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*split_node)...) over kmalloc(sizeof(struct pci_resource)...)
#421: FILE: drivers/pci/hotplug/phprm_acpi.c:396:
+			split_node = (struct pci_resource*) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#450: FILE: drivers/pci/hotplug/phprm_acpi.c:425:
+static int phprm_delete_resources(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#463: FILE: drivers/pci/hotplug/phprm_acpi.c:438:
+static int phprm_add_resource(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*res)...) over kmalloc(sizeof(struct pci_resource)...)
#481: FILE: drivers/pci/hotplug/phprm_acpi.c:456:
+		res = kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: drivers/pci/hotplug/phprm_acpi.c:458:
+			err ("acpi_phprm: alloc for res fail\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#486: FILE: drivers/pci/hotplug/phprm_acpi.c:461:
+		memset(res, 0, sizeof (struct pci_resource));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#497: FILE: drivers/pci/hotplug/phprm_acpi.c:472:
+static int phprm_add_resources(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#511: FILE: drivers/pci/hotplug/phprm_acpi.c:486:
+static void acpi_parse_io (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#511: FILE: drivers/pci/hotplug/phprm_acpi.c:486:
+static void acpi_parse_io (

CHECK:SPACING: No space is necessary after a cast
#517: FILE: drivers/pci/hotplug/phprm_acpi.c:492:
+	dataio = (struct acpi_resource_io *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: drivers/pci/hotplug/phprm_acpi.c:492:
+	struct acpi_resource_io	*dataio;
+	dataio = (struct acpi_resource_io *) data;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#520: FILE: drivers/pci/hotplug/phprm_acpi.c:495:
+	dbg("  %d bit decode\n", ACPI_DECODE_16 == dataio->io_decode ? 16:10);
 	                                                                 ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#527: FILE: drivers/pci/hotplug/phprm_acpi.c:502:
+static void acpi_parse_fixed_io (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#527: FILE: drivers/pci/hotplug/phprm_acpi.c:502:
+static void acpi_parse_fixed_io (

CHECK:SPACING: No space is necessary after a cast
#533: FILE: drivers/pci/hotplug/phprm_acpi.c:508:
+	datafio = (struct acpi_resource_fixed_io *) data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: drivers/pci/hotplug/phprm_acpi.c:508:
+	struct acpi_resource_fixed_io  *datafio;
+	datafio = (struct acpi_resource_fixed_io *) data;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#540: FILE: drivers/pci/hotplug/phprm_acpi.c:515:
+static void acpi_parse_address16_32 (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#540: FILE: drivers/pci/hotplug/phprm_acpi.c:515:
+static void acpi_parse_address16_32 (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: drivers/pci/hotplug/phprm_acpi.c:521:
+^I/* $

CHECK:SPACING: No space is necessary after a cast
#550: FILE: drivers/pci/hotplug/phprm_acpi.c:525:
+	struct acpi_resource_address32 *data32 = (struct acpi_resource_address32 *) data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: drivers/pci/hotplug/phprm_acpi.c:534:
+^Icase ACPI_MEMORY_RANGE: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: drivers/pci/hotplug/phprm_acpi.c:542:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: drivers/pci/hotplug/phprm_acpi.c:545:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: drivers/pci/hotplug/phprm_acpi.c:548:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: drivers/pci/hotplug/phprm_acpi.c:552:
+^I^I^Ibreak; $

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#583: FILE: drivers/pci/hotplug/phprm_acpi.c:558:
+		dbg("  Type Specific: Read%s\n", ACPI_READ_WRITE_MEMORY == data32->attribute.memory.read_write_attribute ? "/Write":" Only");

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#583: FILE: drivers/pci/hotplug/phprm_acpi.c:558:
+		dbg("  Type Specific: Read%s\n", ACPI_READ_WRITE_MEMORY == data32->attribute.memory.read_write_attribute ? "/Write":" Only");
 		                                                                                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/pci/hotplug/phprm_acpi.c:561:
+^Icase ACPI_IO_RANGE: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/pci/hotplug/phprm_acpi.c:569:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: drivers/pci/hotplug/phprm_acpi.c:572:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/pci/hotplug/phprm_acpi.c:575:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: drivers/pci/hotplug/phprm_acpi.c:582:
+^Icase ACPI_BUS_NUMBER_RANGE: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/pci/hotplug/phprm_acpi.c:589:
+^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: drivers/pci/hotplug/phprm_acpi.c:590:
+^Idefault: $

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#620: FILE: drivers/pci/hotplug/phprm_acpi.c:595:
+	dbg("  Resource %s\n", ACPI_CONSUMER == data32->producer_consumer ? "Consumer":"Producer");
 	                                                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#621: FILE: drivers/pci/hotplug/phprm_acpi.c:596:
+	dbg("  %s decode\n", ACPI_SUB_DECODE == data32->decode ? "Subtractive":"Positive");
 	                                                                      ^

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#622: FILE: drivers/pci/hotplug/phprm_acpi.c:597:
+	dbg("  Min address is %s fixed\n", ACPI_ADDRESS_FIXED == data32->min_address_fixed ? "":"not");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#622: FILE: drivers/pci/hotplug/phprm_acpi.c:597:
+	dbg("  Min address is %s fixed\n", ACPI_ADDRESS_FIXED == data32->min_address_fixed ? "":"not");
 	                                                                                       ^

WARNING:LONG_LINE_STRING: line length of 103 exceeds 100 columns
#623: FILE: drivers/pci/hotplug/phprm_acpi.c:598:
+	dbg("  Max address is %s fixed\n", ACPI_ADDRESS_FIXED == data32->max_address_fixed ? "":"not");

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#623: FILE: drivers/pci/hotplug/phprm_acpi.c:598:
+	dbg("  Max address is %s fixed\n", ACPI_ADDRESS_FIXED == data32->max_address_fixed ? "":"not");
 	                                                                                       ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#630: FILE: drivers/pci/hotplug/phprm_acpi.c:605:
+	if (0xFF != data32->resource_source.index) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#638: FILE: drivers/pci/hotplug/phprm_acpi.c:613:
+static acpi_status acpi_parse_crs(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: drivers/pci/hotplug/phprm_acpi.c:628:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/pci/hotplug/phprm_acpi.c:631:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: drivers/pci/hotplug/phprm_acpi.c:634:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: drivers/pci/hotplug/phprm_acpi.c:637:
+^I^I^Ibreak; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#664: FILE: drivers/pci/hotplug/phprm_acpi.c:639:
+			acpi_parse_io (ab, &resource->data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: drivers/pci/hotplug/phprm_acpi.c:640:
+^I^I^Ibreak; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#667: FILE: drivers/pci/hotplug/phprm_acpi.c:642:
+			acpi_parse_fixed_io (ab, &resource->data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: drivers/pci/hotplug/phprm_acpi.c:643:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: drivers/pci/hotplug/phprm_acpi.c:646:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/pci/hotplug/phprm_acpi.c:650:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/pci/hotplug/phprm_acpi.c:653:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: drivers/pci/hotplug/phprm_acpi.c:656:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/pci/hotplug/phprm_acpi.c:659:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: drivers/pci/hotplug/phprm_acpi.c:662:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: drivers/pci/hotplug/phprm_acpi.c:665:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: drivers/pci/hotplug/phprm_acpi.c:668:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: drivers/pci/hotplug/phprm_acpi.c:671:
+^I^I^Ibreak; $

CHECK:SPACING: No space is necessary after a cast
#702: FILE: drivers/pci/hotplug/phprm_acpi.c:677:
+		resource = (struct acpi_resource *) ((char *)resource + resource->length);

ERROR:SPACING: space prohibited after that open parenthesis '('
#708: FILE: drivers/pci/hotplug/phprm_acpi.c:683:
+static acpi_status acpi_get_crs( struct acpi_bridge	*ab)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: drivers/pci/hotplug/phprm_acpi.c:698:
+		phprm_add_resources (&ab->tbus_head, ab->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: drivers/pci/hotplug/phprm_acpi.c:699:
+		phprm_add_resources (&ab->tio_head, ab->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#725: FILE: drivers/pci/hotplug/phprm_acpi.c:700:
+		phprm_add_resources (&ab->tmem_head, ab->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: drivers/pci/hotplug/phprm_acpi.c:701:
+		phprm_add_resources (&ab->tp_mem_head, ab->p_mem_head);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#734: FILE: drivers/pci/hotplug/phprm_acpi.c:709:
+find_acpi_bridge_by_bus(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ab->bus == bus'
#745: FILE: drivers/pci/hotplug/phprm_acpi.c:720:
+	if ((ab->bus == bus) && (ab->seg == seg))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ab->seg == seg'
#745: FILE: drivers/pci/hotplug/phprm_acpi.c:720:
+	if ((ab->bus == bus) && (ab->seg == seg))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#751: FILE: drivers/pci/hotplug/phprm_acpi.c:726:
+	if (!lab)
+	if (ab->next)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#761: FILE: drivers/pci/hotplug/phprm_acpi.c:736:
+static void phprm_acpi_register_a_bridge (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#761: FILE: drivers/pci/hotplug/phprm_acpi.c:736:
+static void phprm_acpi_register_a_bridge (

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pab == cab'
#779: FILE: drivers/pci/hotplug/phprm_acpi.c:754:
+	if ((cab->type & BRIDGE_TYPE_HOST) && (pab == cab))

CHECK:BRACES: braces {} should be used on all arms of this statement
#783: FILE: drivers/pci/hotplug/phprm_acpi.c:758:
+	if (lcab) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pab->bus != lcab->parent->bus'
#784: FILE: drivers/pci/hotplug/phprm_acpi.c:759:
+		if ((pab->bus != lcab->parent->bus) || (lcab->bus != cab->bus))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lcab->bus != cab->bus'
#784: FILE: drivers/pci/hotplug/phprm_acpi.c:759:
+		if ((pab->bus != lcab->parent->bus) || (lcab->bus != cab->bus))

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#785: FILE: drivers/pci/hotplug/phprm_acpi.c:760:
+			err("PCI child bridge s:b(%x:%x) in list with diff parent.\n", cab->seg, cab->bus);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#787: FILE: drivers/pci/hotplug/phprm_acpi.c:762:
+		return;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#787: FILE: drivers/pci/hotplug/phprm_acpi.c:762:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#795: FILE: drivers/pci/hotplug/phprm_acpi.c:770:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#796: FILE: drivers/pci/hotplug/phprm_acpi.c:771:
+static acpi_status phprm_acpi_build_php_slots_callback(

CHECK:CAMELCASE: Avoid CamelCase: <Level>
#798: FILE: drivers/pci/hotplug/phprm_acpi.c:773:
+	u32		Level,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required before the open parenthesis '('
#815: FILE: drivers/pci/hotplug/phprm_acpi.c:790:
+	switch(status) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#837: FILE: drivers/pci/hotplug/phprm_acpi.c:812:
+		return (status);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: braces {} should be used on all arms of this statement
#848: FILE: drivers/pci/hotplug/phprm_acpi.c:823:
+		if (!lab) {
[...]
+		} else
[...]

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#849: FILE: drivers/pci/hotplug/phprm_acpi.c:824:
+			dbg("acpi_phprm: alloc new P2P bridge(%x) for sun(%08x)\n", (u32)bus_num, (u32)sun);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#850: FILE: drivers/pci/hotplug/phprm_acpi.c:825:
+			lab = (struct acpi_bridge *)kmalloc(sizeof(struct acpi_bridge), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*lab)...) over kmalloc(sizeof(struct acpi_bridge)...)
#850: FILE: drivers/pci/hotplug/phprm_acpi.c:825:
+			lab = (struct acpi_bridge *)kmalloc(sizeof(struct acpi_bridge), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#865: FILE: drivers/pci/hotplug/phprm_acpi.c:840:
+			phprm_acpi_register_a_bridge (&acpi_bridges_head, pab, lab);

CHECK:BRACES: Unbalanced braces around else statement
#866: FILE: drivers/pci/hotplug/phprm_acpi.c:841:
+		} else

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#867: FILE: drivers/pci/hotplug/phprm_acpi.c:842:
+			dbg("acpi_phprm: found P2P bridge(%x) for sun(%08x)\n", (u32)bus_num, (u32)sun);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#872: FILE: drivers/pci/hotplug/phprm_acpi.c:847:
+	return (status);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#875: FILE: drivers/pci/hotplug/phprm_acpi.c:850:
+static int phprm_acpi_build_php_slots(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#884: FILE: drivers/pci/hotplug/phprm_acpi.c:859:
+	status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,

ERROR:SPACING: space prohibited after that open parenthesis '('
#884: FILE: drivers/pci/hotplug/phprm_acpi.c:859:
+	status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: drivers/pci/hotplug/phprm_acpi.c:860:
+	status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,
+				ab->handle,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#889: FILE: drivers/pci/hotplug/phprm_acpi.c:864:
+				NULL );

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#891: FILE: drivers/pci/hotplug/phprm_acpi.c:866:
+		dbg("acpi_phprm:%s walk for _SUN on pci bridge seg:bus(%x:%x) fail=0x%x\n", path_name, ab->seg, ab->bus, status);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#898: FILE: drivers/pci/hotplug/phprm_acpi.c:873:
+static void build_a_bridge(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#905: FILE: drivers/pci/hotplug/phprm_acpi.c:880:
+	phprm_acpi_register_a_bridge (&acpi_bridges_head, pab, ab);

WARNING:LONG_LINE_STRING: line length of 109 exceeds 100 columns
#909: FILE: drivers/pci/hotplug/phprm_acpi.c:884:
+		dbg("acpi_phprm: Registered PCI HOST Bridge(%02x)    on s:b:d:f(%02x:%02x:%02x:%02x) [%s]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/pci/hotplug/phprm_acpi.c:885:
+		dbg("acpi_phprm: Registered PCI HOST Bridge(%02x)    on s:b:d:f(%02x:%02x:%02x:%02x) [%s]\n",
+			ab->bus, ab->seg, ab->pbus, ab->pdevice, ab->pfunction, path_name);

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#913: FILE: drivers/pci/hotplug/phprm_acpi.c:888:
+		dbg("acpi_phprm: Registered PCI  P2P Bridge(%02x-%02x) on s:b:d:f(%02x:%02x:%02x:%02x) [%s]\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#914: FILE: drivers/pci/hotplug/phprm_acpi.c:889:
+			ab->pbus, ab->bus, ab->seg, ab->pbus, ab->pdevice, ab->pfunction, path_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#914: FILE: drivers/pci/hotplug/phprm_acpi.c:889:
+		dbg("acpi_phprm: Registered PCI  P2P Bridge(%02x-%02x) on s:b:d:f(%02x:%02x:%02x:%02x) [%s]\n",
+			ab->pbus, ab->bus, ab->seg, ab->pbus, ab->pdevice, ab->pfunction, path_name);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#922: FILE: drivers/pci/hotplug/phprm_acpi.c:897:
+struct acpi_bridge * add_p2p_bridge(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#922: FILE: drivers/pci/hotplug/phprm_acpi.c:897:
+struct acpi_bridge * add_p2p_bridge(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#923: FILE: drivers/pci/hotplug/phprm_acpi.c:898:
+^Iacpi_handle ^I^Ihandle,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#925: FILE: drivers/pci/hotplug/phprm_acpi.c:900:
+	struct acpi_bridge	*pab,	/* parent */
+	ulong			adr

CHECK:SPACING: No space is necessary after a cast
#933: FILE: drivers/pci/hotplug/phprm_acpi.c:908:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#933: FILE: drivers/pci/hotplug/phprm_acpi.c:908:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#933: FILE: drivers/pci/hotplug/phprm_acpi.c:908:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ab)...) over kmalloc(sizeof(struct acpi_bridge)...)
#933: FILE: drivers/pci/hotplug/phprm_acpi.c:908:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#960: FILE: drivers/pci/hotplug/phprm_acpi.c:935:
+	dbg("acpi_phprm: P2P(%x-%x) on pci=b:d:f(%x:%x:%x) acpi=b:d:f(%x:%x:%x) [%s]\n",
+		pab->bus, ab->bus, pdev->bus->number, PCI_SLOT(pdev->devfn), PCI_FUNC(pdev->devfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#968: FILE: drivers/pci/hotplug/phprm_acpi.c:943:
+static acpi_status scan_p2p_bridge(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1002: FILE: drivers/pci/hotplug/phprm_acpi.c:977:
+		status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1002: FILE: drivers/pci/hotplug/phprm_acpi.c:977:
+		status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/pci/hotplug/phprm_acpi.c:978:
+		status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,
+					handle,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1015: FILE: drivers/pci/hotplug/phprm_acpi.c:990:
+struct acpi_bridge * add_host_bridge(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1015: FILE: drivers/pci/hotplug/phprm_acpi.c:990:
+struct acpi_bridge * add_host_bridge(

WARNING:LONG_LINE: line length of 164 exceeds 100 columns
#1032: FILE: drivers/pci/hotplug/phprm_acpi.c:1007:
+	dbg("acpi_phprm: ROOT PCI seg(0x%x)bus(0x%x)dev(0x%x)func(0x%x) [%s]\n", (u32)segnum, (u32)busnum, (u32)(adr >> 16) & 0xffff, (u32)adr & 0xffff, path_name);

CHECK:SPACING: No space is necessary after a cast
#1034: FILE: drivers/pci/hotplug/phprm_acpi.c:1009:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1034: FILE: drivers/pci/hotplug/phprm_acpi.c:1009:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1034: FILE: drivers/pci/hotplug/phprm_acpi.c:1009:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ab)...) over kmalloc(sizeof(struct acpi_bridge)...)
#1034: FILE: drivers/pci/hotplug/phprm_acpi.c:1009:
+	ab = (struct acpi_bridge *) kmalloc (sizeof(struct acpi_bridge), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1043: FILE: drivers/pci/hotplug/phprm_acpi.c:1018:
+	ab->bus = ab->pbus = (int)busnum;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1061: FILE: drivers/pci/hotplug/phprm_acpi.c:1036:
+static acpi_status acpi_scan_from_root_pci_callback (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1061: FILE: drivers/pci/hotplug/phprm_acpi.c:1036:
+static acpi_status acpi_scan_from_root_pci_callback (

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1088: FILE: drivers/pci/hotplug/phprm_acpi.c:1063:
+		return (status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1093: FILE: drivers/pci/hotplug/phprm_acpi.c:1068:
+		status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1093: FILE: drivers/pci/hotplug/phprm_acpi.c:1068:
+		status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1094: FILE: drivers/pci/hotplug/phprm_acpi.c:1069:
+		status = acpi_walk_namespace ( ACPI_TYPE_DEVICE,
+					handle,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1106: FILE: drivers/pci/hotplug/phprm_acpi.c:1081:
+static int phprm_acpi_scan_pci (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1110: FILE: drivers/pci/hotplug/phprm_acpi.c:1085:
+	status = acpi_get_devices ( PCI_ROOT_HID_STRING,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1110: FILE: drivers/pci/hotplug/phprm_acpi.c:1085:
+	status = acpi_get_devices ( PCI_ROOT_HID_STRING,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: drivers/pci/hotplug/phprm_acpi.c:1086:
+	status = acpi_get_devices ( PCI_ROOT_HID_STRING,
+				acpi_scan_from_root_pci_callback,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1113: FILE: drivers/pci/hotplug/phprm_acpi.c:1088:
+				NULL );

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1137: FILE: drivers/pci/hotplug/phprm_acpi.c:1112:
+	dbg("PHPRM ACPI init %s\n", (rc)?"fail":"success");
 	                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1137: FILE: drivers/pci/hotplug/phprm_acpi.c:1112:
+	dbg("PHPRM ACPI init %s\n", (rc)?"fail":"success");
 	                                       ^

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#1143: FILE: drivers/pci/hotplug/phprm_acpi.c:1118:
+	dbg("        free a php func of slot(0x%02x) on PCI b:d:f=0x%02x:%02x:%02x\n", aps->sun, aps->bus, aps->dev, aps->fun);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1145: FILE: drivers/pci/hotplug/phprm_acpi.c:1120:
+	free_pci_resource (aps->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1146: FILE: drivers/pci/hotplug/phprm_acpi.c:1121:
+	free_pci_resource (aps->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1147: FILE: drivers/pci/hotplug/phprm_acpi.c:1122:
+	free_pci_resource (aps->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1148: FILE: drivers/pci/hotplug/phprm_acpi.c:1123:
+	free_pci_resource (aps->p_mem_head);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1153: FILE: drivers/pci/hotplug/phprm_acpi.c:1128:
+static void free_a_bridge( struct acpi_bridge	*ab)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1160: FILE: drivers/pci/hotplug/phprm_acpi.c:1135:
+			ab->bus, acpi_path_name(ab->handle), ab->seg, ab->pbus, ab->pdevice, ab->pfunction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: drivers/pci/hotplug/phprm_acpi.c:1135:
+		dbg("Free ACPI PCI HOST Bridge(%x) [%s] on s:b:d:f(%x:%x:%x:%x)\n",
+			ab->bus, acpi_path_name(ab->handle), ab->seg, ab->pbus, ab->pdevice, ab->pfunction);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1164: FILE: drivers/pci/hotplug/phprm_acpi.c:1139:
+			ab->pbus, ab->bus, acpi_path_name(ab->handle), ab->seg, ab->pbus, ab->pdevice, ab->pfunction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1164: FILE: drivers/pci/hotplug/phprm_acpi.c:1139:
+		dbg("Free ACPI PCI P2P Bridge(%x-%x) [%s] on s:b:d:f(%x:%x:%x:%x)\n",
+			ab->pbus, ab->bus, acpi_path_name(ab->handle), ab->seg, ab->pbus, ab->pdevice, ab->pfunction);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1174: FILE: drivers/pci/hotplug/phprm_acpi.c:1149:
+	free_pci_resource (ab->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1175: FILE: drivers/pci/hotplug/phprm_acpi.c:1150:
+	free_pci_resource (ab->tio_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1176: FILE: drivers/pci/hotplug/phprm_acpi.c:1151:
+	free_pci_resource (ab->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1177: FILE: drivers/pci/hotplug/phprm_acpi.c:1152:
+	free_pci_resource (ab->tbus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1178: FILE: drivers/pci/hotplug/phprm_acpi.c:1153:
+	free_pci_resource (ab->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1179: FILE: drivers/pci/hotplug/phprm_acpi.c:1154:
+	free_pci_resource (ab->tmem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1180: FILE: drivers/pci/hotplug/phprm_acpi.c:1155:
+	free_pci_resource (ab->p_mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1181: FILE: drivers/pci/hotplug/phprm_acpi.c:1156:
+	free_pci_resource (ab->tp_mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1186: FILE: drivers/pci/hotplug/phprm_acpi.c:1161:
+static void phprm_free_bridges ( struct acpi_bridge	*ab)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1186: FILE: drivers/pci/hotplug/phprm_acpi.c:1161:
+static void phprm_free_bridges ( struct acpi_bridge	*ab)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1189: FILE: drivers/pci/hotplug/phprm_acpi.c:1164:
+		phprm_free_bridges (ab->child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1192: FILE: drivers/pci/hotplug/phprm_acpi.c:1167:
+		phprm_free_bridges (ab->next);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1199: FILE: drivers/pci/hotplug/phprm_acpi.c:1174:
+	phprm_free_bridges (acpi_bridges_head);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1202: FILE: drivers/pci/hotplug/phprm_acpi.c:1177:
+static int get_number_of_slots (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1202: FILE: drivers/pci/hotplug/phprm_acpi.c:1177:
+static int get_number_of_slots (

ERROR:SPACING: space prohibited after that open parenthesis '('
#1211: FILE: drivers/pci/hotplug/phprm_acpi.c:1186:
+	for ( aps = ab->slots; aps; aps = aps->next)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1218: FILE: drivers/pci/hotplug/phprm_acpi.c:1193:
+		slot_num += get_number_of_slots (ab->child, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1224: FILE: drivers/pci/hotplug/phprm_acpi.c:1199:
+		slot_num += get_number_of_slots (ab->next, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1229: FILE: drivers/pci/hotplug/phprm_acpi.c:1204:
+static int print_acpi_resources (struct acpi_bridge	*ab)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1243: FILE: drivers/pci/hotplug/phprm_acpi.c:1218:
+	print_pci_resources (ab);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1245: FILE: drivers/pci/hotplug/phprm_acpi.c:1220:
+	for ( i = -1, aps = ab->slots; aps; aps = aps->next) {

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#1248: FILE: drivers/pci/hotplug/phprm_acpi.c:1223:
+		dbg("  Slot sun(%x) s:b:d:f(%02x:%02x:%02x:%02x)\n", aps->sun, aps->seg, aps->bus, aps->dev, aps->fun);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1254: FILE: drivers/pci/hotplug/phprm_acpi.c:1229:
+		print_acpi_resources (ab->child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1257: FILE: drivers/pci/hotplug/phprm_acpi.c:1232:
+		print_acpi_resources (ab->next);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1265: FILE: drivers/pci/hotplug/phprm_acpi.c:1240:
+	print_acpi_resources (acpi_bridges_head);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1266: FILE: drivers/pci/hotplug/phprm_acpi.c:1241:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1270: FILE: drivers/pci/hotplug/phprm_acpi.c:1245:
+static struct acpi_php_slot * get_acpi_slot (

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1270: FILE: drivers/pci/hotplug/phprm_acpi.c:1245:
+static struct acpi_php_slot * get_acpi_slot (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1270: FILE: drivers/pci/hotplug/phprm_acpi.c:1245:
+static struct acpi_php_slot * get_acpi_slot (

ERROR:SPACING: space prohibited after that open parenthesis '('
#1277: FILE: drivers/pci/hotplug/phprm_acpi.c:1252:
+	for ( aps = ab->slots; aps; aps = aps->next)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1282: FILE: drivers/pci/hotplug/phprm_acpi.c:1257:
+		aps = (struct acpi_php_slot *)get_acpi_slot (ab->child, sun);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1288: FILE: drivers/pci/hotplug/phprm_acpi.c:1263:
+		aps = (struct acpi_php_slot *)get_acpi_slot (ab->next, sun);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1295: FILE: drivers/pci/hotplug/phprm_acpi.c:1270:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1297: FILE: drivers/pci/hotplug/phprm_acpi.c:1272:
+void * phprm_get_slot(struct slot *slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1300: FILE: drivers/pci/hotplug/phprm_acpi.c:1275:
+	struct acpi_php_slot	*aps = get_acpi_slot (ab, slot->number);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1304: FILE: drivers/pci/hotplug/phprm_acpi.c:1279:
+	dbg("Got acpi slot sun(%x): s:b:d:f(%x:%x:%x:%x)\n", aps->sun, aps->seg, aps->bus, aps->dev, aps->fun);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1309: FILE: drivers/pci/hotplug/phprm_acpi.c:1284:
+static int get_physical_slot_number (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1309: FILE: drivers/pci/hotplug/phprm_acpi.c:1284:
+static int get_physical_slot_number (

ERROR:SPACING: space prohibited after that open parenthesis '('
#1319: FILE: drivers/pci/hotplug/phprm_acpi.c:1294:
+	for ( aps = ab->slots; aps; aps = aps->next) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1327: FILE: drivers/pci/hotplug/phprm_acpi.c:1302:
+		rc = get_physical_slot_number (ab->child, sun, bus_num, dev_num);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1333: FILE: drivers/pci/hotplug/phprm_acpi.c:1308:
+		rc = get_physical_slot_number (ab->next, sun, bus_num, dev_num);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1341: FILE: drivers/pci/hotplug/phprm_acpi.c:1316:
+int phprm_get_physical_slot_number(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1350: FILE: drivers/pci/hotplug/phprm_acpi.c:1325:
+	return get_physical_slot_number (ab, sun, bus_num, dev_num);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1353: FILE: drivers/pci/hotplug/phprm_acpi.c:1328:
+int phprm_get_slot_mapping(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1357: FILE: drivers/pci/hotplug/phprm_acpi.c:1332:
+	u32 * slot_num

ERROR:SPACING: space prohibited after that open parenthesis '('
#1363: FILE: drivers/pci/hotplug/phprm_acpi.c:1338:
+static void phprm_dump_func_res( struct pci_func *fun)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1369: FILE: drivers/pci/hotplug/phprm_acpi.c:1344:
+		print_pci_resource (func->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1373: FILE: drivers/pci/hotplug/phprm_acpi.c:1348:
+		print_pci_resource (func->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1377: FILE: drivers/pci/hotplug/phprm_acpi.c:1352:
+		print_pci_resource (func->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1381: FILE: drivers/pci/hotplug/phprm_acpi.c:1356:
+		print_pci_resource (func->p_mem_head);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1385: FILE: drivers/pci/hotplug/phprm_acpi.c:1360:
+static void phprm_dump_ctrl_res( struct controller *ctlr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1391: FILE: drivers/pci/hotplug/phprm_acpi.c:1366:
+		print_pci_resource (ctrl->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1395: FILE: drivers/pci/hotplug/phprm_acpi.c:1370:
+		print_pci_resource (ctrl->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1399: FILE: drivers/pci/hotplug/phprm_acpi.c:1374:
+		print_pci_resource (ctrl->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1403: FILE: drivers/pci/hotplug/phprm_acpi.c:1378:
+		print_pci_resource (ctrl->p_mem_head);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1407: FILE: drivers/pci/hotplug/phprm_acpi.c:1382:
+static int phprm_get_used_resources (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1407: FILE: drivers/pci/hotplug/phprm_acpi.c:1382:
+static int phprm_get_used_resources (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1412: FILE: drivers/pci/hotplug/phprm_acpi.c:1387:
+	return cpqhp_save_used_resources (ctrl, func, !DISABLE_CARD);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1415: FILE: drivers/pci/hotplug/phprm_acpi.c:1390:
+static int configure_existing_function(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1423: FILE: drivers/pci/hotplug/phprm_acpi.c:1398:
+	rc = phprm_get_used_resources (ctrl, func);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1425: FILE: drivers/pci/hotplug/phprm_acpi.c:1400:
+	if (!rc) {
[...]
+	} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1427: FILE: drivers/pci/hotplug/phprm_acpi.c:1402:
+		rc  = phprm_delete_resources (&ctrl->bus_head, func->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1428: FILE: drivers/pci/hotplug/phprm_acpi.c:1403:
+		rc |= phprm_delete_resources (&ctrl->io_head, func->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1429: FILE: drivers/pci/hotplug/phprm_acpi.c:1404:
+		rc |= phprm_delete_resources (&ctrl->mem_head, func->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1430: FILE: drivers/pci/hotplug/phprm_acpi.c:1405:
+		rc |= phprm_delete_resources (&ctrl->p_mem_head, func->p_mem_head);

CHECK:BRACES: Unbalanced braces around else statement
#1433: FILE: drivers/pci/hotplug/phprm_acpi.c:1408:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1439: FILE: drivers/pci/hotplug/phprm_acpi.c:1414:
+static int bind_pci_resources_to_slots ( struct controller *ctrl)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1439: FILE: drivers/pci/hotplug/phprm_acpi.c:1414:
+static int bind_pci_resources_to_slots ( struct controller *ctrl)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1452: FILE: drivers/pci/hotplug/phprm_acpi.c:1427:
+			pci_bus_read_config_dword(ctrl->pci_bus, PCI_DEVFN(devn, funn), PCI_VENDOR_ID, &vid);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1468: FILE: drivers/pci/hotplug/phprm_acpi.c:1443:
+static int bind_pci_resources(

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1469: FILE: drivers/pci/hotplug/phprm_acpi.c:1444:
+^Istruct controller ^I*ctrl,$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1475: FILE: drivers/pci/hotplug/phprm_acpi.c:1450:
+	if (ab->bus_head) {
[...]
+	} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1477: FILE: drivers/pci/hotplug/phprm_acpi.c:1452:
+		status = phprm_add_resources (&ctrl->bus_head, ab->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1478: FILE: drivers/pci/hotplug/phprm_acpi.c:1453:
+		if (phprm_delete_resources (&ab->bus_head, ctrl->bus_head))

CHECK:BRACES: Unbalanced braces around else statement
#1484: FILE: drivers/pci/hotplug/phprm_acpi.c:1459:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1487: FILE: drivers/pci/hotplug/phprm_acpi.c:1462:
+	if (ab->io_head) {
[...]
+	} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1489: FILE: drivers/pci/hotplug/phprm_acpi.c:1464:
+		status = phprm_add_resources (&ctrl->io_head, ab->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1490: FILE: drivers/pci/hotplug/phprm_acpi.c:1465:
+		if (phprm_delete_resources (&ab->io_head, ctrl->io_head))

CHECK:BRACES: Unbalanced braces around else statement
#1496: FILE: drivers/pci/hotplug/phprm_acpi.c:1471:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1499: FILE: drivers/pci/hotplug/phprm_acpi.c:1474:
+	if (ab->mem_head) {
[...]
+	} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1501: FILE: drivers/pci/hotplug/phprm_acpi.c:1476:
+		status = phprm_add_resources (&ctrl->mem_head, ab->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1502: FILE: drivers/pci/hotplug/phprm_acpi.c:1477:
+		if (phprm_delete_resources (&ab->mem_head, ctrl->mem_head))

CHECK:BRACES: Unbalanced braces around else statement
#1508: FILE: drivers/pci/hotplug/phprm_acpi.c:1483:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1511: FILE: drivers/pci/hotplug/phprm_acpi.c:1486:
+	if (ab->p_mem_head) {
[...]
+	} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1513: FILE: drivers/pci/hotplug/phprm_acpi.c:1488:
+		status = phprm_add_resources (&ctrl->p_mem_head, ab->p_mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1514: FILE: drivers/pci/hotplug/phprm_acpi.c:1489:
+		if (phprm_delete_resources (&ab->p_mem_head, ctrl->p_mem_head))

CHECK:BRACES: Unbalanced braces around else statement
#1520: FILE: drivers/pci/hotplug/phprm_acpi.c:1495:
+	} else

ERROR:SPACING: space prohibited after that open parenthesis '('
#1526: FILE: drivers/pci/hotplug/phprm_acpi.c:1501:
+static int no_pci_resources( struct acpi_bridge *ab)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1531: FILE: drivers/pci/hotplug/phprm_acpi.c:1506:
+static int find_pci_bridge_resources (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1531: FILE: drivers/pci/hotplug/phprm_acpi.c:1506:
+static int find_pci_bridge_resources (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1547: FILE: drivers/pci/hotplug/phprm_acpi.c:1522:
+	rc = cpqhp_save_used_resources (ctrl, &func, !DISABLE_CARD);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1559: FILE: drivers/pci/hotplug/phprm_acpi.c:1534:
+static int get_pci_resources_from_bridge(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1568: FILE: drivers/pci/hotplug/phprm_acpi.c:1543:
+	rc = find_pci_bridge_resources (ctrl, ab);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1575: FILE: drivers/pci/hotplug/phprm_acpi.c:1550:
+	phprm_add_resources (&ab->tbus_head, ab->bus_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1576: FILE: drivers/pci/hotplug/phprm_acpi.c:1551:
+	phprm_add_resources (&ab->tio_head, ab->io_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1577: FILE: drivers/pci/hotplug/phprm_acpi.c:1552:
+	phprm_add_resources (&ab->tmem_head, ab->mem_head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1578: FILE: drivers/pci/hotplug/phprm_acpi.c:1553:
+	phprm_add_resources (&ab->tp_mem_head, ab->p_mem_head);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1583: FILE: drivers/pci/hotplug/phprm_acpi.c:1558:
+static int get_pci_resources(

ERROR:SPACING: space prohibited after that open parenthesis '('
#1604: FILE: drivers/pci/hotplug/phprm_acpi.c:1579:
+int phprm_find_available_resources( struct controller *ctrl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1626: FILE: drivers/pci/hotplug/phprm_acpi.c:1601:
+	bind_pci_resources_to_slots (ctrl);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1634: FILE: drivers/pci/hotplug/phprm_acpi.c:1609:
+void phprm_get_slot_capability(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1642: FILE: drivers/pci/hotplug/phprm_acpi.c:1617:
+int phprm_set_hpp(

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1652: FILE: drivers/pci/hotplug/phprm_acpi.c:1627:
+	u8		cls= 0x08;	/* default cache line size	*/
 	  		   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1664: FILE: drivers/pci/hotplug/phprm_acpi.c:1639:
+	if (ab) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1665: FILE: drivers/pci/hotplug/phprm_acpi.c:1640:
+		if (ab->_hpp) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1670: FILE: drivers/pci/hotplug/phprm_acpi.c:1645:
+		} else

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1671: FILE: drivers/pci/hotplug/phprm_acpi.c:1646:
+			dbg("_hpp: no _hpp for B/D/F=%#x/%#x/%#x. use default value\n", func->bus, func->device, func->function);

CHECK:BRACES: Unbalanced braces around else statement
#1672: FILE: drivers/pci/hotplug/phprm_acpi.c:1647:
+	} else

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1673: FILE: drivers/pci/hotplug/phprm_acpi.c:1648:
+		dbg("_hpp: no acpi bridge for B/D/F = %#x/%#x/%#x. use default value\n", func->bus, func->device, func->function);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1675: FILE: drivers/pci/hotplug/phprm_acpi.c:1650:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1691: FILE: drivers/pci/hotplug/phprm_acpi.c:1666:
+void phprm_enable_card(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1709: FILE: drivers/pci/hotplug/phprm_acpi.c:1684:
+	if (card_type == PCI_HEADER_TYPE_BRIDGE) {
+		rc = pci_bus_read_config_word(pci_bus, devfn, PCI_BRIDGE_CONTROL, &bcommand);
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1713: FILE: drivers/pci/hotplug/phprm_acpi.c:1688:
+	cmd = command  = command | PCI_COMMAND_MASTER | PCI_COMMAND_INVALIDATE

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1715: FILE: drivers/pci/hotplug/phprm_acpi.c:1690:
+	bcmd = bcommand  = bcommand | PCI_BRIDGE_CTL_NO_ISA;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1718: FILE: drivers/pci/hotplug/phprm_acpi.c:1693:
+	if (ab) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#1719: FILE: drivers/pci/hotplug/phprm_acpi.c:1694:
+		if (ab->_hpp) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1734: FILE: drivers/pci/hotplug/phprm_acpi.c:1709:
+		} else

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1735: FILE: drivers/pci/hotplug/phprm_acpi.c:1710:
+			dbg("no _hpp for B/D/F = %#x/%#x/%#x.\n", func->bus, func->device, func->function);

CHECK:BRACES: Unbalanced braces around else statement
#1736: FILE: drivers/pci/hotplug/phprm_acpi.c:1711:
+	} else

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1737: FILE: drivers/pci/hotplug/phprm_acpi.c:1712:
+		dbg("no acpi bridge for B/D/F = %#x/%#x/%#x.\n", func->bus, func->device, func->function);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1739: FILE: drivers/pci/hotplug/phprm_acpi.c:1714:
+	if (command != cmd) {
+		rc = pci_bus_write_config_word(pci_bus, devfn, PCI_COMMAND, command);
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card_type == PCI_HEADER_TYPE_BRIDGE'
#1742: FILE: drivers/pci/hotplug/phprm_acpi.c:1717:
+	if ((card_type == PCI_HEADER_TYPE_BRIDGE) && (bcommand != bcmd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bcommand != bcmd'
#1742: FILE: drivers/pci/hotplug/phprm_acpi.c:1717:
+	if ((card_type == PCI_HEADER_TYPE_BRIDGE) && (bcommand != bcmd)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1742: FILE: drivers/pci/hotplug/phprm_acpi.c:1717:
+	if ((card_type == PCI_HEADER_TYPE_BRIDGE) && (bcommand != bcmd)) {
+		rc = pci_bus_write_config_word(pci_bus, devfn, PCI_BRIDGE_CONTROL, bcommand);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1747: FILE: drivers/pci/hotplug/phprm_acpi.c:1722:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1749: FILE: drivers/pci/hotplug/phprm_acpi.c:1724:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1754: FILE: drivers/pci/hotplug/phprm.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1769: FILE: drivers/pci/hotplug/phprm.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1770: FILE: drivers/pci/hotplug/phprm.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1787: FILE: drivers/pci/hotplug/phprm.h:34:
+int phprm_get_physical_slot_number( struct controller *ctrl, u32 *sun, u8 bus_num, u8 dev_num);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1789: FILE: drivers/pci/hotplug/phprm.h:36:
+int phprm_get_slot_mapping(struct controller *controller, u8 bus_num, u8 dev_num, u32 * slot);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1791: FILE: drivers/pci/hotplug/phprm.h:38:
+void phprm_get_slot_capability( struct controller *ctrl, struct slot *new_slot);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bits' may be better as '(bits)' to avoid precedence issues
#1796: FILE: drivers/pci/hotplug/phprm.h:43:
+#define RES_CHECK(this, bits)	\
+	{ if (((this) & (bits - 1))) \
+		printk("%s:%d ERR: potential res loss!\n", __FUNCTION__, __LINE__); }

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1798: FILE: drivers/pci/hotplug/phprm.h:45:
+		printk("%s:%d ERR: potential res loss!\n", __FUNCTION__, __LINE__); }

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1798: FILE: drivers/pci/hotplug/phprm.h:45:
+		printk("%s:%d ERR: potential res loss!\n", __FUNCTION__, __LINE__); }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1808: FILE: drivers/pci/hotplug/phprm_legacy.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1829: FILE: drivers/pci/hotplug/phprm_legacy.c:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1830: FILE: drivers/pci/hotplug/phprm_legacy.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1842: FILE: drivers/pci/hotplug/phprm_legacy.c:35:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1851: FILE: drivers/pci/hotplug/phprm_legacy.c:44:
+static int nvram_loaded = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void phprm_cleanup() should probably be void phprm_cleanup(void)
#1856: FILE: drivers/pci/hotplug/phprm_legacy.c:49:
+void phprm_cleanup()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

CHECK:SPACING: No space is necessary after a cast
#1877: FILE: drivers/pci/hotplug/phprm_legacy.c:70:
+		info("%p ", (void *) p);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1896: FILE: drivers/pci/hotplug/phprm_legacy.c:89:
+	static struct irq_routing_table *p_irt_s = 0;

WARNING:INDENTED_LABEL: labels should not be indented
#1904: FILE: drivers/pci/hotplug/phprm_legacy.c:97:
+	      array:{

CHECK:SPACING: No space is necessary after a cast
#1912: FILE: drivers/pci/hotplug/phprm_legacy.c:105:
+	if (!(p_mapped_bios = (u8 *) ioremap(ROM_PHY_ADDR, ROM_PHY_LEN)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1912: FILE: drivers/pci/hotplug/phprm_legacy.c:105:
+	if (!(p_mapped_bios = (u8 *) ioremap(ROM_PHY_ADDR, ROM_PHY_LEN)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#1917: FILE: drivers/pci/hotplug/phprm_legacy.c:110:
+		if (*(u32 *) p == irt_sig.dword) {

WARNING:INDENTED_LABEL: labels should not be indented
#1924: FILE: drivers/pci/hotplug/phprm_legacy.c:117:
+			      array:{

CHECK:SPACING: No space is necessary after a cast
#1933: FILE: drivers/pci/hotplug/phprm_legacy.c:126:
+				if (*(u32 *) pe == ire_sig.dword) {

CHECK:SPACING: No space is necessary after a cast
#1934: FILE: drivers/pci/hotplug/phprm_legacy.c:127:
+					irt_size = (u16) (pe - p);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1939: FILE: drivers/pci/hotplug/phprm_legacy.c:132:
+				err("%s: can't find end of $IRT\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#1943: FILE: drivers/pci/hotplug/phprm_legacy.c:136:
+			dbg("Found $IRT at %p length = %d\n", (void *) p, irt_size);

CHECK:SPACING: No space is necessary after a cast
#1944: FILE: drivers/pci/hotplug/phprm_legacy.c:137:
+			ia64_log_hexdump(p, (unsigned long) irt_size);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1947: FILE: drivers/pci/hotplug/phprm_legacy.c:140:
+			if (!(p_irt_s = kmalloc(irt_size + 16, GFP_KERNEL))) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1948: FILE: drivers/pci/hotplug/phprm_legacy.c:141:
+				err("%s: can't allocate memory\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#1955: FILE: drivers/pci/hotplug/phprm_legacy.c:148:
+			memcpy((void *) p_irt_s + 16, p, irt_size);

CHECK:SPACING: No space is necessary after a cast
#1956: FILE: drivers/pci/hotplug/phprm_legacy.c:149:
+			memcpy((void *) p_irt_s, p, 16);

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1957: FILE: drivers/pci/hotplug/phprm_legacy.c:150:
+			memset((void *) p_irt_s + 16, 0, 16);	/* clear extra 16 header pad bytes */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#1957: FILE: drivers/pci/hotplug/phprm_legacy.c:150:
+			memset((void *) p_irt_s + 16, 0, 16);	/* clear extra 16 header pad bytes */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#1961: FILE: drivers/pci/hotplug/phprm_legacy.c:154:
+			/* Calculate the number of entries in the table.  This will be the number of slots. */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1974: FILE: drivers/pci/hotplug/phprm_legacy.c:167:
+		err("%s: $IRT not found\n", __FUNCTION__);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1976: FILE: drivers/pci/hotplug/phprm_legacy.c:169:
+	return (p_irt_s);

CHECK:SPACING: No space is necessary after a cast
#1981: FILE: drivers/pci/hotplug/phprm_legacy.c:174:
+	return (struct irq_routing_table *) pcibios_get_irq_routing_table();

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int phprm_print_pirt() should probably be int phprm_print_pirt(void)
#1985: FILE: drivers/pci/hotplug/phprm_legacy.c:178:
+int phprm_print_pirt()

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!routing_table"
#1996: FILE: drivers/pci/hotplug/phprm_legacy.c:189:
+	if (routing_table == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2003: FILE: drivers/pci/hotplug/phprm_legacy.c:196:
+	if (len == 0) {
+		return -1;
+	}

WARNING:LONG_LINE: line length of 207 exceeds 100 columns
#2022: FILE: drivers/pci/hotplug/phprm_legacy.c:215:
+		dbg("0x%3x %3x %4x %6x %6x %6x %6x %6x %6x %6x %6x %4x %3x\n", tbus, tdevice >> 3, tdevice & 0x7, tirq0lnk, tirq0bmp, tirq1lnk, tirq1bmp, tirq2lnk, tirq2bmp, tirq3lnk, tirq3bmp, tslot, trfu);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2123: FILE: drivers/pci/hotplug/phprm_legacy.c:316:
+	if (!previous)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2125: FILE: drivers/pci/hotplug/phprm_legacy.c:318:
+	else {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2130: FILE: drivers/pci/hotplug/phprm_legacy.c:323:
+		if (readb(previous + SMBIOS_GENERIC_TYPE) != type) {
[...]
+		} else
[...]

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2131: FILE: drivers/pci/hotplug/phprm_legacy.c:324:
+			previous = get_subsequent_smbios_entry(smbios_start, smbios_table, previous);

CHECK:BRACES: Unbalanced braces around else statement
#2132: FILE: drivers/pci/hotplug/phprm_legacy.c:325:
+		} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2139: FILE: drivers/pci/hotplug/phprm_legacy.c:332:
+void * phprm_get_slot(struct slot *slot)

CHECK:SPACING: No space is necessary after a cast
#2148: FILE: drivers/pci/hotplug/phprm_legacy.c:341:
+	*sun = (u8) (ctrl->first_slot + ctrl->slot_num_inc * offset);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2164: FILE: drivers/pci/hotplug/phprm_legacy.c:357:
+int phprm_get_slot_mapping(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2165: FILE: drivers/pci/hotplug/phprm_legacy.c:358:
+	struct controller *ctrl, u8 bus_num, u8 dev_num, u32 * slot)

CHECK:CAMELCASE: Avoid CamelCase: <PCIIRQRoutingInfoLength>
#2167: FILE: drivers/pci/hotplug/phprm_legacy.c:360:
+	struct irq_routing_table *PCIIRQRoutingInfoLength;

CHECK:CAMELCASE: Avoid CamelCase: <bridgeSlot>
#2173: FILE: drivers/pci/hotplug/phprm_legacy.c:366:
+	u8 tbus, tdevice, tslot, bridgeSlot;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2174: FILE: drivers/pci/hotplug/phprm_legacy.c:367:
+	u8 tbus, tdevice, tslot, bridgeSlot;
+	memcpy(&lpci_bus, ctrl->pci_bus, sizeof(lpci_bus));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2177: FILE: drivers/pci/hotplug/phprm_legacy.c:370:
+	dbg("%s: %p, %d, %d, %p\n", __FUNCTION__, ctrl, bus_num, dev_num, slot);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2187: FILE: drivers/pci/hotplug/phprm_legacy.c:380:
+	len = (PCIIRQRoutingInfoLength->size - sizeof(struct irq_routing_table)) / sizeof(struct irq_info);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tbus == bus_num'
#2200: FILE: drivers/pci/hotplug/phprm_legacy.c:393:
+		if ((tbus == bus_num) && (tdevice == dev_num)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tdevice == dev_num'
#2200: FILE: drivers/pci/hotplug/phprm_legacy.c:393:
+		if ((tbus == bus_num) && (tdevice == dev_num)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2204: FILE: drivers/pci/hotplug/phprm_legacy.c:397:
+			return 0;
+		} else {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2214: FILE: drivers/pci/hotplug/phprm_legacy.c:407:
+			pci_bus_read_config_dword(pci_bus, PCI_DEVFN(tdevice, 0), PCI_REVISION_ID, &work);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2217: FILE: drivers/pci/hotplug/phprm_legacy.c:410:
+				pci_bus_read_config_dword(pci_bus, PCI_DEVFN(tdevice, 0), PCI_PRIMARY_BUS, &work);

CHECK:SPACING: No space is necessary after a cast
#2220: FILE: drivers/pci/hotplug/phprm_legacy.c:413:
+				if (((work >> 8) & 0x000000FF) == (long) bus_num) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2220: FILE: drivers/pci/hotplug/phprm_legacy.c:413:
+				if (((work >> 8) & 0x000000FF) == (long) bus_num) {
+					bridgeSlot = tslot;
+				}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2226: FILE: drivers/pci/hotplug/phprm_legacy.c:419:
+
+	}

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2254: FILE: drivers/pci/hotplug/phprm_legacy.c:447:
+		u8 slot_entry_slot_number = *(u8 *) &(((struct smbios_system_slot *) slot_entry)->slot_number);

CHECK:SPACING: No space is necessary after a cast
#2254: FILE: drivers/pci/hotplug/phprm_legacy.c:447:
+		u8 slot_entry_slot_number = *(u8 *) &(((struct smbios_system_slot *) slot_entry)->slot_number);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2255: FILE: drivers/pci/hotplug/phprm_legacy.c:448:
+		u8 slot_entry_slot_number = *(u8 *) &(((struct smbios_system_slot *) slot_entry)->slot_number);
+		if (slot_entry_slot_number == new_slot->number)

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2257: FILE: drivers/pci/hotplug/phprm_legacy.c:450:
+		slot_entry = get_SMBIOS_entry(smbios_start, smbios_table, 9, (struct smbios_generic *) slot_entry);

CHECK:SPACING: No space is necessary after a cast
#2257: FILE: drivers/pci/hotplug/phprm_legacy.c:450:
+		slot_entry = get_SMBIOS_entry(smbios_start, smbios_table, 9, (struct smbios_generic *) slot_entry);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#2260: FILE: drivers/pci/hotplug/phprm_legacy.c:453:
+	while (slot_entry && (((struct smbios_system_slot *) slot_entry)->slot_number != new_slot->number)) {

CHECK:SPACING: No space is necessary after a cast
#2260: FILE: drivers/pci/hotplug/phprm_legacy.c:453:
+	while (slot_entry && (((struct smbios_system_slot *) slot_entry)->slot_number != new_slot->number)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2260: FILE: drivers/pci/hotplug/phprm_legacy.c:453:
+	while (slot_entry && (((struct smbios_system_slot *) slot_entry)->slot_number != new_slot->number)) {
+		slot_entry = get_SMBIOS_entry(smbios_start, smbios_table, 9, slot_entry);
+	}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2303: FILE: drivers/pci/hotplug/phprm_legacy.c:496:
+link_available_resources (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2303: FILE: drivers/pci/hotplug/phprm_legacy.c:496:
+link_available_resources (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2306: FILE: drivers/pci/hotplug/phprm_legacy.c:499:
+	int index )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2308: FILE: drivers/pci/hotplug/phprm_legacy.c:501:
+	return cpqhp_save_used_resources (ctrl, func, !DISABLE_CARD);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rom_resource_table"
#2341: FILE: drivers/pci/hotplug/phprm_legacy.c:534:
+	if (rom_resource_table == NULL)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2372: FILE: drivers/pci/hotplug/phprm_legacy.c:565:
+				dev_func, io_base, io_length, mem_base, mem_length, pre_mem_base, pre_mem_length,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2372: FILE: drivers/pci/hotplug/phprm_legacy.c:565:
+		dbg("%2.2x |  %4.4x | %4.4x |  %4.4x | %4.4x |  %4.4x | %4.4x |%2.2x %2.2x %2.2x\n",
+				dev_func, io_base, io_length, mem_base, mem_length, pre_mem_base, pre_mem_length,

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2394: FILE: drivers/pci/hotplug/phprm_legacy.c:587:
+				dbg("func = %p b:d:f(%x:%x:%x)\n", func, primary_bus, dev_func >> 3, index);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2415: FILE: drivers/pci/hotplug/phprm_legacy.c:608:
+		dbg("slot populated =%s \n", populated_slot?"yes":"no");
 		                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2415: FILE: drivers/pci/hotplug/phprm_legacy.c:608:
+		dbg("slot populated =%s \n", populated_slot?"yes":"no");
 		                                                 ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2415: FILE: drivers/pci/hotplug/phprm_legacy.c:608:
+		dbg("slot populated =%s \n", populated_slot?"yes":"no");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp_ulong <= 0x10000'
#2421: FILE: drivers/pci/hotplug/phprm_legacy.c:614:
+		if ((io_base) && (temp_ulong <= 0x10000)) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2422: FILE: drivers/pci/hotplug/phprm_legacy.c:615:
+			io_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#2422: FILE: drivers/pci/hotplug/phprm_legacy.c:615:
+			io_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2422: FILE: drivers/pci/hotplug/phprm_legacy.c:615:
+			io_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*io_node)...) over kmalloc(sizeof(struct pci_resource)...)
#2422: FILE: drivers/pci/hotplug/phprm_legacy.c:615:
+			io_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2428: FILE: drivers/pci/hotplug/phprm_legacy.c:621:
+			dbg("found io_node(base, length) = %x, %x\n", io_node->base, io_node->length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp_ulong <= 0x10000'
#2441: FILE: drivers/pci/hotplug/phprm_legacy.c:634:
+		if ((mem_base) && (temp_ulong <= 0x10000)) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2442: FILE: drivers/pci/hotplug/phprm_legacy.c:635:
+			mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#2442: FILE: drivers/pci/hotplug/phprm_legacy.c:635:
+			mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2442: FILE: drivers/pci/hotplug/phprm_legacy.c:635:
+			mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mem_node)...) over kmalloc(sizeof(struct pci_resource)...)
#2442: FILE: drivers/pci/hotplug/phprm_legacy.c:635:
+			mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2448: FILE: drivers/pci/hotplug/phprm_legacy.c:641:
+			dbg("found mem_node(base, length) = %x, %x\n", mem_node->base, mem_node->length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp_ulong <= 0x10000'
#2464: FILE: drivers/pci/hotplug/phprm_legacy.c:657:
+		if ((pre_mem_base) && (temp_ulong <= 0x10000)) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2465: FILE: drivers/pci/hotplug/phprm_legacy.c:658:
+			p_mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#2465: FILE: drivers/pci/hotplug/phprm_legacy.c:658:
+			p_mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2465: FILE: drivers/pci/hotplug/phprm_legacy.c:658:
+			p_mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*p_mem_node)...) over kmalloc(sizeof(struct pci_resource)...)
#2465: FILE: drivers/pci/hotplug/phprm_legacy.c:658:
+			p_mem_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2471: FILE: drivers/pci/hotplug/phprm_legacy.c:664:
+			dbg("found p_mem_node(base, length) = %x, %x\n", p_mem_node->base, p_mem_node->length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'secondary_bus != primary_bus'
#2487: FILE: drivers/pci/hotplug/phprm_legacy.c:680:
+		if (secondary_bus && (secondary_bus != primary_bus)) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2488: FILE: drivers/pci/hotplug/phprm_legacy.c:681:
+			bus_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#2488: FILE: drivers/pci/hotplug/phprm_legacy.c:681:
+			bus_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#2488: FILE: drivers/pci/hotplug/phprm_legacy.c:681:
+			bus_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*bus_node)...) over kmalloc(sizeof(struct pci_resource)...)
#2488: FILE: drivers/pci/hotplug/phprm_legacy.c:681:
+			bus_node = (struct pci_resource *) kmalloc(sizeof(struct pci_resource), GFP_KERNEL);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2494: FILE: drivers/pci/hotplug/phprm_legacy.c:687:
+			dbg("found bus_node(base, length) = %x, %x\n", bus_node->base, bus_node->length);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#2509: FILE: drivers/pci/hotplug/phprm_legacy.c:702:
+			if (((func = cpqhp_slot_find(primary_bus, dev_func >> 3, index)) != NULL) && populated_slot)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2509: FILE: drivers/pci/hotplug/phprm_legacy.c:702:
+			if (((func = cpqhp_slot_find(primary_bus, dev_func >> 3, index)) != NULL) && populated_slot)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2511: FILE: drivers/pci/hotplug/phprm_legacy.c:704:
+^I^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ctrl->mem_head
#2526: FILE: drivers/pci/hotplug/phprm_legacy.c:719:
+	rc &= cpqhp_resource_sort_and_combine(&(ctrl->mem_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ctrl->p_mem_head
#2527: FILE: drivers/pci/hotplug/phprm_legacy.c:720:
+	rc &= cpqhp_resource_sort_and_combine(&(ctrl->p_mem_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ctrl->io_head
#2528: FILE: drivers/pci/hotplug/phprm_legacy.c:721:
+	rc &= cpqhp_resource_sort_and_combine(&(ctrl->io_head));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ctrl->bus_head
#2529: FILE: drivers/pci/hotplug/phprm_legacy.c:722:
+	rc &= cpqhp_resource_sort_and_combine(&(ctrl->bus_head));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2531: FILE: drivers/pci/hotplug/phprm_legacy.c:724:
+	return (rc);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2534: FILE: drivers/pci/hotplug/phprm_legacy.c:727:
+int phprm_set_hpp(

WARNING:LINE_SPACING: Missing a blank line after declarations
#2543: FILE: drivers/pci/hotplug/phprm_legacy.c:736:
+	unsigned int	devfn;
+	memcpy(&lpci_bus, ctrl->pci_bus, sizeof(lpci_bus));

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#2553: FILE: drivers/pci/hotplug/phprm_legacy.c:746:
+			dbg("%s: set secondary LT error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2553: FILE: drivers/pci/hotplug/phprm_legacy.c:746:
+			dbg("%s: set secondary LT error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#2561: FILE: drivers/pci/hotplug/phprm_legacy.c:754:
+		dbg("%s: set LT error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2561: FILE: drivers/pci/hotplug/phprm_legacy.c:754:
+		dbg("%s: set LT error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2568: FILE: drivers/pci/hotplug/phprm_legacy.c:761:
+	if (rc) {
+		dbg("%s: set CLS error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);
+	}

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2569: FILE: drivers/pci/hotplug/phprm_legacy.c:762:
+		dbg("%s: set CLS error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2569: FILE: drivers/pci/hotplug/phprm_legacy.c:762:
+		dbg("%s: set CLS error. b:d:f(%02x:%02x:%02x)\n", __FUNCTION__, func->bus, func->device, func->function);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2578: FILE: drivers/pci/hotplug/phprm_legacy.c:771:
+void phprm_enable_card(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2607: FILE: drivers/pci/hotplug/phprm_legacy.c:800:
+
+

CHECK:SPACING: No space is necessary after a cast
#2610: FILE: drivers/pci/hotplug/phprm_legacy.c:803:
+	cpqhp_rom_start = (u8 *) ioremap(ROM_PHY_ADDR, ROM_PHY_LEN);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2618: FILE: drivers/pci/hotplug/phprm_legacy.c:811:
+	smbios_table = detect_SMBIOS_pointer(cpqhp_rom_start, (void *) (cpqhp_rom_start + ROM_PHY_LEN));

CHECK:SPACING: No space is necessary after a cast
#2618: FILE: drivers/pci/hotplug/phprm_legacy.c:811:
+	smbios_table = detect_SMBIOS_pointer(cpqhp_rom_start, (void *) (cpqhp_rom_start + ROM_PHY_LEN));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2652: FILE: drivers/pci/hotplug/phprm_legacy.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2673: FILE: drivers/pci/hotplug/phprm_legacy.h:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2674: FILE: drivers/pci/hotplug/phprm_legacy.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2695: FILE: drivers/pci/hotplug/phprm_legacy.h:44:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2718: FILE: drivers/pci/hotplug/phprm_legacy.h:67:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2742: FILE: drivers/pci/hotplug/phprm_legacy.h:91:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2772: FILE: drivers/pci/hotplug/phprm_legacy.h:121:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2799: FILE: drivers/pci/hotplug/phprm_legacy.h:148:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2820: FILE: drivers/pci/hotplug/phprm_legacy.h:169:
+	} __attribute__ ((packed)) irq[4];

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2823: FILE: drivers/pci/hotplug/phprm_legacy.h:172:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#2836: FILE: drivers/pci/hotplug/phprm_legacy.h:185:
+} __attribute__ ((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 93 errors, 234 warnings, 160 checks, 2801 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
