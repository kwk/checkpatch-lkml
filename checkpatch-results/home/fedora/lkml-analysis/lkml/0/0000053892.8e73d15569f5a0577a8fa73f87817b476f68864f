WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > > > I think that the bluetooth-guard-bt_proto-with-rwlock.patch introduced the following

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: include/linux/lw_rwlock.h:1:
+#ifndef __LINUX_LW_RWLOCK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#129: FILE: include/linux/lw_rwlock.h:14:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#140: FILE: include/linux/lw_rwlock.h:25:
+#define lw_rwlock_init(x) \
+		do { *(x) = (lw_rwlock_t) __LW_RWLOCK_UNLOCKED(x); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#140: FILE: include/linux/lw_rwlock.h:25:
+#define lw_rwlock_init(x) \
+		do { *(x) = (lw_rwlock_t) __LW_RWLOCK_UNLOCKED(x); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:SPACING: No space is necessary after a cast
#141: FILE: include/linux/lw_rwlock.h:26:
+		do { *(x) = (lw_rwlock_t) __LW_RWLOCK_UNLOCKED(x); } while (0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#143: FILE: include/linux/lw_rwlock.h:28:
+#define DEFINE_LW_RWLOCK(x) \
+		struct lw_rwlock x = __LW_RWLOCK_UNLOCKED(x)

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#154: FILE: include/linux/lw_rwlock.h:39:
+		yield();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: include/linux/lw_rwlock.h:43:
+}^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: include/linux/lw_rwlock.h:45:
+static inline void lw_write_unlock(struct lw_rwlock *l) $

ERROR:SPACING: space required before the open parenthesis '('
#178: FILE: include/linux/lw_rwlock.h:63:
+#define lw_write_lock(x) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: include/linux/lw_rwlock.h:64:
+#define lw_write_unlock(x) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: include/linux/lw_rwlock.h:65:
+#define lw_read_lock(x) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: include/linux/lw_rwlock.h:66:
+#define lw_read_unlock() do { } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#185: FILE: include/linux/lw_rwlock.h:70:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053892.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 5 checks, 71 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053892.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
