WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
There is at least one public local DoS (ldisc switch under pending I/O) and in

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: Documentation/tty.txt:13:
+discipline number and the ldisc structure. At the point of registration the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: Documentation/tty.txt:18:
+After the return the ldisc data has been copied so you may free your own $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: Documentation/tty.txt:30:
+discipline. The reference count of the tty_ldisc structure within a tty $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: Documentation/tty.txt:58:
+chars_in_buffer() -^IReport the number of bytes in the buffer. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: Documentation/tty.txt:60:
+set_termios()^I-^ICalled on termios structure changes. Semantics $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: Documentation/tty.txt:65:
+^I^I^Ildisc must deal with serialization issues. May $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: Documentation/tty.txt:73:
+^I^I^Imay occur in parallel. May sleep. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: Documentation/tty.txt:119:
+ldisc change to complete and then return a reference to the new ldisc. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: Documentation/tty.txt:133:
+^I^I^Ireturn from this call the driver must make no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/tty.txt:137:
+^I^I^Isleep. May occur in parallel in special cases. $

WARNING:TYPO_SPELLING: 'tht' may be misspelled - perhaps 'the'?
#189: FILE: Documentation/tty.txt:147:
+write_room()	-	Return the number of characters tht can be stuffed
             	 	                                ^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: Documentation/tty.txt:157:
+set_ldisc()^I-^INotifier for discipline change. At the point this $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#238: FILE: drivers/char/tty_io.c:124:
+/* This list gets poked at by procfs and various bits of boot up code. This
+   could do with some rationalisation such as pulling the tty proc function

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#239: FILE: drivers/char/tty_io.c:125:
+   into this file */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/char/tty_io.c:126:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/char/tty_io.c:126:
+   $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#246: FILE: drivers/char/tty_io.c:130:
+/* Semaphore to protect creating and releasing a tty. This is shared with
+   vt.c for deeply disgusting hack reasons */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#246: FILE: drivers/char/tty_io.c:130:
+   vt.c for deeply disgusting hack reasons */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: drivers/char/tty_io.c:235:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/char/tty_io.c:235:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: drivers/char/tty_io.c:243:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: drivers/char/tty_io.c:254:
+		if(tty_ldiscs[disc].refcount)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/char/tty_io.c:273:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#309: FILE: drivers/char/tty_io.c:278:
+	if(ld->flags & LDISC_FLAG_DEFINED)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: drivers/char/tty_io.c:278:
+	if(ld->flags & LDISC_FLAG_DEFINED)

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: drivers/char/tty_io.c:282:
+^I^I       ^Ild = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: drivers/char/tty_io.c:282:
+^I^I       ^Ild = NULL;$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#317: FILE: drivers/char/tty_io.c:286:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#323: FILE: drivers/char/tty_io.c:292:
+EXPORT_SYMBOL_GPL(tty_ldisc_get);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/char/tty_io.c:298:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#331: FILE: drivers/char/tty_io.c:300:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: drivers/char/tty_io.c:301:
+^I^I$

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#335: FILE: drivers/char/tty_io.c:304:
+	ld->refcount --;
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: drivers/char/tty_io.c:308:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#340: FILE: drivers/char/tty_io.c:309:
+EXPORT_SYMBOL_GPL(tty_ldisc_put);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/char/tty_io.c:315:
+ *^IDereference the line discipline for the terminal and take a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/char/tty_io.c:316:
+ *^Ireference to it. If the line discipline is in flux then $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: drivers/char/tty_io.c:324:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/char/tty_io.c:324:
+ $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#361: FILE: drivers/char/tty_io.c:330:
+	do
+	{	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: drivers/char/tty_io.c:331:
+^I{^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#365: FILE: drivers/char/tty_io.c:334:
+		if(test_bit(TTY_LDISC, &tty->flags))
+		{

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: drivers/char/tty_io.c:334:
+		if(test_bit(TTY_LDISC, &tty->flags))

ERROR:SPACING: space required before the open parenthesis '('
#374: FILE: drivers/char/tty_io.c:343:
+	while(1);

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#374: FILE: drivers/char/tty_io.c:343:
+	}
+	while(1);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/char/tty_io.c:350:
+ *^IDereference the line discipline for the terminal and take a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/char/tty_io.c:351:
+ *^Ireference to it. If the line discipline is in flux then $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: drivers/char/tty_io.c:354:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/char/tty_io.c:354:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/char/tty_io.c:359:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#393: FILE: drivers/char/tty_io.c:362:
+	if(test_bit(TTY_LDISC, &tty->flags))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/char/tty_io.c:377:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/char/tty_io.c:377:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/char/tty_io.c:388:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: drivers/char/tty_io.c:397:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/char/tty_io.c:397:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: drivers/char/tty_io.c:411:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#447: FILE: drivers/char/tty_io.c:415:
+	if (ld == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#452: FILE: drivers/char/tty_io.c:419:
+	if (ld == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/char/tty_io.c:432:
+^I $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#473: FILE: drivers/char/tty_io.c:434:
+	if(tty->ldisc.refcount)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: drivers/char/tty_io.c:434:
+	if(tty->ldisc.refcount)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: drivers/char/tty_io.c:441:
+^Iclear_bit(TTY_LDISC, &tty->flags);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: drivers/char/tty_io.c:450:
+^I $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#529: FILE: drivers/char/tty_io.c:487:
+	/* At this point we hold a reference to the new ldisc and a
+	   a reference to the old ldisc. If we ended up flipping back

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#530: FILE: drivers/char/tty_io.c:488:
+	   to the existing ldisc we have two references to it */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: drivers/char/tty_io.c:492:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#536: FILE: drivers/char/tty_io.c:494:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/char/tty_io.c:499:
+^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: drivers/char/tty_io.c:501:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#545: FILE: drivers/char/tty_io.c:503:
+	/* Restart it in case no characters kick it off. Safe if
+	   already running */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#545: FILE: drivers/char/tty_io.c:503:
+	   already running */

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: drivers/char/tty_io.c:504:
+	if(work)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#572: FILE: drivers/char/tty_io.c:653:
+	if(ld != NULL)	/* We may have no line discipline at this point */
+	{

ERROR:SPACING: space required before the open parenthesis '('
#572: FILE: drivers/char/tty_io.c:653:
+	if(ld != NULL)	/* We may have no line discipline at this point */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ld"
#572: FILE: drivers/char/tty_io.c:653:
+	if(ld != NULL)	/* We may have no line discipline at this point */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/char/tty_io.c:677:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#608: FILE: drivers/char/tty_io.c:677:
+	/* tty_deferred_ldisc_switch(N_TTY);
+	

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#610: FILE: drivers/char/tty_io.c:679:
+	  tty_release is called */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: drivers/char/tty_io.c:820:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: drivers/char/tty_io.c:832:
+^I/* If we have a running line discipline it may need kicking */^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->write_wakeup)
#635: FILE: drivers/char/tty_io.c:836:
+		(ld->write_wakeup)(tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: drivers/char/tty_io.c:837:
+^Itty_ldisc_deref(ld);^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#653: FILE: drivers/char/tty_io.c:859:
+	/* We want to wait for the line discipline to sort out in this
+	   situation */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#653: FILE: drivers/char/tty_io.c:859:
+	   situation */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#659: FILE: drivers/char/tty_io.c:863:
+		i = (ld->read)(tty,file,buf,count);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#659: FILE: drivers/char/tty_io.c:863:
+		i = (ld->read)(tty,file,buf,count);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#659: FILE: drivers/char/tty_io.c:863:
+		i = (ld->read)(tty,file,buf,count);
 		                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->read)
#659: FILE: drivers/char/tty_io.c:863:
+		i = (ld->read)(tty,file,buf,count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/char/tty_io.c:930:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/char/tty_io.c:937:
+^Ild = tty_ldisc_ref_wait(tty);^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/char/tty_io.c:942:
+		ret = do_tty_write(ld->write, tty, file,
 			    (const unsigned char __user *)buf, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/char/tty_io.c:1716:
+^I^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#762: FILE: drivers/char/tty_io.c:1719:
+		ret = (ld->poll)(tty, filp, wait);
 		                      ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->poll)
#762: FILE: drivers/char/tty_io.c:1719:
+		ret = (ld->poll)(tty, filp, wait);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: drivers/char/tty_io.c:1754:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->driver->ioctl)
#807: FILE: drivers/char/tty_io.c:2140:
+		retval = (tty->driver->ioctl)(tty, file, cmd, arg);

ERROR:SPACING: space required before the open parenthesis '('
#818: FILE: drivers/char/tty_io.c:2147:
+		if(likely(test_bit(TTY_LDISC, &tty->flags)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.ioctl)
#819: FILE: drivers/char/tty_io.c:2148:
+			retval = (tty->ldisc.ioctl)(tty, file, cmd, arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: drivers/char/tty_io.c:2193:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: drivers/char/tty_io.c:2202:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/char/tty_io.c:2254:
+ * from the flip buffer to the line discipline. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#860: FILE: drivers/char/tty_io.c:2256:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/char/tty_io.c:2256:
+ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#868: FILE: drivers/char/tty_io.c:2263:
+^Iunsigned long ^Iflags;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disc"
#881: FILE: drivers/char/tty_io.c:2275:
+	if (disc == NULL) {	/*  !TTY_LDISC */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#906: FILE: drivers/char/tty_io.c:2312:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#908: FILE: drivers/char/tty_io.c:2314:
+	if(test_bit(TTY_DONT_FLIP, &tty->flags))

ERROR:SPACING: space required before the open parenthesis '('
#910: FILE: drivers/char/tty_io.c:2316:
+	else if(disc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!disc"
#910: FILE: drivers/char/tty_io.c:2316:
+	else if(disc == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#916: FILE: drivers/char/tty_io.c:2322:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->set_termios)
#948: FILE: drivers/char/tty_ioctl.c:142:
+		(ld->set_termios)(tty, &old_termios);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: drivers/char/tty_ioctl.c:167:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#971: FILE: drivers/char/tty_ioctl.c:172:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: drivers/char/tty_ioctl.c:455:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1033: FILE: fs/proc/proc_tty.c:160:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#1037: FILE: fs/proc/proc_tty.c:163:
+		if (ld == NULL)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1066: FILE: include/linux/tty.h:309:
+#define TTY_THROTTLED ^I^I0^I/* Call unthrottle() at threshold min */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1067: FILE: include/linux/tty.h:310:
+#define TTY_IO_ERROR ^I^I1^I/* Canse an I/O error (may be no ldisc too) */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1068: FILE: include/linux/tty.h:311:
+#define TTY_OTHER_CLOSED ^I2^I/* Other side (if any) has closed */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1069: FILE: include/linux/tty.h:312:
+#define TTY_EXCLUSIVE ^I^I3^I/* Exclusive open mode */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1070: FILE: include/linux/tty.h:313:
+#define TTY_DEBUG ^I^I4^I/* Debugging */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1071: FILE: include/linux/tty.h:314:
+#define TTY_DO_WRITE_WAKEUP ^I5^I/* Call write_wakeup after queuing new */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1072: FILE: include/linux/tty.h:315:
+#define TTY_PUSH ^I^I6^I/* n_tty private */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1073: FILE: include/linux/tty.h:316:
+#define TTY_CLOSING ^I^I7^I/* ->close() in progress */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1074: FILE: include/linux/tty.h:317:
+#define TTY_DONT_FLIP ^I^I8^I/* Defer buffer flip */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1075: FILE: include/linux/tty.h:318:
+#define TTY_LDISC ^I^I9^I/* Line discipline attached */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1076: FILE: include/linux/tty.h:319:
+#define TTY_HW_COOK_OUT ^I14^I/* Hardware can do output cooking */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1077: FILE: include/linux/tty.h:320:
+#define TTY_HW_COOK_IN ^I^I15^I/* Hardware can do input cooking */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1078: FILE: include/linux/tty.h:321:
+#define TTY_PTY_LOCK ^I^I16^I/* pty private */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1079: FILE: include/linux/tty.h:322:
+#define TTY_NO_WRITE_SPLIT ^I17^I/* Preserve write boundaries to driver */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1087: FILE: include/linux/tty.h:366:
+extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#1087: FILE: include/linux/tty.h:366:
+extern struct tty_ldisc *tty_ldisc_ref(struct tty_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1088: FILE: include/linux/tty.h:367:
+extern void tty_ldisc_deref(struct tty_ldisc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_ldisc *' should also have an identifier name
#1088: FILE: include/linux/tty.h:367:
+extern void tty_ldisc_deref(struct tty_ldisc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1089: FILE: include/linux/tty.h:368:
+extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#1089: FILE: include/linux/tty.h:368:
+extern struct tty_ldisc *tty_ldisc_ref_wait(struct tty_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1091: FILE: include/linux/tty.h:370:
+extern struct tty_ldisc *tty_ldisc_get(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1091: FILE: include/linux/tty.h:370:
+extern struct tty_ldisc *tty_ldisc_get(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1092: FILE: include/linux/tty.h:371:
+extern void tty_ldisc_put(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1092: FILE: include/linux/tty.h:371:
+extern void tty_ldisc_put(int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: include/linux/tty_ldisc.h:135:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251621.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 46 warnings, 18 checks, 1018 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251621.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
