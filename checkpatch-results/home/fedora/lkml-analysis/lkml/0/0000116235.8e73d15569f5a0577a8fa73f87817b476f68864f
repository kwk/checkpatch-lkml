WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
      phy: Added a macro to represent the string format used to match a phy device

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#124: FILE: drivers/net/e100.c:585:
+	spinlock_t mdio_lock;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#136: FILE: drivers/net/e100.c:888:
+	/*
+	 * Stratus87247: we shouldn't be writing the MDI control

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#145: FILE: drivers/net/e100.c:897:
+		udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#148: FILE: drivers/net/e100.c:900:
+		printk("e100.mdio_ctrl(%s) won't go Ready\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mdio_ctrl', this function's name, in a string
#148: FILE: drivers/net/e100.c:900:
+		printk("e100.mdio_ctrl(%s) won't go Ready\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/net/e100.c:901:
+		printk("e100.mdio_ctrl(%s) won't go Ready\n",
+			nic->netdev->name );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#149: FILE: drivers/net/e100.c:901:
+			nic->netdev->name );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#159: FILE: drivers/net/e100.c:909:
+		if ((data_out = readl(&nic->csr->mdi_ctrl)) & mdi_ready)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#224: FILE: drivers/net/gianfar_mii.c:158:
+	regs = (struct gfar_mii *) ioremap(r->start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/net/phy/phy.c:46:
+	pr_info("PHY: %s - Link is %s", phydev->dev.bus_id,
 			phydev->link ? "Up" : "Down");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/net/wireless/atmel.c:1868:
+static int atmel_set_encodeext(struct net_device *dev,
+			    struct iw_request_info *info,

CHECK:BRACES: braces {} should be used on all arms of this statement
#348: FILE: drivers/net/wireless/atmel.c:1879:
+	if (idx) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#352: FILE: drivers/net/wireless/atmel.c:1883:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: drivers/net/wireless/atmel.c:1914:
+		key_len = min ((int)ext->key_len, priv->wep_key_len[idx]);

WARNING:MINMAX: min() should probably be min_t(int, ext->key_len, priv->wep_key_len[idx])
#383: FILE: drivers/net/wireless/atmel.c:1914:
+		key_len = min ((int)ext->key_len, priv->wep_key_len[idx]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/net/wireless/atmel.c:1925:
+static int atmel_get_encodeext(struct net_device *dev,
+			    struct iw_request_info *info,

CHECK:BRACES: braces {} should be used on all arms of this statement
#408: FILE: drivers/net/wireless/atmel.c:1939:
+	if (idx) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#412: FILE: drivers/net/wireless/atmel.c:1943:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/net/wireless/atmel.c:1948:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/net/wireless/atmel.c:1968:
+static int atmel_set_auth(struct net_device *dev,
+			       struct iw_request_info *info,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#451: FILE: drivers/net/wireless/atmel.c:1982:
+		/*
+		 * atmel does not use these parameters

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#460: FILE: drivers/net/wireless/atmel.c:1991:
+			if (param->value & IW_AUTH_ALG_SHARED_KEY) {
[...]
+			} else if (param->value & IW_AUTH_ALG_OPEN_SYSTEM) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#464: FILE: drivers/net/wireless/atmel.c:1995:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/net/wireless/atmel.c:2013:
+static int atmel_get_auth(struct net_device *dev,
+			       struct iw_request_info *info,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#510: FILE: drivers/net/wireless/atmel.c:2041:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#536: FILE: drivers/net/wireless/atmel.c:2569:
+	(iw_handler) NULL,			/* -- hole -- */

CHECK:SPACING: No space is necessary after a cast
#537: FILE: drivers/net/wireless/atmel.c:2570:
+	(iw_handler) NULL,			/* -- hole -- */

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/net/wireless/atmel.c:2571:
+	(iw_handler) NULL,			/* SIOCSIWGENIE */

CHECK:SPACING: No space is necessary after a cast
#539: FILE: drivers/net/wireless/atmel.c:2572:
+	(iw_handler) NULL,			/* SIOCGIWGENIE */

CHECK:SPACING: No space is necessary after a cast
#540: FILE: drivers/net/wireless/atmel.c:2573:
+	(iw_handler) atmel_set_auth,		/* SIOCSIWAUTH */

CHECK:SPACING: No space is necessary after a cast
#541: FILE: drivers/net/wireless/atmel.c:2574:
+	(iw_handler) atmel_get_auth,		/* SIOCGIWAUTH */

CHECK:SPACING: No space is necessary after a cast
#542: FILE: drivers/net/wireless/atmel.c:2575:
+	(iw_handler) atmel_set_encodeext,	/* SIOCSIWENCODEEXT */

CHECK:SPACING: No space is necessary after a cast
#543: FILE: drivers/net/wireless/atmel.c:2576:
+	(iw_handler) atmel_get_encodeext,	/* SIOCGIWENCODEEXT */

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/net/wireless/atmel.c:2577:
+	(iw_handler) NULL,			/* SIOCSIWPMKSA */

CHECK:CAMELCASE: Avoid CamelCase: <CurrentBSSID>
#565: FILE: drivers/net/wireless/atmel.c:3160:
+		memcpy(wrqu.ap_addr.sa_data, priv->CurrentBSSID, ETH_ALEN);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#584: FILE: drivers/net/wireless/atmel.c:4003:
+	if (old_state == STATION_STATE_READY)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 25 checks, 499 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116235.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
