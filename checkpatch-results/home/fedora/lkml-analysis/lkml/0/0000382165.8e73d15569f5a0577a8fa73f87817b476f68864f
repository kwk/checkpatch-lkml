WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -Nuarp linux-2.4.20-bonding-20030317/Documentation/networking/bonding.txt linux-2.4.20-bonding-20030317-devel/Documentation/networking/bonding.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: Documentation/networking/bonding.txt:212:
+^ISpecifies one of four bonding policies. The default is $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: Documentation/networking/bonding.txt:245:
+^I^Iretrieving the speed of each slave. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: Documentation/networking/bonding.txt:246:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: Documentation/networking/bonding.txt:255:
+^I^Iretrieving the speed of each slave. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: Documentation/networking/bonding.txt:620:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: Documentation/networking/bonding.txt:622:
+^Icurrent load on each slave. The balancing is clients based and the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: Documentation/networking/bonding.txt:625:
+^Iin mixed speed teams.    $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: drivers/net/bonding/bond_alb.c:1:
+/****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#134: FILE: drivers/net/bonding/bond_alb.c:2:
+/****************************************************************************
+   Copyright(c) 1999 - 2003 Intel Corporation. All rights reserved.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#147: FILE: drivers/net/bonding/bond_alb.c:15:
+   this program; if not, write to the Free Software Foundation, Inc., 59$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/net/bonding/bond_alb.c:39:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#176: FILE: drivers/net/bonding/bond_alb.c:44:
+#define BOND_TLB_REBALANCE_TICKS_INTERVAL (BOND_TLB_REBALANCE_INTERVAL*ALB_TIMER_TICKS_PER_SEC)
                                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#177: FILE: drivers/net/bonding/bond_alb.c:45:
+#define BOND_ALB_LP_TICKS_INTERVAL (BOND_ALB_LP_INTERVAL*ALB_TIMER_TICKS_PER_SEC)
                                                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: drivers/net/bonding/bond_alb.c:51:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#192: FILE: drivers/net/bonding/bond_alb.c:60:
+	u8 padding[ETH_ZLEN - (2*ETH_ALEN + 2)];
 	                        ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#202: FILE: drivers/net/bonding/bond_alb.c:70:
+static struct slave* tlb_choose_channel(struct bonding *bond, u32 hash_index, u32 skb_len);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#203: FILE: drivers/net/bonding/bond_alb.c:71:
+static struct slave* tlb_get_least_loaded_slave(struct bonding *bond);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#220: FILE: drivers/net/bonding/bond_alb.c:88:
+	if (BOND_ALB_INFO(bond).tx_hashtbl == NULL) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_hashtbl"
#220: FILE: drivers/net/bonding/bond_alb.c:88:
+	if (BOND_ALB_INFO(bond).tx_hashtbl == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#226: FILE: drivers/net/bonding/bond_alb.c:94:
+	if (save_load) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#241: FILE: drivers/net/bonding/bond_alb.c:109:
+	if (save_load) {
[...]
+	} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#256: FILE: drivers/net/bonding/bond_alb.c:124:
+	if (!slave) {
+		return;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: drivers/net/bonding/bond_alb.c:150:
+	for (i=0; i<hash_size; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#282: FILE: drivers/net/bonding/bond_alb.c:150:
+	for (i=0; i<hash_size; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#282: FILE: drivers/net/bonding/bond_alb.c:150:
+	for (i=0; i<hash_size; i++) {
+		hash ^= hash_start[i];
+	}

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: drivers/net/bonding/bond_alb.c:165:
+#if(TLB_HASH_TABLE_SIZE != 256)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bond_info->tx_hashtbl_lock
#302: FILE: drivers/net/bonding/bond_alb.c:170:
+	spin_lock_init(&(bond_info->tx_hashtbl_lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bond_info->tx_hashtbl"
#305: FILE: drivers/net/bonding/bond_alb.c:173:
+	if (bond_info->tx_hashtbl != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#306: FILE: drivers/net/bonding/bond_alb.c:174:
+		printk (KERN_ERR "%s: TLB hash table is not NULL\n", bond->device->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: drivers/net/bonding/bond_alb.c:174:
+		printk (KERN_ERR "%s: TLB hash table is not NULL\n", bond->device->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bond_info->tx_hashtbl"
#313: FILE: drivers/net/bonding/bond_alb.c:181:
+	if (bond_info->tx_hashtbl == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#314: FILE: drivers/net/bonding/bond_alb.c:182:
+		printk (KERN_ERR "%s: Failed to allocate TLB hash table\n", bond->device->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#314: FILE: drivers/net/bonding/bond_alb.c:182:
+		printk (KERN_ERR "%s: Failed to allocate TLB hash table\n", bond->device->name);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#319: FILE: drivers/net/bonding/bond_alb.c:187:
+	for (i=0; i<TLB_HASH_TABLE_SIZE; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#319: FILE: drivers/net/bonding/bond_alb.c:187:
+	for (i=0; i<TLB_HASH_TABLE_SIZE; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#319: FILE: drivers/net/bonding/bond_alb.c:187:
+	for (i=0; i<TLB_HASH_TABLE_SIZE; i++) {
+		tlb_init_table_entry(bond, i, 0);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bond_info->tx_hashtbl"
#341: FILE: drivers/net/bonding/bond_alb.c:209:
+	if (bond_info->tx_hashtbl == NULL) {

CHECK:SPACING: No space is necessary after a cast
#354: FILE: drivers/net/bonding/bond_alb.c:222:
+	struct bonding *bond = (struct bonding *) dev->priv;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/net/bonding/bond_alb.c:231:
+	u8 mac_bcast[ETH_ALEN] = {0xff,0xff,0xff,0xff,0xff,0xff};
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/net/bonding/bond_alb.c:231:
+	u8 mac_bcast[ETH_ALEN] = {0xff,0xff,0xff,0xff,0xff,0xff};
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/net/bonding/bond_alb.c:231:
+	u8 mac_bcast[ETH_ALEN] = {0xff,0xff,0xff,0xff,0xff,0xff};
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/net/bonding/bond_alb.c:231:
+	u8 mac_bcast[ETH_ALEN] = {0xff,0xff,0xff,0xff,0xff,0xff};
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/net/bonding/bond_alb.c:231:
+	u8 mac_bcast[ETH_ALEN] = {0xff,0xff,0xff,0xff,0xff,0xff};
 	                                                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->nh.iph->daddr == 0xffffffff'
#384: FILE: drivers/net/bonding/bond_alb.c:252:
+		if ((memcmp(eth_data->h_dest, mac_bcast, ETH_ALEN) == 0) ||
+		    (skb->nh.iph->daddr == 0xffffffff)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#389: FILE: drivers/net/bonding/bond_alb.c:257:
+		hash_start = (char*)&(skb->nh.iph->daddr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around skb->nh.iph->daddr
#389: FILE: drivers/net/bonding/bond_alb.c:257:
+		hash_start = (char*)&(skb->nh.iph->daddr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#399: FILE: drivers/net/bonding/bond_alb.c:267:
+		hash_start = (char*)&(skb->nh.ipv6h->daddr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around skb->nh.ipv6h->daddr
#399: FILE: drivers/net/bonding/bond_alb.c:267:
+		hash_start = (char*)&(skb->nh.ipv6h->daddr);

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#404: FILE: drivers/net/bonding/bond_alb.c:272:
+		if (skb->nh.ipxh->ipx_checksum != __constant_htons(IPX_NO_CHECKSUM)) {

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#409: FILE: drivers/net/bonding/bond_alb.c:277:
+		if (skb->nh.ipxh->ipx_type != __constant_htons(IPX_TYPE_NCP)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#414: FILE: drivers/net/bonding/bond_alb.c:282:
+		hash_start = (char*)eth_data->h_dest;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#436: FILE: drivers/net/bonding/bond_alb.c:304:
+		if (tx_slave != bond->current_slave) {
+			memcpy(eth_data->h_source, tx_slave->dev->dev_addr, ETH_ALEN);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#442: FILE: drivers/net/bonding/bond_alb.c:310:
+		if (tx_slave) {
+			tlb_clear_slave(bond, tx_slave);
+		}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#462: FILE: drivers/net/bonding/bond_alb.c:330:
+	if (bond->next == (struct slave*)bond) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#474: FILE: drivers/net/bonding/bond_alb.c:342:
+		for (; slave && (slave != (struct slave *)bond); slave = bond_get_next_slave(bond, slave)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#474: FILE: drivers/net/bonding/bond_alb.c:342:
+		for (; slave && (slave != (struct slave *)bond); slave = bond_get_next_slave(bond, slave)) {
+			alb_send_learning_packets(slave, slave->dev->dev_addr);
+		}

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#483: FILE: drivers/net/bonding/bond_alb.c:351:
+		for (; slave && (slave != (struct slave *)bond); slave = bond_get_next_slave(bond, slave)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#499: FILE: drivers/net/bonding/bond_alb.c:367:
+	mod_timer(&(bond_info->alb_timer), jiffies + (HZ/ALB_TIMER_TICKS_PER_SEC));
 	                                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bond_info->alb_timer
#499: FILE: drivers/net/bonding/bond_alb.c:367:
+	mod_timer(&(bond_info->alb_timer), jiffies + (HZ/ALB_TIMER_TICKS_PER_SEC));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#507: FILE: drivers/net/bonding/bond_alb.c:375:
+	if (bond->slave_cnt > 1) {
+		alb_handle_addr_collision_on_attach(bond, slave);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#519: FILE: drivers/net/bonding/bond_alb.c:387:
+	if (bond->slave_cnt > 1) {
+		alb_change_hw_addr_on_detach(bond, slave);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#529: FILE: drivers/net/bonding/bond_alb.c:397:
+	struct alb_bond_info *bond_info = &(BOND_ALB_INFO(bond));
+	if (slave == (struct slave *)bond) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#529: FILE: drivers/net/bonding/bond_alb.c:397:
+	if (slave == (struct slave *)bond) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#533: FILE: drivers/net/bonding/bond_alb.c:401:
+	if (link == BOND_LINK_FAIL) {
+		tlb_clear_slave(bond, slave);
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#544: FILE: drivers/net/bonding/bond_alb.c:412:
+struct slave* bond_alb_handle_active_change(struct bonding *bond, struct slave *new_slave)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#546: FILE: drivers/net/bonding/bond_alb.c:414:
+	struct slave *old_slave=NULL, *swap_slave=NULL;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#546: FILE: drivers/net/bonding/bond_alb.c:414:
+	struct slave *old_slave=NULL, *swap_slave=NULL;
 	                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bond->slave_cnt == 0'
#548: FILE: drivers/net/bonding/bond_alb.c:416:
+	if (!new_slave || (bond->slave_cnt == 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#548: FILE: drivers/net/bonding/bond_alb.c:416:
+	if (!new_slave || (bond->slave_cnt == 0)) {
+		return NULL;
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#552: FILE: drivers/net/bonding/bond_alb.c:420:
+	swap_slave = old_slave = bond->current_slave;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#554: FILE: drivers/net/bonding/bond_alb.c:422:
+	if (old_slave == new_slave) {
+		return new_slave;
+	}

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#562: FILE: drivers/net/bonding/bond_alb.c:430:
+			if (memcmp(swap_slave->dev->dev_addr, bond->device->dev_addr, ETH_ALEN) == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#562: FILE: drivers/net/bonding/bond_alb.c:430:
+			if (memcmp(swap_slave->dev->dev_addr, bond->device->dev_addr, ETH_ALEN) == 0) {
+				break;
+			}

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#592: FILE: drivers/net/bonding/bond_alb.c:460:
+	pkt.type = __constant_htons(ETH_P_LOOP);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#594: FILE: drivers/net/bonding/bond_alb.c:462:
+	for (i=0; i < MAX_LP_RETRY; i++) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#597: FILE: drivers/net/bonding/bond_alb.c:465:
+		if (!skb) {
+			return;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#614: FILE: drivers/net/bonding/bond_alb.c:482:
+	if (!slave) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#627: FILE: drivers/net/bonding/bond_alb.c:495:
+	if (!slave1 || !slave2) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: drivers/net/bonding/bond_alb.c:504:
+	if (SLAVE_IS_OK(slave1)) {
+		alb_send_learning_packets(slave1, slave1->dev->dev_addr);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#639: FILE: drivers/net/bonding/bond_alb.c:507:
+	if (SLAVE_IS_OK(slave2)) {
+		alb_send_learning_packets(slave2, slave2->dev->dev_addr);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: drivers/net/bonding/bond_alb.c:513:
+ * alb_change_hw_addr_on_detach $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/net/bonding/bond_alb.c:518:
+ * $

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#653: FILE: drivers/net/bonding/bond_alb.c:521:
+ * @slave's permanet address as its current address. We'll make sure that that 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: drivers/net/bonding/bond_alb.c:521:
+ * @slave's permanet address as its current address. We'll make sure that that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/net/bonding/bond_alb.c:523:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/net/bonding/bond_alb.c:524:
+ * Assumes bond->lock is held for writing. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: drivers/net/bonding/bond_alb.c:563:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: drivers/net/bonding/bond_alb.c:567:
+ * any other slave in the bond, so we can assign it to @slave. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/net/bonding/bond_alb.c:568:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: drivers/net/bonding/bond_alb.c:569:
+ * Assumes bond->lock is held for writing. $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#707: FILE: drivers/net/bonding/bond_alb.c:575:
+	if (memcmp(slave->perm_hwaddr, bond->device->dev_addr, ETH_ALEN)) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#713: FILE: drivers/net/bonding/bond_alb.c:581:
+		if (tmp_slave1 == slave) {
+			continue;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#719: FILE: drivers/net/bonding/bond_alb.c:587:
+			if (tmp_slave2 == slave) {
+				continue;
+			}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#726: FILE: drivers/net/bonding/bond_alb.c:594:
+				    ETH_ALEN)) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: drivers/net/bonding/bond_alb.c:608:
+^I^Iprintk(KERN_WARNING "bonding: Warning: the hw address " $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#740: FILE: drivers/net/bonding/bond_alb.c:608:
+		printk(KERN_WARNING "bonding: Warning: the hw address " 

WARNING:SPLIT_STRING: quoted string split across lines
#741: FILE: drivers/net/bonding/bond_alb.c:609:
+		printk(KERN_WARNING "bonding: Warning: the hw address " 
+		       "of slave %s is not unique; "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: drivers/net/bonding/bond_alb.c:613:
+^I^Iprintk(KERN_CRIT "bonding: Error: the hw address " $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#745: FILE: drivers/net/bonding/bond_alb.c:613:
+		printk(KERN_CRIT "bonding: Error: the hw address " 

WARNING:SPLIT_STRING: quoted string split across lines
#746: FILE: drivers/net/bonding/bond_alb.c:614:
+		printk(KERN_CRIT "bonding: Error: the hw address " 
+		       "of slave %s is not unique; "

WARNING:SPLIT_STRING: quoted string split across lines
#748: FILE: drivers/net/bonding/bond_alb.c:616:
+		       "couldn't find a slave with a free hw "
+		       "address to give it (this should not have "

WARNING:SPLIT_STRING: quoted string split across lines
#749: FILE: drivers/net/bonding/bond_alb.c:617:
+		       "address to give it (this should not have "
+		       "happened)\n", slave->dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#750: FILE: drivers/net/bonding/bond_alb.c:618:
+		printk(KERN_CRIT "Communications may become unstable "

WARNING:SPLIT_STRING: quoted string split across lines
#751: FILE: drivers/net/bonding/bond_alb.c:619:
+		printk(KERN_CRIT "Communications may become unstable "
+		       "(confused switch). You might want to remove "

WARNING:SPLIT_STRING: quoted string split across lines
#752: FILE: drivers/net/bonding/bond_alb.c:620:
+		       "(confused switch). You might want to remove "
+		       "this slave\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#757: FILE: drivers/net/bonding/bond_alb.c:625:
+struct slave* tlb_choose_channel(struct bonding *bond, u32 hash_index, u32 skb_len)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hash_table"
#766: FILE: drivers/net/bonding/bond_alb.c:634:
+	if (hash_table == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#767: FILE: drivers/net/bonding/bond_alb.c:635:
+		printk (KERN_ERR "%s: TLB hash table is NULL\n", bond->device->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: drivers/net/bonding/bond_alb.c:635:
+		printk (KERN_ERR "%s: TLB hash table is NULL\n", bond->device->name);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#785: FILE: drivers/net/bonding/bond_alb.c:653:
+			if (next_index != TLB_NULL_INDEX) {
+				hash_table[next_index].prev = hash_index;
+			}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#800: FILE: drivers/net/bonding/bond_alb.c:668:
+static struct slave* tlb_get_least_loaded_slave(struct bonding *bond)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#806: FILE: drivers/net/bonding/bond_alb.c:674:
+	if (slave == (struct slave *)bond) {
+		return NULL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: drivers/net/bonding/bond_alb.c:677:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#812: FILE: drivers/net/bonding/bond_alb.c:680:
+		if (SLAVE_IS_OK(slave)) {
+			break;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#818: FILE: drivers/net/bonding/bond_alb.c:686:
+	if (!slave) {
+		return NULL;
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#846: FILE: drivers/net/bonding/bond_alb.h:1:
+/****************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#847: FILE: drivers/net/bonding/bond_alb.h:2:
+/****************************************************************************
+   Copyright(c) 1999 - 2003 Intel Corporation. All rights reserved.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#860: FILE: drivers/net/bonding/bond_alb.h:15:
+   this program; if not, write to the Free Software Foundation, Inc., 59$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#872: FILE: drivers/net/bonding/bond_alb.h:27:
+
+

WARNING:TYPO_SPELLING: 'acumulates' may be misspelled - perhaps 'accumulates'?
#879: FILE: drivers/net/bonding/bond_alb.h:34:
+	u32 tx_bytes;		//Each Client acumulates the BytesTx that were tranmitted to it and
 	             		              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'tranmitted' may be misspelled - perhaps 'transmitted'?
#879: FILE: drivers/net/bonding/bond_alb.h:34:
+	u32 tx_bytes;		//Each Client acumulates the BytesTx that were tranmitted to it and
 	             		                                               ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'devided' may be misspelled - perhaps 'divided'?
#880: FILE: drivers/net/bonding/bond_alb.h:35:
+				//after each CallBack the LoadHistory gets it devided to the balanceinterval
 				                                              ^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#880: FILE: drivers/net/bonding/bond_alb.h:35:
+				//after each CallBack the LoadHistory gets it devided to the balanceinterval

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#914: FILE: drivers/net/bonding/bond_alb.h:69:
+struct slave* bond_alb_handle_active_change(struct bonding *bond, struct slave *new_slave);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#985: FILE: drivers/net/bonding/bond_main.c:499:
+bond_assign_current_slave(struct bonding *bond,struct slave *newslave)
                                               ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#987: FILE: drivers/net/bonding/bond_main.c:501:
+	if (bond_mode == BOND_MODE_TLB) {
[...]
+	} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1060: FILE: drivers/net/bonding/bond_main.c:900:
+		struct timer_list *alb_timer = &(BOND_ALB_INFO(bond).alb_timer);
+		if (bond_alb_initialize(bond)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1060: FILE: drivers/net/bonding/bond_main.c:900:
+		if (bond_alb_initialize(bond)) {
+			return -1;
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bond->current_slave == NULL'
#1101: FILE: drivers/net/bonding/bond_main.c:1461:
+		if ((bond->current_slave == NULL) && (new_slave->link == BOND_LINK_UP)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_slave->link == BOND_LINK_UP'
#1101: FILE: drivers/net/bonding/bond_main.c:1461:
+		if ((bond->current_slave == NULL) && (new_slave->link == BOND_LINK_UP)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bond->current_slave"
#1101: FILE: drivers/net/bonding/bond_main.c:1461:
+		if ((bond->current_slave == NULL) && (new_slave->link == BOND_LINK_UP)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1103: FILE: drivers/net/bonding/bond_main.c:1463:
+			/*
+			 * first slave or no active slave yet, and this link

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bond->slave_cnt > 1'
#1182: FILE: drivers/net/bonding/bond_main.c:1737:
+			if (!mac_addr_differ && (bond->slave_cnt > 1)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1183: FILE: drivers/net/bonding/bond_main.c:1738:
+				printk(KERN_WARNING "WARNING: the permanent HWaddr of %s "

WARNING:SPLIT_STRING: quoted string split across lines
#1184: FILE: drivers/net/bonding/bond_main.c:1739:
+				printk(KERN_WARNING "WARNING: the permanent HWaddr of %s "
+				"- %02X:%02X:%02X:%02X:%02X:%02X - "

WARNING:SPLIT_STRING: quoted string split across lines
#1185: FILE: drivers/net/bonding/bond_main.c:1740:
+				"- %02X:%02X:%02X:%02X:%02X:%02X - "
+				"is still in use by %s. Set the HWaddr "

WARNING:SPLIT_STRING: quoted string split across lines
#1186: FILE: drivers/net/bonding/bond_main.c:1741:
+				"is still in use by %s. Set the HWaddr "
+				"of %s to a different address "

WARNING:SPLIT_STRING: quoted string split across lines
#1187: FILE: drivers/net/bonding/bond_main.c:1742:
+				"of %s to a different address "
+				"to avoid conflicts.\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1244: FILE: drivers/net/bonding/bond_main.c:2026:
+					if (bond_mode == BOND_MODE_TLB) {
+						bond_alb_handle_link_change(bond, slave, BOND_LINK_FAIL);
+					}

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1245: FILE: drivers/net/bonding/bond_main.c:2027:
+						bond_alb_handle_link_change(bond, slave, BOND_LINK_FAIL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1257: FILE: drivers/net/bonding/bond_main.c:2124:
+					if (bond_mode == BOND_MODE_TLB) {
+						bond_alb_handle_link_change(bond, slave, BOND_LINK_UP);
+					}

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1258: FILE: drivers/net/bonding/bond_main.c:2125:
+						bond_alb_handle_link_change(bond, slave, BOND_LINK_UP);

WARNING:SPLIT_STRING: quoted string split across lines
#1336: FILE: drivers/net/bonding/bond_main.c:3547:
 			       "can't be used simultaneously with 802.3ad, "
+			       "disabling ARP monitoring\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1346: FILE: drivers/net/bonding/bond_main.c:3556:
 			       "speed and duplex which are essential "
+			       "for 802.3ad operation\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1347: FILE: drivers/net/bonding/bond_main.c:3557:
+			printk(KERN_ERR "Forcing miimon to 100msec\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1356: FILE: drivers/net/bonding/bond_main.c:3564:
 			       "bonding_init(): Multicast mode must "
+			       "be set to ALL for 802.3ad\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1357: FILE: drivers/net/bonding/bond_main.c:3565:
+			printk(KERN_ERR "Forcing Multicast mode to ALL\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1366: FILE: drivers/net/bonding/bond_main.c:3573:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bonding_init', this function's name, in a string
#1367: FILE: drivers/net/bonding/bond_main.c:3574:
+			       "bonding_init(): miimon must be specified, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#1368: FILE: drivers/net/bonding/bond_main.c:3575:
+			       "bonding_init(): miimon must be specified, "
+			       "otherwise bonding will not detect link failure "

WARNING:SPLIT_STRING: quoted string split across lines
#1369: FILE: drivers/net/bonding/bond_main.c:3576:
+			       "otherwise bonding will not detect link failure "
+			       "and link speed which are essential "

WARNING:SPLIT_STRING: quoted string split across lines
#1370: FILE: drivers/net/bonding/bond_main.c:3577:
+			       "and link speed which are essential "
+			       "for TLB load balancing\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1371: FILE: drivers/net/bonding/bond_main.c:3578:
+			printk(KERN_ERR "Forcing miimon to 100msec\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1376: FILE: drivers/net/bonding/bond_main.c:3583:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bonding_init', this function's name, in a string
#1377: FILE: drivers/net/bonding/bond_main.c:3584:
+			       "bonding_init(): Multicast mode must "

WARNING:SPLIT_STRING: quoted string split across lines
#1378: FILE: drivers/net/bonding/bond_main.c:3585:
+			       "bonding_init(): Multicast mode must "
+			       "be set to ACTIVE for TLB\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1379: FILE: drivers/net/bonding/bond_main.c:3586:
+			printk(KERN_ERR "Forcing Multicast mode to ACTIVE\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 88 warnings, 25 checks, 1302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
