WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
 *      - Change the way we get to spy_data method for added safety and hostap

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#78: FILE: include/linux/netdevice.h:298:
+	const struct iw_handler_def *	wireless_handlers;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#80: FILE: include/linux/netdevice.h:300:
+	struct iw_public_data *	wireless_data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#191: FILE: include/linux/wireless.h:443:
+ * 32 bit bitmasks. Note : 32 bits = 0x20 = 2^5. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cmd' - possible side-effects?
#192: FILE: include/linux/wireless.h:444:
+#define IW_EVENT_CAPA_BASE(cmd)		((cmd >= SIOCIWFIRSTPRIV) ? \
+					 (cmd - SIOCIWFIRSTPRIV + 0x60) : \
+					 (cmd - SIOCSIWCOMMIT))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cmd' may be better as '(cmd)' to avoid precedence issues
#192: FILE: include/linux/wireless.h:444:
+#define IW_EVENT_CAPA_BASE(cmd)		((cmd >= SIOCIWFIRSTPRIV) ? \
+					 (cmd - SIOCIWFIRSTPRIV + 0x60) : \
+					 (cmd - SIOCSIWCOMMIT))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#198: FILE: include/linux/wireless.h:450:
+ * This list is valid for most 802.11 devices, customise as needed... */

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#204: FILE: include/linux/wireless.h:456:
+#define IW_EVENT_CAPA_SET(event_capa, cmd) (event_capa[IW_EVENT_CAPA_INDEX(cmd)] |= IW_EVENT_CAPA_MASK(cmd))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cmd' - possible side-effects?
#204: FILE: include/linux/wireless.h:456:
+#define IW_EVENT_CAPA_SET(event_capa, cmd) (event_capa[IW_EVENT_CAPA_INDEX(cmd)] |= IW_EVENT_CAPA_MASK(cmd))

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#205: FILE: include/linux/wireless.h:457:
+#define IW_EVENT_CAPA_SET_KERNEL(event_capa) {event_capa[0] |= IW_EVENT_CAPA_K_0; event_capa[1] |= IW_EVENT_CAPA_K_1; }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'event_capa' - possible side-effects?
#205: FILE: include/linux/wireless.h:457:
+#define IW_EVENT_CAPA_SET_KERNEL(event_capa) {event_capa[0] |= IW_EVENT_CAPA_K_0; event_capa[1] |= IW_EVENT_CAPA_K_1; }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: include/linux/wireless.h:459:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#294: FILE: include/net/iw_handler.h:322:
+	const iw_handler *	standard;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#300: FILE: include/net/iw_handler.h:327:
+	const iw_handler *	private;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#306: FILE: include/net/iw_handler.h:332:
+	const struct iw_priv_args *	private_args;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#317: FILE: include/net/iw_handler.h:339:
+	 * out, and drivers are encouraged to use this one... */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#352: FILE: include/net/iw_handler.h:409:
+	struct iw_spy_data *	spy_data;

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#415: FILE: net/core/wireless.c:143:
+	{ IW_HEADER_TYPE_POINT, 0, (sizeof(struct sockaddr) + sizeof(struct iw_quality)), 0, IW_MAX_AP, IW_DESCR_FLAG_NOMAX},

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wireless_handlers != NULL'
#438: FILE: net/core/wireless.c:280:
+	if((dev->wireless_handlers != NULL) &&
+	   (dev->wireless_handlers->get_wireless_stats != NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wireless_handlers->get_wireless_stats != NULL'
#438: FILE: net/core/wireless.c:280:
+	if((dev->wireless_handlers != NULL) &&
+	   (dev->wireless_handlers->get_wireless_stats != NULL))

ERROR:SPACING: space required before the open parenthesis '('
#438: FILE: net/core/wireless.c:280:
+	if((dev->wireless_handlers != NULL) &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->wireless_handlers"
#438: FILE: net/core/wireless.c:280:
+	if((dev->wireless_handlers != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->wireless_handlers->get_wireless_stats"
#439: FILE: net/core/wireless.c:281:
+	   (dev->wireless_handlers->get_wireless_stats != NULL))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#470: FILE: net/core/wireless.c:334:
+/*
+ * Re-calculate the size of private arguments

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#473: FILE: net/core/wireless.c:337:
+				   union iwreq_data *	wrqu)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#516: FILE: net/core/wireless.c:508:
+		 * any size buffer we want somewhat efficiently... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#541: FILE: net/core/wireless.c:575:
+		 * for max space. Easier, and won't last long... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#556: FILE: net/core/wireless.c:598:
+			 * implied by the test at the end. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'user_length > descr->max_tokens'
#559: FILE: net/core/wireless.c:601:
+			if((descr->flags & IW_DESCR_FLAG_NOMAX) &&
+			   (user_length > descr->max_tokens)) {

ERROR:SPACING: space required before the open parenthesis '('
#559: FILE: net/core/wireless.c:601:
+			if((descr->flags & IW_DESCR_FLAG_NOMAX) &&

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#563: FILE: net/core/wireless.c:605:
+				 * There is still a limit : -ENOMEM. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: net/core/wireless.c:610:
+				 * won't overflow... */

ERROR:SPACING: space required before the open parenthesis '('
#595: FILE: net/core/wireless.c:647:
+			if(user_length < iwr->u.data.length) {

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#608: FILE: net/core/wireless.c:713:
+	const struct iw_priv_args *	descr = NULL;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#625: FILE: net/core/wireless.c:823:
 		if (!ret && IW_IS_GET(cmd)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#627: FILE: net/core/wireless.c:825:
+			 * avoid leaking kernel bits outside. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#630: FILE: net/core/wireless.c:828:
+							      &(iwr->u));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#645: FILE: net/core/wireless.c:1106:
+/*
+ * Return the pointer to the spy data in the driver.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#649: FILE: net/core/wireless.c:1110:
+static inline struct iw_spy_data * get_spydata(struct net_device *dev)

ERROR:SPACING: space required before the open parenthesis '('
#652: FILE: net/core/wireless.c:1113:
+	if(dev->wireless_data)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#656: FILE: net/core/wireless.c:1117:
+	 * It will be removed in the next version of WE. */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#670: FILE: net/core/wireless.c:1130:
+	struct iw_spy_data *	spydata = get_spydata(dev);

ERROR:SPACING: space required before the open parenthesis '('
#674: FILE: net/core/wireless.c:1134:
+	if(!spydata)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#681: FILE: net/core/wireless.c:1139:
+	 * will NOP. This is OK, as anyway the addresses are changing. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#689: FILE: net/core/wireless.c:1147:
+	 * is temporarily disabled. */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#720: FILE: net/core/wireless.c:1194:
+	struct iw_spy_data *	spydata = get_spydata(dev);

ERROR:SPACING: space required before the open parenthesis '('
#725: FILE: net/core/wireless.c:1199:
+	if(!spydata)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#748: FILE: net/core/wireless.c:1229:
+	struct iw_spy_data *	spydata = get_spydata(dev);

ERROR:SPACING: space required before the open parenthesis '('
#752: FILE: net/core/wireless.c:1233:
+	if(!spydata)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#775: FILE: net/core/wireless.c:1259:
+	struct iw_spy_data *	spydata = get_spydata(dev);

ERROR:SPACING: space required before the open parenthesis '('
#779: FILE: net/core/wireless.c:1263:
+	if(!spydata)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#811: FILE: net/core/wireless.c:1322:
+	struct iw_spy_data *	spydata = get_spydata(dev);

ERROR:SPACING: space required before the open parenthesis '('
#816: FILE: net/core/wireless.c:1327:
+	if(!spydata)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208193.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 18 warnings, 12 checks, 706 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000208193.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
