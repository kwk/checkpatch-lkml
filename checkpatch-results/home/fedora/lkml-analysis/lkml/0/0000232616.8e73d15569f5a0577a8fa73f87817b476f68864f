CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#36: 
Rolf Müller there. I wish to thank Rolf for his very efficient
      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/i2c/chips/pc87360.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: drivers/i2c/chips/pc87360.c:20:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#112: FILE: drivers/i2c/chips/pc87360.c:21:
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#134: FILE: drivers/i2c/chips/pc87360.c:43:
+#include <asm/io.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/i2c/chips/pc87360.c:70:
+MODULE_PARM_DESC(init,
+ "Chip initialization level:\n"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/i2c/chips/pc87360.c:70:
+ "Chip initialization level:\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/i2c/chips/pc87360.c:71:
+ " 0: None\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/i2c/chips/pc87360.c:72:
+ "*1: Forcibly enable internal voltage and temperature channels, except in9\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/i2c/chips/pc87360.c:73:
+ " 2: Forcibly enable all voltage and temperature channels, except in9\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/i2c/chips/pc87360.c:74:
+ " 3: Forcibly enable all voltage and temperature channels, including in9");$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: drivers/i2c/chips/pc87360.c:97:
+	outb(val, sioaddr+1);
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: drivers/i2c/chips/pc87360.c:103:
+	return inb(sioaddr+1);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#200: FILE: drivers/i2c/chips/pc87360.c:109:
+	outb(0x02, sioaddr+1);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: drivers/i2c/chips/pc87360.c:131:
+#define FAN_FROM_REG(val,div)		((val) == 0 ? 0: \
                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#222: FILE: drivers/i2c/chips/pc87360.c:131:
+#define FAN_FROM_REG(val,div)		((val) == 0 ? 0: \
                              		               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#222: FILE: drivers/i2c/chips/pc87360.c:131:
+#define FAN_FROM_REG(val,div)		((val) == 0 ? 0: \
+					 480000 / ((val)*(div)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#223: FILE: drivers/i2c/chips/pc87360.c:132:
+					 480000 / ((val)*(div)))
 					                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: drivers/i2c/chips/pc87360.c:133:
+#define FAN_TO_REG(val,div)		((val) <= 100 ? 0 : \
                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#224: FILE: drivers/i2c/chips/pc87360.c:133:
+#define FAN_TO_REG(val,div)		((val) <= 100 ? 0 : \
+					 480000 / ((val)*(div)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#225: FILE: drivers/i2c/chips/pc87360.c:134:
+					 480000 / ((val)*(div)))
 					                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#226: FILE: drivers/i2c/chips/pc87360.c:135:
+#define FAN_DIV_FROM_REG(val)		(1 << ((val >> 5) & 0x03))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: drivers/i2c/chips/pc87360.c:138:
+#define FAN_CONFIG_MONITOR(val,nr)	(((val) >> (2 + nr * 3)) & 1)
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#229: FILE: drivers/i2c/chips/pc87360.c:138:
+#define FAN_CONFIG_MONITOR(val,nr)	(((val) >> (2 + nr * 3)) & 1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: drivers/i2c/chips/pc87360.c:139:
+#define FAN_CONFIG_CONTROL(val,nr)	(((val) >> (3 + nr * 3)) & 1)
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#230: FILE: drivers/i2c/chips/pc87360.c:139:
+#define FAN_CONFIG_CONTROL(val,nr)	(((val) >> (3 + nr * 3)) & 1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: drivers/i2c/chips/pc87360.c:140:
+#define FAN_CONFIG_INVERT(val,nr)	(((val) >> (4 + nr * 3)) & 1)
                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr' may be better as '(nr)' to avoid precedence issues
#231: FILE: drivers/i2c/chips/pc87360.c:140:
+#define FAN_CONFIG_INVERT(val,nr)	(((val) >> (4 + nr * 3)) & 1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: drivers/i2c/chips/pc87360.c:142:
+#define PWM_FROM_REG(val,inv)		((inv) ? 255 - (val) : (val))
                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#233: FILE: drivers/i2c/chips/pc87360.c:142:
+#define PWM_FROM_REG(val,inv)		((inv) ? 255 - (val) : (val))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: drivers/i2c/chips/pc87360.c:168:
+#define IN_FROM_REG(val,ref)		(((val) * (ref) + 128) / 256)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/i2c/chips/pc87360.c:169:
+#define IN_TO_REG(val,ref)		((val) < 0 ? 0 : \
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#260: FILE: drivers/i2c/chips/pc87360.c:169:
+#define IN_TO_REG(val,ref)		((val) < 0 ? 0 : \
+					 (val)*256 >= (ref)*255 ? 255: \
+					 ((val) * 256 + (ref)/2) / (ref))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ref' - possible side-effects?
#260: FILE: drivers/i2c/chips/pc87360.c:169:
+#define IN_TO_REG(val,ref)		((val) < 0 ? 0 : \
+					 (val)*256 >= (ref)*255 ? 255: \
+					 ((val) * 256 + (ref)/2) / (ref))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#261: FILE: drivers/i2c/chips/pc87360.c:170:
+					 (val)*256 >= (ref)*255 ? 255: \
 					      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#261: FILE: drivers/i2c/chips/pc87360.c:170:
+					 (val)*256 >= (ref)*255 ? 255: \
 					                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#261: FILE: drivers/i2c/chips/pc87360.c:170:
+					 (val)*256 >= (ref)*255 ? 255: \
 					                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#262: FILE: drivers/i2c/chips/pc87360.c:171:
+					 ((val) * 256 + (ref)/2) / (ref))
 					                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#277: FILE: drivers/i2c/chips/pc87360.c:186:
+#define TEMP_TO_REG(val)		((val) < -55000 ? -55 : \
+					 (val) > 127000 ? 127 : \
+					 (val) < 0 ? ((val) - 500) / 1000 : \
+					 ((val) + 500) / 1000)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/i2c/chips/pc87360.c:263:
+static ssize_t set_fan_min(struct device *dev, const char *buf,
+	size_t count, int nr)

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#358: FILE: drivers/i2c/chips/pc87360.c:267:
+	long fan_min = simple_strtol(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#364: FILE: drivers/i2c/chips/pc87360.c:273:
+	while (fan_min > 255
+	    && (data->fan_status[nr] & 0x60) != 0x60) {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#380: FILE: drivers/i2c/chips/pc87360.c:289:
+#define show_and_set_fan(offset) \
+static ssize_t show_fan##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan[offset-1], \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
+} \
+static ssize_t show_fan##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan_min[offset-1], \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
+} \
+static ssize_t show_fan##offset##_div(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1])); \
+} \
+static ssize_t show_fan##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       FAN_STATUS_FROM_REG(data->fan_status[offset-1])); \
+} \
+static ssize_t set_fan##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	return set_fan_min(dev, buf, count, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \
+	show_fan##offset##_input, NULL); \
+static DEVICE_ATTR(fan##offset##_min, S_IWUSR | S_IRUGO, \
+	show_fan##offset##_min, set_fan##offset##_min); \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO, \
+	show_fan##offset##_div, NULL); \
+static DEVICE_ATTR(fan##offset##_status, S_IRUGO, \
+	show_fan##offset##_status, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#380: FILE: drivers/i2c/chips/pc87360.c:289:
+#define show_and_set_fan(offset) \
+static ssize_t show_fan##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan[offset-1], \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
+} \
+static ssize_t show_fan##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan_min[offset-1], \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
+} \
+static ssize_t show_fan##offset##_div(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1])); \
+} \
+static ssize_t show_fan##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       FAN_STATUS_FROM_REG(data->fan_status[offset-1])); \
+} \
+static ssize_t set_fan##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	return set_fan_min(dev, buf, count, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \
+	show_fan##offset##_input, NULL); \
+static DEVICE_ATTR(fan##offset##_min, S_IWUSR | S_IRUGO, \
+	show_fan##offset##_min, set_fan##offset##_min); \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO, \
+	show_fan##offset##_div, NULL); \
+static DEVICE_ATTR(fan##offset##_status, S_IRUGO, \
+	show_fan##offset##_status, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#380: FILE: drivers/i2c/chips/pc87360.c:289:
+#define show_and_set_fan(offset) \
+static ssize_t show_fan##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan[offset-1], \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
+} \
+static ssize_t show_fan##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan_min[offset-1], \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
+} \
+static ssize_t show_fan##offset##_div(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1])); \
+} \
+static ssize_t show_fan##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       FAN_STATUS_FROM_REG(data->fan_status[offset-1])); \
+} \
+static ssize_t set_fan##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	return set_fan_min(dev, buf, count, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \
+	show_fan##offset##_input, NULL); \
+static DEVICE_ATTR(fan##offset##_min, S_IWUSR | S_IRUGO, \
+	show_fan##offset##_min, set_fan##offset##_min); \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO, \
+	show_fan##offset##_div, NULL); \
+static DEVICE_ATTR(fan##offset##_status, S_IRUGO, \
+	show_fan##offset##_status, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#384: FILE: drivers/i2c/chips/pc87360.c:293:
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan[offset-1], \
 	                                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#385: FILE: drivers/i2c/chips/pc87360.c:294:
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
 		                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#390: FILE: drivers/i2c/chips/pc87360.c:299:
+	return sprintf(buf, "%u\n", FAN_FROM_REG(data->fan_min[offset-1], \
 	                                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#391: FILE: drivers/i2c/chips/pc87360.c:300:
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1]))); \
 		                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#397: FILE: drivers/i2c/chips/pc87360.c:306:
+		       FAN_DIV_FROM_REG(data->fan_status[offset-1])); \
 		                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#403: FILE: drivers/i2c/chips/pc87360.c:312:
+		       FAN_STATUS_FROM_REG(data->fan_status[offset-1])); \
 		                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#408: FILE: drivers/i2c/chips/pc87360.c:317:
+	return set_fan_min(dev, buf, count, offset-1); \
 	                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#410: FILE: drivers/i2c/chips/pc87360.c:319:
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#412: FILE: drivers/i2c/chips/pc87360.c:321:
+static DEVICE_ATTR(fan##offset##_min, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#414: FILE: drivers/i2c/chips/pc87360.c:323:
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#416: FILE: drivers/i2c/chips/pc87360.c:325:
+static DEVICE_ATTR(fan##offset##_status, S_IRUGO, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#422: FILE: drivers/i2c/chips/pc87360.c:331:
+#define show_and_set_pwm(offset) \
+static ssize_t show_pwm##offset(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       PWM_FROM_REG(data->pwm[offset-1], \
+				    FAN_CONFIG_INVERT(data->fan_conf, \
+						      offset-1))); \
+} \
+static ssize_t set_pwm##offset(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->pwm[offset-1] = PWM_TO_REG(val, \
+			      FAN_CONFIG_INVERT(data->fan_conf, offset-1)); \
+	pc87360_write_value(data, LD_FAN, NO_BANK, PC87360_REG_PWM(offset-1), \
+			    data->pwm[offset-1]); \
+	return count; \
+} \
+static DEVICE_ATTR(pwm##offset, S_IWUSR | S_IRUGO, \
+	show_pwm##offset, set_pwm##offset);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#422: FILE: drivers/i2c/chips/pc87360.c:331:
+#define show_and_set_pwm(offset) \
+static ssize_t show_pwm##offset(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       PWM_FROM_REG(data->pwm[offset-1], \
+				    FAN_CONFIG_INVERT(data->fan_conf, \
+						      offset-1))); \
+} \
+static ssize_t set_pwm##offset(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->pwm[offset-1] = PWM_TO_REG(val, \
+			      FAN_CONFIG_INVERT(data->fan_conf, offset-1)); \
+	pc87360_write_value(data, LD_FAN, NO_BANK, PC87360_REG_PWM(offset-1), \
+			    data->pwm[offset-1]); \
+	return count; \
+} \
+static DEVICE_ATTR(pwm##offset, S_IWUSR | S_IRUGO, \
+	show_pwm##offset, set_pwm##offset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#422: FILE: drivers/i2c/chips/pc87360.c:331:
+#define show_and_set_pwm(offset) \
+static ssize_t show_pwm##offset(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", \
+		       PWM_FROM_REG(data->pwm[offset-1], \
+				    FAN_CONFIG_INVERT(data->fan_conf, \
+						      offset-1))); \
+} \
+static ssize_t set_pwm##offset(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->pwm[offset-1] = PWM_TO_REG(val, \
+			      FAN_CONFIG_INVERT(data->fan_conf, offset-1)); \
+	pc87360_write_value(data, LD_FAN, NO_BANK, PC87360_REG_PWM(offset-1), \
+			    data->pwm[offset-1]); \
+	return count; \
+} \
+static DEVICE_ATTR(pwm##offset, S_IWUSR | S_IRUGO, \
+	show_pwm##offset, set_pwm##offset);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#427: FILE: drivers/i2c/chips/pc87360.c:336:
+		       PWM_FROM_REG(data->pwm[offset-1], \
 		                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#429: FILE: drivers/i2c/chips/pc87360.c:338:
+						      offset-1))); \
 						            ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#436: FILE: drivers/i2c/chips/pc87360.c:345:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#437: FILE: drivers/i2c/chips/pc87360.c:346:
+	data->pwm[offset-1] = PWM_TO_REG(val, \
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#438: FILE: drivers/i2c/chips/pc87360.c:347:
+			      FAN_CONFIG_INVERT(data->fan_conf, offset-1)); \
 			                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#439: FILE: drivers/i2c/chips/pc87360.c:348:
+	pc87360_write_value(data, LD_FAN, NO_BANK, PC87360_REG_PWM(offset-1), \
 	                                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#440: FILE: drivers/i2c/chips/pc87360.c:349:
+			    data->pwm[offset-1]); \
 			                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#443: FILE: drivers/i2c/chips/pc87360.c:352:
+static DEVICE_ATTR(pwm##offset, S_IWUSR | S_IRUGO, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#449: FILE: drivers/i2c/chips/pc87360.c:358:
+#define show_and_set_in(offset) \
+static ssize_t show_in##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in[offset], \
+		       data->in_vref)); \
+} \
+static ssize_t show_in##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_min[offset], \
+		       data->in_vref)); \
+} \
+static ssize_t show_in##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_max[offset], \
+		       data->in_vref)); \
+} \
+static ssize_t show_in##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", data->in_status[offset]); \
+} \
+static ssize_t set_in##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_min[offset] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset, PC87365_REG_IN_MIN, \
+			    data->in_min[offset]); \
+	return count; \
+} \
+static ssize_t set_in##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_max[offset] = IN_TO_REG(val, \
+			       data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset, PC87365_REG_IN_MAX, \
+			    data->in_max[offset]); \
+	return count; \
+} \
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, \
+	show_in##offset##_input, NULL); \
+static DEVICE_ATTR(in##offset##_min, S_IWUSR | S_IRUGO, \
+	show_in##offset##_min, set_in##offset##_min); \
+static DEVICE_ATTR(in##offset##_max, S_IWUSR | S_IRUGO, \
+	show_in##offset##_max, set_in##offset##_max); \
+static DEVICE_ATTR(in##offset##_status, S_IRUGO, \
+	show_in##offset##_status, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#449: FILE: drivers/i2c/chips/pc87360.c:358:
+#define show_and_set_in(offset) \
+static ssize_t show_in##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in[offset], \
+		       data->in_vref)); \
+} \
+static ssize_t show_in##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_min[offset], \
+		       data->in_vref)); \
+} \
+static ssize_t show_in##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_max[offset], \
+		       data->in_vref)); \
+} \
+static ssize_t show_in##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", data->in_status[offset]); \
+} \
+static ssize_t set_in##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_min[offset] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset, PC87365_REG_IN_MIN, \
+			    data->in_min[offset]); \
+	return count; \
+} \
+static ssize_t set_in##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_max[offset] = IN_TO_REG(val, \
+			       data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset, PC87365_REG_IN_MAX, \
+			    data->in_max[offset]); \
+	return count; \
+} \
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, \
+	show_in##offset##_input, NULL); \
+static DEVICE_ATTR(in##offset##_min, S_IWUSR | S_IRUGO, \
+	show_in##offset##_min, set_in##offset##_min); \
+static DEVICE_ATTR(in##offset##_max, S_IWUSR | S_IRUGO, \
+	show_in##offset##_max, set_in##offset##_max); \
+static DEVICE_ATTR(in##offset##_status, S_IRUGO, \
+	show_in##offset##_status, NULL);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#478: FILE: drivers/i2c/chips/pc87360.c:387:
+	long val = simple_strtol(buf, NULL, 10); \

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#489: FILE: drivers/i2c/chips/pc87360.c:398:
+	long val = simple_strtol(buf, NULL, 10); \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#496: FILE: drivers/i2c/chips/pc87360.c:405:
+static DEVICE_ATTR(in##offset##_input, S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#498: FILE: drivers/i2c/chips/pc87360.c:407:
+static DEVICE_ATTR(in##offset##_min, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#500: FILE: drivers/i2c/chips/pc87360.c:409:
+static DEVICE_ATTR(in##offset##_max, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#502: FILE: drivers/i2c/chips/pc87360.c:411:
+static DEVICE_ATTR(in##offset##_status, S_IRUGO, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#516: FILE: drivers/i2c/chips/pc87360.c:425:
+#define show_and_set_therm(offset) \
+static ssize_t show_temp##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_min[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_max[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_crit(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_crit[offset-4], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", data->in_status[offset+7]); \
+} \
+static ssize_t set_temp##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_min[offset+7] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MIN, \
+			    data->in_min[offset+7]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_max[offset+7] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MAX, \
+			    data->in_max[offset+7]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_crit(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_crit[offset-4] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_CRIT, \
+			    data->in_crit[offset-4]); \
+	return count; \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+	show_temp##offset##_input, NULL); \
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_min, set_temp##offset##_min); \
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_max, set_temp##offset##_max); \
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_crit, set_temp##offset##_crit); \
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \
+	show_temp##offset##_status, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#516: FILE: drivers/i2c/chips/pc87360.c:425:
+#define show_and_set_therm(offset) \
+static ssize_t show_temp##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_min[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_max[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_crit(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_crit[offset-4], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", data->in_status[offset+7]); \
+} \
+static ssize_t set_temp##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_min[offset+7] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MIN, \
+			    data->in_min[offset+7]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_max[offset+7] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MAX, \
+			    data->in_max[offset+7]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_crit(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_crit[offset-4] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_CRIT, \
+			    data->in_crit[offset-4]); \
+	return count; \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+	show_temp##offset##_input, NULL); \
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_min, set_temp##offset##_min); \
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_max, set_temp##offset##_max); \
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_crit, set_temp##offset##_crit); \
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \
+	show_temp##offset##_status, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#516: FILE: drivers/i2c/chips/pc87360.c:425:
+#define show_and_set_therm(offset) \
+static ssize_t show_temp##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_min[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_max[offset+7], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_crit(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_crit[offset-4], \
+		       data->in_vref)); \
+} \
+static ssize_t show_temp##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%u\n", data->in_status[offset+7]); \
+} \
+static ssize_t set_temp##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_min[offset+7] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MIN, \
+			    data->in_min[offset+7]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_max[offset+7] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MAX, \
+			    data->in_max[offset+7]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_crit(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->in_crit[offset-4] = IN_TO_REG(val, data->in_vref); \
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_CRIT, \
+			    data->in_crit[offset-4]); \
+	return count; \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+	show_temp##offset##_input, NULL); \
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_min, set_temp##offset##_min); \
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_max, set_temp##offset##_max); \
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_crit, set_temp##offset##_crit); \
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \
+	show_temp##offset##_status, NULL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#520: FILE: drivers/i2c/chips/pc87360.c:429:
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in[offset+7], \
 	                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#526: FILE: drivers/i2c/chips/pc87360.c:435:
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_min[offset+7], \
 	                                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#532: FILE: drivers/i2c/chips/pc87360.c:441:
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_max[offset+7], \
 	                                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#538: FILE: drivers/i2c/chips/pc87360.c:447:
+	return sprintf(buf, "%u\n", IN_FROM_REG(data->in_crit[offset-4], \
 	                                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#544: FILE: drivers/i2c/chips/pc87360.c:453:
+	return sprintf(buf, "%u\n", data->in_status[offset+7]); \
 	                                                  ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#551: FILE: drivers/i2c/chips/pc87360.c:460:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#552: FILE: drivers/i2c/chips/pc87360.c:461:
+	data->in_min[offset+7] = IN_TO_REG(val, data->in_vref); \
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#553: FILE: drivers/i2c/chips/pc87360.c:462:
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MIN, \
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#554: FILE: drivers/i2c/chips/pc87360.c:463:
+			    data->in_min[offset+7]); \
 			                       ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#562: FILE: drivers/i2c/chips/pc87360.c:471:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#563: FILE: drivers/i2c/chips/pc87360.c:472:
+	data->in_max[offset+7] = IN_TO_REG(val, data->in_vref); \
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#564: FILE: drivers/i2c/chips/pc87360.c:473:
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_MAX, \
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#565: FILE: drivers/i2c/chips/pc87360.c:474:
+			    data->in_max[offset+7]); \
 			                       ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#573: FILE: drivers/i2c/chips/pc87360.c:482:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#574: FILE: drivers/i2c/chips/pc87360.c:483:
+	data->in_crit[offset-4] = IN_TO_REG(val, data->in_vref); \
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#575: FILE: drivers/i2c/chips/pc87360.c:484:
+	pc87360_write_value(data, LD_IN, offset+7, PC87365_REG_TEMP_CRIT, \
 	                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#576: FILE: drivers/i2c/chips/pc87360.c:485:
+			    data->in_crit[offset-4]); \
 			                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#579: FILE: drivers/i2c/chips/pc87360.c:488:
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#581: FILE: drivers/i2c/chips/pc87360.c:490:
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#583: FILE: drivers/i2c/chips/pc87360.c:492:
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#585: FILE: drivers/i2c/chips/pc87360.c:494:
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#587: FILE: drivers/i2c/chips/pc87360.c:496:
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \

WARNING:LINE_SPACING: Missing a blank line after declarations
#596: FILE: drivers/i2c/chips/pc87360.c:505:
+	struct pc87360_data *data = pc87360_update_device(dev);
+	return sprintf(buf, "%u\n", vid_from_reg(data->vid, data->vrm));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vid' to 'cpu0_vid_show'
#597: FILE: drivers/i2c/chips/pc87360.c:506:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#598: FILE: drivers/i2c/chips/pc87360.c:507:
+static DEVICE_ATTR(cpu0_vid, S_IRUGO, show_vid, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#603: FILE: drivers/i2c/chips/pc87360.c:512:
+	struct pc87360_data *data = pc87360_update_device(dev);
+	return sprintf(buf, "%u\n", data->vrm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#605: FILE: drivers/i2c/chips/pc87360.c:514:
+}
+static ssize_t set_vrm(struct device *dev, const char *buf, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: drivers/i2c/chips/pc87360.c:518:
+	struct pc87360_data *data = i2c_get_clientdata(client);
+	data->vrm = simple_strtoul(buf, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#609: FILE: drivers/i2c/chips/pc87360.c:518:
+	data->vrm = simple_strtoul(buf, NULL, 10);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_vrm' to 'vrm_show' 'set_vrm' to 'vrm_store'
#611: FILE: drivers/i2c/chips/pc87360.c:520:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#612: FILE: drivers/i2c/chips/pc87360.c:521:
+static DEVICE_ATTR(vrm, S_IRUGO | S_IWUSR, show_vrm, set_vrm);

WARNING:LINE_SPACING: Missing a blank line after declarations
#617: FILE: drivers/i2c/chips/pc87360.c:526:
+	struct pc87360_data *data = pc87360_update_device(dev);
+	return sprintf(buf, "%u\n", data->in_alarms);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_in_alarms' to 'alarms_in_show'
#618: FILE: drivers/i2c/chips/pc87360.c:527:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#619: FILE: drivers/i2c/chips/pc87360.c:528:
+static DEVICE_ATTR(alarms_in, S_IRUGO, show_in_alarms, NULL);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#621: FILE: drivers/i2c/chips/pc87360.c:530:
+#define show_and_set_temp(offset) \
+static ssize_t show_temp##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp[offset-1])); \
+} \
+static ssize_t show_temp##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_min[offset-1])); \
+} \
+static ssize_t show_temp##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_max[offset-1])); \
+}\
+static ssize_t show_temp##offset##_crit(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_crit[offset-1])); \
+}\
+static ssize_t show_temp##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", data->temp_status[offset-1]); \
+}\
+static ssize_t set_temp##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_min[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MIN, \
+			    data->temp_min[offset-1]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_max[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MAX, \
+			    data->temp_max[offset-1]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_crit(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_crit[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_CRIT, \
+			    data->temp_crit[offset-1]); \
+	return count; \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+	show_temp##offset##_input, NULL); \
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_min, set_temp##offset##_min); \
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_max, set_temp##offset##_max); \
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_crit, set_temp##offset##_crit); \
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \
+	show_temp##offset##_status, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#621: FILE: drivers/i2c/chips/pc87360.c:530:
+#define show_and_set_temp(offset) \
+static ssize_t show_temp##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp[offset-1])); \
+} \
+static ssize_t show_temp##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_min[offset-1])); \
+} \
+static ssize_t show_temp##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_max[offset-1])); \
+}\
+static ssize_t show_temp##offset##_crit(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_crit[offset-1])); \
+}\
+static ssize_t show_temp##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", data->temp_status[offset-1]); \
+}\
+static ssize_t set_temp##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_min[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MIN, \
+			    data->temp_min[offset-1]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_max[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MAX, \
+			    data->temp_max[offset-1]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_crit(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_crit[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_CRIT, \
+			    data->temp_crit[offset-1]); \
+	return count; \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+	show_temp##offset##_input, NULL); \
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_min, set_temp##offset##_min); \
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_max, set_temp##offset##_max); \
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_crit, set_temp##offset##_crit); \
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \
+	show_temp##offset##_status, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#621: FILE: drivers/i2c/chips/pc87360.c:530:
+#define show_and_set_temp(offset) \
+static ssize_t show_temp##offset##_input(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp[offset-1])); \
+} \
+static ssize_t show_temp##offset##_min(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_min[offset-1])); \
+} \
+static ssize_t show_temp##offset##_max(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_max[offset-1])); \
+}\
+static ssize_t show_temp##offset##_crit(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_crit[offset-1])); \
+}\
+static ssize_t show_temp##offset##_status(struct device *dev, char *buf) \
+{ \
+	struct pc87360_data *data = pc87360_update_device(dev); \
+	return sprintf(buf, "%d\n", data->temp_status[offset-1]); \
+}\
+static ssize_t set_temp##offset##_min(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_min[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MIN, \
+			    data->temp_min[offset-1]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_max(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_max[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MAX, \
+			    data->temp_max[offset-1]); \
+	return count; \
+} \
+static ssize_t set_temp##offset##_crit(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct pc87360_data *data = i2c_get_clientdata(client); \
+	long val = simple_strtol(buf, NULL, 10); \
+	data->temp_crit[offset-1] = TEMP_TO_REG(val); \
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_CRIT, \
+			    data->temp_crit[offset-1]); \
+	return count; \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+	show_temp##offset##_input, NULL); \
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_min, set_temp##offset##_min); \
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_max, set_temp##offset##_max); \
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \
+	show_temp##offset##_crit, set_temp##offset##_crit); \
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \
+	show_temp##offset##_status, NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#625: FILE: drivers/i2c/chips/pc87360.c:534:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp[offset-1])); \
 	                                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#630: FILE: drivers/i2c/chips/pc87360.c:539:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_min[offset-1])); \
 	                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#635: FILE: drivers/i2c/chips/pc87360.c:544:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_max[offset-1])); \
 	                                                               ^

ERROR:SPACING: space required after that close brace '}'
#636: FILE: drivers/i2c/chips/pc87360.c:545:
+}\

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#640: FILE: drivers/i2c/chips/pc87360.c:549:
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->temp_crit[offset-1])); \
 	                                                                ^

ERROR:SPACING: space required after that close brace '}'
#641: FILE: drivers/i2c/chips/pc87360.c:550:
+}\

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#645: FILE: drivers/i2c/chips/pc87360.c:554:
+	return sprintf(buf, "%d\n", data->temp_status[offset-1]); \
 	                                                    ^

ERROR:SPACING: space required after that close brace '}'
#646: FILE: drivers/i2c/chips/pc87360.c:555:
+}\

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#652: FILE: drivers/i2c/chips/pc87360.c:561:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#653: FILE: drivers/i2c/chips/pc87360.c:562:
+	data->temp_min[offset-1] = TEMP_TO_REG(val); \
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#654: FILE: drivers/i2c/chips/pc87360.c:563:
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MIN, \
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#655: FILE: drivers/i2c/chips/pc87360.c:564:
+			    data->temp_min[offset-1]); \
 			                         ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#663: FILE: drivers/i2c/chips/pc87360.c:572:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#664: FILE: drivers/i2c/chips/pc87360.c:573:
+	data->temp_max[offset-1] = TEMP_TO_REG(val); \
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#665: FILE: drivers/i2c/chips/pc87360.c:574:
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_MAX, \
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#666: FILE: drivers/i2c/chips/pc87360.c:575:
+			    data->temp_max[offset-1]); \
 			                         ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#674: FILE: drivers/i2c/chips/pc87360.c:583:
+	long val = simple_strtol(buf, NULL, 10); \

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#675: FILE: drivers/i2c/chips/pc87360.c:584:
+	data->temp_crit[offset-1] = TEMP_TO_REG(val); \
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#676: FILE: drivers/i2c/chips/pc87360.c:585:
+	pc87360_write_value(data, LD_TEMP, offset-1, PC87365_REG_TEMP_CRIT, \
 	                                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#677: FILE: drivers/i2c/chips/pc87360.c:586:
+			    data->temp_crit[offset-1]); \
 			                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#680: FILE: drivers/i2c/chips/pc87360.c:589:
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#682: FILE: drivers/i2c/chips/pc87360.c:591:
+static DEVICE_ATTR(temp##offset##_min, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#684: FILE: drivers/i2c/chips/pc87360.c:593:
+static DEVICE_ATTR(temp##offset##_max, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#686: FILE: drivers/i2c/chips/pc87360.c:595:
+static DEVICE_ATTR(temp##offset##_crit, S_IWUSR | S_IRUGO, \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#688: FILE: drivers/i2c/chips/pc87360.c:597:
+static DEVICE_ATTR(temp##offset##_status, S_IRUGO, \

WARNING:LINE_SPACING: Missing a blank line after declarations
#697: FILE: drivers/i2c/chips/pc87360.c:606:
+	struct pc87360_data *data = pc87360_update_device(dev);
+	return sprintf(buf, "%u\n", data->temp_alarms);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_alarms' to 'alarms_temp_show'
#698: FILE: drivers/i2c/chips/pc87360.c:607:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#699: FILE: drivers/i2c/chips/pc87360.c:608:
+static DEVICE_ATTR(alarms_temp, S_IRUGO, show_temp_alarms, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#743: FILE: drivers/i2c/chips/pc87360.c:652:
+			printk(KERN_INFO "pc87360: Device 0x%02x not "

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: drivers/i2c/chips/pc87360.c:653:
+			printk(KERN_INFO "pc87360: Device 0x%02x not "
+			       "activated\n", logdev[i]);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#751: FILE: drivers/i2c/chips/pc87360.c:660:
+			printk(KERN_INFO "pc87360: Base address not set for "

WARNING:SPLIT_STRING: quoted string split across lines
#752: FILE: drivers/i2c/chips/pc87360.c:661:
+			printk(KERN_INFO "pc87360: Base address not set for "
+			       "device 0x%02x\n", logdev[i]);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#758: FILE: drivers/i2c/chips/pc87360.c:667:
+		if (i==0) { /* Fans */
 		     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#763: FILE: drivers/i2c/chips/pc87360.c:672:
+			printk(KERN_DEBUG "pc87360: Fan 1: mon=%d "

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#764: FILE: drivers/i2c/chips/pc87360.c:673:
+			       "ctrl=%d inv=%d\n", (confreg[0]>>2)&1,
 			                                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#764: FILE: drivers/i2c/chips/pc87360.c:673:
+			       "ctrl=%d inv=%d\n", (confreg[0]>>2)&1,
 			                                          ^

WARNING:SPLIT_STRING: quoted string split across lines
#764: FILE: drivers/i2c/chips/pc87360.c:673:
+			printk(KERN_DEBUG "pc87360: Fan 1: mon=%d "
+			       "ctrl=%d inv=%d\n", (confreg[0]>>2)&1,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#765: FILE: drivers/i2c/chips/pc87360.c:674:
+			       (confreg[0]>>3)&1, (confreg[0]>>4)&1);
 			                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#765: FILE: drivers/i2c/chips/pc87360.c:674:
+			       (confreg[0]>>3)&1, (confreg[0]>>4)&1);
 			                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#765: FILE: drivers/i2c/chips/pc87360.c:674:
+			       (confreg[0]>>3)&1, (confreg[0]>>4)&1);
 			                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#765: FILE: drivers/i2c/chips/pc87360.c:674:
+			       (confreg[0]>>3)&1, (confreg[0]>>4)&1);
 			                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#766: FILE: drivers/i2c/chips/pc87360.c:675:
+			printk(KERN_DEBUG "pc87360: Fan 2: mon=%d "

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#767: FILE: drivers/i2c/chips/pc87360.c:676:
+			       "ctrl=%d inv=%d\n", (confreg[0]>>5)&1,
 			                                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#767: FILE: drivers/i2c/chips/pc87360.c:676:
+			       "ctrl=%d inv=%d\n", (confreg[0]>>5)&1,
 			                                          ^

WARNING:SPLIT_STRING: quoted string split across lines
#767: FILE: drivers/i2c/chips/pc87360.c:676:
+			printk(KERN_DEBUG "pc87360: Fan 2: mon=%d "
+			       "ctrl=%d inv=%d\n", (confreg[0]>>5)&1,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#768: FILE: drivers/i2c/chips/pc87360.c:677:
+			       (confreg[0]>>6)&1, (confreg[0]>>7)&1);
 			                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#768: FILE: drivers/i2c/chips/pc87360.c:677:
+			       (confreg[0]>>6)&1, (confreg[0]>>7)&1);
 			                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#768: FILE: drivers/i2c/chips/pc87360.c:677:
+			       (confreg[0]>>6)&1, (confreg[0]>>7)&1);
 			                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#768: FILE: drivers/i2c/chips/pc87360.c:677:
+			       (confreg[0]>>6)&1, (confreg[0]>>7)&1);
 			                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#769: FILE: drivers/i2c/chips/pc87360.c:678:
+			printk(KERN_DEBUG "pc87360: Fan 3: mon=%d "

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#770: FILE: drivers/i2c/chips/pc87360.c:679:
+			       "ctrl=%d inv=%d\n", confreg[1]&1,
 			                                     ^

WARNING:SPLIT_STRING: quoted string split across lines
#770: FILE: drivers/i2c/chips/pc87360.c:679:
+			printk(KERN_DEBUG "pc87360: Fan 3: mon=%d "
+			       "ctrl=%d inv=%d\n", confreg[1]&1,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#771: FILE: drivers/i2c/chips/pc87360.c:680:
+			       (confreg[1]>>1)&1, (confreg[1]>>2)&1);
 			                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#771: FILE: drivers/i2c/chips/pc87360.c:680:
+			       (confreg[1]>>1)&1, (confreg[1]>>2)&1);
 			                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#771: FILE: drivers/i2c/chips/pc87360.c:680:
+			       (confreg[1]>>1)&1, (confreg[1]>>2)&1);
 			                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#771: FILE: drivers/i2c/chips/pc87360.c:680:
+			       (confreg[1]>>1)&1, (confreg[1]>>2)&1);
 			                                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#773: FILE: drivers/i2c/chips/pc87360.c:682:
+		} else if (i==1) { /* Voltages */
 		            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#777: FILE: drivers/i2c/chips/pc87360.c:686:
+				/* These registers are not logical-device
+				   specific, just that we won't need them if

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#778: FILE: drivers/i2c/chips/pc87360.c:687:
+				   we don't use the VLM device */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#783: FILE: drivers/i2c/chips/pc87360.c:692:
+					printk(KERN_INFO "pc87360: Using "

WARNING:SPLIT_STRING: quoted string split across lines
#784: FILE: drivers/i2c/chips/pc87360.c:693:
+					printk(KERN_INFO "pc87360: Using "
+					       "thermistors for temperature "

WARNING:SPLIT_STRING: quoted string split across lines
#785: FILE: drivers/i2c/chips/pc87360.c:694:
+					       "thermistors for temperature "
+					       "monitoring\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#788: FILE: drivers/i2c/chips/pc87360.c:697:
+					printk(KERN_INFO "pc87360: VID "

WARNING:SPLIT_STRING: quoted string split across lines
#789: FILE: drivers/i2c/chips/pc87360.c:698:
+					printk(KERN_INFO "pc87360: VID "
+					       "inputs routed (mode %u)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#801: FILE: drivers/i2c/chips/pc87360.c:710:
+/* We don't really care about the address.
+   Read from extra_isa instead. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#801: FILE: drivers/i2c/chips/pc87360.c:710:
+   Read from extra_isa instead. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#814: FILE: drivers/i2c/chips/pc87360.c:723:
+	if (!(data = kmalloc(sizeof(struct pc87360_data), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct pc87360_data)...)
#814: FILE: drivers/i2c/chips/pc87360.c:723:
+	if (!(data = kmalloc(sizeof(struct pc87360_data), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#857: FILE: drivers/i2c/chips/pc87360.c:766:
+		if (((data->address[i] = extra_isa[i]))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#858: FILE: drivers/i2c/chips/pc87360.c:767:
+		if (((data->address[i] = extra_isa[i]))
+		 && !request_region(extra_isa[i], PC87360_EXTENT, "pc87360")) {

WARNING:SPLIT_STRING: quoted string split across lines
#860: FILE: drivers/i2c/chips/pc87360.c:769:
+			dev_err(&new_client->dev, "Region 0x%x-0x%x already "
+				"in use!\n", extra_isa[i],

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#861: FILE: drivers/i2c/chips/pc87360.c:770:
+				extra_isa[i]+PC87360_EXTENT-1);
 				            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#861: FILE: drivers/i2c/chips/pc87360.c:770:
+				extra_isa[i]+PC87360_EXTENT-1);
 				                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#873: FILE: drivers/i2c/chips/pc87360.c:782:
+	if ((err = i2c_attach_client(new_client)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#877: FILE: drivers/i2c/chips/pc87360.c:786:
+	/* Use the correct reference voltage
+	   Unless both the VLM and the TMS logical devices agree to

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#878: FILE: drivers/i2c/chips/pc87360.c:787:
+	   use an external Vref, the internal one is used. */

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#886: FILE: drivers/i2c/chips/pc87360.c:795:
+		data->in_vref = (i&0x02) ? 3025 : 2966;
 		                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#888: FILE: drivers/i2c/chips/pc87360.c:797:
+			(i&0x02) ? "external" : "internal");
 			  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: drivers/i2c/chips/pc87360.c:806:
+		data->fan_status[i] = pc87360_read_value(data, LD_FAN,
+				      NO_BANK, PC87360_REG_FAN_STATUS(i));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1027: FILE: drivers/i2c/chips/pc87360.c:936:
+		if (data->address[i]) {
+			release_region(data->address[i], PC87360_EXTENT);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1041: FILE: drivers/i2c/chips/pc87360.c:950:
+	if ((i = i2c_detach_client(client))) {

WARNING:SPLIT_STRING: quoted string split across lines
#1043: FILE: drivers/i2c/chips/pc87360.c:952:
+		dev_err(&client->dev, "Client deregistration failed, "
+			"client not detached.\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1048: FILE: drivers/i2c/chips/pc87360.c:957:
+		if (data->address[i]) {
+			release_region(data->address[i], PC87360_EXTENT);
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1058: FILE: drivers/i2c/chips/pc87360.c:967:
+/* ldi is the logical device index
+   bank is for voltages and temperatures only */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1058: FILE: drivers/i2c/chips/pc87360.c:967:
+   bank is for voltages and temperatures only */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->lock
#1064: FILE: drivers/i2c/chips/pc87360.c:973:
+	down(&(data->lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->lock
#1068: FILE: drivers/i2c/chips/pc87360.c:977:
+	up(&(data->lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->lock
#1076: FILE: drivers/i2c/chips/pc87360.c:985:
+	down(&(data->lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->lock
#1080: FILE: drivers/i2c/chips/pc87360.c:989:
+	up(&(data->lock));

WARNING:SPLIT_STRING: quoted string split across lines
#1095: FILE: drivers/i2c/chips/pc87360.c:1004:
+		dev_info(&client->dev, "VLM conversion set to"
+			 "1s period, 160us delay\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#1095: FILE: drivers/i2c/chips/pc87360.c:1004:
+		dev_info(&client->dev, "VLM conversion set to"
+			 "1s period, 160us delay\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1102: FILE: drivers/i2c/chips/pc87360.c:1011:
+	for (i=0; i<nr; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1102: FILE: drivers/i2c/chips/pc87360.c:1011:
+	for (i=0; i<nr; i++) {
 	           ^

WARNING:SPLIT_STRING: quoted string split across lines
#1109: FILE: drivers/i2c/chips/pc87360.c:1018:
+				dev_dbg(&client->dev, "Forcibly "
+					"enabling in%d\n", i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1118: FILE: drivers/i2c/chips/pc87360.c:1027:
+	/* We can't blindly trust the Super-I/O space configuration bit,
+	   most BIOS won't set it properly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1118: FILE: drivers/i2c/chips/pc87360.c:1027:
+	   most BIOS won't set it properly */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1119: FILE: drivers/i2c/chips/pc87360.c:1028:
+	for (i=11; i<data->innr; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1119: FILE: drivers/i2c/chips/pc87360.c:1028:
+	for (i=11; i<data->innr; i++) {
 	            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1126: FILE: drivers/i2c/chips/pc87360.c:1035:
+	for (; i<data->tempnr; i++) {
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1133: FILE: drivers/i2c/chips/pc87360.c:1042:
+					"enabling temp%d\n", i+1);
 					                      ^

WARNING:SPLIT_STRING: quoted string split across lines
#1133: FILE: drivers/i2c/chips/pc87360.c:1042:
+				dev_dbg(&client->dev, "Forcibly "
+					"enabling temp%d\n", i+1);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1142: FILE: drivers/i2c/chips/pc87360.c:1051:
+		for (i=11; i<data->innr; i++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1142: FILE: drivers/i2c/chips/pc87360.c:1051:
+		for (i=11; i<data->innr; i++) {
 		            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1145: FILE: drivers/i2c/chips/pc87360.c:1054:
+				/* The pin may already be used by thermal
+				   diodes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1145: FILE: drivers/i2c/chips/pc87360.c:1054:
+				   diodes */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1147: FILE: drivers/i2c/chips/pc87360.c:1056:
+				reg = pc87360_read_value(data, LD_TEMP,
+				      (i-11)/2, PC87365_REG_TEMP_STATUS);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1147: FILE: drivers/i2c/chips/pc87360.c:1056:
+				      (i-11)/2, PC87365_REG_TEMP_STATUS);
 				        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1147: FILE: drivers/i2c/chips/pc87360.c:1056:
+				      (i-11)/2, PC87365_REG_TEMP_STATUS);
 				            ^

WARNING:SPLIT_STRING: quoted string split across lines
#1150: FILE: drivers/i2c/chips/pc87360.c:1059:
+					dev_dbg(&client->dev, "Skipping "
+						"temp%d, pin already in use "

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1151: FILE: drivers/i2c/chips/pc87360.c:1060:
+						"by temp%d\n", i-7, (i-11)/2);
 						                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1151: FILE: drivers/i2c/chips/pc87360.c:1060:
+						"by temp%d\n", i-7, (i-11)/2);
 						                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1151: FILE: drivers/i2c/chips/pc87360.c:1060:
+						"by temp%d\n", i-7, (i-11)/2);
 						                          ^

WARNING:SPLIT_STRING: quoted string split across lines
#1151: FILE: drivers/i2c/chips/pc87360.c:1060:
+						"temp%d, pin already in use "
+						"by temp%d\n", i-7, (i-11)/2);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1160: FILE: drivers/i2c/chips/pc87360.c:1069:
+						"enabling temp%d\n", i-7);
 						                      ^

WARNING:SPLIT_STRING: quoted string split across lines
#1160: FILE: drivers/i2c/chips/pc87360.c:1069:
+					dev_dbg(&client->dev, "Forcibly "
+						"enabling temp%d\n", i-7);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: drivers/i2c/chips/pc87360.c:1071:
+					pc87360_write_value(data, LD_IN, i,
+						PC87365_REG_TEMP_STATUS,

WARNING:SPLIT_STRING: quoted string split across lines
#1174: FILE: drivers/i2c/chips/pc87360.c:1083:
+			dev_dbg(&client->dev, "Forcibly "
+				"enabling monitoring (VLM)\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1186: FILE: drivers/i2c/chips/pc87360.c:1095:
+			dev_dbg(&client->dev, "Forcibly enabling "
+				"monitoring (TMS)\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1196: FILE: drivers/i2c/chips/pc87360.c:1105:
+			/* We voluntarily omit the bank here, in case the
+			   sequence itself matters. It shouldn't be a problem,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1198: FILE: drivers/i2c/chips/pc87360.c:1107:
+			   device at that point. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->fan[nr] >= 224'
#1213: FILE: drivers/i2c/chips/pc87360.c:1122:
+	if ((data->fan_status[nr] & 0x04) /* overflow flag */
+	 || (data->fan[nr] >= 224)) { /* next to overflow */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1214: FILE: drivers/i2c/chips/pc87360.c:1123:
+	if ((data->fan_status[nr] & 0x04) /* overflow flag */
+	 || (data->fan[nr] >= 224)) { /* next to overflow */

WARNING:SPLIT_STRING: quoted string split across lines
#1220: FILE: drivers/i2c/chips/pc87360.c:1129:
+			dev_dbg(&client->dev, "Increasing "
+				"clock divider to %d for fan %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1221: FILE: drivers/i2c/chips/pc87360.c:1130:
+				FAN_DIV_FROM_REG(data->fan_status[nr]), nr+1);
 				                                          ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1226: FILE: drivers/i2c/chips/pc87360.c:1135:
+		while (!(data->fan_min[nr] & 0x80) /* min "nails" divider */
+		 && data->fan[nr] < 85 /* bad accuracy */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1227: FILE: drivers/i2c/chips/pc87360.c:1136:
+		 && data->fan[nr] < 85 /* bad accuracy */
+		 && (data->fan_status[nr] & 0x60) != 0x00) {

WARNING:SPLIT_STRING: quoted string split across lines
#1232: FILE: drivers/i2c/chips/pc87360.c:1141:
+			dev_dbg(&client->dev, "Decreasing "
+				"clock divider to %d for fan %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1234: FILE: drivers/i2c/chips/pc87360.c:1143:
+				nr+1);
 				  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#1254: FILE: drivers/i2c/chips/pc87360.c:1163:
+	if ((jiffies - data->last_updated > HZ * 2)
+	 || (jiffies < data->last_updated) || !data->valid) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1255: FILE: drivers/i2c/chips/pc87360.c:1164:
+	if ((jiffies - data->last_updated > HZ * 2)
+	 || (jiffies < data->last_updated) || !data->valid) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1255: FILE: drivers/i2c/chips/pc87360.c:1164:
+	 || (jiffies < data->last_updated) || !data->valid) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: drivers/i2c/chips/pc87360.c:1172:
+					pc87360_read_value(data, LD_FAN,
+					NO_BANK, PC87360_REG_FAN_STATUS(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1265: FILE: drivers/i2c/chips/pc87360.c:1174:
+				data->fan[i] = pc87360_read_value(data, LD_FAN,
+					       NO_BANK, PC87360_REG_FAN(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: drivers/i2c/chips/pc87360.c:1176:
+				data->fan_min[i] = pc87360_read_value(data,
+						   LD_FAN, NO_BANK,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1278: FILE: drivers/i2c/chips/pc87360.c:1187:
+				data->pwm[i] = pc87360_read_value(data, LD_FAN,
+					       NO_BANK, PC87360_REG_PWM(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1284: FILE: drivers/i2c/chips/pc87360.c:1193:
+			data->in_status[i] = pc87360_read_value(data, LD_IN, i,
+					     PC87365_REG_IN_STATUS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: drivers/i2c/chips/pc87360.c:1200:
+				data->in[i] = pc87360_read_value(data, LD_IN,
+					      i, PC87365_REG_IN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/i2c/chips/pc87360.c:1204:
+				data->in_min[i] = pc87360_read_value(data,
+						  LD_IN, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: drivers/i2c/chips/pc87360.c:1207:
+				data->in_max[i] = pc87360_read_value(data,
+						  LD_IN, i,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1301: FILE: drivers/i2c/chips/pc87360.c:1210:
+					data->in_crit[i-11] =
 					               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1303: FILE: drivers/i2c/chips/pc87360.c:1212:
+						pc87360_read_value(data, LD_IN,
+						i, PC87365_REG_TEMP_CRIT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: drivers/i2c/chips/pc87360.c:1217:
+			data->in_alarms = pc87360_read_value(data, LD_IN,
+					  NO_BANK, PC87365_REG_IN_ALARMS1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: drivers/i2c/chips/pc87360.c:1223:
+				    pc87360_read_value(data, LD_IN,
+				    NO_BANK, PC87365_REG_VID) : 0x1F;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1320: FILE: drivers/i2c/chips/pc87360.c:1229:
+			data->temp_status[i] = pc87360_read_value(data,
+					       LD_TEMP, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1328: FILE: drivers/i2c/chips/pc87360.c:1237:
+				data->temp[i] = pc87360_read_value(data,
+						LD_TEMP, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: drivers/i2c/chips/pc87360.c:1242:
+				data->temp_min[i] = pc87360_read_value(data,
+						    LD_TEMP, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: drivers/i2c/chips/pc87360.c:1245:
+				data->temp_max[i] = pc87360_read_value(data,
+						    LD_TEMP, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/i2c/chips/pc87360.c:1248:
+				data->temp_crit[i] = pc87360_read_value(data,
+						     LD_TEMP, i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: drivers/i2c/chips/pc87360.c:1254:
+			data->temp_alarms = pc87360_read_value(data, LD_TEMP,
+					    NO_BANK, PC87365_REG_TEMP_ALARMS)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1363: FILE: drivers/i2c/chips/pc87360.c:1272:
+	if (pc87360_find(0x2e, &devid, extra_isa)
+	 && pc87360_find(0x4e, &devid, extra_isa)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1364: FILE: drivers/i2c/chips/pc87360.c:1273:
+		printk(KERN_WARNING "pc87360: PC8736x not detected, "

WARNING:SPLIT_STRING: quoted string split across lines
#1365: FILE: drivers/i2c/chips/pc87360.c:1274:
+		printk(KERN_WARNING "pc87360: PC8736x not detected, "
+		       "module not inserted.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1378: FILE: drivers/i2c/chips/pc87360.c:1287:
+		printk(KERN_WARNING "pc87360: No active logical device, "

WARNING:SPLIT_STRING: quoted string split across lines
#1379: FILE: drivers/i2c/chips/pc87360.c:1288:
+		printk(KERN_WARNING "pc87360: No active logical device, "
+		       "module not inserted.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1391: FILE: drivers/i2c/chips/pc87360.c:1300:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232616.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 104 warnings, 138 checks, 1334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232616.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
