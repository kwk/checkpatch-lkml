WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#35: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#82: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:43:
+ *  $Id: ehca_qp.c,v 1.159 2006/02/15 15:01:24 nguyen Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#85: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:46:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#99: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:60:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#100: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:61:
+#include <asm/uaccess.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:145:
+		EDEB_ERR(4,"invalid ehca_qp_state=%x",ehca_qp_state);
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:145:
+		EDEB_ERR(4,"invalid ehca_qp_state=%x",ehca_qp_state);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:176:
+		EDEB_ERR(4,"Invalid ibqptype=%x", ibqptype);
 		          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:185:
+	int index = -EINVAL;
+	switch (ib_tostate) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#229: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:190:
+		if (ib_fromstate == IB_QPS_RESET) {
[...]
+		} else if (ib_fromstate == IB_QPS_INIT) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#236: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:197:
+		if (ib_fromstate == IB_QPS_INIT) {
+			index = IB_QPST_INIT2RTR;
+		}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#241: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:202:
+		if (ib_fromstate == IB_QPS_RTR) {
[...]
+		} else if (ib_fromstate == IB_QPS_RTS) {
[...]
+		} else if (ib_fromstate == IB_QPS_SQD) {
[...]
+		} else if (ib_fromstate == IB_QPS_SQE) {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#252: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:213:
+		if (ib_fromstate == IB_QPS_RTS) {
+			index = IB_QPST_RTS2SQD;
+		}

CHECK:CAMELCASE: Avoid CamelCase: <ipz_QPageit_get_inc>
#343: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:304:
+		vpage = ipz_QPageit_get_inc(&my_qp->ehca_qp_core.ipz_squeue);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:307:
+			EDEB_ERR(4, "SQ ipz_QPageit_get_inc() "
+				 "failed p_vpage= %p", vpage);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'faield' may be misspelled - perhaps 'failed'?
#358: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:319:
+			EDEB_ERR(4,"SQ  hipz_qp_register_rpage() faield "
 			                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#358: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:319:
+			EDEB_ERR(4,"SQ  hipz_qp_register_rpage() faield "
 			          ^

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:320:
+			EDEB_ERR(4,"SQ  hipz_qp_register_rpage() faield "
+				 " rc=%lx", hipz_rc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#364: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:325:
+		/* for sq no need to check hipz_rc against
+		   e.g. H_PAGE_REGISTERED */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#364: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:325:
+		   e.g. H_PAGE_REGISTERED */

CHECK:CAMELCASE: Avoid CamelCase: <ipz_QEit_reset>
#367: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:328:
+	ipz_QEit_reset(&my_qp->ehca_qp_core.ipz_squeue);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#373: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:334:
+			EDEB_ERR(4,"RQ ipz_QPageit_get_inc() "
 			          ^

WARNING:SPLIT_STRING: quoted string split across lines
#374: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:335:
+			EDEB_ERR(4,"RQ ipz_QPageit_get_inc() "
+				 "failed p_vpage = %p", vpage);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'my_qp->ehca_qp_core.galpas.kernel'
#387: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:348:
+						   my_qp->ehca_qp_core.galpas.
+						   kernel);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:SPLIT_STRING: quoted string split across lines
#390: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:351:
+			EDEB_ERR(4, "RQ hipz_qp_register_rpage() failed "
+			     "rc=%lx", hipz_rc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:357:
+				EDEB_ERR(4,"RQ hipz_qp_register_rpage() "
 				          ^

WARNING:SPLIT_STRING: quoted string split across lines
#397: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:358:
+				EDEB_ERR(4,"RQ hipz_qp_register_rpage() "
+					 "hipz_rc= %lx ", hipz_rc);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vpage"
#402: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:363:
+			if (vpage != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:364:
+				EDEB_ERR(4,"ipz_QPageit_get_inc() "
 				          ^

WARNING:SPLIT_STRING: quoted string split across lines
#404: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:365:
+				EDEB_ERR(4,"ipz_QPageit_get_inc() "
+					 "should not succeed vpage=%p",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#411: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:372:
+				EDEB_ERR(4,"RQ hipz_qp_register_rpage() "
 				          ^

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:373:
+				EDEB_ERR(4,"RQ hipz_qp_register_rpage() "
+					 "hipz_rc= %lx ", hipz_rc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#430: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:391:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#435: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:396:
+	static int da_msg_size[]={ 128, 256, 512, 1024, 2048, 4096 };
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:417:
+	u8 isdaqp;
+	EDEB_EN(7,"pd=%p init_attr=%p", pd, init_attr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:417:
+	EDEB_EN(7,"pd=%p init_attr=%p", pd, init_attr);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:440:
+		EDEB_ERR(4,"wrong QP Type=%x",init_attr->qp_type);
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#479: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:440:
+		EDEB_ERR(4,"wrong QP Type=%x",init_attr->qp_type);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:444:
+		EDEB_ERR(4,"unsupported LL QP Type=%x",init_attr->qp_type);
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#483: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:444:
+		EDEB_ERR(4,"unsupported LL QP Type=%x",init_attr->qp_type);
 		                                      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#487: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:448:
+	if (pd->uobject && udata != NULL) {
+		context = pd->uobject->context;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "udata"
#487: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:448:
+	if (pd->uobject && udata != NULL) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#531: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:492:
+	if (init_attr->sq_sig_type == IB_SIGNAL_ALL_WR) {
[...]
+	} else {
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#538: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:499:
+	max_send_sge=init_attr->cap.max_send_sge;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#539: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:500:
+	max_recv_sge=init_attr->cap.max_recv_sge;
 	            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#540: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:501:
+	if (IB_QPT_UD == init_attr->qp_type ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#541: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:502:
+	    IB_QPT_GSI == init_attr->qp_type ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#542: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:503:
+	    IB_QPT_SMI == init_attr->qp_type) {

CHECK:SPACING: No space is necessary after a cast
#559: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:520:
+					   (u16) init_attr->cap.max_send_wr + 1, /* fixme(+1 ??) */

CHECK:SPACING: No space is necessary after a cast
#560: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:521:
+					   (u16) init_attr->cap.max_recv_wr + 1, /* fixme(+1 ??) */

CHECK:SPACING: No space is necessary after a cast
#561: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:522:
+					   (u8) max_send_sge,

CHECK:SPACING: No space is necessary after a cast
#562: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:523:
+					   (u8) max_recv_sge,

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:545:
+^I        if (isdaqp == 0) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:546:
+^I^I        swqe_size = offsetof(struct ehca_wqe,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:551:
+^I^I        swqe_size = da_msg_size[max_send_sge];$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#592: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:553:
+			act_nr_send_sges=1;
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#593: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:554:
+			act_nr_receive_sges=1;
 			                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:568:
+^I        act_nr_receive_sges -= 2;$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#614: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:575:
+		if (IB_QPT_GSI == init_attr->qp_type ||

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#615: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:576:
+		    IB_QPT_SMI == init_attr->qp_type) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#635: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:596:
+		EDEB_ERR(4,"Couldn't initialize r/squeue and pages ret=%x",
 		          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#663: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:624:
+		if ((hipz_rc = ehca_define_sqp(shca, my_qp, init_attr))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "init_attr->send_cq"
#670: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:631:
+	if (init_attr->send_cq != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "context"
#682: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:643:
+	if (context != NULL && udata != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "udata"
#682: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:643:
+	if (context != NULL && udata != NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#684: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:645:
+		struct vm_area_struct * vma;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#685: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:646:
+		struct vm_area_struct * vma;
+		resp.qp_num = qp_nr;

CHECK:SPACING: No space is necessary after a cast
#689: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:650:
+		ehca_mmap_nopage(((u64) (my_qp->token) << 32) | 0x22000000,

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#691: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:652:
+				 ((void**)&resp.ehca_qp_core.ipz_rqueue.queue),

CHECK:SPACING: No space is necessary after a cast
#694: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:655:
+		ehca_mmap_nopage(((u64) (my_qp->token) << 32) | 0x23000000,

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#696: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:657:
+				 ((void**)&resp.ehca_qp_core.ipz_squeue.queue),

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#700: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:661:
+				   ((void**)&resp.ehca_qp_core.galpas.kernel.fw_handle),

WARNING:SIZEOF_PARENTHESIS: sizeof resp should be sizeof(resp)
#704: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:665:
+		if (ib_copy_to_udata(udata, &resp, sizeof resp)) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#713: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:674:
+	return (&my_qp->ib_qp);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#732: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:693:
+
+}

WARNING:SPLIT_STRING: quoted string split across lines
#761: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:722:
+		EDEB_ERR(4, "hipz_h_disable_and_get_wqe() failed "
+			 "ehca_qp=%p qp_num=%x hipz_rc=%lx",

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#766: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:727:
+	bad_send_wqe_p = (void*)((u64)bad_send_wqe_p & (~(1L<<63)));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#766: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:727:
+	bad_send_wqe_p = (void*)((u64)bad_send_wqe_p & (~(1L<<63)));
 	                                                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#773: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:734:
+	squeue_start_p = (void*)ehca_kv_to_g(squeue->queue);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#774: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:735:
+	squeue_end_p = squeue_start_p+squeue->queue_length;
 	                             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#781: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:742:
+	wqe = (struct ehca_wqe*)bad_send_wqe_v;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#787: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:748:
+		wqe = (struct ehca_wqe*)((u8*)wqe+squeue->qe_size);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#787: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:748:
+		wqe = (struct ehca_wqe*)((u8*)wqe+squeue->qe_size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#787: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:748:
+		wqe = (struct ehca_wqe*)((u8*)wqe+squeue->qe_size);
 		                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#788: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:749:
+		*bad_wqe_cnt = (*bad_wqe_cnt)+1;
 		                             ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#789: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:750:
+		if ((void*)wqe >= squeue_end_v) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#789: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:750:
+		if ((void*)wqe >= squeue_end_v) {
+			wqe = squeue_start_v;
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#794: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:755:
+	/* bad wqe will be reprocessed and ignored when pol_cq() is called,
+	   i.e. nr of wqes with flush error status is one less */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#794: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:755:
+	   i.e. nr of wqes with flush error status is one less */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#795: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:756:
+	EDEB(6, "qp_num=%x flusherr_wqe_cnt=%x", qp_num, (*bad_wqe_cnt)-1);
 	                                                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#830: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:791:
+	EDEB_EN(7, "ehca_qp=%p qp_num=%x ibqp_type=%x "
+		"new qp_state=%x attribute_mask=%x",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mqpcb"
#836: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:797:
+	if (mqpcb == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#839: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:800:
+		EDEB_ERR(4, "Could not get zeroed page for mqpcb "
+			 "ehca_qp=%p qp_num=%x ", my_qp, ibqp->qp_num);

WARNING:SPLIT_STRING: quoted string split across lines
#850: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:811:
+		EDEB_ERR(4, "hipz_h_query_qp() failed "
+			 "ehca_qp=%p qp_num=%x hipz_rc=%lx",

WARNING:SPLIT_STRING: quoted string split across lines
#863: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:824:
+		EDEB_ERR(4, "Invalid current ehca_qp_state=%x "
+			 "ehca_qp=%p qp_num=%x",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#868: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:829:
+	/* circumvention to set aqp0 initial state to init
+	   as expected by IB spec */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#868: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:829:
+	   as expected by IB spec */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#873: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:834:
+	    (attr_mask & IB_QP_STATE)
+	    && attr->qp_state == IB_QPS_INIT) { /* RESET -> INIT */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#882: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:843:
+		int smirc = internal_modify_qp(

WARNING:SPLIT_STRING: quoted string split across lines
#886: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:847:
+			EDEB_ERR(4, "SMI RESET -> INIT failed. "
+				 "ehca_modify_qp() rc=%x", smirc);

WARNING:SPLIT_STRING: quoted string split across lines
#898: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:859:
+			EDEB_ERR(4, "Invalid IB_QP_CUR_STATE "
+				 "attr->curr_qp_state=%x <> "

WARNING:SPLIT_STRING: quoted string split across lines
#899: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:860:
+				 "attr->curr_qp_state=%x <> "
+				 "actual cur_qp_state=%x. "

WARNING:SPLIT_STRING: quoted string split across lines
#900: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:861:
+				 "actual cur_qp_state=%x. "
+				 "ehca_qp=%p qp_num=%x",

WARNING:SPLIT_STRING: quoted string split across lines
#908: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:869:
+	EDEB(7,	"ehca_qp=%p qp_num=%x current qp_state=%x "
+	     "new qp_state=%x attribute_mask=%x",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:874:
+^I    !ib_modify_qp_is_ok(qp_cur_state, qp_new_state, ibqp->qp_type, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#917: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:878:
+		EDEB_ERR(4, "Invalid qp transition new_state=%x cur_state=%x "
+			 "ehca_qp=%p qp_num=%x attr_mask=%x",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:879:
+^I^I^I qp_new_state, qp_cur_state, my_qp, ibqp->qp_num, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#923: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:884:
+	if ((mqpcb->qp_state = ib2ehca_qp_state(qp_new_state))) {

WARNING:SPLIT_STRING: quoted string split across lines
#928: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:889:
+		EDEB_ERR(4, "Invalid new qp state=%x "
+			 "ehca_qp=%p qp_num=%x",

WARNING:SPLIT_STRING: quoted string split across lines
#938: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:899:
+		EDEB_ERR(4, "<INVALID STATE CHANGE> qp_cur_state=%x "
+			 "new_qp_state=%x State_xsition=%x "

WARNING:SPLIT_STRING: quoted string split across lines
#939: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:900:
+			 "new_qp_state=%x State_xsition=%x "
+			 "ehca_qp=%p qp_num=%x",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#959: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:920:
+	if ((my_qp->ehca_qp_core.qp_type == IB_QPT_UD
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_GSI

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#960: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:921:
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_GSI
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_SMI)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#961: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:922:
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_SMI)
+	    && statetrans == IB_QPST_SQE2RTS) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#969: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:930:
+			wqe=(struct ehca_wqe*)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#969: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:930:
+			wqe=(struct ehca_wqe*)
 			   ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#971: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:932:
+			wqe->optype = wqe->wqef = 0xff;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#978: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:939:
+			EDEB_ERR(4, "prepare_sqe_rts() failed "
+				 "ehca_qp=%p qp_num=%x ret=%x",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#985: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:946:
+	/* enable RDMA_Atomic_Control if reset->init und reliable con
+	   this is necessary since gen2 does not provide that flag,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#986: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:947:
+	   but pHyp requires it */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ibqp->qp_type == IB_QPT_UC'
#993: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:954:
+	if (statetrans == IB_QPST_INIT2RTR &&
+	    (ibqp->qp_type == IB_QPT_UC) &&
+	    !(attr_mask & IB_QP_MAX_DEST_RD_ATOMIC)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPLIT_STRING: quoted string split across lines
#1005: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:966:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_PKEY_INDEX update_mask=%lx",

WARNING:SPLIT_STRING: quoted string split across lines
#1012: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:973:
+			EDEB_ERR(4, "Invalid port=%x. "
+				 "ehca_qp=%p qp_num=%x num_ports=%x",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1099: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1060:
+^I        /*  @TODO CHECK THIS with our spec */$

WARNING:SPLIT_STRING: quoted string split across lines
#1104: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1065:
+		EDEB(7, "ehca_qp=%p qp_num=%x IB_QP_MAX_DEST_RD_ATOMIC "
+		     "update_mask=%lx", my_qp, ibqp->qp_num, update_mask);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1068:
+^I        /*  @TODO CHECK THIS with our spec */$

WARNING:SPLIT_STRING: quoted string split across lines
#1113: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1074:
+		EDEB(7, "ehca_qp=%p qp_num=%x IB_QP_MAX_QP_RD_ATOMIC "
+		     "update_mask=%lx", my_qp, ibqp->qp_num, update_mask);

WARNING:SPLIT_STRING: quoted string split across lines
#1158: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1119:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_ALT_PATH update_mask=%lx",

WARNING:SPLIT_STRING: quoted string split across lines
#1167: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1128:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_MIN_RNR_TIMER update_mask=%lx",

WARNING:SPLIT_STRING: quoted string split across lines
#1175: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1136:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_SQ_PSN update_mask=%lx",

WARNING:SPLIT_STRING: quoted string split across lines
#1183: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1144:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_DEST_QPN update_mask=%lx",

WARNING:SPLIT_STRING: quoted string split across lines
#1192: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1153:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_PATH_MIG_STATE update_mask=%lx", my_qp,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1197: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1158:
+		mqpcb->max_nr_outst_send_wr = attr->cap.max_send_wr+1;
 		                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1200: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1161:
+		mqpcb->max_nr_outst_recv_wr = attr->cap.max_recv_wr+1;
 		                                                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#1204: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1165:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "IB_QP_CAP update_mask=%lx",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1209: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1170:
+	EDEB_DMP(7, mqpcb, 4*70, "ehca_qp=%p qp_num=%x", my_qp, ibqp->qp_num);
 	                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#1220: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1181:
+		EDEB_ERR(4, "hipz_h_modify_qp() failed rc=%lx "
+			 "ehca_qp=%p qp_num=%x",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1226: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1187:
+	if ((my_qp->ehca_qp_core.qp_type == IB_QPT_UD
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_GSI

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1227: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1188:
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_GSI
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_SMI)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1228: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1189:
+	     || my_qp->ehca_qp_core.qp_type == IB_QPT_SMI)
+	    && statetrans == IB_QPST_SQE2RTS) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1231: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1192:
+		hipz_update_SQA(&my_qp->ehca_qp_core, bad_wqe_cnt-1);
 		                                                 ^

WARNING:SPLIT_STRING: quoted string split across lines
#1243: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1204:
+		EDEB(7, "ehca_qp=%p qp_num=%x "
+		     "RESET_2_INIT needs an additional enable "

WARNING:SPLIT_STRING: quoted string split across lines
#1244: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1205:
+		     "RESET_2_INIT needs an additional enable "
+		     "-> update_mask=%lx", my_qp, ibqp->qp_num, update_mask);

WARNING:SPLIT_STRING: quoted string split across lines
#1256: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1217:
+			EDEB_ERR(4, "ENABLE in context of "
+				 "RESET_2_INIT failed! "

WARNING:SPLIT_STRING: quoted string split across lines
#1257: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1218:
+				 "RESET_2_INIT failed! "
+				 "Maybe you didn't get a LID"

WARNING:SPLIT_STRING: quoted string split across lines
#1258: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1219:
+				 "Maybe you didn't get a LID"
+				 "hipz_rc=%lx ehca_qp=%p qp_num=%x",

WARNING:MISSING_SPACE: break quoted strings at a space character
#1258: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1219:
+				 "Maybe you didn't get a LID"
+				 "hipz_rc=%lx ehca_qp=%p qp_num=%x",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1269: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1230:
+	if (attr_mask & IB_QP_QKEY) {
+		my_qp->ehca_qp_core.qkey = attr->qkey;
+	}

WARNING:SPLIT_STRING: quoted string split across lines
#1328: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1289:
+	EDEB_EN(7, "ehca_qp=%p qp_num=%x "
+		"qp_attr=%p qp_attr_mask=%x qp_init_attr=%p",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1336: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1297:
+		EDEB_ERR(4,"Invalid attribute mask "
 		          ^

WARNING:SPLIT_STRING: quoted string split across lines
#1337: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1298:
+		EDEB_ERR(4,"Invalid attribute mask "
+			 "ehca_qp=%p qp_num=%x qp_attr_mask=%x ",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1342: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1303:
+	qpcb = kmalloc(EHCA_PAGESIZE, GFP_KERNEL );

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qpcb"
#1344: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1305:
+	if (qpcb == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1346: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1307:
+		EDEB_ERR(4,"Out of memory for qpcb "
 		          ^

WARNING:SPLIT_STRING: quoted string split across lines
#1347: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1308:
+		EDEB_ERR(4,"Out of memory for qpcb "
+			 "ehca_qp=%p qp_num=%x", my_qp, qp->qp_num);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1359: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1320:
+		EDEB_ERR(4,"hipz_h_query_qp() failed "
 		          ^

WARNING:SPLIT_STRING: quoted string split across lines
#1360: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1321:
+		EDEB_ERR(4,"hipz_h_query_qp() failed "
+			 "ehca_qp=%p qp_num=%x hipz_rc=%lx",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1369: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1330:
+		EDEB_ERR(4,"Got invalid ehca_qp_state=%x "
 		          ^

WARNING:SPLIT_STRING: quoted string split across lines
#1370: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1331:
+		EDEB_ERR(4,"Got invalid ehca_qp_state=%x "
+			 "ehca_qp=%p qp_num=%x",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1375: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1336:
+	if (qp_attr->qp_state == IB_QPS_SQD) {
+		qp_attr->sq_draining = TRUE;
+	}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1385: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1346:
+	qp_attr->cap.max_send_wr = qpcb->max_nr_outst_send_wr-1;
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1386: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1347:
+	qp_attr->cap.max_recv_wr = qpcb->max_nr_outst_recv_wr-1;
 	                                                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1422: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1383:
+	if (qpcb->send_grh_flag) {
+		qp_attr->ah_attr.ah_flags = IB_AH_GRH;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1444: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1405:
+	if (qpcb->send_grh_flag_al) {
+		qp_attr->alt_ah_attr.ah_flags = IB_AH_GRH;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1464: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1425:
+	if (qp_init_attr != NULL) {
+		*qp_init_attr = my_qp->init_attr;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "qp_init_attr"
#1464: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1425:
+	if (qp_init_attr != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1469: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1430:
+	EDEB(7,	"ehca_qp=%p qp_number=%x dest_qp_number=%x "
+	     "dlid=%x path_mtu=%x dest_gid=%lx_%lx "

WARNING:SPLIT_STRING: quoted string split across lines
#1470: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1431:
+	     "dlid=%x path_mtu=%x dest_gid=%lx_%lx "
+	     "service_level=%x qp_state=%x",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1476: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1437:
+	EDEB_DMP(7, qpcb, 4*70, "ehca_qp=%p qp_num=%x", my_qp, qp->qp_num);
 	                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "my_qp->send_cq"
#1508: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1469:
+	if (my_qp->send_cq != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1513: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1474:
+			EDEB_ERR(4, "Couldn't unassign qp from send_cq "
+				 "ret=%x qp_num=%x cq_num=%x",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1527: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1488:
+		struct ehca_qp_core *qp_core = &my_qp->ehca_qp_core;
+		retcode = ehca_munmap(my_qp->uspace_rqueue,

WARNING:SPLIT_STRING: quoted string split across lines
#1537: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1498:
+		EDEB_ERR(4, "hipz_h_destroy_qp() failed "
+			 "rc=%lx ehca_qp=%p qp_num=%x",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1563: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1524:
+	EDEB_EX(7,"ret=%x", retcode);
 	         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 85 warnings, 42 checks, 1528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103207.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
