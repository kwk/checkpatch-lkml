CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/linux/pid.h:39:
+extern int alloc_pidmap(int pidspace_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/pid.h:61:
+extern int pidspace_init(int pidspace_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/pid.h:62:
+extern int pidspace_free(int pidspace_id);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: include/linux/pid.h:76:
+	return (pid & (PID_MAX_LIMIT-1));
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: include/linux/threads.h:29:
+#define PID_MAX_DEFAULT ^I(1<< PID_MAX_DEFAULT_SHIFT)$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxW)
#116: FILE: include/linux/threads.h:29:
+#define PID_MAX_DEFAULT 	(1<< PID_MAX_DEFAULT_SHIFT)
                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: include/linux/threads.h:29:
+#define PID_MAX_DEFAULT 	(1<< PID_MAX_DEFAULT_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'devided' may be misspelled - perhaps 'divided'?
#120: FILE: include/linux/threads.h:32:
+ * The entire global pid range is devided into pidspaces
                                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#121: FILE: include/linux/threads.h:33:
+ * each able to hold upto PID_MAX_LIMIT pids.
                      ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: include/linux/threads.h:40:
+#define PID_MAX_LIMIT ^I^I(1<<PID_MAX_LIMIT_SHIFT)$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#130: FILE: include/linux/threads.h:40:
+#define PID_MAX_LIMIT 		(1<<PID_MAX_LIMIT_SHIFT)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: include/linux/threads.h:40:
+#define PID_MAX_LIMIT 		(1<<PID_MAX_LIMIT_SHIFT)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: include/linux/threads.h:42:
+#define MAX_NR_PIDSPACES ^I(PID_MAX_LIMIT_SHIFT > 22 ?   \$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#133: FILE: include/linux/threads.h:43:
+				 1<<(32-PID_MAX_LIMIT_SHIFT-1) : 512)
 				  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: include/linux/threads.h:43:
+				 1<<(32-PID_MAX_LIMIT_SHIFT-1) : 512)
 				       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: include/linux/threads.h:43:
+				 1<<(32-PID_MAX_LIMIT_SHIFT-1) : 512)
 				                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#162: FILE: kernel/pid.c:70:
+static struct pidspace pid_spaces[MAX_NR_PIDSPACES] =
+	{ { 0, dflt_pidmap_array } };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#176: FILE: kernel/pid.c:84:
+	map = kmalloc(PIDMAP_ENTRIES*sizeof(pidmap_t), GFP_KERNEL);
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: kernel/pid.c:88:
+	for (i=0 ; i< PIDMAP_ENTRIES ; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#180: FILE: kernel/pid.c:88:
+	for (i=0 ; i< PIDMAP_ENTRIES ; i++)
 	            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: kernel/pid.c:116:
+	BUG_ON(pid_space->pidmap_array == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pid_space->pidmap_array"
#208: FILE: kernel/pid.c:116:
+	BUG_ON(pid_space->pidmap_array == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#213: FILE: kernel/pid.c:121:
+	for ( i=0; i<PIDMAP_ENTRIES; i++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#213: FILE: kernel/pid.c:121:
+	for ( i=0; i<PIDMAP_ENTRIES; i++)
 	            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#213: FILE: kernel/pid.c:121:
+	for ( i=0; i<PIDMAP_ENTRIES; i++)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114617.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 6 warnings, 13 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114617.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
