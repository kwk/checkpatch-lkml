WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Attached is a new patch which takes into account the comments on the earlier

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#97: 
+ *     dependancy problems for modular drivers.
        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#137: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#138: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#139: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#140: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#141: 
#	           ChangeSet	1.1433  -> 1.1434 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#142: 
#	drivers/ide/pci/Makefile	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#143: 
#	include/linux/pci_ids.h	1.123   -> 1.124  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#144: 
#	 drivers/ide/Kconfig	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#145: 
#	               (new)	        -> 1.1     drivers/ide/pci/sgiioc4.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#146: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#147: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#148: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#149: 
# 03/10/03	aniket@tomahawk.engr.sgi.com	1.1434

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#150: 
# Adds support for the IOC4 IDE part.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#151: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#152: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#154: 
--- a/drivers/ide/Kconfig	Fri Oct  3 17:04:27 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#160: FILE: drivers/ide/Kconfig:743:
+config BLK_DEV_SGIIOC4
+	tristate "Silicon Graphics IOC4 chipset support"
+	help
+	  This driver adds PIO & MultiMode DMA-2 support for the SGI IOC4
+	  chipset.  Please say Y here, if you have an Altix System from
+	  Silicon Graphics Inc.
+		

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/ide/Kconfig:749:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#185: FILE: drivers/ide/pci/sgiioc4.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#198: FILE: drivers/ide/pci/sgiioc4.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#222: FILE: drivers/ide/pci/sgiioc4.c:38:
+#include <asm/io.h>

ERROR:SPACING: spaces required around that '?' (ctx:WxV)
#265: FILE: drivers/ide/pci/sgiioc4.c:81:
+#define ide_ack_intr(hwif) ((hwif)->hw.ack_intr ?(hwif)->hw.ack_intr(hwif) : 1)
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#265: FILE: drivers/ide/pci/sgiioc4.c:81:
+#define ide_ack_intr(hwif) ((hwif)->hw.ack_intr ?(hwif)->hw.ack_intr(hwif) : 1)

WARNING:TABSTOP: Statements should start on a tabstop
#284: FILE: drivers/ide/pci/sgiioc4.c:100:
+	 }

WARNING:NEW_TYPEDEFS: do not add new typedefs
#288: FILE: drivers/ide/pci/sgiioc4.c:104:
+typedef struct {

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#303: FILE: drivers/ide/pci/sgiioc4.c:119:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /(4*IOC4_PRD_BYTES))
                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#303: FILE: drivers/ide/pci/sgiioc4.c:119:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /(4*IOC4_PRD_BYTES))
                                            ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#305: FILE: drivers/ide/pci/sgiioc4.c:121:
+typedef enum pciio_endian_e {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#310: FILE: drivers/ide/pci/sgiioc4.c:126:
+static void sgiioc4_init_hwif_ports(hw_regs_t * hw, unsigned long data_port,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: drivers/ide/pci/sgiioc4.c:130:
+					 ide_pci_device_t * d);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#315: FILE: drivers/ide/pci/sgiioc4.c:131:
+static void sgiioc4_resetproc(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: drivers/ide/pci/sgiioc4.c:132:
+static void sgiioc4_maskproc(ide_drive_t * drive, int mask);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: drivers/ide/pci/sgiioc4.c:133:
+static void sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: drivers/ide/pci/sgiioc4.c:134:
+static void __init ide_init_sgiioc4(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#319: FILE: drivers/ide/pci/sgiioc4.c:135:
+static void __init ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#320: FILE: drivers/ide/pci/sgiioc4.c:136:
+static int sgiioc4_checkirq(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: drivers/ide/pci/sgiioc4.c:137:
+static int sgiioc4_clearirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: drivers/ide/pci/sgiioc4.c:139:
+static int sgiioc4_ide_dma_read(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#324: FILE: drivers/ide/pci/sgiioc4.c:140:
+static int sgiioc4_ide_dma_write(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: drivers/ide/pci/sgiioc4.c:141:
+static int sgiioc4_ide_dma_begin(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: drivers/ide/pci/sgiioc4.c:142:
+static int sgiioc4_ide_dma_end(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: drivers/ide/pci/sgiioc4.c:143:
+static int sgiioc4_ide_dma_check(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: drivers/ide/pci/sgiioc4.c:144:
+static int sgiioc4_ide_dma_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#329: FILE: drivers/ide/pci/sgiioc4.c:145:
+static int sgiioc4_ide_dma_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#330: FILE: drivers/ide/pci/sgiioc4.c:146:
+static int sgiioc4_ide_dma_off_quietly(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: drivers/ide/pci/sgiioc4.c:147:
+static int sgiioc4_ide_dma_test_irq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#332: FILE: drivers/ide/pci/sgiioc4.c:148:
+static int sgiioc4_ide_dma_host_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#333: FILE: drivers/ide/pci/sgiioc4.c:149:
+static int sgiioc4_ide_dma_host_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#334: FILE: drivers/ide/pci/sgiioc4.c:150:
+static int sgiioc4_ide_dma_count(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#335: FILE: drivers/ide/pci/sgiioc4.c:151:
+static int sgiioc4_ide_dma_verbose(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#336: FILE: drivers/ide/pci/sgiioc4.c:152:
+static int sgiioc4_ide_dma_lostirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: drivers/ide/pci/sgiioc4.c:153:
+static int sgiioc4_ide_dma_timeout(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: drivers/ide/pci/sgiioc4.c:154:
+static int sgiioc4_ide_build_sglist(ide_drive_t * drive, struct request *rq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: drivers/ide/pci/sgiioc4.c:155:
+static int sgiioc4_ide_raw_build_sglist(ide_drive_t * drive,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: drivers/ide/pci/sgiioc4.c:159:
+static unsigned int sgiioc4_build_dma_table(ide_drive_t * drive,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#346: FILE: drivers/ide/pci/sgiioc4.c:162:
+					    ide_pci_device_t * d);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#348: FILE: drivers/ide/pci/sgiioc4.c:164:
+static ide_pci_device_t sgiioc4_chipsets[] __devinitdata = {

WARNING:TABSTOP: Statements should start on a tabstop
#363: FILE: drivers/ide/pci/sgiioc4.c:179:
+	 }

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#381: FILE: drivers/ide/pci/sgiioc4.c:197:
+}
+static void __init

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#382: FILE: drivers/ide/pci/sgiioc4.c:198:
+sgiioc4_ide_setup_pci_device(struct pci_dev *dev, ide_pci_device_t * d)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: drivers/ide/pci/sgiioc4.c:211:
+		printk(KERN_ERR

CHECK:SPACING: No space is necessary after a cast
#397: FILE: drivers/ide/pci/sgiioc4.c:213:
+		       __FUNCTION__, hwif->name, (void *) base,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#397: FILE: drivers/ide/pci/sgiioc4.c:213:
+		       __FUNCTION__, hwif->name, (void *) base,

CHECK:SPACING: No space is necessary after a cast
#398: FILE: drivers/ide/pci/sgiioc4.c:214:
+		       (void *) base + IOC4_CMD_CTL_BLK_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: drivers/ide/pci/sgiioc4.c:228:
+		       sizeof (hwif->io_ports));

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/ide/pci/sgiioc4.c:236:
+	hwif->cds = (struct ide_pci_device_s *) d;

CHECK:SPACING: No space is necessary after a cast
#427: FILE: drivers/ide/pci/sgiioc4.c:243:
+	(void) ide_init_sgiioc4(hwif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#432: FILE: drivers/ide/pci/sgiioc4.c:248:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#432: FILE: drivers/ide/pci/sgiioc4.c:248:
+		printk(KERN_INFO "%s: %s Bus-Master DMA disabled \n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: drivers/ide/pci/sgiioc4.c:255:
+ * having all the SN2 code sync'd and merged. $

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#442: FILE: drivers/ide/pci/sgiioc4.c:258:
+pciio_endian_t __attribute__ ((weak)) snia_pciio_endian_set(struct pci_dev

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#447: FILE: drivers/ide/pci/sgiioc4.c:263:
+pci_init_sgiioc4(struct pci_dev *dev, ide_pci_device_t * d)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#449: FILE: drivers/ide/pci/sgiioc4.c:265:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#451: FILE: drivers/ide/pci/sgiioc4.c:267:
+		printk(KERN_INFO

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#452: FILE: drivers/ide/pci/sgiioc4.c:268:
+		       "Failed to enable device %s at slot %s \n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#463: FILE: drivers/ide/pci/sgiioc4.c:279:
+		printk(KERN_INFO

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#464: FILE: drivers/ide/pci/sgiioc4.c:280:
+		       "Failed to set endianness for device %s at slot %s \n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#482: FILE: drivers/ide/pci/sgiioc4.c:298:
+sgiioc4_init_hwif_ports(hw_regs_t * hw, unsigned long data_port,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#499: FILE: drivers/ide/pci/sgiioc4.c:315:
+sgiioc4_resetproc(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#506: FILE: drivers/ide/pci/sgiioc4.c:322:
+sgiioc4_maskproc(ide_drive_t * drive, int mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#509: FILE: drivers/ide/pci/sgiioc4.c:325:
+	ide_hwif_t *hwif = HWIF(drive);
+	hwif->OUTB(mask ? (drive->ctl | 2) : (drive->ctl & ~2),

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: drivers/ide/pci/sgiioc4.c:330:
+ide_init_sgiioc4(ide_hwif_t * hwif)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: drivers/ide/pci/sgiioc4.c:372:
+sgiioc4_ide_dma_read(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#561: FILE: drivers/ide/pci/sgiioc4.c:377:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_FROMDEVICE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#572: FILE: drivers/ide/pci/sgiioc4.c:388:
+sgiioc4_ide_dma_write(ide_drive_t * drive)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#577: FILE: drivers/ide/pci/sgiioc4.c:393:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_TODEVICE))) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#589: FILE: drivers/ide/pci/sgiioc4.c:405:
+sgiioc4_ide_dma_begin(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: drivers/ide/pci/sgiioc4.c:418:
+sgiioc4_ide_dma_end(ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#606: FILE: drivers/ide/pci/sgiioc4.c:422:
+	uint64_t dma_base = hwif->dma_base;

CHECK:SPACING: No space is necessary after a cast
#608: FILE: drivers/ide/pci/sgiioc4.c:424:
+	unsigned long *ending_dma = (unsigned long *) hwif->dma_base2;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#620: FILE: drivers/ide/pci/sgiioc4.c:436:
+		printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#622: FILE: drivers/ide/pci/sgiioc4.c:438:
+		       __FUNCTION__, drive->name, ioc4_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#639: FILE: drivers/ide/pci/sgiioc4.c:455:
+		printk(KERN_INFO "%s(%s) : Stale DMA Data in Memory\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#640: FILE: drivers/ide/pci/sgiioc4.c:456:
+		       __FUNCTION__, drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#647: FILE: drivers/ide/pci/sgiioc4.c:463:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#649: FILE: drivers/ide/pci/sgiioc4.c:465:
+			       __FUNCTION__, drive->name, bc_dev, bc_mem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: drivers/ide/pci/sgiioc4.c:476:
+sgiioc4_ide_dma_check(ide_drive_t * drive)

CHECK:BRACES: braces {} should be used on all arms of this statement
#662: FILE: drivers/ide/pci/sgiioc4.c:478:
+	if (ide_config_drive_speed(drive, XFER_MW_DMA_2) != 0) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#663: FILE: drivers/ide/pci/sgiioc4.c:479:
+		printk(KERN_INFO

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#664: FILE: drivers/ide/pci/sgiioc4.c:480:
+		       "Couldnot set %s in Multimode-2 DMA mode \

CHECK:BRACES: Unbalanced braces around else statement
#668: FILE: drivers/ide/pci/sgiioc4.c:484:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#675: FILE: drivers/ide/pci/sgiioc4.c:491:
+sgiioc4_ide_dma_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#683: FILE: drivers/ide/pci/sgiioc4.c:499:
+sgiioc4_ide_dma_off(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#685: FILE: drivers/ide/pci/sgiioc4.c:501:
+	printk(KERN_INFO "%s: DMA disabled\n", drive->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#691: FILE: drivers/ide/pci/sgiioc4.c:507:
+sgiioc4_ide_dma_off_quietly(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#700: FILE: drivers/ide/pci/sgiioc4.c:516:
+sgiioc4_ide_dma_test_irq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#706: FILE: drivers/ide/pci/sgiioc4.c:522:
+sgiioc4_ide_dma_host_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#715: FILE: drivers/ide/pci/sgiioc4.c:531:
+sgiioc4_ide_dma_host_off(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#723: FILE: drivers/ide/pci/sgiioc4.c:539:
+sgiioc4_ide_dma_count(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#729: FILE: drivers/ide/pci/sgiioc4.c:545:
+sgiioc4_ide_dma_verbose(ide_drive_t * drive)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#732: FILE: drivers/ide/pci/sgiioc4.c:548:
+		printk(", UDMA(16)");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#734: FILE: drivers/ide/pci/sgiioc4.c:550:
+		printk(", PIO");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#740: FILE: drivers/ide/pci/sgiioc4.c:556:
+sgiioc4_ide_dma_lostirq(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#748: FILE: drivers/ide/pci/sgiioc4.c:564:
+sgiioc4_ide_dma_timeout(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#750: FILE: drivers/ide/pci/sgiioc4.c:566:
+	printk(KERN_ERR "%s: timeout waiting for DMA\n", drive->name);

CHECK:SPACING: No space is necessary after a cast
#760: FILE: drivers/ide/pci/sgiioc4.c:576:
+	u8 reg = (u8) inb(port);

CHECK:SPACING: No space is necessary after a cast
#765: FILE: drivers/ide/pci/sgiioc4.c:581:
+			unsigned int intr_reg = (u32) inl(other_ir);

CHECK:SPACING: No space is necessary after a cast
#770: FILE: drivers/ide/pci/sgiioc4.c:586:
+				intr_reg = (u32) inl(other_ir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#780: FILE: drivers/ide/pci/sgiioc4.c:596:
+ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: drivers/ide/pci/sgiioc4.c:598:
+	int num_ports = sizeof (ioc4_dma_regs_t);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#784: FILE: drivers/ide/pci/sgiioc4.c:600:
+	printk(KERN_INFO "%s: BM-DMA at 0x%04lx-0x%04lx\n", hwif->name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#788: FILE: drivers/ide/pci/sgiioc4.c:604:
+		printk(KERN_ERR

CHECK:SPACING: No space is necessary after a cast
#790: FILE: drivers/ide/pci/sgiioc4.c:606:
+		       __FUNCTION__, hwif->name, (void *) dma_base,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#790: FILE: drivers/ide/pci/sgiioc4.c:606:
+		       __FUNCTION__, hwif->name, (void *) dma_base,

CHECK:SPACING: No space is necessary after a cast
#791: FILE: drivers/ide/pci/sgiioc4.c:607:
+		       (void *) dma_base + num_ports - 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#803: FILE: drivers/ide/pci/sgiioc4.c:619:
+	    kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#813: FILE: drivers/ide/pci/sgiioc4.c:629:
+	    (unsigned long) pci_alloc_consistent(hwif->pci_dev,

CHECK:SPACING: No space is necessary after a cast
#815: FILE: drivers/ide/pci/sgiioc4.c:631:
+						 (dma_addr_t *) &(hwif->dma_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hwif->dma_status
#815: FILE: drivers/ide/pci/sgiioc4.c:631:
+						 (dma_addr_t *) &(hwif->dma_status));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:INDENTED_LABEL: labels should not be indented
#827: FILE: drivers/ide/pci/sgiioc4.c:643:
+      dma_alloc_failure:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#828: FILE: drivers/ide/pci/sgiioc4.c:644:
+	printk(KERN_INFO

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#830: FILE: drivers/ide/pci/sgiioc4.c:646:
+	       __FUNCTION__, hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#831: FILE: drivers/ide/pci/sgiioc4.c:647:
+	printk(KERN_INFO

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#832: FILE: drivers/ide/pci/sgiioc4.c:648:
+	       "Changing from DMA to PIO mode for Drive %s \n", hwif->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#841: FILE: drivers/ide/pci/sgiioc4.c:657:
+sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#846: FILE: drivers/ide/pci/sgiioc4.c:662:
+	uint64_t dma_base = hwif->dma_base;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#847: FILE: drivers/ide/pci/sgiioc4.c:663:
+	uint32_t dma_addr, ending_dma_addr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#852: FILE: drivers/ide/pci/sgiioc4.c:668:
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#854: FILE: drivers/ide/pci/sgiioc4.c:670:
+		       __FUNCTION__, drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#864: FILE: drivers/ide/pci/sgiioc4.c:680:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#866: FILE: drivers/ide/pci/sgiioc4.c:682:
+			       __FUNCTION__, drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#871: FILE: drivers/ide/pci/sgiioc4.c:687:
+		printk(KERN_WARNING

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#872: FILE: drivers/ide/pci/sgiioc4.c:688:
+		       "%s(%s) : Warning!! - DMA Error during Previous transfer |\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#874: FILE: drivers/ide/pci/sgiioc4.c:690:
+		       __FUNCTION__, drive->name, ioc4_dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#884: FILE: drivers/ide/pci/sgiioc4.c:700:
+			printk(KERN_ERR

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#886: FILE: drivers/ide/pci/sgiioc4.c:702:
+			       __FUNCTION__, drive->name);

CHECK:SPACING: No space is necessary after a cast
#894: FILE: drivers/ide/pci/sgiioc4.c:710:
+	memset((unsigned int *) hwif->dma_base2, 0, IOC4_IDE_CACHELINE_SIZE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#902: FILE: drivers/ide/pci/sgiioc4.c:718:
+/* IOC4 Scatter Gather list Format ^I^I^I^I^I^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#906: FILE: drivers/ide/pci/sgiioc4.c:722:
+/* | Upper 32 bits - Zero ^I^I| ^ILower 32 bits- address^I     |^I^I*/$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#913: FILE: drivers/ide/pci/sgiioc4.c:729:
+sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq, int ddir)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#921: FILE: drivers/ide/pci/sgiioc4.c:737:
+		hwif->sg_nents = i = sgiioc4_ide_raw_build_sglist(drive, rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#923: FILE: drivers/ide/pci/sgiioc4.c:739:
+		hwif->sg_nents = i = sgiioc4_ide_build_sglist(drive, rq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#932: FILE: drivers/ide/pci/sgiioc4.c:748:
+		int cur_len;
+		cur_addr = sg_dma_address(sg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#937: FILE: drivers/ide/pci/sgiioc4.c:753:
+				printk(KERN_WARNING

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#942: FILE: drivers/ide/pci/sgiioc4.c:758:
+				uint32_t xcount, bcount =

WARNING:INDENTED_LABEL: labels should not be indented
#975: FILE: drivers/ide/pci/sgiioc4.c:791:
+      use_pio_instead:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#984: FILE: drivers/ide/pci/sgiioc4.c:800:
+sgiioc4_checkirq(ide_hwif_t * hwif)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#986: FILE: drivers/ide/pci/sgiioc4.c:802:
+	uint8_t intr_reg =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#996: FILE: drivers/ide/pci/sgiioc4.c:812:
+sgiioc4_clearirq(ide_drive_t * drive)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1009: FILE: drivers/ide/pci/sgiioc4.c:825:
+		int count = 0;
+		do {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1011: FILE: drivers/ide/pci/sgiioc4.c:827:
+^I^I^Istat = hwif->INB(IDE_STATUS_REG);^I$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1017: FILE: drivers/ide/pci/sgiioc4.c:833:
+			uint32_t pci_err_addr_low, pci_err_addr_high,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: drivers/ide/pci/sgiioc4.c:838:
+			pci_read_config_dword(hwif->pci_dev,PCI_COMMAND, &pci_stat_cmd_reg);
 			                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1023: FILE: drivers/ide/pci/sgiioc4.c:839:
+			printk(KERN_ERR

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1024: FILE: drivers/ide/pci/sgiioc4.c:840:
+			       "%s(%s) : PCI Bus Error when doing DMA \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1026: FILE: drivers/ide/pci/sgiioc4.c:842:
+			       __FUNCTION__, drive->name, pci_stat_cmd_reg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1027: FILE: drivers/ide/pci/sgiioc4.c:843:
+			printk(KERN_ERR

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1028: FILE: drivers/ide/pci/sgiioc4.c:844:
+			       "%s(%s) : PCI Error Address is 0x%x%x \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1029: FILE: drivers/ide/pci/sgiioc4.c:845:
+			       __FUNCTION__, drive->name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: drivers/ide/pci/sgiioc4.c:852:
+^I^Ihwif->OUTL(0x03, other_ir);^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1045: FILE: drivers/ide/pci/sgiioc4.c:861:
+ * ^I"Copied from drivers/ide/ide-dma.c"$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1051: FILE: drivers/ide/pci/sgiioc4.c:867:
+ *	Perform the PCI mapping magic neccessary to access the source
   	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1053: FILE: drivers/ide/pci/sgiioc4.c:869:
+ *	of the kernel provide the neccessary cache management so that
   	                          ^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1061: FILE: drivers/ide/pci/sgiioc4.c:877:
+sgiioc4_ide_build_sglist(ide_drive_t * drive, struct request *rq)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1068: FILE: drivers/ide/pci/sgiioc4.c:884:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1081: FILE: drivers/ide/pci/sgiioc4.c:897:
+ * ^ICopied from drivers/ide/ide-dma.c$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1086: FILE: drivers/ide/pci/sgiioc4.c:902:
+ *	Perform the PCI mapping magic neccessary to access the source or
   	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#1088: FILE: drivers/ide/pci/sgiioc4.c:904:
+ *	of the  kernel provide the neccessary cache management so that we can
   	                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1092: FILE: drivers/ide/pci/sgiioc4.c:908:
+ *^Ihowever that is not exported $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1096: FILE: drivers/ide/pci/sgiioc4.c:912:
+sgiioc4_ide_raw_build_sglist(ide_drive_t * drive, struct request *rq)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1110: FILE: drivers/ide/pci/sgiioc4.c:926:
+#if 1

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1112: FILE: drivers/ide/pci/sgiioc4.c:928:
+		BUG();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1118: FILE: drivers/ide/pci/sgiioc4.c:934:
+		memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1126: FILE: drivers/ide/pci/sgiioc4.c:942:
+	memset(&sg[nents], 0, sizeof (*sg));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1150: FILE: drivers/ide/pci/sgiioc4.c:966:
+					"\n\tSGI IOC4 Chipset rev %d. ",class_rev);
 					                               ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1165: FILE: drivers/ide/pci/sgiioc4.c:981:
+static int __devinit

WARNING:LINE_SPACING: Missing a blank line after declarations
#1170: FILE: drivers/ide/pci/sgiioc4.c:986:
+	ide_pci_device_t *d = &sgiioc4_chipsets[id->driver_data];
+	if (dev->device != d->device) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1171: FILE: drivers/ide/pci/sgiioc4.c:987:
+		printk(KERN_ERR "Error in %s(dev 0x%p | id 0x%p )\n",

CHECK:SPACING: No space is necessary after a cast
#1172: FILE: drivers/ide/pci/sgiioc4.c:988:
+		       __FUNCTION__, (void *) dev, (void *) id);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1172: FILE: drivers/ide/pci/sgiioc4.c:988:
+		       __FUNCTION__, (void *) dev, (void *) id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1173: FILE: drivers/ide/pci/sgiioc4.c:989:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1180: FILE: drivers/ide/pci/sgiioc4.c:996:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1183: FILE: drivers/ide/pci/sgiioc4.c:999:
+		printk(KERN_INFO

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1184: FILE: drivers/ide/pci/sgiioc4.c:1000:
+		       "\nPlease upgrade to Firmware Rev 46 or higher \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1188: FILE: drivers/ide/pci/sgiioc4.c:1004:
+	printk(KERN_INFO "%s: IDE controller at PCI slot %s\n", d->name,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 68 errors, 100 warnings, 30 checks, 1071 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332472.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
