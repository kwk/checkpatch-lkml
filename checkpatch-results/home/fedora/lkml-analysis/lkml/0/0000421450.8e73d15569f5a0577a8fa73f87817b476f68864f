ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#54: 
--- a/include/net/udp.h	Sun Oct 20 13:16:16 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: include/net/udp.h:79:
+extern int udp_proc_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:INLINE: plain inline is preferred over __inline__
#304: FILE: net/ipv4/udp.c:1221:
+static __inline__ struct sock *udp_get_bucket(struct seq_file *seq, loff_t *pos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: net/ipv4/udp.c:1259:
+^Iif (sk) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: net/ipv4/udp.c:1263:
+^Iif (++state->bucket >= UDP_HTABLE_SIZE) $

WARNING:SPLIT_STRING: quoted string split across lines
#370: FILE: net/ipv4/udp.c:1287:
+	sprintf(tmpbuf, "%4d: %08X:%04X %08X:%04X"
+		" %02X %08X:%08X %02X:%08lX %08X %5d %8d %lu %d %p",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: net/ipv4/udp.c:1288:
+^I^Ibucket, src, srcp, dest, destp, sp->state, $

WARNING:SPLIT_STRING: quoted string split across lines
#382: FILE: net/ipv4/udp.c:1299:
+			   "  sl  local_address rem_address   st tx_queue "
+			   "rx_queue tr tm->when retrnsmt   uid  timeout "

WARNING:SPLIT_STRING: quoted string split across lines
#383: FILE: net/ipv4/udp.c:1300:
+			   "rx_queue tr tm->when retrnsmt   uid  timeout "
+			   "inode");

CHECK:BRACES: Unbalanced braces around else statement
#384: FILE: net/ipv4/udp.c:1301:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#393: FILE: net/ipv4/udp.c:1310:
+}
+/* ------------------------------------------------------------------------ */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#395: FILE: net/ipv4/udp.c:1312:
+static struct seq_operations udp_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: net/ipv4/udp.c:1324:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: net/ipv4/udp.c:1324:
+       $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#425: FILE: net/ipv4/udp.c:1342:
+static struct file_operations udp_seq_fops = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#439: FILE: net/ipv4/udp.c:1356:
+	p = create_proc_entry("udp", S_IRUGO, proc_net);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421450.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 3 checks, 375 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421450.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
