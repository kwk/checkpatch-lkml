WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
Add blk_rq_map_sg_one_by_one function to ll_rw_blk.c in order to allow a low 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: drivers/block/ll_rw_blk.c:777:
+int blk_rq_map_sg_one_by_one(request_queue_t *q, struct request *rq,
+		consume_sg_callback consume_sg, void *sg_state)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#85: FILE: drivers/block/ll_rw_blk.c:810:
+				if (bvprv) consume_sg(&sg, sg_state);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: drivers/block/ll_rw_blk.c:811:
+				memset(&sg,0,sizeof(struct scatterlist));
 				          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: drivers/block/ll_rw_blk.c:811:
+				memset(&sg,0,sizeof(struct scatterlist));
 				            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#96: FILE: drivers/block/ll_rw_blk.c:821:
+	if (bvprv) consume_sg(&sg, sg_state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/blkdev.h:345:
+extern int blk_rq_map_sg_one_by_one(request_queue_t *, struct request *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#120: FILE: include/linux/blkdev.h:345:
+extern int blk_rq_map_sg_one_by_one(request_queue_t *, struct request *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#120: FILE: include/linux/blkdev.h:345:
+extern int blk_rq_map_sg_one_by_one(request_queue_t *, struct request *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/linux/blkdev.h:346:
+extern int blk_rq_map_sg_one_by_one(request_queue_t *, struct request *,
+	consume_sg_callback consume_sg, void * sg_state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: include/linux/blkdev.h:346:
+	consume_sg_callback consume_sg, void * sg_state);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419618.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 3 warnings, 3 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419618.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
