WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
diff -urN -X dontdiff linux/Documentation/Configure.help linux-2.4.2-rush1/Documentation/Configure.help

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#186: FILE: MAINTAINERS:1428:
+P:	Krisztian Pifko
+M:	monsta@users.sourceforge.net

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#189: FILE: MAINTAINERS:1431:
+W:	http://openrush.sourceforge.net
+S:	Maintained

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#202: FILE: Makefile:4:
+EXTRAVERSION = -rush1
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#287: FILE: drivers/usb/rush.c:1:
+/* -*- linux-c -*- */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#307: FILE: drivers/usb/rush.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#308: FILE: drivers/usb/rush.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#310: FILE: drivers/usb/rush.c:24:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/usb/rush.c:52:
+        struct usb_device *rush_dev;    /* init: probe_rush */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/usb/rush.c:52:
+        struct usb_device *rush_dev;    /* init: probe_rush */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/usb/rush.c:53:
+        unsigned int ifnum;             /* Interface number of the USB device */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/usb/rush.c:53:
+        unsigned int ifnum;             /* Interface number of the USB device */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/usb/rush.c:54:
+        int isopen;                     /* nz if open */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/usb/rush.c:54:
+        int isopen;                     /* nz if open */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/usb/rush.c:55:
+        int present;                    /* Device is present on the bus */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/usb/rush.c:55:
+        int present;                    /* Device is present on the bus */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/usb/rush.c:56:
+        char *obuf, *ibuf;              /* transfer buffers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/usb/rush.c:56:
+        char *obuf, *ibuf;              /* transfer buffers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/usb/rush.c:57:
+        char bulk_in_ep, bulk_out_ep;   /* Endpoint assignments */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/usb/rush.c:57:
+        char bulk_in_ep, bulk_out_ep;   /* Endpoint assignments */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/usb/rush.c:58:
+        wait_queue_head_t wait_q;       /* for timeouts */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/usb/rush.c:58:
+        wait_queue_head_t wait_q;       /* for timeouts */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/usb/rush.c:101:
+ioctl_rush(struct inode *inode, struct file *file, unsigned int cmd,
+	  unsigned long arg)

CHECK:CAMELCASE: Avoid CamelCase: <RushCommand>
#389: FILE: drivers/usb/rush.c:103:
+	struct RushCommand rush_cmd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: drivers/usb/rush.c:111:
+        /* Sanity check to make sure rush is connected, powered, etc */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: drivers/usb/rush.c:112:
+        if ( rush == NULL ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/usb/rush.c:112:
+        if ( rush == NULL ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#398: FILE: drivers/usb/rush.c:112:
+        if ( rush == NULL ||
[...]
+          return -1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#398: FILE: drivers/usb/rush.c:112:
+        if ( rush == NULL ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rush"
#398: FILE: drivers/usb/rush.c:112:
+        if ( rush == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/usb/rush.c:113:
+             rush->present == 0 ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/usb/rush.c:113:
+        if ( rush == NULL ||
+             rush->present == 0 ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/usb/rush.c:113:
+             rush->present == 0 ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: drivers/usb/rush.c:114:
+             rush->rush_dev == NULL )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/usb/rush.c:114:
+             rush->rush_dev == NULL )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#400: FILE: drivers/usb/rush.c:114:
+             rush->rush_dev == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rush->rush_dev"
#400: FILE: drivers/usb/rush.c:114:
+             rush->rush_dev == NULL )

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/usb/rush.c:115:
+          return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/usb/rush.c:115:
+          return -1;$

CHECK:SPACING: No space is necessary after a cast
#405: FILE: drivers/usb/rush.c:119:
+		data = (void *) arg;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#406: FILE: drivers/usb/rush.c:120:
+		if (data == NULL)

CHECK:SPACING: No space is necessary after a cast
#416: FILE: drivers/usb/rush.c:130:
+		buffer = (unsigned char *) __get_free_page(GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#417: FILE: drivers/usb/rush.c:131:
+		if (buffer == NULL)

CHECK:SPACING: No space is necessary after a cast
#421: FILE: drivers/usb/rush.c:135:
+			free_page((unsigned long) buffer);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#433: FILE: drivers/usb/rush.c:147:
+		down(&(rush->lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#436: FILE: drivers/usb/rush.c:150:
+						 usb_rcvctrlpipe(rush-> rush_dev, 0),
 						                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#443: FILE: drivers/usb/rush.c:157:
+			if (result == -ETIMEDOUT)
[...]
+			else if (result < 0) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: drivers/usb/rush.c:161:
+				err("Error executing ioctrl. code = %d",
+				     le32_to_cpu(result));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/usb/rush.c:165:
+				dbg("Executed ioctl. Result = %d (data=%04x)",
+				     le32_to_cpu(result),

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/usb/rush.c:166:
+				     le32_to_cpu(*((long *) buffer)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#455: FILE: drivers/usb/rush.c:169:
+					up(&(rush->lock));

CHECK:SPACING: No space is necessary after a cast
#456: FILE: drivers/usb/rush.c:170:
+					free_page((unsigned long) buffer);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#464: FILE: drivers/usb/rush.c:178:
+			/* rush_cmd.buffer contains a raw stream of single byte
+			   data which has been returned from rush.  Data is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/usb/rush.c:182:
+			   be swapped at the app level */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#470: FILE: drivers/usb/rush.c:184:
+
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#471: FILE: drivers/usb/rush.c:185:
+		up(&(rush->lock));

CHECK:SPACING: No space is necessary after a cast
#472: FILE: drivers/usb/rush.c:186:
+		free_page((unsigned long) buffer);

CHECK:SPACING: No space is necessary after a cast
#476: FILE: drivers/usb/rush.c:190:
+		data = (void *) arg;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#477: FILE: drivers/usb/rush.c:191:
+		if (data == NULL)

CHECK:SPACING: No space is necessary after a cast
#483: FILE: drivers/usb/rush.c:197:
+		buffer = (unsigned char *) __get_free_page(GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#484: FILE: drivers/usb/rush.c:198:
+		if (buffer == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/usb/rush.c:208:
+		dbg("sending command: reqtype=%0x req=%0x value=%0x index=%0x len=%0x",
+		     requesttype, rush_cmd.request, rush_cmd.value,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#498: FILE: drivers/usb/rush.c:212:
+		down(&(rush->lock));

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#501: FILE: drivers/usb/rush.c:215:
+						 usb_sndctrlpipe(rush-> rush_dev, 0),
 						                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#508: FILE: drivers/usb/rush.c:222:
+			if (result == -ETIMEDOUT)
[...]
+			else if (result < 0) {
[...]
+			} else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/usb/rush.c:226:
+				err("Error executing ioctrl. code = %d",
+				     le32_to_cpu(result));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/usb/rush.c:230:
+				dbg("Executed ioctl. Result = %d",
+				       le32_to_cpu(result));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#519: FILE: drivers/usb/rush.c:233:
+
+			}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#521: FILE: drivers/usb/rush.c:235:
+
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#522: FILE: drivers/usb/rush.c:236:
+		up(&(rush->lock));

CHECK:SPACING: No space is necessary after a cast
#523: FILE: drivers/usb/rush.c:237:
+		free_page((unsigned long) buffer);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#528: FILE: drivers/usb/rush.c:242:
+		return -ENOIOCTLCMD;
+		break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#534: FILE: drivers/usb/rush.c:248:
+	up(&(rush->lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/usb/rush.c:254:
+write_rush(struct file *file, const char *buffer,
+	  size_t count, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#540: FILE: drivers/usb/rush.c:254:
+	  size_t count, loff_t * ppos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: drivers/usb/rush.c:266:
+        /* Sanity check to make sure rush is connected, powered, etc */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: drivers/usb/rush.c:267:
+        if ( rush == NULL ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: drivers/usb/rush.c:267:
+        if ( rush == NULL ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#553: FILE: drivers/usb/rush.c:267:
+        if ( rush == NULL ||
[...]
+          return -1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#553: FILE: drivers/usb/rush.c:267:
+        if ( rush == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rush"
#553: FILE: drivers/usb/rush.c:267:
+        if ( rush == NULL ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: drivers/usb/rush.c:268:
+             rush->present == 0 ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/usb/rush.c:268:
+        if ( rush == NULL ||
+             rush->present == 0 ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: drivers/usb/rush.c:268:
+             rush->present == 0 ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: drivers/usb/rush.c:269:
+             rush->rush_dev == NULL )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: drivers/usb/rush.c:269:
+             rush->rush_dev == NULL )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#555: FILE: drivers/usb/rush.c:269:
+             rush->rush_dev == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rush->rush_dev"
#555: FILE: drivers/usb/rush.c:269:
+             rush->rush_dev == NULL )

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: drivers/usb/rush.c:270:
+          return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: drivers/usb/rush.c:270:
+          return -1;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#558: FILE: drivers/usb/rush.c:272:
+	down(&(rush->lock));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#564: FILE: drivers/usb/rush.c:278:
+		thistime = copy_size =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#577: FILE: drivers/usb/rush.c:291:
+				up(&(rush->lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#582: FILE: drivers/usb/rush.c:296:
+			result = usb_bulk_msg(rush->rush_dev,
+					 usb_sndbulkpipe(rush->rush_dev, 1),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: drivers/usb/rush.c:300:
+			dbg("write stats: result:%d thistime:%lu partial:%u",
+			     result, thistime, partial);

CHECK:BRACES: braces {} should be used on all arms of this statement
#588: FILE: drivers/usb/rush.c:302:
+			if (result == USB_ST_TIMEOUT) {	/* NAK - so hold for a while */
[...]
+			} else if (!result & partial) {
[...]
+			} else
[...]

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#593: FILE: drivers/usb/rush.c:307:
+				interruptible_sleep_on_timeout(&rush-> wait_q, NAK_TIMEOUT);
 				                                    ^

CHECK:BRACES: Unbalanced braces around else statement
#598: FILE: drivers/usb/rush.c:312:
+			} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#611: FILE: drivers/usb/rush.c:325:
+	up(&(rush->lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#616: FILE: drivers/usb/rush.c:330:
+	up(&(rush->lock));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#621: FILE: drivers/usb/rush.c:335:
+read_rush(struct file *file, char *buffer, size_t count, loff_t * ppos)

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/usb/rush.c:345:
+        /* Sanity check to make sure rush is connected, powered, etc */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/usb/rush.c:346:
+        if ( rush == NULL ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/usb/rush.c:346:
+        if ( rush == NULL ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#632: FILE: drivers/usb/rush.c:346:
+        if ( rush == NULL ||
[...]
+          return -1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#632: FILE: drivers/usb/rush.c:346:
+        if ( rush == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rush"
#632: FILE: drivers/usb/rush.c:346:
+        if ( rush == NULL ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/usb/rush.c:347:
+             rush->present == 0 ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/usb/rush.c:347:
+        if ( rush == NULL ||
+             rush->present == 0 ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/usb/rush.c:347:
+             rush->present == 0 ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: drivers/usb/rush.c:348:
+             rush->rush_dev == NULL )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/usb/rush.c:348:
+             rush->rush_dev == NULL )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#634: FILE: drivers/usb/rush.c:348:
+             rush->rush_dev == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rush->rush_dev"
#634: FILE: drivers/usb/rush.c:348:
+             rush->rush_dev == NULL )

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: drivers/usb/rush.c:349:
+          return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/usb/rush.c:349:
+          return -1;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#639: FILE: drivers/usb/rush.c:353:
+	down(&(rush->lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#643: FILE: drivers/usb/rush.c:357:
+			up(&(rush->lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#647: FILE: drivers/usb/rush.c:361:
+			up(&(rush->lock));

CHECK:SPACING: No space is necessary after a cast
#655: FILE: drivers/usb/rush.c:369:
+				      (int) (HZ * 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: drivers/usb/rush.c:372:
+		dbg(KERN_DEBUG "read stats: result:%d this_read:%u partial:%u",
+		       result, this_read, partial);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#661: FILE: drivers/usb/rush.c:375:
+			count = this_read = partial;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#664: FILE: drivers/usb/rush.c:378:
+				up(&(rush->lock));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_rush', this function's name, in a string
#665: FILE: drivers/usb/rush.c:379:
+				err("read_rush: maxretry timeout");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#672: FILE: drivers/usb/rush.c:386:
+			up(&(rush->lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/usb/rush.c:388:
+			err("Read Whoops - result:%u partial:%u this_read:%u",
+			     result, partial, this_read);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#676: FILE: drivers/usb/rush.c:390:
+			return -EIO;
+		} else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#677: FILE: drivers/usb/rush.c:391:
+			up(&(rush->lock));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#678: FILE: drivers/usb/rush.c:392:
+			return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#683: FILE: drivers/usb/rush.c:397:
+				up(&(rush->lock));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#691: FILE: drivers/usb/rush.c:405:
+	up(&(rush->lock));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: drivers/usb/rush.c:410:
+static void *probe_rush(struct usb_device *dev, unsigned int ifnum,
+		       const struct usb_device_id *id)

CHECK:SPACING: No space is necessary after a cast
#705: FILE: drivers/usb/rush.c:419:
+	if (!(rush->obuf = (char *) kmalloc(OBUF_SIZE, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#705: FILE: drivers/usb/rush.c:419:
+	if (!(rush->obuf = (char *) kmalloc(OBUF_SIZE, GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#705: FILE: drivers/usb/rush.c:419:
+	if (!(rush->obuf = (char *) kmalloc(OBUF_SIZE, GFP_KERNEL))) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe_rush', this function's name, in a string
#706: FILE: drivers/usb/rush.c:420:
+		err("probe_rush: Not enough memory for the output buffer");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe_rush', this function's name, in a string
#709: FILE: drivers/usb/rush.c:423:
+	dbg("probe_rush: obuf address:%p", rush->obuf);

CHECK:SPACING: No space is necessary after a cast
#711: FILE: drivers/usb/rush.c:425:
+	if (!(rush->ibuf = (char *) kmalloc(IBUF_SIZE, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#711: FILE: drivers/usb/rush.c:425:
+	if (!(rush->ibuf = (char *) kmalloc(IBUF_SIZE, GFP_KERNEL))) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#711: FILE: drivers/usb/rush.c:425:
+	if (!(rush->ibuf = (char *) kmalloc(IBUF_SIZE, GFP_KERNEL))) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe_rush', this function's name, in a string
#712: FILE: drivers/usb/rush.c:426:
+		err("probe_rush: Not enough memory for the input buffer");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe_rush', this function's name, in a string
#716: FILE: drivers/usb/rush.c:430:
+	dbg("probe_rush: ibuf address:%p", rush->ibuf);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rush->lock
#718: FILE: drivers/usb/rush.c:432:
+	init_MUTEX(&(rush->lock));

CHECK:SPACING: No space is necessary after a cast
#725: FILE: drivers/usb/rush.c:439:
+	struct rush_usb_data *rush = (struct rush_usb_data *) ptr;

WARNING:INDENTED_LABEL: labels should not be indented
#743: FILE: drivers/usb/rush.c:457:
+	read:		read_rush,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#744: FILE: drivers/usb/rush.c:458:
+	write:		write_rush,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#744: FILE: drivers/usb/rush.c:458:
+	write:		write_rush,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#745: FILE: drivers/usb/rush.c:459:
+	ioctl:		ioctl_rush,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#745: FILE: drivers/usb/rush.c:459:
+	ioctl:		ioctl_rush,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#746: FILE: drivers/usb/rush.c:460:
+	open:		open_rush,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#746: FILE: drivers/usb/rush.c:460:
+	open:		open_rush,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#747: FILE: drivers/usb/rush.c:461:
+	release:	close_rush,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#747: FILE: drivers/usb/rush.c:461:
+	release:	close_rush,

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#750: FILE: drivers/usb/rush.c:464:
+static struct usb_device_id rush_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#751: FILE: drivers/usb/rush.c:465:
+^I{ USB_DEVICE(0x04e8, 0x5600) }, ^I/* Rush */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: drivers/usb/rush.c:469:
+MODULE_DEVICE_TABLE (usb, rush_table);

WARNING:INDENTED_LABEL: labels should not be indented
#758: FILE: drivers/usb/rush.c:472:
+	name:		"Philips Rush",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#759: FILE: drivers/usb/rush.c:473:
+	probe:		probe_rush,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#759: FILE: drivers/usb/rush.c:473:
+	probe:		probe_rush,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#760: FILE: drivers/usb/rush.c:474:
+	disconnect:	disconnect_rush,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#760: FILE: drivers/usb/rush.c:474:
+	disconnect:	disconnect_rush,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#761: FILE: drivers/usb/rush.c:475:
+	fops:		&usb_rush_fops,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#761: FILE: drivers/usb/rush.c:475:
+	fops:		&usb_rush_fops,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#762: FILE: drivers/usb/rush.c:476:
+	minor:		RUSH_MINOR,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#762: FILE: drivers/usb/rush.c:476:
+	minor:		RUSH_MINOR,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#763: FILE: drivers/usb/rush.c:477:
+	id_table:	rush_table,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#763: FILE: drivers/usb/rush.c:477:
+	id_table:	rush_table,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#775: FILE: drivers/usb/rush.c:489:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#783: FILE: drivers/usb/rush.c:497:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#784: FILE: drivers/usb/rush.c:498:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#795: FILE: drivers/usb/rush_usb.h:1:
+/*  ----------------------------------------------------------------------

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#796: FILE: drivers/usb/rush_usb.h:2:
+/*  ----------------------------------------------------------------------
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#811: FILE: drivers/usb/rush_usb.h:17:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#812: FILE: drivers/usb/rush_usb.h:18:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#814: FILE: drivers/usb/rush_usb.h:20:
+    ---------------------------------------------------------------------- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#816: FILE: drivers/usb/rush_usb.h:22:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#821: FILE: drivers/usb/rush_usb.h:27:
+#define RUSH_DIR_OUT               ^I        0x0$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 50 errors, 56 warnings, 71 checks, 742 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
