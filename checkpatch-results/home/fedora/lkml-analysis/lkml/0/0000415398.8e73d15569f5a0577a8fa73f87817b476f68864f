ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#38: FILE: fs/nfs/mount_clnt.c:32:
+static struct rpc_clnt *	mnt_create(char *, struct sockaddr_in *,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#39: FILE: fs/nfs/mount_clnt.c:33:
+static struct rpc_clnt *	mnt_create(char *, struct sockaddr_in *,
+								int, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: fs/nfs/mount_clnt.c:46:
+nfsroot_mount(struct sockaddr_in *addr, char *path, struct nfs_fh *fh,
+		int version, int protocol)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#71: FILE: fs/nfs/mount_clnt.c:60:
+	if (!(mnt_clnt = mnt_create(hostname, addr, version, protocol)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: fs/nfs/mount_clnt.c:70:
+mnt_create(char *hostname, struct sockaddr_in *srvaddr, int version,
+		int protocol)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#89: FILE: fs/nfs/mount_clnt.c:75:
+	if (!(xprt = xprt_create_proto(protocol, srvaddr, NULL)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: fs/nfs/nfsroot.c:452:
+	status = nfsroot_mount(&sin, nfs_path, &nfs_data.root,
+							version, protocol);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: include/linux/nfs_fs.h:410:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sockaddr_in *' should also have an identifier name
#133: FILE: include/linux/nfs_fs.h:410:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#133: FILE: include/linux/nfs_fs.h:410:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_fh *' should also have an identifier name
#133: FILE: include/linux/nfs_fs.h:410:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#133: FILE: include/linux/nfs_fs.h:410:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#133: FILE: include/linux/nfs_fs.h:410:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: include/linux/nfs_fs.h:411:
+extern int  nfsroot_mount(struct sockaddr_in *, char *, struct nfs_fh *,
+		int, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 6 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000415398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
