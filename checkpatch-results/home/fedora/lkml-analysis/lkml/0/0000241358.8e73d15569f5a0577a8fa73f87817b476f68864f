WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
  o Fix build breakage related to hand-merging Brad Campbell's and Mark Lord's changes.

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#80: 
  o libata: SMART support via ATA pass-thru
                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#83: 
--- a/drivers/pci/quirks.c	2004-10-15 03:08:20 -04:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#110: FILE: drivers/scsi/Kconfig:409:
+config SCSI_SATA_AHCI
+	tristate "AHCI SATA support"
+	depends on SCSI_SATA && PCI && EXPERIMENTAL
+	help
+	  This option enables support for AHCI Serial ATA.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: drivers/scsi/ahci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#173: FILE: drivers/scsi/ahci.c:38:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: drivers/scsi/ahci.c:43:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'compliancy' may be misspelled - perhaps 'compliance'?
#203: FILE: drivers/scsi/ahci.c:68:
+	HOST_VERSION		= 0x10, /* AHCI spec. version compliancy */
 	            		                              ^^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: drivers/scsi/ahci.c:165:
+static u32 ahci_scr_read (struct ata_port *ap, unsigned int sc_reg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: drivers/scsi/ahci.c:166:
+static void ahci_scr_write (struct ata_port *ap, unsigned int sc_reg, u32 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: drivers/scsi/ahci.c:167:
+static int ahci_init_one (struct pci_dev *pdev, const struct pci_device_id *ent);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: drivers/scsi/ahci.c:169:
+static irqreturn_t ahci_interrupt (int irq, void *dev_instance, struct pt_regs *regs);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host_Template>
#315: FILE: drivers/scsi/ahci.c:180:
+static Scsi_Host_Template ahci_sht = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#377: FILE: drivers/scsi/ahci.c:242:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#385: FILE: drivers/scsi/ahci.c:250:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: drivers/scsi/ahci.c:251:
+static inline unsigned long ahci_port_base_ul (unsigned long base, unsigned int port)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#391: FILE: drivers/scsi/ahci.c:256:
+static inline void *ahci_port_base (void *base, unsigned int port)

CHECK:SPACING: No space is necessary after a cast
#393: FILE: drivers/scsi/ahci.c:258:
+	return (void *) ahci_port_base_ul((unsigned long)base, port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: drivers/scsi/ahci.c:264:
+	struct ahci_host_priv *hpriv = host_set->private_data;
+	kfree(hpriv);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: drivers/scsi/ahci.c:349:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#511: FILE: drivers/scsi/ahci.c:376:
+static u32 ahci_scr_read (struct ata_port *ap, unsigned int sc_reg_in)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#516: FILE: drivers/scsi/ahci.c:381:
+	case SCR_STATUS:	sc_reg = 0; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#517: FILE: drivers/scsi/ahci.c:382:
+	case SCR_CONTROL:	sc_reg = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#518: FILE: drivers/scsi/ahci.c:383:
+	case SCR_ERROR:		sc_reg = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#519: FILE: drivers/scsi/ahci.c:384:
+	case SCR_ACTIVE:	sc_reg = 3; break;

CHECK:SPACING: No space is necessary after a cast
#524: FILE: drivers/scsi/ahci.c:389:
+	return readl((void *) ap->ioaddr.scr_addr + (sc_reg * 4));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#527: FILE: drivers/scsi/ahci.c:392:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#528: FILE: drivers/scsi/ahci.c:393:
+static void ahci_scr_write (struct ata_port *ap, unsigned int sc_reg_in,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/scsi/ahci.c:394:
+static void ahci_scr_write (struct ata_port *ap, unsigned int sc_reg_in,
+			       u32 val)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#534: FILE: drivers/scsi/ahci.c:399:
+	case SCR_STATUS:	sc_reg = 0; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#535: FILE: drivers/scsi/ahci.c:400:
+	case SCR_CONTROL:	sc_reg = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#536: FILE: drivers/scsi/ahci.c:401:
+	case SCR_ERROR:		sc_reg = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#537: FILE: drivers/scsi/ahci.c:402:
+	case SCR_ACTIVE:	sc_reg = 3; break;

CHECK:SPACING: No space is necessary after a cast
#542: FILE: drivers/scsi/ahci.c:407:
+	writel(val, (void *) ap->ioaddr.scr_addr + (sc_reg * 4));

CHECK:SPACING: No space is necessary after a cast
#547: FILE: drivers/scsi/ahci.c:412:
+	void __iomem *port_mmio = (void __iomem *) ap->ioaddr.cmd_addr;

CHECK:SPACING: No space is necessary after a cast
#570: FILE: drivers/scsi/ahci.c:435:
+	void *mmio = (void *) ap->ioaddr.cmd_addr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: drivers/scsi/ahci.c:507:
+static inline void ahci_dma_complete (struct ata_port *ap,

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: drivers/scsi/ahci.c:508:
+                                     struct ata_queued_cmd *qc,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: drivers/scsi/ahci.c:508:
+static inline void ahci_dma_complete (struct ata_port *ap,
+                                     struct ata_queued_cmd *qc,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/scsi/ahci.c:508:
+                                     struct ata_queued_cmd *qc,$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#671: FILE: drivers/scsi/ahci.c:536:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#685: FILE: drivers/scsi/ahci.c:550:
+		udelay(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#696: FILE: drivers/scsi/ahci.c:561:
+	printk(KERN_WARNING "ata%u: error occurred, port reset\n", ap->port_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#711: FILE: drivers/scsi/ahci.c:576:
+		printk(KERN_ERR "ata%u: BUG: timeout without command\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: drivers/scsi/ahci.c:580:
+^I ^I * function from inside the ->eh_strategy_handler() thread.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#715: FILE: drivers/scsi/ahci.c:580:
+^I ^I * function from inside the ->eh_strategy_handler() thread.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/scsi/ahci.c:581:
+^I ^I * libata is the only user of ->eh_strategy_handler() in$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#716: FILE: drivers/scsi/ahci.c:581:
+^I ^I * libata is the only user of ->eh_strategy_handler() in$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/scsi/ahci.c:582:
+^I ^I * any kernel, so the default scsi_done() assumes it is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#717: FILE: drivers/scsi/ahci.c:582:
+^I ^I * any kernel, so the default scsi_done() assumes it is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: drivers/scsi/ahci.c:583:
+^I ^I * not being called from the SCSI EH.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: drivers/scsi/ahci.c:583:
+^I ^I * not being called from the SCSI EH.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: drivers/scsi/ahci.c:584:
+^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#719: FILE: drivers/scsi/ahci.c:584:
+^I ^I */$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#724: FILE: drivers/scsi/ahci.c:589:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#760: FILE: drivers/scsi/ahci.c:625:
+static irqreturn_t ahci_interrupt (int irq, void *dev_instance, struct pt_regs *regs)

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: drivers/scsi/ahci.c:644:
+        spin_lock(&host_set->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: drivers/scsi/ahci.c:644:
+        spin_lock(&host_set->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: drivers/scsi/ahci.c:646:
+        for (i = 0; i < host_set->n_ports; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: drivers/scsi/ahci.c:646:
+        for (i = 0; i < host_set->n_ports; i++) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#790: FILE: drivers/scsi/ahci.c:655:
+			struct ata_queued_cmd *qc;
+			qc = ata_qc_from_tag(ap, ap->active_tag);

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: drivers/scsi/ahci.c:666:
+        spin_unlock(&host_set->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/scsi/ahci.c:666:
+        spin_unlock(&host_set->lock);$

CHECK:SPACING: No space is necessary after a cast
#811: FILE: drivers/scsi/ahci.c:676:
+	void *mmio = (void *) ap->ioaddr.cmd_addr;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#844: FILE: drivers/scsi/ahci.c:709:
+	cap_save &= ( (1<<28) | (1<<17) );
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#844: FILE: drivers/scsi/ahci.c:709:
+	cap_save &= ( (1<<28) | (1<<17) );
 	                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#844: FILE: drivers/scsi/ahci.c:709:
+	cap_save &= ( (1<<28) | (1<<17) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#844: FILE: drivers/scsi/ahci.c:709:
+	cap_save &= ( (1<<28) | (1<<17) );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#862: FILE: drivers/scsi/ahci.c:727:
+		printk(KERN_ERR DRV_NAME "(%s): controller reset failed (0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#863: FILE: drivers/scsi/ahci.c:728:
+		printk(KERN_ERR DRV_NAME "(%s): controller reset failed (0x%x)\n",
+			pci_name(pdev), tmp);

CHECK:SPACING: No space is necessary after a cast
#868: FILE: drivers/scsi/ahci.c:733:
+	(void) readl(mmio + HOST_CTL);	/* flush */

CHECK:SPACING: No space is necessary after a cast
#871: FILE: drivers/scsi/ahci.c:736:
+	(void) readl(mmio + HOST_PORTS_IMPL);	/* flush */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#891: FILE: drivers/scsi/ahci.c:756:
+				printk(KERN_ERR DRV_NAME "(%s): 64-bit DMA enable failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: drivers/scsi/ahci.c:757:
+				printk(KERN_ERR DRV_NAME "(%s): 64-bit DMA enable failed\n",
+					pci_name(pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#901: FILE: drivers/scsi/ahci.c:766:
+			printk(KERN_ERR DRV_NAME "(%s): 32-bit DMA enable failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/scsi/ahci.c:767:
+			printk(KERN_ERR DRV_NAME "(%s): 32-bit DMA enable failed\n",
+				pci_name(pdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#907: FILE: drivers/scsi/ahci.c:772:
+			printk(KERN_ERR DRV_NAME "(%s): 32-bit consistent DMA enable failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: drivers/scsi/ahci.c:773:
+			printk(KERN_ERR DRV_NAME "(%s): 32-bit consistent DMA enable failed\n",
+				pci_name(pdev));

CHECK:SPACING: No space is necessary after a cast
#921: FILE: drivers/scsi/ahci.c:786:
+				(unsigned long) mmio, i);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#944: FILE: drivers/scsi/ahci.c:809:
+			msleep(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1010: FILE: drivers/scsi/ahci.c:875:
+	printk(KERN_INFO DRV_NAME "(%s) AHCI %02x%02x.%02x%02x "

WARNING:SPLIT_STRING: quoted string split across lines
#1011: FILE: drivers/scsi/ahci.c:876:
+	printk(KERN_INFO DRV_NAME "(%s) AHCI %02x%02x.%02x%02x "
+		"%u slots %u ports %s Gbps 0x%x impl\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: drivers/scsi/ahci.c:877:
+^I       ^I,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1012: FILE: drivers/scsi/ahci.c:877:
+^I       ^I,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1013: FILE: drivers/scsi/ahci.c:878:
+^I       ^Ipci_name(pdev),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1013: FILE: drivers/scsi/ahci.c:878:
+^I       ^Ipci_name(pdev),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: drivers/scsi/ahci.c:880:
+^I       ^I(vers >> 24) & 0xff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1015: FILE: drivers/scsi/ahci.c:880:
+^I       ^I(vers >> 24) & 0xff,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: drivers/scsi/ahci.c:881:
+^I       ^I(vers >> 16) & 0xff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1016: FILE: drivers/scsi/ahci.c:881:
+^I       ^I(vers >> 16) & 0xff,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: drivers/scsi/ahci.c:882:
+^I       ^I(vers >> 8) & 0xff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1017: FILE: drivers/scsi/ahci.c:882:
+^I       ^I(vers >> 8) & 0xff,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: drivers/scsi/ahci.c:883:
+^I       ^Ivers & 0xff,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1018: FILE: drivers/scsi/ahci.c:883:
+^I       ^Ivers & 0xff,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1025: FILE: drivers/scsi/ahci.c:890:
+	printk(KERN_INFO DRV_NAME "(%s) flags: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: drivers/scsi/ahci.c:891:
+^I       ^I"%s%s%s%s%s%s"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1026: FILE: drivers/scsi/ahci.c:891:
+^I       ^I"%s%s%s%s%s%s"$

WARNING:SPLIT_STRING: quoted string split across lines
#1026: FILE: drivers/scsi/ahci.c:891:
+	printk(KERN_INFO DRV_NAME "(%s) flags: "
+	       	"%s%s%s%s%s%s"

ERROR:CODE_INDENT: code indent should use tabs where possible
#1027: FILE: drivers/scsi/ahci.c:892:
+^I       ^I"%s%s%s%s%s%s%s\n"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1027: FILE: drivers/scsi/ahci.c:892:
+^I       ^I"%s%s%s%s%s%s%s\n"$

WARNING:SPLIT_STRING: quoted string split across lines
#1027: FILE: drivers/scsi/ahci.c:892:
+	       	"%s%s%s%s%s%s"
+	       	"%s%s%s%s%s%s%s\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#1028: FILE: drivers/scsi/ahci.c:893:
+^I       ^I,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1028: FILE: drivers/scsi/ahci.c:893:
+^I       ^I,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1029: FILE: drivers/scsi/ahci.c:894:
+^I       ^Ipci_name(pdev),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1029: FILE: drivers/scsi/ahci.c:894:
+^I       ^Ipci_name(pdev),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1048: FILE: drivers/scsi/ahci.c:913:
+static int ahci_init_one (struct pci_dev *pdev, const struct pci_device_id *ent)

CHECK:SPACING: No space is necessary after a cast
#1055: FILE: drivers/scsi/ahci.c:920:
+	unsigned int board_idx = (unsigned int) ent->driver_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1061: FILE: drivers/scsi/ahci.c:926:
+		printk(KERN_DEBUG DRV_NAME " version " DRV_VERSION "\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!probe_ent"
#1078: FILE: drivers/scsi/ahci.c:943:
+	if (probe_ent == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: drivers/scsi/ahci.c:953:
+^I^I            pci_resource_len(pdev, AHCI_PCI_BAR));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1088: FILE: drivers/scsi/ahci.c:953:
+	mmio_base = ioremap(pci_resource_start(pdev, AHCI_PCI_BAR),
+		            pci_resource_len(pdev, AHCI_PCI_BAR));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mmio_base"
#1089: FILE: drivers/scsi/ahci.c:954:
+	if (mmio_base == NULL) {

CHECK:SPACING: No space is necessary after a cast
#1093: FILE: drivers/scsi/ahci.c:958:
+	base = (unsigned long) mmio_base;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1108: FILE: drivers/scsi/ahci.c:973:
+       ^Iprobe_ent->irq = pdev->irq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1108: FILE: drivers/scsi/ahci.c:973:
+       ^Iprobe_ent->irq = pdev->irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1108: FILE: drivers/scsi/ahci.c:973:
+       ^Iprobe_ent->irq = pdev->irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1109: FILE: drivers/scsi/ahci.c:974:
+       ^Iprobe_ent->irq_flags = SA_SHIRQ;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1109: FILE: drivers/scsi/ahci.c:974:
+       ^Iprobe_ent->irq_flags = SA_SHIRQ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: drivers/scsi/ahci.c:974:
+       ^Iprobe_ent->irq_flags = SA_SHIRQ;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1139: FILE: drivers/scsi/ahci.c:1004:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1145: FILE: drivers/scsi/ahci.c:1010:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1151: FILE: drivers/scsi/ahci.c:1016:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1229: FILE: drivers/scsi/libata-core.c:1165:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1237: FILE: drivers/scsi/libata-core.c:1173:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1248: FILE: drivers/scsi/libata-core.c:1184:
+ * ^Iata_dev_config - Run device specific handlers and check for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1249: FILE: drivers/scsi/libata-core.c:1185:
+ * ^I^I^I SATA->PATA bridges$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1250: FILE: drivers/scsi/libata-core.c:1186:
+ * ^I@ap: Bus $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1250: FILE: drivers/scsi/libata-core.c:1186:
+ * ^I@ap: Bus $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1251: FILE: drivers/scsi/libata-core.c:1187:
+ * ^I@i:  Device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1253: FILE: drivers/scsi/libata-core.c:1189:
+ * ^ILOCKING:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: drivers/scsi/libata-core.c:1191:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1255: FILE: drivers/scsi/libata-core.c:1191:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1260: FILE: drivers/scsi/libata-core.c:1196:
+		printk(KERN_INFO "ata%u(%u): applying bridge limits\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: drivers/scsi/libata-core.c:1197:
+		printk(KERN_INFO "ata%u(%u): applying bridge limits\n",
+			ap->id, ap->device->devno);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1281: FILE: drivers/scsi/libata-core.c:1230:
+			ata_dev_config(ap,i);
 			                 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!argbuf"
#1371: FILE: drivers/scsi/libata-scsi.c:108:
+		if (argbuf == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1396: FILE: drivers/scsi/libata-scsi.c:133:
+	/* Good values for timeout and retries?  Values below
+	   from scsi_ioctl_send_command() for default case... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1396: FILE: drivers/scsi/libata-scsi.c:133:
+	   from scsi_ioctl_send_command() for default case... */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1397: FILE: drivers/scsi/libata-scsi.c:134:
+	scsi_wait_req(sreq, scsi_cmd, argbuf, argsize, (10*HZ), 5);
 	                                                  ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1407: FILE: drivers/scsi/libata-scsi.c:144:
+	if ((argbuf)
+	 && copy_to_user((void *)(arg + sizeof(args)), argbuf, argsize))

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1413: FILE: drivers/scsi/libata-scsi.c:150:
+	if (argbuf)
+		kfree(argbuf);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1461: FILE: drivers/scsi/libata-scsi.c:198:
+	/* Good values for timeout and retries?  Values below
+	   from scsi_ioctl_send_command() for default case... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1461: FILE: drivers/scsi/libata-scsi.c:198:
+	   from scsi_ioctl_send_command() for default case... */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1462: FILE: drivers/scsi/libata-scsi.c:199:
+	scsi_wait_req(sreq, scsi_cmd, NULL, 0, (10*HZ), 5);
 	                                          ^

WARNING:SPACING: space prohibited before semicolon
#1517: FILE: drivers/scsi/libata-scsi.c:485:
+	unsigned char *desc = sb + 8 ;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1528: FILE: drivers/scsi/libata-scsi.c:496:
+	if (unlikely(drv_stat & (ATA_BUSY | ATA_DF | ATA_ERR | ATA_DRQ))) {
[...]
+	} else {
[...]

WARNING:SPACING: space prohibited before semicolon
#1529: FILE: drivers/scsi/libata-scsi.c:497:
+		ata_to_sense_error(qc, drv_stat) ;

WARNING:SPACING: space prohibited before semicolon
#1531: FILE: drivers/scsi/libata-scsi.c:499:
+		sb[3] = sb[2] = sb[1] = 0x00 ;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1531: FILE: drivers/scsi/libata-scsi.c:499:
+		sb[3] = sb[2] = sb[1] = 0x00 ;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited before semicolon
#1538: FILE: drivers/scsi/libata-scsi.c:506:
+	sb[0] = 0x72 ;

WARNING:SPACING: space prohibited before semicolon
#1547: FILE: drivers/scsi/libata-scsi.c:515:
+	desc[1] = sb[7] = 14 ;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1547: FILE: drivers/scsi/libata-scsi.c:515:
+	desc[1] = sb[7] = 14 ;

WARNING:SPACING: space prohibited before semicolon
#1557: FILE: drivers/scsi/libata-scsi.c:525:
+	desc[2] = 0x00 ;

WARNING:SPACING: space prohibited before semicolon
#1559: FILE: drivers/scsi/libata-scsi.c:527:
+	desc[5] = tf->nsect ;

WARNING:SPACING: space prohibited before semicolon
#1560: FILE: drivers/scsi/libata-scsi.c:528:
+	desc[7] = tf->lbal ;

WARNING:SPACING: space prohibited before semicolon
#1561: FILE: drivers/scsi/libata-scsi.c:529:
+	desc[9] = tf->lbam ;

WARNING:SPACING: space prohibited before semicolon
#1562: FILE: drivers/scsi/libata-scsi.c:530:
+	desc[11] = tf->lbah ;

WARNING:SPACING: space prohibited before semicolon
#1563: FILE: drivers/scsi/libata-scsi.c:531:
+	desc[12] = tf->device ;

WARNING:SPACING: space prohibited before semicolon
#1564: FILE: drivers/scsi/libata-scsi.c:532:
+	desc[13] = drv_stat ;

WARNING:SPACING: space prohibited before semicolon
#1571: FILE: drivers/scsi/libata-scsi.c:539:
+		desc[2] |= 0x01 ;

WARNING:SPACING: space prohibited before semicolon
#1572: FILE: drivers/scsi/libata-scsi.c:540:
+		desc[4] = tf->hob_nsect ;

WARNING:SPACING: space prohibited before semicolon
#1573: FILE: drivers/scsi/libata-scsi.c:541:
+		desc[6] = tf->hob_lbal ;

WARNING:SPACING: space prohibited before semicolon
#1574: FILE: drivers/scsi/libata-scsi.c:542:
+		desc[8] = tf->hob_lbam ;

WARNING:SPACING: space prohibited before semicolon
#1575: FILE: drivers/scsi/libata-scsi.c:543:
+		desc[10] = tf->hob_lbah ;

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#1600: FILE: drivers/scsi/libata-scsi.c:856:
+	 * If this was a pass-thru command, and the user requested
 	                 ^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->cmnd[0] == ATA_16'
#1607: FILE: drivers/scsi/libata-scsi.c:863:
+	if (((cmd->cmnd[0] == ATA_16) || (cmd->cmnd[0] == ATA_12)) &&
+						(cmd->cmnd[2] & 0x20)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->cmnd[0] == ATA_12'
#1607: FILE: drivers/scsi/libata-scsi.c:863:
+	if (((cmd->cmnd[0] == ATA_16) || (cmd->cmnd[0] == ATA_12)) &&
+						(cmd->cmnd[2] & 0x20)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1608: FILE: drivers/scsi/libata-scsi.c:864:
+	if (((cmd->cmnd[0] == ATA_16) || (cmd->cmnd[0] == ATA_12)) &&
+						(cmd->cmnd[2] & 0x20)) {

WARNING:SPACING: space prohibited before semicolon
#1609: FILE: drivers/scsi/libata-scsi.c:865:
+		ata_pass_thru_cc(qc, drv_stat) ;

CHECK:SPACING: No space is necessary after a cast
#1697: FILE: drivers/scsi/libata-scsi.c:1144:
+		ata_dev_id_string(args->id, (unsigned char *) &rbuf[4],

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#1824: FILE: drivers/scsi/libata-scsi.c:1614:
+ *	ata_scsi_map_proto - Map pass-thru protocol value to taskfile value.
   	                         ^^^^^^^^^

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#1825: FILE: drivers/scsi/libata-scsi.c:1615:
+ *	@byte1: Byte 1 from pass-thru CDB.
   	                    ^^^^^^^^^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1833: FILE: drivers/scsi/libata-scsi.c:1623:
+	switch((byte1 & 0x1e) >> 1) {
+		case 3:		/* Non-data */
[...]
+		case 6:		/* DMA */
[...]
+		case 4:		/* PIO Data-in */
+		case 5:		/* PIO Data-out */
[...]
+		case 10:	/* Device Reset */
+		case 0:		/* Hard Reset */
+		case 1:		/* SRST */
+		case 2:		/* Bus Idle */
+		case 7:		/* Packet */
+		case 8:		/* DMA Queued */
+		case 9:		/* Device Diagnostic */
+		case 11:	/* UDMA Data-in */
+		case 12:	/* UDMA Data-Out */
+		case 13:	/* FPDMA */
+		default:	/* Reserved */

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#1833: FILE: drivers/scsi/libata-scsi.c:1623:
+	switch((byte1 & 0x1e) >> 1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1842: FILE: drivers/scsi/libata-scsi.c:1632:
+			if (byte1 & 0xe0) {
+				return ATA_PROT_PIO_MULT;
+			}

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#1865: FILE: drivers/scsi/libata-scsi.c:1655:
+ *	ata_scsi_pass_thru - convert ATA pass-thru CDB to taskfile
   	                                 ^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around qc->tf
#1877: FILE: drivers/scsi/libata-scsi.c:1667:
+	struct ata_taskfile *tf = &(qc->tf);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1880: FILE: drivers/scsi/libata-scsi.c:1670:
+	if ((tf->protocol = ata_scsi_map_proto(scsicmd[1])) == ATA_PROT_UNKNOWN) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1880: FILE: drivers/scsi/libata-scsi.c:1670:
+	if ((tf->protocol = ata_scsi_map_proto(scsicmd[1])) == ATA_PROT_UNKNOWN) {
+		return 1;
+	}

WARNING:SPACING: space prohibited before semicolon
#1900: FILE: drivers/scsi/libata-scsi.c:1690:
+			tf->flags |= ATA_TFLAG_LBA48 ;

WARNING:SPACING: space prohibited before semicolon
#1902: FILE: drivers/scsi/libata-scsi.c:1692:
+			tf->flags &= ~ATA_TFLAG_LBA48 ;

WARNING:SPACING: space prohibited before semicolon
#1919: FILE: drivers/scsi/libata-scsi.c:1709:
+		tf->flags &= ~ATA_TFLAG_LBA48 ;

WARNING:SPACING: space prohibited before semicolon
#1935: FILE: drivers/scsi/libata-scsi.c:1725:
+	tf->flags |= (ATA_TFLAG_ISADDR | ATA_TFLAG_DEVICE) ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1937: FILE: drivers/scsi/libata-scsi.c:1727:
+	if (cmd->sc_data_direction == SCSI_DATA_WRITE) {
+		tf->flags |= ATA_TFLAG_WRITE;
+	}

WARNING:SPACING: space prohibited before semicolon
#1947: FILE: drivers/scsi/libata-scsi.c:1737:
+	qc->nsect = cmd->bufflen / ATA_SECT_SIZE ;

WARNING:SPACING: space prohibited before semicolon
#1962: FILE: drivers/scsi/libata-scsi.c:1777:
+		return ata_scsi_pass_thru ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1993: FILE: drivers/scsi/libata-scsi.c:1872:
+void ata_scsi_simulate(u16 *id,
+		      struct scsi_cmnd *cmd,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2024: FILE: drivers/scsi/libata.h:45:
+extern int ata_task_ioctl(struct scsi_device *scsidev, void __user *arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2025: FILE: drivers/scsi/libata.h:46:
+extern int ata_cmd_ioctl(struct scsi_device *scsidev, void __user *arg);

CHECK:SPACING: No space is necessary after a cast
#2064: FILE: drivers/scsi/sata_promise.c:258:
+	void *mmio = (void *) ap->ioaddr.cmd_addr + PDC_CTLSTAT + 0x03;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2067: FILE: drivers/scsi/sata_promise.c:261:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2068: FILE: drivers/scsi/sata_promise.c:262:
+	if (tmp & 0x01)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2073: FILE: drivers/scsi/sata_promise.c:267:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2076: FILE: drivers/scsi/sata_promise.c:270:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2082: FILE: drivers/scsi/sata_promise.c:276:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2101: FILE: drivers/scsi/sata_promise.c:641:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2109: FILE: drivers/scsi/sata_promise.c:652:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2116: FILE: drivers/scsi/sata_promise.c:658:
+		tmp = readb(base + PDC_FLASH_CTL+1);
 		                                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2117: FILE: drivers/scsi/sata_promise.c:659:
+		if (!(tmp & 0x80))
+		{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2120: FILE: drivers/scsi/sata_promise.c:662:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2124: FILE: drivers/scsi/sata_promise.c:666:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2125: FILE: drivers/scsi/sata_promise.c:667:
+			printk(KERN_INFO DRV_NAME " PATA port found\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2127: FILE: drivers/scsi/sata_promise.c:669:
+		}
+		else

ERROR:CODE_INDENT: code indent should use tabs where possible
#2128: FILE: drivers/scsi/sata_promise.c:670:
+       ^I^I^Iprobe_ent->n_ports = 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2128: FILE: drivers/scsi/sata_promise.c:670:
+       ^I^I^Iprobe_ent->n_ports = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2128: FILE: drivers/scsi/sata_promise.c:670:
+       ^I^I^Iprobe_ent->n_ports = 2;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2151: FILE: drivers/scsi/sata_vsc.c:336:
+^I/* $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2199: FILE: include/linux/ata.h:232:
+#define ata_id_u32(id,n)	\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#2199: FILE: include/linux/ata.h:232:
+#define ata_id_u32(id,n)	\
+	(((u32) (id)[(n) + 1] << 16) | ((u32) (id)[(n)]))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#2199: FILE: include/linux/ata.h:232:
+#define ata_id_u32(id,n)	\
+	(((u32) (id)[(n) + 1] << 16) | ((u32) (id)[(n)]))

CHECK:SPACING: No space is necessary after a cast
#2200: FILE: include/linux/ata.h:233:
+	(((u32) (id)[(n) + 1] << 16) | ((u32) (id)[(n)]))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2201: FILE: include/linux/ata.h:234:
+#define ata_id_u64(id,n)	\
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#2201: FILE: include/linux/ata.h:234:
+#define ata_id_u64(id,n)	\
+	( ((u64) (id)[(n) + 3] << 48) |	\
+	  ((u64) (id)[(n) + 2] << 32) |	\
+	  ((u64) (id)[(n) + 1] << 16) |	\
+	  ((u64) (id)[(n) + 0]) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#2201: FILE: include/linux/ata.h:234:
+#define ata_id_u64(id,n)	\
+	( ((u64) (id)[(n) + 3] << 48) |	\
+	  ((u64) (id)[(n) + 2] << 32) |	\
+	  ((u64) (id)[(n) + 1] << 16) |	\
+	  ((u64) (id)[(n) + 0]) )

CHECK:SPACING: No space is necessary after a cast
#2202: FILE: include/linux/ata.h:235:
+	( ((u64) (id)[(n) + 3] << 48) |	\

ERROR:SPACING: space prohibited after that open parenthesis '('
#2202: FILE: include/linux/ata.h:235:
+	( ((u64) (id)[(n) + 3] << 48) |	\

CHECK:SPACING: No space is necessary after a cast
#2203: FILE: include/linux/ata.h:236:
+	  ((u64) (id)[(n) + 2] << 32) |	\

CHECK:SPACING: No space is necessary after a cast
#2204: FILE: include/linux/ata.h:237:
+	  ((u64) (id)[(n) + 1] << 16) |	\

CHECK:SPACING: No space is necessary after a cast
#2205: FILE: include/linux/ata.h:238:
+	  ((u64) (id)[(n) + 0]) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2205: FILE: include/linux/ata.h:238:
+	  ((u64) (id)[(n) + 0]) )

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2225: FILE: include/linux/libata.h:409:
+extern void ata_dev_id_string(u16 *id, unsigned char *s,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2227: FILE: include/linux/libata.h:411:
+extern void ata_dev_config(struct ata_port *ap, unsigned int i);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2236: FILE: include/linux/libata.h:422:
+extern void ata_scsi_simulate(u16 *id,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#2238: FILE: include/linux/libata.h:424:
+			      void (*done)(struct scsi_cmnd *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#2263: FILE: include/scsi/scsi.h:117:
+#define	ATA_16		      0x85	/* 16-byte pass-thru [0x85 == unused]*/
        	      		          	           ^^^^^^^^^

WARNING:TYPO_SPELLING: 'pass-thru' may be misspelled - perhaps 'pass-through'?
#2264: FILE: include/scsi/scsi.h:118:
+#define	ATA_12		      0xb3	/* 12-byte pass-thru [0xb3 == obsolete set limits command] */
        	      		          	           ^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#2264: FILE: include/scsi/scsi.h:118:
+#define	ATA_12		      0xb3	/* 12-byte pass-thru [0xb3 == obsolete set limits command] */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 57 errors, 106 warnings, 64 checks, 2084 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
