WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#38: 
  Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#86: FILE: drivers/input/gameport/gameport.c:32:
+EXPORT_SYMBOL(__gameport_register_port);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#122: FILE: drivers/input/gameport/gameport.c:125:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: drivers/input/gameport/gameport.c:158:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/input/gameport/gameport.c:184:
+static void gameport_queue_event(void *object, struct module *owner,
+			      enum gameport_event_type event_type)

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/input/gameport/gameport.c:192:
+ ^I * Scan event list for the other events for the same gameport port,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/input/gameport/gameport.c:192:
+ ^I * Scan event list for the other events for the same gameport port,$

WARNING:TYPO_SPELLING: 'preseve' may be misspelled - perhaps 'preserve'?
#196: FILE: drivers/input/gameport/gameport.c:196:
+	 * we need to preseve sequence of distinct events.
 	              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/input/gameport/gameport.c:197:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/input/gameport/gameport.c:197:
+ ^I */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#208: FILE: drivers/input/gameport/gameport.c:206:
+	if ((event = kmalloc(sizeof(struct gameport_event), GFP_ATOMIC))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*event)...) over kmalloc(sizeof(struct gameport_event)...)
#208: FILE: drivers/input/gameport/gameport.c:206:
+	if ((event = kmalloc(sizeof(struct gameport_event), GFP_ATOMIC))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#210: FILE: drivers/input/gameport/gameport.c:208:
+			printk(KERN_WARNING "gameport: Can't get module reference, dropping event %d\n", event_type);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#210: FILE: drivers/input/gameport/gameport.c:208:
+			printk(KERN_WARNING "gameport: Can't get module reference, dropping event %d\n", event_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#221: FILE: drivers/input/gameport/gameport.c:219:
+		printk(KERN_ERR "gameport: Not enough memory to queue event %d\n", event_type);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: drivers/input/gameport/gameport.c:258:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#294: FILE: drivers/input/gameport/gameport.c:289:
+	while ((event = gameport_get_event())) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#295: FILE: drivers/input/gameport/gameport.c:290:
+		switch (event->type) {
+			case GAMEPORT_REGISTER_PORT:
[...]
+			case GAMEPORT_RECONNECT:
[...]
+			case GAMEPORT_RESCAN:
[...]
+			case GAMEPORT_REGISTER_DRIVER:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#389: FILE: drivers/input/gameport/gameport.c:384:
+	printk(KERN_DEBUG "gameport: kgameportd exiting\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#395: FILE: drivers/input/gameport/gameport.c:390:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#403: FILE: drivers/input/gameport/gameport.c:398:
+	struct gameport *gameport = to_gameport_port(dev);
+	return sprintf(buf, "%s\n", gameport->name);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#424: FILE: drivers/input/gameport/gameport.c:419:
+	} else if ((drv = driver_find(buf, &gameport_bus)) != NULL) {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#438: FILE: drivers/input/gameport/gameport.c:433:
+	__ATTR(description, S_IRUGO, gameport_show_description, NULL),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#439: FILE: drivers/input/gameport/gameport.c:434:
+	__ATTR(drvctl, S_IWUSR, NULL, gameport_rebind_driver),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#504: FILE: drivers/input/gameport/gameport.c:488:
+		printk(KERN_INFO "gameport: %s is %s, io %#x, speed %dkHz\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/input/gameport/gameport.c:489:
+		printk(KERN_INFO "gameport: %s is %s, io %#x, speed %dkHz\n",
+			gameport->name, gameport->phys, gameport->io, gameport->speed);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#507: FILE: drivers/input/gameport/gameport.c:491:
+		printk(KERN_INFO "gameport: %s is %s, speed %dkHz\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/input/gameport/gameport.c:492:
+		printk(KERN_INFO "gameport: %s is %s, speed %dkHz\n",
+			gameport->name, gameport->phys, gameport->speed);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#550: FILE: drivers/input/gameport/gameport.c:533:
+		if (!gameport->drv || !gameport->drv->reconnect || gameport->drv->reconnect(gameport)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 35)
#574: FILE: drivers/input/gameport/gameport.c:557:
+		for (s = gameport; s->child; s = s->child)
+			/* empty */;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#622: FILE: drivers/input/gameport/gameport.c:605:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#712: FILE: drivers/input/gameport/gameport.c:684:
 {
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#715: FILE: drivers/input/gameport/gameport.c:686:
+		if (gameport->open(gameport, mode)) {
 			return -1;
+		}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#742: FILE: drivers/input/gameport/gameport.c:707:
+	if (!(gameport_pid = kernel_thread(gameport_thread, NULL, CLONE_KERNEL))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#743: FILE: drivers/input/gameport/gameport.c:708:
+		printk(KERN_ERR "gameport: Failed to start kgameportd\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#795: FILE: include/linux/gameport.h:44:
 };
+#define to_gameport_port(d)	container_of(d, struct gameport, dev)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gameport *' should also have an identifier name
#803: FILE: include/linux/gameport.h:52:
+	int (*reconnect)(struct gameport *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#841: FILE: include/linux/gameport.h:87:
+	strlcpy(gameport->name, name, sizeof(gameport->name));

WARNING:TYPO_SPELLING: 'fucntions' may be misspelled - perhaps 'functions'?
#850: FILE: include/linux/gameport.h:94:
+ * Use the following fucntions to pin gameport's driver in process context
                      ^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 21 warnings, 12 checks, 844 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207639.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
