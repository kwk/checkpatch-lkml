WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
	ftp://ftp.us.kernel.org/pub/linux/kernel/people/andrea/kernels/v2.4/2.4.10pre11aa1/00_rwsem-19

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#233: FILE: include/asm-alpha/rwsem_xchgadd.h:1:
+#ifndef _ALPHA_RWSEM_XCHGADD_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: include/asm-alpha/rwsem_xchgadd.h:22:
+static inline long rwsem_xchgadd(long value, long * count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#494: FILE: include/asm-i386/rwsem_xchgadd.h:1:
+#ifndef _X86_RWSEM_XCHGADD_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: include/asm-i386/rwsem_xchgadd.h:9:
+^I^I^I     ".section .text.lock,\"ax\"\n" $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#560: FILE: include/asm-i386/rwsem_xchgadd.h:67:
+}
+static inline void __up_write(struct rw_semaphore *sem)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#579: FILE: include/asm-i386/rwsem_xchgadd.h:86:
+static inline long rwsem_xchgadd(long value, long * count)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#746: FILE: include/linux/rwsem_spinlock.h:1:
+#ifndef _LINUX_RWSEM_SPINLOCK_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#753: FILE: include/linux/rwsem_spinlock.h:8:
+struct rw_semaphore
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#754: FILE: include/linux/rwsem_spinlock.h:9:
+	spinlock_t lock;

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#757: FILE: include/linux/rwsem_spinlock.h:12:
+#define RWSEM_WRITE_BIAS (~(~0UL >> (BITS_PER_LONG>>1)))
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#765: FILE: include/linux/rwsem_spinlock.h:20:
+#define __SEM_DEBUG_INIT(name) \
+	, (long)&(name).__magic

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#767: FILE: include/linux/rwsem_spinlock.h:22:
+#define RWSEM_MAGIC(x)							\
+	do {								\
+		if ((x) != (long)&(x)) {				\
+			printk("rwsem bad magic %lx (should be %lx), ",	\
+				(long)x, (long)&(x));			\
+			BUG();						\
+		}							\
+	} while (0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#770: FILE: include/linux/rwsem_spinlock.h:25:
+			printk("rwsem bad magic %lx (should be %lx), ",	\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#772: FILE: include/linux/rwsem_spinlock.h:27:
+			BUG();						\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#780: FILE: include/linux/rwsem_spinlock.h:35:
+#define __RWSEM_INITIALIZER(name, count)	\
+{						\
+	SPIN_LOCK_UNLOCKED,			\
+	(count),				\
+	LIST_HEAD_INIT((name).wait)		\
+	__SEM_DEBUG_INIT(name)			\
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#787: FILE: include/linux/rwsem_spinlock.h:42:
+}
+#define RWSEM_INITIALIZER(name) __RWSEM_INITIALIZER(name, 0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#789: FILE: include/linux/rwsem_spinlock.h:44:
+#define __DECLARE_RWSEM(name, count) \
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name, count)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#795: FILE: include/linux/rwsem_spinlock.h:50:
+#define RWSEM_READ_BLOCKING_BIAS (RWSEM_WRITE_BIAS-RWSEM_READ_BIAS)
                                                   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#801: FILE: include/linux/rwsem_spinlock.h:56:
+extern void FASTCALL(init_rwsem(struct rw_semaphore *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#801: FILE: include/linux/rwsem_spinlock.h:56:
+extern void FASTCALL(init_rwsem(struct rw_semaphore *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#802: FILE: include/linux/rwsem_spinlock.h:57:
+extern void FASTCALL(down_read(struct rw_semaphore *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#802: FILE: include/linux/rwsem_spinlock.h:57:
+extern void FASTCALL(down_read(struct rw_semaphore *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#803: FILE: include/linux/rwsem_spinlock.h:58:
+extern void FASTCALL(down_write(struct rw_semaphore *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#803: FILE: include/linux/rwsem_spinlock.h:58:
+extern void FASTCALL(down_write(struct rw_semaphore *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#804: FILE: include/linux/rwsem_spinlock.h:59:
+extern void FASTCALL(up_read(struct rw_semaphore *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#804: FILE: include/linux/rwsem_spinlock.h:59:
+extern void FASTCALL(up_read(struct rw_semaphore *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: include/linux/rwsem_spinlock.h:60:
+extern void FASTCALL(up_write(struct rw_semaphore *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#805: FILE: include/linux/rwsem_spinlock.h:60:
+extern void FASTCALL(up_write(struct rw_semaphore *));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#812: FILE: include/linux/rwsem_xchgadd.h:1:
+#ifndef _LINUX_RWSEM_XCHGADD_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#818: FILE: include/linux/rwsem_xchgadd.h:7:
+struct rw_semaphore
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#820: FILE: include/linux/rwsem_xchgadd.h:9:
+	spinlock_t lock;

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#822: FILE: include/linux/rwsem_xchgadd.h:11:
+#define RWSEM_WRITE_BIAS (~(~0UL >> (BITS_PER_LONG>>1)))
                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#830: FILE: include/linux/rwsem_xchgadd.h:19:
+#define __SEM_DEBUG_INIT(name) \
+	, (int)&(name).__magic

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#832: FILE: include/linux/rwsem_xchgadd.h:21:
+#define RWSEM_MAGIC(x)							\
+	do {								\
+		if ((x) != (long)&(x)) {				\
+			printk("rwsem bad magic %lx (should be %lx), ",	\
+				(long)x, (long)&(x));			\
+			BUG();						\
+		}							\
+	} while (0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#835: FILE: include/linux/rwsem_xchgadd.h:24:
+			printk("rwsem bad magic %lx (should be %lx), ",	\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#837: FILE: include/linux/rwsem_xchgadd.h:26:
+			BUG();						\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#845: FILE: include/linux/rwsem_xchgadd.h:34:
+#define __RWSEM_INITIALIZER(name, count)	\
+{						\
+	(count),				\
+	SPIN_LOCK_UNLOCKED,			\
+	LIST_HEAD_INIT((name).wait)		\
+	__SEM_DEBUG_INIT(name)			\
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#852: FILE: include/linux/rwsem_xchgadd.h:41:
+}
+#define RWSEM_INITIALIZER(name) __RWSEM_INITIALIZER(name, 0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#854: FILE: include/linux/rwsem_xchgadd.h:43:
+#define __DECLARE_RWSEM(name, count) \
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name, count)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#858: FILE: include/linux/rwsem_xchgadd.h:47:
+#define DECLARE_RWSEM_WRITE_LOCKED(name) __DECLARE_RWSEM(name, RWSEM_WRITE_BIAS+RWSEM_READ_BIAS)
                                                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#860: FILE: include/linux/rwsem_xchgadd.h:49:
+#define RWSEM_READ_BLOCKING_BIAS (RWSEM_WRITE_BIAS-RWSEM_READ_BIAS)
                                                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#872: FILE: include/linux/rwsem_xchgadd.h:61:
+extern struct rw_semaphore * FASTCALL(rwsem_down_failed(struct rw_semaphore *, long));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#872: FILE: include/linux/rwsem_xchgadd.h:61:
+extern struct rw_semaphore * FASTCALL(rwsem_down_failed(struct rw_semaphore *, long));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#872: FILE: include/linux/rwsem_xchgadd.h:61:
+extern struct rw_semaphore * FASTCALL(rwsem_down_failed(struct rw_semaphore *, long));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#872: FILE: include/linux/rwsem_xchgadd.h:61:
+extern struct rw_semaphore * FASTCALL(rwsem_down_failed(struct rw_semaphore *, long));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#873: FILE: include/linux/rwsem_xchgadd.h:62:
+extern struct rw_semaphore * FASTCALL(rwsem_wake(struct rw_semaphore *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#873: FILE: include/linux/rwsem_xchgadd.h:62:
+extern struct rw_semaphore * FASTCALL(rwsem_wake(struct rw_semaphore *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rw_semaphore *' should also have an identifier name
#873: FILE: include/linux/rwsem_xchgadd.h:62:
+extern struct rw_semaphore * FASTCALL(rwsem_wake(struct rw_semaphore *));

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#924: FILE: include/linux/sched.h:242:
+	mmap_sem:	RWSEM_INITIALIZER(name.mmap_sem), \
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#924: FILE: include/linux/sched.h:242:
+	mmap_sem:	RWSEM_INITIALIZER(name.mmap_sem), \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1165: FILE: lib/rwsem_spinlock.c:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1176: FILE: lib/rwsem_spinlock.c:12:
+	struct task_struct * task;

ERROR:SPACING: space required before the open parenthesis '('
#1197: FILE: lib/rwsem_spinlock.c:33:
+	} while(wait.task_list.next);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1203: FILE: lib/rwsem_spinlock.c:39:
+	struct list_head * entry, * head = &sem->wait;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1203: FILE: lib/rwsem_spinlock.c:39:
+	struct list_head * entry, * head = &sem->wait;
 	                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1207: FILE: lib/rwsem_spinlock.c:43:
+		struct rwsem_wait_queue * wait;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: lib/rwsem_spinlock.c:58:
+^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1241: FILE: lib/rwsem_spinlock.c:77:
+	int count;
+	CHECK_MAGIC(sem->__magic);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1254: FILE: lib/rwsem_spinlock.c:90:
+	long count;
+	CHECK_MAGIC(sem->__magic);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1286: FILE: lib/rwsem_spinlock.c:122:
+EXPORT_SYMBOL(init_rwsem);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1287: FILE: lib/rwsem_spinlock.c:123:
+EXPORT_SYMBOL(down_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1288: FILE: lib/rwsem_spinlock.c:124:
+EXPORT_SYMBOL(down_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1289: FILE: lib/rwsem_spinlock.c:125:
+EXPORT_SYMBOL(up_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1290: FILE: lib/rwsem_spinlock.c:126:
+EXPORT_SYMBOL(up_write);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1295: FILE: lib/rwsem_xchgadd.c:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1306: FILE: lib/rwsem_xchgadd.c:12:
+	struct task_struct * task;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1313: FILE: lib/rwsem_xchgadd.c:19:
+	struct list_head * entry, * head = &sem->wait;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1313: FILE: lib/rwsem_xchgadd.c:19:
+	struct list_head * entry, * head = &sem->wait;
 	                          ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1317: FILE: lib/rwsem_xchgadd.c:23:
+		struct rwsem_wait_queue * wait;

WARNING:INDENTED_LABEL: labels should not be indented
#1328: FILE: lib/rwsem_xchgadd.c:34:
+	again:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1336: FILE: lib/rwsem_xchgadd.c:42:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1340: FILE: lib/rwsem_xchgadd.c:46:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1347: FILE: lib/rwsem_xchgadd.c:53:
+struct rw_semaphore * rwsem_down_failed(struct rw_semaphore *sem, long retire)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1376: FILE: lib/rwsem_xchgadd.c:82:
+struct rw_semaphore * rwsem_wake(struct rw_semaphore *sem)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1385: FILE: lib/rwsem_xchgadd.c:91:
+EXPORT_SYMBOL_NOVERS(rwsem_down_failed);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1386: FILE: lib/rwsem_xchgadd.c:92:
+EXPORT_SYMBOL_NOVERS(rwsem_wake);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000512680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 30 warnings, 23 checks, 734 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000512680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
