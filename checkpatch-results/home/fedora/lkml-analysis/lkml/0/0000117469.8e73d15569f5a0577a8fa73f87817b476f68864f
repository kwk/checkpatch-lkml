WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#30: 
> IIRC, SRAT is just for booting time. So, when hotplug occured,
                                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#59: FILE: arch/ia64/kernel/acpi.c:410:
 static u32 __devinitdata pxm_flag[PXM_FLAG_LEN];

ERROR:SPACING: space required after that ',' (ctx:VxV)
#61: FILE: arch/ia64/kernel/acpi.c:412:
+#define pxm_bit_clear(bit)	(clear_bit(bit,(void *)pxm_flag))
                           	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#64: FILE: arch/ia64/kernel/acpi.c:415:
 int __devinitdata pxm_to_nid_map[MAX_PXM_DOMAINS];

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#66: FILE: arch/ia64/kernel/acpi.c:416:
+int __devinitdata nid_to_pxm_map[MAX_NUMNODES];

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#74: FILE: arch/ia64/kernel/acpi.c:452:
+int __devinit

CHECK:BRACES: braces {} should be used on all arms of this statement
#80: FILE: arch/ia64/kernel/acpi.c:458:
+	if (pxm_to_nid_map[pxm] != -1)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#82: FILE: arch/ia64/kernel/acpi.c:460:
+	else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#98: FILE: arch/ia64/kernel/acpi.c:476:
+{
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node_items[nid].num_cpus == 0'
#99: FILE: arch/ia64/kernel/acpi.c:477:
+	if ((node_items[nid].num_cpus == 0) &&
+	    (node_items[nid].num_memblks == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'node_items[nid].num_memblks == 0'
#99: FILE: arch/ia64/kernel/acpi.c:477:
+	if ((node_items[nid].num_cpus == 0) &&
+	    (node_items[nid].num_memblks == 0))

ERROR:SPACING: space required before the open brace '{'
#161: FILE: arch/ia64/kernel/acpi.c:800:
+	if ((pxm_id >= 0) && (pxm_id < MAX_PXM_DOMAINS)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pxm_id >= 0'
#161: FILE: arch/ia64/kernel/acpi.c:800:
+	if ((pxm_id >= 0) && (pxm_id < MAX_PXM_DOMAINS)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pxm_id < MAX_PXM_DOMAINS'
#161: FILE: arch/ia64/kernel/acpi.c:800:
+	if ((pxm_id >= 0) && (pxm_id < MAX_PXM_DOMAINS)){

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#225: FILE: include/asm-ia64/acpi.h:113:
 extern int __devinitdata pxm_to_nid_map[MAX_PXM_DOMAINS];

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#227: FILE: include/asm-ia64/acpi.h:114:
+extern int __devinitdata nid_to_pxm_map[MAX_NUMNODES];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: include/asm-ia64/numa.h:77:
+extern int acpi_map_pxm_to_nid(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#254: FILE: include/asm-ia64/numa.h:77:
+extern int acpi_map_pxm_to_nid(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/asm-ia64/numa.h:78:
+extern void acpi_unmap_pxm_to_nid(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#255: FILE: include/asm-ia64/numa.h:78:
+extern void acpi_unmap_pxm_to_nid(int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117469.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 9 checks, 196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000117469.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
