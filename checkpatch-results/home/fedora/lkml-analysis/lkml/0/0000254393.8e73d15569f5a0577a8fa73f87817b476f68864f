WARNING:TYPO_SPELLING: 'contraints' may be misspelled - perhaps 'constraints'?
#43: 
these contraints.
      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: arch/ppc64/mm/hugetlbpage.c:530:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#71: FILE: arch/ppc64/mm/hugetlbpage.c:539:
+arch_get_unmapped_area_topdown(struct file *filp, const unsigned long addr0,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: arch/ppc64/mm/hugetlbpage.c:540:
+arch_get_unmapped_area_topdown(struct file *filp, const unsigned long addr0,
+			  const unsigned long len, const unsigned long pgoff,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: arch/ppc64/mm/hugetlbpage.c:561:
+		if (TASK_SIZE - len >= addr &&
+				(!vma || addr + len <= vma->vm_start)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#94: FILE: arch/ppc64/mm/hugetlbpage.c:562:
+				(!vma || addr + len <= vma->vm_start)
+				&& !is_hugepage_only_range(addr,len))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: arch/ppc64/mm/hugetlbpage.c:562:
+				&& !is_hugepage_only_range(addr,len))
 				                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#103: FILE: arch/ppc64/mm/hugetlbpage.c:571:
+	/* either no address requested or cant fit in requested address hole */
 	                                  ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/ppc64/mm/hugetlbpage.c:586:
+ ^I ^Iif (!(vma = find_vma_prev(mm, addr, &prev_vma)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: arch/ppc64/mm/hugetlbpage.c:586:
+ ^I ^Iif (!(vma = find_vma_prev(mm, addr, &prev_vma)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/ppc64/mm/hugetlbpage.c:586:
+ ^I ^Iif (!(vma = find_vma_prev(mm, addr, &prev_vma)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#118: FILE: arch/ppc64/mm/hugetlbpage.c:586:
+ 	 	if (!(vma = find_vma_prev(mm, addr, &prev_vma)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#125: FILE: arch/ppc64/mm/hugetlbpage.c:593:
+		if (addr+len <= vma->vm_start &&
 		        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= prev_vma->vm_end'
#125: FILE: arch/ppc64/mm/hugetlbpage.c:593:
+		if (addr+len <= vma->vm_start &&
+				(!prev_vma || (addr >= prev_vma->vm_end)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: arch/ppc64/mm/hugetlbpage.c:594:
+		if (addr+len <= vma->vm_start &&
+				(!prev_vma || (addr >= prev_vma->vm_end)))

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#129: FILE: arch/ppc64/mm/hugetlbpage.c:597:
+			return (mm->free_area_cache = addr);
+		else

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#135: FILE: arch/ppc64/mm/hugetlbpage.c:603:
+		addr = vma->vm_start-len;
 		                    ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#155: FILE: arch/ppc64/mm/hugetlbpage.c:623:
+	addr = arch_get_unmapped_area(filp, addr0, len, pgoff, flags);
 	                              ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 7 warnings, 7 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
