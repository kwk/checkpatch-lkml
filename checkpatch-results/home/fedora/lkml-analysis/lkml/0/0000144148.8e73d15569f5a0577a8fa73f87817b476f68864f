CHECK:LINE_SPACING: Please don't use multiple blank lines
#77: FILE: kernel/power/power.h:57:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: kernel/power/power.h:68:
+extern int restore_highmem(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: kernel/power/power.h:69:
+extern void free_pagedir(struct pbe *pblist);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#90: FILE: kernel/power/power.h:70:
+extern struct pbe * alloc_pagedir(unsigned nr_pages);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#90: FILE: kernel/power/power.h:70:
+extern struct pbe * alloc_pagedir(unsigned nr_pages);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: kernel/power/power.h:70:
+extern struct pbe * alloc_pagedir(unsigned nr_pages);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#91: FILE: kernel/power/power.h:71:
+extern void create_pbe_list(struct pbe *pblist, unsigned nr_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: kernel/power/power.h:71:
+extern void create_pbe_list(struct pbe *pblist, unsigned nr_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: kernel/power/power.h:72:
+extern int enough_swap(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: kernel/power/snapshot.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: kernel/power/snapshot.c:13:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#140: FILE: kernel/power/snapshot.c:43:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#141: FILE: kernel/power/snapshot.c:44:
+#include <asm/mmu_context.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#142: FILE: kernel/power/snapshot.c:45:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#144: FILE: kernel/power/snapshot.c:47:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: kernel/power/snapshot.c:55:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: kernel/power/snapshot.c:57:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: kernel/power/snapshot.c:70:
+	unsigned long zone_pfn;
+	mark_free_pages(zone);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#174: FILE: kernel/power/snapshot.c:77:
+		if (!(pfn%1000))
 		         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: kernel/power/snapshot.c:78:
+			printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#186: FILE: kernel/power/snapshot.c:89:
+			printk("highmem reserved page?!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#189: FILE: kernel/power/snapshot.c:92:
+		BUG_ON(PageNosave(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*save)...) over kmalloc(sizeof(struct highmem_page)...)
#192: FILE: kernel/power/snapshot.c:95:
+		save = kmalloc(sizeof(struct highmem_page), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#197: FILE: kernel/power/snapshot.c:100:
+		save->data = (void *) get_zeroed_page(GFP_ATOMIC);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: kernel/power/snapshot.c:114:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#219: FILE: kernel/power/snapshot.c:122:
+	for_each_zone (zone) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: kernel/power/snapshot.c:135:
+	printk("swsusp: Restoring Highmem\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: kernel/power/snapshot.c:139:
+		void *kaddr;
+		highmem_copy = save->next;

CHECK:SPACING: No space is necessary after a cast
#241: FILE: kernel/power/snapshot.c:144:
+		free_page((long) save->data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#248: FILE: kernel/power/snapshot.c:151:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: kernel/power/snapshot.c:156:
+	unsigned long nosave_end_pfn = PAGE_ALIGN(__pa(&__nosave_end)) >> PAGE_SHIFT;
+	return (pfn >= nosave_begin_pfn) && (pfn < nosave_end_pfn);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: kernel/power/snapshot.c:168:
+static int saveable(struct zone * zone, unsigned long * zone_pfn)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: kernel/power/snapshot.c:168:
+static int saveable(struct zone * zone, unsigned long * zone_pfn)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: kernel/power/snapshot.c:171:
+	struct page * page;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: kernel/power/snapshot.c:177:
+	BUG_ON(PageReserved(page) && PageNosave(page));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: kernel/power/snapshot.c:197:
+	for_each_zone (zone) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_data_pages', this function's name, in a string
#309: FILE: kernel/power/snapshot.c:212:
+	pr_debug("copy_data_pages(): pages to copy: %d\n", nr_copy_pages);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: kernel/power/snapshot.c:213:
+	for_each_zone (zone) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: kernel/power/snapshot.c:218:
+		for_each_pb_page (p, pagedir_nosave)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#321: FILE: kernel/power/snapshot.c:224:
+				struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: kernel/power/snapshot.c:225:
+				struct page * page;
+				page = pfn_to_page(zone_pfn + zone->zone_start_pfn);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#323: FILE: kernel/power/snapshot.c:226:
+				BUG_ON(!pbe);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#331: FILE: kernel/power/snapshot.c:234:
+	BUG_ON(pbe);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#334: FILE: kernel/power/snapshot.c:237:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#372: FILE: kernel/power/snapshot.c:275:
+void create_pbe_list(struct pbe *pblist, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#375: FILE: kernel/power/snapshot.c:278:
+	unsigned num = PBES_PER_PAGE;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: kernel/power/snapshot.c:280:
+	for_each_pb_page (pbpage, pblist) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_pbe_list', this function's name, in a string
#389: FILE: kernel/power/snapshot.c:292:
+	pr_debug("create_pbe_list(): initialized %d PBEs\n", num);

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: kernel/power/snapshot.c:298:
+	void *res = (void *)get_zeroed_page(GFP_ATOMIC | __GFP_COLD);
+	if (res) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#415: FILE: kernel/power/snapshot.c:318:
+struct pbe * alloc_pagedir(unsigned nr_pages)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#415: FILE: kernel/power/snapshot.c:318:
+struct pbe * alloc_pagedir(unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#417: FILE: kernel/power/snapshot.c:320:
+	unsigned num;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#423: FILE: kernel/power/snapshot.c:326:
+	pr_debug("alloc_pagedir(): nr_pages = %d\n", nr_pages);

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: kernel/power/snapshot.c:330:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#427: FILE: kernel/power/snapshot.c:330:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/power/snapshot.c:330:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: kernel/power/snapshot.c:337:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: kernel/power/snapshot.c:337:
+        }$

WARNING:TYPO_SPELLING: 'alocated' may be misspelled - perhaps 'allocated'?
#439: FILE: kernel/power/snapshot.c:342:
+ * Free pages we allocated for suspend. Suspend pages are alocated
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#451: FILE: kernel/power/snapshot.c:354:
+				struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#452: FILE: kernel/power/snapshot.c:355:
+				struct page * page;
+				page = pfn_to_page(zone_pfn + zone->zone_start_pfn);

CHECK:SPACING: No space is necessary after a cast
#456: FILE: kernel/power/snapshot.c:359:
+					free_page((long) page_address(page));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#462: FILE: kernel/power/snapshot.c:365:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#474: FILE: kernel/power/snapshot.c:377:
+		nr_copy_pages/PBES_PER_PAGE + !!(nr_copy_pages%PBES_PER_PAGE));
 		             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#474: FILE: kernel/power/snapshot.c:377:
+		nr_copy_pages/PBES_PER_PAGE + !!(nr_copy_pages%PBES_PER_PAGE));
 		                                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: kernel/power/snapshot.c:380:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#480: FILE: kernel/power/snapshot.c:383:
+	struct pbe * p;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#484: FILE: kernel/power/snapshot.c:387:
+	if (MAX_PBES < nr_copy_pages / PBES_PER_PAGE +

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#488: FILE: kernel/power/snapshot.c:391:
+	if (!(pagedir_save = alloc_pagedir(nr_copy_pages))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#489: FILE: kernel/power/snapshot.c:392:
+		printk(KERN_ERR "suspend: Allocating pagedir failed.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: kernel/power/snapshot.c:398:
+	for_each_pbe (p, pagedir_save) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#498: FILE: kernel/power/snapshot.c:401:
+			printk(KERN_ERR "suspend: Allocating image pages failed.\n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#511: FILE: kernel/power/snapshot.c:414:
+	pr_debug("swsusp: critical section: \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#513: FILE: kernel/power/snapshot.c:416:
+		printk(KERN_CRIT "swsusp: Not enough free pages for highmem\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: kernel/power/snapshot.c:423:
+	printk("swsusp: Need to copy %u pages\n", nr_copy_pages);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#524: FILE: kernel/power/snapshot.c:427:
+		 nr_copy_pages/PBES_PER_PAGE + !!(nr_copy_pages%PBES_PER_PAGE),
 		              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#524: FILE: kernel/power/snapshot.c:427:
+		 nr_copy_pages/PBES_PER_PAGE + !!(nr_copy_pages%PBES_PER_PAGE),
 		                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#528: FILE: kernel/power/snapshot.c:431:
+		printk(KERN_ERR "swsusp: Not enough free memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#533: FILE: kernel/power/snapshot.c:436:
+		printk(KERN_ERR "swsusp: Not enough free swap\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#553: FILE: kernel/power/snapshot.c:456:
+	printk("swsusp: critical section/: done (%d pages copied)\n", nr_copy_pages );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#553: FILE: kernel/power/snapshot.c:456:
+	printk("swsusp: critical section/: done (%d pages copied)\n", nr_copy_pages );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#557: FILE: kernel/power/snapshot.c:460:
+
+

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#589: FILE: kernel/power/swsusp.c:90:
+unsigned int nr_copy_pages __nosavedata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 46 warnings, 24 checks, 991 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144148.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
