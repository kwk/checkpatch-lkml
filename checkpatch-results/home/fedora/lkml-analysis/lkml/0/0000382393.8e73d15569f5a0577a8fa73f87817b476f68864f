WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	           ChangeSet	1.889.359.3 -> 1.889.359.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	drivers/pcmcia/rsrc_mgr.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# 03/03/18	rmk@flint.arm.linux.org.uk	1.889.359.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# [PCMCIA] pcmcia-5: Add locking to resource manager.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# Add an element of locking to the resource manager - don't allow

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# the PCMCIA resource lists to be changed while the pcmcia code is

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# scanning them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#43: 
--- a/drivers/pcmcia/rsrc_mgr.c	Wed Mar 26 19:20:24 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/pcmcia/rsrc_mgr.c:409:
+    if (!probe_mem)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: drivers/pcmcia/rsrc_mgr.c:412:
+    down(&rsrc_sem);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#67: FILE: drivers/pcmcia/rsrc_mgr.c:415:
 	if (hi++ || (inv_probe(is_valid, do_cksum, mem_db.next, s) > 0))
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#69: FILE: drivers/pcmcia/rsrc_mgr.c:416:
+	    goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/pcmcia/rsrc_mgr.c:420:
+    if (lo++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/pcmcia/rsrc_mgr.c:442:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/pcmcia/rsrc_mgr.c:453:
+    if (probe_mem && done++ == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#99: FILE: drivers/pcmcia/rsrc_mgr.c:455:
+	for (m = mem_db.next; m != &mem_db; m = m->next)
+	    if (do_mem_probe(m->base, m->num, is_valid, do_cksum, s))

WARNING:TABSTOP: Statements should start on a tabstop
#100: FILE: drivers/pcmcia/rsrc_mgr.c:456:
+	    if (do_mem_probe(m->base, m->num, is_valid, do_cksum, s))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/pcmcia/rsrc_mgr.c:459:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/pcmcia/rsrc_mgr.c:482:
+    int ret = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/pcmcia/rsrc_mgr.c:484:
+    down(&rsrc_sem);$

WARNING:TABSTOP: Statements should start on a tabstop
#127: FILE: drivers/pcmcia/rsrc_mgr.c:495:
+	    if (!align)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/pcmcia/rsrc_mgr.c:500:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/pcmcia/rsrc_mgr.c:501:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/pcmcia/rsrc_mgr.c:509:
+    int ret = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/pcmcia/rsrc_mgr.c:511:
+    down(&rsrc_sem);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#146: FILE: drivers/pcmcia/rsrc_mgr.c:513:
 	for (m = mem_db.next; m != &mem_db; m = m->next) {
[...]
+	    if ((force_low != 0) ^ (m->base < 0x100000))

WARNING:TABSTOP: Statements should start on a tabstop
#149: FILE: drivers/pcmcia/rsrc_mgr.c:515:
+	    if ((force_low != 0) ^ (m->base < 0x100000))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'force_low != 0'
#149: FILE: drivers/pcmcia/rsrc_mgr.c:515:
+	    if ((force_low != 0) ^ (m->base < 0x100000))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'm->base < 0x100000'
#149: FILE: drivers/pcmcia/rsrc_mgr.c:515:
+	    if ((force_low != 0) ^ (m->base < 0x100000))

WARNING:TABSTOP: Statements should start on a tabstop
#160: FILE: drivers/pcmcia/rsrc_mgr.c:525:
+		    goto out;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#163: FILE: drivers/pcmcia/rsrc_mgr.c:527:
+		if (!align)
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#164: FILE: drivers/pcmcia/rsrc_mgr.c:528:
+		    break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#168: FILE: drivers/pcmcia/rsrc_mgr.c:531:
+	if (force_low)
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#169: FILE: drivers/pcmcia/rsrc_mgr.c:532:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/pcmcia/rsrc_mgr.c:536:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/pcmcia/rsrc_mgr.c:537:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/pcmcia/rsrc_mgr.c:562:
+    int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/pcmcia/rsrc_mgr.c:564:
+    down(&rsrc_sem);$

WARNING:TABSTOP: Statements should start on a tabstop
#191: FILE: drivers/pcmcia/rsrc_mgr.c:569:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#201: FILE: drivers/pcmcia/rsrc_mgr.c:575:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#202: FILE: drivers/pcmcia/rsrc_mgr.c:576:
+	    if (Attributes & IRQ_FIRST_SHARED) {

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#202: FILE: drivers/pcmcia/rsrc_mgr.c:576:
+	    if (Attributes & IRQ_FIRST_SHARED) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TABSTOP: Statements should start on a tabstop
#205: FILE: drivers/pcmcia/rsrc_mgr.c:579:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#218: FILE: drivers/pcmcia/rsrc_mgr.c:588:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#219: FILE: drivers/pcmcia/rsrc_mgr.c:589:
+	    if (Attributes & IRQ_FIRST_SHARED) {

WARNING:TABSTOP: Statements should start on a tabstop
#222: FILE: drivers/pcmcia/rsrc_mgr.c:592:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#232: FILE: drivers/pcmcia/rsrc_mgr.c:598:
+	if ((info->Attributes & RES_RESERVED) && !specific) {
+	    ret = CS_IN_USE;

WARNING:TABSTOP: Statements should start on a tabstop
#234: FILE: drivers/pcmcia/rsrc_mgr.c:600:
+	    goto out;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#236: FILE: drivers/pcmcia/rsrc_mgr.c:602:
+	if (check_irq(irq) != 0) {
+	    ret = CS_IN_USE;

WARNING:TABSTOP: Statements should start on a tabstop
#238: FILE: drivers/pcmcia/rsrc_mgr.c:604:
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#247: FILE: drivers/pcmcia/rsrc_mgr.c:611:
+	    if (!(Attributes & IRQ_FIRST_SHARED)) {

WARNING:TABSTOP: Statements should start on a tabstop
#250: FILE: drivers/pcmcia/rsrc_mgr.c:614:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#257: FILE: drivers/pcmcia/rsrc_mgr.c:619:
+	    if (!(Attributes & IRQ_FIRST_SHARED)) {

WARNING:TABSTOP: Statements should start on a tabstop
#260: FILE: drivers/pcmcia/rsrc_mgr.c:622:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/pcmcia/rsrc_mgr.c:629:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/pcmcia/rsrc_mgr.c:630:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/pcmcia/rsrc_mgr.c:644:
+    down(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/pcmcia/rsrc_mgr.c:660:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/pcmcia/rsrc_mgr.c:684:
+    down(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/pcmcia/rsrc_mgr.c:703:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/pcmcia/rsrc_mgr.c:712:
+    int base, num, ret = CS_SUCCESS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/pcmcia/rsrc_mgr.c:721:
+    down(&rsrc_sem);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#324: FILE: drivers/pcmcia/rsrc_mgr.c:724:
+	if (add_interval(&io_db, base, num) != 0) {
+	    ret = CS_IN_USE;

WARNING:TABSTOP: Statements should start on a tabstop
#326: FILE: drivers/pcmcia/rsrc_mgr.c:726:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/pcmcia/rsrc_mgr.c:740:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/pcmcia/rsrc_mgr.c:742:
+    return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/pcmcia/rsrc_mgr.c:749:
+    int ret = CS_SUCCESS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/pcmcia/rsrc_mgr.c:759:
+    down(&rsrc_sem);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#364: FILE: drivers/pcmcia/rsrc_mgr.c:764:
 	else
+	    if (adj->Attributes & RES_ALLOCATED) {

WARNING:TABSTOP: Statements should start on a tabstop
#367: FILE: drivers/pcmcia/rsrc_mgr.c:765:
+	    if (adj->Attributes & RES_ALLOCATED) {

WARNING:TABSTOP: Statements should start on a tabstop
#370: FILE: drivers/pcmcia/rsrc_mgr.c:768:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#381: FILE: drivers/pcmcia/rsrc_mgr.c:775:
+	if (info->Attributes & RES_REMOVED) {
+	    ret = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#383: FILE: drivers/pcmcia/rsrc_mgr.c:777:
+	    break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#385: FILE: drivers/pcmcia/rsrc_mgr.c:779:
+	if (info->Attributes & RES_ALLOCATED) {
+	    ret = CS_IN_USE;

WARNING:TABSTOP: Statements should start on a tabstop
#387: FILE: drivers/pcmcia/rsrc_mgr.c:781:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/pcmcia/rsrc_mgr.c:790:
+    up(&rsrc_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/pcmcia/rsrc_mgr.c:792:
+    return ret;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 84 warnings, 3 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382393.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
