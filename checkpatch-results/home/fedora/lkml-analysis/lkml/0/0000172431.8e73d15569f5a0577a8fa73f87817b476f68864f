CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#98: FILE: arch/ppc/kernel/pci.c:1749:
+	if (hose == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: arch/ppc64/kernel/pci.c:381:
+^I^I       ^I*offset += hose->io_base_phys - io_offset;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: arch/ppc64/kernel/pci.c:381:
+^I^I       ^I*offset += hose->io_base_phys - io_offset;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hose"
#143: FILE: arch/ppc64/kernel/pci.c:954:
+	if (hose == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: drivers/pci/pci-sysfs.c:70:
+		struct resource *res =  &pci_dev->resource[i];
+		pci_resource_to_user(pci_dev, i, res, &start, &end);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: drivers/pci/pci-sysfs.c:71:
+		str += sprintf(str,"0x%016llx 0x%016llx 0x%016llx\n",
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#212: FILE: drivers/pci/proc.c:358:
+	for (i=0; i<7; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#212: FILE: drivers/pci/proc.c:358:
+	for (i=0; i<7; i++) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: drivers/pci/proc.c:360:
+		u64 start, end;
+		pci_resource_to_user(dev, i, &dev->resource[i], &start, &end);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#221: FILE: drivers/pci/proc.c:365:
+	for (i=0; i<7; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#221: FILE: drivers/pci/proc.c:365:
+	for (i=0; i<7; i++) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: drivers/pci/proc.c:367:
+		u64 start, end;
+		pci_resource_to_user(dev, i, &dev->resource[i], &start, &end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: include/asm-ppc/pci.h:107:
+extern void pci_resource_to_user(const struct pci_dev *dev, int bar,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#244: FILE: include/asm-ppc/pci.h:111:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: include/asm-ppc64/pci.h:141:
+extern void pci_resource_to_user(const struct pci_dev *dev, int bar,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: include/linux/pci.h:1023:
 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: include/linux/pci.h:1029:
+                const struct resource *rsrc, u64 *start, u64 *end)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: include/linux/pci.h:1029:
+static inline void pci_resource_to_user(const struct pci_dev *dev, int bar,
+                const struct resource *rsrc, u64 *start, u64 *end)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: include/linux/pci.h:1029:
+                const struct resource *rsrc, u64 *start, u64 *end)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: include/linux/pci.h:1036:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 8 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172431.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
