WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#127: FILE: arch/s390/kernel/profile.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#128: FILE: arch/s390/kernel/profile.c:2:
+ * arch/s390/kernel/profile.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/s390/kernel/profile.c:9:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/s390/kernel/profile.c:9:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: arch/s390/kernel/profile.c:10:
+static struct proc_dir_entry * root_irq_dir;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: arch/s390/kernel/profile.c:14:
+static int prof_cpu_mask_read_proc (char *page, char **start, off_t off,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/s390/kernel/profile.c:15:
+static int prof_cpu_mask_read_proc (char *page, char **start, off_t off,
+					int count, int *eof, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#144: FILE: arch/s390/kernel/profile.c:18:
+	int len = cpumask_scnprintf(page, count, *(cpumask_t *)data);
+	if (count - len < 2)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: arch/s390/kernel/profile.c:24:
+static int prof_cpu_mask_write_proc (struct file *file, const char *buffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: arch/s390/kernel/profile.c:25:
+static int prof_cpu_mask_write_proc (struct file *file, const char *buffer,
+					unsigned long count, void *data)

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/s390/kernel/profile.c:43:
+        struct proc_dir_entry *entry;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/s390/kernel/profile.c:43:
+        struct proc_dir_entry *entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/s390/kernel/profile.c:45:
+        /* create /proc/irq */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/s390/kernel/profile.c:46:
+        root_irq_dir = proc_mkdir("irq", 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/s390/kernel/profile.c:46:
+        root_irq_dir = proc_mkdir("irq", 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/s390/kernel/profile.c:48:
+        /* create /proc/irq/prof_cpu_mask */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/s390/kernel/profile.c:49:
+        entry = create_proc_entry("prof_cpu_mask", 0600, root_irq_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/s390/kernel/profile.c:49:
+        entry = create_proc_entry("prof_cpu_mask", 0600, root_irq_dir);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/s390/kernel/profile.c:51:
+        if (!entry)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/s390/kernel/profile.c:51:
+        if (!entry)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/s390/kernel/profile.c:54:
+        entry->nlink = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/s390/kernel/profile.c:54:
+        entry->nlink = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/s390/kernel/profile.c:55:
+        entry->data = (void *)&prof_cpu_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/s390/kernel/profile.c:55:
+        entry->data = (void *)&prof_cpu_mask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/s390/kernel/profile.c:56:
+        entry->read_proc = prof_cpu_mask_read_proc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/s390/kernel/profile.c:56:
+        entry->read_proc = prof_cpu_mask_read_proc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/s390/kernel/profile.c:57:
+        entry->write_proc = prof_cpu_mask_write_proc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/s390/kernel/profile.c:57:
+        entry->write_proc = prof_cpu_mask_write_proc;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: arch/s390/kernel/time.c:181:
 
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#213: FILE: arch/s390/kernel/time.c:182:
+#if defined(CONFIG_OPROFILE) || defined(CONFIG_OPROFILE_MODULE)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#222: FILE: arch/s390/kernel/time.c:191:
+static inline void s390_do_profile(struct pt_regs * regs)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#225: FILE: arch/s390/kernel/time.c:194:
+	extern cpumask_t prof_cpu_mask;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#244: FILE: arch/s390/kernel/time.c:213:
+	eip -= (unsigned long) &_stext;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#251: FILE: arch/s390/kernel/time.c:220:
+	if (eip > prof_len-1)
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#252: FILE: arch/s390/kernel/time.c:221:
+		eip = prof_len-1;
 		              ^

ERROR:SPACING: space required before the open parenthesis '('
#256: FILE: arch/s390/kernel/time.c:225:
+#define s390_do_profile(regs)  do { ; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#256: FILE: arch/s390/kernel/time.c:225:
+#define s390_do_profile(regs)  do { ; } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: arch/s390/kernel/time.c:228:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#279: FILE: arch/s390/oprofile/Kconfig:5:
+config PROFILING
+	bool "Profiling support (EXPERIMENTAL)"
+	help
+	  Say Y here to enable the extended profiling support mechanisms used
+	  by profilers such as OProfile.
+	  
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: arch/s390/oprofile/Kconfig:10:
+^I  $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#318: FILE: arch/s390/oprofile/init.c:1:
+/**

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#319: FILE: arch/s390/oprofile/init.c:2:
+ * arch/s390/oprofile/init.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: arch/s390/oprofile/init.c:7:
+ * ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: arch/s390/oprofile/init.c:7:
+ * ^I$

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#333: FILE: arch/s390/oprofile/init.c:16:
+extern void timer_init(struct oprofile_operations** ops);

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#335: FILE: arch/s390/oprofile/init.c:18:
+int __init oprofile_arch_init(struct oprofile_operations** ops)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 21 warnings, 7 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000286972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
