CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#67: FILE: arch/i386/mm/pageattr.c:211:
+		check_no_locks_freed(page_address(page), page_address(page+numpages));
 		                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/linux/mm.h:977:
+ extern int check_no_locks_freed(const void *from, const void *to);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/mm.h:977:
+ extern int check_no_locks_freed(const void *from, const void *to);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/linux/mm.h:979:
+ static inline int check_no_locks_freed(const void *from, const void *to)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/linux/mm.h:980:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/linux/mm.h:982:
+ }$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: include/linux/mm.h:990:
+		check_no_locks_freed(page_address(page), page_address(page+numpages));
 		                                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: include/linux/sched.h:190:
+  extern void deadlock_trace_off(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/sched.h:190:
+  extern void deadlock_trace_off(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: include/linux/sched.h:191:
+  extern void show_held_locks(struct task_struct *filter);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/sched.h:191:
+  extern void show_held_locks(struct task_struct *filter);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: include/linux/sched.h:192:
+  extern void check_no_held_locks(struct task_struct *task);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/sched.h:192:
+  extern void check_no_held_locks(struct task_struct *task);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: include/linux/sched.h:193:
+  extern void show_all_locks(void);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/sched.h:193:
+  extern void show_all_locks(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: mm/page_alloc.c:405:
+		check_no_locks_freed(page_address(page),
+			page_address(page+(1<<order)));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#252: FILE: mm/page_alloc.c:405:
+			page_address(page+(1<<order)));
 			                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#252: FILE: mm/page_alloc.c:405:
+			page_address(page+(1<<order)));
 			                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: mm/slab.c:3042:
+	if (check_no_locks_freed(objp, objp+cache_size(c)))
 	                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: mm/slab.c:3043:
+		printk("slab %s[%p] (%d), obj: %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: mm/slab.c:3044:
+		printk("slab %s[%p] (%d), obj: %p\n",
+			c->name, c, c->objsize, objp);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124185.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 12 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124185.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
