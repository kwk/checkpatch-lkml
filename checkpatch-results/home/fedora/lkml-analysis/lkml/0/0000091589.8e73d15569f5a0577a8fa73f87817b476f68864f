WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!curr_statep"
#201: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:150:
+	if (curr_statep == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#364: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:313:
+		   "is %llx\n", (unsigned long long) *gpioval);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:313:
+	ipath_cdbg(VERBOSE, "Resetting i2c eeprom; initial gpioout reg "
+		   "is %llx\n", (unsigned long long) *gpioval);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:373:
+			u8 bit;
+			scl_out(dd, i2c_line_high);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#434: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:383:
+		*((u8 *) buffer) = single_byte;

WARNING:SPLIT_STRING: quoted string split across lines
#475: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:424:
+				ipath_dbg("no ack after byte %u/%u (%u "
+					  "total remain)\n", i, sub_len,

WARNING:SPLIT_STRING: quoted string split across lines
#497: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:446:
+				ipath_dbg("Did not get successful read to "
+					  "complete write\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:453:
+			u8 bit;
+			scl_out(dd, i2c_line_high);

CHECK:SPACING: No space is necessary after a cast
#522: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:471:
+	u8 *ip = (u8 *) ifp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#554: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:503:
+		u8 *bguid, oguid;
+		dd->ipath_guid = dd0->ipath_guid;

CHECK:SPACING: No space is necessary after a cast
#555: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:504:
+		bguid = (u8 *) & dd->ipath_guid;

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#555: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:504:
+		bguid = (u8 *) & dd->ipath_guid;
 		               ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#562: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:511:
+					ipath_dev_err(

WARNING:SPLIT_STRING: quoted string split across lines
#565: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:514:
+						"Can't set %s GUID from "
+						"base, wraps to OUI!\n",

WARNING:SPLIT_STRING: quoted string split across lines
#577: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:526:
+		ipath_dbg("nguid %u, so adding %u to device 0 guid, "
+			  "for %llx (big-endian)\n",

CHECK:SPACING: No space is necessary after a cast
#579: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:528:
+			  (unsigned long long) dd->ipath_guid);

WARNING:SPLIT_STRING: quoted string split across lines
#587: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:536:
+		ipath_dev_err(dd, "Couldn't allocate memory to read %u "
+			      "bytes from eeprom for GUID\n", len);

WARNING:SPLIT_STRING: quoted string split across lines
#600: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:549:
+		dev_info(&dd->pcidev->dev, "Bad I2C flash checksum: "
+			 "0x%x, not 0x%x\n", csum, ifp->if_csum);

CHECK:SPACING: No space is necessary after a cast
#603: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:552:
+	if (*(u64 *) ifp->if_guid == 0ULL ||

CHECK:SPACING: No space is necessary after a cast
#604: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:553:
+	    *(u64 *) ifp->if_guid == -1LL) {

CHECK:SPACING: No space is necessary after a cast
#607: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:556:
+			      *(unsigned long long *) ifp->if_guid);

CHECK:SPACING: No space is necessary after a cast
#613: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:562:
+	if (*(u64 *) ifp->if_guid == 0x100007511000000ULL)

WARNING:SPLIT_STRING: quoted string split across lines
#615: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:564:
+		dev_info(&dd->pcidev->dev, "Warning, GUID %llx is "
+			 "default, probably not correct!\n",

CHECK:SPACING: No space is necessary after a cast
#616: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:565:
+			 *(unsigned long long *) ifp->if_guid);

CHECK:BRACES: braces {} should be used on all arms of this statement
#619: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:568:
+	if (!bguid[0] && !bguid[1] && !bguid[2]) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#623: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:572:
+		 * 0.. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#626: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:575:
+		bguid[3] = bguid[4] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#627: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:576:
+		guid = *(u64 *) ifp->if_guid;

WARNING:SPLIT_STRING: quoted string split across lines
#629: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:578:
+		ipath_cdbg(VERBOSE, "Old GUID format in flash, top 3 zero, "
+			   "shifting 2 octets\n");

CHECK:BRACES: Unbalanced braces around else statement
#630: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:579:
+	} else

CHECK:SPACING: No space is necessary after a cast
#631: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:580:
+		guid = *(u64 *) ifp->if_guid;

CHECK:SPACING: No space is necessary after a cast
#637: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:586:
+		   "flash\n", (unsigned long long) dd->ipath_guid);

WARNING:SPLIT_STRING: quoted string split across lines
#637: FILE: drivers/infiniband/hw/ipath/ipath_eeprom.c:586:
+	ipath_cdbg(VERBOSE, "Initted GUID to %llx (big-endian) from i2c "
+		   "flash\n", (unsigned long long) dd->ipath_guid);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#646: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:1:
+/*

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#708: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:63:
+	sbuf[0] = ipath_read_kreg64(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#710: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:65:
+	sbuf[1] = ipath_read_kreg64(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#713: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:68:
+		sbuf[2] = ipath_read_kreg64(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#715: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:70:
+		sbuf[3] = ipath_read_kreg64(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#724: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:79:
+			printk("%lx %lx ", sbuf[2], sbuf[3]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#728: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:83:
+				u32 __iomem *piobuf;
+				if (i < dd->ipath_piobcnt2k)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#746: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:101:
+			printk("\n");

CHECK:SPACING: No space is necessary after a cast
#760: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:115:
+			  "yet active\n", (unsigned long long) errs);

WARNING:SPLIT_STRING: quoted string split across lines
#760: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:115:
+		ipath_dbg("Ignoring pktsend errors %llx, because not "
+			  "yet active\n", (unsigned long long) errs);

CHECK:SPACING: No space is necessary after a cast
#803: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:158:
+		if (lstate == ((unsigned) dd->ipath_lastibcstat

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#803: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:158:
+		if (lstate == ((unsigned) dd->ipath_lastibcstat

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#808: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:163:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#810: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:165:
+			ipath_cdbg(SMA, "Unit %u link state %s, last "
+				   "was %s\n", dd->ipath_unit,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#812: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:167:
+				   ib_linkstate((unsigned)

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:168:
+^I^I^I^I   ^I^Idd->ipath_lastibcstat$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#813: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:168:
+^I^I^I^I   ^I^Idd->ipath_lastibcstat$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:169:
+^I^I^I^I   ^I^I& IPATH_IBSTATE_MASK));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#814: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:169:
+^I^I^I^I   ^I^I& IPATH_IBSTATE_MASK));$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#816: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:171:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#816: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:171:
+	else {

WARNING:SPLIT_STRING: quoted string split across lines
#822: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:177:
+			ipath_cdbg(SMA, "Unit %u link state down"
+				   " (state 0x%x), from %s\n",

WARNING:SPLIT_STRING: quoted string split across lines
#828: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:183:
+			ipath_cdbg(VERBOSE, "Unit %u link state changed "
+				   "to 0x%x from down (%x)\n",

CHECK:SPACING: No space is necessary after a cast
#829: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:184:
+				   dd->ipath_unit, (u32) val, lstate);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#851: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:206:
+		if (last_ltstate == INFINIPATH_IBCS_LT_STATE_POLLACTIVE
+		    || last_ltstate ==

CHECK:BRACES: braces {} should be used on all arms of this statement
#853: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:208:
+			if (dd->ipath_ibpollcnt > 40) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#857: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:212:
+			} else

WARNING:SPLIT_STRING: quoted string split across lines
#882: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:237:
+				ipath_cdbg(VERBOSE, "Unit %u link is "
+					   "down (%s)\n", dd->ipath_unit,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#929: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:284:
+			     unsigned supp_msgs, char msg[512])

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#936: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:291:
+		ipath_decode_err(msg, sizeof msg, dd->ipath_lasterror &

WARNING:SPLIT_STRING: quoted string split across lines
#941: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:296:
+			ipath_dev_err(dd, "Suppressed %u messages for "
+				      "fast-repeating errors (%s) (%llx)\n",

CHECK:BRACES: Unbalanced braces around else statement
#945: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:300:
+		else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#959: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:314:
+static unsigned handle_frequent_errors(struct ipath_devdata *dd,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#965: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:320:
+	static unsigned nmsgs, supp_msgs;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#979: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:334:
+		}
+		else if (supp_msgs) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#985: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:340:
+	}
+	else if (!nmsgs++ || nc > nextmsg_time)	/* start timer */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#997: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:352:
+	unsigned supp_msgs;

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1010: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:365:
+		dd->ipath_f_handle_hwerrors(dd, msg, sizeof msg);

WARNING:SPLIT_STRING: quoted string split across lines
#1015: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:370:
+		ipath_dev_err(dd, "error interrupt with unknown errors "
+			      "%llx set\n", (unsigned long long)

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1031: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:386:
+		ipath_decode_err(msg, sizeof msg,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_ignorederrs'
#1033: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:388:
+				 (dd->ipath_maskederrs & ~dd->
+				  ipath_ignorederrs));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#1038: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:393:
+				      "occuring too frequently (%s)\n",
 				       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#1038: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:393:
+			ipath_dev_err(dd, "Disabling error(s) %llx because "
+				      "occuring too frequently (%s)\n",

CHECK:BRACES: Unbalanced braces around else statement
#1042: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:397:
+		else {

WARNING:SPLIT_STRING: quoted string split across lines
#1051: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:406:
+			ipath_dbg("Disabling frequent queue full errors "
+				  "(%s)\n", msg);

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1081: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:436:
+		ipath_decode_err(msg, sizeof msg,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1112: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:467:
+		u32 hd, tl;
+		ipath_stats.sps_hdrqfull++;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1115: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:470:
+			struct ipath_portdata *pd = dd->ipath_pd[i];
+			if (i == 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1115: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:470:
+			if (i == 0) {
[...]
+			} else if (pd && pd->port_cnt &&
[...]
+			} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1117: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:472:
+				tl = (uint32_t) __le64_to_cpu(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1117: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:472:
+				tl = (uint32_t) __le64_to_cpu(

CHECK:SPACING: No space is necessary after a cast
#1125: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:480:
+				tl = (u32) * pd->port_rcvhdrtail_kvaddr;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#1125: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:480:
+				tl = (u32) * pd->port_rcvhdrtail_kvaddr;
 				           ^

CHECK:BRACES: Unbalanced braces around else statement
#1130: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:485:
+			} else

CHECK:SPACING: No space is necessary after a cast
#1150: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:505:
+		    (uint32_t) __le64_to_cpu(*dd->ipath_hdrqtailptr))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1170: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:525:
+			u64 st = ipath_read_kreg64(

WARNING:SPLIT_STRING: quoted string split across lines
#1183: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:538:
+			ipath_dev_err(dd, "Got reset, requires re-init "
+				      "(unload and reload driver)\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1194: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:549:
+		ipath_cdbg(VERBOSE, "sma wanted state %x, iflags now %x, "
+			   "waking\n", dd->ipath_sma_state_wanted,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1206: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:561:
+static void ipath_bad_intr(struct ipath_devdata *dd, u32 * unexpectp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1214: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:569:
+	 * wrong */

WARNING:SPLIT_STRING: quoted string split across lines
#1226: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:581:
+				ipath_dev_err(dd, "Now %u unexpected "
+					      "interrupts, unregistering "

WARNING:SPLIT_STRING: quoted string split across lines
#1227: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:582:
+					      "interrupts, unregistering "
+					      "interrupt handler\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1236: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:591:
+			ipath_dev_err(dd, "%u unexpected interrupts, "
+				      "disabling interrupts completely\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1246: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:601:
+		ipath_dbg("Interrupt when not ready, should not happen, "
+			  "ignoring\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1266: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:621:
+			ipath_dev_err(dd, "Still bad interrupt status, "
+				      "unregistering interrupt\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1270: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:625:
+				printk(".");

CHECK:BRACES: Unbalanced braces around else statement
#1271: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:626:
+		} else

WARNING:SPLIT_STRING: quoted string split across lines
#1273: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:628:
+			ipath_dev_err(dd, "Disabling interrupts, "
+				      "multiple errors\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1331: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:686:
+		struct ipath_portdata *pd = dd->ipath_pd[i];
+		if (portr & (1 << i) && pd &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#1333: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:688:
+			if (i == 0)
[...]
+			else if (test_bit(IPATH_PORT_WAITING_RCV,
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1338: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:693:
+				int rcbit;
+				clear_bit(IPATH_PORT_WAITING_RCV,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1362: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:717:
+	static unsigned unexpected = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1362: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:717:
+	static unsigned unexpected = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: No space is necessary after a cast
#1395: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:750:
+			      istat & (u32) ~ infinipath_i_bitsextant);

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#1395: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:750:
+			      istat & (u32) ~ infinipath_i_bitsextant);
 			                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#1403: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:758:
+			dev_info(&dd->pcidev->dev, "error interrupt (%x), "
+				 "but no error bits set!\n", istat);

WARNING:SPLIT_STRING: quoted string split across lines
#1410: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:765:
+			ipath_dev_err(dd, "Read of error status failed "
+				      "(all bits set); ignoring\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1418: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:773:
+			u32 gpiostatus;
+			gpiostatus = ipath_read_kreg32(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1418: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:773:
+			gpiostatus = ipath_read_kreg32(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1425: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:780:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1425: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:780:
+		else {

CHECK:SPACING: No space is necessary after a cast
#1428: FILE: drivers/infiniband/hw/ipath/ipath_intr.c:783:
+					 (u64) (1 << 2));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1477: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1537: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:61:
+	 * and maintain them as 64bit values in the driver */

CHECK:BRACES: Unbalanced braces around else statement
#1546: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:70:
+	} else			/* val64 just to keep gcc quiet... */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1547: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:71:
+		val64 = val = ipath_read_creg32(dd, creg);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1564: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:88:
+	if (creg == dd->ipath_cregs->cr_wordsendcnt) {
[...]
+	} else if (creg == dd->ipath_cregs->cr_wordrcvcnt) {
[...]
+	} else if (creg == dd->ipath_cregs->cr_pktsendcnt) {
[...]
+	} else if (creg == dd->ipath_cregs->cr_pktrcvcnt) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1588: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:112:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1589: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:113:
+		val64 = (u64) val;

WARNING:TYPO_SPELLING: 'meaningfull' may be misspelled - perhaps 'meaningful'?
#1601: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:125:
+ * so function name when printed by _IPATH_INFO is meaningfull
                                                    ^^^^^^^^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1611: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:135:
+		blen = snprintf(buf, sizeof buf, "port 0 hdrqfull %u",

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1617: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:141:
+		blen += snprintf(buf + blen, sizeof buf - blen,

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1635: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:159:
+		blen += snprintf(buf + blen, sizeof buf - blen,

WARNING:SPLIT_STRING: quoted string split across lines
#1651: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:175:
+			ipath_cdbg(PKT, "missing rcv interrupts? "
+				   "port0 hd=%llx tl=%x; port0pkts %llx\n",

CHECK:SPACING: No space is necessary after a cast
#1671: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:195:
+	struct ipath_devdata *dd = (struct ipath_devdata *) opaque;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1673: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:197:
+	static unsigned cnt;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1707: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:231:
+	if ((dd->ipath_maskederrs & ~dd->ipath_ignorederrs)
+	    && get_cycles() > dd->ipath_unmasktime) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1709: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:233:
+		char ebuf[256];
+		ipath_decode_err(ebuf, sizeof ebuf,

WARNING:SIZEOF_PARENTHESIS: sizeof ebuf should be sizeof(ebuf)
#1709: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:233:
+		ipath_decode_err(ebuf, sizeof ebuf,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_ignorederrs'
#1711: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:235:
+				 (dd->ipath_maskederrs & ~dd->
+				  ipath_ignorederrs));

WARNING:SPLIT_STRING: quoted string split across lines
#1715: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:239:
+			ipath_dev_err(dd, "Re-enabling masked errors "
+				      "(%s)\n", ebuf);

CHECK:BRACES: Unbalanced braces around else statement
#1716: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:240:
+		else {

WARNING:SPLIT_STRING: quoted string split across lines
#1725: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:249:
+			ipath_dbg("Disabling frequent queue full errors "
+				  "(%s)\n", ebuf);

CHECK:BRACES: Unbalanced braces around else statement
#1755: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:279:
+		} else

WARNING:SPLIT_STRING: quoted string split across lines
#1757: FILE: drivers/infiniband/hw/ipath/ipath_stats.c:281:
+			ipath_cdbg(SMA, "No SMA bufs avail %u tries, "
+				   "after %u seconds\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1769: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1808: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:40:
+#include <asm/processor.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1823: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:55:
+	unsigned bits;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 33)
#1840: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:72:
+	for (bits = 0; !(piolen & (1ULL << bits)); bits++)
+		/* do nothing */ ;

WARNING:SPACING: space prohibited before semicolon
#1841: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:73:
+		/* do nothing */ ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1851: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:83:
+		u64 atmp;
+		ipath_dbg("pioaddr %llx not on right boundary for size "

WARNING:SPLIT_STRING: quoted string split across lines
#1852: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:84:
+		ipath_dbg("pioaddr %llx not on right boundary for size "
+			  "%llx, fixing\n",

CHECK:SPACING: No space is necessary after a cast
#1853: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:85:
+			  (unsigned long long) pioaddr,

CHECK:SPACING: No space is necessary after a cast
#1854: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:86:
+			  (unsigned long long) piolen);

WARNING:SPLIT_STRING: quoted string split across lines
#1858: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:90:
+			ipath_dev_err(dd, "No way to align address/size "
+				      "(%llx/%llx), no WC mtrr\n",

CHECK:SPACING: No space is necessary after a cast
#1859: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:91:
+				      (unsigned long long) atmp,

CHECK:SPACING: No space is necessary after a cast
#1860: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:92:
+				      (unsigned long long) piolen << 1);

WARNING:SPLIT_STRING: quoted string split across lines
#1864: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:96:
+			ipath_dbg("changing WC base from %llx to %llx, "
+				  "len from %llx to %llx\n",

CHECK:SPACING: No space is necessary after a cast
#1865: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:97:
+				  (unsigned long long) pioaddr,

CHECK:SPACING: No space is necessary after a cast
#1866: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:98:
+				  (unsigned long long) atmp,

CHECK:SPACING: No space is necessary after a cast
#1867: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:99:
+				  (unsigned long long) piolen,

CHECK:SPACING: No space is necessary after a cast
#1868: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:100:
+				  (unsigned long long) piolen << 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1876: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:108:
+		int cookie;
+		ipath_cdbg(VERBOSE, "Setting mtrr for chip to WC "

WARNING:SPLIT_STRING: quoted string split across lines
#1877: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:109:
+		ipath_cdbg(VERBOSE, "Setting mtrr for chip to WC "
+			   "(addr %llx, len=0x%llx)\n",

CHECK:SPACING: No space is necessary after a cast
#1878: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:110:
+			   (unsigned long long) pioaddr,

CHECK:SPACING: No space is necessary after a cast
#1879: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:111:
+			   (unsigned long long) piolen);

WARNING:SPLIT_STRING: quoted string split across lines
#1885: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:117:
+					 "mtrr_add()  WC for PIO bufs "
+					 "failed (%d)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1891: FILE: drivers/infiniband/hw/ipath/ipath_wc_x86_64.c:123:
+			ipath_cdbg(VERBOSE, "Set mtrr for chip to WC, "
+				   "cookie is %d\n", cookie);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 87 warnings, 63 checks, 1862 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
