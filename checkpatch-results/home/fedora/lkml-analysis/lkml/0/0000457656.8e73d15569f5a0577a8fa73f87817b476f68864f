CHECK:CAMELCASE: Avoid CamelCase: <ViceFid>
#62: FILE: fs/coda/cnode.c:55:
+	ViceFid *fid = (ViceFid *)data;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#63: FILE: fs/coda/cnode.c:56:
+	ViceFid *fid = (ViceFid *)data;
+	return coda_fideq(&(ITOC(inode)->c_fid), fid);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#69: FILE: fs/coda/cnode.c:62:
+	ViceFid *fid = (ViceFid *)data;
+	ITOC(inode)->c_fid = *fid;

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: fs/coda/cnode.c:160:
+	if ( *inode ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: fs/coda/cnode.c:160:
+	if ( *inode ) {

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#175: FILE: fs/inode.c:455:
+static struct inode * find_inode(struct super_block * sb, unsigned long ino, struct list_head *head, int (*test)(struct inode *, void *), void *data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: fs/inode.c:455:
+static struct inode * find_inode(struct super_block * sb, unsigned long ino, struct list_head *head, int (*test)(struct inode *, void *), void *data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: fs/inode.c:455:
+static struct inode * find_inode(struct super_block * sb, unsigned long ino, struct list_head *head, int (*test)(struct inode *, void *), void *data)

WARNING:LONG_LINE: line length of 187 exceeds 100 columns
#193: FILE: fs/inode.c:510:
+static struct inode * get_new_inode(struct super_block *sb, unsigned long ino, struct list_head *head, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#193: FILE: fs/inode.c:510:
+static struct inode * get_new_inode(struct super_block *sb, unsigned long ino, struct list_head *head, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *data)

WARNING:SPACING: space prohibited before semicolon
#223: FILE: fs/inode.c:539:
+				sb->s_op->read_inode2(inode, data) ;

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#244: FILE: fs/inode.c:640:
+struct inode *iget4(struct super_block *sb, unsigned long ino, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *data)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#300: FILE: fs/nfs/inode.c:667:
+	if (!(inode = iget4(sb, ino, nfs_find_actor, nfs_init_locked, &desc)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#320: FILE: fs/reiserfs/inode.c:1141:
+int reiserfs_init_locked_inode (struct inode * inode, void *p)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: fs/reiserfs/inode.c:1141:
+int reiserfs_init_locked_inode (struct inode * inode, void *p)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/reiserfs/inode.c:1143:
+    struct reiserfs_iget4_args *args = (struct reiserfs_iget4_args *)p ;$

WARNING:SPACING: space prohibited before semicolon
#322: FILE: fs/reiserfs/inode.c:1143:
+    struct reiserfs_iget4_args *args = (struct reiserfs_iget4_args *)p ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#323: FILE: fs/reiserfs/inode.c:1144:
+    struct reiserfs_iget4_args *args = (struct reiserfs_iget4_args *)p ;
+    INODE_PKEY(inode)->k_dir_id = cpu_to_le32(args->objectid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/reiserfs/inode.c:1144:
+    INODE_PKEY(inode)->k_dir_id = cpu_to_le32(args->objectid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/reiserfs/inode.c:1145:
+    return 0;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#344: FILE: fs/reiserfs/inode.c:1231:
+int reiserfs_find_actor( struct inode *inode, void *opaque )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#344: FILE: fs/reiserfs/inode.c:1231:
+int reiserfs_find_actor( struct inode *inode, void *opaque )

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#365: FILE: fs/reiserfs/super.c:1073:
+    root_inode = iget4 (s, REISERFS_ROOT_OBJECTID, reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: fs/reiserfs/super.c:1073:
+    root_inode = iget4 (s, REISERFS_ROOT_OBJECTID, reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: fs/reiserfs/super.c:1073:
+    root_inode = iget4 (s, REISERFS_ROOT_OBJECTID, reiserfs_find_actor, reiserfs_init_locked_inode, (void *)(&args));

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#378: FILE: include/linux/fs.h:1210:
+extern struct inode * iget4(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#378: FILE: include/linux/fs.h:1210:
+extern struct inode * iget4(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#378: FILE: include/linux/fs.h:1210:
+extern struct inode * iget4(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#378: FILE: include/linux/fs.h:1210:
+extern struct inode * iget4(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#378: FILE: include/linux/fs.h:1210:
+extern struct inode * iget4(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#378: FILE: include/linux/fs.h:1210:
+extern struct inode * iget4(struct super_block *, unsigned long, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#393: FILE: include/linux/reiserfs_fs.h:1823:
+int reiserfs_find_actor(struct inode * inode, void *p) ;

WARNING:SPACING: space prohibited before semicolon
#393: FILE: include/linux/reiserfs_fs.h:1823:
+int reiserfs_find_actor(struct inode * inode, void *p) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#394: FILE: include/linux/reiserfs_fs.h:1824:
+int reiserfs_init_locked_inode(struct inode * inode, void *p) ;

WARNING:SPACING: space prohibited before semicolon
#394: FILE: include/linux/reiserfs_fs.h:1824:
+int reiserfs_init_locked_inode(struct inode * inode, void *p) ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 21 warnings, 2 checks, 313 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457656.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
