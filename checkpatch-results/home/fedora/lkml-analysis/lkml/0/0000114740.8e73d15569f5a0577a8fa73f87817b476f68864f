WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#54: FILE: drivers/md/Kconfig:130:
+config MD_RAID5_RESHAPE
+	bool "Support adding drives to a raid-5 array (highly experimental)"
+	depends on MD_RAID5 && EXPERIMENTAL
+	---help---
+	  A RAID-5 set can be expanded by adding extra drives. This
+	  requires "restriping" the array which means (almost) every
+	  block must be written to a different place.
+
+          This option allows this restiping to be done while the array
+	  is online.  However it is VERY EARLY EXPERIMENTAL code.
+	  In particular, if anything goes wrong while the restriping
+	  is happening, such as a power failure or a crash, all the
+	  data on the array will be LOST beyond any reasonable hope
+	  of recovery.
+
+	  This option is provided for experimentation and testing.
+	  Please to NOT use it on valuable data with good, tested, backups.
+
+	  Any reasonable current version of 'mdadm' can start an expansion
+	  with e.g.  mdadm --grow /dev/md0 --raid-disks=6
+	  Note: The array can only be expanded, not contracted.
+	  There should be enough spares already present to make the new
+	  array workable.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#163: FILE: drivers/md/raid5.c:2460:
+		    !test_bit(Faulty, &rdev->flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#165: FILE: drivers/md/raid5.c:2462:
+	if (conf->raid_disks + spares < raid_disks-1)
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#177: FILE: drivers/md/raid5.c:2474:
+	mddev->raid_disks = conf->raid_disks = raid_disks;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#187: FILE: drivers/md/raid5.c:2484:
+			if (raid5_add_disk(mddev, rdev)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: drivers/md/raid5.c:2486:
+				char nm[20];
+				set_bit(In_sync, &rdev->flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <In_sync>
#189: FILE: drivers/md/raid5.c:2486:
+				set_bit(In_sync, &rdev->flags);

CHECK:BRACES: Unbalanced braces around else statement
#193: FILE: drivers/md/raid5.c:2490:
+			} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#206: FILE: drivers/md/raid5.c:2503:
+		mddev->raid_disks = conf->raid_disks = conf->previous_raid_disks;

CHECK:CAMELCASE: Avoid CamelCase: <MaxSector>
#207: FILE: drivers/md/raid5.c:2504:
+		conf->expand_progress = MaxSector;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#220: FILE: drivers/md/raid5.c:2517:
+	conf->mddev->array_size = conf->mddev->size * (conf->mddev->raid_disks-1);
 	                                                                      ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/linux/raid/md.h:95:
+extern void md_do_sync(mddev_t *mddev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: include/linux/raid/md.h:96:
+extern void md_new_event(mddev_t *mddev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 11 checks, 192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
