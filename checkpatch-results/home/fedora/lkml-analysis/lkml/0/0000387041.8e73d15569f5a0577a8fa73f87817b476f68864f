ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#34: 
--- a/drivers/usb/misc/speedtouch.c	Mon Mar 10 10:35:23 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#41: FILE: drivers/usb/misc/speedtouch.c:276:
+unsigned int udsl_write_cells (unsigned int howmany, struct sk_buff *skb, unsigned char **target_p) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#41: FILE: drivers/usb/misc/speedtouch.c:276:
+unsigned int udsl_write_cells (unsigned int howmany, struct sk_buff *skb, unsigned char **target_p) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#41: FILE: drivers/usb/misc/speedtouch.c:276:
+unsigned int udsl_write_cells (unsigned int howmany, struct sk_buff *skb, unsigned char **target_p) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 176 exceeds 100 columns
#47: FILE: drivers/usb/misc/speedtouch.c:281:
+	dbg ("udsl_write_cells: howmany=%u, skb->len=%d, num_cells=%u, num_entire=%u, pdu_padding=%u", howmany, skb->len, ctrl->num_cells, ctrl->num_entire, ctrl->pdu_padding);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#47: FILE: drivers/usb/misc/speedtouch.c:281:
+	dbg ("udsl_write_cells: howmany=%u, skb->len=%d, num_cells=%u, num_entire=%u, pdu_padding=%u", howmany, skb->len, ctrl->num_cells, ctrl->num_entire, ctrl->pdu_padding);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udsl_write_cells', this function's name, in a string
#47: FILE: drivers/usb/misc/speedtouch.c:281:
+	dbg ("udsl_write_cells: howmany=%u, skb->len=%d, num_cells=%u, num_entire=%u, pdu_padding=%u", howmany, skb->len, ctrl->num_cells, ctrl->num_entire, ctrl->pdu_padding);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#52: FILE: drivers/usb/misc/speedtouch.c:284:
+	ne = min (howmany, ctrl->num_entire);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#57: FILE: drivers/usb/misc/speedtouch.c:287:
+		memcpy (target, ctrl->cell_header, ATM_CELL_HEADER);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: drivers/usb/misc/speedtouch.c:296:
+	if (!(ctrl->num_cells -= ne) || !(howmany -= ne))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: drivers/usb/misc/speedtouch.c:299:
+	memcpy (target, ctrl->cell_header, ATM_CELL_HEADER);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: drivers/usb/misc/speedtouch.c:313:
+		memcpy (target, ctrl->cell_header, ATM_CELL_HEADER);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#94: FILE: drivers/usb/misc/speedtouch.c:315:
+		memset (target, 0, ATM_CELL_PAYLOAD - ATM_AAL5_TRAILER);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#98: FILE: drivers/usb/misc/speedtouch.c:319:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#102: FILE: drivers/usb/misc/speedtouch.c:322:
+	memcpy (target, ctrl->aal5_trailer, ATM_AAL5_TRAILER);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: drivers/usb/misc/speedtouch.c:599:
+	num_written = udsl_write_cells (buf->free_cells, skb, &buf->free_start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: drivers/usb/misc/speedtouch.c:601:
+	dbg ("wrote %u cells from skb 0x%p to buffer 0x%p", num_written, skb, buf);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#145: FILE: drivers/usb/misc/speedtouch.c:603:
+	if (!(buf->free_cells -= num_written)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 0 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387041.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
