WARNING:TYPO_SPELLING: 'converstion' may be misspelled - perhaps 'conversion'?
#16: 
Subject: [RFC] UML converstion to generic irq code (requires hw_interrupt_type->release(...) patch)
                   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: arch/um/include/irq_user.h:13:
+extern void free_irq_by_irq_and_dev(unsigned int irq, void *dev_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/um/kernel/irq.c:90:
+       irq_enter();$

CHECK:SPACING: No space is necessary after a cast
#436: FILE: arch/um/kernel/irq.c:91:
+       __do_IRQ(irq, (struct pt_regs *) regs);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: arch/um/kernel/irq.c:91:
+       __do_IRQ(irq, (struct pt_regs *) regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: arch/um/kernel/irq.c:92:
+       irq_exit();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: arch/um/kernel/irq.c:93:
+       return 1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#735: FILE: arch/um/kernel/irq.c:130:
+ *  disable && end */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:REPEATED_WORD: Possible repeated word: 'blah'
#805: FILE: include/asm-um/hardirq.h:1:
+/* (c) 2004 cw@f00f.org, GPLv2 blah blah */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#805: FILE: include/asm-um/hardirq.h:1:
+/* (c) 2004 cw@f00f.org, GPLv2 blah blah */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#817: FILE: include/asm-um/hardirq.h:11:
+ * ____cacheline_aligned or maybe use per_cpu state? --cw */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#818: FILE: include/asm-um/hardirq.h:12:
+typedef struct {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#825: FILE: include/asm-um/hardirq.h:19:
+ * printk. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#828: FILE: include/asm-um/hardirq.h:22:
+	printk(KERN_ERR "unexpected IRQ %02x\n", irq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#829: FILE: include/asm-um/hardirq.h:23:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 2 checks, 756 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000239632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
