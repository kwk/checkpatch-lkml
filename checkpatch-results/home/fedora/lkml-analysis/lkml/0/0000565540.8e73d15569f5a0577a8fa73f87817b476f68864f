WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
> > reason doesn't find your router, even though "dump_pirq" obviously does..

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#49: FILE: arch/i386/kernel/pci-irq.c:300:
+	{ "PIIX", PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82371MX,   pirq_piix_get, pirq_piix_set },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#60: FILE: arch/i386/kernel/pci-irq.c:311:
+	{ "NatSemi", PCI_VENDOR_ID_CYRIX, PCI_DEVICE_ID_CYRIX_5520, pirq_cyrix_get, pirq_cyrix_set },

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(pirq_routers)
#79: FILE: arch/i386/kernel/pci-irq.c:332:
+	pirq_router = pirq_routers + sizeof(pirq_routers) / sizeof(pirq_routers[0]) - 1;

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: arch/i386/kernel/pci-irq.c:340:
+	for(r=pirq_routers; r->vendor; r++) {
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#105: FILE: arch/i386/kernel/pci-irq.c:340:
+	for(r=pirq_routers; r->vendor; r++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#115: FILE: arch/i386/kernel/pci-irq.c:347:
+		if (r->vendor == pirq_router_dev->vendor && r->device == pirq_router_dev->device) {
+			pirq_router = r;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: arch/i386/kernel/pci-irq.c:351:
+	printk("PCI: Using IRQ router %s [%04x/%04x] at %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: arch/i386/kernel/pci-irq.c:352:
+	printk("PCI: Using IRQ router %s [%04x/%04x] at %s\n",
+		pirq_router->name,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000565540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 6 warnings, 1 checks, 79 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000565540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
