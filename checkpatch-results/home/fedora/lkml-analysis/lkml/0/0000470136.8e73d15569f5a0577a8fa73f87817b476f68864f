WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
        o Handling of Extensions in driver broken in small contained functions

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#101: FILE: include/linux/netdevice.h:282:
+	 * See <net/iw_handler.h> for details. Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#102: FILE: include/linux/netdevice.h:283:
+	struct iw_handler_def *	wireless_handlers;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: include/linux/wireless.h:437:
+ * This structure defines the payload of an ioctl, and is used $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#219: FILE: include/linux/wireless.h:447:
+union	iwreq_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: include/linux/wireless.h:451:
+	 * Name of the protocol/provider... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#229: FILE: include/linux/wireless.h:457:
+					 * > 1000 = frequency in Hz */

WARNING:REPEATED_WORD: Possible repeated word: 'threshold'
#234: FILE: include/linux/wireless.h:462:
+	struct iw_param	rts;		/* RTS threshold threshold */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#301: FILE: include/net/iw_handler.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'shortcommings' may be misspelled - perhaps 'shortcomings'?
#325: FILE: include/net/iw_handler.h:25:
+ * However, there is a few shortcommings :
                            ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'apropriately' may be misspelled - perhaps 'appropriately'?
#340: FILE: include/net/iw_handler.h:40:
+ * the list of handler it supports, and those will be called apropriately.
                                                              ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'shortcomming' may be misspelled - perhaps 'shortcoming'?
#346: FILE: include/net/iw_handler.h:46:
+ * Hopefully, I've also addressed the shortcomming of the initial API.
                                       ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'controversials' may be misspelled - perhaps 'controversial'?
#386: FILE: include/net/iw_handler.h:86:
+ * Some of the choice I've made are pretty controversials. Defining an
                                            ^^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'maintainance' may be misspelled - perhaps 'maintenance'?
#394: FILE: include/net/iw_handler.h:94:
+ *		the benefit is easier maintainance.
   		                      ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#395: FILE: include/net/iw_handler.h:95:
+ *	o Flexible : it should accomodate a wide variety of driver
   	                       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#432: FILE: include/net/iw_handler.h:132:
+ * Some would have prefered functions defined this way :
                    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: include/net/iw_handler.h:133:
+ *^Istatic int mydriver_ioctl_setrate(struct net_device *dev, $

WARNING:TYPO_SPELLING: 'developper' may be misspelled - perhaps 'developer'?
#442: FILE: include/net/iw_handler.h:142:
+ * 4) I don't expect driver developper using the wrong field of the
                             ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: include/net/iw_handler.h:214:
+ * should do a commit after return from the iw_handler */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#531: FILE: include/net/iw_handler.h:231:
+ * cool features we might need one day ;-) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#560: FILE: include/net/iw_handler.h:260:
+struct iw_request_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#579: FILE: include/net/iw_handler.h:279:
+struct iw_handler_def
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: include/net/iw_handler.h:281:
+	 * last defined handler + 1) */

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#590: FILE: include/net/iw_handler.h:290:
+	iw_handler *		standard;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#595: FILE: include/net/iw_handler.h:295:
+	iw_handler *		private;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#599: FILE: include/net/iw_handler.h:299:
+	 * We will automatically export that to user space... */

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#600: FILE: include/net/iw_handler.h:300:
+	struct iw_priv_args *	private_args;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#603: FILE: include/net/iw_handler.h:303:
+	 * 'struct net_device' to here, to minimise bloat. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#618: FILE: include/net/iw_handler.h:318:
+struct iw_event
+{

WARNING:TYPO_SPELLING: 'Lenght' may be misspelled - perhaps 'Length'?
#619: FILE: include/net/iw_handler.h:319:
+	__u16		length;			/* Lenght of this stuff */
 	     		       			   ^^^^^^

WARNING:TYPO_SPELLING: 'stuctures' may be misspelled - perhaps 'structures'?
#637: FILE: include/net/iw_handler.h:337:
+ * use the stuctures below. Actually, this struct is also more
            ^^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#645: FILE: include/net/iw_handler.h:345:
+struct iw_ioctl_description
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#665: FILE: include/net/iw_handler.h:365:
+extern int dev_get_wireless_info(char * buffer, char **start, off_t offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: include/net/iw_handler.h:365:
+extern int dev_get_wireless_info(char * buffer, char **start, off_t offset,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#669: FILE: include/net/iw_handler.h:369:
+extern int wireless_process_ioctl(struct ifreq *ifr, unsigned int cmd);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#873: FILE: net/core/wireless.c:1:
+/*

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#884: FILE: net/core/wireless.c:12:
+/*
+ * API definition :

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#904: FILE: net/core/wireless.c:32:
+#include <asm/uaccess.h>		/* copy_to_user() */

WARNING:TYPO_SPELLING: 'Debuging' may be misspelled - perhaps 'Debugging'?
#917: FILE: net/core/wireless.c:45:
+/* Debuging stuff */
    ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#922: FILE: net/core/wireless.c:50:
+/*
+ * You should not use global variables, because or re-entrancy.

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#961: FILE: net/core/wireless.c:89:
+	{ IW_HEADER_TYPE_POINT, 0, (sizeof(struct sockaddr) + sizeof(struct iw_quality)), 0, IW_MAX_SPY, 0},

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#973: FILE: net/core/wireless.c:101:
+	{ IW_HEADER_TYPE_POINT, 0, (sizeof(struct sockaddr) + sizeof(struct iw_quality)), 0, IW_MAX_AP, 0},

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1011: FILE: net/core/wireless.c:139:
+	{ IW_HEADER_TYPE_POINT, 4, 1, 0, IW_ENCODING_TOKEN_MAX, IW_DESCR_FLAG_EVENT | IW_DESCR_FLAG_RESTRICT},

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1013: FILE: net/core/wireless.c:141:
+	{ IW_HEADER_TYPE_POINT, 0, 1, 0, IW_ENCODING_TOKEN_MAX, IW_DESCR_FLAG_DUMP | IW_DESCR_FLAG_RESTRICT},

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1025: FILE: net/core/wireless.c:153:
+/*
+ * Stuff that may be used in various place or doesn't fit in one

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1031: FILE: net/core/wireless.c:159:
+/*
+ * Return the driver handler associated with a specific Wireless Extension.

ERROR:SPACING: space required before the open parenthesis '('
#1040: FILE: net/core/wireless.c:168:
+	if(dev->wireless_handlers == NULL)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->wireless_handlers"
#1040: FILE: net/core/wireless.c:168:
+	if(dev->wireless_handlers == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#1045: FILE: net/core/wireless.c:173:
+	if(index < dev->wireless_handlers->num_standard)

ERROR:SPACING: space required before the open parenthesis '('
#1050: FILE: net/core/wireless.c:178:
+	if(index < dev->wireless_handlers->num_private)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1059: FILE: net/core/wireless.c:187:
+/*
+ * Get statistics out of the driver

CHECK:SPACING: No space is necessary after a cast
#1065: FILE: net/core/wireless.c:193:
+		(struct iw_statistics *) NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1068: FILE: net/core/wireless.c:196:
+	 * Definitely worse a thought... */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1073: FILE: net/core/wireless.c:201:
+/*
+ * Call the commit handler in the driver

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1090: FILE: net/core/wireless.c:218:
+static inline int call_commit_handler(struct net_device *	dev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wireless_handlers->standard[0] != NULL'
#1092: FILE: net/core/wireless.c:220:
+	if((netif_running(dev)) &&
+	   (dev->wireless_handlers->standard[0] != NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#1092: FILE: net/core/wireless.c:220:
+	if((netif_running(dev)) &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#1092: FILE: net/core/wireless.c:220:
+	if((netif_running(dev)) &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->wireless_handlers->standard[0]"
#1093: FILE: net/core/wireless.c:221:
+	   (dev->wireless_handlers->standard[0] != NULL)) {

CHECK:BRACES: Unbalanced braces around else statement
#1097: FILE: net/core/wireless.c:225:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1103: FILE: net/core/wireless.c:231:
+/*
+ * Number of private arguments

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1113: FILE: net/core/wireless.c:241:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1116: FILE: net/core/wireless.c:244:
+/*
+ * The /proc/net/wireless file is a human readable user-space interface

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1128: FILE: net/core/wireless.c:256:
+/*
+ * Print one entry (line) of /proc/net/wireless

CHECK:SPACING: No space is necessary after a cast
#1137: FILE: net/core/wireless.c:265:
+	if (stats != (struct iw_statistics *) NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1137: FILE: net/core/wireless.c:265:
+	if (stats != (struct iw_statistics *) NULL) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1156: FILE: net/core/wireless.c:284:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1164: FILE: net/core/wireless.c:292:
+/*
+ * Print info for /proc/net/wireless (print all entries)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1166: FILE: net/core/wireless.c:294:
+int dev_get_wireless_info(char * buffer, char **start, off_t offset,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1173: FILE: net/core/wireless.c:301:
+^I$

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1174: FILE: net/core/wireless.c:302:
+	struct net_device *	dev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: net/core/wireless.c:308:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#1185: FILE: net/core/wireless.c:313:
+	for (dev = dev_base; dev != NULL; dev = dev->next) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1212: FILE: net/core/wireless.c:340:
+/*
+ * The original user space API to configure all those Wireless Extensions

WARNING:TYPO_SPELLING: 'programatic' may be misspelled - perhaps 'programmatic'?
#1220: FILE: net/core/wireless.c:348:
+ *	Allow programatic access to /proc/net/wireless even if /proc
   	      ^^^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1220: FILE: net/core/wireless.c:348:
+/*
+ *	Allow programatic access to /proc/net/wireless even if /proc

CHECK:SPACING: No space is necessary after a cast
#1229: FILE: net/core/wireless.c:357:
+	if (stats != (struct iw_statistics *) NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1229: FILE: net/core/wireless.c:357:
+	if (stats != (struct iw_statistics *) NULL) {
[...]
+	} else
[...]

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1230: FILE: net/core/wireless.c:358:
+		struct iwreq *	wrq = (struct iwreq *)ifr;

ERROR:SPACING: space required before the open parenthesis '('
#1233: FILE: net/core/wireless.c:361:
+		if(copy_to_user(wrq->u.data.pointer, stats,

ERROR:SPACING: space required before the open parenthesis '('
#1238: FILE: net/core/wireless.c:366:
+		if(wrq->u.data.flags != 0)

CHECK:BRACES: Unbalanced braces around else statement
#1241: FILE: net/core/wireless.c:369:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1247: FILE: net/core/wireless.c:375:
+/*
+ * Export the driver private handler definition

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1250: FILE: net/core/wireless.c:378:
+static inline int ioctl_export_private(struct net_device *	dev,

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1251: FILE: net/core/wireless.c:379:
+				       struct ifreq *		ifr)

CHECK:SPACING: No space is necessary after a cast
#1253: FILE: net/core/wireless.c:381:
+	struct iwreq *				iwr = (struct iwreq *) ifr;

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#1253: FILE: net/core/wireless.c:381:
+	struct iwreq *				iwr = (struct iwreq *) ifr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wireless_handlers->num_private_args == 0'
#1256: FILE: net/core/wireless.c:384:
+	if((dev->wireless_handlers->num_private_args == 0) ||
+	   (dev->wireless_handlers->private_args == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wireless_handlers->private_args == NULL'
#1256: FILE: net/core/wireless.c:384:
+	if((dev->wireless_handlers->num_private_args == 0) ||
+	   (dev->wireless_handlers->private_args == NULL))

ERROR:SPACING: space required before the open parenthesis '('
#1256: FILE: net/core/wireless.c:384:
+	if((dev->wireless_handlers->num_private_args == 0) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->wireless_handlers->private_args"
#1257: FILE: net/core/wireless.c:385:
+	   (dev->wireless_handlers->private_args == NULL))

ERROR:SPACING: space required before the open parenthesis '('
#1261: FILE: net/core/wireless.c:389:
+	if(iwr->u.data.pointer == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iwr->u.data.pointer"
#1261: FILE: net/core/wireless.c:389:
+	if(iwr->u.data.pointer == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#1265: FILE: net/core/wireless.c:393:
+	if(iwr->u.data.length < (SIOCIWLASTPRIV - SIOCIWFIRSTPRIV + 1))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1283: FILE: net/core/wireless.c:411:
+/*
+ * Wrapper to call a standard Wireless Extension handler.

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1287: FILE: net/core/wireless.c:415:
+static inline int ioctl_standard_call(struct net_device *	dev,

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1288: FILE: net/core/wireless.c:416:
+				      struct ifreq *		ifr,

CHECK:SPACING: No space is necessary after a cast
#1292: FILE: net/core/wireless.c:420:
+	struct iwreq *				iwr = (struct iwreq *) ifr;

ERROR:POINTER_LOCATION: "foo *				bar" should be "foo *bar"
#1292: FILE: net/core/wireless.c:420:
+	struct iwreq *				iwr = (struct iwreq *) ifr;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1293: FILE: net/core/wireless.c:421:
+	const struct iw_ioctl_description *	descr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around standard_ioctl[cmd - SIOCIWFIRST]
#1298: FILE: net/core/wireless.c:426:
+	descr = &(standard_ioctl[cmd - SIOCIWFIRST]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1301: FILE: net/core/wireless.c:429:
+	printk(KERN_DEBUG "%s : Found standard handler for 0x%04X\n",

WARNING:LONG_LINE: line length of 175 exceeds 100 columns
#1303: FILE: net/core/wireless.c:431:
+	printk(KERN_DEBUG "Header type : %d, token type : %d, token_size : %d, max_token : %d\n", descr->header_type, descr->token_type, descr->token_size, descr->max_tokens);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1303: FILE: net/core/wireless.c:431:
+	printk(KERN_DEBUG "Header type : %d, token type : %d, token_size : %d, max_token : %d\n", descr->header_type, descr->token_type, descr->token_size, descr->max_tokens);

ERROR:SPACING: space required before the open parenthesis '('
#1311: FILE: net/core/wireless.c:439:
+	if(descr->header_type != IW_HEADER_TYPE_POINT) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#1313: FILE: net/core/wireless.c:441:
+		ret = handler(dev, &info, &(iwr->u), NULL);

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1315: FILE: net/core/wireless.c:443:
+		char *	extra;

ERROR:SPACING: space required before the open parenthesis '('
#1319: FILE: net/core/wireless.c:447:
+		if(IW_IS_SET(cmd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwr->u.data.pointer == NULL'
#1321: FILE: net/core/wireless.c:449:
+			if((iwr->u.data.pointer == NULL) &&
+			   (iwr->u.data.length != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwr->u.data.length != 0'
#1321: FILE: net/core/wireless.c:449:
+			if((iwr->u.data.pointer == NULL) &&
+			   (iwr->u.data.length != 0))

ERROR:SPACING: space required before the open parenthesis '('
#1321: FILE: net/core/wireless.c:449:
+			if((iwr->u.data.pointer == NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iwr->u.data.pointer"
#1321: FILE: net/core/wireless.c:449:
+			if((iwr->u.data.pointer == NULL) &&

ERROR:SPACING: space required before the open parenthesis '('
#1325: FILE: net/core/wireless.c:453:
+			if(iwr->u.data.length > descr->max_tokens)

ERROR:SPACING: space required before the open parenthesis '('
#1327: FILE: net/core/wireless.c:455:
+			if(iwr->u.data.length < descr->min_tokens)

ERROR:SPACING: space required before the open parenthesis '('
#1331: FILE: net/core/wireless.c:459:
+			if(iwr->u.data.pointer == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iwr->u.data.pointer"
#1331: FILE: net/core/wireless.c:459:
+			if(iwr->u.data.pointer == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#1335: FILE: net/core/wireless.c:463:
+			if(iwr->u.data.length < descr->max_tokens)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1341: FILE: net/core/wireless.c:469:
+		printk(KERN_DEBUG "Malloc %d bytes\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1346: FILE: net/core/wireless.c:474:
+		 * long... */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1349: FILE: net/core/wireless.c:477:
+		if (extra == NULL) {
+			return -ENOMEM;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!extra"
#1349: FILE: net/core/wireless.c:477:
+		if (extra == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwr->u.data.length != 0'
#1354: FILE: net/core/wireless.c:482:
+		if(IW_IS_SET(cmd) && (iwr->u.data.length != 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#1354: FILE: net/core/wireless.c:482:
+		if(IW_IS_SET(cmd) && (iwr->u.data.length != 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1363: FILE: net/core/wireless.c:491:
+			printk(KERN_DEBUG "Got %d bytes\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#1369: FILE: net/core/wireless.c:497:
+		ret = handler(dev, &info, &(iwr->u), extra);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1377: FILE: net/core/wireless.c:505:
+^I^I^I^Iret =  -EFAULT;^I^I^I^I   $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1379: FILE: net/core/wireless.c:507:
+			printk(KERN_DEBUG "Wrote %d bytes\n",

ERROR:SPACING: space required before the open parenthesis '('
#1389: FILE: net/core/wireless.c:517:
+	if(ret == -EIWCOMMIT)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1399: FILE: net/core/wireless.c:527:
+/*
+ * Wrapper to call a private Wireless Extension handler.

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1413: FILE: net/core/wireless.c:541:
+static inline int ioctl_private_call(struct net_device *	dev,

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1414: FILE: net/core/wireless.c:542:
+				     struct ifreq *		ifr,

CHECK:SPACING: No space is necessary after a cast
#1418: FILE: net/core/wireless.c:546:
+	struct iwreq *			iwr = (struct iwreq *) ifr;

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#1418: FILE: net/core/wireless.c:546:
+	struct iwreq *			iwr = (struct iwreq *) ifr;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1419: FILE: net/core/wireless.c:547:
+	struct iw_priv_args *		descr = NULL;

ERROR:SPACING: space required before the open parenthesis '('
#1426: FILE: net/core/wireless.c:554:
+	for(i = 0; i < dev->wireless_handlers->num_private_args; i++)

ERROR:SPACING: space required before the open parenthesis '('
#1427: FILE: net/core/wireless.c:555:
+		if(cmd == dev->wireless_handlers->private_args[i].cmd) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->wireless_handlers->private_args[i]
#1428: FILE: net/core/wireless.c:556:
+			descr = &(dev->wireless_handlers->private_args[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1433: FILE: net/core/wireless.c:561:
+	printk(KERN_DEBUG "%s : Found private handler for 0x%04X\n",

ERROR:SPACING: space required before the open parenthesis '('
#1435: FILE: net/core/wireless.c:563:
+	if(descr) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1436: FILE: net/core/wireless.c:564:
+		printk(KERN_DEBUG "Name %s, set %X, get %X\n",

ERROR:SPACING: space required before the open parenthesis '('
#1442: FILE: net/core/wireless.c:570:
+	if(descr != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "descr"
#1442: FILE: net/core/wireless.c:570:
+	if(descr != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1443: FILE: net/core/wireless.c:571:
+		if(IW_IS_SET(cmd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'extra_size < IFNAMSIZ'
#1448: FILE: net/core/wireless.c:576:
+			if((descr->set_args & IW_PRIV_SIZE_FIXED) &&
+			   (extra_size < IFNAMSIZ))

ERROR:SPACING: space required before the open parenthesis '('
#1448: FILE: net/core/wireless.c:576:
+			if((descr->set_args & IW_PRIV_SIZE_FIXED) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'extra_size < IFNAMSIZ'
#1456: FILE: net/core/wireless.c:584:
+			if((descr->get_args & IW_PRIV_SIZE_FIXED) &&
+			   (extra_size < IFNAMSIZ))

ERROR:SPACING: space required before the open parenthesis '('
#1456: FILE: net/core/wireless.c:584:
+			if((descr->get_args & IW_PRIV_SIZE_FIXED) &&

ERROR:SPACING: space required before the open parenthesis '('
#1467: FILE: net/core/wireless.c:595:
+	if(extra_size == 0) {

CHECK:SPACING: No space is necessary after a cast
#1469: FILE: net/core/wireless.c:597:
+		ret = handler(dev, &info, &(iwr->u), (char *) &(iwr->u));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#1469: FILE: net/core/wireless.c:597:
+		ret = handler(dev, &info, &(iwr->u), (char *) &(iwr->u));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#1469: FILE: net/core/wireless.c:597:
+		ret = handler(dev, &info, &(iwr->u), (char *) &(iwr->u));

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#1471: FILE: net/core/wireless.c:599:
+		char *	extra;

ERROR:SPACING: space required before the open parenthesis '('
#1475: FILE: net/core/wireless.c:603:
+		if(IW_IS_SET(cmd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwr->u.data.pointer == NULL'
#1477: FILE: net/core/wireless.c:605:
+			if((iwr->u.data.pointer == NULL) &&
+			   (iwr->u.data.length != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwr->u.data.length != 0'
#1477: FILE: net/core/wireless.c:605:
+			if((iwr->u.data.pointer == NULL) &&
+			   (iwr->u.data.length != 0))

ERROR:SPACING: space required before the open parenthesis '('
#1477: FILE: net/core/wireless.c:605:
+			if((iwr->u.data.pointer == NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iwr->u.data.pointer"
#1477: FILE: net/core/wireless.c:605:
+			if((iwr->u.data.pointer == NULL) &&

ERROR:SPACING: space required before the open parenthesis '('
#1482: FILE: net/core/wireless.c:610:
+			if(iwr->u.data.length > (descr->set_args &

ERROR:SPACING: space required before the open parenthesis '('
#1487: FILE: net/core/wireless.c:615:
+			if(iwr->u.data.pointer == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iwr->u.data.pointer"
#1487: FILE: net/core/wireless.c:615:
+			if(iwr->u.data.pointer == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1492: FILE: net/core/wireless.c:620:
+		printk(KERN_DEBUG "Malloc %d bytes\n", extra_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1496: FILE: net/core/wireless.c:624:
+		 * long... */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1498: FILE: net/core/wireless.c:626:
+		if (extra == NULL) {
+			return -ENOMEM;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!extra"
#1498: FILE: net/core/wireless.c:626:
+		if (extra == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwr->u.data.length != 0'
#1503: FILE: net/core/wireless.c:631:
+		if(IW_IS_SET(cmd) && (iwr->u.data.length != 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#1503: FILE: net/core/wireless.c:631:
+		if(IW_IS_SET(cmd) && (iwr->u.data.length != 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1511: FILE: net/core/wireless.c:639:
+			printk(KERN_DEBUG "Got %d elem\n", iwr->u.data.length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around iwr->u
#1516: FILE: net/core/wireless.c:644:
+		ret = handler(dev, &info, &(iwr->u), extra);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: net/core/wireless.c:651:
+^I^I^I^Iret =  -EFAULT;^I^I^I^I   $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1525: FILE: net/core/wireless.c:653:
+			printk(KERN_DEBUG "Wrote %d elem\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1534: FILE: net/core/wireless.c:662:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1536: FILE: net/core/wireless.c:664:
+	if(ret == -EIWCOMMIT)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1544: FILE: net/core/wireless.c:672:
+/*
+ * Main IOCTl dispatcher. Called from the main networking code

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1554: FILE: net/core/wireless.c:682:
+	 * The copy_to/from_user() of ifr is also dealt with in there */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1557: FILE: net/core/wireless.c:685:
+	if ((dev = __dev_get_by_name(ifr->ifr_name)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1562: FILE: net/core/wireless.c:690:
+	 * (cmd >= SIOCIWFIRST && cmd <= SIOCIWLAST) */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1563: FILE: net/core/wireless.c:691:
+^Iswitch(cmd) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1563: FILE: net/core/wireless.c:691:
+	switch(cmd) 
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1563: FILE: net/core/wireless.c:691:
+	switch(cmd) 

ERROR:SPACING: space required before the open parenthesis '('
#1571: FILE: net/core/wireless.c:699:
+			if(dev->wireless_handlers != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->wireless_handlers"
#1571: FILE: net/core/wireless.c:699:
+			if(dev->wireless_handlers != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1573: FILE: net/core/wireless.c:701:
+				 * the private handler ourselves */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1576: FILE: net/core/wireless.c:704:
+			// ## Fall-through for old API ##

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required before the open parenthesis '('
#1584: FILE: net/core/wireless.c:712:
+			if(handler != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "handler"
#1584: FILE: net/core/wireless.c:712:
+			if(handler != NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1586: FILE: net/core/wireless.c:714:
+				if(cmd < SIOCIWFIRSTPRIV)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1598: FILE: net/core/wireless.c:726:
+			if (dev->do_ioctl) {
+				return dev->do_ioctl(dev, ifr, cmd);
+			}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 66 warnings, 48 checks, 1478 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
