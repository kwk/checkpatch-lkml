WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#56: FILE: include/linux/sunrpc/auth.h:2:
+ * linux/include/linux/sunrpc/auth.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#73: FILE: include/linux/sunrpc/auth.h:97:
+struct rpc_auth *	rpcauth_create(rpc_authflavor_t, struct rpc_clnt *);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rpc_authflavor_t' should also have an identifier name
#73: FILE: include/linux/sunrpc/auth.h:97:
+struct rpc_auth *	rpcauth_create(rpc_authflavor_t, struct rpc_clnt *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_clnt *' should also have an identifier name
#73: FILE: include/linux/sunrpc/auth.h:97:
+struct rpc_auth *	rpcauth_create(rpc_authflavor_t, struct rpc_clnt *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/linux/sunrpc/svcauth.h:27:
+int	svc_auth_register(rpc_authflavor_t flavor,
+				void (*)(struct svc_rqst *,u32 *,u32 *));

ERROR:SPACING: space required after that ',' (ctx:OxV)
#121: FILE: include/linux/sunrpc/svcauth.h:27:
+				void (*)(struct svc_rqst *,u32 *,u32 *));
 				                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#121: FILE: include/linux/sunrpc/svcauth.h:27:
+				void (*)(struct svc_rqst *,u32 *,u32 *));
 				                                ^

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#129: FILE: include/linux/sunrpc/svcauth.h:43:
+struct svc_authops *	auth_getops(rpc_authflavor_t flavor);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#138: FILE: net/sunrpc/auth.c:2:
+ * linux/net/sunrpc/auth.c

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#150: FILE: net/sunrpc/auth.c:21:
+static struct rpc_authops *	auth_flavors[RPC_AUTH_MAXFLAVOR] = {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#160: FILE: net/sunrpc/auth.c:32:
+	if ((flavor = ops->au_flavor) >= RPC_AUTH_MAXFLAVOR)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#170: FILE: net/sunrpc/auth.c:45:
+	if ((flavor = ops->au_flavor) >= RPC_AUTH_MAXFLAVOR)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#182: FILE: net/sunrpc/auth.c:58:
+	if (flavor >= RPC_AUTH_MAXFLAVOR || !(ops = auth_flavors[flavor]))

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#191: FILE: net/sunrpc/auth_null.c:2:
+ * linux/net/sunrpc/auth_null.c

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#205: FILE: net/sunrpc/auth_null.c:114:
+		printk("RPC: bad verf flavor: %u\n", flavor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#213: FILE: net/sunrpc/auth_null.c:120:
+		printk("RPC: bad verf size: %u\n", size);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#222: FILE: net/sunrpc/auth_unix.c:2:
+ * linux/net/sunrpc/auth_unix.c

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: net/sunrpc/auth_unix.c:226:
+		printk("RPC: bad verf flavor: %u\n", flavor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: net/sunrpc/auth_unix.c:232:
+		printk("RPC: giant verf size: %u\n", size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#270: FILE: net/sunrpc/clnt.c:126:
+	printk(KERN_INFO "RPC: Couldn't create auth handle (flavor %u)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: net/sunrpc/clnt.c:127:
+	printk(KERN_INFO "RPC: Couldn't create auth handle (flavor %u)\n",
 		flavor);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#303: FILE: net/sunrpc/svcauth.c:55:
+	if (flavor >= RPC_AUTH_MAXFLAVOR || !(func = authtab[flavor])) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 11 warnings, 2 checks, 237 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431767.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
