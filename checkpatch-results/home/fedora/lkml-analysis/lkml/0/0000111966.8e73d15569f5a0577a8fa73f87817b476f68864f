WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
According to your suggestions, I have modified the patch for better formatting and other. Testing is going on fine. Here comes the patch attached as textfile V3_2dot6_patch3.txt

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#54: FILE: fs/minix/bitmap.c:29:
+		for (j=0; j<bh->b_size; j++)
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#54: FILE: fs/minix/bitmap.c:29:
+		for (j=0; j<bh->b_size; j++)
 		           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#62: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#62: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#62: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#62: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#62: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#62: FILE: fs/minix/bitmap.c:36:
+	i = ((numbits-(numblocks-1)*bh->b_size*8)/16)*2;
 	                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#70: FILE: fs/minix/bitmap.c:116:
+	int minix_inodes_per_block = BLOCK_SIZE/sizeof(struct minix_inode);
 	                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#95: FILE: fs/minix/bitmap.c:141:
+	int minix2_inodes_per_block = sb->s_blocksize/sizeof(struct minix2_inode);
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: fs/minix/bitmap.c:150:
+^Iblock = 2 + sbi->s_imap_blocks + sbi->s_zmap_blocks + $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#133: FILE: fs/minix/dir.c:15:
+typedef struct minix3_dir_entry minix3_dirent;

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/minix/dir.c:120:
+^I ^I^I^I} else {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/minix/dir.c:120:
+^I ^I^I^I} else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#156: FILE: fs/minix/dir.c:120:
+	 			} else {
+				name_ptr = de->name;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#164: FILE: fs/minix/dir.c:127:
+				unsigned l = strnlen(name_ptr,sbi->s_namelen);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: fs/minix/dir.c:127:
+				unsigned l = strnlen(name_ptr,sbi->s_namelen);
 				                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: fs/minix/dir.c:130:
+				over = filldir(dirent, name_ptr, l,
+					(n<<PAGE_CACHE_SHIFT) | offset,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#170: FILE: fs/minix/dir.c:130:
+					(n<<PAGE_CACHE_SHIFT) | offset,
 					  ^

CHECK:SPACING: No space is necessary after a cast
#192: FILE: fs/minix/dir.c:186:
+		de3 = (struct minix3_dir_entry *) kaddr;

CHECK:SPACING: No space is necessary after a cast
#197: FILE: fs/minix/dir.c:189:
+		for ( ; (char *) de <= kaddr ;

WARNING:SPACING: space prohibited before semicolon
#197: FILE: fs/minix/dir.c:189:
+		for ( ; (char *) de <= kaddr ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: fs/minix/dir.c:190:
+					de3 = minix_next_entry(de3,sbi),
 					                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: fs/minix/dir.c:191:
+					de = minix_next_entry(de,sbi)) {
 					                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: fs/minix/dir.c:195:
+ ^I^I^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: fs/minix/dir.c:195:
+ ^I^I^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/minix/dir.c:195:
+ ^I^I^I} else {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: fs/minix/dir.c:201:
+			if (namecompare(namelen,sbi->s_namelen,name,name_ptr))
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: fs/minix/dir.c:201:
+			if (namecompare(namelen,sbi->s_namelen,name,name_ptr))
 			                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: fs/minix/dir.c:201:
+			if (namecompare(namelen,sbi->s_namelen,name,name_ptr))
 			                                           ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: fs/minix/dir.c:220:
+	struct minix3_dir_entry * de3;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: fs/minix/dir.c:251:
+^I^I^I^Iinode_ptr = de3->inode; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: fs/minix/dir.c:251:
+^I^I^I^Iinode_ptr = de3->inode; ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: fs/minix/dir.c:252:
+^I^I ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: fs/minix/dir.c:252:
+^I^I ^I} else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: fs/minix/dir.c:253:
+  ^I^I^I^Iname_ptr = de->name;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: fs/minix/dir.c:253:
+  ^I^I^I^Iname_ptr = de->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/minix/dir.c:253:
+  ^I^I^I^Iname_ptr = de->name;$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#254: FILE: fs/minix/dir.c:258:
+				if (sbi->s_version == MINIX_V3) {
[...]
+		 		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: fs/minix/dir.c:260:
+^I^I ^I^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: fs/minix/dir.c:260:
+^I^I ^I^I} else {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: fs/minix/dir.c:269:
+			if (namecompare(namelen,sbi->s_namelen,name,name_ptr))
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: fs/minix/dir.c:269:
+			if (namecompare(namelen,sbi->s_namelen,name,name_ptr))
 			                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: fs/minix/dir.c:269:
+			if (namecompare(namelen,sbi->s_namelen,name,name_ptr))
 			                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: fs/minix/dir.c:286:
+	memcpy (name_ptr, name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: fs/minix/dir.c:288:
+		memset (name_ptr + namelen, 0, sbi->s_dirsize - namelen - 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: fs/minix/dir.c:291:
+		memset (name_ptr + namelen, 0, sbi->s_dirsize - namelen - 2);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#295: FILE: fs/minix/dir.c:335:
+	struct minix3_dir_entry * de3;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: fs/minix/dir.c:354:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: fs/minix/dir.c:354:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,".") : strcpy(de->name,".");
 	                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: fs/minix/dir.c:359:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: fs/minix/dir.c:359:
+	(sbi->s_version == MINIX_V3) ? strcpy(de3->name,"..") : strcpy(de->name,"..");
 	                                                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: fs/minix/dir.c:381:
+		minix3_dirent * de3 = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#355: FILE: fs/minix/dir.c:405:
+				if (!name_ptr[1]) {
[...]
-				} else if (de->name[1] != '.')
[...]
 					goto not_empty;
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#410: FILE: fs/minix/inode.c:132:
+		if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#411: FILE: fs/minix/inode.c:133:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: fs/minix/inode.c:133:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: fs/minix/inode.c:134:
+			printk ("MINIX-fs warning: remounting unchecked Minix filesystem V%i, "
+				"running fsck is recommended.\n", sbi->s_version);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#414: FILE: fs/minix/inode.c:136:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: fs/minix/inode.c:136:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#415: FILE: fs/minix/inode.c:137:
+			printk ("MINIX-fs warning: remounting Minix filesystem V%i with errors, "
+				"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: fs/minix/inode.c:138:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: fs/minix/inode.c:138:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/minix/inode.c:138:
+ ^I}$

ERROR:SPACING: space prohibited after that open parenthesis '('
#433: FILE: fs/minix/inode.c:205:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {

CHECK:SPACING: No space is necessary after a cast
#434: FILE: fs/minix/inode.c:206:
+		m3s = (struct minix3_super_block *) bh->b_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: fs/minix/inode.c:219:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#447: FILE: fs/minix/inode.c:219:
+	} else 

ERROR:SPACING: space required before the open parenthesis '('
#456: FILE: fs/minix/inode.c:262:
+		if(sbi->s_version != MINIX_V3) /* s_state is now out from V3 sb */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#466: FILE: fs/minix/inode.c:266:
+	if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version != MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#467: FILE: fs/minix/inode.c:267:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: fs/minix/inode.c:267:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "

WARNING:SPLIT_STRING: quoted string split across lines
#468: FILE: fs/minix/inode.c:268:
+		printk ("MINIX-fs: mounting unchecked Minix filesystem V%i, "
+			"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: fs/minix/inode.c:269:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#469: FILE: fs/minix/inode.c:269:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: fs/minix/inode.c:269:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version != MINIX_V3))$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#470: FILE: fs/minix/inode.c:270:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: fs/minix/inode.c:270:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#471: FILE: fs/minix/inode.c:271:
+		printk ("MINIX-fs: mounting Minix filesystem V%i with errors, "
+			"running fsck is recommended.\n", sbi->s_version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: fs/minix/inode.c:300:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: fs/minix/inode.c:301:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#482: FILE: fs/minix/inode.c:301:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: fs/minix/inode.c:301:
+ ^I^I       "%s.\n", s->s_id);$

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: fs/minix/inode.c:301:
+		printk("VFS: Can't find a Minix filesystem V1 | V2 | V3 on device "
+ 		       "%s.\n", s->s_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: fs/minix/inode.c:559:
+	struct inode * dir = dentry->d_parent->d_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#491: FILE: fs/minix/inode.c:560:
+	struct super_block * sb = dir->i_sb;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#511: FILE: fs/minix/itree_common.c:26:
+	return (block_t *)((char*)bh->b_data + bh->b_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#528: FILE: fs/minix/itree_common.c:295:
+	struct super_block * sb = inode->i_sb;

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#537: FILE: fs/minix/itree_common.c:305:
+	iblock = (inode->i_size + sb->s_blocksize -1) >> 10;
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: include/linux/minix_fs.h:26:
+#define MINIX3_SUPER_MAGIC^I0x4d5a^I^I/* minix V3 fs */ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 37 warnings, 18 checks, 507 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
