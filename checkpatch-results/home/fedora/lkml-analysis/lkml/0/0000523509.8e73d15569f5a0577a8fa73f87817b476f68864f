WARNING:TYPO_SPELLING: 'non-existant' may be misspelled - perhaps 'non-existent'?
#53: 
should be very minimal to non-existant. I think that a few of the
                          ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
+extern volatile int p_apicid_to_cpu[MAX_P_APICID];   /* phys apicid -> cpu 

WARNING:TYPO_SPELLING: 'adresses' may be misspelled - perhaps 'addresses'?
#72: 
about, whether they're using physical or logical adresses. It's
                                                 ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: arch/i386/kernel/apic.c:238:
+#ifndef CONFIG_MULTIQUAD   /* Multiquad rely on the lynxer to do this for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#169: FILE: arch/i386/kernel/apic.c:238:
us */

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: arch/i386/kernel/apic.c:341:
+	printk("Leaving ESR disabled.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: arch/i386/kernel/io_apic.c:61:
+#  define INT_DELIVERY_MODE 1     /* logical delivery broadcast to all $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#220: FILE: arch/i386/kernel/io_apic.c:62:
+#  define INT_DELIVERY_MODE 1     /* logical delivery broadcast to all 
+# endif

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: arch/i386/kernel/io_apic.c:1053:
+^I^I^Iprintk("Setting %d in the phys_id_present_map\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: arch/i386/kernel/io_apic.c:1053:
+			printk("Setting %d in the phys_id_present_map\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: arch/i386/kernel/io_apic.c:1054:
+			printk("Setting %d in the phys_id_present_map\n", 
+			phys_id_present_map |= 1 << mp_ioapics[apic].mpc_apicid;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#307: FILE: arch/i386/kernel/setup.c:2459:
+unsigned long cpu_initialized __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: arch/i386/kernel/smp.c:165:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/i386/kernel/smp.c:170:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: arch/i386/kernel/smp.c:176:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: arch/i386/kernel/smp.c:181:
+^I^I^I$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#381: FILE: arch/i386/kernel/smp.c:197:
+	for (query_cpu = 0; query_cpu < NR_CPUS; ++query_cpu) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: arch/i386/kernel/smp.c:200:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#384: FILE: arch/i386/kernel/smp.c:200:
+		if (query_mask & mask) {
+		

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: arch/i386/kernel/smp.c:205:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: arch/i386/kernel/smp.c:211:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/i386/kernel/smp.c:216:
+^I^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#440: FILE: arch/i386/kernel/smp.c:256:
+	for (cpu = 0; cpu < smp_num_cpus; ++cpu) {
+		send_IPI_mask(1 << cpu, vector);
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: arch/i386/kernel/smpboot.c:32:
+ *^I^IMartin J. Bligh^I: ^IAdded support for multi-quad systems$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#469: FILE: arch/i386/kernel/smpboot.c:63:
+volatile int p_apicid_to_cpu[MAX_P_APICID];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#472: FILE: arch/i386/kernel/smpboot.c:66:
+volatile int cpu_to_p_apicid[NR_CPUS];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#475: FILE: arch/i386/kernel/smpboot.c:69:
+volatile int l_apicid_to_cpu[MAX_L_APICID];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#477: FILE: arch/i386/kernel/smpboot.c:71:
+volatile int cpu_to_l_apicid[NR_CPUS];

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#498: FILE: arch/i386/kernel/smpboot.c:422:
+	 * bootstrap the CPUs, the APIC may be in a wierd state. Kick it.
 	                                            ^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#519: FILE: arch/i386/kernel/smpboot.c:487:
+	printk("Before tlbflush - processor: %d\n", current->processor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#524: FILE: arch/i386/kernel/smpboot.c:491:
+	printk("After tlbflush - processor: %d\n", current->processor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#536: FILE: arch/i386/kernel/smpboot.c:571:
+static void __init do_boot_cpu (int apicid)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#578: FILE: arch/i386/kernel/smpboot.c:645:
+	store1 = *((volatile unsigned short *) phys_to_virt(0xa));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#578: FILE: arch/i386/kernel/smpboot.c:645:
+	store1 = *((volatile unsigned short *) phys_to_virt(0xa));

CHECK:SPACING: No space is necessary after a cast
#579: FILE: arch/i386/kernel/smpboot.c:646:
+	*((volatile unsigned short *) phys_to_virt(0xa)) = start_eip >> 4;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#579: FILE: arch/i386/kernel/smpboot.c:646:
+	*((volatile unsigned short *) phys_to_virt(0xa)) = start_eip >> 4;

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#580: FILE: arch/i386/kernel/smpboot.c:647:
+	Dprintk("4.\n");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#581: FILE: arch/i386/kernel/smpboot.c:648:
+	store2 = *((volatile unsigned short *) phys_to_virt(0x8));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#581: FILE: arch/i386/kernel/smpboot.c:648:
+	store2 = *((volatile unsigned short *) phys_to_virt(0x8));

CHECK:SPACING: No space is necessary after a cast
#582: FILE: arch/i386/kernel/smpboot.c:649:
+	*((volatile unsigned short *) phys_to_virt(0x8)) = start_eip & 0xf;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#582: FILE: arch/i386/kernel/smpboot.c:649:
+	*((volatile unsigned short *) phys_to_virt(0x8)) = start_eip & 0xf;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#618: FILE: arch/i386/kernel/smpboot.c:690:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#625: FILE: arch/i386/kernel/smpboot.c:697:
+	udelay(200);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#658: FILE: arch/i386/kernel/smpboot.c:865:
 	if (send_status || accept_status || boot_status) {
[...]
+			cpu_to_l_apicid[cpu] = -1;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#678: FILE: arch/i386/kernel/smpboot.c:883:
+	printk("Restoring NMI vector\n");

CHECK:SPACING: No space is necessary after a cast
#679: FILE: arch/i386/kernel/smpboot.c:884:
+	*((volatile unsigned short *) phys_to_virt(0xa)) = store1;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#679: FILE: arch/i386/kernel/smpboot.c:884:
+	*((volatile unsigned short *) phys_to_virt(0xa)) = store1;

CHECK:SPACING: No space is necessary after a cast
#680: FILE: arch/i386/kernel/smpboot.c:885:
+	*((volatile unsigned short *) phys_to_virt(0x8)) = store2;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#680: FILE: arch/i386/kernel/smpboot.c:885:
+	*((volatile unsigned short *) phys_to_virt(0x8)) = store2;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#689: FILE: arch/i386/kernel/smpboot.c:937:
+extern unsigned int num_processors;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#699: FILE: arch/i386/kernel/smpboot.c:947:
+	printk("The MPS table says we have %d processors\n", num_processors);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#703: FILE: arch/i386/kernel/smpboot.c:951:
+	for (mps_cpu = num_mps_cpus-1; mps_cpu >= 0; --mps_cpu) {
 	                           ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#704: FILE: arch/i386/kernel/smpboot.c:952:
+		mps_cpu_to_l_apicid[mps_cpu] = \

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#705: FILE: arch/i386/kernel/smpboot.c:953:
+			((mps_cpu/4)*16) + (1 << (mps_cpu%4));
 			         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#705: FILE: arch/i386/kernel/smpboot.c:953:
+			((mps_cpu/4)*16) + (1 << (mps_cpu%4));
 			            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#705: FILE: arch/i386/kernel/smpboot.c:953:
+			((mps_cpu/4)*16) + (1 << (mps_cpu%4));
 			                                 ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#720: FILE: arch/i386/kernel/smpboot.c:966:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#730: FILE: arch/i386/kernel/smpboot.c:976:
+	for (apicid = 0; apicid < MAX_L_APICID; apicid++) {
+		l_apicid_to_cpu[apicid] = -1;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#734: FILE: arch/i386/kernel/smpboot.c:980:
+	for (apicid = 0; apicid < MAX_P_APICID; apicid++) {
+		p_apicid_to_cpu[apicid] = -1;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#772: FILE: arch/i386/kernel/smpboot.c:1080:
+		 * Don't even attempt to start the boot CPU!
+		*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: arch/i386/kernel/smpboot.c:1083:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#776: FILE: arch/i386/kernel/smpboot.c:1084:
+		if ((max_cpus >= 0) && (max_cpus <= cpucount+1))
 		                                            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_cpus >= 0'
#776: FILE: arch/i386/kernel/smpboot.c:1084:
+		if ((max_cpus >= 0) && (max_cpus <= cpucount+1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#785: FILE: arch/i386/kernel/smpboot.c:1093:
+			printk("CPU mps#%d not responding - cannot use it.\n", mps_cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: arch/i386/kernel/smpboot.c:1120:
+		if ((p_apicid_to_cpu[apicid] == -1) &&
 				(phys_cpu_present_map & (1 << apicid)))

CHECK:SPACING: No space is necessary after a cast
#842: FILE: drivers/char/serial.c:423:
+			return readb((unsigned long) xquad_portio + offset);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#843: FILE: drivers/char/serial.c:424:
+			return readb((unsigned long) xquad_portio + offset);
+		else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#843: FILE: drivers/char/serial.c:424:
+		else
[...]
 		return inb(info->port + offset);

CHECK:SPACING: No space is necessary after a cast
#854: FILE: drivers/char/serial.c:452:
+			writeb(value, (unsigned long) xquad_portio + offset);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#855: FILE: drivers/char/serial.c:453:
+		else
[...]
 		outb(value, info->port+offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: include/asm-i386/smp.h:65:
+extern volatile int p_apicid_to_cpu[MAX_P_APICID];   /* phys apicid -> cpu $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#917: FILE: include/asm-i386/smp.h:65:
+extern volatile int p_apicid_to_cpu[MAX_P_APICID];   /* phys apicid -> cpu 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#919: FILE: include/asm-i386/smp.h:66:
+extern volatile int p_apicid_to_cpu[MAX_P_APICID];   /* phys apicid -> cpu 
+#endif /* !CONFIG_MULTIQUAD */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: include/asm-i386/smp.h:67:
+extern volatile int cpu_to_p_apicid[NR_CPUS];        /* cpu -> phys apicid $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#920: FILE: include/asm-i386/smp.h:67:
+extern volatile int cpu_to_p_apicid[NR_CPUS];        /* cpu -> phys apicid 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#922: FILE: include/asm-i386/smp.h:68:
+extern volatile int l_apicid_to_cpu[MAX_L_APICID];   /* log apicid -> cpu $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#922: FILE: include/asm-i386/smp.h:68:
+extern volatile int cpu_to_p_apicid[NR_CPUS];        /* cpu -> phys apicid 
+extern volatile int l_apicid_to_cpu[MAX_L_APICID];   /* log apicid -> cpu 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: include/asm-i386/smp.h:69:
+extern volatile int cpu_to_l_apicid[NR_CPUS];        /* cpu -> log apicid $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#924: FILE: include/asm-i386/smp.h:69:
+extern volatile int l_apicid_to_cpu[MAX_L_APICID];   /* log apicid -> cpu 
+extern volatile int cpu_to_l_apicid[NR_CPUS];        /* cpu -> log apicid 

WARNING:INLINE: plain inline is preferred over __inline
#935: FILE: include/asm-i386/smp.h:92:
+extern __inline int logical_smp_processor_id(void)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#938: FILE: include/asm-i386/smp.h:95:
+	return GET_APIC_LOGICAL_ID(*(unsigned long *)(APIC_BASE+APIC_LDR));
 	                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: init/main.c:586:
+        /* remap the 256k range for cross-quad I/O */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: init/main.c:587:
+        xquad_portio = ioremap (XQUAD_PORTIO_BASE, XQUAD_PORTIO_LEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: init/main.c:587:
+        xquad_portio = ioremap (XQUAD_PORTIO_BASE, XQUAD_PORTIO_LEN);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#963: FILE: init/main.c:587:
+        xquad_portio = ioremap (XQUAD_PORTIO_BASE, XQUAD_PORTIO_LEN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: init/main.c:588:
+        printk("Cross quad portio set up at vaddr 0x%08lx\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: init/main.c:588:
+        printk("Cross quad portio set up at vaddr 0x%08lx\n", \$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#964: FILE: init/main.c:588:
+        printk("Cross quad portio set up at vaddr 0x%08lx\n", \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#964: FILE: init/main.c:588:
+        printk("Cross quad portio set up at vaddr 0x%08lx\n", \

CHECK:SPACING: No space is necessary after a cast
#965: FILE: init/main.c:589:
+		(u_long) xquad_portio);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523509.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 47 warnings, 22 checks, 788 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523509.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
