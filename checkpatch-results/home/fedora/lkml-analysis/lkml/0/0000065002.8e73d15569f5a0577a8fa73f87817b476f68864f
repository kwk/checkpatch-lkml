CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/linux/bootmem.h:44:
+extern unsigned long bootmem_bootmap_pages(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#71: FILE: include/linux/bootmem.h:44:
+extern unsigned long bootmem_bootmap_pages(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/bootmem.h:45:
+extern unsigned long init_bootmem(unsigned long addr, unsigned long memend);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/bootmem.h:46:
+extern void free_bootmem(unsigned long addr, unsigned long size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: include/linux/bootmem.h:47:
+extern void * __alloc_bootmem(unsigned long size,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/bootmem.h:47:
+extern void * __alloc_bootmem(unsigned long size,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: include/linux/bootmem.h:50:
+extern void * __alloc_bootmem_nopanic(unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/bootmem.h:50:
+extern void * __alloc_bootmem_nopanic(unsigned long size,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: include/linux/bootmem.h:53:
+extern void * __alloc_bootmem_low(unsigned long size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: include/linux/bootmem.h:53:
+extern void * __alloc_bootmem_low(unsigned long size,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: include/linux/bootmem.h:56:
+extern void * __alloc_bootmem_low_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/bootmem.h:56:
+extern void * __alloc_bootmem_low_node(pg_data_t *pgdat,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: include/linux/bootmem.h:60:
+extern void * __alloc_bootmem_core(struct bootmem_data *bdata,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/bootmem.h:60:
+extern void * __alloc_bootmem_core(struct bootmem_data *bdata,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: include/linux/bootmem.h:67:
+extern void reserve_bootmem(unsigned long addr, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/bootmem.h:78:
+extern unsigned long free_all_bootmem(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/bootmem.h:79:
+extern unsigned long free_all_bootmem_node(pg_data_t *pgdat);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: include/linux/bootmem.h:80:
+extern void * __alloc_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/linux/bootmem.h:80:
+extern void * __alloc_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/bootmem.h:84:
+extern unsigned long init_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/bootmem.h:88:
+extern void reserve_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/bootmem.h:91:
+extern void free_bootmem_node(pg_data_t *pgdat,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/bootmem.h:116:
+extern void *alloc_large_system_hash(const char *tablename,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: mm/bootmem.c:90:
+static unsigned long __init init_bootmem_core(pg_data_t *pgdat,
 	unsigned long mapstart, unsigned long start, unsigned long end)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: mm/bootmem.c:126:
+	BUG_ON(PFN_DOWN(addr) >= bdata->node_low_pfn);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: mm/bootmem.c:127:
+	BUG_ON(PFN_UP(addr + size) > bdata->node_low_pfn);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#331: FILE: mm/bootmem.c:151:
+	BUG_ON(PFN_DOWN(addr + size) > bdata->node_low_pfn);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#402: FILE: mm/bootmem.c:225:
+	areasize = (size + PAGE_SIZE-1) / PAGE_SIZE;
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#449: FILE: mm/bootmem.c:279:
+			areasize = (remaining_size + PAGE_SIZE-1) / PAGE_SIZE;
 			                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#492: FILE: mm/bootmem.c:359:
+	idx = (get_mapsize(bdata) + PAGE_SIZE-1) >> PAGE_SHIFT;
 	                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: mm/bootmem.c:371:
+unsigned long __init init_bootmem_node(pg_data_t *pgdat, unsigned long freepfn,
+				unsigned long startpfn, unsigned long endpfn)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065002.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 21 checks, 544 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065002.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
