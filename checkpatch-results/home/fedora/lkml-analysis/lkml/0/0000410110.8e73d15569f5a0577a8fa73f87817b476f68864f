WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -u --recursive --new-file -X /linux/dontdiff a/fs/fat/inode.c b/fs/fat/inode.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/fs/fat/inode.c	Fri Nov 22 22:40:41 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#52: FILE: fs/fat/inode.c:270:
+	opts->fs_fmask = opts->fs_dmask = current->fs->umask;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#61: FILE: fs/fat/inode.c:336:
+				opts->fs_fmask = opts->fs_dmask =

ERROR:SPACING: space required after that ',' (ctx:VxO)
#62: FILE: fs/fat/inode.c:337:
+					simple_strtoul(value,&value,8);
 					                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#62: FILE: fs/fat/inode.c:337:
+					simple_strtoul(value,&value,8);
 					                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: fs/fat/inode.c:337:
+					simple_strtoul(value,&value,8);
 					                           ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#62: FILE: fs/fat/inode.c:337:
+					simple_strtoul(value,&value,8);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#63: FILE: fs/fat/inode.c:338:
+				if (*value) ret = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#66: FILE: fs/fat/inode.c:341:
+		else if (!strcmp(this_char,"fmask")) {
 		                          ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#66: FILE: fs/fat/inode.c:341:
+		}
+		else if (!strcmp(this_char,"fmask")) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#67: FILE: fs/fat/inode.c:342:
+			if (!value || !*value) ret = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#67: FILE: fs/fat/inode.c:342:
+			if (!value || !*value) ret = 0;
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#68: FILE: fs/fat/inode.c:343:
+			else {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#69: FILE: fs/fat/inode.c:344:
+				opts->fs_fmask = simple_strtoul(value,&value,8);
 				                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#69: FILE: fs/fat/inode.c:344:
+				opts->fs_fmask = simple_strtoul(value,&value,8);
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: fs/fat/inode.c:344:
+				opts->fs_fmask = simple_strtoul(value,&value,8);
 				                                            ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#69: FILE: fs/fat/inode.c:344:
+				opts->fs_fmask = simple_strtoul(value,&value,8);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410110.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 3 warnings, 4 checks, 66 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410110.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
