WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#35: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#79: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:40:
+ *  $Id: ehca_hca.c,v 1.46 2006/02/06 10:17:34 schickhj Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#90: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:51:
+#define TO_MAX_INT(dest, src)			\
+	if (src >= INT_MAX)			\
+		dest = INT_MAX;			\
+	else					\
+		dest = src

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dest' - possible side-effects?
#90: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:51:
+#define TO_MAX_INT(dest, src)			\
+	if (src >= INT_MAX)			\
+		dest = INT_MAX;			\
+	else					\
+		dest = src

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'src' - possible side-effects?
#90: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:51:
+#define TO_MAX_INT(dest, src)			\
+	if (src >= INT_MAX)			\
+		dest = INT_MAX;			\
+	else					\
+		dest = src

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'src' may be better as '(src)' to avoid precedence issues
#90: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:51:
+#define TO_MAX_INT(dest, src)			\
+	if (src >= INT_MAX)			\
+		dest = INT_MAX;			\
+	else					\
+		dest = src

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rblock"
#109: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:70:
+	if (rblock == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:INDENTED_LABEL: labels should not be indented
#168: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:129:
+      query_device1:

WARNING:INDENTED_LABEL: labels should not be indented
#171: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:132:
+      query_device0:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rblock"
#191: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:152:
+	if (rblock == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#209: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:170:
+		props->active_mtu = props->max_mtu = IB_MTU_256;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#212: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:173:
+		props->active_mtu = props->max_mtu = IB_MTU_512;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#215: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:176:
+		props->active_mtu = props->max_mtu = IB_MTU_1024;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#218: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:179:
+		props->active_mtu = props->max_mtu = IB_MTU_2048;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#221: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:182:
+		props->active_mtu = props->max_mtu = IB_MTU_4096;

WARNING:INDENTED_LABEL: labels should not be indented
#247: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:208:
+      query_port1:

WARNING:INDENTED_LABEL: labels should not be indented
#250: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:211:
+      query_port0:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rblock"
#274: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:235:
+	if (rblock == NULL) {

WARNING:INDENTED_LABEL: labels should not be indented
#290: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:251:
+      query_pkey1:

WARNING:INDENTED_LABEL: labels should not be indented
#293: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:254:
+      query_pkey0:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rblock"
#318: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:279:
+	if (rblock == NULL) {

WARNING:INDENTED_LABEL: labels should not be indented
#335: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:296:
+      query_gid1:

WARNING:INDENTED_LABEL: labels should not be indented
#338: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:299:
+      query_gid0:

CHECK:SPACING: No space is necessary after a cast
#340: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:301:
+		*(u64 *) & gid->raw[0],

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#340: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:301:
+		*(u64 *) & gid->raw[0],
 		         ^

CHECK:SPACING: No space is necessary after a cast
#341: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:302:
+		*(u64 *) & gid->raw[8]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#341: FILE: drivers/infiniband/hw/ehca/ehca_hca.c:302:
+		*(u64 *) & gid->raw[8]);
 		         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103201.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 14 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103201.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
