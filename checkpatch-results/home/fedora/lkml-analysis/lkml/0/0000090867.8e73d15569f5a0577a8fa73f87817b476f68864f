WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/net/arm/Kconfig:35:
+config ARM_AT91_ETHER
+	tristate "AT91RM9200 Ethernet support"
+	depends on NET_ETHERNET && ARM && ARCH_AT91RM9200
+	select MII
+	help
+	  If you wish to compile a kernel for the AT91RM9200 and enable
+	  ethernet support, then you should always answer Y to this.

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/net/arm/at91_ether.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#111: FILE: drivers/net/arm/at91_ether.c:32:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#112: FILE: drivers/net/arm/at91_ether.c:33:
+#include <asm/uaccess.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#130: FILE: drivers/net/arm/at91_ether.c:51:
+/*
+ * Read from a EMAC register.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#140: FILE: drivers/net/arm/at91_ether.c:61:
+/*
+ * Write to a EMAC register.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#152: FILE: drivers/net/arm/at91_ether.c:73:
+/*
+ * Enable the MDIO bit in MAC control register

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#165: FILE: drivers/net/arm/at91_ether.c:86:
+/*
+ * Disable the MDIO bit in the MAC control register

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#176: FILE: drivers/net/arm/at91_ether.c:97:
+/*
+ * Wait until the PHY operation is complete.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#178: FILE: drivers/net/arm/at91_ether.c:99:
+static inline void at91_phy_wait(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: drivers/net/arm/at91_ether.c:104:
+			printk("at91_ether: MIO timeout\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#191: FILE: drivers/net/arm/at91_ether.c:112:
+/*
+ * Write value to the a PHY register

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#204: FILE: drivers/net/arm/at91_ether.c:125:
+/*
+ * Read value stored in a PHY register.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#221: FILE: drivers/net/arm/at91_ether.c:142:
+/*
+ * Access the PHY to determine the current link speed and mode, and update the

CHECK:SPACING: No space is necessary after a cast
#227: FILE: drivers/net/arm/at91_ether.c:148:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#233: FILE: drivers/net/arm/at91_ether.c:154:
+		printk(KERN_INFO "%s: Link down.\n", dev->name);

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#242: FILE: drivers/net/arm/at91_ether.c:163:
+			return;			/* Do nothing - another interrupt generated when negotiation complete */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#245: FILE: drivers/net/arm/at91_ether.c:166:
+		if ((lpa & LPA_100FULL) || (lpa & LPA_100HALF)) speed = SPEED_100;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#246: FILE: drivers/net/arm/at91_ether.c:167:
+		else speed = SPEED_10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#247: FILE: drivers/net/arm/at91_ether.c:168:
+		if ((lpa & LPA_100FULL) || (lpa & LPA_10FULL)) duplex = DUPLEX_FULL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#248: FILE: drivers/net/arm/at91_ether.c:169:
+		else duplex = DUPLEX_HALF;

CHECK:BRACES: braces {} should be used on all arms of this statement
#262: FILE: drivers/net/arm/at91_ether.c:183:
+		if (duplex == DUPLEX_FULL)		/* 10 Full Duplex */
[...]
+		else {}					/* 10 Half Duplex */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#264: FILE: drivers/net/arm/at91_ether.c:185:
+		else {}					/* 10 Half Duplex */

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#268: FILE: drivers/net/arm/at91_ether.c:189:
+	printk(KERN_INFO "%s: Link now %i-%s\n", dev->name, speed, (duplex == DUPLEX_FULL) ? "FullDuplex" : "HalfDuplex");

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#268: FILE: drivers/net/arm/at91_ether.c:189:
+	printk(KERN_INFO "%s: Link now %i-%s\n", dev->name, speed, (duplex == DUPLEX_FULL) ? "FullDuplex" : "HalfDuplex");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#273: FILE: drivers/net/arm/at91_ether.c:194:
+/*
+ * Handle interrupts from the PHY

CHECK:SPACING: No space is necessary after a cast
#277: FILE: drivers/net/arm/at91_ether.c:198:
+	struct net_device *dev = (struct net_device *) dev_id;

CHECK:SPACING: No space is necessary after a cast
#278: FILE: drivers/net/arm/at91_ether.c:199:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:TYPO_SPELLING: 'hander' may be misspelled - perhaps 'handler'?
#282: FILE: drivers/net/arm/at91_ether.c:203:
+	 * This hander is triggered on both edges, but the PHY chips expect
 	        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#282: FILE: drivers/net/arm/at91_ether.c:203:
+	/*
+	 * This hander is triggered on both edges, but the PHY chips expect

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161_ID'
#287: FILE: drivers/net/arm/at91_ether.c:208:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161A_ID'
#287: FILE: drivers/net/arm/at91_ether.c:208:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#288: FILE: drivers/net/arm/at91_ether.c:209:
+		read_phy(lp->phy_address, MII_DSINTR_REG, &phy);	/* ack interrupt in Davicom PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#292: FILE: drivers/net/arm/at91_ether.c:213:
+	}
+	else if (lp->phy_type == MII_LXT971A_ID) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#293: FILE: drivers/net/arm/at91_ether.c:214:
+		read_phy(lp->phy_address, MII_ISINTS_REG, &phy);	/* ack interrupt in Intel PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#297: FILE: drivers/net/arm/at91_ether.c:218:
+	}
+	else if (lp->phy_type == MII_BCM5221_ID) {

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#298: FILE: drivers/net/arm/at91_ether.c:219:
+		read_phy(lp->phy_address, MII_BCMINTR_REG, &phy);	/* ack interrupt in Broadcom PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#302: FILE: drivers/net/arm/at91_ether.c:223:
+	}
+	else if (lp->phy_type == MII_KS8721_ID) {

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#303: FILE: drivers/net/arm/at91_ether.c:224:
+		read_phy(lp->phy_address, MII_TPISTATUS, &phy);		/* ack interrupt in Micrel PHY */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#317: FILE: drivers/net/arm/at91_ether.c:238:
+/*
+ * Initialize and enable the PHY interrupt for link-state changes

CHECK:SPACING: No space is necessary after a cast
#321: FILE: drivers/net/arm/at91_ether.c:242:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#335: FILE: drivers/net/arm/at91_ether.c:256:
+		printk(KERN_ERR "at91_ether: PHY IRQ %d request failed - status %d!\n", irq_number, status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: drivers/net/arm/at91_ether.c:256:
+		printk(KERN_ERR "at91_ether: PHY IRQ %d request failed - status %d!\n", irq_number, status);

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#342: FILE: drivers/net/arm/at91_ether.c:263:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {	/* for Davicom PHY */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161_ID'
#342: FILE: drivers/net/arm/at91_ether.c:263:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {	/* for Davicom PHY */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161A_ID'
#342: FILE: drivers/net/arm/at91_ether.c:263:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {	/* for Davicom PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#347: FILE: drivers/net/arm/at91_ether.c:268:
+	}
+	else if (lp->phy_type == MII_LXT971A_ID) {	/* for Intel PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#352: FILE: drivers/net/arm/at91_ether.c:273:
+	}
+	else if (lp->phy_type == MII_BCM5221_ID) {	/* for Broadcom PHY */

ERROR:SPACING: space prohibited after that open parenthesis '('
#353: FILE: drivers/net/arm/at91_ether.c:274:
+		dsintr = (1 << 15) | ( 1 << 14);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#356: FILE: drivers/net/arm/at91_ether.c:277:
+	}
+	else if (lp->phy_type == MII_KS8721_ID) {	/* for Micrel PHY */

ERROR:SPACING: space prohibited after that open parenthesis '('
#357: FILE: drivers/net/arm/at91_ether.c:278:
+		dsintr = (1 << 10) | ( 1 << 8);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#366: FILE: drivers/net/arm/at91_ether.c:287:
+/*
+ * Disable the PHY interrupt

CHECK:SPACING: No space is necessary after a cast
#370: FILE: drivers/net/arm/at91_ether.c:291:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#374: FILE: drivers/net/arm/at91_ether.c:295:
+^Iif (lp->phy_type == MII_RTL8201_ID) ^I/* RTL8201 does not have an interrupt */$

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#384: FILE: drivers/net/arm/at91_ether.c:305:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {	/* for Davicom PHY */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161_ID'
#384: FILE: drivers/net/arm/at91_ether.c:305:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {	/* for Davicom PHY */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161A_ID'
#384: FILE: drivers/net/arm/at91_ether.c:305:
+	if ((lp->phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {	/* for Davicom PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#389: FILE: drivers/net/arm/at91_ether.c:310:
+	}
+	else if (lp->phy_type == MII_LXT971A_ID) {	/* for Intel PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#394: FILE: drivers/net/arm/at91_ether.c:315:
+	}
+	else if (lp->phy_type == MII_BCM5221_ID) {	/* for Broadcom PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#399: FILE: drivers/net/arm/at91_ether.c:320:
+	}
+	else if (lp->phy_type == MII_KS8721_ID) {	/* for Micrel PHY */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#413: FILE: drivers/net/arm/at91_ether.c:334:
+/*
+ * Perform a software reset of the PHY.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#415: FILE: drivers/net/arm/at91_ether.c:336:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#418: FILE: drivers/net/arm/at91_ether.c:339:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#440: FILE: drivers/net/arm/at91_ether.c:361:
+/*
+ * NOTE: Your bootloader must always set the MAC address correctly before

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#457: FILE: drivers/net/arm/at91_ether.c:378:
+		addr[5] = (lo & 0xff);			/* The CSB337 bootloader stores the MAC the wrong-way around */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#464: FILE: drivers/net/arm/at91_ether.c:385:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#464: FILE: drivers/net/arm/at91_ether.c:385:
+	else {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#481: FILE: drivers/net/arm/at91_ether.c:402:
+/*
+ * Set the ethernet MAC address in dev->dev_addr

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#498: FILE: drivers/net/arm/at91_ether.c:419:
+	printk(KERN_ERR "at91_ether: Your bootloader did not configure a MAC address.\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#502: FILE: drivers/net/arm/at91_ether.c:423:
+/*
+ * Program the hardware MAC address from dev->dev_addr.

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#506: FILE: drivers/net/arm/at91_ether.c:427:
+	at91_emac_write(AT91_EMAC_SA1L, (dev->dev_addr[3] << 24) | (dev->dev_addr[2] << 16) | (dev->dev_addr[1] << 8) | (dev->dev_addr[0]));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#514: FILE: drivers/net/arm/at91_ether.c:435:
+/*
+ * Store the new hardware address in dev->dev_addr, and update the MAC.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#516: FILE: drivers/net/arm/at91_ether.c:437:
+static int set_mac_address(struct net_device *dev, void* addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#526: FILE: drivers/net/arm/at91_ether.c:447:
+	printk("%s: Setting MAC address to %02x:%02x:%02x:%02x:%02x:%02x\n", dev->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/net/arm/at91_ether.c:448:
+	printk("%s: Setting MAC address to %02x:%02x:%02x:%02x:%02x:%02x\n", dev->name,
+		dev->dev_addr[0], dev->dev_addr[1], dev->dev_addr[2],

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#533: FILE: drivers/net/arm/at91_ether.c:454:
+static int inline hash_bit_value(int bitnr, __u8 *addr)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#541: FILE: drivers/net/arm/at91_ether.c:462:
+/*
+ * The hash address register is 64 bits long and takes up two locations in the memory map.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#569: FILE: drivers/net/arm/at91_ether.c:490:
+/*
+ * Return the hash index value for the specified address.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#578: FILE: drivers/net/arm/at91_ether.c:499:
+			bitval ^= hash_bit_value(i*6 + j, addr);
 			                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: drivers/net/arm/at91_ether.c:504:
+        return hash_index;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/net/arm/at91_ether.c:504:
+        return hash_index;$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#587: FILE: drivers/net/arm/at91_ether.c:508:
+/*
+ * Add multicast addresses to the internal multicast-hash table.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#595: FILE: drivers/net/arm/at91_ether.c:516:
+	mc_filter[0] = mc_filter[1] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#599: FILE: drivers/net/arm/at91_ether.c:520:
+		if (!curr) break;	/* unexpected end of list */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#610: FILE: drivers/net/arm/at91_ether.c:531:
+/*
+ * Enable/Disable promiscuous and multicast modes.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: drivers/net/arm/at91_ether.c:560:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#642: FILE: drivers/net/arm/at91_ether.c:563:
+
+

CHECK:SPACING: No space is necessary after a cast
#658: FILE: drivers/net/arm/at91_ether.c:579:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#669: FILE: drivers/net/arm/at91_ether.c:590:
+	if (lp->phy_media == PORT_FIBRE) {		/* override media type since mii.c doesn't know */

CHECK:SPACING: No space is necessary after a cast
#679: FILE: drivers/net/arm/at91_ether.c:600:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#695: FILE: drivers/net/arm/at91_ether.c:616:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#711: FILE: drivers/net/arm/at91_ether.c:632:
+	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#712: FILE: drivers/net/arm/at91_ether.c:633:
+	strlcpy(info->version, DRV_VERSION, sizeof(info->version));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#713: FILE: drivers/net/arm/at91_ether.c:634:
+	strlcpy(info->bus_info, dev->class_dev.dev->bus_id, sizeof(info->bus_info));

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#716: FILE: drivers/net/arm/at91_ether.c:637:
+static struct ethtool_ops at91ether_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#724: FILE: drivers/net/arm/at91_ether.c:645:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#728: FILE: drivers/net/arm/at91_ether.c:649:
+/*
+ * Initialize and start the Receiver and Transmit subsystems

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/net/arm/at91_ether.c:653:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

CHECK:SPACING: No space is necessary after a cast
#741: FILE: drivers/net/arm/at91_ether.c:662:
+		dlist->descriptors[i].addr = (unsigned int) &dlist_phys->recv_buf[i][0];

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#746: FILE: drivers/net/arm/at91_ether.c:667:
+	dlist->descriptors[i-1].addr |= EMAC_DESC_WRAP;
 	                    ^

CHECK:CAMELCASE: Avoid CamelCase: <rxBuffIndex>
#749: FILE: drivers/net/arm/at91_ether.c:670:
+	lp->rxBuffIndex = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#752: FILE: drivers/net/arm/at91_ether.c:673:
+	at91_emac_write(AT91_EMAC_RBQP, (unsigned long) dlist_phys);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#760: FILE: drivers/net/arm/at91_ether.c:681:
+/*
+ * Open the ethernet interface

CHECK:SPACING: No space is necessary after a cast
#764: FILE: drivers/net/arm/at91_ether.c:685:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: drivers/net/arm/at91_ether.c:688:
+        if (!is_valid_ether_addr(dev->dev_addr))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: drivers/net/arm/at91_ether.c:688:
+        if (!is_valid_ether_addr(dev->dev_addr))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: drivers/net/arm/at91_ether.c:689:
+        ^Ireturn -EADDRNOTAVAIL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#768: FILE: drivers/net/arm/at91_ether.c:689:
+        ^Ireturn -EADDRNOTAVAIL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: drivers/net/arm/at91_ether.c:689:
+        ^Ireturn -EADDRNOTAVAIL;$

WARNING:TYPO_SPELLING: 'incase' may be misspelled - perhaps 'in case'?
#776: FILE: drivers/net/arm/at91_ether.c:697:
+	/* Update the MAC address (incase user has changed it) */
 	                           ^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#800: FILE: drivers/net/arm/at91_ether.c:721:
+/*
+ * Close the interface

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#826: FILE: drivers/net/arm/at91_ether.c:747:
+/*
+ * Transmit packet.

CHECK:SPACING: No space is necessary after a cast
#830: FILE: drivers/net/arm/at91_ether.c:751:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#848: FILE: drivers/net/arm/at91_ether.c:769:
+		printk(KERN_ERR "at91_ether.c: at91ether_tx() called, but device is busy!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'at91ether_tx', this function's name, in a string
#848: FILE: drivers/net/arm/at91_ether.c:769:
+		printk(KERN_ERR "at91_ether.c: at91ether_tx() called, but device is busy!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#850: FILE: drivers/net/arm/at91_ether.c:771:
+		return 1;	/* if we return anything but zero, dev.c:1055 calls kfree_skb(skb)
+				on this skb, he also reports -ENETDOWN and printk's, so either

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#851: FILE: drivers/net/arm/at91_ether.c:772:
+				we free and return(0) or don't free and return 1 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#858: FILE: drivers/net/arm/at91_ether.c:779:
+/*
+ * Update the current statistics from the internal statistics registers.

CHECK:SPACING: No space is necessary after a cast
#862: FILE: drivers/net/arm/at91_ether.c:783:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#866: FILE: drivers/net/arm/at91_ether.c:787:
+		lp->stats.rx_packets += at91_emac_read(AT91_EMAC_OK);		/* Good frames received */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#868: FILE: drivers/net/arm/at91_ether.c:789:
+		lp->stats.rx_frame_errors += ale;				/* Alignment errors */

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#870: FILE: drivers/net/arm/at91_ether.c:791:
+		lp->stats.rx_length_errors += lenerr;				/* Excessive Length or Undersize Frame error */

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#873: FILE: drivers/net/arm/at91_ether.c:794:
+		lp->stats.rx_fifo_errors += at91_emac_read(AT91_EMAC_DRFC);	/* Receive buffer not available */

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#877: FILE: drivers/net/arm/at91_ether.c:798:
+		lp->stats.tx_packets += at91_emac_read(AT91_EMAC_FRA);		/* Frames successfully transmitted */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#878: FILE: drivers/net/arm/at91_ether.c:799:
+		lp->stats.tx_fifo_errors += at91_emac_read(AT91_EMAC_TUE);	/* Transmit FIFO underruns */

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#879: FILE: drivers/net/arm/at91_ether.c:800:
+		lp->stats.tx_carrier_errors += at91_emac_read(AT91_EMAC_CSE);	/* Carrier Sense errors */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#880: FILE: drivers/net/arm/at91_ether.c:801:
+		lp->stats.tx_heartbeat_errors += at91_emac_read(AT91_EMAC_SQEE);/* Heartbeat error */

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#887: FILE: drivers/net/arm/at91_ether.c:808:
+		lp->stats.collisions += (at91_emac_read(AT91_EMAC_SCOL) + at91_emac_read(AT91_EMAC_MCOL) + lcol + ecol);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#893: FILE: drivers/net/arm/at91_ether.c:814:
+/*
+ * Extract received frame from buffer descriptors and sent to upper layers.

CHECK:SPACING: No space is necessary after a cast
#898: FILE: drivers/net/arm/at91_ether.c:819:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#907: FILE: drivers/net/arm/at91_ether.c:828:
+		pktlen = dlist->descriptors[lp->rxBuffIndex].size & 0x7ff;	/* Length of frame including FCS */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#909: FILE: drivers/net/arm/at91_ether.c:830:
+		if (skb != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#920: FILE: drivers/net/arm/at91_ether.c:841:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#920: FILE: drivers/net/arm/at91_ether.c:841:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#922: FILE: drivers/net/arm/at91_ether.c:843:
+			printk(KERN_NOTICE "%s: Memory squeeze, dropping packet.\n", dev->name);

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#928: FILE: drivers/net/arm/at91_ether.c:849:
+		dlist->descriptors[lp->rxBuffIndex].addr &= ~EMAC_DESC_DONE;	/* reset ownership bit */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#929: FILE: drivers/net/arm/at91_ether.c:850:
+		if (lp->rxBuffIndex == MAX_RX_DESCR-1)				/* wrap after last buffer */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#929: FILE: drivers/net/arm/at91_ether.c:850:
+		if (lp->rxBuffIndex == MAX_RX_DESCR-1)				/* wrap after last buffer */
 		                                   ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#937: FILE: drivers/net/arm/at91_ether.c:858:
+/*
+ * MAC interrupt handler

CHECK:SPACING: No space is necessary after a cast
#941: FILE: drivers/net/arm/at91_ether.c:862:
+	struct net_device *dev = (struct net_device *) dev_id;

CHECK:SPACING: No space is necessary after a cast
#942: FILE: drivers/net/arm/at91_ether.c:863:
+	struct at91_private *lp = (struct at91_private *) dev->priv;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#946: FILE: drivers/net/arm/at91_ether.c:867:
+	/* MAC Interrupt Status register indicates what interrupts are pending.
+	   It is automatically cleared once read. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#946: FILE: drivers/net/arm/at91_ether.c:867:
+	   It is automatically cleared once read. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#973: FILE: drivers/net/arm/at91_ether.c:894:
+		printk("%s: ROVR error\n", dev->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#979: FILE: drivers/net/arm/at91_ether.c:900:
+/*
+ * Initialize the ethernet interface

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#981: FILE: drivers/net/arm/at91_ether.c:902:
+static int __init at91ether_setup(unsigned long phy_type, unsigned short phy_address, struct platform_device *pdev)

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#1008: FILE: drivers/net/arm/at91_ether.c:929:
+	lp->dlist = (struct recv_desc_bufs *) dma_alloc_coherent(NULL, sizeof(struct recv_desc_bufs), (dma_addr_t *) &lp->dlist_phys, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#1008: FILE: drivers/net/arm/at91_ether.c:929:
+	lp->dlist = (struct recv_desc_bufs *) dma_alloc_coherent(NULL, sizeof(struct recv_desc_bufs), (dma_addr_t *) &lp->dlist_phys, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1008: FILE: drivers/net/arm/at91_ether.c:929:
+	lp->dlist = (struct recv_desc_bufs *) dma_alloc_coherent(NULL, sizeof(struct recv_desc_bufs), (dma_addr_t *) &lp->dlist_phys, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lp->dlist"
#1009: FILE: drivers/net/arm/at91_ether.c:930:
+	if (lp->dlist == NULL) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1036: FILE: drivers/net/arm/at91_ether.c:957:
+		at91_emac_write(AT91_EMAC_CFG, AT91_EMAC_CLK_DIV32 | AT91_EMAC_BIG | AT91_EMAC_RMII);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phy_type == MII_DM9161_ID'
#1043: FILE: drivers/net/arm/at91_ether.c:964:
+	if ((phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161A_ID'
#1043: FILE: drivers/net/arm/at91_ether.c:964:
+	if ((phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID)) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1066: FILE: drivers/net/arm/at91_ether.c:987:
+		dma_free_coherent(NULL, sizeof(struct recv_desc_bufs), lp->dlist, (dma_addr_t)lp->dlist_phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1080: FILE: drivers/net/arm/at91_ether.c:1001:
+	printk(KERN_INFO "%s: AT91 ethernet at 0x%08x int=%d %s%s (%02x:%02x:%02x:%02x:%02x:%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: drivers/net/arm/at91_ether.c:1002:
+	printk(KERN_INFO "%s: AT91 ethernet at 0x%08x int=%d %s%s (%02x:%02x:%02x:%02x:%02x:%02x)\n",
+		dev->name, (uint) dev->base_addr, dev->irq,

CHECK:SPACING: No space is necessary after a cast
#1081: FILE: drivers/net/arm/at91_ether.c:1002:
+		dev->name, (uint) dev->base_addr, dev->irq,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phy_type == MII_DM9161_ID'
#1086: FILE: drivers/net/arm/at91_ether.c:1007:
+	if ((phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->phy_type == MII_DM9161A_ID'
#1086: FILE: drivers/net/arm/at91_ether.c:1007:
+	if ((phy_type == MII_DM9161_ID) || (lp->phy_type == MII_DM9161A_ID))

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1087: FILE: drivers/net/arm/at91_ether.c:1008:
+		printk(KERN_INFO "%s: Davicom 9196 PHY %s\n", dev->name, (lp->phy_media == PORT_FIBRE) ? "(Fiber)" : "(Copper)");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1087: FILE: drivers/net/arm/at91_ether.c:1008:
+		printk(KERN_INFO "%s: Davicom 9196 PHY %s\n", dev->name, (lp->phy_media == PORT_FIBRE) ? "(Fiber)" : "(Copper)");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1089: FILE: drivers/net/arm/at91_ether.c:1010:
+		printk(KERN_INFO "%s: Intel LXT971A PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1091: FILE: drivers/net/arm/at91_ether.c:1012:
+		printk(KERN_INFO "%s: Realtek RTL8201(B)L PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1093: FILE: drivers/net/arm/at91_ether.c:1014:
+		printk(KERN_INFO "%s: Broadcom BCM5221 PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1095: FILE: drivers/net/arm/at91_ether.c:1016:
+		printk(KERN_INFO "%s: National Semiconductor DP83847 PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1097: FILE: drivers/net/arm/at91_ether.c:1018:
+		printk(KERN_INFO "%s: Altima AC101L PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1099: FILE: drivers/net/arm/at91_ether.c:1020:
+		printk(KERN_INFO "%s: Micrel KS8721 PHY\n", dev->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1105: FILE: drivers/net/arm/at91_ether.c:1026:
+/*
+ * Detect MAC and PHY and perform initialization

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1116: FILE: drivers/net/arm/at91_ether.c:1037:
+		printk(KERN_ERR "at91_ether: no clock defined\n");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1129: FILE: drivers/net/arm/at91_ether.c:1050:
+		switch (phy_id) {
+			case MII_DM9161_ID:		/* Davicom 9161: PHY_ID1 = 0x181, PHY_ID2 = B881 */
+			case MII_DM9161A_ID:		/* Davicom 9161A: PHY_ID1 = 0x181, PHY_ID2 = B8A0 */
+			case MII_LXT971A_ID:		/* Intel LXT971A: PHY_ID1 = 0x13, PHY_ID2 = 78E0 */
+			case MII_RTL8201_ID:		/* Realtek RTL8201: PHY_ID1 = 0, PHY_ID2 = 0x8201 */
+			case MII_BCM5221_ID:		/* Broadcom BCM5221: PHY_ID1 = 0x40, PHY_ID2 = 0x61e0 */
+			case MII_DP83847_ID:		/* National Semiconductor DP83847:  */
+			case MII_AC101L_ID:		/* Altima AC101L: PHY_ID1 = 0x22, PHY_ID2 = 0x5520 */
+			case MII_KS8721_ID:		/* Micrel KS8721: PHY_ID1 = 0x22, PHY_ID2 = 0x1610 */

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1130: FILE: drivers/net/arm/at91_ether.c:1051:
+			case MII_DM9161_ID:		/* Davicom 9161: PHY_ID1 = 0x181, PHY_ID2 = B881 */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1131: FILE: drivers/net/arm/at91_ether.c:1052:
+			case MII_DM9161A_ID:		/* Davicom 9161A: PHY_ID1 = 0x181, PHY_ID2 = B8A0 */

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1132: FILE: drivers/net/arm/at91_ether.c:1053:
+			case MII_LXT971A_ID:		/* Intel LXT971A: PHY_ID1 = 0x13, PHY_ID2 = 78E0 */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1133: FILE: drivers/net/arm/at91_ether.c:1054:
+			case MII_RTL8201_ID:		/* Realtek RTL8201: PHY_ID1 = 0, PHY_ID2 = 0x8201 */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1134: FILE: drivers/net/arm/at91_ether.c:1055:
+			case MII_BCM5221_ID:		/* Broadcom BCM5221: PHY_ID1 = 0x40, PHY_ID2 = 0x61e0 */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1136: FILE: drivers/net/arm/at91_ether.c:1057:
+			case MII_AC101L_ID:		/* Altima AC101L: PHY_ID1 = 0x22, PHY_ID2 = 0x5520 */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1137: FILE: drivers/net/arm/at91_ether.c:1058:
+			case MII_KS8721_ID:		/* Micrel KS8721: PHY_ID1 = 0x22, PHY_ID2 = 0x1610 */

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1150: FILE: drivers/net/arm/at91_ether.c:1071:
+static int __devexit at91ether_remove(struct platform_device *pdev)

CHECK:SPACING: No space is necessary after a cast
#1152: FILE: drivers/net/arm/at91_ether.c:1073:
+	struct at91_private *lp = (struct at91_private *) at91_dev->priv;

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1156: FILE: drivers/net/arm/at91_ether.c:1077:
+	dma_free_coherent(NULL, sizeof(struct recv_desc_bufs), lp->dlist, (dma_addr_t)lp->dlist_phys);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1196: FILE: drivers/net/arm/at91_ether.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1213: FILE: drivers/net/arm/at91_ether.h:18:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1262: FILE: drivers/net/arm/at91_ether.h:67:
+struct rbf_t
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1268: FILE: drivers/net/arm/at91_ether.h:73:
+struct recv_desc_bufs
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1274: FILE: drivers/net/arm/at91_ether.h:79:
+struct at91_private
+{

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1309: FILE: drivers/net/ne2k-pci.c:123:
 } pci_clone_list[] __devinitdata = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1316: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1317: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:2:
+ * include/asm-arm/arch-at91rm9200/at91rm9200_emac.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:BIT_MACRO: Prefer using the BIT macro
#1335: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:20:
+#define		AT91_EMAC_LB		(1 <<  0)	/* Loopback */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1336: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:21:
+#define		AT91_EMAC_LBL		(1 <<  1)	/* Loopback Local */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1337: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:22:
+#define		AT91_EMAC_RE		(1 <<  2)	/* Receive Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1338: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:23:
+#define		AT91_EMAC_TE		(1 <<  3)	/* Transmit Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1339: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:24:
+#define		AT91_EMAC_MPE		(1 <<  4)	/* Management Port Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1340: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:25:
+#define		AT91_EMAC_CSR		(1 <<  5)	/* Clear Statistics Registers */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1341: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:26:
+#define		AT91_EMAC_INCSTAT	(1 <<  6)	/* Increment Statistics Registers */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1342: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:27:
+#define		AT91_EMAC_WES		(1 <<  7)	/* Write Enable for Statistics Registers */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1343: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:28:
+#define		AT91_EMAC_BP		(1 <<  8)	/* Back Pressure */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1346: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:31:
+#define		AT91_EMAC_SPD		(1 <<  0)	/* Speed */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1347: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:32:
+#define		AT91_EMAC_FD		(1 <<  1)	/* Full Duplex */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1348: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:33:
+#define		AT91_EMAC_BR		(1 <<  2)	/* Bit Rate */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1349: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:34:
+#define		AT91_EMAC_CAF		(1 <<  4)	/* Copy All Frames */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1350: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:35:
+#define		AT91_EMAC_NBC		(1 <<  5)	/* No Broadcast */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1351: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:36:
+#define		AT91_EMAC_MTI		(1 <<  6)	/* Multicast Hash Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1352: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:37:
+#define		AT91_EMAC_UNI		(1 <<  7)	/* Unicast Hash Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1353: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:38:
+#define		AT91_EMAC_BIG		(1 <<  8)	/* Receive 1522 Bytes */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1354: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:39:
+#define		AT91_EMAC_EAE		(1 <<  9)	/* External Address Match Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1357: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:42:
+#define		AT91_EMAC_CLK_DIV16		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1360: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:45:
+#define		AT91_EMAC_RTY		(1 << 12)	/* Retry Test */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1361: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:46:
+#define		AT91_EMAC_RMII		(1 << 13)	/* Reduce MII (RMII) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1364: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:49:
+#define		AT91_EMAC_SR_LINK	(1 <<  0)	/* Link */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1365: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:50:
+#define		AT91_EMAC_SR_MDIO	(1 <<  1)	/* MDIO pin */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1366: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:51:
+#define		AT91_EMAC_SR_IDLE	(1 <<  2)	/* PHY idle */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1372: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:57:
+#define		AT91_EMAC_NCRC		(1     << 15)	/* No CRC */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1375: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:60:
+#define		AT91_EMAC_TSR_OVR	(1 <<  0)	/* Transmit Buffer Overrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1376: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:61:
+#define		AT91_EMAC_TSR_COL	(1 <<  1)	/* Collision Occurred */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1377: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:62:
+#define		AT91_EMAC_TSR_RLE	(1 <<  2)	/* Retry Limit Exceeded */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1378: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:63:
+#define		AT91_EMAC_TSR_IDLE	(1 <<  3)	/* Transmitter Idle */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1379: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:64:
+#define		AT91_EMAC_TSR_BNQ	(1 <<  4)	/* Transmit Buffer not Queued */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1380: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:65:
+#define		AT91_EMAC_TSR_COMP	(1 <<  5)	/* Transmit Complete */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1381: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:66:
+#define		AT91_EMAC_TSR_UND	(1 <<  6)	/* Transmit Underrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1386: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:71:
+#define		AT91_EMAC_RSR_BNA	(1 <<  0)	/* Buffer Not Available */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1387: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:72:
+#define		AT91_EMAC_RSR_REC	(1 <<  1)	/* Frame Received */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1388: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:73:
+#define		AT91_EMAC_RSR_OVR	(1 <<  2)	/* RX Overrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1391: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:76:
+#define		AT91_EMAC_DONE		(1 <<  0)	/* Management Done */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1392: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:77:
+#define		AT91_EMAC_RCOM		(1 <<  1)	/* Receive Complete */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1393: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:78:
+#define		AT91_EMAC_RBNA		(1 <<  2)	/* Receive Buffer Not Available */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1394: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:79:
+#define		AT91_EMAC_TOVR		(1 <<  3)	/* Transmit Buffer Overrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1395: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:80:
+#define		AT91_EMAC_TUND		(1 <<  4)	/* Transmit Buffer Underrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1396: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:81:
+#define		AT91_EMAC_RTRY		(1 <<  5)	/* Retry Limit */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1397: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:82:
+#define		AT91_EMAC_TBRE		(1 <<  6)	/* Transmit Buffer Register Empty */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1398: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:83:
+#define		AT91_EMAC_TCOM		(1 <<  7)	/* Transmit Complete */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1399: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:84:
+#define		AT91_EMAC_TIDLE		(1 <<  8)	/* Transmit Idle */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1400: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:85:
+#define		AT91_EMAC_LINK		(1 <<  9)	/* Link */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1401: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:86:
+#define		AT91_EMAC_ROVR		(1 << 10)	/* RX Overrun */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1402: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:87:
+#define		AT91_EMAC_ABT		(1 << 11)	/* Abort */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1413: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:98:
+#define			AT91_EMAC_RW_W		(1 << 28)

WARNING:TYPO_SPELLING: 'Deffered' may be misspelled - perhaps 'Differed'?
#1426: FILE: include/asm-arm/arch-at91rm9200/at91rm9200_emac.h:111:
+#define AT91_EMAC_DTE		0x58	/* Deffered Transmission Frame */
                      		    	   ^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090867.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 114 warnings, 95 checks, 1372 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090867.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
