WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -ruN linux-original/arch/arm/mach-integrator/cpu.c linux/arch/arm/mach-integrator/cpu.c

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: include/linux/cpufreq.h:119:
+^Ichar           ^I^Iname[CPUFREQ_NAME_LEN];$

WARNING:SPACING: Unnecessary space before function pointer arguments
#195: FILE: include/linux/cpufreq.h:121:
+	int     (*init)        (struct cpufreq_policy *policy);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#196: FILE: include/linux/cpufreq.h:122:
+	int     (*exit)        (struct cpufreq_policy *policy);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: kernel/cpufreq.c:227:
+static ssize_t show_scaling_driver (struct device *dev, char *buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#257: FILE: kernel/cpufreq.c:242:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_scaling_driver' to 'scaling_driver_show'
#266: FILE: kernel/cpufreq.c:267:
+static DEVICE_ATTR(scaling_driver, S_IRUGO, show_scaling_driver, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#266: FILE: kernel/cpufreq.c:267:
+static DEVICE_ATTR(scaling_driver, S_IRUGO, show_scaling_driver, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: kernel/cpufreq.c:339:
+	device_create_file (dev, &dev_attr_scaling_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: kernel/cpufreq.c:365:
+	device_remove_file (dev, &dev_attr_scaling_governor);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#429: FILE: kernel/cpufreq.c:1267:
+		cpufreq_driver->policy = kmalloc(NR_CPUS * sizeof(struct cpufreq_policy), GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#429: FILE: kernel/cpufreq.c:1267:
+		cpufreq_driver->policy = kmalloc(NR_CPUS * sizeof(struct cpufreq_policy), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: kernel/cpufreq.c:1273:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: kernel/cpufreq.c:1301:
+^Iif (!cpufreq_driver || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'driver != cpufreq_driver'
#477: FILE: kernel/cpufreq.c:1301:
+	if (!cpufreq_driver || 
+	    ((driver != cpufreq_driver) && (driver != NULL))) { /* compat */

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'driver != NULL'
#477: FILE: kernel/cpufreq.c:1301:
+	if (!cpufreq_driver || 
+	    ((driver != cpufreq_driver) && (driver != NULL))) { /* compat */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "driver"
#478: FILE: kernel/cpufreq.c:1302:
+	    ((driver != cpufreq_driver) && (driver != NULL))) { /* compat */

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#497: FILE: kernel/cpufreq.c:1316:
+		unsigned int i;
+		for (i=0; i<NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#497: FILE: kernel/cpufreq.c:1316:
+		for (i=0; i<NR_CPUS; i++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#497: FILE: kernel/cpufreq.c:1316:
+		for (i=0; i<NR_CPUS; i++) {
 		           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#497: FILE: kernel/cpufreq.c:1316:
+		for (i=0; i<NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: kernel/cpufreq.c:1317:
+^I^I^Iif (cpu_online(i)) $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400240.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 13 warnings, 4 checks, 420 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400240.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
