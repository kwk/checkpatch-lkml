WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#20: 
This patch was sent out to this and pcihpd-discuss mailing lists on 7/10.  However, it didn't show up on this mailing list most probably due to the message size.  Now I make it into 4 parts and resend them.  There were already a few discussions on this patch.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#35: 
--- a/drivers/pci/hotplug/cpqphp_core.c	2003-07-02 13:38:40.000000000 -0700

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/pci/hotplug/cpqphp_core.c:119:
+	dbg("%s\n",__FUNCTION__);
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#314: FILE: drivers/pci/hotplug/cpqphp_core.c:119:
+	dbg("%s\n",__FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: drivers/pci/hotplug/cpqphp_core.c:160:
+			kfree (new_slot->hotplug_slot->info);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: drivers/pci/hotplug/cpqphp_core.c:161:
+			kfree (new_slot->hotplug_slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: drivers/pci/hotplug/cpqphp_core.c:162:
+			kfree (new_slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/pci/hotplug/cpqphp_core.c:174:
+^I^I/*  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#402: FILE: drivers/pci/hotplug/cpqphp_core.c:191:
+		new_slot->hpc_ops->get_power_status(new_slot, &(new_slot->hotplug_slot->info->power_status));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_slot->hotplug_slot->info->power_status
#402: FILE: drivers/pci/hotplug/cpqphp_core.c:191:
+		new_slot->hpc_ops->get_power_status(new_slot, &(new_slot->hotplug_slot->info->power_status));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#403: FILE: drivers/pci/hotplug/cpqphp_core.c:192:
+		new_slot->hpc_ops->get_attention_status(new_slot, &(new_slot->hotplug_slot->info->attention_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_slot->hotplug_slot->info->attention_status
#403: FILE: drivers/pci/hotplug/cpqphp_core.c:192:
+		new_slot->hpc_ops->get_attention_status(new_slot, &(new_slot->hotplug_slot->info->attention_status));

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#404: FILE: drivers/pci/hotplug/cpqphp_core.c:193:
+		new_slot->hpc_ops->get_latch_status(new_slot, &(new_slot->hotplug_slot->info->latch_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_slot->hotplug_slot->info->latch_status
#404: FILE: drivers/pci/hotplug/cpqphp_core.c:193:
+		new_slot->hpc_ops->get_latch_status(new_slot, &(new_slot->hotplug_slot->info->latch_status));

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#405: FILE: drivers/pci/hotplug/cpqphp_core.c:194:
+		new_slot->hpc_ops->get_adapter_status(new_slot, &(new_slot->hotplug_slot->info->adapter_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_slot->hotplug_slot->info->adapter_status
#405: FILE: drivers/pci/hotplug/cpqphp_core.c:194:
+		new_slot->hpc_ops->get_adapter_status(new_slot, &(new_slot->hotplug_slot->info->adapter_status));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#407: FILE: drivers/pci/hotplug/cpqphp_core.c:196:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 187 exceeds 100 columns
#408: FILE: drivers/pci/hotplug/cpqphp_core.c:197:
+		dbg("Registering bus=%x dev=%x hp_slot=%x sun=%x slot_device_offset=%x\n", new_slot->bus, new_slot->device, new_slot->hp_slot, new_slot->number, ctrl->slot_device_offset);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: drivers/pci/hotplug/cpqphp_core.c:216:
 
+

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#523: FILE: drivers/pci/hotplug/cpqphp_core.c:244:
+	rc = phphpc_get_ctlr_slot_config(ctrl, &num_ctlr_slots, &first_device_num, &physical_slot_num, &updown, &flags);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#525: FILE: drivers/pci/hotplug/cpqphp_core.c:246:
+		err("%s: get_ctlr_slot_config fail for b:d (%x:%x)\n", __FUNCTION__, ctrl->bus, ctrl->device);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_ctlr_slot_config', this function's name, in a string
#525: FILE: drivers/pci/hotplug/cpqphp_core.c:246:
+		err("%s: get_ctlr_slot_config fail for b:d (%x:%x)\n", __FUNCTION__, ctrl->bus, ctrl->device);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#525: FILE: drivers/pci/hotplug/cpqphp_core.c:246:
+		err("%s: get_ctlr_slot_config fail for b:d (%x:%x)\n", __FUNCTION__, ctrl->bus, ctrl->device);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: drivers/pci/hotplug/cpqphp_core.c:250:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: drivers/pci/hotplug/cpqphp_core.c:252:
+^I *  But legacy HPC does not have it. so we call phprm $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#575: FILE: drivers/pci/hotplug/cpqphp_core.c:257:
+			err("%s: cannot map psn for b:d (%x:%x)\n", __FUNCTION__, ctrl->bus, ctrl->device);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#575: FILE: drivers/pci/hotplug/cpqphp_core.c:257:
+			err("%s: cannot map psn for b:d (%x:%x)\n", __FUNCTION__, ctrl->bus, ctrl->device);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#593: FILE: drivers/pci/hotplug/cpqphp_core.c:269:
+		__FUNCTION__, num_ctlr_slots, first_device_num, physical_slot_num, updown, ctrl->bus, ctrl->device);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/pci/hotplug/cpqphp_core.c:269:
+	dbg("%s: num_slot(0x%x) 1st_dev(0x%x) psn(0x%x) updown(%d) for b:d (%x:%x)\n",
+		__FUNCTION__, num_ctlr_slots, first_device_num, physical_slot_num, updown, ctrl->bus, ctrl->device);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#593: FILE: drivers/pci/hotplug/cpqphp_core.c:269:
+		__FUNCTION__, num_ctlr_slots, first_device_num, physical_slot_num, updown, ctrl->bus, ctrl->device);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#596: FILE: drivers/pci/hotplug/cpqphp_core.c:271:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#674: FILE: drivers/pci/hotplug/cpqphp_core.c:305:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#711: FILE: drivers/pci/hotplug/cpqphp_core.c:318:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#737: FILE: drivers/pci/hotplug/cpqphp_core.c:331:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:TYPO_SPELLING: 'tihs' may be misspelled - perhaps 'this'?
#1124: FILE: drivers/pci/hotplug/cpqphp_core.c:449:
+	int first_device_num;	/* first PCI device number supported by tihs HPC */
 	                     	                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'tihs' may be misspelled - perhaps 'this'?
#1125: FILE: drivers/pci/hotplug/cpqphp_core.c:450:
+	int num_ctlr_slots;		/* number of slots supported by tihs HPC */
 	                   		                                ^^^^

CHECK:SPACING: No space is necessary after a cast
#1128: FILE: drivers/pci/hotplug/cpqphp_core.c:453:
+	ctrl = (struct controller *) kmalloc(sizeof(struct controller), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1128: FILE: drivers/pci/hotplug/cpqphp_core.c:453:
+	ctrl = (struct controller *) kmalloc(sizeof(struct controller), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ctrl)...) over kmalloc(sizeof(struct controller)...)
#1128: FILE: drivers/pci/hotplug/cpqphp_core.c:453:
+	ctrl = (struct controller *) kmalloc(sizeof(struct controller), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1130: FILE: drivers/pci/hotplug/cpqphp_core.c:455:
+		err("%s : out of memory\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/pci/hotplug/cpqphp_core.c:463:
+	rc = phphpc_init(ctrl, pdev,
+				handle_switch_change,

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1205: FILE: drivers/pci/hotplug/cpqphp_core.c:488:
+	dbg("ctrl bus=0x%x, device=%x, function=%x, irq=%x\n", ctrl->bus, ctrl->device, ctrl->function, pdev->irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: drivers/pci/hotplug/cpqphp_core.c:503:
+^I * $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1246: FILE: drivers/pci/hotplug/cpqphp_core.c:511:
+	ctrl->slot_device_offset = first_device_num = ctrl->first_device_num;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_33MHz>
#1315: FILE: drivers/pci/hotplug/cpqphp_core.c:547:
+		ctrl->speed = PCI_SPEED_33MHz;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1328: FILE: drivers/pci/hotplug/cpqphp_core.c:556:
+	dbg("ctrl->bus = %d, ctrl->rev = %d, speed = %x ctlrcap = %x\n", ctrl->bus, ctrl->rev, ctrl->speed, ctrl->ctlrcap);

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#1329: FILE: drivers/pci/hotplug/cpqphp_core.c:557:
+	dbg(" button mode = %x, switch present = %x, push_flag = %x\n", PUSH_BUTTON(ctrl->ctlrcap), SLOT_SWITCH(ctrl->ctlrcap), ctrl->push_flag);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1350: FILE: drivers/pci/hotplug/cpqphp_core.c:573:
+^I/* $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around func->presence_save
#1387: FILE: drivers/pci/hotplug/cpqphp_core.c:593:
+		t_slot->hpc_ops->get_adapter_status(t_slot, &(func->presence_save));

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1389: FILE: drivers/pci/hotplug/cpqphp_core.c:595:
+		func->switch_save = !getstatus? 0x10:0;
 		                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1389: FILE: drivers/pci/hotplug/cpqphp_core.c:595:
+		func->switch_save = !getstatus? 0x10:0;
 		                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1426: FILE: drivers/pci/hotplug/cpqphp_core.c:613:
+	cpqhp_create_ctrl_files( ctrl);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1551: FILE: drivers/pci/hotplug/cpqphp_core.c:667:
 	while (ctrl) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1586: FILE: drivers/pci/hotplug/cpqphp_core.c:754:
 static struct pci_device_id hpcd_pci_tbl[] __devinitdata = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1669: FILE: drivers/pci/hotplug/cpqphp_core.c:821:
 {
+

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1902: FILE: drivers/pci/hotplug/cpqphp.h:46:
+/*#define dbg(format, arg...) do { if (cpqhp_debug) printk(KERN_DEBUG "%s: " format, MY_NAME , ## arg); } while (0)*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1903: FILE: drivers/pci/hotplug/cpqphp.h:47:
+#define dbg(format, arg...) do { if (cpqhp_debug) printk("%s: " format, MY_NAME , ## arg); } while (0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1903: FILE: drivers/pci/hotplug/cpqphp.h:47:
+#define dbg(format, arg...) do { if (cpqhp_debug) printk("%s: " format, MY_NAME , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1903: FILE: drivers/pci/hotplug/cpqphp.h:47:
+#define dbg(format, arg...) do { if (cpqhp_debug) printk("%s: " format, MY_NAME , ## arg); } while (0)
                                                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1904: FILE: drivers/pci/hotplug/cpqphp.h:48:
+#define err(format, arg...) printk(KERN_ERR "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1904: FILE: drivers/pci/hotplug/cpqphp.h:48:
+#define err(format, arg...) printk(KERN_ERR "%s: " format, MY_NAME , ## arg)
                                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1905: FILE: drivers/pci/hotplug/cpqphp.h:49:
+#define info(format, arg...) printk(KERN_INFO "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1905: FILE: drivers/pci/hotplug/cpqphp.h:49:
+#define info(format, arg...) printk(KERN_INFO "%s: " format, MY_NAME , ## arg)
                                                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1906: FILE: drivers/pci/hotplug/cpqphp.h:50:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1906: FILE: drivers/pci/hotplug/cpqphp.h:50:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format, MY_NAME , ## arg)
                                                                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1935: FILE: drivers/pci/hotplug/cpqphp.h:110:
+	void * hpc_ctlr_handle;			/* HPC controller handle */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SpeedCap>
#1979: FILE: drivers/pci/hotplug/cpqphp.h:141:
+#define SpeedCap        0x0001	/* Bit 0 Speed_capability: 0=33MHz, 1=66MHz	*/

CHECK:CAMELCASE: Avoid CamelCase: <PushButton>
#1980: FILE: drivers/pci/hotplug/cpqphp.h:142:
+#define PushButton      0x0002	/* Bit 1 Push_button : 0=present, 1=none	*/

CHECK:CAMELCASE: Avoid CamelCase: <SlotSwitch>
#1981: FILE: drivers/pci/hotplug/cpqphp.h:143:
+#define SlotSwitch      0x0004	/* Bit 2 Slot_switch_type: 0=present, 1=none	*/

CHECK:CAMELCASE: Avoid CamelCase: <DeFeaturePHP>
#1982: FILE: drivers/pci/hotplug/cpqphp.h:144:
+#define DeFeaturePHP    0x0008	/* Bit 3 DeFeature PHP: 0=no PHP supported, 1=PHP	*/

CHECK:CAMELCASE: Avoid CamelCase: <AltBaseAddr>
#1983: FILE: drivers/pci/hotplug/cpqphp.h:145:
+#define AltBaseAddr     0x0010	/* Bit 4 Alternate_base_address: 0=none , 1=supported	*/

CHECK:CAMELCASE: Avoid CamelCase: <PCICfgSpace>
#1984: FILE: drivers/pci/hotplug/cpqphp.h:146:
+#define PCICfgSpace     0x0020	/* Bit 5 PCI_config_space:	*/

CHECK:CAMELCASE: Avoid CamelCase: <PCIXSpeed>
#1987: FILE: drivers/pci/hotplug/cpqphp.h:149:
+#define PCIXSpeed       0x0040	/* Bit 6 PCIX_speed: */

CHECK:CAMELCASE: Avoid CamelCase: <PCIXSupport>
#1991: FILE: drivers/pci/hotplug/cpqphp.h:153:
+#define PCIXSupport     0x0080	/* Bit 7 PCIX_support: 0=conventional PCI, 1=PCI-X	*/

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#1994: FILE: drivers/pci/hotplug/cpqphp.h:156:
+#define	SPEED_CAP_33MHZ(cap)	!(cap & SpeedCap)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#1995: FILE: drivers/pci/hotplug/cpqphp.h:157:
+#define	SPEED_CAP_66MHZ(cap)	(cap & SpeedCap)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#1996: FILE: drivers/pci/hotplug/cpqphp.h:158:
+#define	PUSH_BUTTON(cap)	!(cap & PushButton)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#1997: FILE: drivers/pci/hotplug/cpqphp.h:159:
+#define	SLOT_SWITCH(cap)	!(cap & SlotSwitch)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#1998: FILE: drivers/pci/hotplug/cpqphp.h:160:
+#define	PHP_SUPPORTED(cap)	(cap & DeFeaturePHP)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#1999: FILE: drivers/pci/hotplug/cpqphp.h:161:
+#define	ALT_BASE_ADDR(cap)	(cap & AltBaseAddr)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#2000: FILE: drivers/pci/hotplug/cpqphp.h:162:
+#define	PCI_CFG_SPACE(cap)	(cap & PCICfgSpace)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cap' may be better as '(cap)' to avoid precedence issues
#2001: FILE: drivers/pci/hotplug/cpqphp.h:163:
+#define	PCIX_SUPPORTED(cap)	(cap & PCIXSupport)

ERROR:SPACING: space prohibited after that open parenthesis '('
#2002: FILE: drivers/pci/hotplug/cpqphp.h:164:
+#define	PCIX_SPEED_133MHZ(cap)	( PCIX_SUPPORTED(cap) && (cap & PCIXSpeed) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2002: FILE: drivers/pci/hotplug/cpqphp.h:164:
+#define	PCIX_SPEED_133MHZ(cap)	( PCIX_SUPPORTED(cap) && (cap & PCIXSpeed) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cap' - possible side-effects?
#2002: FILE: drivers/pci/hotplug/cpqphp.h:164:
+#define	PCIX_SPEED_133MHZ(cap)	( PCIX_SUPPORTED(cap) && (cap & PCIXSpeed) )

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2003: FILE: drivers/pci/hotplug/cpqphp.h:165:
+#define	PCIX_SPEED_100MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_33MHZ(cap) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#2003: FILE: drivers/pci/hotplug/cpqphp.h:165:
+#define	PCIX_SPEED_100MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_33MHZ(cap) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2003: FILE: drivers/pci/hotplug/cpqphp.h:165:
+#define	PCIX_SPEED_100MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_33MHZ(cap) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cap' - possible side-effects?
#2003: FILE: drivers/pci/hotplug/cpqphp.h:165:
+#define	PCIX_SPEED_100MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_33MHZ(cap) )

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2004: FILE: drivers/pci/hotplug/cpqphp.h:166:
+#define	PCIX_SPEED_66MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_66MHZ(cap) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#2004: FILE: drivers/pci/hotplug/cpqphp.h:166:
+#define	PCIX_SPEED_66MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_66MHZ(cap) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2004: FILE: drivers/pci/hotplug/cpqphp.h:166:
+#define	PCIX_SPEED_66MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_66MHZ(cap) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cap' - possible side-effects?
#2004: FILE: drivers/pci/hotplug/cpqphp.h:166:
+#define	PCIX_SPEED_66MHZ(cap)	( PCIX_SUPPORTED(cap) && !(cap & PCIXSpeed) && SPEED_CAP_66MHZ(cap) )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2066: FILE: drivers/pci/hotplug/cpqphp.h:261:
 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2071: FILE: drivers/pci/hotplug/cpqphp.h:264:
+extern int	phprm_find_available_resources	(struct controller *ctrl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2071: FILE: drivers/pci/hotplug/cpqphp.h:264:
+extern int	phprm_find_available_resources	(struct controller *ctrl);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2079: FILE: drivers/pci/hotplug/cpqphp.h:269:
+extern int	cpqhp_process_SI		(struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2079: FILE: drivers/pci/hotplug/cpqphp.h:269:
+extern int	cpqhp_process_SI		(struct slot *slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2080: FILE: drivers/pci/hotplug/cpqphp.h:270:
+extern int	cpqhp_process_SS		(struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2080: FILE: drivers/pci/hotplug/cpqphp.h:270:
+extern int	cpqhp_process_SS		(struct slot *slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2082: FILE: drivers/pci/hotplug/cpqphp.h:272:
+extern u8	handle_switch_change		(unsigned int change, void *inst_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2082: FILE: drivers/pci/hotplug/cpqphp.h:272:
+extern u8	handle_switch_change		(unsigned int change, void *inst_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2083: FILE: drivers/pci/hotplug/cpqphp.h:273:
+extern u8	handle_presence_change		(unsigned int change, void *inst_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2083: FILE: drivers/pci/hotplug/cpqphp.h:273:
+extern u8	handle_presence_change		(unsigned int change, void *inst_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2084: FILE: drivers/pci/hotplug/cpqphp.h:274:
+extern u8	handle_power_fault		(unsigned int change, void *inst_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2084: FILE: drivers/pci/hotplug/cpqphp.h:274:
+extern u8	handle_power_fault		(unsigned int change, void *inst_id);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2096: FILE: drivers/pci/hotplug/cpqphp.h:281:
+extern int	cpqhp_get_bus_dev		(struct controller *ctrl, u8 *bus_num, u8 *dev_num, struct slot *slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2096: FILE: drivers/pci/hotplug/cpqphp.h:281:
+extern int	cpqhp_get_bus_dev		(struct controller *ctrl, u8 *bus_num, u8 *dev_num, struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2096: FILE: drivers/pci/hotplug/cpqphp.h:281:
+extern int	cpqhp_get_bus_dev		(struct controller *ctrl, u8 *bus_num, u8 *dev_num, struct slot *slot);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2097: FILE: drivers/pci/hotplug/cpqphp.h:282:
+extern int	cpqhp_save_config	 	(struct controller *ctrl, int busnumber, int num_ctlr_slots, int first_device_num);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2097: FILE: drivers/pci/hotplug/cpqphp.h:282:
+extern int^Icpqhp_save_config^I ^I(struct controller *ctrl, int busnumber, int num_ctlr_slots, int first_device_num);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2097: FILE: drivers/pci/hotplug/cpqphp.h:282:
+extern int	cpqhp_save_config	 	(struct controller *ctrl, int busnumber, int num_ctlr_slots, int first_device_num);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2097: FILE: drivers/pci/hotplug/cpqphp.h:282:
+extern int	cpqhp_save_config	 	(struct controller *ctrl, int busnumber, int num_ctlr_slots, int first_device_num);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2098: FILE: drivers/pci/hotplug/cpqphp.h:283:
+extern int	cpqhp_save_used_resources	(struct controller *ctrl, struct pci_func * func, int flag);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2098: FILE: drivers/pci/hotplug/cpqphp.h:283:
+extern int	cpqhp_save_used_resources	(struct controller *ctrl, struct pci_func * func, int flag);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2098: FILE: drivers/pci/hotplug/cpqphp.h:283:
+extern int	cpqhp_save_used_resources	(struct controller *ctrl, struct pci_func * func, int flag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2098: FILE: drivers/pci/hotplug/cpqphp.h:283:
+extern int	cpqhp_save_used_resources	(struct controller *ctrl, struct pci_func * func, int flag);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2146: FILE: drivers/pci/hotplug/cpqphp.h:333:
+static inline struct slot *cpqhp_find_slot (struct controller *ctrl, u8 device)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_slot"
#2312: FILE: drivers/pci/hotplug/cpqphp.h:349:
+	if (p_slot == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#2581: FILE: drivers/pci/hotplug/cpqphp.h:385:
+int phphpc_init( struct controller *ctrl, struct pci_dev *pdev,

ERROR:SPACING: space prohibited after that open parenthesis '('
#2586: FILE: drivers/pci/hotplug/cpqphp.h:390:
+int phphpc_get_ctlr_slot_config( struct controller *ctrl,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2587: FILE: drivers/pci/hotplug/cpqphp.h:391:
+int phphpc_get_ctlr_slot_config( struct controller *ctrl,
+		int *num_ctlr_slots,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2593: FILE: drivers/pci/hotplug/cpqphp.h:397:
+int phphpc_get_ctrl_cap(struct controller *ctrl, u16 * pctlrcap, u8 * prev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2593: FILE: drivers/pci/hotplug/cpqphp.h:397:
+int phphpc_get_ctrl_cap(struct controller *ctrl, u16 * pctlrcap, u8 * prev);

WARNING:SPACING: Unnecessary space after function pointer name
#2596: FILE: drivers/pci/hotplug/cpqphp.h:400:
+	int	(*power_on_slot )	(struct slot *slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2596: FILE: drivers/pci/hotplug/cpqphp.h:400:
+	int	(*power_on_slot )	(struct slot *slot);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2596: FILE: drivers/pci/hotplug/cpqphp.h:400:
+	int	(*power_on_slot )	(struct slot *slot);

WARNING:SPACING: Unnecessary space after function pointer name
#2597: FILE: drivers/pci/hotplug/cpqphp.h:401:
+	int	(*power_off_slot )	(struct slot *slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2597: FILE: drivers/pci/hotplug/cpqphp.h:401:
+	int	(*power_off_slot )	(struct slot *slot);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2597: FILE: drivers/pci/hotplug/cpqphp.h:401:
+	int	(*power_off_slot )	(struct slot *slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2598: FILE: drivers/pci/hotplug/cpqphp.h:402:
+	int	(*get_power_status)	(struct slot *slot, u8 *status);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2599: FILE: drivers/pci/hotplug/cpqphp.h:403:
+	int	(*get_attention_status)	(struct slot *slot, u8 *status);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2600: FILE: drivers/pci/hotplug/cpqphp.h:404:
+	void	(*set_attention_status)	(struct slot *slot, u8 status);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2601: FILE: drivers/pci/hotplug/cpqphp.h:405:
+	int	(*get_latch_status)	(struct slot *slot, u8 *status);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2602: FILE: drivers/pci/hotplug/cpqphp.h:406:
+	int	(*get_adapter_status)	(struct slot *slot, u8 *status);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2604: FILE: drivers/pci/hotplug/cpqphp.h:408:
+	int	(*get_max_bus_speed)	(struct slot *slot, enum pci_bus_speed *speed);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2605: FILE: drivers/pci/hotplug/cpqphp.h:409:
+	int	(*get_cur_bus_speed)	(struct slot *slot, enum pci_bus_speed *speed);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2606: FILE: drivers/pci/hotplug/cpqphp.h:410:
+	int	(*set_controller_speed)	(struct slot *slot, enum pci_bus_speed speed);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2607: FILE: drivers/pci/hotplug/cpqphp.h:411:
+	int	(*get_adapter_speed)	(struct slot *slot, enum pci_bus_speed *speed);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2609: FILE: drivers/pci/hotplug/cpqphp.h:413:
+	u32	(*get_slot_capability)	(struct slot *slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2610: FILE: drivers/pci/hotplug/cpqphp.h:414:
+	int	(*query_power_fault)	(struct slot *slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2611: FILE: drivers/pci/hotplug/cpqphp.h:415:
+	void	(*green_led_on)	(struct slot * slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2611: FILE: drivers/pci/hotplug/cpqphp.h:415:
+	void	(*green_led_on)	(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2612: FILE: drivers/pci/hotplug/cpqphp.h:416:
+	void	(*green_led_off)	(struct slot * slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2612: FILE: drivers/pci/hotplug/cpqphp.h:416:
+	void	(*green_led_off)	(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2613: FILE: drivers/pci/hotplug/cpqphp.h:417:
+	void	(*green_led_blink)	(struct slot * slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2613: FILE: drivers/pci/hotplug/cpqphp.h:417:
+	void	(*green_led_blink)	(struct slot * slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2615: FILE: drivers/pci/hotplug/cpqphp.h:419:
+	void	(*enable_msl_interrupt)	(struct slot *slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2616: FILE: drivers/pci/hotplug/cpqphp.h:420:
+	void	(*update_hpc)		(struct slot *slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2617: FILE: drivers/pci/hotplug/cpqphp.h:421:
+	void	(*release_ctlr)		(struct controller *ctrl);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355526.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 72 warnings, 47 checks, 2554 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355526.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
