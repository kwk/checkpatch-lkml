WARNING:TYPO_SPELLING: 'regulary' may be misspelled - perhaps 'regular'?
#66: 
regulary fail to freeze pmud for some reason I haven't yet explained. I
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#81: 
--- linux-work.orig/arch/ppc/platforms/Makefile	2005-05-27 16:06:59.000000000 +1000

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: arch/ppc/platforms/pmac_pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#139: FILE: arch/ppc/platforms/pmac_pm.c:40:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: arch/ppc/platforms/pmac_pm.c:48:
+#define DBG(fmt...) printk(fmt)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#157: FILE: arch/ppc/platforms/pmac_pm.c:58:
+EXPORT_SYMBOL_GPL(pmac_option_lid_wakeup);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: No space is necessary after a cast
#160: FILE: arch/ppc/platforms/pmac_pm.c:61:
+static int (*pmac_pm_low_suspend)(void) __pmacdata;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#163: FILE: arch/ppc/platforms/pmac_pm.c:64:
+extern void low_sleep_handler(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#165: FILE: arch/ppc/platforms/pmac_pm.c:66:
+extern void pmacpic_suspend(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#166: FILE: arch/ppc/platforms/pmac_pm.c:67:
+extern void pmacpic_resume(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: arch/ppc/platforms/pmac_pm.c:69:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#195: FILE: arch/ppc/platforms/pmac_pm.c:96:
+int __pmac pmu_unregister_sleep_notifier(struct pmu_sleep_notifier* n)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: arch/ppc/platforms/pmac_pm.c:122:
+				notifier = list_entry(list,
+					      struct pmu_sleep_notifier, list);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#268: FILE: arch/ppc/platforms/pmac_pm.c:169:
+	while ((pd = pci_find_device(PCI_ANY_ID, PCI_ANY_ID, pd)) != NULL) {
+		++npci;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#273: FILE: arch/ppc/platforms/pmac_pm.c:174:
+	pbook_pci_saves = (struct pci_save *)
+		kmalloc(npci * sizeof(struct pci_save), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pbook_pci_saves"
#280: FILE: arch/ppc/platforms/pmac_pm.c:181:
+	if (pbook_pci_saves == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ps"
#294: FILE: arch/ppc/platforms/pmac_pm.c:195:
+	if (ps == NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#309: FILE: arch/ppc/platforms/pmac_pm.c:210:
+			for (i=0; i<6; i++)
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#309: FILE: arch/ppc/platforms/pmac_pm.c:210:
+			for (i=0; i<6; i++)
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#311: FILE: arch/ppc/platforms/pmac_pm.c:212:
+						      PCI_BASE_ADDRESS_0+i*4,
 						                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#311: FILE: arch/ppc/platforms/pmac_pm.c:212:
+						      PCI_BASE_ADDRESS_0+i*4,
 						                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: arch/ppc/platforms/pmac_pm.c:235:
+^I^I}^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#364: FILE: arch/ppc/platforms/pmac_pm.c:265:
+						       PCI_BASE_ADDRESS_0+i*4,
 						                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#364: FILE: arch/ppc/platforms/pmac_pm.c:265:
+						       PCI_BASE_ADDRESS_0+i*4,
 						                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: arch/ppc/platforms/pmac_pm.c:287:
+^I^I^Ipci_write_config_dword(pd, PCI_BASE_ADDRESS_0, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#405: FILE: arch/ppc/platforms/pmac_pm.c:306:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#422: FILE: arch/ppc/platforms/pmac_pm.c:323:
+	/* Set the memory controller to keep the memory refreshed
+	   while we're asleep */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#422: FILE: arch/ppc/platforms/pmac_pm.c:323:
+	   while we're asleep */

WARNING:MEMORY_BARRIER: memory barrier without comment
#435: FILE: arch/ppc/platforms/pmac_pm.c:336:
+		mb();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: arch/ppc/platforms/pmac_pm.c:338:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,1);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: arch/ppc/platforms/pmac_pm.c:338:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,1);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: arch/ppc/platforms/pmac_pm.c:338:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,1);
 	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#441: FILE: arch/ppc/platforms/pmac_pm.c:342:
+		i = *(volatile int *)p;

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#448: FILE: arch/ppc/platforms/pmac_pm.c:349:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:SPACING: space required after that ',' (ctx:VxV)
#452: FILE: arch/ppc/platforms/pmac_pm.c:353:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,0);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#452: FILE: arch/ppc/platforms/pmac_pm.c:353:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,0);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#452: FILE: arch/ppc/platforms/pmac_pm.c:353:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,0);
 	                                             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mem_ctrl_3400"
#465: FILE: arch/ppc/platforms/pmac_pm.c:366:
+	if (mem_ctrl_3400 == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#466: FILE: arch/ppc/platforms/pmac_pm.c:367:
+		printk(KERN_ERR "pmac_pm_init_3400: ioremap failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pmac_pm_init_3400', this function's name, in a string
#466: FILE: arch/ppc/platforms/pmac_pm.c:367:
+		printk(KERN_ERR "pmac_pm_init_3400: ioremap failed\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#473: FILE: arch/ppc/platforms/pmac_pm.c:374:
+#define	GRACKLE_PM	(1<<7)
        	          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#473: FILE: arch/ppc/platforms/pmac_pm.c:374:
+#define	GRACKLE_PM	(1<<7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#474: FILE: arch/ppc/platforms/pmac_pm.c:375:
+#define GRACKLE_DOZE	(1<<5)
                     	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#474: FILE: arch/ppc/platforms/pmac_pm.c:375:
+#define GRACKLE_DOZE	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#475: FILE: arch/ppc/platforms/pmac_pm.c:376:
+#define	GRACKLE_NAP	(1<<4)
        	           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#475: FILE: arch/ppc/platforms/pmac_pm.c:376:
+#define	GRACKLE_NAP	(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#476: FILE: arch/ppc/platforms/pmac_pm.c:377:
+#define	GRACKLE_SLEEP	(1<<3)
        	             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#476: FILE: arch/ppc/platforms/pmac_pm.c:377:
+#define	GRACKLE_SLEEP	(1<<3)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: arch/ppc/platforms/pmac_pm.c:409:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,1);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: arch/ppc/platforms/pmac_pm.c:409:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,1);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: arch/ppc/platforms/pmac_pm.c:409:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,1);
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: arch/ppc/platforms/pmac_pm.c:413:
+^Ipmcr1 &= ~(GRACKLE_DOZE|GRACKLE_SLEEP); $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#512: FILE: arch/ppc/platforms/pmac_pm.c:413:
+	pmcr1 &= ~(GRACKLE_DOZE|GRACKLE_SLEEP); 
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#513: FILE: arch/ppc/platforms/pmac_pm.c:414:
+	pmcr1 |= GRACKLE_PM|GRACKLE_NAP;
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: arch/ppc/platforms/pmac_pm.c:425:
+^Ipmcr1 &= ~(GRACKLE_PM|GRACKLE_DOZE|GRACKLE_SLEEP|GRACKLE_NAP); $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#524: FILE: arch/ppc/platforms/pmac_pm.c:425:
+	pmcr1 &= ~(GRACKLE_PM|GRACKLE_DOZE|GRACKLE_SLEEP|GRACKLE_NAP); 
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#524: FILE: arch/ppc/platforms/pmac_pm.c:425:
+	pmcr1 &= ~(GRACKLE_PM|GRACKLE_DOZE|GRACKLE_SLEEP|GRACKLE_NAP); 
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#524: FILE: arch/ppc/platforms/pmac_pm.c:425:
+	pmcr1 &= ~(GRACKLE_PM|GRACKLE_DOZE|GRACKLE_SLEEP|GRACKLE_NAP); 
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: arch/ppc/platforms/pmac_pm.c:429:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,0);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: arch/ppc/platforms/pmac_pm.c:429:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,0);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: arch/ppc/platforms/pmac_pm.c:429:
+	pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,0);
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: arch/ppc/platforms/pmac_pm.c:431:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: arch/ppc/platforms/pmac_pm.c:434:
+ ^I^I_set_L2CR(save_l2cr);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#533: FILE: arch/ppc/platforms/pmac_pm.c:434:
+ ^I^I_set_L2CR(save_l2cr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/ppc/platforms/pmac_pm.c:434:
+ ^I^I_set_L2CR(save_l2cr);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: arch/ppc/platforms/pmac_pm.c:435:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: arch/ppc/platforms/pmac_pm.c:439:
+	pmu_request(&req, NULL, 2, PMU_POWER_CTRL0,
+			PMU_POW0_ON | PMU_POW0_HARD_DRIVE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#557: FILE: arch/ppc/platforms/pmac_pm.c:458:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: arch/ppc/platforms/pmac_pm.c:464:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: arch/ppc/platforms/pmac_pm.c:467:
+	pmu_request(&req, NULL, 4, PMU_POWER_EVENTS, PMU_PWR_CLR_WAKEUP_EVENTS,
+		0xff, 0xff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: arch/ppc/platforms/pmac_pm.c:470:
+	pmu_request(&req, NULL, 4, PMU_POWER_EVENTS, PMU_PWR_SET_WAKEUP_EVENTS,
+		0, PMU_PWR_WAKEUP_KEY |

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: arch/ppc/platforms/pmac_pm.c:510:
+ ^I^I_set_L2CR(save_l2cr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: arch/ppc/platforms/pmac_pm.c:510:
+ ^I^I_set_L2CR(save_l2cr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: arch/ppc/platforms/pmac_pm.c:510:
+ ^I^I_set_L2CR(save_l2cr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: arch/ppc/platforms/pmac_pm.c:513:
+ ^I^I_set_L3CR(save_l3cr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: arch/ppc/platforms/pmac_pm.c:513:
+ ^I^I_set_L3CR(save_l3cr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/ppc/platforms/pmac_pm.c:513:
+ ^I^I_set_L3CR(save_l3cr);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: arch/ppc/platforms/pmac_pm.c:514:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#627: FILE: arch/ppc/platforms/pmac_pm.c:528:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#648: FILE: arch/ppc/platforms/pmac_pm.c:549:
+	DBG("%s(%d)\n", __FUNCTION__, state);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pmac_pm_low_suspend"
#652: FILE: arch/ppc/platforms/pmac_pm.c:553:
+		if (pmac_pm_low_suspend == NULL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: arch/ppc/platforms/pmac_pm.c:555:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: arch/ppc/platforms/pmac_pm.c:555:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#654: FILE: arch/ppc/platforms/pmac_pm.c:555:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                                 ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#654: FILE: arch/ppc/platforms/pmac_pm.c:555:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#665: FILE: arch/ppc/platforms/pmac_pm.c:566:
+		printk(KERN_ERR "Sleep rejected by drivers\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#687: FILE: arch/ppc/platforms/pmac_pm.c:588:
+	DBG("%s(%d)\n", __FUNCTION__, state);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#689: FILE: arch/ppc/platforms/pmac_pm.c:590:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#696: FILE: arch/ppc/platforms/pmac_pm.c:597:
+		printk(KERN_ERR "Driver sleep failed\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#709: FILE: arch/ppc/platforms/pmac_pm.c:610:
+	DBG("%s(%d)\n", __FUNCTION__, state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#728: FILE: arch/ppc/platforms/pmac_pm.c:629:
+	 * the above didn't re-enable the DEC */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#743: FILE: arch/ppc/platforms/pmac_pm.c:644:
+	DBG("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#767: FILE: arch/ppc/platforms/pmac_pm.c:668:
+	DBG("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#786: FILE: arch/ppc/platforms/pmac_pm.c:687:
+	DBG("%s(%d)\n", __FUNCTION__, state);

CHECK:BRACES: braces {} should be used on all arms of this statement
#788: FILE: arch/ppc/platforms/pmac_pm.c:689:
+	if (state == PM_SUSPEND_MEM) {
[...]
+	} else if (state == PM_SUSPEND_DISK) {
[...]
+	} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: arch/ppc/platforms/pmac_pm.c:693:
+^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#796: FILE: arch/ppc/platforms/pmac_pm.c:697:
+	} else

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#803: FILE: arch/ppc/platforms/pmac_pm.c:704:
+	DBG("%s(%d)\n", __FUNCTION__, state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#827: FILE: arch/ppc/platforms/pmac_pm.c:728:
+	DBG("%s(%d)\n", __FUNCTION__, state);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#832: FILE: arch/ppc/platforms/pmac_pm.c:733:
+
+}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#836: FILE: arch/ppc/platforms/pmac_pm.c:737:
+	DBG("%s(%d)\n", __FUNCTION__, state);

WARNING:TYPO_SPELLING: 'Broadcase' may be misspelled - perhaps 'Broadcast'?
#838: FILE: arch/ppc/platforms/pmac_pm.c:739:
+	/* Broadcase old style wakeup */
 	   ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <_MACH_Pmac>
#855: FILE: arch/ppc/platforms/pmac_pm.c:756:
+	if (_machine != _MACH_Pmac)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#980: FILE: drivers/base/power/suspend.c:110:
+			struct list_head * entry = dpm_off_irq.next;

WARNING:LINE_SPACING: Missing a blank line after declarations
#981: FILE: drivers/base/power/suspend.c:111:
+			struct list_head * entry = dpm_off_irq.next;
+			list_del(entry);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1045: FILE: drivers/macintosh/via-pmu.c:154:
+static int pmu_sys_suspended = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1048: FILE: drivers/macintosh/via-pmu.c:157:
+extern int pmac_option_lid_wakeup;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1504: FILE: drivers/macintosh/via-pmu.c:2076:
 }
+void __pmac pmu_restore_via_state(void)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1921: FILE: drivers/macintosh/via-pmu.c:2279:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1921: FILE: drivers/macintosh/via-pmu.c:2279:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1921: FILE: drivers/macintosh/via-pmu.c:2279:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                                 ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1921: FILE: drivers/macintosh/via-pmu.c:2279:
+		if (pmac_call_feature(PMAC_FTR_SLEEP_STATE,NULL,0,-1) < 0)
 		                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1922: FILE: drivers/macintosh/via-pmu.c:2280:
+^I^I^Ierror = pm_suspend(PM_SUSPEND_MEM);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1924: FILE: drivers/macintosh/via-pmu.c:2282:
+^I^I^Ierror = pm_suspend(PM_SUSPEND_DISK);^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1980: FILE: drivers/macintosh/via-pmu.c:2448:
+	while (!bright_req_1.complete || !bright_req_2.complete ||
+			!batt_req.complete)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1982: FILE: drivers/macintosh/via-pmu.c:2450:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1983: FILE: drivers/macintosh/via-pmu.c:2451:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1991: FILE: drivers/macintosh/via-pmu.c:2462:
+^I/* Restart environment interrupts */ $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2041: FILE: include/asm-ppc/suspend.h:1:
+#ifndef __PPC_SUSPEND_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2048: FILE: include/asm-ppc/suspend.h:8:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2083: FILE: include/asm-ppc/suspend.h:43:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2093: FILE: include/linux/pm.h:172:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2137: FILE: include/linux/pmu.h:154:
+extern void pmu_save_via_state(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2138: FILE: include/linux/pmu.h:155:
+extern void pmu_restore_via_state(void);

CHECK:CAMELCASE: Avoid CamelCase: <Console>
#2170: FILE: kernel/power/main.c:63:
+		goto Console;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2192: FILE: kernel/power/main.c:85:
+		if ((error = pm_ops->prepare_irqs(state)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#2193: FILE: kernel/power/main.c:86:
+			goto Finish;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2268: FILE: arch/ppc/platforms/pmac_pic.c:656:
+#if 0

ERROR:CODE_INDENT: code indent should use tabs where possible
#2312: FILE: arch/ppc/syslib/open_pic.c:972:
+ ^Iopenpic_set_priority(0xf);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2312: FILE: arch/ppc/syslib/open_pic.c:972:
+ ^Iopenpic_set_priority(0xf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2312: FILE: arch/ppc/syslib/open_pic.c:972:
+ ^Iopenpic_set_priority(0xf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2342: FILE: arch/ppc/syslib/open_pic.c:1005:
+ ^Iopenpic_set_priority(0xf);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2342: FILE: arch/ppc/syslib/open_pic.c:1005:
+ ^Iopenpic_set_priority(0xf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2342: FILE: arch/ppc/syslib/open_pic.c:1005:
+ ^Iopenpic_set_priority(0xf);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2359: FILE: arch/ppc/syslib/open_pic.c:1032:
+	for (i=0; i<NumProcessors; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2359: FILE: arch/ppc/syslib/open_pic.c:1032:
+	for (i=0; i<NumProcessors; i++)
 	           ^

CHECK:CAMELCASE: Avoid CamelCase: <NumProcessors>
#2359: FILE: arch/ppc/syslib/open_pic.c:1032:
+	for (i=0; i<NumProcessors; i++)

CHECK:CAMELCASE: Avoid CamelCase: <OpenPIC>
#2360: FILE: arch/ppc/syslib/open_pic.c:1033:
+		openpic_write(&OpenPIC->Processor[i].Current_Task_Priority,

CHECK:CAMELCASE: Avoid CamelCase: <Processor>
#2360: FILE: arch/ppc/syslib/open_pic.c:1033:
+		openpic_write(&OpenPIC->Processor[i].Current_Task_Priority,

CHECK:CAMELCASE: Avoid CamelCase: <Current_Task_Priority>
#2360: FILE: arch/ppc/syslib/open_pic.c:1033:
+		openpic_write(&OpenPIC->Processor[i].Current_Task_Priority,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2370: FILE: arch/ppc/syslib/open_pic.c:1041:
+#if 0

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2387: FILE: include/asm-ppc/open_pic.h:67:
+extern void openpic_suspend(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2388: FILE: include/asm-ppc/open_pic.h:68:
+extern void openpic_resume(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180715.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 44 warnings, 52 checks, 2198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180715.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
