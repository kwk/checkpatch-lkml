WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
 fs/fs-writeback.c         |  112 ++++++++++++++++++----------------------------

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: fs/fs-writeback.c:131:
+__sync_single_inode(struct inode *inode, int wait,
+			struct writeback_control *wbc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: fs/fs-writeback.c:186:
+__writeback_single_inode(struct inode *inode, int sync,
+			struct writeback_control *wbc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: fs/fs-writeback.c:257:
+		if (wbc->older_than_this && time_after(mapping->dirtied_when,
+						*wbc->older_than_this))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wbc->sync_mode == WB_SYNC_LAST'
#141: FILE: fs/fs-writeback.c:265:
+		if ((wbc->sync_mode == WB_SYNC_LAST) && (head->prev == head))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'head->prev == head'
#141: FILE: fs/fs-writeback.c:265:
+		if ((wbc->sync_mode == WB_SYNC_LAST) && (head->prev == head))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: include/linux/writeback.h:41:
+	struct backing_dev_info *bdi;	/* If !NULL, only write back this
+					   queue */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: include/linux/writeback.h:41:
+					   queue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#306: FILE: include/linux/writeback.h:44:
+	unsigned long *older_than_this;	/* If !NULL, only write back inodes
+					   older than this */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#306: FILE: include/linux/writeback.h:44:
+					   older than this */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#308: FILE: include/linux/writeback.h:46:
+	long nr_to_write;		/* Write this many pages, and decrement
+					   this for each page written */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#308: FILE: include/linux/writeback.h:46:
+					   this for each page written */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: include/linux/writeback.h:48:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wbc->nr_to_write'
#509: FILE: fs/mpage.c:594:
+			if (ret || (--(wbc->nr_to_write) <= 0))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#528: FILE: include/linux/fs.h:290:
+	int (*writepages)(struct address_space *, struct writeback_control *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct writeback_control *' should also have an identifier name
#528: FILE: include/linux/fs.h:290:
+	int (*writepages)(struct address_space *, struct writeback_control *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#532: FILE: include/linux/fs.h:293:
+	int (*vm_writeback)(struct page *, struct writeback_control *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct writeback_control *' should also have an identifier name
#532: FILE: include/linux/fs.h:293:
+	int (*vm_writeback)(struct page *, struct writeback_control *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#541: FILE: include/linux/fs.h:1263:
+extern int generic_vm_writeback(struct page *page,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#553: FILE: mm/vmscan.c:177:
+			int (*writeback)(struct page *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct writeback_control *' should also have an identifier name
#553: FILE: mm/vmscan.c:177:
+			int (*writeback)(struct page *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: mm/vmscan.c:178:
+			int (*writeback)(struct page *,
+					struct writeback_control *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#615: FILE: fs/jfs/inode.c:286:
+static int jfs_writepages(struct address_space *mapping,
+			struct writeback_control *wbc)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 13 warnings, 9 checks, 540 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433521.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
