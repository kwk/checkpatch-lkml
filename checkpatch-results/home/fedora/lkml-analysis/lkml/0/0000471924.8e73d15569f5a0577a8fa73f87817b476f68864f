WARNING:TYPO_SPELLING: 'alows' may be misspelled - perhaps 'allows'?
#27: 
fixed it a bit and it does much the same except it alows you to have
                                                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: drivers/block/ll_rw_blk.c:189:
+ kfree(q->dk_stat);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/block/ll_rw_blk.c:400:
+ struct disk_stat * new;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#65: FILE: drivers/block/ll_rw_blk.c:400:
+ struct disk_stat * new;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/block/ll_rw_blk.c:425:
+ new = kmalloc(sizeof(struct disk_stat), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct disk_stat)...)
#77: FILE: drivers/block/ll_rw_blk.c:425:
+ new = kmalloc(sizeof(struct disk_stat), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/block/ll_rw_blk.c:426:
+ if (new == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#78: FILE: drivers/block/ll_rw_blk.c:426:
+ if (new == NULL)
+  printk(KERN_ERR "blk_init_queue:error allocating statisitcs\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#78: FILE: drivers/block/ll_rw_blk.c:426:
+ if (new == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/block/ll_rw_blk.c:427:
+  printk(KERN_ERR "blk_init_queue:error allocating statisitcs\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#79: FILE: drivers/block/ll_rw_blk.c:427:
+  printk(KERN_ERR "blk_init_queue:error allocating statisitcs\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#79: FILE: drivers/block/ll_rw_blk.c:427:
+ if (new == NULL)
+  printk(KERN_ERR "blk_init_queue:error allocating statisitcs\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/block/ll_rw_blk.c:428:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#80: FILE: drivers/block/ll_rw_blk.c:428:
+ else
+  memset(new, 0, sizeof(struct disk_stat));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/block/ll_rw_blk.c:429:
+  memset(new, 0, sizeof(struct disk_stat));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/block/ll_rw_blk.c:430:
+ q->dk_stat = new;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: drivers/block/ll_rw_blk.c:515:
+inline void drive_stat_acct (struct disk_stat * ds, int rw,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#92: FILE: drivers/block/ll_rw_blk.c:515:
+inline void drive_stat_acct (struct disk_stat * ds, int rw,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/block/ll_rw_blk.c:518:
+ if (ds == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#100: FILE: drivers/block/ll_rw_blk.c:518:
+ if (ds == NULL)
   return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ds"
#100: FILE: drivers/block/ll_rw_blk.c:518:
+ if (ds == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#104: FILE: drivers/block/ll_rw_blk.c:521:
  if (rw == READ) {
+  ds->dk_drive_rio += new_io;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/block/ll_rw_blk.c:522:
+  ds->dk_drive_rio += new_io;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/block/ll_rw_blk.c:523:
+  ds->dk_drive_rblk += nr_sectors;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#109: FILE: drivers/block/ll_rw_blk.c:524:
  } else if (rw == WRITE) {
+  ds->dk_drive_wio += new_io;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/block/ll_rw_blk.c:525:
+  ds->dk_drive_wio += new_io;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/block/ll_rw_blk.c:526:
+  ds->dk_drive_wblk += nr_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/block/ll_rw_blk.c:542:
+ drive_stat_acct(q->dk_stat, req->cmd, req->nr_sectors, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/block/ll_rw_blk.c:716:
+   drive_stat_acct(q->dk_stat, req->cmd, count, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/block/ll_rw_blk.c:733:
+   drive_stat_acct(q->dk_stat, req->cmd, count, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/ide/ide.c:1457:
+ if (DEVICE_NR(dev) >= MAX_DRIVES)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#154: FILE: drivers/ide/ide.c:1457:
+ if (DEVICE_NR(dev) >= MAX_DRIVES)
+   return NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/ide/ide.c:1458:
+   return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/ide/ide.c:1459:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#156: FILE: drivers/ide/ide.c:1459:
+ else
+  return &hwif->drives[DEVICE_NR(dev)].queue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/ide/ide.c:1460:
+  return &hwif->drives[DEVICE_NR(dev)].queue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/md/md.c:3311:
+  request_queue_t * rq = blk_get_queue(rdev->dev);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: drivers/md/md.c:3311:
+  request_queue_t * rq = blk_get_queue(rdev->dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/md/md.c:3316:
+  if (rq == NULL || (rq->dk_stat == NULL))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#178: FILE: drivers/md/md.c:3316:
+  if (rq == NULL || (rq->dk_stat == NULL))
+   continue;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->dk_stat == NULL'
#178: FILE: drivers/md/md.c:3316:
+  if (rq == NULL || (rq->dk_stat == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq"
#178: FILE: drivers/md/md.c:3316:
+  if (rq == NULL || (rq->dk_stat == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rq->dk_stat"
#178: FILE: drivers/md/md.c:3316:
+  if (rq == NULL || (rq->dk_stat == NULL))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/md/md.c:3317:
+   continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/md/md.c:3318:
+  curr_events = rq->dk_stat->dk_drive_rblk +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/md/md.c:3319:
+   rq->dk_stat->dk_drive_wblk ;$

WARNING:SPACING: space prohibited before semicolon
#181: FILE: drivers/md/md.c:3319:
+   rq->dk_stat->dk_drive_wblk ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: fs/proc/proc_misc.c:237:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: fs/proc/proc_misc.c:237:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: fs/proc/proc_misc.c:238:
+static int show_disk_stat(char * page, int len, struct disk_stat * ds,
+     int major, int disk)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/proc/proc_misc.c:238:
+     int major, int disk)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: fs/proc/proc_misc.c:240:
+ int active = ds->dk_drive_rio + ds->dk_drive_wio +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/proc/proc_misc.c:241:
+   ds->dk_drive_rblk + ds->dk_drive_wblk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/proc/proc_misc.c:242:
+ if (active)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#214: FILE: fs/proc/proc_misc.c:242:
+ if (active)
+  len += sprintf(page + len,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/proc/proc_misc.c:243:
+  len += sprintf(page + len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: fs/proc/proc_misc.c:244:
+   "(%u,%u):(%u,%u,%u,%u,%u) ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/proc/proc_misc.c:245:
+   major, disk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/proc/proc_misc.c:246:
+   ds->dk_drive_rio + ds->dk_drive_wio,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/proc/proc_misc.c:247:
+   ds->dk_drive_rio,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/proc/proc_misc.c:248:
+   ds->dk_drive_rblk,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/proc/proc_misc.c:249:
+   ds->dk_drive_wio,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/proc/proc_misc.c:250:
+   ds->dk_drive_wblk$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/proc/proc_misc.c:251:
+  );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: fs/proc/proc_misc.c:252:
+ return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/proc/proc_misc.c:303:
+ for (major = 0; major < MAX_BLKDEV; major++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#248: FILE: fs/proc/proc_misc.c:303:
+ for (major = 0; major < MAX_BLKDEV; major++) {
+  struct disk_stat * ds;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: fs/proc/proc_misc.c:304:
+  struct disk_stat * ds;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: fs/proc/proc_misc.c:304:
+  struct disk_stat * ds;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: fs/proc/proc_misc.c:306:
+  if (!(blk_dev[major].queue)){$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#251: FILE: fs/proc/proc_misc.c:306:
+  if (!(blk_dev[major].queue)){
+   ds = (BLK_DEFAULT_QUEUE(major))->dk_stat;

ERROR:SPACING: space required before the open brace '{'
#251: FILE: fs/proc/proc_misc.c:306:
+  if (!(blk_dev[major].queue)){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: fs/proc/proc_misc.c:307:
+   ds = (BLK_DEFAULT_QUEUE(major))->dk_stat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: fs/proc/proc_misc.c:308:
+   if (ds)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#253: FILE: fs/proc/proc_misc.c:308:
+   if (ds)
+    len = show_disk_stat(page, len, ds, major, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: fs/proc/proc_misc.c:309:
+    len = show_disk_stat(page, len, ds, major, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: fs/proc/proc_misc.c:310:
+  }else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#255: FILE: fs/proc/proc_misc.c:310:
+  }else {
+   request_queue_t * q;

ERROR:SPACING: space required after that close brace '}'
#255: FILE: fs/proc/proc_misc.c:310:
+  }else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: fs/proc/proc_misc.c:311:
+   request_queue_t * q;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: fs/proc/proc_misc.c:311:
+   request_queue_t * q;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/proc/proc_misc.c:312:
+   struct gendisk * hd = get_gendisk(MKDEV(major,0));$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: fs/proc/proc_misc.c:312:
+   struct gendisk * hd = get_gendisk(MKDEV(major,0));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: fs/proc/proc_misc.c:312:
+   struct gendisk * hd = get_gendisk(MKDEV(major,0));
                                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/proc/proc_misc.c:313:
+   int max_disk;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: fs/proc/proc_misc.c:314:
+   int max_disk;
+   if (!hd)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/proc/proc_misc.c:314:
+   if (!hd)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#259: FILE: fs/proc/proc_misc.c:314:
+   if (!hd)
+    continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: fs/proc/proc_misc.c:315:
+    continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: fs/proc/proc_misc.c:316:
+   max_disk = MINORMASK>>hd->minor_shift;$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#261: FILE: fs/proc/proc_misc.c:316:
+   max_disk = MINORMASK>>hd->minor_shift;
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: fs/proc/proc_misc.c:318:
+   for (disk = 0; disk <= max_disk; disk++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#263: FILE: fs/proc/proc_misc.c:318:
+   for (disk = 0; disk <= max_disk; disk++) {
+    q = blk_get_queue(MKDEV(major,disk<<hd->minor_shift));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/proc/proc_misc.c:319:
+    q = blk_get_queue(MKDEV(major,disk<<hd->minor_shift));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: fs/proc/proc_misc.c:319:
+    q = blk_get_queue(MKDEV(major,disk<<hd->minor_shift));
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#264: FILE: fs/proc/proc_misc.c:319:
+    q = blk_get_queue(MKDEV(major,disk<<hd->minor_shift));
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/proc/proc_misc.c:320:
+    if (!q)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 5)
#265: FILE: fs/proc/proc_misc.c:320:
+    if (!q)
+     continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: fs/proc/proc_misc.c:321:
+     continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: fs/proc/proc_misc.c:322:
+    ds = q->dk_stat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/proc/proc_misc.c:323:
+    if (!ds)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 5)
#268: FILE: fs/proc/proc_misc.c:323:
+    if (!ds)
+     continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/proc/proc_misc.c:324:
+     continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: fs/proc/proc_misc.c:325:
+    len = show_disk_stat(page, len, ds, major,disk);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#270: FILE: fs/proc/proc_misc.c:325:
+    len = show_disk_stat(page, len, ds, major,disk);
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/proc/proc_misc.c:326:
+   }$

WARNING:SPACING: missing space after struct definition
#284: FILE: include/linux/blkdev.h:74:
+struct disk_stat{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: include/linux/blkdev.h:75:
+ unsigned int dk_drive_rio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: include/linux/blkdev.h:76:
+ unsigned int dk_drive_wio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: include/linux/blkdev.h:77:
+ unsigned int dk_drive_rblk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: include/linux/blkdev.h:78:
+ unsigned int dk_drive_wblk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: include/linux/blkdev.h:135:
+ struct disk_stat * dk_stat;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#301: FILE: include/linux/blkdev.h:135:
+ struct disk_stat * dk_stat;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: include/linux/blkdev.h:200:
+extern void drive_stat_acct (struct disk_stat *, int rw,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/linux/blkdev.h:200:
+extern void drive_stat_acct (struct disk_stat *, int rw,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct disk_stat *' should also have an identifier name
#310: FILE: include/linux/blkdev.h:200:
+extern void drive_stat_acct (struct disk_stat *, int rw,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: include/linux/blkdev.h:201:
+extern void drive_stat_acct (struct disk_stat *, int rw,
      unsigned long nr_sectors, int new_io);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000471924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 92 warnings, 11 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000471924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
