WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
patch. Manfred patch has applied over 2.4.13-pre13 and the results are compared 

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#140: 
   performance of the Grep benchmark by upto 165% for size 32kB. 
                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#150: 
3. For pipeflex (A) provides increasing benefits with upto 358% 
                                                      ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: fs/pipe.c:26:
+#ifdef CONFIG_SMP $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: fs/pipe.c:28:
+#else $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#414: FILE: fs/pipe.c:96:
+	if (count > 0 && (size = PIPE_LEN(*inode))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: fs/pipe.c:100:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: fs/pipe.c:105:
+^I^I^Iif (IS_SMP && PIPE_ORDER(*inode) && (chars > PIPE_SEG(*inode))) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chars > PIPE_SEG(*inode)'
#423: FILE: fs/pipe.c:105:
+			if (IS_SMP && PIPE_ORDER(*inode) && (chars > PIPE_SEG(*inode))) 

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: fs/pipe.c:107:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: fs/pipe.c:117:
+               ^I^Iif ((count <= 0) || (!(size = PIPE_LEN(*inode))))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#441: FILE: fs/pipe.c:117:
+               ^I^Iif ((count <= 0) || (!(size = PIPE_LEN(*inode))))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: fs/pipe.c:117:
+               ^I^Iif ((count <= 0) || (!(size = PIPE_LEN(*inode))))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count <= 0'
#441: FILE: fs/pipe.c:117:
+               		if ((count <= 0) || (!(size = PIPE_LEN(*inode))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#441: FILE: fs/pipe.c:117:
+               		if ((count <= 0) || (!(size = PIPE_LEN(*inode))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: fs/pipe.c:118:
+^I                       ^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: fs/pipe.c:118:
+^I                       ^Ibreak;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: fs/pipe.c:119:
+        ^I      ^Iif (IS_SMP && PIPE_ORDER(*inode) && PIPE_WAITING_WRITERS(*inode) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: fs/pipe.c:119:
+        ^I      ^Iif (IS_SMP && PIPE_ORDER(*inode) && PIPE_WAITING_WRITERS(*inode) && $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: fs/pipe.c:119:
+        ^I      ^Iif (IS_SMP && PIPE_ORDER(*inode) && PIPE_WAITING_WRITERS(*inode) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: fs/pipe.c:119:
+        ^I      ^Iif (IS_SMP && PIPE_ORDER(*inode) && PIPE_WAITING_WRITERS(*inode) && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: fs/pipe.c:120:
+^I^I^I    !(filp->f_flags & O_NONBLOCK)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: fs/pipe.c:121:
+                       ^I^Iwake_up_interruptible_sync(PIPE_WAIT(*inode));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: fs/pipe.c:121:
+                       ^I^Iwake_up_interruptible_sync(PIPE_WAIT(*inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: fs/pipe.c:121:
+                       ^I^Iwake_up_interruptible_sync(PIPE_WAIT(*inode));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: fs/pipe.c:122:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: fs/pipe.c:123:
+            ^I} while(1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: fs/pipe.c:123:
+            ^I} while(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: fs/pipe.c:123:
+            ^I} while(1);$

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: fs/pipe.c:123:
+            	} while(1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: fs/pipe.c:129:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chars > PIPE_SEG(*inode)'
#469: FILE: fs/pipe.c:215:
+			if (IS_SMP && PIPE_ORDER(*inode) && (chars > PIPE_SEG(*inode)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: fs/pipe.c:226:
+   ^I^I^Iif (IS_SMP && PIPE_ORDER(*inode) && (count > 0) && space &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#478: FILE: fs/pipe.c:226:
+   ^I^I^Iif (IS_SMP && PIPE_ORDER(*inode) && (count > 0) && space &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: fs/pipe.c:226:
+   ^I^I^Iif (IS_SMP && PIPE_ORDER(*inode) && (count > 0) && space &&$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count > 0'
#478: FILE: fs/pipe.c:226:
+   			if (IS_SMP && PIPE_ORDER(*inode) && (count > 0) && space &&
+			    PIPE_WAITING_READERS(*inode) && !(filp->f_flags & O_NONBLOCK))

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: fs/pipe.c:228:
+                                wake_up_interruptible_sync(PIPE_WAIT(*inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: fs/pipe.c:228:
+                                wake_up_interruptible_sync(PIPE_WAIT(*inode));$

CHECK:SPACING: No space is necessary after a cast
#507: FILE: fs/pipe.c:338:
+		free_pages((unsigned long) info->base, info->order);

CHECK:SPACING: No space is necessary after a cast
#578: FILE: fs/pipe.c:611:
+	free_pages((unsigned long) PIPE_BASE(*inode), PIPE_ORDER(*inode));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#598: FILE: fs/pipe.c:665:
+		      FS_NOMOUNT|FS_SINGLE);
 		                ^

WARNING:SPACING: missing space after struct definition
#621: FILE: include/linux/pipe_fs_i.h:21:
+struct pipe_stat_t{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#625: FILE: include/linux/pipe_fs_i.h:25:
 };
+extern struct pipe_stat_t pipe_stat;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#646: FILE: include/linux/pipe_fs_i.h:45:
+#define PIPE_FULL(inode)	(PIPE_LEN(inode) == PIPE_SIZE(inode))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#647: FILE: include/linux/pipe_fs_i.h:46:
+#define PIPE_FREE(inode)	(PIPE_SIZE(inode) - PIPE_LEN(inode))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#648: FILE: include/linux/pipe_fs_i.h:47:
+#define PIPE_END(inode)	((PIPE_START(inode) + PIPE_LEN(inode)) & (PIPE_SIZE(inode)-1))
                        	                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#648: FILE: include/linux/pipe_fs_i.h:47:
+#define PIPE_END(inode)	((PIPE_START(inode) + PIPE_LEN(inode)) & (PIPE_SIZE(inode)-1))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#649: FILE: include/linux/pipe_fs_i.h:48:
+#define PIPE_MAX_RCHUNK(inode)	(PIPE_SIZE(inode) - PIPE_START(inode))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#650: FILE: include/linux/pipe_fs_i.h:49:
+#define PIPE_MAX_WCHUNK(inode)	(PIPE_SIZE(inode) - PIPE_END(inode))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#651: FILE: include/linux/pipe_fs_i.h:50:
+#define PIPE_SEG(inode)		((PIPE_ORDER(inode) > pipe_stat.pipe_seg_order) ? \
+				(PIPE_SIZE(inode) >> pipe_stat.pipe_seg_order): PAGE_SIZE)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#652: FILE: include/linux/pipe_fs_i.h:51:
+				(PIPE_SIZE(inode) >> pipe_stat.pipe_seg_order): PAGE_SIZE)
 				                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#663: FILE: include/linux/sysctl.h:536:
+	FS_PIPE_SIZE=16,	/* int: current number of allocated pages for PIPE */
 	            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#674: FILE: kernel/sysctl.c:307:
+	{FS_PIPE_SIZE, "pipe-sz", &pipe_stat, 2*sizeof(int),
 	                                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000505878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 16 warnings, 16 checks, 269 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000505878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
