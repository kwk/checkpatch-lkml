WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#54: FILE: sound/pci/cs5535audio/cs5535audio.c:30:
+#include <asm/io.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#65: FILE: sound/pci/cs5535audio/cs5535audio.c:59:
+	unsigned long tmp;
+	do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: sound/pci/cs5535audio/cs5535audio.c:61:
+^I^Iif (!(tmp & CMD_NEW)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#69: FILE: sound/pci/cs5535audio/cs5535audio.c:63:
+		msleep(10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: sound/pci/cs5535audio/cs5535audio.c:65:
+^Iif (!timeout) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: sound/pci/cs5535audio/cs5535audio.c:91:
+^Iif (!timeout) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: sound/pci/cs5535audio/cs5535audio.c:239:
+^I^I^I^Ibreak;^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: sound/pci/cs5535audio/cs5535audio.c:282:
+	if (pci_set_dma_mask(pci, DMA_32BIT_MASK) < 0 ||
+		pci_set_consistent_dma_mask(pci, DMA_32BIT_MASK) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#294: FILE: sound/pci/cs5535audio/cs5535audio.c:283:
+		printk(KERN_WARNING "unable to get 32bit dma\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#323: FILE: sound/pci/cs5535audio/cs5535audio.c:307:
+		SA_INTERRUPT|SA_SHIRQ, "CS5535 Audio", cs5535au)) {
 		            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: sound/pci/cs5535audio/cs5535audio.c:317:
+^I^I^I^I^Ics5535au, &ops)) < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: sound/pci/cs5535audio/cs5535audio.c:329:
+pcifail: $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#356: FILE: sound/pci/cs5535audio/cs5535audio.c:334:
 static int __devinit snd_cs5535audio_probe(struct pci_dev *pci,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#365: FILE: sound/pci/cs5535audio/cs5535audio.c:353:
+	if ((err = snd_cs5535audio_create(card, pci, &cs5535au)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#372: FILE: sound/pci/cs5535audio/cs5535audio.c:356:
+	if ((err = snd_cs5535audio_mixer(cs5535au)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: sound/pci/cs5535audio/cs5535audio.c:359:
+^Iif ((err = snd_cs5535audio_pcm(cs5535au)) < 0) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#379: FILE: sound/pci/cs5535audio/cs5535audio.c:359:
+	if ((err = snd_cs5535audio_pcm(cs5535au)) < 0) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: sound/pci/cs5535audio/cs5535audio.c:369:
+^Iif ((err = snd_card_register(card)) < 0) $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#392: FILE: sound/pci/cs5535audio/cs5535audio.c:369:
+	if ((err = snd_card_register(card)) < 0) 

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#404: FILE: sound/pci/cs5535audio/cs5535audio.c:381:
 static void __devexit snd_cs5535audio_remove(struct pci_dev *pci)

CHECK:SPACING: No space is necessary after a cast
#417: FILE: sound/pci/cs5535audio/cs5535audio.h:4:
+#define cs_writel(cs5535au, reg, val) outl(val, (int) cs5535au->port + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cs5535au' may be better as '(cs5535au)' to avoid precedence issues
#417: FILE: sound/pci/cs5535audio/cs5535audio.h:4:
+#define cs_writel(cs5535au, reg, val) outl(val, (int) cs5535au->port + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#417: FILE: sound/pci/cs5535audio/cs5535audio.h:4:
+#define cs_writel(cs5535au, reg, val) outl(val, (int) cs5535au->port + reg)

CHECK:SPACING: No space is necessary after a cast
#418: FILE: sound/pci/cs5535audio/cs5535audio.h:5:
+#define cs_writeb(cs5535au, reg, val) outb(val, (int) cs5535au->port + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cs5535au' may be better as '(cs5535au)' to avoid precedence issues
#418: FILE: sound/pci/cs5535audio/cs5535audio.h:5:
+#define cs_writeb(cs5535au, reg, val) outb(val, (int) cs5535au->port + reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#418: FILE: sound/pci/cs5535audio/cs5535audio.h:5:
+#define cs_writeb(cs5535au, reg, val) outb(val, (int) cs5535au->port + reg)

CHECK:SPACING: No space is necessary after a cast
#419: FILE: sound/pci/cs5535audio/cs5535audio.h:6:
+#define cs_readl(cs5535au, reg)	inl((unsigned short) (cs5535au->port + reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cs5535au' may be better as '(cs5535au)' to avoid precedence issues
#419: FILE: sound/pci/cs5535audio/cs5535audio.h:6:
+#define cs_readl(cs5535au, reg)	inl((unsigned short) (cs5535au->port + reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#419: FILE: sound/pci/cs5535audio/cs5535audio.h:6:
+#define cs_readl(cs5535au, reg)	inl((unsigned short) (cs5535au->port + reg))

CHECK:SPACING: No space is necessary after a cast
#420: FILE: sound/pci/cs5535audio/cs5535audio.h:7:
+#define cs_readw(cs5535au, reg)	inw((unsigned short) (cs5535au->port + reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cs5535au' may be better as '(cs5535au)' to avoid precedence issues
#420: FILE: sound/pci/cs5535audio/cs5535audio.h:7:
+#define cs_readw(cs5535au, reg)	inw((unsigned short) (cs5535au->port + reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#420: FILE: sound/pci/cs5535audio/cs5535audio.h:7:
+#define cs_readw(cs5535au, reg)	inw((unsigned short) (cs5535au->port + reg))

CHECK:SPACING: No space is necessary after a cast
#421: FILE: sound/pci/cs5535audio/cs5535audio.h:8:
+#define cs_readb(cs5535au, reg)	inb((unsigned short) (cs5535au->port + reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cs5535au' may be better as '(cs5535au)' to avoid precedence issues
#421: FILE: sound/pci/cs5535audio/cs5535audio.h:8:
+#define cs_readb(cs5535au, reg)	inb((unsigned short) (cs5535au->port + reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#421: FILE: sound/pci/cs5535audio/cs5535audio.h:8:
+#define cs_readb(cs5535au, reg)	inb((unsigned short) (cs5535au->port + reg))

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#442: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:145:
+	/* the u32 cast is okay because in snd*create we succesfully told 
 	                                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:145:
+^I/* the u32 cast is okay because in snd*create we succesfully told $

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:146:
+   ^I   pci alloc that we're only 32 bit capable so the uppper will be 0 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:146:
+   ^I   pci alloc that we're only 32 bit capable so the uppper will be 0 */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#443: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:146:
+	/* the u32 cast is okay because in snd*create we succesfully told 
+   	   pci alloc that we're only 32 bit capable so the uppper will be 0 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#443: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:146:
+   	   pci alloc that we're only 32 bit capable so the uppper will be 0 */

CHECK:SPACING: No space is necessary after a cast
#444: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:147:
+	addr = (u32) substream->runtime->dma_addr;

CHECK:SPACING: No space is necessary after a cast
#445: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:148:
+	desc_addr = (u32) dma->desc_buf.addr;

CHECK:SPACING: No space is necessary after a cast
#449: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:151:
+			&((cs5535audio_dma_desc_t *) dma->desc_buf.area)[i];

CHECK:SPACING: No space is necessary after a cast
#459: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:159:
+	lastdesc = &((cs5535audio_dma_desc_t *) dma->desc_buf.area)[periods];

CHECK:SPACING: No space is necessary after a cast
#460: FILE: sound/pci/cs5535audio/cs5535audio_pcm.c:160:
+	lastdesc->addr = cpu_to_le32((u32) dma->desc_buf.addr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000149403.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 10 warnings, 22 checks, 499 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000149403.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
