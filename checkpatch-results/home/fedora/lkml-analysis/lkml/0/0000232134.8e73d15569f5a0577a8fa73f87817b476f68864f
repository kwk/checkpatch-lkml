WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
   NTFS: - Add mapping of unmapped buffers to all remaining code paths, i.e.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#33: 
         - Do not check for the page being uptodate in mark_ntfs_record_dirty()
                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#34: 
           as we now call this after marking the page not uptodate during mft
                                                          ^^^^^^^^

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#38: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#63: FILE: fs/ntfs/ChangeLog:92:
+	- Do not check for the page being uptodate in mark_ntfs_record_dirty()
 	                                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#64: FILE: fs/ntfs/ChangeLog:93:
+	  as we now call this after marking the page not uptodate during mft
 	                                                 ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#78: FILE: fs/ntfs/aops.c:179:
+	BUG_ON(!ni->runlist.rl && !ni->mft_no && !NInoAttr(ni));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#78: FILE: fs/ntfs/aops.c:179:
+	BUG_ON(!ni->runlist.rl && !ni->mft_no && !NInoAttr(ni));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: fs/ntfs/aops.c:266:
+			ntfs_error(vol->sb, "Failed to read from inode 0x%lx, "
+					"attribute type 0x%x, vcn 0x%llx, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#125: FILE: fs/ntfs/aops.c:267:
+					"attribute type 0x%x, vcn 0x%llx, "
+					"offset 0x%x because its location on "

WARNING:SPLIT_STRING: quoted string split across lines
#126: FILE: fs/ntfs/aops.c:268:
+					"offset 0x%x because its location on "
+					"disk could not be determined%s "

WARNING:SPLIT_STRING: quoted string split across lines
#127: FILE: fs/ntfs/aops.c:269:
+					"disk could not be determined%s "
+					"(error code %lli).", ni->mft_no,

WARNING:SPLIT_STRING: quoted string split across lines
#130: FILE: fs/ntfs/aops.c:272:
+					vcn_ofs, is_retry ? " even after "
+					"retrying" : "", (long long)lcn);

WARNING:SPLIT_STRING: quoted string split across lines
#158: FILE: fs/ntfs/aops.c:483:
 	ntfs_debug("Entering for inode 0x%lx, attribute type 0x%x, page index "
+			"0x%lx.", ni->mft_no, ni->type, page->index);

WARNING:SPLIT_STRING: quoted string split across lines
#191: FILE: fs/ntfs/aops.c:674:
+		ntfs_error(vol->sb, "Failed to write to inode 0x%lx, "
+				"attribute type 0x%x, vcn 0x%llx, offset 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#192: FILE: fs/ntfs/aops.c:675:
+				"attribute type 0x%x, vcn 0x%llx, offset 0x%x "
+				"because its location on disk could not be "

WARNING:SPLIT_STRING: quoted string split across lines
#193: FILE: fs/ntfs/aops.c:676:
+				"because its location on disk could not be "
+				"determined%s (error code %lli).", ni->mft_no,

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: fs/ntfs/aops.c:679:
+				vcn_ofs, is_retry ? " even after "
+				"retrying" : "", (long long)lcn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: fs/ntfs/aops.c:798:
+static int ntfs_write_mst_block(struct page *page,
+		struct writeback_control *wbc)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#237: FILE: fs/ntfs/aops.c:814:
+	unsigned rec_size_bits;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#255: FILE: fs/ntfs/aops.c:847:
+	err = err2 = nr_bhs = nr_recs = nr_locked_nis = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#325: FILE: fs/ntfs/aops.c:902:
+			if (likely(rl != NULL)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rl"
#325: FILE: fs/ntfs/aops.c:902:
+			if (likely(rl != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#330: FILE: fs/ntfs/aops.c:907:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#345: FILE: fs/ntfs/aops.c:922:
+				if (!is_mft && !is_retry &&
[...]
+				} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: fs/ntfs/aops.c:923:
+				if (!is_mft && !is_retry &&
+						lcn == LCN_RL_NOT_MAPPED) {

CHECK:BRACES: Unbalanced braces around else statement
#359: FILE: fs/ntfs/aops.c:936:
+				} else

WARNING:SPLIT_STRING: quoted string split across lines
#366: FILE: fs/ntfs/aops.c:943:
+				ntfs_error(vol->sb, "Cannot write ntfs record "
+						"0x%llx (inode 0x%lx, "

WARNING:SPLIT_STRING: quoted string split across lines
#367: FILE: fs/ntfs/aops.c:944:
+						"0x%llx (inode 0x%lx, "
+						"attribute type 0x%x) because "

WARNING:SPLIT_STRING: quoted string split across lines
#368: FILE: fs/ntfs/aops.c:945:
+						"attribute type 0x%x) because "
+						"its location on disk could "

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: fs/ntfs/aops.c:946:
+						"its location on disk could "
+						"not be determined (error "

WARNING:SPLIT_STRING: quoted string split across lines
#370: FILE: fs/ntfs/aops.c:947:
+						"not be determined (error "
+						"code %lli).", (s64)block <<

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#385: FILE: fs/ntfs/aops.c:962:
+						do {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#386: FILE: fs/ntfs/aops.c:963:
+							clear_buffer_dirty(

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#388: FILE: fs/ntfs/aops.c:965:
+						} while ((rec_start_bh =

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'rec_start_bh->b_this_page'
#390: FILE: fs/ntfs/aops.c:967:
+								rec_start_bh->
+								b_this_page) !=

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#399: FILE: fs/ntfs/aops.c:975:
+		BUG_ON(nr_bhs >= max_bhs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#413: FILE: fs/ntfs/aops.c:1031:
+		err2 = pre_write_mst_fixup((NTFS_RECORD*)(kaddr + ofs),

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: fs/ntfs/aops.c:1032:
+		err2 = pre_write_mst_fixup((NTFS_RECORD*)(kaddr + ofs),
 				rec_size);

CHECK:CAMELCASE: Avoid CamelCase: <NVolSetErrors>
#450: FILE: fs/ntfs/aops.c:1170:
+		NVolSetErrors(vol);

WARNING:SPLIT_STRING: quoted string split across lines
#472: FILE: fs/ntfs/aops.c:1452:
 	ntfs_debug("Entering for inode 0x%lx, attribute type 0x%x, page index "
+			"0x%lx, from = %u, to = %u.", ni->mft_no, ni->type,

WARNING:SPLIT_STRING: quoted string split across lines
#492: FILE: fs/ntfs/aops.c:1654:
+				ntfs_error(vol->sb, "Failed to write to inode "
+						"0x%lx, attribute type 0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#493: FILE: fs/ntfs/aops.c:1655:
+						"0x%lx, attribute type 0x%x, "
+						"vcn 0x%llx, offset 0x%x "

WARNING:SPLIT_STRING: quoted string split across lines
#494: FILE: fs/ntfs/aops.c:1656:
+						"vcn 0x%llx, offset 0x%x "
+						"because its location on disk "

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: fs/ntfs/aops.c:1657:
+						"because its location on disk "
+						"could not be determined%s "

WARNING:SPLIT_STRING: quoted string split across lines
#496: FILE: fs/ntfs/aops.c:1658:
+						"could not be determined%s "
+						"(error code %lli).",

WARNING:SPLIT_STRING: quoted string split across lines
#505: FILE: fs/ntfs/aops.c:1662:
+						vcn_ofs, is_retry ? " even "
+						"after retrying" : "",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#617: FILE: fs/ntfs/mft.c:539:
+				BUG_ON(!rl);

WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: fs/ntfs/mft.c:555:
+				ntfs_error(vol->sb, "Cannot write mft mirror "
+						"record 0x%lx because its "

WARNING:SPLIT_STRING: quoted string split across lines
#634: FILE: fs/ntfs/mft.c:556:
+						"record 0x%lx because its "
+						"location on disk could not "

WARNING:SPLIT_STRING: quoted string split across lines
#635: FILE: fs/ntfs/mft.c:557:
+						"location on disk could not "
+						"be determined (error code "

WARNING:SPLIT_STRING: quoted string split across lines
#636: FILE: fs/ntfs/mft.c:558:
+						"be determined (error code "
+						"%lli).", mft_no,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#699: FILE: fs/ntfs/mft.c:707:
+				BUG_ON(nr_bhs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#720: FILE: fs/ntfs/mft.c:726:
+				BUG_ON(!rl);

WARNING:SPLIT_STRING: quoted string split across lines
#736: FILE: fs/ntfs/mft.c:742:
+				ntfs_error(vol->sb, "Cannot write mft record "
+						"0x%lx because its location "

WARNING:SPLIT_STRING: quoted string split across lines
#737: FILE: fs/ntfs/mft.c:743:
+						"0x%lx because its location "
+						"on disk could not be "

WARNING:SPLIT_STRING: quoted string split across lines
#738: FILE: fs/ntfs/mft.c:744:
+						"on disk could not be "
+						"determined (error code %lli).",

CHECK:BRACES: Unbalanced braces around else statement
#771: FILE: fs/ntfs/mft.c:831:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232134.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 44 warnings, 13 checks, 692 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232134.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
