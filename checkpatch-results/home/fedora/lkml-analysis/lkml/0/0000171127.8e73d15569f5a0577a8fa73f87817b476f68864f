WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
no host kernel modifications, and a secure, faster mode (skas mode) in which

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#45: 
the the start of the stub, and it repeatedly pops the information

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#426: FILE: arch/um/include/mem.h:16:
+extern unsigned long to_phys(void *virt);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#438: FILE: arch/um/include/registers.h:17:
+extern void get_safe_registers(unsigned long * regs);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#438: FILE: arch/um/include/registers.h:17:
+extern void get_safe_registers(unsigned long * regs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: arch/um/include/sysdep-i386/stub.h:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#476: FILE: arch/um/include/sysdep-i386/stub.h:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#487: FILE: arch/um/include/sysdep-i386/stub.h:12:
+extern void stub_segv_handler(int sig);

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#502: FILE: arch/um/include/sysdep-x86_64/ptrace_user.h:58:
+/* These are before the system call, so the the system call number is RAX

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: arch/um/include/sysdep-x86_64/stub.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#524: FILE: arch/um/include/sysdep-x86_64/stub.h:1:
+/* 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#536: FILE: arch/um/include/sysdep-x86_64/stub.h:13:
+extern void stub_segv_handler(int sig);

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: arch/um/include/tlb.h:40:
+                             unsigned long end_addr, int force,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/um/include/tlb.h:40:
+                             unsigned long end_addr, int force,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: arch/um/include/tlb.h:41:
+                             void (*do_ops)(union mm_context *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: arch/um/include/tlb.h:41:
+                             void (*do_ops)(union mm_context *, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/um/include/tlb.h:41:
+                             void (*do_ops)(union mm_context *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union mm_context *' should also have an identifier name
#554: FILE: arch/um/include/tlb.h:41:
+                             void (*do_ops)(union mm_context *, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct host_vm_op *' should also have an identifier name
#554: FILE: arch/um/include/tlb.h:41:
+                             void (*do_ops)(union mm_context *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#554: FILE: arch/um/include/tlb.h:41:
+                             void (*do_ops)(union mm_context *, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: arch/um/include/tlb.h:42:
+                                            struct host_vm_op *, int));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/um/include/tlb.h:42:
+                                            struct host_vm_op *, int));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: arch/um/include/tlb.h:48:
+                    int last_filled, union mm_context *mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: arch/um/include/tlb.h:48:
+                    int last_filled, union mm_context *mmu,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: arch/um/include/tlb.h:49:
+                    void (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: arch/um/include/tlb.h:49:
+                    void (*do_ops)(union mm_context *, struct host_vm_op *, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/um/include/tlb.h:49:
+                    void (*do_ops)(union mm_context *, struct host_vm_op *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union mm_context *' should also have an identifier name
#564: FILE: arch/um/include/tlb.h:49:
+                    void (*do_ops)(union mm_context *, struct host_vm_op *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct host_vm_op *' should also have an identifier name
#564: FILE: arch/um/include/tlb.h:49:
+                    void (*do_ops)(union mm_context *, struct host_vm_op *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#564: FILE: arch/um/include/tlb.h:49:
+                    void (*do_ops)(union mm_context *, struct host_vm_op *, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: arch/um/include/tlb.h:50:
+                                   int));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: arch/um/include/tlb.h:50:
+                                   int));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: arch/um/include/tlb.h:53:
+                      union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: arch/um/include/tlb.h:53:
+                      union mm_context *mmu, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: arch/um/include/tlb.h:53:
+                      union mm_context *mmu, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: arch/um/include/tlb.h:54:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: arch/um/include/tlb.h:54:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/um/include/tlb.h:54:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union mm_context *' should also have an identifier name
#570: FILE: arch/um/include/tlb.h:54:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct host_vm_op *' should also have an identifier name
#570: FILE: arch/um/include/tlb.h:54:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#570: FILE: arch/um/include/tlb.h:54:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: arch/um/include/tlb.h:55:
+                                     int));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/um/include/tlb.h:55:
+                                     int));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: arch/um/include/tlb.h:58:
+                        int last_filled, union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: arch/um/include/tlb.h:58:
+                        int last_filled, union mm_context *mmu, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: arch/um/include/tlb.h:58:
+                        int last_filled, union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: arch/um/include/tlb.h:59:
+                        void (*do_ops)(union mm_context *, struct host_vm_op *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/um/include/tlb.h:59:
+                        void (*do_ops)(union mm_context *, struct host_vm_op *,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union mm_context *' should also have an identifier name
#577: FILE: arch/um/include/tlb.h:59:
+                        void (*do_ops)(union mm_context *, struct host_vm_op *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct host_vm_op *' should also have an identifier name
#577: FILE: arch/um/include/tlb.h:59:
+                        void (*do_ops)(union mm_context *, struct host_vm_op *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#577: FILE: arch/um/include/tlb.h:59:
+                        void (*do_ops)(union mm_context *, struct host_vm_op *,

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: arch/um/include/tlb.h:60:
+                                       int));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: arch/um/include/tlb.h:60:
+                                       int));$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#616: FILE: arch/um/kernel/physmem.c:356:
+extern int __syscall_stub_start, __binary_start;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#650: FILE: arch/um/kernel/process.c:362:
+int ptrace_faultinfo = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#653: FILE: arch/um/kernel/process.c:365:
+extern void *__syscall_stub_start, __syscall_stub_end;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: arch/um/kernel/process.c:383:
+^I} $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#672: FILE: arch/um/kernel/process.c:384:
+	} 
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#672: FILE: arch/um/kernel/process.c:384:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: arch/um/kernel/process.c:400:
+^I} $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#695: FILE: arch/um/kernel/process.c:401:
+	} 
+	else {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#695: FILE: arch/um/kernel/process.c:401:
+	else {
 		printf("found\n");
 	}

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: arch/um/kernel/process.c:401:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: arch/um/kernel/skas/exec_kern.c:21:
+        switch_mm_skas(&current->mm->context.skas.id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: arch/um/kernel/skas/exec_kern.c:21:
+        switch_mm_skas(&current->mm->context.skas.id);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#725: FILE: arch/um/kernel/skas/include/mm_id.h:1:
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: arch/um/kernel/skas/include/mmu-skas.h:13:
+        unsigned long last_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/um/kernel/skas/include/mmu-skas.h:13:
+        unsigned long last_page_table;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#758: FILE: arch/um/kernel/skas/include/mmu-skas.h:16:
+extern void switch_mm_skas(struct mm_id * mm_idp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: arch/um/kernel/skas/include/mmu-skas.h:16:
+extern void switch_mm_skas(struct mm_id * mm_idp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#788: FILE: arch/um/kernel/skas/include/skas.h:27:
+extern int map(struct mm_id * mm_idp, unsigned long virt, unsigned long len,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#788: FILE: arch/um/kernel/skas/include/skas.h:27:
+extern int map(struct mm_id * mm_idp, unsigned long virt, unsigned long len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: arch/um/kernel/skas/include/skas.h:28:
+               int r, int w, int x, int phys_fd, unsigned long long offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: arch/um/kernel/skas/include/skas.h:28:
+               int r, int w, int x, int phys_fd, unsigned long long offset);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#790: FILE: arch/um/kernel/skas/include/skas.h:29:
+extern int unmap(struct mm_id * mm_idp, void *addr, unsigned long len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#790: FILE: arch/um/kernel/skas/include/skas.h:29:
+extern int unmap(struct mm_id * mm_idp, void *addr, unsigned long len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: arch/um/kernel/skas/include/skas.h:30:
+extern int protect(struct mm_id * mm_idp, unsigned long addr, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#791: FILE: arch/um/kernel/skas/include/skas.h:30:
+extern int protect(struct mm_id * mm_idp, unsigned long addr, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#791: FILE: arch/um/kernel/skas/include/skas.h:30:
+extern int protect(struct mm_id * mm_idp, unsigned long addr, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#796: FILE: arch/um/kernel/skas/include/skas.h:34:
+extern int start_userspace(unsigned long stub_stack);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#799: FILE: arch/um/kernel/skas/include/skas.h:37:
+extern unsigned long current_stub_stack(void);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#824: FILE: arch/um/kernel/skas/mem.c:25:
+	else *task_size_out = CONFIG_STUB_START & PGDIR_MASK;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: arch/um/kernel/skas/mem_user.c:29:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: arch/um/kernel/skas/mem_user.c:29:
+  $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#860: FILE: arch/um/kernel/skas/mem_user.c:30:
+extern void wait_stub_done(int pid, int sig, char * fname);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#860: FILE: arch/um/kernel/skas/mem_user.c:30:
+extern void wait_stub_done(int pid, int sig, char * fname);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#864: FILE: arch/um/kernel/skas/mem_user.c:32:
+static long run_syscall_stub(struct mm_id * mm_idp, int syscall,

ERROR:CODE_INDENT: code indent should use tabs where possible
#865: FILE: arch/um/kernel/skas/mem_user.c:33:
+                             unsigned long *args)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: arch/um/kernel/skas/mem_user.c:33:
+                             unsigned long *args)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#869: FILE: arch/um/kernel/skas/mem_user.c:35:
+        int n, pid = mm_idp->u.pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: arch/um/kernel/skas/mem_user.c:35:
+        int n, pid = mm_idp->u.pid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#870: FILE: arch/um/kernel/skas/mem_user.c:36:
+        unsigned long regs[MAX_REG_NR];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#870: FILE: arch/um/kernel/skas/mem_user.c:36:
+        unsigned long regs[MAX_REG_NR];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: arch/um/kernel/skas/mem_user.c:38:
+        get_safe_registers(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: arch/um/kernel/skas/mem_user.c:38:
+        get_safe_registers(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: arch/um/kernel/skas/mem_user.c:39:
+        regs[REGS_IP_INDEX] = UML_CONFIG_STUB_CODE +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: arch/um/kernel/skas/mem_user.c:39:
+        regs[REGS_IP_INDEX] = UML_CONFIG_STUB_CODE +$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: arch/um/kernel/skas/mem_user.c:40:
+                ((unsigned long) &syscall_stub - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: arch/um/kernel/skas/mem_user.c:40:
+                ((unsigned long) &syscall_stub - $

CHECK:SPACING: No space is necessary after a cast
#876: FILE: arch/um/kernel/skas/mem_user.c:40:
+                ((unsigned long) &syscall_stub - 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: arch/um/kernel/skas/mem_user.c:40:
+                ((unsigned long) &syscall_stub - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#877: FILE: arch/um/kernel/skas/mem_user.c:41:
+                 (unsigned long) &__syscall_stub_start);$

CHECK:SPACING: No space is necessary after a cast
#877: FILE: arch/um/kernel/skas/mem_user.c:41:
+                 (unsigned long) &__syscall_stub_start);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: arch/um/kernel/skas/mem_user.c:41:
+                 (unsigned long) &__syscall_stub_start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#878: FILE: arch/um/kernel/skas/mem_user.c:42:
+        /* XXX Don't have a define for starting a syscall */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#879: FILE: arch/um/kernel/skas/mem_user.c:43:
+        regs[REGS_SYSCALL_NR] = syscall;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#879: FILE: arch/um/kernel/skas/mem_user.c:43:
+        regs[REGS_SYSCALL_NR] = syscall;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#880: FILE: arch/um/kernel/skas/mem_user.c:44:
+        regs[REGS_SYSCALL_ARG1] = args[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: arch/um/kernel/skas/mem_user.c:44:
+        regs[REGS_SYSCALL_ARG1] = args[0];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: arch/um/kernel/skas/mem_user.c:45:
+        regs[REGS_SYSCALL_ARG2] = args[1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: arch/um/kernel/skas/mem_user.c:45:
+        regs[REGS_SYSCALL_ARG2] = args[1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: arch/um/kernel/skas/mem_user.c:46:
+        regs[REGS_SYSCALL_ARG3] = args[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: arch/um/kernel/skas/mem_user.c:46:
+        regs[REGS_SYSCALL_ARG3] = args[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: arch/um/kernel/skas/mem_user.c:47:
+        regs[REGS_SYSCALL_ARG4] = args[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: arch/um/kernel/skas/mem_user.c:47:
+        regs[REGS_SYSCALL_ARG4] = args[3];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: arch/um/kernel/skas/mem_user.c:48:
+        regs[REGS_SYSCALL_ARG5] = args[4];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: arch/um/kernel/skas/mem_user.c:48:
+        regs[REGS_SYSCALL_ARG5] = args[4];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: arch/um/kernel/skas/mem_user.c:49:
+        regs[REGS_SYSCALL_ARG6] = args[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: arch/um/kernel/skas/mem_user.c:49:
+        regs[REGS_SYSCALL_ARG6] = args[5];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: arch/um/kernel/skas/mem_user.c:50:
+        n = ptrace_setregs(pid, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: arch/um/kernel/skas/mem_user.c:50:
+        n = ptrace_setregs(pid, regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: arch/um/kernel/skas/mem_user.c:51:
+        if(n < 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: arch/um/kernel/skas/mem_user.c:51:
+        if(n < 0){$

ERROR:SPACING: space required before the open brace '{'
#887: FILE: arch/um/kernel/skas/mem_user.c:51:
+        if(n < 0){

ERROR:SPACING: space required before the open parenthesis '('
#887: FILE: arch/um/kernel/skas/mem_user.c:51:
+        if(n < 0){

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: arch/um/kernel/skas/mem_user.c:52:
+                printk("run_syscall_stub : PTRACE_SETREGS failed, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: arch/um/kernel/skas/mem_user.c:52:
+                printk("run_syscall_stub : PTRACE_SETREGS failed, "$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#888: FILE: arch/um/kernel/skas/mem_user.c:52:
+                printk("run_syscall_stub : PTRACE_SETREGS failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'run_syscall_stub', this function's name, in a string
#888: FILE: arch/um/kernel/skas/mem_user.c:52:
+                printk("run_syscall_stub : PTRACE_SETREGS failed, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: arch/um/kernel/skas/mem_user.c:53:
+                       "errno = %d\n", n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: arch/um/kernel/skas/mem_user.c:53:
+                       "errno = %d\n", n);$

WARNING:SPLIT_STRING: quoted string split across lines
#889: FILE: arch/um/kernel/skas/mem_user.c:53:
+                printk("run_syscall_stub : PTRACE_SETREGS failed, "
+                       "errno = %d\n", n);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: arch/um/kernel/skas/mem_user.c:54:
+                return(n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: arch/um/kernel/skas/mem_user.c:54:
+                return(n);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#890: FILE: arch/um/kernel/skas/mem_user.c:54:
+                return(n);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: arch/um/kernel/skas/mem_user.c:55:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: arch/um/kernel/skas/mem_user.c:55:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: arch/um/kernel/skas/mem_user.c:57:
+        wait_stub_done(pid, 0, "run_syscall_stub");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: arch/um/kernel/skas/mem_user.c:57:
+        wait_stub_done(pid, 0, "run_syscall_stub");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: arch/um/kernel/skas/mem_user.c:59:
+        return(*((unsigned long *) mm_idp->stack));$

CHECK:SPACING: No space is necessary after a cast
#909: FILE: arch/um/kernel/skas/mem_user.c:59:
+        return(*((unsigned long *) mm_idp->stack));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: arch/um/kernel/skas/mem_user.c:59:
+        return(*((unsigned long *) mm_idp->stack));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: arch/um/kernel/skas/mem_user.c:63:
+        int r, int w, int x, int phys_fd, unsigned long long offset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: arch/um/kernel/skas/mem_user.c:63:
+        int r, int w, int x, int phys_fd, unsigned long long offset)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: arch/um/kernel/skas/mem_user.c:65:
+        int prot, n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: arch/um/kernel/skas/mem_user.c:65:
+        int prot, n;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: arch/um/kernel/skas/mem_user.c:67:
+        prot = (r ? PROT_READ : 0) | (w ? PROT_WRITE : 0) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: arch/um/kernel/skas/mem_user.c:67:
+        prot = (r ? PROT_READ : 0) | (w ? PROT_WRITE : 0) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: arch/um/kernel/skas/mem_user.c:67:
+        prot = (r ? PROT_READ : 0) | (w ? PROT_WRITE : 0) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: arch/um/kernel/skas/mem_user.c:68:
+                (x ? PROT_EXEC : 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: arch/um/kernel/skas/mem_user.c:68:
+                (x ? PROT_EXEC : 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: arch/um/kernel/skas/mem_user.c:70:
+        if(proc_mm){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: arch/um/kernel/skas/mem_user.c:70:
+        if(proc_mm){$

ERROR:SPACING: space required before the open brace '{'
#935: FILE: arch/um/kernel/skas/mem_user.c:70:
+        if(proc_mm){

ERROR:SPACING: space required before the open parenthesis '('
#935: FILE: arch/um/kernel/skas/mem_user.c:70:
+        if(proc_mm){

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: arch/um/kernel/skas/mem_user.c:71:
+                struct proc_mm_op map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: arch/um/kernel/skas/mem_user.c:71:
+                struct proc_mm_op map;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: arch/um/kernel/skas/mem_user.c:72:
+                int fd = mm_idp->u.mm_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: arch/um/kernel/skas/mem_user.c:72:
+                int fd = mm_idp->u.mm_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: arch/um/kernel/skas/mem_user.c:73:
+                map = ((struct proc_mm_op) { .op^I= MM_MMAP,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#938: FILE: arch/um/kernel/skas/mem_user.c:73:
+                int fd = mm_idp->u.mm_fd;
+                map = ((struct proc_mm_op) { .op	= MM_MMAP,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: arch/um/kernel/skas/mem_user.c:73:
+                map = ((struct proc_mm_op) { .op^I= MM_MMAP,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: arch/um/kernel/skas/mem_user.c:74:
+                                             .u^I^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: arch/um/kernel/skas/mem_user.c:74:
+                                             .u^I^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: arch/um/kernel/skas/mem_user.c:74:
+                                             .u^I^I= $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: arch/um/kernel/skas/mem_user.c:75:
+                                             { .mmap^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: arch/um/kernel/skas/mem_user.c:75:
+                                             { .mmap^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: arch/um/kernel/skas/mem_user.c:75:
+                                             { .mmap^I= $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#940: FILE: arch/um/kernel/skas/mem_user.c:75:
+                                             .u		= 
+                                             { .mmap	= 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: arch/um/kernel/skas/mem_user.c:76:
+                                               { .addr^I= virt,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: arch/um/kernel/skas/mem_user.c:76:
+                                               { .addr^I= virt,$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#941: FILE: arch/um/kernel/skas/mem_user.c:76:
+                                             { .mmap	= 
+                                               { .addr	= virt,

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: arch/um/kernel/skas/mem_user.c:77:
+                                                 .len^I= len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: arch/um/kernel/skas/mem_user.c:77:
+                                                 .len^I= len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: arch/um/kernel/skas/mem_user.c:78:
+                                                 .prot^I= prot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: arch/um/kernel/skas/mem_user.c:78:
+                                                 .prot^I= prot,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#944: FILE: arch/um/kernel/skas/mem_user.c:79:
+                                                 .flags^I= MAP_SHARED | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: arch/um/kernel/skas/mem_user.c:79:
+                                                 .flags^I= MAP_SHARED | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: arch/um/kernel/skas/mem_user.c:79:
+                                                 .flags^I= MAP_SHARED | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: arch/um/kernel/skas/mem_user.c:80:
+                                                 MAP_FIXED,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: arch/um/kernel/skas/mem_user.c:80:
+                                                 MAP_FIXED,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: arch/um/kernel/skas/mem_user.c:81:
+                                                 .fd^I= phys_fd,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: arch/um/kernel/skas/mem_user.c:81:
+                                                 .fd^I= phys_fd,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: arch/um/kernel/skas/mem_user.c:82:
+                                                 .offset= offset$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: arch/um/kernel/skas/mem_user.c:82:
+                                                 .offset= offset$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#947: FILE: arch/um/kernel/skas/mem_user.c:82:
+                                                 .offset= offset
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: arch/um/kernel/skas/mem_user.c:83:
+                                               } } } );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: arch/um/kernel/skas/mem_user.c:83:
+                                               } } } );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#948: FILE: arch/um/kernel/skas/mem_user.c:83:
+                                               } } } );

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: arch/um/kernel/skas/mem_user.c:84:
+                n = os_write_file(fd, &map, sizeof(map));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: arch/um/kernel/skas/mem_user.c:84:
+                n = os_write_file(fd, &map, sizeof(map));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: arch/um/kernel/skas/mem_user.c:85:
+                if(n != sizeof(map)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: arch/um/kernel/skas/mem_user.c:85:
+                if(n != sizeof(map)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: arch/um/kernel/skas/mem_user.c:85:
+                if(n != sizeof(map)) $

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: arch/um/kernel/skas/mem_user.c:85:
+                if(n != sizeof(map)) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: arch/um/kernel/skas/mem_user.c:86:
+                        printk("map : /proc/mm map failed, err = %d\n", -n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: arch/um/kernel/skas/mem_user.c:86:
+                        printk("map : /proc/mm map failed, err = %d\n", -n);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#951: FILE: arch/um/kernel/skas/mem_user.c:86:
+                        printk("map : /proc/mm map failed, err = %d\n", -n);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map', this function's name, in a string
#951: FILE: arch/um/kernel/skas/mem_user.c:86:
+                        printk("map : /proc/mm map failed, err = %d\n", -n);

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: arch/um/kernel/skas/mem_user.c:87:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: arch/um/kernel/skas/mem_user.c:87:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#953: FILE: arch/um/kernel/skas/mem_user.c:88:
+        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: arch/um/kernel/skas/mem_user.c:88:
+        else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#953: FILE: arch/um/kernel/skas/mem_user.c:88:
+        }
+        else {

CHECK:BRACES: Unbalanced braces around else statement
#953: FILE: arch/um/kernel/skas/mem_user.c:88:
+        else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: arch/um/kernel/skas/mem_user.c:89:
+                long res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: arch/um/kernel/skas/mem_user.c:89:
+                long res;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: arch/um/kernel/skas/mem_user.c:90:
+                unsigned long args[] = { virt, len, prot, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: arch/um/kernel/skas/mem_user.c:90:
+                unsigned long args[] = { virt, len, prot, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: arch/um/kernel/skas/mem_user.c:90:
+                unsigned long args[] = { virt, len, prot, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: arch/um/kernel/skas/mem_user.c:91:
+                                         MAP_SHARED | MAP_FIXED, phys_fd,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: arch/um/kernel/skas/mem_user.c:91:
+                                         MAP_SHARED | MAP_FIXED, phys_fd,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: arch/um/kernel/skas/mem_user.c:92:
+                                         MMAP_OFFSET(offset) };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: arch/um/kernel/skas/mem_user.c:92:
+                                         MMAP_OFFSET(offset) };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: arch/um/kernel/skas/mem_user.c:94:
+                res = run_syscall_stub(mm_idp, STUB_MMAP_NR, args);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: arch/um/kernel/skas/mem_user.c:94:
+                res = run_syscall_stub(mm_idp, STUB_MMAP_NR, args);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: arch/um/kernel/skas/mem_user.c:95:
+                if((void *) res == MAP_FAILED)$

CHECK:SPACING: No space is necessary after a cast
#960: FILE: arch/um/kernel/skas/mem_user.c:95:
+                if((void *) res == MAP_FAILED)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: arch/um/kernel/skas/mem_user.c:95:
+                if((void *) res == MAP_FAILED)$

ERROR:SPACING: space required before the open parenthesis '('
#960: FILE: arch/um/kernel/skas/mem_user.c:95:
+                if((void *) res == MAP_FAILED)

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: arch/um/kernel/skas/mem_user.c:96:
+                        printk("mmap stub failed, errno = %d\n", res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: arch/um/kernel/skas/mem_user.c:96:
+                        printk("mmap stub failed, errno = %d\n", res);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#961: FILE: arch/um/kernel/skas/mem_user.c:96:
+                        printk("mmap stub failed, errno = %d\n", res);

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: arch/um/kernel/skas/mem_user.c:97:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: arch/um/kernel/skas/mem_user.c:97:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: arch/um/kernel/skas/mem_user.c:99:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: arch/um/kernel/skas/mem_user.c:99:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#974: FILE: arch/um/kernel/skas/mem_user.c:104:
+        int n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: arch/um/kernel/skas/mem_user.c:104:
+        int n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: arch/um/kernel/skas/mem_user.c:106:
+        if(proc_mm){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: arch/um/kernel/skas/mem_user.c:106:
+        if(proc_mm){$

ERROR:SPACING: space required before the open brace '{'
#978: FILE: arch/um/kernel/skas/mem_user.c:106:
+        if(proc_mm){

ERROR:SPACING: space required before the open parenthesis '('
#978: FILE: arch/um/kernel/skas/mem_user.c:106:
+        if(proc_mm){

ERROR:CODE_INDENT: code indent should use tabs where possible
#979: FILE: arch/um/kernel/skas/mem_user.c:107:
+                struct proc_mm_op unmap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: arch/um/kernel/skas/mem_user.c:107:
+                struct proc_mm_op unmap;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: arch/um/kernel/skas/mem_user.c:108:
+                int fd = mm_idp->u.mm_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: arch/um/kernel/skas/mem_user.c:108:
+                int fd = mm_idp->u.mm_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: arch/um/kernel/skas/mem_user.c:109:
+                unmap = ((struct proc_mm_op) { .op^I= MM_MUNMAP,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#981: FILE: arch/um/kernel/skas/mem_user.c:109:
+                int fd = mm_idp->u.mm_fd;
+                unmap = ((struct proc_mm_op) { .op	= MM_MUNMAP,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: arch/um/kernel/skas/mem_user.c:109:
+                unmap = ((struct proc_mm_op) { .op^I= MM_MUNMAP,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: arch/um/kernel/skas/mem_user.c:110:
+                                               .u^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: arch/um/kernel/skas/mem_user.c:110:
+                                               .u^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: arch/um/kernel/skas/mem_user.c:110:
+                                               .u^I= $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: arch/um/kernel/skas/mem_user.c:111:
+                                               { .munmap^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: arch/um/kernel/skas/mem_user.c:111:
+                                               { .munmap^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: arch/um/kernel/skas/mem_user.c:111:
+                                               { .munmap^I= $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#983: FILE: arch/um/kernel/skas/mem_user.c:111:
+                                               .u	= 
+                                               { .munmap	= 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#984: FILE: arch/um/kernel/skas/mem_user.c:112:
+                                                 { .addr^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: arch/um/kernel/skas/mem_user.c:112:
+                                                 { .addr^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: arch/um/kernel/skas/mem_user.c:112:
+                                                 { .addr^I= $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#984: FILE: arch/um/kernel/skas/mem_user.c:112:
+                                               { .munmap	= 
+                                                 { .addr	= 

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: arch/um/kernel/skas/mem_user.c:113:
+                                                   (unsigned long) addr,$

CHECK:SPACING: No space is necessary after a cast
#985: FILE: arch/um/kernel/skas/mem_user.c:113:
+                                                   (unsigned long) addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: arch/um/kernel/skas/mem_user.c:113:
+                                                   (unsigned long) addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: arch/um/kernel/skas/mem_user.c:114:
+                                                   .len^I^I= len } } } );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: arch/um/kernel/skas/mem_user.c:114:
+                                                   .len^I^I= len } } } );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#986: FILE: arch/um/kernel/skas/mem_user.c:114:
+                                                   .len		= len } } } );

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: arch/um/kernel/skas/mem_user.c:115:
+                n = os_write_file(fd, &unmap, sizeof(unmap));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: arch/um/kernel/skas/mem_user.c:115:
+                n = os_write_file(fd, &unmap, sizeof(unmap));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: arch/um/kernel/skas/mem_user.c:116:
+                if(n != sizeof(unmap)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: arch/um/kernel/skas/mem_user.c:116:
+                if(n != sizeof(unmap)) {$

ERROR:SPACING: space required before the open parenthesis '('
#988: FILE: arch/um/kernel/skas/mem_user.c:116:
+                if(n != sizeof(unmap)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: arch/um/kernel/skas/mem_user.c:117:
+                        if(n < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: arch/um/kernel/skas/mem_user.c:117:
+                        if(n < 0)$

ERROR:SPACING: space required before the open parenthesis '('
#989: FILE: arch/um/kernel/skas/mem_user.c:117:
+                        if(n < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#990: FILE: arch/um/kernel/skas/mem_user.c:118:
+                                return(n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: arch/um/kernel/skas/mem_user.c:118:
+                                return(n);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#991: FILE: arch/um/kernel/skas/mem_user.c:119:
+                        else if(n > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: arch/um/kernel/skas/mem_user.c:119:
+                        else if(n > 0)$

ERROR:SPACING: space required before the open parenthesis '('
#991: FILE: arch/um/kernel/skas/mem_user.c:119:
+                        else if(n > 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#992: FILE: arch/um/kernel/skas/mem_user.c:120:
+                                return(-EIO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: arch/um/kernel/skas/mem_user.c:120:
+                                return(-EIO);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: arch/um/kernel/skas/mem_user.c:121:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: arch/um/kernel/skas/mem_user.c:121:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: arch/um/kernel/skas/mem_user.c:122:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: arch/um/kernel/skas/mem_user.c:122:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: arch/um/kernel/skas/mem_user.c:123:
+        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: arch/um/kernel/skas/mem_user.c:123:
+        else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#995: FILE: arch/um/kernel/skas/mem_user.c:123:
+        }
+        else {

CHECK:BRACES: Unbalanced braces around else statement
#995: FILE: arch/um/kernel/skas/mem_user.c:123:
+        else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: arch/um/kernel/skas/mem_user.c:124:
+                int res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: arch/um/kernel/skas/mem_user.c:124:
+                int res;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#997: FILE: arch/um/kernel/skas/mem_user.c:125:
+                unsigned long args[] = { (unsigned long) addr, len, 0, 0, 0, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: arch/um/kernel/skas/mem_user.c:125:
+                unsigned long args[] = { (unsigned long) addr, len, 0, 0, 0, $

CHECK:SPACING: No space is necessary after a cast
#997: FILE: arch/um/kernel/skas/mem_user.c:125:
+                unsigned long args[] = { (unsigned long) addr, len, 0, 0, 0, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: arch/um/kernel/skas/mem_user.c:125:
+                unsigned long args[] = { (unsigned long) addr, len, 0, 0, 0, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: arch/um/kernel/skas/mem_user.c:126:
+                                         0 };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: arch/um/kernel/skas/mem_user.c:126:
+                                         0 };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: arch/um/kernel/skas/mem_user.c:128:
+                res = run_syscall_stub(mm_idp, __NR_munmap, args);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: arch/um/kernel/skas/mem_user.c:128:
+                res = run_syscall_stub(mm_idp, __NR_munmap, args);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: arch/um/kernel/skas/mem_user.c:129:
+                if(res < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: arch/um/kernel/skas/mem_user.c:129:
+                if(res < 0)$

ERROR:SPACING: space required before the open parenthesis '('
#1001: FILE: arch/um/kernel/skas/mem_user.c:129:
+                if(res < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: arch/um/kernel/skas/mem_user.c:130:
+                        printk("munmap stub failed, errno = %d\n", res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: arch/um/kernel/skas/mem_user.c:130:
+                        printk("munmap stub failed, errno = %d\n", res);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1002: FILE: arch/um/kernel/skas/mem_user.c:130:
+                        printk("munmap stub failed, errno = %d\n", res);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: arch/um/kernel/skas/mem_user.c:131:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: arch/um/kernel/skas/mem_user.c:131:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: arch/um/kernel/skas/mem_user.c:132:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: arch/um/kernel/skas/mem_user.c:132:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: arch/um/kernel/skas/mem_user.c:133:
+        return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: arch/um/kernel/skas/mem_user.c:133:
+        return(0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1018: FILE: arch/um/kernel/skas/mem_user.c:136:
+int protect(struct mm_id *mm_idp, unsigned long addr, unsigned long len, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1021: FILE: arch/um/kernel/skas/mem_user.c:139:
+        struct proc_mm_op protect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: arch/um/kernel/skas/mem_user.c:139:
+        struct proc_mm_op protect;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1022: FILE: arch/um/kernel/skas/mem_user.c:140:
+        int prot, n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: arch/um/kernel/skas/mem_user.c:140:
+        int prot, n;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: arch/um/kernel/skas/mem_user.c:142:
+        prot = (r ? PROT_READ : 0) | (w ? PROT_WRITE : 0) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: arch/um/kernel/skas/mem_user.c:142:
+        prot = (r ? PROT_READ : 0) | (w ? PROT_WRITE : 0) | $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: arch/um/kernel/skas/mem_user.c:142:
+        prot = (r ? PROT_READ : 0) | (w ? PROT_WRITE : 0) | $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1027: FILE: arch/um/kernel/skas/mem_user.c:143:
+                (x ? PROT_EXEC : 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: arch/um/kernel/skas/mem_user.c:143:
+                (x ? PROT_EXEC : 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1031: FILE: arch/um/kernel/skas/mem_user.c:145:
+        if(proc_mm){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: arch/um/kernel/skas/mem_user.c:145:
+        if(proc_mm){$

ERROR:SPACING: space required before the open brace '{'
#1031: FILE: arch/um/kernel/skas/mem_user.c:145:
+        if(proc_mm){

ERROR:SPACING: space required before the open parenthesis '('
#1031: FILE: arch/um/kernel/skas/mem_user.c:145:
+        if(proc_mm){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: arch/um/kernel/skas/mem_user.c:146:
+                int fd = mm_idp->u.mm_fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: arch/um/kernel/skas/mem_user.c:146:
+                int fd = mm_idp->u.mm_fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: arch/um/kernel/skas/mem_user.c:147:
+                protect = ((struct proc_mm_op) { .op^I= MM_MPROTECT,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1033: FILE: arch/um/kernel/skas/mem_user.c:147:
+                int fd = mm_idp->u.mm_fd;
+                protect = ((struct proc_mm_op) { .op	= MM_MPROTECT,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: arch/um/kernel/skas/mem_user.c:147:
+                protect = ((struct proc_mm_op) { .op^I= MM_MPROTECT,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1034: FILE: arch/um/kernel/skas/mem_user.c:148:
+                                                 .u^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1034: FILE: arch/um/kernel/skas/mem_user.c:148:
+                                                 .u^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: arch/um/kernel/skas/mem_user.c:148:
+                                                 .u^I= $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: arch/um/kernel/skas/mem_user.c:149:
+                                                 { .mprotect^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1035: FILE: arch/um/kernel/skas/mem_user.c:149:
+                                                 { .mprotect^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: arch/um/kernel/skas/mem_user.c:149:
+                                                 { .mprotect^I= $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1035: FILE: arch/um/kernel/skas/mem_user.c:149:
+                                                 .u	= 
+                                                 { .mprotect	= 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: arch/um/kernel/skas/mem_user.c:150:
+                                                   { .addr^I= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1036: FILE: arch/um/kernel/skas/mem_user.c:150:
+                                                   { .addr^I= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: arch/um/kernel/skas/mem_user.c:150:
+                                                   { .addr^I= $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1036: FILE: arch/um/kernel/skas/mem_user.c:150:
+                                                 { .mprotect	= 
+                                                   { .addr	= 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: arch/um/kernel/skas/mem_user.c:151:
+                                                     (unsigned long) addr,$

CHECK:SPACING: No space is necessary after a cast
#1037: FILE: arch/um/kernel/skas/mem_user.c:151:
+                                                     (unsigned long) addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: arch/um/kernel/skas/mem_user.c:151:
+                                                     (unsigned long) addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: arch/um/kernel/skas/mem_user.c:152:
+                                                     .len^I= len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: arch/um/kernel/skas/mem_user.c:152:
+                                                     .len^I= len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: arch/um/kernel/skas/mem_user.c:153:
+                                                     .prot^I= prot } } } );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: arch/um/kernel/skas/mem_user.c:153:
+                                                     .prot^I= prot } } } );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1039: FILE: arch/um/kernel/skas/mem_user.c:153:
+                                                     .prot	= prot } } } );

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: arch/um/kernel/skas/mem_user.c:155:
+                n = os_write_file(fd, &protect, sizeof(protect));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: arch/um/kernel/skas/mem_user.c:155:
+                n = os_write_file(fd, &protect, sizeof(protect));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: arch/um/kernel/skas/mem_user.c:156:
+                if(n != sizeof(protect))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: arch/um/kernel/skas/mem_user.c:156:
+                if(n != sizeof(protect))$

ERROR:SPACING: space required before the open parenthesis '('
#1042: FILE: arch/um/kernel/skas/mem_user.c:156:
+                if(n != sizeof(protect))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: arch/um/kernel/skas/mem_user.c:157:
+                        panic("protect failed, err = %d", -n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: arch/um/kernel/skas/mem_user.c:157:
+                        panic("protect failed, err = %d", -n);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'protect', this function's name, in a string
#1043: FILE: arch/um/kernel/skas/mem_user.c:157:
+                        panic("protect failed, err = %d", -n);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: arch/um/kernel/skas/mem_user.c:158:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: arch/um/kernel/skas/mem_user.c:158:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1045: FILE: arch/um/kernel/skas/mem_user.c:159:
+        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: arch/um/kernel/skas/mem_user.c:159:
+        else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1045: FILE: arch/um/kernel/skas/mem_user.c:159:
+        }
+        else {

CHECK:BRACES: Unbalanced braces around else statement
#1045: FILE: arch/um/kernel/skas/mem_user.c:159:
+        else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1046: FILE: arch/um/kernel/skas/mem_user.c:160:
+                int res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: arch/um/kernel/skas/mem_user.c:160:
+                int res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: arch/um/kernel/skas/mem_user.c:161:
+                unsigned long args[] = { addr, len, prot, 0, 0, 0 };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: arch/um/kernel/skas/mem_user.c:161:
+                unsigned long args[] = { addr, len, prot, 0, 0, 0 };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1049: FILE: arch/um/kernel/skas/mem_user.c:163:
+                res = run_syscall_stub(mm_idp, __NR_mprotect, args);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: arch/um/kernel/skas/mem_user.c:163:
+                res = run_syscall_stub(mm_idp, __NR_mprotect, args);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1050: FILE: arch/um/kernel/skas/mem_user.c:164:
+                if(res < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: arch/um/kernel/skas/mem_user.c:164:
+                if(res < 0)$

ERROR:SPACING: space required before the open parenthesis '('
#1050: FILE: arch/um/kernel/skas/mem_user.c:164:
+                if(res < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1051: FILE: arch/um/kernel/skas/mem_user.c:165:
+                        panic("mprotect stub failed, errno = %d\n", res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: arch/um/kernel/skas/mem_user.c:165:
+                        panic("mprotect stub failed, errno = %d\n", res);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1052: FILE: arch/um/kernel/skas/mem_user.c:166:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: arch/um/kernel/skas/mem_user.c:166:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: arch/um/kernel/skas/mem_user.c:168:
+        return(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: arch/um/kernel/skas/mem_user.c:168:
+        return(0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: arch/um/kernel/skas/mmu.c:23:
+static int init_stub_pte(struct mm_struct *mm, unsigned long proc, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1119: FILE: arch/um/kernel/skas/mmu.c:45:
+^I/* There's an interaction between the skas0 stub pages, stack $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1121: FILE: arch/um/kernel/skas/mmu.c:47:
+         * checks that the number of page tables freed is the same as had$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: arch/um/kernel/skas/mmu.c:48:
+         * been allocated.  If the stack is on the last page table page,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: arch/um/kernel/skas/mmu.c:49:
+^I * then the stack pte page will be freed, and if not, it won't.  To $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1128: FILE: arch/um/kernel/skas/mmu.c:54:
+^I * of that page.  So, we hang onto it here and free it in $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: arch/um/kernel/skas/mmu.c:58:
+        mm->context.skas.last_page_table = pmd_page_kernel(*pmd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: arch/um/kernel/skas/mmu.c:58:
+        mm->context.skas.last_page_table = pmd_page_kernel(*pmd);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1138: FILE: arch/um/kernel/skas/mmu.c:64:
+	return(0);

ERROR:SPACING: space required before the open brace '{'
#1157: FILE: arch/um/kernel/skas/mmu.c:82:
+	if(proc_mm){

ERROR:SPACING: space required before the open parenthesis '('
#1157: FILE: arch/um/kernel/skas/mmu.c:82:
+	if(proc_mm){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_mm != NULL'
#1158: FILE: arch/um/kernel/skas/mmu.c:83:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_mm != &init_mm'
#1158: FILE: arch/um/kernel/skas/mmu.c:83:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

ERROR:SPACING: space required before the open parenthesis '('
#1158: FILE: arch/um/kernel/skas/mmu.c:83:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cur_mm"
#1158: FILE: arch/um/kernel/skas/mmu.c:83:
+		if((cur_mm != NULL) && (cur_mm != &init_mm))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1160: FILE: arch/um/kernel/skas/mmu.c:85:
+		else from = -1;

ERROR:SPACING: space required before the open brace '{'
#1163: FILE: arch/um/kernel/skas/mmu.c:88:
+		if(ret < 0){

ERROR:SPACING: space required before the open parenthesis '('
#1163: FILE: arch/um/kernel/skas/mmu.c:88:
+		if(ret < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1164: FILE: arch/um/kernel/skas/mmu.c:89:
+			printk("init_new_context_skas - new_mm failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1165: FILE: arch/um/kernel/skas/mmu.c:90:
+			printk("init_new_context_skas - new_mm failed, "
+			       "errno = %d\n", ret);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1170: FILE: arch/um/kernel/skas/mmu.c:95:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1170: FILE: arch/um/kernel/skas/mmu.c:95:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1176: FILE: arch/um/kernel/skas/mmu.c:101:
+^I^I       $

CHECK:SPACING: No space is necessary after a cast
#1178: FILE: arch/um/kernel/skas/mmu.c:103:
+				    (unsigned long) &__syscall_stub_start);

ERROR:SPACING: space required before the open parenthesis '('
#1179: FILE: arch/um/kernel/skas/mmu.c:104:
+		if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#1184: FILE: arch/um/kernel/skas/mmu.c:109:
+		if(stack == 0)

ERROR:SPACING: space required before the open parenthesis '('
#1189: FILE: arch/um/kernel/skas/mmu.c:114:
+		if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#1230: FILE: arch/um/kernel/skas/mmu.c:133:
+	if(proc_mm)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1230: FILE: arch/um/kernel/skas/mmu.c:133:
+	if(proc_mm)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1232: FILE: arch/um/kernel/skas/mmu.c:135:
+	else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1279: FILE: arch/um/kernel/skas/process.c:47:
+void wait_stub_done(int pid, int sig, char * fname)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1281: FILE: arch/um/kernel/skas/process.c:49:
+        int n, status, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: arch/um/kernel/skas/process.c:49:
+        int n, status, err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: arch/um/kernel/skas/process.c:51:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: arch/um/kernel/skas/process.c:51:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: arch/um/kernel/skas/process.c:52:
+                if ( sig != -1 ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: arch/um/kernel/skas/process.c:52:
+                if ( sig != -1 ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1284: FILE: arch/um/kernel/skas/process.c:52:
+                if ( sig != -1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1284: FILE: arch/um/kernel/skas/process.c:52:
+                if ( sig != -1 ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1285: FILE: arch/um/kernel/skas/process.c:53:
+                        err = ptrace(PTRACE_CONT, pid, 0, sig);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: arch/um/kernel/skas/process.c:53:
+                        err = ptrace(PTRACE_CONT, pid, 0, sig);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: arch/um/kernel/skas/process.c:54:
+                        if(err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: arch/um/kernel/skas/process.c:54:
+                        if(err)$

ERROR:SPACING: space required before the open parenthesis '('
#1286: FILE: arch/um/kernel/skas/process.c:54:
+                        if(err)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: arch/um/kernel/skas/process.c:55:
+                                panic("%s : continue failed, errno = %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: arch/um/kernel/skas/process.c:55:
+                                panic("%s : continue failed, errno = %d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1288: FILE: arch/um/kernel/skas/process.c:56:
+                                      fname, errno);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: arch/um/kernel/skas/process.c:56:
+                                      fname, errno);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1289: FILE: arch/um/kernel/skas/process.c:57:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: arch/um/kernel/skas/process.c:57:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1290: FILE: arch/um/kernel/skas/process.c:58:
+                sig = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: arch/um/kernel/skas/process.c:58:
+                sig = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1292: FILE: arch/um/kernel/skas/process.c:60:
+                CATCH_EINTR(n = waitpid(pid, &status, WUNTRACED));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: arch/um/kernel/skas/process.c:60:
+                CATCH_EINTR(n = waitpid(pid, &status, WUNTRACED));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1293: FILE: arch/um/kernel/skas/process.c:61:
+        } while((n >= 0) && WIFSTOPPED(status) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: arch/um/kernel/skas/process.c:61:
+        } while((n >= 0) && WIFSTOPPED(status) &&$

ERROR:SPACING: space required before the open parenthesis '('
#1293: FILE: arch/um/kernel/skas/process.c:61:
+        } while((n >= 0) && WIFSTOPPED(status) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: arch/um/kernel/skas/process.c:62:
+                (WSTOPSIG(status) == SIGVTALRM));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: arch/um/kernel/skas/process.c:62:
+                (WSTOPSIG(status) == SIGVTALRM));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1296: FILE: arch/um/kernel/skas/process.c:64:
+        if((n < 0) || !WIFSTOPPED(status) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: arch/um/kernel/skas/process.c:64:
+        if((n < 0) || !WIFSTOPPED(status) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n < 0'
#1296: FILE: arch/um/kernel/skas/process.c:64:
+        if((n < 0) || !WIFSTOPPED(status) ||
+           (WSTOPSIG(status) != SIGUSR1 && WSTOPSIG(status != SIGTRAP))){

ERROR:SPACING: space required before the open parenthesis '('
#1296: FILE: arch/um/kernel/skas/process.c:64:
+        if((n < 0) || !WIFSTOPPED(status) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#1297: FILE: arch/um/kernel/skas/process.c:65:
+           (WSTOPSIG(status) != SIGUSR1 && WSTOPSIG(status != SIGTRAP))){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: arch/um/kernel/skas/process.c:65:
+           (WSTOPSIG(status) != SIGUSR1 && WSTOPSIG(status != SIGTRAP))){$

ERROR:SPACING: space required before the open brace '{'
#1297: FILE: arch/um/kernel/skas/process.c:65:
+           (WSTOPSIG(status) != SIGUSR1 && WSTOPSIG(status != SIGTRAP))){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1298: FILE: arch/um/kernel/skas/process.c:66:
+                panic("%s : failed to wait for SIGUSR1/SIGTRAP, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: arch/um/kernel/skas/process.c:66:
+                panic("%s : failed to wait for SIGUSR1/SIGTRAP, "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1299: FILE: arch/um/kernel/skas/process.c:67:
+                      "pid = %d, n = %d, errno = %d, status = 0x%x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: arch/um/kernel/skas/process.c:67:
+                      "pid = %d, n = %d, errno = %d, status = 0x%x\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#1299: FILE: arch/um/kernel/skas/process.c:67:
+                panic("%s : failed to wait for SIGUSR1/SIGTRAP, "
+                      "pid = %d, n = %d, errno = %d, status = 0x%x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1300: FILE: arch/um/kernel/skas/process.c:68:
+                      fname, pid, n, errno, status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: arch/um/kernel/skas/process.c:68:
+                      fname, pid, n, errno, status);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1301: FILE: arch/um/kernel/skas/process.c:69:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: arch/um/kernel/skas/process.c:69:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1307: FILE: arch/um/kernel/skas/process.c:74:
+        int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1307: FILE: arch/um/kernel/skas/process.c:74:
+        int err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1319: FILE: arch/um/kernel/skas/process.c:76:
+        if(ptrace_faultinfo){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: arch/um/kernel/skas/process.c:76:
+        if(ptrace_faultinfo){$

ERROR:SPACING: space required before the open brace '{'
#1319: FILE: arch/um/kernel/skas/process.c:76:
+        if(ptrace_faultinfo){

ERROR:SPACING: space required before the open parenthesis '('
#1319: FILE: arch/um/kernel/skas/process.c:76:
+        if(ptrace_faultinfo){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1320: FILE: arch/um/kernel/skas/process.c:77:
+                err = ptrace(PTRACE_FAULTINFO, pid, 0, fi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: arch/um/kernel/skas/process.c:77:
+                err = ptrace(PTRACE_FAULTINFO, pid, 0, fi);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: arch/um/kernel/skas/process.c:78:
+                if(err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: arch/um/kernel/skas/process.c:78:
+                if(err)$

ERROR:SPACING: space required before the open parenthesis '('
#1321: FILE: arch/um/kernel/skas/process.c:78:
+                if(err)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: arch/um/kernel/skas/process.c:79:
+                        panic("get_skas_faultinfo - PTRACE_FAULTINFO failed, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: arch/um/kernel/skas/process.c:79:
+                        panic("get_skas_faultinfo - PTRACE_FAULTINFO failed, "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: arch/um/kernel/skas/process.c:80:
+                              "errno = %d\n", errno);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: arch/um/kernel/skas/process.c:80:
+                              "errno = %d\n", errno);$

WARNING:SPLIT_STRING: quoted string split across lines
#1323: FILE: arch/um/kernel/skas/process.c:80:
+                        panic("get_skas_faultinfo - PTRACE_FAULTINFO failed, "
+                              "errno = %d\n", errno);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: arch/um/kernel/skas/process.c:82:
+                /* Special handling for i386, which has different structs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1326: FILE: arch/um/kernel/skas/process.c:83:
+                if (sizeof(struct ptrace_faultinfo) < sizeof(struct faultinfo))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: arch/um/kernel/skas/process.c:83:
+                if (sizeof(struct ptrace_faultinfo) < sizeof(struct faultinfo))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: arch/um/kernel/skas/process.c:84:
+                        memset((char *)fi + sizeof(struct ptrace_faultinfo), 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: arch/um/kernel/skas/process.c:84:
+                        memset((char *)fi + sizeof(struct ptrace_faultinfo), 0,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1328: FILE: arch/um/kernel/skas/process.c:85:
+                               sizeof(struct faultinfo) - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: arch/um/kernel/skas/process.c:85:
+                               sizeof(struct faultinfo) - $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: arch/um/kernel/skas/process.c:85:
+                               sizeof(struct faultinfo) - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: arch/um/kernel/skas/process.c:86:
+                               sizeof(struct ptrace_faultinfo));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1329: FILE: arch/um/kernel/skas/process.c:86:
+                               sizeof(struct ptrace_faultinfo));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1330: FILE: arch/um/kernel/skas/process.c:87:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1330: FILE: arch/um/kernel/skas/process.c:87:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1331: FILE: arch/um/kernel/skas/process.c:88:
+        else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: arch/um/kernel/skas/process.c:88:
+        else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1331: FILE: arch/um/kernel/skas/process.c:88:
+        }
+        else {

CHECK:BRACES: Unbalanced braces around else statement
#1331: FILE: arch/um/kernel/skas/process.c:88:
+        else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1332: FILE: arch/um/kernel/skas/process.c:89:
+                wait_stub_done(pid, SIGSEGV, "get_skas_faultinfo");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: arch/um/kernel/skas/process.c:89:
+                wait_stub_done(pid, SIGSEGV, "get_skas_faultinfo");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1333: FILE: arch/um/kernel/skas/process.c:90:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1333: FILE: arch/um/kernel/skas/process.c:90:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: arch/um/kernel/skas/process.c:91:
+                /* faultinfo is prepared by the stub-segv-handler at start of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: arch/um/kernel/skas/process.c:91:
+                /* faultinfo is prepared by the stub-segv-handler at start of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1335: FILE: arch/um/kernel/skas/process.c:92:
+                 * the stub stack page. We just have to copy it.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1336: FILE: arch/um/kernel/skas/process.c:93:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1337: FILE: arch/um/kernel/skas/process.c:94:
+                memcpy(fi, (void *)current_stub_stack(), sizeof(*fi));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: arch/um/kernel/skas/process.c:94:
+                memcpy(fi, (void *)current_stub_stack(), sizeof(*fi));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1338: FILE: arch/um/kernel/skas/process.c:95:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: arch/um/kernel/skas/process.c:95:
+        }$

ERROR:SPACING: space required before the open brace '{'
#1360: FILE: arch/um/kernel/skas/process.c:145:
+	if(!proc_mm){

ERROR:SPACING: space required before the open parenthesis '('
#1360: FILE: arch/um/kernel/skas/process.c:145:
+	if(!proc_mm){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1368: FILE: arch/um/kernel/skas/process.c:153:
+^I^Iaddr = mmap64((void *) UML_CONFIG_STUB_CODE, page_size(), $

CHECK:SPACING: No space is necessary after a cast
#1368: FILE: arch/um/kernel/skas/process.c:153:
+		addr = mmap64((void *) UML_CONFIG_STUB_CODE, page_size(), 

ERROR:SPACING: space required before the open brace '{'
#1370: FILE: arch/um/kernel/skas/process.c:155:
+		if(addr == MAP_FAILED){

ERROR:SPACING: space required before the open parenthesis '('
#1370: FILE: arch/um/kernel/skas/process.c:155:
+		if(addr == MAP_FAILED){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1371: FILE: arch/um/kernel/skas/process.c:156:
+^I^I^Iprintk("mapping mmap stub failed, errno = %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1371: FILE: arch/um/kernel/skas/process.c:156:
+			printk("mapping mmap stub failed, errno = %d\n", 

ERROR:SPACING: space required before the open brace '{'
#1376: FILE: arch/um/kernel/skas/process.c:161:
+		if(stack != NULL){

ERROR:SPACING: space required before the open parenthesis '('
#1376: FILE: arch/um/kernel/skas/process.c:161:
+		if(stack != NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "stack"
#1376: FILE: arch/um/kernel/skas/process.c:161:
+		if(stack != NULL){

CHECK:SPACING: No space is necessary after a cast
#1378: FILE: arch/um/kernel/skas/process.c:163:
+			addr = mmap((void *) UML_CONFIG_STUB_DATA, page_size(),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1379: FILE: arch/um/kernel/skas/process.c:164:
+^I^I^I^I    PROT_READ | PROT_WRITE, $

ERROR:SPACING: space required before the open brace '{'
#1381: FILE: arch/um/kernel/skas/process.c:166:
+			if(addr == MAP_FAILED){

ERROR:SPACING: space required before the open parenthesis '('
#1381: FILE: arch/um/kernel/skas/process.c:166:
+			if(addr == MAP_FAILED){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1382: FILE: arch/um/kernel/skas/process.c:167:
+				printk("mapping segfault stack failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1383: FILE: arch/um/kernel/skas/process.c:168:
+				printk("mapping segfault stack failed, "
+				       "errno = %d\n", errno);

ERROR:SPACING: space required before the open brace '{'
#1388: FILE: arch/um/kernel/skas/process.c:173:
+	if(!ptrace_faultinfo && (stack != NULL)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'stack != NULL'
#1388: FILE: arch/um/kernel/skas/process.c:173:
+	if(!ptrace_faultinfo && (stack != NULL)){

ERROR:SPACING: space required before the open parenthesis '('
#1388: FILE: arch/um/kernel/skas/process.c:173:
+	if(!ptrace_faultinfo && (stack != NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "stack"
#1388: FILE: arch/um/kernel/skas/process.c:173:
+	if(!ptrace_faultinfo && (stack != NULL)){

CHECK:SPACING: No space is necessary after a cast
#1390: FILE: arch/um/kernel/skas/process.c:175:
+				  (unsigned long) stub_segv_handler -

CHECK:SPACING: No space is necessary after a cast
#1391: FILE: arch/um/kernel/skas/process.c:176:
+				  (unsigned long) &__syscall_stub_start;

CHECK:SPACING: No space is necessary after a cast
#1393: FILE: arch/um/kernel/skas/process.c:178:
+		set_sigstack((void *) UML_CONFIG_STUB_DATA, page_size());

CHECK:SPACING: No space is necessary after a cast
#1394: FILE: arch/um/kernel/skas/process.c:179:
+		set_handler(SIGSEGV, (void *) v, SA_ONSTACK,

ERROR:SPACING: space required before the open parenthesis '('
#1423: FILE: arch/um/kernel/skas/process.c:206:
+	if(proc_mm) flags |= CLONE_VM;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1423: FILE: arch/um/kernel/skas/process.c:206:
+	if(proc_mm) flags |= CLONE_VM;

CHECK:SPACING: No space is necessary after a cast
#1424: FILE: arch/um/kernel/skas/process.c:207:
+	pid = clone(userspace_tramp, (void *) sp, flags, (void *) stub_stack);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1433: FILE: arch/um/kernel/skas/process.c:229:
+	return(pid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: arch/um/kernel/skas/process.c:263:
+                                if(PTRACE_FULL_FAULTINFO || !ptrace_faultinfo)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: arch/um/kernel/skas/process.c:263:
+                                if(PTRACE_FULL_FAULTINFO || !ptrace_faultinfo)$

ERROR:SPACING: space required before the open parenthesis '('
#1442: FILE: arch/um/kernel/skas/process.c:263:
+                                if(PTRACE_FULL_FAULTINFO || !ptrace_faultinfo)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: arch/um/kernel/skas/process.c:264:
+                                        user_signal(SIGSEGV, regs, pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: arch/um/kernel/skas/process.c:264:
+                                        user_signal(SIGSEGV, regs, pid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: arch/um/kernel/skas/process.c:265:
+                                else handle_segv(pid, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: arch/um/kernel/skas/process.c:265:
+                                else handle_segv(pid, regs);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1444: FILE: arch/um/kernel/skas/process.c:265:
+                                else handle_segv(pid, regs);

ERROR:SPACING: space required before the open brace '{'
#1476: FILE: arch/um/kernel/skas/process.c:431:
+	if(proc_mm){

ERROR:SPACING: space required before the open parenthesis '('
#1476: FILE: arch/um/kernel/skas/process.c:431:
+	if(proc_mm){

CHECK:BRACES: braces {} should be used on all arms of this statement
#1476: FILE: arch/um/kernel/skas/process.c:431:
+	if(proc_mm){
[...]
+	else userspace_pid[0] = mm_idp->u.pid;
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: arch/um/kernel/skas/process.c:432:
+^I^Ierr = ptrace(PTRACE_SWITCH_MM, userspace_pid[0], 0, $

ERROR:SPACING: space required before the open parenthesis '('
#1479: FILE: arch/um/kernel/skas/process.c:434:
+		if(err)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'switch_mm_skas', this function's name, in a string
#1480: FILE: arch/um/kernel/skas/process.c:435:
+			panic("switch_mm_skas - PTRACE_SWITCH_MM failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#1481: FILE: arch/um/kernel/skas/process.c:436:
+			panic("switch_mm_skas - PTRACE_SWITCH_MM failed, "
+			      "errno = %d\n", errno);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1483: FILE: arch/um/kernel/skas/process.c:438:
+	else userspace_pid[0] = mm_idp->u.pid;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1483: FILE: arch/um/kernel/skas/process.c:438:
+	}
+	else userspace_pid[0] = mm_idp->u.pid;

ERROR:SPACING: space required before the open parenthesis '('
#1500: FILE: arch/um/kernel/skas/process_kern.c:182:
+	if(proc_mm)

ERROR:SPACING: space required before the open parenthesis '('
#1512: FILE: arch/um/kernel/skas/process_kern.c:208:
+	if(proc_mm)

CHECK:BRACES: Unbalanced braces around else statement
#1515: FILE: arch/um/kernel/skas/process_kern.c:211:
+	else {

ERROR:SPACING: space required before the open brace '{'
#1520: FILE: arch/um/kernel/skas/process_kern.c:216:
+		for_each_process(p){

ERROR:SPACING: space required before the open parenthesis '('
#1521: FILE: arch/um/kernel/skas/process_kern.c:217:
+			if(p->mm == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p->mm"
#1521: FILE: arch/um/kernel/skas/process_kern.c:217:
+			if(p->mm == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#1532: FILE: arch/um/kernel/skas/process_kern.c:228:
+	if(current->mm == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current->mm"
#1532: FILE: arch/um/kernel/skas/process_kern.c:228:
+	if(current->mm == NULL)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1535: FILE: arch/um/kernel/skas/process_kern.c:231:
+	return(current->mm->context.skas.id.stack);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1563: FILE: arch/um/kernel/skas/tlb.c:30:
+                        map(&mmu->skas.id, op->u.mmap.addr, op->u.mmap.len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: arch/um/kernel/skas/tlb.c:30:
+                        map(&mmu->skas.id, op->u.mmap.addr, op->u.mmap.len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1569: FILE: arch/um/kernel/skas/tlb.c:35:
+                        unmap(&mmu->skas.id, (void *) op->u.munmap.addr,$

CHECK:SPACING: No space is necessary after a cast
#1569: FILE: arch/um/kernel/skas/tlb.c:35:
+                        unmap(&mmu->skas.id, (void *) op->u.munmap.addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: arch/um/kernel/skas/tlb.c:35:
+                        unmap(&mmu->skas.id, (void *) op->u.munmap.addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1576: FILE: arch/um/kernel/skas/tlb.c:39:
+                        protect(&mmu->skas.id, op->u.mprotect.addr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: arch/um/kernel/skas/tlb.c:39:
+                        protect(&mmu->skas.id, op->u.mprotect.addr,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1577: FILE: arch/um/kernel/skas/tlb.c:40:
+                                op->u.mprotect.len, op->u.mprotect.r, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1577: FILE: arch/um/kernel/skas/tlb.c:40:
+                                op->u.mprotect.len, op->u.mprotect.r, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: arch/um/kernel/skas/tlb.c:40:
+                                op->u.mprotect.len, op->u.mprotect.r, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1578: FILE: arch/um/kernel/skas/tlb.c:41:
+                                op->u.mprotect.w, op->u.mprotect.x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1578: FILE: arch/um/kernel/skas/tlb.c:41:
+                                op->u.mprotect.w, op->u.mprotect.x);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1592: FILE: arch/um/kernel/skas/tlb.c:55:
+        if(!proc_mm && (end_addr > CONFIG_STUB_START))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: arch/um/kernel/skas/tlb.c:55:
+        if(!proc_mm && (end_addr > CONFIG_STUB_START))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end_addr > CONFIG_STUB_START'
#1592: FILE: arch/um/kernel/skas/tlb.c:55:
+        if(!proc_mm && (end_addr > CONFIG_STUB_START))

ERROR:SPACING: space required before the open parenthesis '('
#1592: FILE: arch/um/kernel/skas/tlb.c:55:
+        if(!proc_mm && (end_addr > CONFIG_STUB_START))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1593: FILE: arch/um/kernel/skas/tlb.c:56:
+                end_addr = CONFIG_STUB_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: arch/um/kernel/skas/tlb.c:56:
+                end_addr = CONFIG_STUB_START;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1596: FILE: arch/um/kernel/skas/tlb.c:58:
+        fix_range_common(mm, start_addr, end_addr, force, do_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: arch/um/kernel/skas/tlb.c:58:
+        fix_range_common(mm, start_addr, end_addr, force, do_ops);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1614: FILE: arch/um/kernel/skas/tlb.c:85:
+        fix_range(mm, 0, end, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1614: FILE: arch/um/kernel/skas/tlb.c:85:
+        fix_range(mm, 0, end, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1621: FILE: arch/um/kernel/skas/tlb.c:91:
+        fix_range(current->mm, 0, end, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1621: FILE: arch/um/kernel/skas/tlb.c:91:
+        fix_range(current->mm, 0, end, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1633: FILE: arch/um/kernel/tlb.c:21:
+                      unsigned long end_addr, int force,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1633: FILE: arch/um/kernel/tlb.c:21:
+                      unsigned long end_addr, int force,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1634: FILE: arch/um/kernel/tlb.c:22:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1634: FILE: arch/um/kernel/tlb.c:22:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: arch/um/kernel/tlb.c:22:
+                      void (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: arch/um/kernel/tlb.c:23:
+                                     int))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: arch/um/kernel/tlb.c:23:
+                                     int))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1641: FILE: arch/um/kernel/tlb.c:29:
+        union mm_context *mmu = &mm->context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: arch/um/kernel/tlb.c:29:
+        union mm_context *mmu = &mm->context;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: arch/um/kernel/tlb.c:45:
+                                                      op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: arch/um/kernel/tlb.c:45:
+                                                      op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1659: FILE: arch/um/kernel/tlb.c:60:
+                                                      op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1659: FILE: arch/um/kernel/tlb.c:60:
+                                                      op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: arch/um/kernel/tlb.c:75:
+                                                      op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: arch/um/kernel/tlb.c:75:
+                                                      op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: arch/um/kernel/tlb.c:98:
+                                                    op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: arch/um/kernel/tlb.c:98:
+                                                    op_index, last_op, mmu,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1681: FILE: arch/um/kernel/tlb.c:101:
+                                                   op_index, last_op, mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1681: FILE: arch/um/kernel/tlb.c:101:
+                                                   op_index, last_op, mmu, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1681: FILE: arch/um/kernel/tlb.c:101:
+                                                   op_index, last_op, mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1687: FILE: arch/um/kernel/tlb.c:106:
+                                                op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1687: FILE: arch/um/kernel/tlb.c:106:
+                                                op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1694: FILE: arch/um/kernel/tlb.c:112:
+        (*do_ops)(mmu, ops, op_index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1694: FILE: arch/um/kernel/tlb.c:112:
+        (*do_ops)(mmu, ops, op_index);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1757: FILE: arch/um/kernel/tlb.c:230:
+             int r, int w, int x, struct host_vm_op *ops, int index, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1757: FILE: arch/um/kernel/tlb.c:230:
+             int r, int w, int x, struct host_vm_op *ops, int index, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1757: FILE: arch/um/kernel/tlb.c:230:
+             int r, int w, int x, struct host_vm_op *ops, int index, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1758: FILE: arch/um/kernel/tlb.c:231:
+             int last_filled, union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1758: FILE: arch/um/kernel/tlb.c:231:
+             int last_filled, union mm_context *mmu, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1758: FILE: arch/um/kernel/tlb.c:231:
+             int last_filled, union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1759: FILE: arch/um/kernel/tlb.c:232:
+             void (*do_ops)(union mm_context *, struct host_vm_op *, int))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1759: FILE: arch/um/kernel/tlb.c:232:
+             void (*do_ops)(union mm_context *, struct host_vm_op *, int))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1798: FILE: arch/um/kernel/tlb.c:297:
+                 struct host_vm_op *ops, int index, int last_filled,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: arch/um/kernel/tlb.c:297:
+                 struct host_vm_op *ops, int index, int last_filled,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1799: FILE: arch/um/kernel/tlb.c:298:
+                 union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1799: FILE: arch/um/kernel/tlb.c:298:
+                 union mm_context *mmu, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1799: FILE: arch/um/kernel/tlb.c:298:
+                 union mm_context *mmu, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1800: FILE: arch/um/kernel/tlb.c:299:
+                 void (*do_ops)(union mm_context *, struct host_vm_op *, int))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1800: FILE: arch/um/kernel/tlb.c:299:
+                 void (*do_ops)(union mm_context *, struct host_vm_op *, int))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1820: FILE: arch/um/kernel/tlb.c:331:
+        address &= PAGE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1820: FILE: arch/um/kernel/tlb.c:331:
+        address &= PAGE_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1821: FILE: arch/um/kernel/tlb.c:332:
+        flush_tlb_range(vma, address, address + PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1821: FILE: arch/um/kernel/tlb.c:332:
+        flush_tlb_range(vma, address, address + PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1826: FILE: arch/um/kernel/tlb.c:337:
+        flush_tlb_mm(current->mm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1826: FILE: arch/um/kernel/tlb.c:337:
+        flush_tlb_mm(current->mm);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1828: FILE: arch/um/kernel/tlb.c:339:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1828: FILE: arch/um/kernel/tlb.c:339:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1831: FILE: arch/um/kernel/tlb.c:342:
+        CHOOSE_MODE_PROC(flush_tlb_kernel_range_tt, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1831: FILE: arch/um/kernel/tlb.c:342:
+        CHOOSE_MODE_PROC(flush_tlb_kernel_range_tt, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: arch/um/kernel/tlb.c:342:
+        CHOOSE_MODE_PROC(flush_tlb_kernel_range_tt, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1832: FILE: arch/um/kernel/tlb.c:343:
+                         flush_tlb_kernel_range_common, start, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: arch/um/kernel/tlb.c:343:
+                         flush_tlb_kernel_range_common, start, end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1837: FILE: arch/um/kernel/tlb.c:348:
+        CHOOSE_MODE(flush_tlb_kernel_vm_tt(), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1837: FILE: arch/um/kernel/tlb.c:348:
+        CHOOSE_MODE(flush_tlb_kernel_vm_tt(), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1837: FILE: arch/um/kernel/tlb.c:348:
+        CHOOSE_MODE(flush_tlb_kernel_vm_tt(), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1838: FILE: arch/um/kernel/tlb.c:349:
+                    flush_tlb_kernel_range_common(start_vm, end_vm));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1838: FILE: arch/um/kernel/tlb.c:349:
+                    flush_tlb_kernel_range_common(start_vm, end_vm));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1843: FILE: arch/um/kernel/tlb.c:354:
+        CHOOSE_MODE_PROC(__flush_tlb_one_tt, __flush_tlb_one_skas, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1843: FILE: arch/um/kernel/tlb.c:354:
+        CHOOSE_MODE_PROC(__flush_tlb_one_tt, __flush_tlb_one_skas, addr);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1846: FILE: arch/um/kernel/tlb.c:357:
+void flush_tlb_range(struct vm_area_struct *vma, unsigned long start, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1849: FILE: arch/um/kernel/tlb.c:360:
+        CHOOSE_MODE_PROC(flush_tlb_range_tt, flush_tlb_range_skas, vma, start, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1849: FILE: arch/um/kernel/tlb.c:360:
+        CHOOSE_MODE_PROC(flush_tlb_range_tt, flush_tlb_range_skas, vma, start, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1849: FILE: arch/um/kernel/tlb.c:360:
+        CHOOSE_MODE_PROC(flush_tlb_range_tt, flush_tlb_range_skas, vma, start, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1850: FILE: arch/um/kernel/tlb.c:361:
+                         end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1850: FILE: arch/um/kernel/tlb.c:361:
+                         end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1855: FILE: arch/um/kernel/tlb.c:366:
+        CHOOSE_MODE_PROC(flush_tlb_mm_tt, flush_tlb_mm_skas, mm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1855: FILE: arch/um/kernel/tlb.c:366:
+        CHOOSE_MODE_PROC(flush_tlb_mm_tt, flush_tlb_mm_skas, mm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1860: FILE: arch/um/kernel/tlb.c:371:
+        CHOOSE_MODE(force_flush_all_tt(), force_flush_all_skas());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1860: FILE: arch/um/kernel/tlb.c:371:
+        CHOOSE_MODE(force_flush_all_tt(), force_flush_all_skas());$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1881: FILE: arch/um/kernel/tt/tlb.c:58:
+        fix_range_common(mm, start_addr, end_addr, force, do_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1881: FILE: arch/um/kernel/tt/tlb.c:58:
+        fix_range_common(mm, start_addr, end_addr, force, do_ops);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1991: FILE: arch/um/sys-i386/stub.S:1:
+#include "uml-config.h"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1992: FILE: arch/um/sys-i386/stub.S:2:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2004: FILE: arch/um/sys-i386/stub_segv.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2004: FILE: arch/um/sys-i386/stub_segv.c:1:
+/* 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2016: FILE: arch/um/sys-i386/stub_segv.c:13:
+void __attribute__ ((__section__ (".__syscall_stub")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".__syscall_stub") over __attribute__((__section__(".__syscall_stub")))
#2016: FILE: arch/um/sys-i386/stub_segv.c:13:
+void __attribute__ ((__section__ (".__syscall_stub")))

CHECK:SPACING: No space is necessary after a cast
#2019: FILE: arch/um/sys-i386/stub_segv.c:16:
+	struct sigcontext *sc = (struct sigcontext *) (&sig + 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2021: FILE: arch/um/sys-i386/stub_segv.c:18:
+^IGET_FAULTINFO_FROM_SC(*((struct faultinfo *) UML_CONFIG_STUB_DATA), $

CHECK:SPACING: No space is necessary after a cast
#2021: FILE: arch/um/sys-i386/stub_segv.c:18:
+	GET_FAULTINFO_FROM_SC(*((struct faultinfo *) UML_CONFIG_STUB_DATA), 

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2024: FILE: arch/um/sys-i386/stub_segv.c:21:
+	__asm__("movl %0, %%eax ; int $0x80": : "g" (__NR_getpid));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2026: FILE: arch/um/sys-i386/stub_segv.c:23:
+		"int $0x80": : "g" (__NR_kill), "g" (SIGUSR1));
 		           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2069: FILE: arch/um/sys-x86_64/stub.S:1:
+#include "uml-config.h"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2089: FILE: arch/um/sys-x86_64/stub_segv.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2089: FILE: arch/um/sys-x86_64/stub_segv.c:1:
+/* 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2101: FILE: arch/um/sys-x86_64/stub_segv.c:13:
+void __attribute__ ((__section__ (".__syscall_stub")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".__syscall_stub") over __attribute__((__section__(".__syscall_stub")))
#2101: FILE: arch/um/sys-x86_64/stub_segv.c:13:
+void __attribute__ ((__section__ (".__syscall_stub")))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2107: FILE: arch/um/sys-x86_64/stub_segv.c:19:
+        GET_FAULTINFO_FROM_SC(*((struct faultinfo *) UML_CONFIG_STUB_DATA),$

CHECK:SPACING: No space is necessary after a cast
#2107: FILE: arch/um/sys-x86_64/stub_segv.c:19:
+        GET_FAULTINFO_FROM_SC(*((struct faultinfo *) UML_CONFIG_STUB_DATA),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2107: FILE: arch/um/sys-x86_64/stub_segv.c:19:
+        GET_FAULTINFO_FROM_SC(*((struct faultinfo *) UML_CONFIG_STUB_DATA),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2108: FILE: arch/um/sys-x86_64/stub_segv.c:20:
+                              &uc->uc_mcontext);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2108: FILE: arch/um/sys-x86_64/stub_segv.c:20:
+                              &uc->uc_mcontext);$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2110: FILE: arch/um/sys-x86_64/stub_segv.c:22:
+	__asm__("movq %0, %%rax ; syscall": : "g" (__NR_getpid));
 	                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2112: FILE: arch/um/sys-x86_64/stub_segv.c:24:
+		"syscall": : "g" (__NR_kill), "g" (SIGUSR1));
 		         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2117: FILE: arch/um/sys-x86_64/stub_segv.c:29:
+^I__asm__("popq %%rax ; popq %%rax ; movq %0, %%rax ; syscall" : : "g" $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 358 errors, 254 warnings, 50 checks, 1730 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
