WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#24: 
Delete alot of remaining code in kernel/time/clocksource.c that
       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#40: 
Signed-Off-By: Daniel Walker <dwalker@mvista.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#57: FILE: include/linux/clocksource.h:208:
+extern int clocksource_sysfs_register(struct sysdev_attribute*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: include/linux/clocksource.h:208:
+extern int clocksource_sysfs_register(struct sysdev_attribute*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysdev_attribute*' should also have an identifier name
#57: FILE: include/linux/clocksource.h:208:
+extern int clocksource_sysfs_register(struct sysdev_attribute*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#58: FILE: include/linux/clocksource.h:209:
+extern void clocksource_sysfs_unregister(struct sysdev_attribute*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: include/linux/clocksource.h:209:
+extern void clocksource_sysfs_unregister(struct sysdev_attribute*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sysdev_attribute*' should also have an identifier name
#58: FILE: include/linux/clocksource.h:209:
+extern void clocksource_sysfs_unregister(struct sysdev_attribute*);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: kernel/time/clocksource.c:37:
+ * ^Iprotects manipulations to the clocksource_list$

WARNING:TYPO_SPELLING: 'overide' may be misspelled - perhaps 'override'?
#304: FILE: kernel/time/clocksource.c:224:
+ * set a specific overide when written to.
                   ^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: kernel/time/clocksource.c:226:
+int clocksource_sysfs_register(struct sysdev_attribute * attr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#403: FILE: kernel/timer.c:711:
+static int change_clocksource(char * override)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#430: FILE: kernel/timer.c:723:
+	printk(KERN_INFO "Time: %s clocksource has been installed.\n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#447: FILE: kernel/timer.c:740:
+	return sprintf(buf, "%s \n", clock->name);

WARNING:TYPO_SPELLING: 'selction' may be misspelled - perhaps 'selection'?
#457: FILE: kernel/timer.c:750:
+ * clocksource selction. Locking handled inside sysfs
                ^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#476: FILE: kernel/timer.c:769:
+	if (buf[count-1] == '\n')
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#509: FILE: kernel/timer.c:801:
+static int __init boot_override_clocksource(char* str)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#516: FILE: kernel/timer.c:808:
+			strlcpy(clock_override_name, str,

CHECK:BRACES: Unbalanced braces around else statement
#518: FILE: kernel/timer.c:810:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#519: FILE: kernel/timer.c:811:
+			printk("Time: requested clock \"%s\" doesn't exist\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#524: FILE: kernel/timer.c:816:
+
+	}

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#528: FILE: kernel/timer.c:820:
+__setup("timeofday_clocksource=", boot_override_clocksource);

ERROR:SPACING: space required before the open parenthesis '('
#532: FILE: kernel/timer.c:823:
+#define change_clocksource(x)	do { } while(0)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#569: FILE: kernel/timer.c:1065:
+	if (unlikely(atomic_read(&clock_check))) {
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 11 warnings, 7 checks, 514 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
