WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#115: 
#ifdef CONFIG_KEXEC

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#128: 
#endif /* CONFIG_KEXEC */

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#140: 
#ifdef CONFIG_KEXEC

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#145: 
#endif /* CONFIG_KEXEC */

WARNING:TYPO_SPELLING: 'indepedent' may be misspelled - perhaps 'independent'?
#182: FILE: arch/ppc/Kconfig:207:
+	  but it is indepedent of the system firmware.   And like a reboot
 	            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'similiarity' may be misspelled - perhaps 'similarity'?
#185: FILE: arch/ppc/Kconfig:210:
+	  The name comes from the similiarity to the exec system call.
 	                          ^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: arch/ppc/kernel/machine_kexec.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#228: FILE: arch/ppc/kernel/machine_kexec.c:15:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#230: FILE: arch/ppc/kernel/machine_kexec.c:17:
+#include <asm/mmu_context.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#231: FILE: arch/ppc/kernel/machine_kexec.c:18:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#233: FILE: arch/ppc/kernel/machine_kexec.c:20:
+#include <asm/cacheflush.h>

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#236: FILE: arch/ppc/kernel/machine_kexec.c:23:
+typedef NORET_TYPE void (*relocate_new_kernel_t)(

WARNING:NEW_TYPEDEFS: do not add new typedefs
#236: FILE: arch/ppc/kernel/machine_kexec.c:23:
+typedef NORET_TYPE void (*relocate_new_kernel_t)(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#245: FILE: arch/ppc/kernel/machine_kexec.c:32:
+	if (ppc_md.machine_shutdown) {
+		ppc_md.machine_shutdown();
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#252: FILE: arch/ppc/kernel/machine_kexec.c:39:
+	if (ppc_md.machine_crash_shutdown) {
+		ppc_md.machine_crash_shutdown();
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#264: FILE: arch/ppc/kernel/machine_kexec.c:51:
+	if (ppc_md.machine_kexec_prepare) {
+		return ppc_md.machine_kexec_prepare(image);
+	}

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#271: FILE: arch/ppc/kernel/machine_kexec.c:58:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#276: FILE: arch/ppc/kernel/machine_kexec.c:63:
+	if (ppc_md.machine_kexec_cleanup) {
+		ppc_md.machine_kexec_cleanup(image);
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#298: FILE: arch/ppc/kernel/machine_kexec.c:85:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: arch/ppc/kernel/machine_kexec.c:111:
+	memcpy((void *)reboot_code_buffer,
+		relocate_new_kernel, relocate_new_kernel_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: arch/ppc/kernel/machine_kexec.c:114:
+	flush_icache_range(reboot_code_buffer,
+		reboot_code_buffer + KEXEC_CONTROL_CODE_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#328: FILE: arch/ppc/kernel/machine_kexec.c:115:
+	printk(KERN_INFO "Bye!\n");

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/ppc/kernel/machine_kexec.c:118:
+	rnk = (relocate_new_kernel_t) reboot_code_buffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#351: FILE: arch/ppc/kernel/relocate_kernel.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: arch/ppc/kernel/relocate_kernel.S:54:
+^Imr^Ir0, r3 $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: arch/ppc/kernel/relocate_kernel.S:60:
+1:^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#478: FILE: include/asm-ppc/kexec.h:1:
+#ifndef _PPC_KEXEC_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#509: FILE: include/asm-ppc/kexec.h:32:
+extern void machine_kexec_simple(struct kimage *image);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 16 warnings, 10 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
