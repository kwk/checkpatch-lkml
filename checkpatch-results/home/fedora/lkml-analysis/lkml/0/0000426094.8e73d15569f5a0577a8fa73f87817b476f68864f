WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: fs/nfs/direct.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#88: FILE: fs/nfs/direct.c:2:
+ * linux/fs/nfs/direct.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: fs/nfs/direct.c:10:
+ * (multiple copies of the same instance running on separate hosts) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: fs/nfs/direct.c:12:
+ * system cache protocols.  Applications that process datasets $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: fs/nfs/direct.c:13:
+ * considerably larger than the client's memory do not always benefit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/nfs/direct.c:14:
+ * from a local cache.  A streaming video server, for instance, has no $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#133: FILE: fs/nfs/direct.c:47:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#138: FILE: fs/nfs/direct.c:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: fs/nfs/direct.c:62:
+nfs_get_user_pages(unsigned long addr, size_t size,
+		struct page ***pages, int rw)

CHECK:SPACING: No space is necessary after a cast
#151: FILE: fs/nfs/direct.c:65:
+	unsigned page_count = (unsigned) size >> PAGE_SHIFT;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: fs/nfs/direct.c:65:
+	unsigned page_count = (unsigned) size >> PAGE_SHIFT;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: fs/nfs/direct.c:65:
+	unsigned page_count = (unsigned) size >> PAGE_SHIFT;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#152: FILE: fs/nfs/direct.c:66:
+	unsigned array_size = (page_count * sizeof(struct page *)) + 2U;

CHECK:SPACING: No space is necessary after a cast
#154: FILE: fs/nfs/direct.c:68:
+	*pages = (struct page **) kmalloc(array_size, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#154: FILE: fs/nfs/direct.c:68:
+	*pages = (struct page **) kmalloc(array_size, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#162: FILE: fs/nfs/direct.c:76:
+			printk(KERN_ERR "%s: get_user_pages result %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: fs/nfs/direct.c:77:
+			printk(KERN_ERR "%s: get_user_pages result %d\n",
+					__FUNCTION__, result);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#163: FILE: fs/nfs/direct.c:77:
+					__FUNCTION__, result);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#173: FILE: fs/nfs/direct.c:87:
+nfs_free_user_pages(struct page **pages, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#175: FILE: fs/nfs/direct.c:89:
+	unsigned page = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: fs/nfs/direct.c:108:
+nfs_iov2pagelist(int rw, const struct inode *inode,
+		const struct rpc_cred *cred,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: fs/nfs/direct.c:112:
+	unsigned seg;

CHECK:SPACING: No space is necessary after a cast
#205: FILE: fs/nfs/direct.c:119:
+					(unsigned long) iov[seg].iov_base;

CHECK:SPACING: No space is necessary after a cast
#222: FILE: fs/nfs/direct.c:136:
+			new = nfs_create_request((struct rpc_cred *) cred,

CHECK:SPACING: No space is necessary after a cast
#223: FILE: fs/nfs/direct.c:137:
+						 (struct inode *) inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: fs/nfs/direct.c:185:
+do_nfs_direct_IO(int rw, const struct inode *inode,
+		const struct rpc_cred *cred, const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: fs/nfs/direct.c:192:
+	result = nfs_iov2pagelist(rw, inode, cred, iov, offset, nr_segs,
+								&requests);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: fs/nfs/direct.c:211:
+			result = nfs_flush_list(&requests,
+					NFS_SERVER(inode)->wpages, FLUSH_WAIT);

CHECK:SPACING: No space is necessary after a cast
#300: FILE: fs/nfs/direct.c:214:
+		invalidate_inode_pages((struct inode *) inode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: fs/nfs/direct.c:239:
+nfs_direct_IO(int rw, struct file *file, const struct iovec *iov,
+		loff_t offset, unsigned long nr_segs)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#328: FILE: fs/nfs/direct.c:242:
+#if 0

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#335: FILE: fs/nfs/direct.c:249:
+	dfprintk(VFS, "NFS: direct_IO(%s) (%s/%s) off/no(%Lu/%lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: fs/nfs/direct.c:250:
+	dfprintk(VFS, "NFS: direct_IO(%s) (%s/%s) off/no(%Lu/%lu)\n",
+				((rw == READ) ? "READ" : "WRITE"),

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: include/linux/nfs_page.h:51:
+extern	void nfs_release_list(struct list_head *list);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#435: FILE: include/linux/nfs_page.h:63:
+extern	int nfs_wait_for_reads(struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#435: FILE: include/linux/nfs_page.h:63:
+extern	int nfs_wait_for_reads(struct list_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#459: FILE: include/linux/nfs_xdr.h:67:
+#if (NFS_READ_MAXIOV > (MAX_IOVEC -2))
                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#474: FILE: include/linux/nfs_xdr.h:89:
+#if (NFS_WRITE_MAXIOV > (MAX_IOVEC -2))
                                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 15 warnings, 19 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
