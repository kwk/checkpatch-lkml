WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > generic_file_aio_write_nolock() via fault_in_pages_readable().  Of course,

WARNING:REPEATED_WORD: Possible repeated word: 'etc'
#49: 
> > is going to do things like allocating blocks in the file etc etc.  If we

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: fs/reiserfs/file.c:551:
+static int prefault_pages_for_write(loff_t pos, const char *buf, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: fs/reiserfs/file.c:552:
+                                     size_t count)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: fs/reiserfs/file.c:552:
+static int prefault_pages_for_write(loff_t pos, const char *buf, 
+                                     size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs/reiserfs/file.c:552:
+                                     size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: fs/reiserfs/file.c:554:
+    unsigned long off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs/reiserfs/file.c:555:
+    unsigned long bytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/reiserfs/file.c:556:
+    int status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: fs/reiserfs/file.c:561:
+    do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#101: FILE: fs/reiserfs/file.c:564:
+	if (bytes > count)
+	    bytes = count;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#104: FILE: fs/reiserfs/file.c:567:
+	if (status)
+	    return -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#105: FILE: fs/reiserfs/file.c:568:
+	    return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: fs/reiserfs/file.c:569:
+        count -= bytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: fs/reiserfs/file.c:569:
+        count -= bytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/reiserfs/file.c:572:
+    } while(count > 0);$

ERROR:SPACING: space required before the open parenthesis '('
#109: FILE: fs/reiserfs/file.c:572:
+    } while(count > 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/reiserfs/file.c:573:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/reiserfs/file.c:595:
+    int zero_all = 0;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#138: FILE: fs/reiserfs/file.c:604:
+	if (zero_all)
+	    memset(kaddr+offset, 0, count);

CHECK:BRACES: braces {} should be used on all arms of this statement
#138: FILE: fs/reiserfs/file.c:604:
+	if (zero_all)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: fs/reiserfs/file.c:605:
+	    memset(kaddr+offset, 0, count);
 	                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#140: FILE: fs/reiserfs/file.c:606:
+	else {
[...]
+	    inc_preempt_count();

CHECK:BRACES: Unbalanced braces around else statement
#140: FILE: fs/reiserfs/file.c:606:
+	else {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: fs/reiserfs/file.c:613:
+	    page_fault = __copy_from_user(kaddr+offset, buf, count);
 	                                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#158: FILE: fs/reiserfs/file.c:623:
 	if (page_fault)
+	    zero_all = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#180: FILE: fs/reiserfs/file.c:1287:
+	if (res) {
+	    reiserfs_unprepare_pages(prepared_pages, num_pages);

WARNING:TABSTOP: Statements should start on a tabstop
#182: FILE: fs/reiserfs/file.c:1289:
+	    break;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#197: FILE: fs/reiserfs/file.c:1310:
+	page_fault = reiserfs_copy_from_user_to_file_region(pos, num_pages, write_bytes, prepared_pages, buf);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#213: FILE: fs/reiserfs/file.c:1322:
+	if (!page_fault) {
+	    already_written += write_bytes;

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: include/linux/pagemap.h:236:
+^I^I ^Iret = __get_user(c, end);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: include/linux/pagemap.h:236:
+^I^I ^Iret = __get_user(c, end);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 22 warnings, 5 checks, 189 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
