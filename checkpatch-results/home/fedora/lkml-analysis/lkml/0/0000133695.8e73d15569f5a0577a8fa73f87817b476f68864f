WARNING:TYPO_SPELLING: 'speficied' may be misspelled - perhaps 'specified'?
#52: 
      libata: honor the transfer cycle time speficied by the EIDE device
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ap->device[0].class != ATA_DEV_ATAPI'
#122: FILE: drivers/scsi/ahci.c:568:
+	if ((ap->device[0].class != ATA_DEV_ATAPI) ||
+	    ((irq_stat & PORT_IRQ_TF_ERR) == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#124: FILE: drivers/scsi/ahci.c:570:
+		printk(KERN_WARNING "ata%u: port reset, "

WARNING:SPLIT_STRING: quoted string split across lines
#125: FILE: drivers/scsi/ahci.c:571:
+		printk(KERN_WARNING "ata%u: port reset, "
+		       "p_is %x is %x pis %x cmd %x tf %x ss %x se %x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#186: FILE: drivers/scsi/libata-core.c:1059:
+			printk(KERN_WARNING "ata%u: slow completion (cmd %x)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#189: FILE: drivers/scsi/libata-core.c:1062:
+			printk(KERN_WARNING "ata%u: qc timeout (cmd %x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/scsi/sata_mv.c:305:
+	void (*read_preamp)(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/scsi/sata_mv.c:339:
+static void mv5_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/scsi/sata_mv.c:349:
+static void mv6_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio);

CHECK:SPACING: No space is necessary after a cast
#1022: FILE: drivers/scsi/sata_mv.c:1342:
+		return (u32) ofs;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1045: FILE: drivers/scsi/sata_mv.c:1365:
+		u32 tmp = readl(mmio + MV_PCI_EXP_ROM_BAR_CTL);
+		tmp |= (1 << 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1058: FILE: drivers/scsi/sata_mv.c:1378:
+static void mv5_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1086: FILE: drivers/scsi/sata_mv.c:1406:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1086: FILE: drivers/scsi/sata_mv.c:1406:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1086: FILE: drivers/scsi/sata_mv.c:1406:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                                       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1086: FILE: drivers/scsi/sata_mv.c:1406:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1086: FILE: drivers/scsi/sata_mv.c:1406:
+	const u32 mask = (1<<12) | (1<<11) | (1<<7) | (1<<6) | (1<<5);
 	                                                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1108: FILE: drivers/scsi/sata_mv.c:1428:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/scsi/sata_mv.c:1432:
+static void mv5_reset_hc_port(struct mv_host_priv *hpriv, void __iomem *mmio,
+			     unsigned int port)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1134: FILE: drivers/scsi/sata_mv.c:1454:
+}
+#undef ZERO

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/scsi/sata_mv.c:1458:
+static void mv5_reset_one_hc(struct mv_host_priv *hpriv, void __iomem *mmio,
+			unsigned int hc)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1153: FILE: drivers/scsi/sata_mv.c:1473:
+}
+#undef ZERO

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1193: FILE: drivers/scsi/sata_mv.c:1513:
+}
+#undef ZERO

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1232: FILE: drivers/scsi/sata_mv.c:1552:
+		if (PCI_MASTER_EMPTY & t) {
+			break;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1237: FILE: drivers/scsi/sata_mv.c:1557:
+		printk(KERN_ERR DRV_NAME ": PCI master won't flush\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1251: FILE: drivers/scsi/sata_mv.c:1571:
+		printk(KERN_ERR DRV_NAME ": can't set global reset\n");

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#1256: FILE: drivers/scsi/sata_mv.c:1576:
+	/* clear reset and *reenable the PCI master* (not mentioned in spec) */
 	                    ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1265: FILE: drivers/scsi/sata_mv.c:1585:
+		printk(KERN_ERR DRV_NAME ": can't clear global reset\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1273: FILE: drivers/scsi/sata_mv.c:1593:
+static void mv6_read_preamp(struct mv_host_priv *hpriv, int idx,
+			   void __iomem *mmio)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1315: FILE: drivers/scsi/sata_mv.c:1635:
+		udelay(200);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1321: FILE: drivers/scsi/sata_mv.c:1641:
+		udelay(200);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1366: FILE: drivers/scsi/sata_mv.c:1686:
+		u32 ifctl = readl(port_mmio + SATA_INTERFACE_CTL);
+		ifctl |= (1 << 12) | (1 << 7);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1370: FILE: drivers/scsi/sata_mv.c:1690:
+	udelay(25);		/* allow reset propagation */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sstatus == 3'
#1458: FILE: drivers/scsi/sata_mv.c:1762:
+		if ((sstatus == 3) || (sstatus == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sstatus == 0'
#1458: FILE: drivers/scsi/sata_mv.c:1762:
+		if ((sstatus == 3) || (sstatus == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sstatus != 0x0'
#1466: FILE: drivers/scsi/sata_mv.c:1769:
+	if (IS_60XX(hpriv) &&
+	    (sstatus != 0x0) && (sstatus != 0x113) && (sstatus != 0x123) &&
+	    (retry-- > 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sstatus != 0x113'
#1466: FILE: drivers/scsi/sata_mv.c:1769:
+	if (IS_60XX(hpriv) &&
+	    (sstatus != 0x0) && (sstatus != 0x113) && (sstatus != 0x123) &&
+	    (retry-- > 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sstatus != 0x123'
#1466: FILE: drivers/scsi/sata_mv.c:1769:
+	if (IS_60XX(hpriv) &&
+	    (sstatus != 0x0) && (sstatus != 0x113) && (sstatus != 0x123) &&
+	    (retry-- > 0))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1487: FILE: drivers/scsi/sata_mv.c:1796:
+		u8 drv_stat = ata_check_status(ap);
+		if ((drv_stat != 0x80) && (drv_stat != 0x7f))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv_stat != 0x80'
#1487: FILE: drivers/scsi/sata_mv.c:1796:
+		if ((drv_stat != 0x80) && (drv_stat != 0x7f))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv_stat != 0x7f'
#1487: FILE: drivers/scsi/sata_mv.c:1796:
+		if ((drv_stat != 0x80) && (drv_stat != 0x7f))

ERROR:SPACING: space required before the open parenthesis '('
#1577: FILE: drivers/scsi/sata_mv.c:1928:
+	switch(board_idx) {

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1590: FILE: drivers/scsi/sata_mv.c:1941:
+			dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1591: FILE: drivers/scsi/sata_mv.c:1942:
+			dev_printk(KERN_WARNING, &pdev->dev,
+			   "Applying 50XXB2 workarounds to unknown rev\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1610: FILE: drivers/scsi/sata_mv.c:1961:
+			dev_printk(KERN_WARNING, &pdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: drivers/scsi/sata_mv.c:1962:
+			dev_printk(KERN_WARNING, &pdev->dev,
+			   "Applying B2 workarounds to unknown rev\n");

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#1629: FILE: drivers/scsi/sata_mv.c:1980:
+			dev_printk(KERN_WARNING, &pdev->dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1637: FILE: drivers/scsi/sata_mv.c:1988:
+		printk(KERN_ERR DRV_NAME ": BUG: invalid board index %u\n", board_idx);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1697: FILE: drivers/scsi/sata_mv.c:2041:
+			u32 ifctl = readl(port_mmio + SATA_INTERFACE_CTL);
+			ifctl |= (1 << 12);

WARNING:SPLIT_STRING: quoted string split across lines
#1714: FILE: drivers/scsi/sata_mv.c:2073:
 	VPRINTK("HC MAIN IRQ cause/mask=0x%08x/0x%08x "
+		"PCI int cause/mask=0x%08x/0x%08x\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1728: FILE: drivers/scsi/sata_mv.c:2114:
+	       (unsigned)MV_MAX_Q_DEPTH, probe_ent->n_ports,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1804: FILE: drivers/scsi/sata_sil24.c:212:
+	SGE_LNK			= (1 << 30), /* linked list
+						Points to SGT, not SGE */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1804: FILE: drivers/scsi/sata_sil24.c:212:
+						Points to SGT, not SGE */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1806: FILE: drivers/scsi/sata_sil24.c:214:
+	SGE_DRD			= (1 << 29), /* discard data read (/dev/null)
+						data address ignored */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1806: FILE: drivers/scsi/sata_sil24.c:214:
+						data address ignored */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 24 warnings, 30 checks, 1658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000133695.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
