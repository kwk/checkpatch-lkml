WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#50: 
ssize_t generic_file_readv(struct file *filp, const struct iovec *iov,
                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#121: 
procs                      memory    swap          io     system         cpu

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#285: FILE: drivers/char/raw.c:204:
+rw_raw_dev(int rw, struct file *filp, const struct iovec *iov, unsigned long nr_segs, loff_t *offp)
                                 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: drivers/char/raw.c:209:
+ ^Isize_t count = iov_length(iov, nr_segs); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/char/raw.c:209:
+ ^Isize_t count = iov_length(iov, nr_segs); $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: drivers/char/raw.c:209:
+ ^Isize_t count = iov_length(iov, nr_segs); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/char/raw.c:209:
+ ^Isize_t count = iov_length(iov, nr_segs); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/char/raw.c:213:
+^I^Igoto out;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: drivers/char/raw.c:216:
+^I^Ireturn -EINVAL;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: drivers/char/raw.c:218:
+^Iif (*offp >= inode->i_size) $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#328: FILE: drivers/char/raw.c:234:
+raw_read(struct file *filp, char *buf, size_t size, loff_t *offp)
                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#333: FILE: drivers/char/raw.c:238:
+	return rw_raw_dev(READ, filp, &local_iov, 1, offp);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#342: FILE: drivers/char/raw.c:246:
+	return rw_raw_dev(WRITE, filp, &local_iov, 1, offp);
 	                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: drivers/char/raw.c:249:
+static ssize_t $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#346: FILE: drivers/char/raw.c:250:
+raw_readv(struct file *filp, const struct iovec *iov, unsigned long nr_segs, loff_t *offp) 
                        ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: drivers/char/raw.c:250:
+raw_readv(struct file *filp, const struct iovec *iov, unsigned long nr_segs, loff_t *offp) $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#348: FILE: drivers/char/raw.c:252:
+	return rw_raw_dev(READ, filp, iov, nr_segs, offp);
 	                        ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: drivers/char/raw.c:255:
+static ssize_t $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#352: FILE: drivers/char/raw.c:256:
+raw_writev(struct file *filp, const struct iovec *iov, unsigned long nr_segs, loff_t *offp) 
                         ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: drivers/char/raw.c:256:
+raw_writev(struct file *filp, const struct iovec *iov, unsigned long nr_segs, loff_t *offp) $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#354: FILE: drivers/char/raw.c:258:
+	return rw_raw_dev(WRITE, filp, iov, nr_segs, offp);
 	                         ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#362: FILE: drivers/char/raw.c:267:
+^I.readv^I= ^Iraw_readv,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: drivers/char/raw.c:268:
+^I.writev^I= ^Iraw_writev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: fs/block_dev.c:120:
+blkdev_direct_IO(int rw, struct inode *inode, const struct iovec *iov,
+			loff_t offset, unsigned long nr_segs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: fs/block_dev.c:791:
+static ssize_t blkdev_file_write(struct file *file, const char *buf,
+				   size_t count, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: fs/direct-io.c:531:
+direct_io_worker(int rw, struct inode *inode, const struct iovec *iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: fs/direct-io.c:532:
+direct_io_worker(int rw, struct inode *inode, const struct iovec *iov, 
+	loff_t offset, unsigned long nr_segs, get_blocks_t get_blocks)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: fs/direct-io.c:535:
+^Iunsigned long user_addr; $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#553: FILE: fs/direct-io.c:575:
+		if (user_addr & (PAGE_SIZE-1)) {
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: fs/direct-io.c:581:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: fs/direct-io.c:600:
+^I^Iret = tot_bytes; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#597: FILE: fs/direct-io.c:609:
+generic_direct_IO(int rw, struct inode *inode, const struct iovec *iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: fs/direct-io.c:610:
+generic_direct_IO(int rw, struct inode *inode, const struct iovec *iov, 
+	loff_t offset, unsigned long nr_segs, get_blocks_t get_blocks)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#606: FILE: fs/direct-io.c:616:
+	unsigned blocksize_mask = (1 << inode->i_blkbits) - 1;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#612: FILE: fs/direct-io.c:619:
+	if (offset & blocksize_mask) {
 		goto out;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: fs/direct-io.c:627:
+^I^Iif ((addr & blocksize_mask) || (size & blocksize_mask)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: fs/direct-io.c:628:
+^I^I^Igoto out;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: fs/direct-io.c:645:
+generic_file_direct_IO(int rw, struct inode *inode, const struct iovec *iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: fs/direct-io.c:646:
+generic_file_direct_IO(int rw, struct inode *inode, const struct iovec *iov, 
+	loff_t offset, unsigned long nr_segs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: fs/ext2/inode.c:623:
+ext2_direct_IO(int rw, struct inode *inode, const struct iovec *iov,
+			loff_t offset, unsigned long nr_segs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: fs/jfs/inode.c:312:
+static int jfs_direct_IO(int rw, struct inode *inode, const struct iovec *iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: fs/jfs/inode.c:313:
+static int jfs_direct_IO(int rw, struct inode *inode, const struct iovec *iov, 
+			loff_t offset, unsigned long nr_segs)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_segs > UIO_MAXIOV'
#771: FILE: fs/read_write.c:337:
+	if ((nr_segs > UIO_MAXIOV) || (nr_segs <= 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_segs <= 0'
#771: FILE: fs/read_write.c:337:
+	if ((nr_segs > UIO_MAXIOV) || (nr_segs <= 0))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#780: FILE: fs/read_write.c:343:
+		iov = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);
 		                     ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#780: FILE: fs/read_write.c:343:
+		iov = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#787: FILE: fs/read_write.c:348:
+	if (copy_from_user(iov, vector, nr_segs*sizeof(*vector)))
 	                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: fs/read_write.c:376:
+^Iret = locks_verify_area((type == READ $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == READ'
#875: FILE: fs/read_write.c:421:
+	if ((ret + (type == READ)) > 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#884: FILE: fs/read_write.c:427:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#906: FILE: fs/read_write.c:452:
+sys_writev(unsigned long fd, const struct iovec * vector, unsigned long nr_segs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#927: FILE: include/linux/fs.h:310:
+	int (*direct_IO)(int, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#927: FILE: include/linux/fs.h:310:
+	int (*direct_IO)(int, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#927: FILE: include/linux/fs.h:310:
+	int (*direct_IO)(int, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: include/linux/fs.h:1248:
+ssize_t generic_file_write_nolock(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: include/linux/fs.h:1251:
+extern ssize_t generic_file_direct_IO(int rw, struct inode *inode, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#945: FILE: include/linux/fs.h:1251:
+extern ssize_t generic_file_direct_IO(int rw, struct inode *inode, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#946: FILE: include/linux/fs.h:1252:
+extern ssize_t generic_file_direct_IO(int rw, struct inode *inode, 
+	const struct iovec *iov, loff_t offset, unsigned long nr_segs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: include/linux/fs.h:1253:
+extern int generic_direct_IO(int rw, struct inode *inode, const struct iovec $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#947: FILE: include/linux/fs.h:1253:
+extern int generic_direct_IO(int rw, struct inode *inode, const struct iovec 

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#949: FILE: include/linux/fs.h:1255:
+extern ssize_t generic_file_readv(struct file *filp, const struct iovec *iov, 
                                                ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: include/linux/fs.h:1255:
+extern ssize_t generic_file_readv(struct file *filp, const struct iovec *iov, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#949: FILE: include/linux/fs.h:1255:
+extern ssize_t generic_file_readv(struct file *filp, const struct iovec *iov, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#950: FILE: include/linux/fs.h:1256:
+extern ssize_t generic_file_readv(struct file *filp, const struct iovec *iov, 
+	unsigned long nr_segs, loff_t *ppos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#951: FILE: include/linux/fs.h:1257:
+ssize_t generic_file_writev(struct file *filp, const struct iovec *iov, 
                                          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: include/linux/fs.h:1257:
+ssize_t generic_file_writev(struct file *filp, const struct iovec *iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: include/linux/fs.h:1258:
+ssize_t generic_file_writev(struct file *filp, const struct iovec *iov, 
+			unsigned long nr_segs, loff_t *ppos);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#971: FILE: kernel/ksyms.c:349:
+EXPORT_SYMBOL(generic_file_writev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#972: FILE: kernel/ksyms.c:350:
+EXPORT_SYMBOL(iov_shorten);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#993: FILE: mm/filemap.c:1126:
+__generic_file_read(struct file *filp, const struct iovec *iov,
                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#994: FILE: mm/filemap.c:1127:
+__generic_file_read(struct file *filp, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: mm/filemap.c:1152:
+				nr_segs = iov_shorten((struct iovec *)iov,
+							nr_segs, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1019: FILE: mm/filemap.c:1154:
+^I^I^Iretval = generic_file_direct_IO(READ, inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1020: FILE: mm/filemap.c:1155:
+			retval = generic_file_direct_IO(READ, inode, 
+					iov, pos, nr_segs);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1032: FILE: mm/filemap.c:1164:
+		if (!access_ok(VERIFY_WRITE,iov[seg].iov_base,iov[seg].iov_len))
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1032: FILE: mm/filemap.c:1164:
+		if (!access_ok(VERIFY_WRITE,iov[seg].iov_base,iov[seg].iov_len))
 		                                             ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1065: FILE: mm/filemap.c:1192:
+generic_file_read(struct file *filp, char *buf, size_t count, loff_t *ppos)
                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1069: FILE: mm/filemap.c:1196:
+	return __generic_file_read(filp, &local_iov, 1, ppos);
 	                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1083: FILE: mm/filemap.c:1954:
+generic_file_write_nolock(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1097: FILE: mm/filemap.c:1972:
+	unsigned	iov_bytes;	/* Cumulative count to the end of the

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1098: FILE: mm/filemap.c:1973:
+	unsigned	iov_bytes;	/* Cumulative count to the end of the
+					   current iovec */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1098: FILE: mm/filemap.c:1973:
+					   current iovec */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1108: FILE: mm/filemap.c:1981:
+		if (!access_ok(VERIFY_READ,iov[seg].iov_base,iov[seg].iov_len))
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1108: FILE: mm/filemap.c:1981:
+		if (!access_ok(VERIFY_READ,iov[seg].iov_base,iov[seg].iov_len))
 		                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1124: FILE: mm/filemap.c:2085:
+			nr_segs = iov_shorten((struct iovec *)iov,
+						nr_segs, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: mm/filemap.c:2086:
+^I^Iwritten = generic_file_direct_IO(WRITE, inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1126: FILE: mm/filemap.c:2087:
+		written = generic_file_direct_IO(WRITE, inode, 
+					iov, pos, nr_segs);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1154: FILE: mm/filemap.c:2129:
+		page = __grab_cache_page(mapping,index,&cached_page,&lru_pvec);
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1154: FILE: mm/filemap.c:2129:
+		page = __grab_cache_page(mapping,index,&cached_page,&lru_pvec);
 		                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1154: FILE: mm/filemap.c:2129:
+		page = __grab_cache_page(mapping,index,&cached_page,&lru_pvec);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1154: FILE: mm/filemap.c:2129:
+		page = __grab_cache_page(mapping,index,&cached_page,&lru_pvec);
 		                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1154: FILE: mm/filemap.c:2129:
+		page = __grab_cache_page(mapping,index,&cached_page,&lru_pvec);
 		                                                    ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1184: FILE: mm/filemap.c:2210:
+ssize_t generic_file_readv(struct file *filp, const struct iovec *iov,
                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1185: FILE: mm/filemap.c:2211:
+ssize_t generic_file_readv(struct file *filp, const struct iovec *iov,
+			unsigned long nr_segs, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1187: FILE: mm/filemap.c:2213:
+	return __generic_file_read(filp, iov, nr_segs, ppos);
 	                           ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: mm/filemap.c:2217:
+^I^I^Iunsigned long nr_segs, loff_t * ppos) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: mm/filemap.c:2217:
+ssize_t generic_file_writev(struct file *file, const struct iovec *iov,
+			unsigned long nr_segs, loff_t * ppos) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1191: FILE: mm/filemap.c:2217:
+			unsigned long nr_segs, loff_t * ppos) 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: fs/ext3/inode.c:1403:
+static int ext3_direct_IO(int rw, struct inode *inode,
+			const struct iovec *iov, loff_t offset,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 32 warnings, 30 checks, 939 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
