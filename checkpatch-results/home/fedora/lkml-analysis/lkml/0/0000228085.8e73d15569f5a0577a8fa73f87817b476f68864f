WARNING:BAD_SIGN_OFF: email address 'linux-atm-general@lists.sourceforge.net, linux-kernel@vger.kernel.org,' might be better as 'linux-atm-general@lists.sourceforge.net linux-kernel@vger.kernel.org,'
#38: 
Cc: linux-atm-general@lists.sourceforge.net, linux-kernel@vger.kernel.org,

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linux-atm-general@lists.sourceforge.net, linux-kernel@vger.kernel.org,', should be: 'linux-atm-general@lists.sourceforge.net (linux-kernel@vger.kernel.org,)'
#38: 
Cc: linux-atm-general@lists.sourceforge.net, linux-kernel@vger.kernel.org,

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#74: FILE: drivers/atm/ambassador.c:1695:
+static unsigned int command_successes [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#83: FILE: drivers/atm/ambassador.c:2091:
+static u8 bit_swap (u8 byte)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#94: FILE: drivers/atm/atmtcp.c:391:
+static int atmtcp_attach(struct atm_vcc *vcc,int itf)
                                             ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#139: FILE: drivers/atm/firestream.c:253:
+static struct reginit_item PHY_NTC_INIT[] __devinitdata = {

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#148: FILE: drivers/atm/firestream.c:337:
+static struct fs_dev *fs_boards = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#157: FILE: drivers/atm/firestream.c:1924:
+static void __devexit firestream_remove_one (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: drivers/atm/firestream.c:1924:
+static void __devexit firestream_remove_one (struct pci_dev *pdev)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#218: FILE: drivers/atm/he.c:150:
+static struct he_dev *he_devs = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/atm/he.c:177:
+};     $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: drivers/atm/he.c:178:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/atm/he.c:178:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: drivers/atm/he.c:198:
+};     $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#361: FILE: drivers/atm/iphase.c:644:
+static void ia_tx_poll (IADEV *iadev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: drivers/atm/iphase.c:644:
+static void ia_tx_poll (IADEV *iadev) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: drivers/atm/iphase.c:861:
+static void ia_mb25_init (IADEV *iadev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: drivers/atm/iphase.c:876:
+static void ia_suni_pm7345_init (IADEV *iadev)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#390: FILE: drivers/atm/iphase.c:959:
+static int tcnter = 0;

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#391: FILE: drivers/atm/iphase.c:960:
+static void xdump( u_char*  cp, int  length, char*  prefix )

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#391: FILE: drivers/atm/iphase.c:960:
+static void xdump( u_char*  cp, int  length, char*  prefix )

ERROR:SPACING: space prohibited after that open parenthesis '('
#391: FILE: drivers/atm/iphase.c:960:
+static void xdump( u_char*  cp, int  length, char*  prefix )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#391: FILE: drivers/atm/iphase.c:960:
+static void xdump( u_char*  cp, int  length, char*  prefix )

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#400: FILE: drivers/atm/iphase.c:1007:
+static void desc_dbg(IADEV *iadev) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228085.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 10 warnings, 0 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228085.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
