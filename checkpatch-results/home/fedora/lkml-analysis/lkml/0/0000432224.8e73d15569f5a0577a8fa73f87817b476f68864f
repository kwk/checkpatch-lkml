WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -ur linux-2.5.34_original/drivers/block/DAC960.c linux-2.5.34_patch/drivers/block/DAC960.c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: drivers/block/DAC960.c:159:
+  void *ScatterGatherCPU = NULL;$

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherCPU>
#44: FILE: drivers/block/DAC960.c:159:
+  void *ScatterGatherCPU = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: drivers/block/DAC960.c:160:
+  dma_addr_t ScatterGatherDMA;$

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherDMA>
#45: FILE: drivers/block/DAC960.c:160:
+  dma_addr_t ScatterGatherDMA;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: drivers/block/DAC960.c:161:
+  struct pci_pool *ScatterGatherPool;$

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherPool>
#46: FILE: drivers/block/DAC960.c:161:
+  struct pci_pool *ScatterGatherPool;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: drivers/block/DAC960.c:162:
+  void *RequestSenseCPU = NULL;$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseCPU>
#47: FILE: drivers/block/DAC960.c:162:
+  void *RequestSenseCPU = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: drivers/block/DAC960.c:163:
+  dma_addr_t RequestSenseDMA;$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseDMA>
#48: FILE: drivers/block/DAC960.c:163:
+  dma_addr_t RequestSenseDMA;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: drivers/block/DAC960.c:164:
+  struct pci_pool *RequestSensePool = NULL;$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSensePool>
#49: FILE: drivers/block/DAC960.c:164:
+  struct pci_pool *RequestSensePool = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: drivers/block/DAC960.c:170:
+      ScatterGatherPool = pci_pool_create("DAC960_V1_ScatterGather",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#56: FILE: drivers/block/DAC960.c:171:
+      ScatterGatherPool = pci_pool_create("DAC960_V1_ScatterGather",
+		Controller->PCIDevice,

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#56: FILE: drivers/block/DAC960.c:171:
+		Controller->PCIDevice,

CHECK:CAMELCASE: Avoid CamelCase: <PCIDevice>
#56: FILE: drivers/block/DAC960.c:171:
+		Controller->PCIDevice,

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_ScatterGatherLimit>
#57: FILE: drivers/block/DAC960.c:172:
+	DAC960_V1_ScatterGatherLimit * sizeof(DAC960_V1_ScatterGatherSegment_T),

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_ScatterGatherSegment_T>
#57: FILE: drivers/block/DAC960.c:172:
+	DAC960_V1_ScatterGatherLimit * sizeof(DAC960_V1_ScatterGatherSegment_T),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/block/DAC960.c:174:
+      if (ScatterGatherPool == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 12)
#59: FILE: drivers/block/DAC960.c:174:
+      if (ScatterGatherPool == NULL)
+	    return DAC960_Failure(Controller,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ScatterGatherPool"
#59: FILE: drivers/block/DAC960.c:174:
+      if (ScatterGatherPool == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TABSTOP: Statements should start on a tabstop
#60: FILE: drivers/block/DAC960.c:175:
+	    return DAC960_Failure(Controller,

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Failure>
#60: FILE: drivers/block/DAC960.c:175:
+	    return DAC960_Failure(Controller,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: drivers/block/DAC960.c:177:
+      Controller->ScatterGatherPool = ScatterGatherPool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/block/DAC960.c:183:
+      ScatterGatherPool = pci_pool_create("DAC960_V2_ScatterGather",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: drivers/block/DAC960.c:184:
+      ScatterGatherPool = pci_pool_create("DAC960_V2_ScatterGather",
+		Controller->PCIDevice,

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_ScatterGatherLimit>
#70: FILE: drivers/block/DAC960.c:185:
+	DAC960_V2_ScatterGatherLimit * sizeof(DAC960_V2_ScatterGatherSegment_T),

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_ScatterGatherSegment_T>
#70: FILE: drivers/block/DAC960.c:185:
+	DAC960_V2_ScatterGatherLimit * sizeof(DAC960_V2_ScatterGatherSegment_T),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/block/DAC960.c:187:
+      RequestSensePool = pci_pool_create("DAC960_V2_RequestSense",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: drivers/block/DAC960.c:188:
+      RequestSensePool = pci_pool_create("DAC960_V2_RequestSense",
+		Controller->PCIDevice, sizeof(DAC960_SCSI_RequestSense_T),

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SCSI_RequestSense_T>
#73: FILE: drivers/block/DAC960.c:188:
+		Controller->PCIDevice, sizeof(DAC960_SCSI_RequestSense_T),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/block/DAC960.c:190:
+      if (ScatterGatherPool == NULL || RequestSensePool == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 12)
#75: FILE: drivers/block/DAC960.c:190:
+      if (ScatterGatherPool == NULL || RequestSensePool == NULL)
+	    return DAC960_Failure(Controller,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ScatterGatherPool"
#75: FILE: drivers/block/DAC960.c:190:
+      if (ScatterGatherPool == NULL || RequestSensePool == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!RequestSensePool"
#75: FILE: drivers/block/DAC960.c:190:
+      if (ScatterGatherPool == NULL || RequestSensePool == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#76: FILE: drivers/block/DAC960.c:191:
+	    return DAC960_Failure(Controller,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/block/DAC960.c:193:
+      Controller->ScatterGatherPool = ScatterGatherPool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/block/DAC960.c:194:
+      Controller->V2.RequestSensePool = RequestSensePool;$

CHECK:CAMELCASE: Avoid CamelCase: <DriverQueueDepth>
#88: FILE: drivers/block/DAC960.c:206:
+		Controller->DriverQueueDepth - CommandIdentifier + 1;

CHECK:CAMELCASE: Avoid CamelCase: <CommandIdentifier>
#88: FILE: drivers/block/DAC960.c:206:
+		Controller->DriverQueueDepth - CommandIdentifier + 1;

CHECK:CAMELCASE: Avoid CamelCase: <CommandsRemaining>
#91: FILE: drivers/block/DAC960.c:208:
+		CommandsRemaining = CommandAllocationGroupSize;

CHECK:CAMELCASE: Avoid CamelCase: <CommandAllocationGroupSize>
#91: FILE: drivers/block/DAC960.c:208:
+		CommandsRemaining = CommandAllocationGroupSize;

CHECK:CAMELCASE: Avoid CamelCase: <CommandAllocationLength>
#94: FILE: drivers/block/DAC960.c:210:
+		CommandsRemaining * CommandAllocationLength;

WARNING:TABSTOP: Statements should start on a tabstop
#102: FILE: drivers/block/DAC960.c:216:
+	 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/block/DAC960.c:224:
+      ScatterGatherCPU = pci_pool_alloc(ScatterGatherPool, SLAB_ATOMIC,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: drivers/block/DAC960.c:225:
+      ScatterGatherCPU = pci_pool_alloc(ScatterGatherPool, SLAB_ATOMIC,
+							&ScatterGatherDMA);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/block/DAC960.c:226:
+      if (ScatterGatherCPU == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#112: FILE: drivers/block/DAC960.c:226:
+      if (ScatterGatherCPU == NULL)
+	  return DAC960_Failure(Controller, "AUXILIARY STRUCTURE CREATION");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ScatterGatherCPU"
#112: FILE: drivers/block/DAC960.c:226:
+      if (ScatterGatherCPU == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#113: FILE: drivers/block/DAC960.c:227:
+	  return DAC960_Failure(Controller, "AUXILIARY STRUCTURE CREATION");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/block/DAC960.c:229:
+      if (RequestSensePool != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#115: FILE: drivers/block/DAC960.c:229:
+      if (RequestSensePool != NULL) {
+  	  RequestSenseCPU = pci_pool_alloc(RequestSensePool, SLAB_ATOMIC,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "RequestSensePool"
#115: FILE: drivers/block/DAC960.c:229:
+      if (RequestSensePool != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/block/DAC960.c:230:
+  ^I  RequestSenseCPU = pci_pool_alloc(RequestSensePool, SLAB_ATOMIC,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/block/DAC960.c:230:
+  ^I  RequestSenseCPU = pci_pool_alloc(RequestSensePool, SLAB_ATOMIC,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/block/DAC960.c:230:
+  ^I  RequestSenseCPU = pci_pool_alloc(RequestSensePool, SLAB_ATOMIC,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/block/DAC960.c:231:
+  	  RequestSenseCPU = pci_pool_alloc(RequestSensePool, SLAB_ATOMIC,
+						&RequestSenseDMA);

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/block/DAC960.c:232:
+  ^I  if (RequestSenseCPU == NULL) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: drivers/block/DAC960.c:232:
+  ^I  if (RequestSenseCPU == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/block/DAC960.c:232:
+  ^I  if (RequestSenseCPU == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!RequestSenseCPU"
#118: FILE: drivers/block/DAC960.c:232:
+  	  if (RequestSenseCPU == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/block/DAC960.c:233:
+                pci_pool_free(ScatterGatherPool, ScatterGatherCPU,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/block/DAC960.c:233:
+                pci_pool_free(ScatterGatherPool, ScatterGatherCPU,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/block/DAC960.c:234:
+                                ScatterGatherDMA);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/block/DAC960.c:234:
+                pci_pool_free(ScatterGatherPool, ScatterGatherCPU,
+                                ScatterGatherDMA);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/block/DAC960.c:234:
+                                ScatterGatherDMA);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/block/DAC960.c:235:
+    ^I^Ireturn DAC960_Failure(Controller,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/block/DAC960.c:235:
+    ^I^Ireturn DAC960_Failure(Controller,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/block/DAC960.c:235:
+    ^I^Ireturn DAC960_Failure(Controller,$

WARNING:TABSTOP: Statements should start on a tabstop
#123: FILE: drivers/block/DAC960.c:237:
+	  }

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: drivers/block/DAC960.c:238:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/block/DAC960.c:238:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/block/DAC960.c:239:
+     if (Controller->FirmwareType == DAC960_V1_Controller) {$

CHECK:CAMELCASE: Avoid CamelCase: <FirmwareType>
#125: FILE: drivers/block/DAC960.c:239:
+     if (Controller->FirmwareType == DAC960_V1_Controller) {

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_Controller>
#125: FILE: drivers/block/DAC960.c:239:
+     if (Controller->FirmwareType == DAC960_V1_Controller) {

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#126: FILE: drivers/block/DAC960.c:240:
+	Command->V1.ScatterGatherList =

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherList>
#126: FILE: drivers/block/DAC960.c:240:
+	Command->V1.ScatterGatherList =

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherListDMA>
#128: FILE: drivers/block/DAC960.c:242:
+	Command->V1.ScatterGatherListDMA = ScatterGatherDMA;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/block/DAC960.c:243:
+      } else {$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSense>
#133: FILE: drivers/block/DAC960.c:247:
+	Command->V2.RequestSense =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/block/DAC960.c:250:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/block/DAC960.c:264:
+  struct pci_pool *ScatterGatherPool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/block/DAC960.c:265:
+  struct pci_pool *RequestSensePool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/block/DAC960.c:266:
+  void *ScatterGatherCPU;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/block/DAC960.c:267:
+  dma_addr_t ScatterGatherDMA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/block/DAC960.c:268:
+  void *RequestSenseCPU;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/block/DAC960.c:269:
+  dma_addr_t RequestSenseDMA = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/block/DAC960.c:270:
+  DAC960_Command_T *CommandGroup = NULL;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Command_T>
#150: FILE: drivers/block/DAC960.c:270:
+  DAC960_Command_T *CommandGroup = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <CommandGroup>
#150: FILE: drivers/block/DAC960.c:270:
+  DAC960_Command_T *CommandGroup = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/block/DAC960.c:271:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/block/DAC960.c:271:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/block/DAC960.c:272:
+  ScatterGatherPool = Controller->ScatterGatherPool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/block/DAC960.c:273:
+  if (Controller->FirmwareType == DAC960_V1_Controller)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/block/DAC960.c:274:
+        RequestSensePool = Controller->V2.RequestSensePool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/block/DAC960.c:274:
+        RequestSensePool = Controller->V2.RequestSensePool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/block/DAC960.c:277:
+  RequestSenseCPU = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/block/DAC960.c:282:
+      if (Command == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#166: FILE: drivers/block/DAC960.c:282:
+      if (Command == NULL)
+	  continue;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!Command"
#166: FILE: drivers/block/DAC960.c:282:
+      if (Command == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#167: FILE: drivers/block/DAC960.c:283:
+	  continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/block/DAC960.c:285:
+      if (Controller->FirmwareType == DAC960_V1_Controller) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#169: FILE: drivers/block/DAC960.c:285:
+      if (Controller->FirmwareType == DAC960_V1_Controller) {
+	  ScatterGatherCPU = (void *)Command->V1.ScatterGatherList;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/block/DAC960.c:288:
+      } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#172: FILE: drivers/block/DAC960.c:288:
+      } else {
+          ScatterGatherCPU = (void *)Command->V2.ScatterGatherList;

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: drivers/block/DAC960.c:289:
+          ScatterGatherCPU = (void *)Command->V2.ScatterGatherList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/block/DAC960.c:289:
+          ScatterGatherCPU = (void *)Command->V2.ScatterGatherList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/block/DAC960.c:293:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/block/DAC960.c:294:
+      if (ScatterGatherCPU != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#178: FILE: drivers/block/DAC960.c:294:
+      if (ScatterGatherCPU != NULL)
+          pci_pool_free(ScatterGatherPool, ScatterGatherCPU, ScatterGatherDMA);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ScatterGatherCPU"
#178: FILE: drivers/block/DAC960.c:294:
+      if (ScatterGatherCPU != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: drivers/block/DAC960.c:295:
+          pci_pool_free(ScatterGatherPool, ScatterGatherCPU, ScatterGatherDMA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/block/DAC960.c:295:
+          pci_pool_free(ScatterGatherPool, ScatterGatherCPU, ScatterGatherDMA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/block/DAC960.c:296:
+      if (RequestSenseCPU != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#180: FILE: drivers/block/DAC960.c:296:
+      if (RequestSenseCPU != NULL)
+          pci_pool_free(ScatterGatherPool, RequestSenseCPU, RequestSenseDMA);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "RequestSenseCPU"
#180: FILE: drivers/block/DAC960.c:296:
+      if (RequestSenseCPU != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/block/DAC960.c:297:
+          pci_pool_free(ScatterGatherPool, RequestSenseCPU, RequestSenseDMA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/block/DAC960.c:297:
+          pci_pool_free(ScatterGatherPool, RequestSenseCPU, RequestSenseDMA);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/block/DAC960.c:299:
+      if ((Command->CommandIdentifier$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 11)
#183: FILE: drivers/block/DAC960.c:299:
+      if ((Command->CommandIdentifier
[...]
+	   if (CommandGroup != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/block/DAC960.c:304:
+            * Remember the beginning of the group, but don't free it$

WARNING:TABSTOP: Statements should start on a tabstop
#191: FILE: drivers/block/DAC960.c:307:
+	   if (CommandGroup != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "CommandGroup"
#191: FILE: drivers/block/DAC960.c:307:
+	   if (CommandGroup != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/block/DAC960.c:310:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/block/DAC960.c:313:
+  if (CommandGroup != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#197: FILE: drivers/block/DAC960.c:313:
+  if (CommandGroup != NULL)
+      kfree(CommandGroup);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "CommandGroup"
#197: FILE: drivers/block/DAC960.c:313:
+  if (CommandGroup != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/block/DAC960.c:314:
+      kfree(CommandGroup);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/block/DAC960.c:397:
+  Command->Request = NULL;$

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#207: FILE: drivers/block/DAC960.c:397:
+  Command->Request = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/block/DAC960.c:409:
+  spin_unlock_irq(&Controller->queue_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/block/DAC960.c:411:
+  spin_lock_irq(&Controller->queue_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/block/DAC960.c:2091:
+  for (disk = 0; disk < DAC960_MaxLogicalDrives; disk++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 10)
#245: FILE: drivers/block/DAC960.c:2091:
+  for (disk = 0; disk < DAC960_MaxLogicalDrives; disk++)
 	  del_gendisk(&Controller->disks[disk]);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_MaxLogicalDrives>
#245: FILE: drivers/block/DAC960.c:2091:
+  for (disk = 0; disk < DAC960_MaxLogicalDrives; disk++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/block/DAC960.c:2094:
+  kfree(Controller->disks[0].major_name);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/block/DAC960.c:2318:
+      Controller->queue_lock = SPIN_LOCK_UNLOCKED; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/block/DAC960.c:2318:
+      Controller->queue_lock = SPIN_LOCK_UNLOCKED; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/block/DAC960.c:2777:
+  DAC960_V1_ScatterGatherSegment_T *ScatterGatherList =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/block/DAC960.c:2779:
+  struct scatterlist *ScatterList = Command->V1.ScatterList;$

CHECK:CAMELCASE: Avoid CamelCase: <ScatterList>
#268: FILE: drivers/block/DAC960.c:2779:
+  struct scatterlist *ScatterList = Command->V1.ScatterList;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/block/DAC960.c:2780:
+  int DmaDirection, SegCount;$

CHECK:CAMELCASE: Avoid CamelCase: <DmaDirection>
#269: FILE: drivers/block/DAC960.c:2780:
+  int DmaDirection, SegCount;

CHECK:CAMELCASE: Avoid CamelCase: <SegCount>
#269: FILE: drivers/block/DAC960.c:2780:
+  int DmaDirection, SegCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/block/DAC960.c:2784:
+  if (Command->CommandType == DAC960_ReadCommand)$

CHECK:CAMELCASE: Avoid CamelCase: <CommandType>
#274: FILE: drivers/block/DAC960.c:2784:
+  if (Command->CommandType == DAC960_ReadCommand)

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ReadCommand>
#274: FILE: drivers/block/DAC960.c:2784:
+  if (Command->CommandType == DAC960_ReadCommand)

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/block/DAC960.c:2785:
+        DmaDirection = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/block/DAC960.c:2785:
+        DmaDirection = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/block/DAC960.c:2786:
+  else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/block/DAC960.c:2787:
+        DmaDirection = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/block/DAC960.c:2787:
+        DmaDirection = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/block/DAC960.c:2789:
+  SegCount = blk_rq_map_sg(Controller->RequestQueue, Command->Request,$

CHECK:CAMELCASE: Avoid CamelCase: <RequestQueue>
#279: FILE: drivers/block/DAC960.c:2789:
+  SegCount = blk_rq_map_sg(Controller->RequestQueue, Command->Request,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/block/DAC960.c:2790:
+  SegCount = blk_rq_map_sg(Controller->RequestQueue, Command->Request,
+								ScatterList);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/block/DAC960.c:2792:
+  SegCount = pci_map_sg(Command->PciDevice, ScatterList, SegCount,$

CHECK:CAMELCASE: Avoid CamelCase: <PciDevice>
#282: FILE: drivers/block/DAC960.c:2792:
+  SegCount = pci_map_sg(Command->PciDevice, ScatterList, SegCount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/block/DAC960.c:2793:
+  SegCount = pci_map_sg(Command->PciDevice, ScatterList, SegCount,
+								DmaDirection);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/block/DAC960.c:2794:
+  Command->SegmentCount = SegCount;$

CHECK:CAMELCASE: Avoid CamelCase: <SegmentCount>
#284: FILE: drivers/block/DAC960.c:2794:
+  Command->SegmentCount = SegCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/block/DAC960.c:2796:
+  if (SegCount == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#286: FILE: drivers/block/DAC960.c:2796:
+  if (SegCount == 1)
     {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: drivers/block/DAC960.c:2800:
+      else $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/block/DAC960.c:2800:
+      else $

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/block/DAC960.c:2801:
+        CommandMailbox->Type5.CommandOpcode = DAC960_V1_Write;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/block/DAC960.c:2801:
+        CommandMailbox->Type5.CommandOpcode = DAC960_V1_Write;$

CHECK:CAMELCASE: Avoid CamelCase: <CommandMailbox>
#292: FILE: drivers/block/DAC960.c:2801:
+        CommandMailbox->Type5.CommandOpcode = DAC960_V1_Write;

CHECK:CAMELCASE: Avoid CamelCase: <Type5>
#292: FILE: drivers/block/DAC960.c:2801:
+        CommandMailbox->Type5.CommandOpcode = DAC960_V1_Write;

CHECK:CAMELCASE: Avoid CamelCase: <CommandOpcode>
#292: FILE: drivers/block/DAC960.c:2801:
+        CommandMailbox->Type5.CommandOpcode = DAC960_V1_Write;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_Write>
#292: FILE: drivers/block/DAC960.c:2801:
+        CommandMailbox->Type5.CommandOpcode = DAC960_V1_Write;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/block/DAC960.c:2807:
+^I^I^I(DAC960_BusAddress32_T)sg_dma_address(ScatterList);^I$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_BusAddress32_T>
#299: FILE: drivers/block/DAC960.c:2807:
+			(DAC960_BusAddress32_T)sg_dma_address(ScatterList);	

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/block/DAC960.c:2811:
+      int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/block/DAC960.c:2821:
+      CommandMailbox->Type5.BusAddress = Command->V1.ScatterGatherListDMA;$

CHECK:CAMELCASE: Avoid CamelCase: <BusAddress>
#343: FILE: drivers/block/DAC960.c:2821:
+      CommandMailbox->Type5.BusAddress = Command->V1.ScatterGatherListDMA;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/block/DAC960.c:2823:
+      CommandMailbox->Type5.ScatterGatherCount = SegCount;$

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherCount>
#345: FILE: drivers/block/DAC960.c:2823:
+      CommandMailbox->Type5.ScatterGatherCount = SegCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/block/DAC960.c:2825:
+      for (i = 0; i < SegCount; i++, ScatterList++, ScatterGatherList++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#347: FILE: drivers/block/DAC960.c:2825:
+      for (i = 0; i < SegCount; i++, ScatterList++, ScatterGatherList++) {
+		ScatterGatherList->SegmentDataPointer =

CHECK:CAMELCASE: Avoid CamelCase: <SegmentDataPointer>
#348: FILE: drivers/block/DAC960.c:2826:
+		ScatterGatherList->SegmentDataPointer =

CHECK:CAMELCASE: Avoid CamelCase: <SegmentByteCount>
#350: FILE: drivers/block/DAC960.c:2828:
+		ScatterGatherList->SegmentByteCount =

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ByteCount32_T>
#351: FILE: drivers/block/DAC960.c:2829:
+			(DAC960_ByteCount32_T)sg_dma_len(ScatterList);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/block/DAC960.c:2830:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/block/DAC960.c:2845:
+  struct scatterlist *ScatterList = Command->V2.ScatterList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/block/DAC960.c:2846:
+  int DmaDirection, SegCount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/block/DAC960.c:2850:
+  if (Command->CommandType == DAC960_ReadCommand)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: drivers/block/DAC960.c:2851:
+        DmaDirection = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/block/DAC960.c:2851:
+        DmaDirection = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/block/DAC960.c:2852:
+  else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/block/DAC960.c:2853:
+        DmaDirection = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/block/DAC960.c:2853:
+        DmaDirection = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/block/DAC960.c:2855:
+  SegCount = blk_rq_map_sg(Controller->RequestQueue, Command->Request,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/block/DAC960.c:2856:
+  SegCount = blk_rq_map_sg(Controller->RequestQueue, Command->Request,
+								ScatterList);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/block/DAC960.c:2858:
+  SegCount = pci_map_sg(Command->PciDevice, ScatterList, SegCount,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/block/DAC960.c:2859:
+  SegCount = pci_map_sg(Command->PciDevice, ScatterList, SegCount,
+								DmaDirection);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/block/DAC960.c:2860:
+  Command->SegmentCount = SegCount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/block/DAC960.c:2867:
+  CommandMailbox->SCSI_10.RequestSenseBusAddress = Command->V2.RequestSenseDMA;$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseBusAddress>
#384: FILE: drivers/block/DAC960.c:2867:
+  CommandMailbox->SCSI_10.RequestSenseBusAddress = Command->V2.RequestSenseDMA;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/block/DAC960.c:2870:
+  CommandMailbox->SCSI_10.RequestSenseSize = sizeof(DAC960_SCSI_RequestSense_T);$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseSize>
#389: FILE: drivers/block/DAC960.c:2870:
+  CommandMailbox->SCSI_10.RequestSenseSize = sizeof(DAC960_SCSI_RequestSense_T);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/block/DAC960.c:2881:
+  if (SegCount == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#399: FILE: drivers/block/DAC960.c:2881:
+  if (SegCount == 1)
     {

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_BusAddress64_T>
#405: FILE: drivers/block/DAC960.c:2886:
+	(DAC960_BusAddress64_T)sg_dma_address(ScatterList);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/block/DAC960.c:2894:
+      DAC960_V2_ScatterGatherSegment_T *ScatterGatherList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/block/DAC960.c:2895:
+      int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/block/DAC960.c:2897:
+      if (SegCount > 2)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#422: FILE: drivers/block/DAC960.c:2897:
+      if (SegCount > 2)
 	{

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: drivers/block/DAC960.c:2899:
+          ScatterGatherList = Command->V2.ScatterGatherList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/block/DAC960.c:2899:
+          ScatterGatherList = Command->V2.ScatterGatherList;$

CHECK:CAMELCASE: Avoid CamelCase: <ExtendedScatterGather>
#430: FILE: drivers/block/DAC960.c:2903:
+		.ExtendedScatterGather.ScatterGatherList0Length = SegCount;

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherList0Length>
#430: FILE: drivers/block/DAC960.c:2903:
+		.ExtendedScatterGather.ScatterGatherList0Length = SegCount;

CHECK:CAMELCASE: Avoid CamelCase: <DataTransferMemoryAddress>
#439: FILE: drivers/block/DAC960.c:2909:
+	ScatterGatherList = CommandMailbox->SCSI_10.DataTransferMemoryAddress

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/block/DAC960.c:2912:
+      for (i = 0; i < SegCount; i++, ScatterList++, ScatterGatherList++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#465: FILE: drivers/block/DAC960.c:2912:
+      for (i = 0; i < SegCount; i++, ScatterList++, ScatterGatherList++) {
+		ScatterGatherList->SegmentDataPointer =

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ByteCount64_T>
#469: FILE: drivers/block/DAC960.c:2916:
+			(DAC960_ByteCount64_T)sg_dma_len(ScatterList);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/block/DAC960.c:2917:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/block/DAC960.c:2937:
+  if (RequestQueue == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 5)
#487: FILE: drivers/block/DAC960.c:2937:
+  if (RequestQueue == NULL)
+     return false;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!RequestQueue"
#487: FILE: drivers/block/DAC960.c:2937:
+  if (RequestQueue == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/block/DAC960.c:2938:
+     return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/block/DAC960.c:2940:
+  while (true) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#490: FILE: drivers/block/DAC960.c:2940:
+  while (true) {
+      if (blk_queue_empty(RequestQueue))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/block/DAC960.c:2941:
+      if (blk_queue_empty(RequestQueue))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#491: FILE: drivers/block/DAC960.c:2941:
+      if (blk_queue_empty(RequestQueue))
+          return false;

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: drivers/block/DAC960.c:2942:
+          return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/block/DAC960.c:2942:
+          return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/block/DAC960.c:2946:
+      if (Command != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#498: FILE: drivers/block/DAC960.c:2946:
+      if (Command != NULL)
+          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "Command"
#498: FILE: drivers/block/DAC960.c:2946:
+      if (Command != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: drivers/block/DAC960.c:2947:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/block/DAC960.c:2947:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/block/DAC960.c:2949:
+      if (!WaitForCommand)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#501: FILE: drivers/block/DAC960.c:2949:
+      if (!WaitForCommand)
+          return false;

CHECK:CAMELCASE: Avoid CamelCase: <WaitForCommand>
#501: FILE: drivers/block/DAC960.c:2949:
+      if (!WaitForCommand)

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: drivers/block/DAC960.c:2950:
+          return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/block/DAC960.c:2950:
+          return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/block/DAC960.c:2953:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: drivers/block/DAC960.c:2954:
+  if (rq_data_dir(Request) == READ)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#508: FILE: drivers/block/DAC960.c:2954:
+  if (rq_data_dir(Request) == READ)
     Command->CommandType = DAC960_ReadCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/block/DAC960.c:2956:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#511: FILE: drivers/block/DAC960.c:2956:
+  else
+    Command->CommandType = DAC960_WriteCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/block/DAC960.c:2957:
+    Command->CommandType = DAC960_WriteCommand;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_WriteCommand>
#512: FILE: drivers/block/DAC960.c:2957:
+    Command->CommandType = DAC960_WriteCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/block/DAC960.c:2962:
+  Command->Request = Request;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ProcessCompletedRequest>
#531: FILE: drivers/block/DAC960.c:3010:
+static inline void DAC960_ProcessCompletedRequest(DAC960_Command_T *Command,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/block/DAC960.c:3011:
+static inline void DAC960_ProcessCompletedRequest(DAC960_Command_T *Command,
 						 boolean SuccessfulIO)

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_CommandType_T>
#538: FILE: drivers/block/DAC960.c:3013:
+	DAC960_CommandType_T CommandType = Command->CommandType;

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#541: FILE: drivers/block/DAC960.c:3016:
+	int UpToDate;
 	    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <UpToDate>
#541: FILE: drivers/block/DAC960.c:3016:
+	int UpToDate;

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#543: FILE: drivers/block/DAC960.c:3018:
+	UpToDate = 0;
 	^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <SuccessfulIO>
#544: FILE: drivers/block/DAC960.c:3019:
+	if (SuccessfulIO == true)

CHECK:BOOL_COMPARISON: Using comparison to true is error prone
#544: FILE: drivers/block/DAC960.c:3019:
+	if (SuccessfulIO == true)

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#545: FILE: drivers/block/DAC960.c:3020:
+		UpToDate = 1;
 		^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/block/DAC960.c:3027:
+	if (CommandType == DAC960_ReadCommand ||
+		CommandType == DAC960_ReadRetryCommand)

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ReadRetryCommand>
#552: FILE: drivers/block/DAC960.c:3027:
+		CommandType == DAC960_ReadRetryCommand)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/block/DAC960.c:3033:
+	pci_unmap_sg(Command->PciDevice, Command->V1.ScatterList,
+		Command->SegmentCount, DmaDirection);

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#565: FILE: drivers/block/DAC960.c:3040:
+	 while (end_that_request_first(Request, UpToDate, Command->BlockCount));
 	                                        ^^^^^^^^

WARNING:TABSTOP: Statements should start on a tabstop
#565: FILE: drivers/block/DAC960.c:3040:
+	 while (end_that_request_first(Request, UpToDate, Command->BlockCount));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#565: FILE: drivers/block/DAC960.c:3040:
+	 while (end_that_request_first(Request, UpToDate, Command->BlockCount));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <BlockCount>
#565: FILE: drivers/block/DAC960.c:3040:
+	 while (end_that_request_first(Request, UpToDate, Command->BlockCount));

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: drivers/block/DAC960.c:3042:
+ ^I end_that_request_last(Request);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#567: FILE: drivers/block/DAC960.c:3042:
+ ^I end_that_request_last(Request);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/block/DAC960.c:3042:
+ ^I end_that_request_last(Request);$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#569: FILE: drivers/block/DAC960.c:3044:
+	if (Command->Completion != NULL)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Completion>
#569: FILE: drivers/block/DAC960.c:3044:
+	if (Command->Completion != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "Command->Completion"
#569: FILE: drivers/block/DAC960.c:3044:
+	if (Command->Completion != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_PartitionNumber>
#579: FILE: drivers/block/DAC960.c:3053:
+	return DAC960_PartitionNumber(Command->Request->rq_dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/block/DAC960.c:3111:
+^I^I Command->Request->sector, $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#603: FILE: drivers/block/DAC960.c:3132:
       if (CommandStatus == DAC960_V1_NormalCompletion)
[...]
+		DAC960_ProcessCompletedRequest(Command, true);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/block/DAC960.c:3136:
+      else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#607: FILE: drivers/block/DAC960.c:3136:
+      else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||
[...]
+	   */

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#607: FILE: drivers/block/DAC960.c:3136:
+      else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_IrrecoverableDataError>
#607: FILE: drivers/block/DAC960.c:3136:
+      else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: drivers/block/DAC960.c:3137:
+      else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||
+		CommandStatus == DAC960_V1_BadDataEncountered)

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_BadDataEncountered>
#608: FILE: drivers/block/DAC960.c:3137:
+		CommandStatus == DAC960_V1_BadDataEncountered)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#610: FILE: drivers/block/DAC960.c:3139:
 	{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#663: FILE: drivers/block/DAC960.c:3153:
+	  printk("V1_ProcessCompletedCommand: I/O error on read/write\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#725: FILE: drivers/block/DAC960.c:3171:
+	printk("DAC960_ProcessCompletedCommand: RetryCommand not done yet\n");

CHECK:CAMELCASE: Avoid CamelCase: <SenseErrors>
#734: FILE: drivers/block/DAC960.c:3909:
+	       SenseErrors[Command->V2.RequestSense->SenseKey], CommandName);

CHECK:CAMELCASE: Avoid CamelCase: <SenseKey>
#734: FILE: drivers/block/DAC960.c:3909:
+	       SenseErrors[Command->V2.RequestSense->SenseKey], CommandName);

CHECK:CAMELCASE: Avoid CamelCase: <CommandName>
#734: FILE: drivers/block/DAC960.c:3909:
+	       SenseErrors[Command->V2.RequestSense->SenseKey], CommandName);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#758: FILE: drivers/block/DAC960.c:4182:
       if (CommandStatus == DAC960_V2_NormalCompletion)
[...]
+		DAC960_ProcessCompletedRequest(Command, true);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/block/DAC960.c:4186:
+      else if (Command->V2.RequestSense->SenseKey == DAC960_SenseKey_MediumError)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#762: FILE: drivers/block/DAC960.c:4186:
+      else if (Command->V2.RequestSense->SenseKey == DAC960_SenseKey_MediumError)
[...]
+	   */

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SenseKey_MediumError>
#762: FILE: drivers/block/DAC960.c:4186:
+      else if (Command->V2.RequestSense->SenseKey == DAC960_SenseKey_MediumError)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: drivers/block/DAC960.c:4188:
+^I  $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#764: FILE: drivers/block/DAC960.c:4188:
 	{
+	  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: drivers/block/DAC960.c:4190:
+^I   * Don't know yet how to handle this case.  $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#811: FILE: drivers/block/DAC960.c:4196:
+	  printk("V1_ProcessCompletedCommand: I/O error on read/write\n");

WARNING:TABSTOP: Statements should start on a tabstop
#818: FILE: drivers/block/DAC960.c:4202:
+	  if (Command->V2.RequestSense->SenseKey != DAC960_SenseKey_NotReady)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#818: FILE: drivers/block/DAC960.c:4202:
+	  if (Command->V2.RequestSense->SenseKey != DAC960_SenseKey_NotReady)
 	    DAC960_V2_ReadWriteError(Command);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SenseKey_NotReady>
#818: FILE: drivers/block/DAC960.c:4202:
+	  if (Command->V2.RequestSense->SenseKey != DAC960_SenseKey_NotReady)

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: drivers/block/DAC960.c:4207:
+          DAC960_ProcessCompletedRequest(Command, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: drivers/block/DAC960.c:4207:
+          DAC960_ProcessCompletedRequest(Command, false);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#880: FILE: drivers/block/DAC960.c:4213:
+	printk("DAC960_V2_ProcessCompletedCommand: retries not coded yet\n");

CHECK:CAMELCASE: Avoid CamelCase: <DataTransferBuffer>
#911: FILE: drivers/block/DAC960.c:5541:
+			     DataTransferBuffer, DataTransferLength)) {

CHECK:CAMELCASE: Avoid CamelCase: <DataTransferLength>
#911: FILE: drivers/block/DAC960.c:5541:
+			     DataTransferBuffer, DataTransferLength)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: drivers/block/DAC960.c:5544:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: drivers/block/DAC960.c:5544:
+            }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#928: FILE: drivers/block/DAC960.h:115:
+/*
+  Virtual_to_Bus32 maps from Kernel Virtual Addresses to 32 Bit PCI Bus

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <Virtual_to_Bus32>
#932: FILE: drivers/block/DAC960.h:119:
+static inline DAC960_BusAddress32_T Virtual_to_Bus32(void *VirtualAddress)

CHECK:CAMELCASE: Avoid CamelCase: <VirtualAddress>
#932: FILE: drivers/block/DAC960.h:119:
+static inline DAC960_BusAddress32_T Virtual_to_Bus32(void *VirtualAddress)

CHECK:SPACING: No space is necessary after a cast
#934: FILE: drivers/block/DAC960.h:121:
+  return (DAC960_BusAddress32_T) virt_to_bus(VirtualAddress);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: drivers/block/DAC960.h:121:
+  return (DAC960_BusAddress32_T) virt_to_bus(VirtualAddress);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#937: FILE: drivers/block/DAC960.h:124:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#939: FILE: drivers/block/DAC960.h:126:
+/*
+  Bus32_to_Virtual maps from 32 Bit PCI Bus Addresses to Kernel Virtual

CHECK:CAMELCASE: Avoid CamelCase: <Bus32_to_Virtual>
#943: FILE: drivers/block/DAC960.h:130:
+static inline void *Bus32_to_Virtual(DAC960_BusAddress32_T BusAddress)

CHECK:SPACING: No space is necessary after a cast
#945: FILE: drivers/block/DAC960.h:132:
+  return (void *) bus_to_virt(BusAddress);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/block/DAC960.h:132:
+  return (void *) bus_to_virt(BusAddress);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#948: FILE: drivers/block/DAC960.h:135:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#950: FILE: drivers/block/DAC960.h:137:
+/*
+  Virtual_to_Bus64 maps from Kernel Virtual Addresses to 64 Bit PCI Bus

CHECK:CAMELCASE: Avoid CamelCase: <Virtual_to_Bus64>
#954: FILE: drivers/block/DAC960.h:141:
+static inline DAC960_BusAddress64_T Virtual_to_Bus64(void *VirtualAddress)

CHECK:SPACING: No space is necessary after a cast
#956: FILE: drivers/block/DAC960.h:143:
+  return (DAC960_BusAddress64_T) virt_to_bus(VirtualAddress);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: drivers/block/DAC960.h:143:
+  return (DAC960_BusAddress64_T) virt_to_bus(VirtualAddress);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#959: FILE: drivers/block/DAC960.h:146:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: drivers/block/DAC960.h:2317:
+  IO_Request_T *Request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: drivers/block/DAC960.h:2318:
+  struct pci_dev *PciDevice;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: drivers/block/DAC960.h:2324:
+      DAC960_V1_ScatterGatherSegment_T *ScatterGatherList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: drivers/block/DAC960.h:2325:
+      dma_addr_t ScatterGatherListDMA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: drivers/block/DAC960.h:2326:
+      struct scatterlist ScatterList[DAC960_V1_ScatterGatherLimit];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: drivers/block/DAC960.h:2335:
+      DAC960_V2_ScatterGatherSegment_T *ScatterGatherList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: drivers/block/DAC960.h:2336:
+      dma_addr_t ScatterGatherListDMA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: drivers/block/DAC960.h:2337:
+      DAC960_SCSI_RequestSense_T *RequestSense;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: drivers/block/DAC960.h:2338:
+      dma_addr_t RequestSenseDMA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/block/DAC960.h:2339:
+      struct scatterlist ScatterList[DAC960_V2_ScatterGatherLimit];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: drivers/block/DAC960.h:2359:
+  PCI_Device_T  *PCIDevice;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: drivers/block/DAC960.h:2401:
+  struct pci_pool *ScatterGatherPool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: drivers/block/DAC960.h:2487:
+      struct pci_pool *RequestSensePool;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: drivers/block/DAC960.h:2542:
+        used to mutex on the controller structure during initialization,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1052: FILE: drivers/block/DAC960.h:2551:
+  spin_lock_irqsave(&Controller->queue_lock, *ProcessorFlags);$

CHECK:CAMELCASE: Avoid CamelCase: <ProcessorFlags>
#1052: FILE: drivers/block/DAC960.h:2551:
+  spin_lock_irqsave(&Controller->queue_lock, *ProcessorFlags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: drivers/block/DAC960.h:2563:
+  spin_unlock_irqrestore(&Controller->queue_lock, *ProcessorFlags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: drivers/block/DAC960.h:2600:
+  spin_lock_irqsave(&Controller->queue_lock, *ProcessorFlags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: drivers/block/DAC960.h:2613:
+  spin_unlock_irqrestore(&Controller->queue_lock, *ProcessorFlags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: drivers/block/DAC960.h:4254:
+static void DAC960_V2_QueueReadWriteCommand(DAC960_Command_T *); $

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_QueueReadWriteCommand>
#1091: FILE: drivers/block/DAC960.h:4254:
+static void DAC960_V2_QueueReadWriteCommand(DAC960_Command_T *); 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432224.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 186 warnings, 117 checks, 1016 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432224.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
