WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#133: 
diff -urN -X dontdiff linux-2.6.8.1-mm4.orig/include/linux/rcupdate.h linux-2.6.8.1-mm4/include/linux/rcupdate.h

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#179: FILE: include/linux/rcupdate.h:88:
+	return(!rcu_batch_before((rcu_batch&~RCU_NEXT_PENDING), batch));
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: include/linux/rcupdate.h:124:
+^Ilong  ^I       ^Ibatch;^I^I/* batch # for current RCU batch */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: include/linux/rcupdate.h:148:
+extern void rcu_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: include/linux/rcupdate.h:149:
+extern void rcu_restart_cpu(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/linux/rcupdate.h:150:
+extern void rcu_quiescent(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: include/linux/rcupdate.h:151:
+extern void rcu_poll(int cpu);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#306: FILE: include/linux/rcupdate.h:155:
+#define INLINE static inline

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/linux/rcupdate.h:160:
+extern void rcu_read_lock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/linux/rcupdate.h:161:
+extern void rcu_read_unlock(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#410: FILE: init/main.c:651:
+	extern int spawn_krcud(void);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#430: FILE: kernel/rcupdate.c:33:
+ * ^IThis is a experimental version which uses explicit synchronization$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: kernel/rcupdate.c:60:
+ *^IRCU_NEXT_PENDING $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: kernel/rcupdate.c:61:
+ * ^I^Iused to request that another batch should be $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: kernel/rcupdate.c:61:
+ * ^I^Iused to request that another batch should be $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#464: FILE: kernel/rcupdate.c:70:
+long rcu_batch = (-300*RCU_INCREMENT)+RCU_COMPLETE;
                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#464: FILE: kernel/rcupdate.c:70:
+long rcu_batch = (-300*RCU_INCREMENT)+RCU_COMPLETE;
                                      ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#476: FILE: kernel/rcupdate.c:78:
+} rcu_state ____cacheline_maxaligned_in_smp =
+	  { .rcu_cpu_mask = CPU_MASK_NONE };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: kernel/rcupdate.c:86:
+long rcu_max_count = 256;^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#493: FILE: kernel/rcupdate.c:87:
+unsigned long rcu_max_time = HZ/10;
                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#509: FILE: kernel/rcupdate.c:103:
+	long	batch, new, last;
+	do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#512: FILE: kernel/rcupdate.c:106:
+			return(batch & (RCU_COMPLETE|RCU_NEXT_PENDING));
 			                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#516: FILE: kernel/rcupdate.c:110:
+	return(last & (RCU_COMPLETE|RCU_NEXT_PENDING));
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: kernel/rcupdate.c:199:
+^I^Iif (rcu_set_state(RCU_NEXT_PENDING) == RCU_COMPLETE) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#649: FILE: kernel/rcupdate.c:252:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: kernel/rcupdate.c:280:
+^Ifor (cpu = first_cpu(cpu_online_map); cpu < NR_CPUS; $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#733: FILE: kernel/rcupdate.c:280:
+	for (cpu = first_cpu(cpu_online_map); cpu < NR_CPUS; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: kernel/rcupdate.c:289:
+ * rcu_quiescent() is called from rcu_read_unlock() when a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: kernel/rcupdate.c:306:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: kernel/rcupdate.c:312:
+^Ifor (cpu = first_cpu(cpu_online_map); cpu < NR_CPUS; $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#788: FILE: kernel/rcupdate.c:312:
+	for (cpu = first_cpu(cpu_online_map); cpu < NR_CPUS; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#796: FILE: kernel/rcupdate.c:320:
+^I^I */ $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#797: FILE: kernel/rcupdate.c:321:
+		if ((flags = r->flags) == IN_RCU_READ_LOCK)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#798: FILE: kernel/rcupdate.c:322:
+^I^I^Iflags = cmpxchg(&r->flags, IN_RCU_READ_LOCK, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: kernel/rcupdate.c:323:
+			flags = cmpxchg(&r->flags, IN_RCU_READ_LOCK, 
+				IN_RCU_READ_LOCK | DO_RCU_COMPLETION);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: kernel/rcupdate.c:349:
+ * thread which sets the second bit must call rcu_start_batch().  $

WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#845: FILE: kernel/rcupdate.c:352:
+ * the bit and be sure that only a single thread trys to start the batch.
                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#846: FILE: kernel/rcupdate.c:353:
+ * $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#853: FILE: kernel/rcupdate.c:360:
+	BUG_ON((batch & (RCU_COMPLETE|RCU_NEXT_PENDING)) !=

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#853: FILE: kernel/rcupdate.c:360:
+	BUG_ON((batch & (RCU_COMPLETE|RCU_NEXT_PENDING)) !=
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#854: FILE: kernel/rcupdate.c:361:
+		(RCU_COMPLETE|RCU_NEXT_PENDING));
 		             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: kernel/rcupdate.c:366:
+^I * rcu_read_lock/rcu_read_unlock critical sections need to $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#897: FILE: kernel/rcupdate.c:383:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: kernel/rcupdate.c:422:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1006: FILE: kernel/rcupdate.c:437:
+ * Poll rcu_timestamp to start a RCU batch if there are $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1018: FILE: kernel/rcupdate.c:445:
+	if (rcu_timestamp && time_after(jiffies,(rcu_timestamp+rcu_max_time))) {
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1018: FILE: kernel/rcupdate.c:445:
+	if (rcu_timestamp && time_after(jiffies,(rcu_timestamp+rcu_max_time))) {
 	                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1019: FILE: kernel/rcupdate.c:446:
+^I^Iif (rcu_set_state(RCU_NEXT_PENDING) == RCU_COMPLETE) $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1023: FILE: kernel/rcupdate.c:450:
+	rcu_timer.expires = jiffies + (rcu_max_time/2?:1);
 	                                           ^

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#1023: FILE: kernel/rcupdate.c:450:
+	rcu_timer.expires = jiffies + (rcu_max_time/2?:1);
 	                                             ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1028: FILE: kernel/rcupdate.c:454:
+static void __devinit rcu_online_cpu(int cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1057: FILE: kernel/rcupdate.c:466:
+^Ireturn(r->done.head || $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1058: FILE: kernel/rcupdate.c:467:
+	return(r->done.head || 
+		(r->cur.head && rcu_batch_complete(r->batch)) ||

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1063: FILE: kernel/rcupdate.c:471:
+static int krcud(void * __bind_cpu)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1067: FILE: kernel/rcupdate.c:473:
+	int cpu = (int)(long) __bind_cpu;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1086: FILE: kernel/rcupdate.c:489:
+			/* Preempt disable stops cpu going offline.
+			   If already offline, we'll be on wrong CPU:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1087: FILE: kernel/rcupdate.c:490:
+			   don't process */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1115: FILE: kernel/rcupdate.c:516:
+static int __devinit rcu_cpu_notify(struct notifier_block *nfb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1116: FILE: kernel/rcupdate.c:517:
+static int __devinit rcu_cpu_notify(struct notifier_block *nfb,
+				  unsigned long action,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1129: FILE: kernel/rcupdate.c:529:
+			printk("krcud for %i failed\n", cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: kernel/rcupdate.c:533:
+  ^I^Ir->krcud = p;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1133: FILE: kernel/rcupdate.c:533:
+  ^I^Ir->krcud = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: kernel/rcupdate.c:533:
+  ^I^Ir->krcud = p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: kernel/rcupdate.c:534:
+ ^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1134: FILE: kernel/rcupdate.c:534:
+ ^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1134: FILE: kernel/rcupdate.c:534:
+ ^I^Ibreak;$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1140: FILE: kernel/rcupdate.c:540:
+		/* Unbind so it can run.  Fall thru. */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: kernel/rcupdate.c:549:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1152: FILE: kernel/rcupdate.c:549:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: kernel/rcupdate.c:549:
+ ^I}$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1163: FILE: kernel/rcupdate.c:560:
+	void *cpu = (void *)(long)smp_processor_id();
+	rcu_cpu_notify(&rcu_nb, CPU_UP_PREPARE, cpu);

WARNING:TYPO_SPELLING: 'throught' may be misspelled - perhaps 'thought'?
#1182: FILE: kernel/rcupdate.c:577:
+	 * fall throught the cracks on local timer shielded cpus.
 	        ^^^^^^^^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1182: FILE: kernel/rcupdate.c:577:
+	 * fall throught the cracks on local timer shielded cpus.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1186: FILE: kernel/rcupdate.c:581:
+	rcu_timer.expires = jiffies + (rcu_max_time/2?:1);
 	                                           ^

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#1186: FILE: kernel/rcupdate.c:581:
+	rcu_timer.expires = jiffies + (rcu_max_time/2?:1);
 	                                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1190: FILE: kernel/rcupdate.c:585:
 
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1211: FILE: kernel/sched.c:39:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1221: FILE: kernel/sched.c:2275:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1232: FILE: kernel/sched.c:2590:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1245: FILE: kernel/softirq.c:96:
+#if 0

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255199.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 30 warnings, 25 checks, 1082 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255199.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
