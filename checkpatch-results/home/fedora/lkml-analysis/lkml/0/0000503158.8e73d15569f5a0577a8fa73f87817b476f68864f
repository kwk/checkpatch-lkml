WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#58: FILE: ide/hpt366.c:2:
+ * linux/drivers/ide/hpt366.c		Version 0.22	20 Sep 2001

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: ide/hpt366.c:16:
+ * - the HPT370's state machine can get confused. reset it before each dma $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: ide/hpt366.c:19:
+ * - check for busmaster state at end of dma. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: ide/hpt366.c:28:
+ * ^IAdrian Sun <a.sun@sun.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: ide/hpt366.c:34:
+ * ^IDuncan Laurie <void@sun.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: ide/hpt366.c:39:
+ * On hpt366: $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: ide/hpt366.c:42:
+ * ^IMike Waychison <crlf@sun.com>$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#104: FILE: ide/hpt366.c:60:
+#include <asm/uaccess.h>

WARNING:IF_1: Consider removing the #if 1 and its #endif
#259: FILE: ide/hpt366.c:229:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: ide/hpt366.c:232:
+        {       XFER_UDMA_5,    0x12446231      },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: ide/hpt366.c:232:
+        {       XFER_UDMA_5,    0x12446231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: ide/hpt366.c:233:
+        {       XFER_UDMA_4,    0x12446231      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: ide/hpt366.c:233:
+        {       XFER_UDMA_4,    0x12446231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: ide/hpt366.c:234:
+        {       XFER_UDMA_3,    0x126c6231      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: ide/hpt366.c:234:
+        {       XFER_UDMA_3,    0x126c6231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: ide/hpt366.c:235:
+        {       XFER_UDMA_2,    0x12486231      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: ide/hpt366.c:235:
+        {       XFER_UDMA_2,    0x12486231      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: ide/hpt366.c:236:
+        {       XFER_UDMA_1,    0x124c6233      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: ide/hpt366.c:236:
+        {       XFER_UDMA_1,    0x124c6233      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: ide/hpt366.c:237:
+        {       XFER_UDMA_0,    0x12506297      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: ide/hpt366.c:237:
+        {       XFER_UDMA_0,    0x12506297      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: ide/hpt366.c:239:
+        {       XFER_MW_DMA_2,  0x22406c31      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: ide/hpt366.c:239:
+        {       XFER_MW_DMA_2,  0x22406c31      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: ide/hpt366.c:240:
+        {       XFER_MW_DMA_1,  0x22406c33      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: ide/hpt366.c:240:
+        {       XFER_MW_DMA_1,  0x22406c33      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: ide/hpt366.c:241:
+        {       XFER_MW_DMA_0,  0x22406c97      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: ide/hpt366.c:241:
+        {       XFER_MW_DMA_0,  0x22406c97      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: ide/hpt366.c:243:
+        {       XFER_PIO_4,     0x06414e31      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: ide/hpt366.c:243:
+        {       XFER_PIO_4,     0x06414e31      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: ide/hpt366.c:244:
+        {       XFER_PIO_3,     0x06414e42      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: ide/hpt366.c:244:
+        {       XFER_PIO_3,     0x06414e42      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: ide/hpt366.c:245:
+        {       XFER_PIO_2,     0x06414e53      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: ide/hpt366.c:245:
+        {       XFER_PIO_2,     0x06414e53      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: ide/hpt366.c:246:
+        {       XFER_PIO_1,     0x06814e93      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: ide/hpt366.c:246:
+        {       XFER_PIO_1,     0x06814e93      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: ide/hpt366.c:247:
+        {       XFER_PIO_0,     0x06814ea7      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: ide/hpt366.c:247:
+        {       XFER_PIO_0,     0x06814ea7      },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: ide/hpt366.c:248:
+        {       0,              0x06814ea7      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: ide/hpt366.c:248:
+        {       0,              0x06814ea7      }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: ide/hpt366.c:261:
+^I{       XFER_MW_DMA_1,  0x2480fa77       }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: ide/hpt366.c:300:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: ide/hpt366.c:304:
+^I$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#397: FILE: ide/hpt366.c:350:
+byte hpt366_proc = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: ide/hpt366.c:353:
+extern char *ide_xfer_verbose (byte xfer_rate);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#400: FILE: ide/hpt366.c:353:
+extern char *ide_xfer_verbose (byte xfer_rate);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#443: FILE: ide/hpt366.c:363:
+	char *chipset_nums[] = {"366", "366", "368", "370", "370A"};

WARNING:SPLIT_STRING: quoted string split across lines
#447: FILE: ide/hpt366.c:367:
+	p += sprintf(p, "\n                             "
+		"HighPoint HPT366/368/370\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#460: FILE: ide/hpt366.c:380:
+		p += sprintf(p, "--------------- Primary Channel "
+				"--------------- Secondary Channel "

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: ide/hpt366.c:381:
+				"--------------- Secondary Channel "
+				"--------------\n");

WARNING:SPLIT_STRING: quoted string split across lines
#467: FILE: ide/hpt366.c:387:
+		p += sprintf(p, "Enabled:        %s"
+				"                             %s\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: ide/hpt366.c:393:
+			u8 cbl;
+			cbl = inb_p(iobase + 0x7b);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#478: FILE: ide/hpt366.c:398:
+			p += sprintf(p, "Cable:          ATA-%d"
+					"                          ATA-%d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#485: FILE: ide/hpt366.c:405:
+		p += sprintf(p, "--------------- drive0 --------- drive1 "
+				"------- drive0 ---------- drive1 -------\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: ide/hpt366.c:406:
+^I^Ip += sprintf(p, "DMA capable:    %s              %s" $

WARNING:SPLIT_STRING: quoted string split across lines
#487: FILE: ide/hpt366.c:407:
+		p += sprintf(p, "DMA capable:    %s              %s" 
+				"            %s               %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: ide/hpt366.c:408:
+^I^I^I(c0 & 0x20) ? "yes" : "no ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: ide/hpt366.c:410:
+^I^I^I(c1 & 0x20) ? "yes" : "no ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: ide/hpt366.c:415:
+^I^I^I/* older revs don't have these registers mapped $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#496: FILE: ide/hpt366.c:416:
+			 * into io space */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#503: FILE: ide/hpt366.c:423:
+			p += sprintf(p, "Mode:           %s             %s"
+					"           %s              %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: ide/hpt366.c:424:
+^I^I^I^I(c0 & 0x10) ? "UDMA" : (c0 & 0x20) ? "DMA " : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: ide/hpt366.c:435:
+^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#534: FILE: ide/hpt366.c:476:
+static unsigned int pci_bus_clock_list (byte speed, struct chipset_bus_clock_list_entry * chipset_table)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#534: FILE: ide/hpt366.c:476:
+static unsigned int pci_bus_clock_list (byte speed, struct chipset_bus_clock_list_entry * chipset_table)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#534: FILE: ide/hpt366.c:476:
+static unsigned int pci_bus_clock_list (byte speed, struct chipset_bus_clock_list_entry * chipset_table)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#546: FILE: ide/hpt366.c:485:
+static void hpt366_tune_chipset (ide_drive_t *drive, byte speed)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: ide/hpt366.c:498:
+^I * Disable the "fast interrupt" prediction. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: ide/hpt366.c:531:
+static void hpt370_tune_chipset (ide_drive_t *drive, byte speed)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: ide/hpt366.c:539:
+^Istruct pci_dev *dev ^I= HWIF(drive)->pci_dev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: ide/hpt366.c:543:
+^I * don't holdoff on interrupts. (== 0x01 despite what the docs say) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: ide/hpt366.c:560:
+^Ilist_conf = pci_bus_clock_list(speed, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: ide/hpt366.c:566:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#654: FILE: ide/hpt366.c:567:
+	if (speed < XFER_MW_DMA_0) {
+		list_conf &= ~0x80000000; /* Disable on-chip PIO FIFO/buffer */
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: ide/hpt366.c:585:
+                hpt366_tune_chipset(drive, speed);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: ide/hpt366.c:585:
+                hpt366_tune_chipset(drive, speed);$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#715: FILE: ide/hpt366.c:817:
+			/* fall through to a reset */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#757: FILE: ide/hpt366.c:849:
+				udelay(20); /* wait a little */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: ide/hpt366.c:852:
+^I^I^Iif ((dma_stat & 0x01) == 0) $

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#764: FILE: ide/hpt366.c:856:
+			/* fallthrough */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: ide/hpt366.c:860:
+^I^I^Ipci_read_config_byte(hwif->pci_dev, reginfo, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: ide/hpt366.c:861:
+^I^I^I^I^I     &dma_stat); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: ide/hpt366.c:862:
+^I^I^Iprintk("%s: %d bytes in FIFO\n", drive->name, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#770: FILE: ide/hpt366.c:862:
+			printk("%s: %d bytes in FIFO\n", drive->name, 

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#773: FILE: ide/hpt366.c:865:
+			udelay(10);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: ide/hpt366.c:868:
+^I^I^Idma_stat = inb(dma_base + 2); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#777: FILE: ide/hpt366.c:869:
+			outb(dma_stat | 0x6, dma_base+2); /* clear errors */
 			                             ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#778: FILE: ide/hpt366.c:870:
+			/* fallthrough */

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: ide/hpt366.c:873:
+^I        case ide_dma_begin:$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#784: FILE: ide/hpt366.c:876:
+			udelay(10);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#802: FILE: ide/hpt366.c:894:
+	 * to prevent drives having problems with 40-pin cables. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: ide/hpt366.c:897:
+^I/* set up the PLL. we need to adjust it so that it's stable. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#806: FILE: ide/hpt366.c:898:
+	 * freq = Tpll * 192 / Tpci */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#809: FILE: ide/hpt366.c:901:
+	if (freq < 0x9c) {
+	  pll = F_LOW_PCI_33;

CHECK:BRACES: braces {} should be used on all arms of this statement
#809: FILE: ide/hpt366.c:901:
+	if (freq < 0x9c) {
[...]
+	} else if (freq < 0xb0)
[...]
+	else if (freq < 0xc8) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#811: FILE: ide/hpt366.c:903:
+	  dev->sysdata = (void *) thirty_three_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#812: FILE: ide/hpt366.c:904:
+	  printk("HPT370: using 33MHz PCI clock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#813: FILE: ide/hpt366.c:905:
+	} else if (freq < 0xb0)
+	  pll = F_LOW_PCI_40;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#815: FILE: ide/hpt366.c:907:
+	else if (freq < 0xc8) {
+	  pll = F_LOW_PCI_50;

CHECK:SPACING: No space is necessary after a cast
#817: FILE: ide/hpt366.c:909:
+	  dev->sysdata = (void *) fifty_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#818: FILE: ide/hpt366.c:910:
+	  printk("HPT370: using 50MHz PCI clock\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#819: FILE: ide/hpt366.c:911:
+	} else {
+	  pll = F_LOW_PCI_66;

CHECK:SPACING: No space is necessary after a cast
#821: FILE: ide/hpt366.c:913:
+	  dev->sysdata = (void *) sixty_six_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#822: FILE: ide/hpt366.c:914:
+	  printk("HPT370: using 66MHz PCI clock\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: ide/hpt366.c:916:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#829: FILE: ide/hpt366.c:921:
+	 * on PRST/SRST when the HPT state engine gets reset. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: ide/hpt366.c:922:
+^Iif (dev->sysdata) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: ide/hpt366.c:924:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#834: FILE: ide/hpt366.c:926:
+	/* adjust PLL based upon PCI clock, enable it, and wait for
+	   stabilization. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#834: FILE: ide/hpt366.c:926:
+	   stabilization. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: ide/hpt366.c:939:
+^I^I^I^I^Ipci_read_config_byte(dev, 0x5b, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: ide/hpt366.c:945:
+^I^I^I^Ipci_write_config_dword(dev, 0x5c, $

CHECK:SPACING: No space is necessary after a cast
#856: FILE: ide/hpt366.c:948:
+				dev->sysdata = (void *) fifty_base_hpt370;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#857: FILE: ide/hpt366.c:949:
+				printk("HPT370: using 50MHz internal PLL\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#866: FILE: ide/hpt366.c:958:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: ide/hpt366.c:962:
+^Ipci_write_config_byte(dev, 0x50, 0x37); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: ide/hpt366.c:963:
+^Ipci_write_config_byte(dev, 0x54, 0x37); $

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#872: FILE: ide/hpt366.c:964:
+	udelay(100);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: ide/hpt366.c:990:
+^Iif (pci_rev_check_hpt3xx(dev)) $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#922: FILE: ide/hpt366.c:1010:
+	if (hwif->channel) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: ide/hpt366.c:1024:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: ide/hpt366.c:1043:
+^Iif (hwif->channel) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: ide/hpt366.c:1046:
+^I^Iresetmask = 0x80; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: ide/hpt366.c:1047:
+^I} else { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#972: FILE: ide/hpt366.c:1058:
+	 * make sure that the drive knows that it has failed if it's off */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1020: FILE: ide/hpt366.c:1104:
+		hwif->serialized = hwif->mate->serialized = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1026: FILE: ide/hpt366.c:1110:
+		 * drives on each channel */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1057: FILE: drivers/ide/serverworks.c:2:
+ * linux/drivers/ide/serverworks.c		Version 0.3	26 Oct 2001

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1104: FILE: drivers/ide/serverworks.c:104:
+static byte svwks_revision = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1113: FILE: drivers/ide/serverworks.c:116:
+	u8  reg54, c0=0, c1=0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1113: FILE: drivers/ide/serverworks.c:116:
+	u8  reg54, c0=0, c1=0;
 	                   ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1119: FILE: drivers/ide/serverworks.c:131:
 	switch(bmide_dev->device) {
[...]
+		case PCI_DEVICE_ID_SERVERWORKS_OSB4IDE:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPLIT_STRING: quoted string split across lines
#1123: FILE: drivers/ide/serverworks.c:134:
+			p += sprintf(p, "\n                            "
+				     "ServerWorks CSB5 Chipset (rev %02x)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1130: FILE: drivers/ide/serverworks.c:139:
+			p += sprintf(p, "\n                            "
+				     "ServerWorks OSB4 Chipset (rev %02x)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1136: FILE: drivers/ide/serverworks.c:144:
+			p += sprintf(p, "\n                            "
+				     "ServerWorks %04x Chipset (rev %02x)\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1186: FILE: drivers/ide/serverworks.c:321:
+			csb5_pio     |= (pio << (4*drive->dn));
 			                          ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1258: FILE: drivers/ide/serverworks.c:420:
+^Iint ultra100 ^I= (ultra66 && svwks_revision >= SVWKS_CSB5_REVISION_NEW) ? 1 : 0;$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1264: FILE: drivers/ide/serverworks.c:505:
 	switch (func) {
[...]
+		default:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/ide/serverworks.c:530:
+		isa_dev = pci_find_device(PCI_VENDOR_ID_SERVERWORKS,
+			  PCI_DEVICE_ID_SERVERWORKS_OSB4, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1346: FILE: drivers/ide/serverworks.c:576:
+	struct pci_dev *dev = hwif->pci_dev;
+	if (dev->subsystem_vendor == PCI_VENDOR_ID_DELL &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1361: FILE: drivers/ide/serverworks.c:590:
+static unsigned int __init ata66_svwks_cobalt (ide_hwif_t *hwif)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1364: FILE: drivers/ide/serverworks.c:593:
+	struct pci_dev *dev = hwif->pci_dev;
+	if (dev->subsystem_vendor == PCI_VENDOR_ID_SUN &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1384: FILE: drivers/ide/serverworks.c:611:
+		return ata66_svwks_cobalt (hwif);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000503158.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 71 warnings, 13 checks, 1298 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000503158.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
