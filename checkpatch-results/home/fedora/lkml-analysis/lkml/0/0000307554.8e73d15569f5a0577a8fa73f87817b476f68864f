ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#34: 
--- a/drivers/base/Makefile	Fri Jan 30 12:20:30 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: drivers/base/dmapool.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#63: FILE: drivers/base/dmapool.c:4:
+#include <asm/io.h>		/* Needed for i386 to build */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#78: FILE: drivers/base/dmapool.c:19:
+	spinlock_t		lock;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#83: FILE: drivers/base/dmapool.c:24:
+	char			name [32];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#92: FILE: drivers/base/dmapool.c:33:
+	unsigned		in_use;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#93: FILE: drivers/base/dmapool.c:34:
+	unsigned long		bitmap [0];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: drivers/base/dmapool.c:41:
+static DECLARE_MUTEX (pools_lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: drivers/base/dmapool.c:44:
+show_pools (struct device *dev, char *buf)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#105: FILE: drivers/base/dmapool.c:46:
+	unsigned		temp, size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: drivers/base/dmapool.c:53:
+	temp = snprintf (next, size, "poolinfo - 0.1\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: drivers/base/dmapool.c:57:
+	down (&pools_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: drivers/base/dmapool.c:58:
+	list_for_each (i, &dev->dma_pools) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: drivers/base/dmapool.c:60:
+		unsigned	pages = 0, blocks = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: drivers/base/dmapool.c:62:
+		pool = list_entry (i, struct dma_pool, pools);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: drivers/base/dmapool.c:64:
+		list_for_each (j, &pool->page_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: drivers/base/dmapool.c:67:
+			page = list_entry (j, struct dma_page, page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: drivers/base/dmapool.c:73:
+		temp = snprintf (next, size, "%-16s %4u %4Zu %4Zu %2u\n",

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#132: FILE: drivers/base/dmapool.c:73:
+		temp = snprintf (next, size, "%-16s %4u %4Zu %4Zu %2u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: drivers/base/dmapool.c:74:
+		temp = snprintf (next, size, "%-16s %4u %4Zu %4Zu %2u\n",
+				pool->name,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: drivers/base/dmapool.c:80:
+	up (&pools_lock);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pools' to 'pools_show'
#142: FILE: drivers/base/dmapool.c:83:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: drivers/base/dmapool.c:84:
+static DEVICE_ATTR (pools, S_IRUGO, show_pools, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#143: FILE: drivers/base/dmapool.c:84:
+static DEVICE_ATTR (pools, S_IRUGO, show_pools, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: drivers/base/dmapool.c:108:
+dma_pool_create (const char *name, struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/base/dmapool.c:109:
+dma_pool_create (const char *name, struct device *dev,
+	size_t size, size_t align, size_t allocation)

CHECK:BRACES: braces {} should be used on all arms of this statement
#174: FILE: drivers/base/dmapool.c:115:
+	if (size == 0)
[...]
+	else if (size < align)
[...]
+	else if ((size % align) != 0) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#183: FILE: drivers/base/dmapool.c:124:
+	if (allocation == 0) {
[...]
+	} else if (allocation < size)
[...]

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#184: FILE: drivers/base/dmapool.c:125:
+		if (PAGE_SIZE < size)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: drivers/base/dmapool.c:133:
+	if (!(retval = kmalloc (sizeof *retval, SLAB_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#192: FILE: drivers/base/dmapool.c:133:
+	if (!(retval = kmalloc (sizeof *retval, SLAB_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SIZEOF_PARENTHESIS: sizeof *retval should be sizeof(*retval)
#192: FILE: drivers/base/dmapool.c:133:
+	if (!(retval = kmalloc (sizeof *retval, SLAB_KERNEL)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: drivers/base/dmapool.c:136:
+	strlcpy (retval->name, name, sizeof retval->name);

WARNING:SIZEOF_PARENTHESIS: sizeof retval->name should be sizeof(retval->name)
#195: FILE: drivers/base/dmapool.c:136:
+	strlcpy (retval->name, name, sizeof retval->name);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#195: FILE: drivers/base/dmapool.c:136:
+	strlcpy (retval->name, name, sizeof retval->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/base/dmapool.c:140:
+	INIT_LIST_HEAD (&retval->page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: drivers/base/dmapool.c:141:
+	spin_lock_init (&retval->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: drivers/base/dmapool.c:145:
+	init_waitqueue_head (&retval->waitq);

CHECK:BRACES: braces {} should be used on all arms of this statement
#206: FILE: drivers/base/dmapool.c:147:
+	if (dev) {
[...]
+	} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: drivers/base/dmapool.c:148:
+		down (&pools_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/base/dmapool.c:149:
+		if (list_empty (&dev->dma_pools))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&dev->dma_pools'
#208: FILE: drivers/base/dmapool.c:149:
+		if (list_empty (&dev->dma_pools))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#209: FILE: drivers/base/dmapool.c:150:
+			device_create_file (dev, &dev_attr_pools);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: drivers/base/dmapool.c:152:
+		list_add (&retval->pools, &dev->dma_pools);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: drivers/base/dmapool.c:153:
+		up (&pools_lock);

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: drivers/base/dmapool.c:154:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: drivers/base/dmapool.c:155:
+		INIT_LIST_HEAD (&retval->pools);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: drivers/base/dmapool.c:160:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: drivers/base/dmapool.c:162:
+pool_alloc_page (struct dma_pool *pool, int mem_flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: drivers/base/dmapool.c:169:
+	mapsize *= sizeof (long);

CHECK:SPACING: No space is necessary after a cast
#230: FILE: drivers/base/dmapool.c:171:
+	page = (struct dma_page *) kmalloc (mapsize + sizeof *page, mem_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: drivers/base/dmapool.c:171:
+	page = (struct dma_page *) kmalloc (mapsize + sizeof *page, mem_flags);

WARNING:SIZEOF_PARENTHESIS: sizeof *page should be sizeof(*page)
#230: FILE: drivers/base/dmapool.c:171:
+	page = (struct dma_page *) kmalloc (mapsize + sizeof *page, mem_flags);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#230: FILE: drivers/base/dmapool.c:171:
+	page = (struct dma_page *) kmalloc (mapsize + sizeof *page, mem_flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: drivers/base/dmapool.c:174:
+	page->vaddr = dma_alloc_coherent (pool->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/base/dmapool.c:175:
+	page->vaddr = dma_alloc_coherent (pool->dev,
+					    pool->allocation,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: drivers/base/dmapool.c:179:
+		memset (page->bitmap, 0xff, mapsize);	// bit set == free

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/base/dmapool.c:181:
+		memset (page->vaddr, POOL_POISON_FREED, pool->allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: drivers/base/dmapool.c:183:
+		list_add (&page->page_list, &pool->page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/base/dmapool.c:186:
+		kfree (page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#251: FILE: drivers/base/dmapool.c:192:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/base/dmapool.c:194:
+is_page_busy (int blocks, unsigned long *bitmap)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: drivers/base/dmapool.c:205:
+pool_free_page (struct dma_pool *pool, struct dma_page *page)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: drivers/base/dmapool.c:210:
+	memset (page->vaddr, POOL_POISON_FREED, pool->allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: drivers/base/dmapool.c:212:
+	dma_free_coherent (pool->dev, pool->allocation, page->vaddr, dma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: drivers/base/dmapool.c:213:
+	list_del (&page->page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/base/dmapool.c:214:
+	kfree (page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: drivers/base/dmapool.c:217:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#286: FILE: drivers/base/dmapool.c:227:
+dma_pool_destroy (struct dma_pool *pool)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: drivers/base/dmapool.c:229:
+	down (&pools_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: drivers/base/dmapool.c:230:
+	list_del (&pool->pools);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: drivers/base/dmapool.c:231:
+	if (pool->dev && list_empty (&pool->dev->dma_pools))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&pool->dev->dma_pools'
#290: FILE: drivers/base/dmapool.c:231:
+	if (pool->dev && list_empty (&pool->dev->dma_pools))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: drivers/base/dmapool.c:232:
+		device_remove_file (pool->dev, &dev_attr_pools);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: drivers/base/dmapool.c:233:
+	up (&pools_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: drivers/base/dmapool.c:235:
+	while (!list_empty (&pool->page_list)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: drivers/base/dmapool.c:237:
+		struct dma_page		*page;
+		page = list_entry (pool->page_list.next,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: drivers/base/dmapool.c:237:
+		page = list_entry (pool->page_list.next,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/base/dmapool.c:238:
+		page = list_entry (pool->page_list.next,
+				struct dma_page, page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: drivers/base/dmapool.c:239:
+		if (is_page_busy (pool->blocks_per_page, page->bitmap)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#298: FILE: drivers/base/dmapool.c:239:
+		if (is_page_busy (pool->blocks_per_page, page->bitmap)) {
[...]
+		} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#299: FILE: drivers/base/dmapool.c:240:
+			printk (KERN_ERR "dma_pool_destroy %s/%s, %p busy\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: drivers/base/dmapool.c:240:
+			printk (KERN_ERR "dma_pool_destroy %s/%s, %p busy\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_pool_destroy', this function's name, in a string
#299: FILE: drivers/base/dmapool.c:240:
+			printk (KERN_ERR "dma_pool_destroy %s/%s, %p busy\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: drivers/base/dmapool.c:244:
+			list_del (&page->page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: drivers/base/dmapool.c:245:
+			kfree (page);

CHECK:BRACES: Unbalanced braces around else statement
#305: FILE: drivers/base/dmapool.c:246:
+		} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: drivers/base/dmapool.c:247:
+			pool_free_page (pool, page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: drivers/base/dmapool.c:250:
+	kfree (pool);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: drivers/base/dmapool.c:253:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: drivers/base/dmapool.c:265:
+dma_pool_alloc (struct dma_pool *pool, int mem_flags, dma_addr_t *handle)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: drivers/base/dmapool.c:275:
+	spin_lock_irqsave (&pool->lock, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: drivers/base/dmapool.c:276:
+	list_for_each (entry, &pool->page_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: drivers/base/dmapool.c:278:
+		int		i;
+		page = list_entry (entry, struct dma_page, page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: drivers/base/dmapool.c:278:
+		page = list_entry (entry, struct dma_page, page_list);

WARNING:TYPO_SPELLING: 'cachable' may be misspelled - perhaps 'cacheable'?
#338: FILE: drivers/base/dmapool.c:279:
+		/* only cachable accesses here ... */
 		        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#342: FILE: drivers/base/dmapool.c:283:
+			if (page->bitmap [map] == 0)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#344: FILE: drivers/base/dmapool.c:285:
+			block = ffz (~ page->bitmap [map]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: drivers/base/dmapool.c:285:
+			block = ffz (~ page->bitmap [map]);

ERROR:SPACING: space prohibited after that '~' (ctx:BxW)
#344: FILE: drivers/base/dmapool.c:285:
+			block = ffz (~ page->bitmap [map]);
 			             ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#346: FILE: drivers/base/dmapool.c:287:
+				clear_bit (block, &page->bitmap [map]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: drivers/base/dmapool.c:287:
+				clear_bit (block, &page->bitmap [map]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: drivers/base/dmapool.c:294:
+	if (!(page = pool_alloc_page (pool, SLAB_ATOMIC))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#353: FILE: drivers/base/dmapool.c:294:
+	if (!(page = pool_alloc_page (pool, SLAB_ATOMIC))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: drivers/base/dmapool.c:296:
+			DECLARE_WAITQUEUE (wait, current);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/base/dmapool.c:299:
+			add_wait_queue (&pool->waitq, &wait);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: drivers/base/dmapool.c:300:
+			spin_unlock_irqrestore (&pool->lock, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: drivers/base/dmapool.c:302:
+			schedule_timeout (POOL_TIMEOUT_JIFFIES);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: drivers/base/dmapool.c:304:
+			remove_wait_queue (&pool->waitq, &wait);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#370: FILE: drivers/base/dmapool.c:311:
+	clear_bit (0, &page->bitmap [0]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: drivers/base/dmapool.c:311:
+	clear_bit (0, &page->bitmap [0]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: drivers/base/dmapool.c:318:
+	memset (retval, POOL_POISON_ALLOCATED, pool->size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#380: FILE: drivers/base/dmapool.c:321:
+	spin_unlock_irqrestore (&pool->lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#384: FILE: drivers/base/dmapool.c:325:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: drivers/base/dmapool.c:327:
+pool_find_page (struct dma_pool *pool, dma_addr_t dma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: drivers/base/dmapool.c:333:
+	spin_lock_irqsave (&pool->lock, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: drivers/base/dmapool.c:334:
+	list_for_each (entry, &pool->page_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#394: FILE: drivers/base/dmapool.c:335:
+		page = list_entry (entry, struct dma_page, page_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: drivers/base/dmapool.c:343:
+	spin_unlock_irqrestore (&pool->lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#406: FILE: drivers/base/dmapool.c:347:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: drivers/base/dmapool.c:358:
+dma_pool_free (struct dma_pool *pool, void *vaddr, dma_addr_t dma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#423: FILE: drivers/base/dmapool.c:364:
+	if ((page = pool_find_page (pool, dma)) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: drivers/base/dmapool.c:364:
+	if ((page = pool_find_page (pool, dma)) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#424: FILE: drivers/base/dmapool.c:365:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p/%lx (bad dma)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: drivers/base/dmapool.c:365:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p/%lx (bad dma)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_pool_free', this function's name, in a string
#424: FILE: drivers/base/dmapool.c:365:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p/%lx (bad dma)\n",

CHECK:SPACING: No space is necessary after a cast
#426: FILE: drivers/base/dmapool.c:367:
+			pool->name, vaddr, (unsigned long) dma);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#437: FILE: drivers/base/dmapool.c:378:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p (bad vaddr)/%Lx\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: drivers/base/dmapool.c:378:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p (bad vaddr)/%Lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_pool_free', this function's name, in a string
#437: FILE: drivers/base/dmapool.c:378:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p (bad vaddr)/%Lx\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#437: FILE: drivers/base/dmapool.c:378:
+		printk (KERN_ERR "dma_pool_free %s/%s, %p (bad vaddr)/%Lx\n",

CHECK:SPACING: No space is necessary after a cast
#439: FILE: drivers/base/dmapool.c:380:
+			pool->name, vaddr, (unsigned long long) dma);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#442: FILE: drivers/base/dmapool.c:383:
+	if (page->bitmap [map] & (1UL << block)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#443: FILE: drivers/base/dmapool.c:384:
+		printk (KERN_ERR "dma_pool_free %s/%s, dma %Lx already free\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#443: FILE: drivers/base/dmapool.c:384:
+		printk (KERN_ERR "dma_pool_free %s/%s, dma %Lx already free\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_pool_free', this function's name, in a string
#443: FILE: drivers/base/dmapool.c:384:
+		printk (KERN_ERR "dma_pool_free %s/%s, dma %Lx already free\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#443: FILE: drivers/base/dmapool.c:384:
+		printk (KERN_ERR "dma_pool_free %s/%s, dma %Lx already free\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#448: FILE: drivers/base/dmapool.c:389:
+	memset (vaddr, POOL_POISON_FREED, pool->size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: drivers/base/dmapool.c:392:
+	spin_lock_irqsave (&pool->lock, flags);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#453: FILE: drivers/base/dmapool.c:394:
+	set_bit (block, &page->bitmap [map]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#453: FILE: drivers/base/dmapool.c:394:
+	set_bit (block, &page->bitmap [map]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#454: FILE: drivers/base/dmapool.c:395:
+	if (waitqueue_active (&pool->waitq))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&pool->waitq'
#454: FILE: drivers/base/dmapool.c:395:
+	if (waitqueue_active (&pool->waitq))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#454: FILE: drivers/base/dmapool.c:395:
+	if (waitqueue_active (&pool->waitq))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#455: FILE: drivers/base/dmapool.c:396:
+		wake_up (&pool->waitq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#461: FILE: drivers/base/dmapool.c:402:
+	spin_unlock_irqrestore (&pool->lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#464: FILE: drivers/base/dmapool.c:405:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#465: FILE: drivers/base/dmapool.c:406:
+EXPORT_SYMBOL (dma_pool_create);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: drivers/base/dmapool.c:406:
+EXPORT_SYMBOL (dma_pool_create);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#466: FILE: drivers/base/dmapool.c:407:
+EXPORT_SYMBOL (dma_pool_destroy);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: drivers/base/dmapool.c:407:
+EXPORT_SYMBOL (dma_pool_destroy);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#467: FILE: drivers/base/dmapool.c:408:
+EXPORT_SYMBOL (dma_pool_alloc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: drivers/base/dmapool.c:408:
+EXPORT_SYMBOL (dma_pool_alloc);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#468: FILE: drivers/base/dmapool.c:409:
+EXPORT_SYMBOL (dma_pool_free);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: drivers/base/dmapool.c:409:
+EXPORT_SYMBOL (dma_pool_free);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307554.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 118 warnings, 24 checks, 424 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307554.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
