WARNING:TYPO_SPELLING: 'paramaters' may be misspelled - perhaps 'parameters'?
#30: 
pointers passed as syscall paramaters because the compatibility syscall
                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'diferent' may be misspelled - perhaps 'different'?
#32: 
extension in general, but s390x is probably diferent).
                                            ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -ruN 2.5.63/arch/ia64/ia32/ia32_ioctl.c 2.5.63-iovec/arch/ia64/ia32/ia32_ioctl.c

CHECK:SPACING: No space is necessary after a cast
#64: FILE: arch/ia64/ia32/ia32_ioctl.c:103:
+	struct compat_iovec *uiov = (struct compat_iovec *) P(uptr32);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#73: FILE: arch/ia64/ia32/ia32_ioctl.c:138:
+	struct compat_iovec *uiov = (struct compat_iovec *) P(uptr32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#93: FILE: arch/ia64/ia32/sys_ia32.c:973:
+sys32_readv (int fd, struct compat_iovec *vector, u32 count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: arch/ia64/ia32/sys_ia32.c:992:
+sys32_writev (int fd, struct compat_iovec *vector, u32 count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: arch/ia64/ia32/sys_ia32.c:1244:
+verify_compat_iovec (struct msghdr *m, struct iovec *iov, char *address, int mode)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#200: FILE: arch/mips64/kernel/linux32.c:750:
+	if(verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))
 	                                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: arch/mips64/kernel/linux32.c:750:
+	if(verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#300: FILE: arch/parisc/kernel/sys_parisc32.c:940:
+	if(verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))
 	                                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#300: FILE: arch/parisc/kernel/sys_parisc32.c:940:
+	if(verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: arch/parisc/kernel/sys_parisc32.c:1177:
+static int verify_compat_iovec(struct msghdr *kern_msg, struct iovec *kern_iov,
 			  char *kern_address, int mode)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#390: FILE: arch/ppc64/kernel/sys_ppc32.c:115:
+	if (verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: arch/ppc64/kernel/sys_ppc32.c:2381:
+static int verify_compat_iovec(struct msghdr *kern_msg, struct iovec *kern_iov,
 			  char *kern_address, int mode)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#480: FILE: arch/s390x/kernel/linux32.c:926:
+	if (verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: arch/s390x/kernel/linux32.c:1976:
+static int verify_compat_iovec(struct msghdr *kern_msg, struct iovec *kern_iov,
 			  char *kern_address, int mode)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#579: FILE: arch/sparc64/kernel/sys_sparc32.c:901:
+	if (verify_area(VERIFY_READ, vector, sizeof(struct compat_iovec)*count))
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: arch/sparc64/kernel/sys_sparc32.c:2016:
+static int verify_compat_iovec(struct msghdr *kern_msg, struct iovec *kern_iov,
 			  char *kern_address, int mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: arch/sparc64/solaris/socket.c:321:
+static int verify_compat_iovec(struct msghdr *kern_msg, struct iovec *kern_iov,
 			  char *kern_address, int mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: arch/x86_64/ia32/socket32.c:87:
+static int verify_compat_iovec(struct msghdr *kern_msg, struct iovec *kern_iov,
 			  char *kern_address, int mode)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#765: FILE: arch/x86_64/ia32/sys_ia32.c:754:
+	if(verify_area(VERIFY_READ, iov32, sizeof(struct compat_iovec)*count))
 	                                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#765: FILE: arch/x86_64/ia32/sys_ia32.c:754:
+	if(verify_area(VERIFY_READ, iov32, sizeof(struct compat_iovec)*count))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#782: FILE: arch/x86_64/ia32/sys_ia32.c:802:
+	if ((iov = get_compat_iovec(vector, iovstack, count, VERIFY_WRITE, &ret)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#799: FILE: arch/x86_64/ia32/sys_ia32.c:820:
+	if ((iov = get_compat_iovec(vector, iovstack, count, VERIFY_READ, &ret)) == NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#817: FILE: include/asm-ia64/compat.h:37:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)(unsigned long)(x))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#836: FILE: include/asm-mips64/compat.h:20:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)(unsigned long)(x))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#855: FILE: include/asm-parisc/compat.h:33:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)(unsigned long)(x))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#874: FILE: include/asm-ppc64/compat.h:35:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)(unsigned long)(x))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#893: FILE: include/asm-s390x/compat.h:35:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)((unsigned long)((x) & 0x7FFFFFFFUL)))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#912: FILE: include/asm-sparc64/compat.h:35:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)(unsigned long)(x))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#931: FILE: include/asm-x86_64/compat.h:37:
+#define	COMPAT_UPTR_TO_PTR(x)	((void*)(unsigned long)(x))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000390306.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 6 warnings, 14 checks, 785 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000390306.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
