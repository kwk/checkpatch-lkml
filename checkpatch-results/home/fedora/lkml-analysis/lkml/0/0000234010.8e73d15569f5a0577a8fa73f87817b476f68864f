WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
From: Jeff Dike <jdike@addtoit.com>, Paolo 'Blaisorblade' Giarrusso<blaisorblade_spam@yahoo.it>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#58: FILE: arch/um/include/ptrace_user.h:18:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: arch/um/kernel/tt/syscall_user.c:73:
+	if(local_using_sysemu)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: arch/um/kernel/tt/tracer.c:337:
+				if(do_syscall(task, pid, local_using_sysemu))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#168: FILE: arch/um/kernel/tt/tracer.c:378:
+				else cont_type = pt_syscall_parm;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: arch/um/kernel/process_kern.c:415:
+static int proc_read_sysemu(char *buf, char **start, off_t offset, int size,int *eof, void *data)
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#315: FILE: arch/um/kernel/process_kern.c:423:
+static int proc_write_sysemu(struct file *file,const char *buf, unsigned long count,void *data)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#315: FILE: arch/um/kernel/process_kern.c:423:
+static int proc_write_sysemu(struct file *file,const char *buf, unsigned long count,void *data)
                                                                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: arch/um/kernel/process_kern.c:438:
+	struct proc_dir_entry *ent;
+	if (!sysemu_supported)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#335: FILE: arch/um/kernel/process_kern.c:443:
+	if (ent == NULL)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ent"
#335: FILE: arch/um/kernel/process_kern.c:443:
+	if (ent == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#337: FILE: arch/um/kernel/process_kern.c:445:
+		printk("Failed to register /proc/sysemu\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#338: FILE: arch/um/kernel/process_kern.c:446:
+		return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: arch/um/kernel/tt/include/tt.h:31:
+extern int do_syscall(void *task, int pid, int local_using_sysemu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234010.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 3 warnings, 3 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234010.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
