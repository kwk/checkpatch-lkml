WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
 drivers/scsi/libata-core.c        |  168 ++++++++++++++------------------------

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: Documentation/DocBook/libata.tmpl:130:
+^Ihas built a mask of the possible modes. This is passed to the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#160: FILE: drivers/scsi/libata-bmdma.c:738:
+			if(inb(bmdma + 2) & 0x80)
+			probe_ent->host_set_flags |= ATA_HOST_SIMPLEX;

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: drivers/scsi/libata-bmdma.c:738:
+			if(inb(bmdma + 2) & 0x80)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'class == ATA_DEV_ATA'
#276: FILE: drivers/scsi/libata-core.c:1145:
+	if ((class == ATA_DEV_ATA) != (ata_id_is_ata(id) | ata_id_is_cfa(id))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#475: FILE: drivers/scsi/libata-core.c:2683:
+		/* Apply cable rule here. Don't apply it early because when
+		   we handle hot plug the cable type can itself change */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#475: FILE: drivers/scsi/libata-core.c:2683:
+		   we handle hot plug the cable type can itself change */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#522: FILE: drivers/scsi/libata-core.c:4497:
+		printk(KERN_ERR "ata%u: no reset mechanism available\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: drivers/scsi/sata_mv.c:1384:
+^I^I */ $

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#630: FILE: include/linux/libata.h:164:
+	ATA_HOST_SIMPLEX	= (1 << 0),	/* Host is simplex, one DMA channel per host_set only */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: include/linux/libata.h:165:
+^I$

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#650: FILE: include/linux/libata.h:298:
+	int			simplex_claimed;	/* Keep seperate in case we
 	   			                	        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#651: FILE: include/linux/libata.h:299:
+	int			simplex_claimed;	/* Keep seperate in case we
+							   ever need to do this locked */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#651: FILE: include/linux/libata.h:299:
+							   ever need to do this locked */

WARNING:SPACING: Unnecessary space before function pointer arguments
#659: FILE: include/linux/libata.h:429:
+	unsigned long (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ata_port *' should also have an identifier name
#659: FILE: include/linux/libata.h:429:
+	unsigned long (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#659: FILE: include/linux/libata.h:429:
+	unsigned long (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#659: FILE: include/linux/libata.h:429:
+	unsigned long (*mode_filter) (const struct ata_port *, struct ata_device *, unsigned long);

WARNING:SPACING: Unnecessary space before function pointer arguments
#667: FILE: include/linux/libata.h:440:
+	void (*set_mode) (struct ata_port *ap);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 1 checks, 558 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088864.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
