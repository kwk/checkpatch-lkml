WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> > possibility that if size contains a value greater than what a signed int

WARNING:TYPO_SPELLING: 'allright' may be misspelled - perhaps 'all right'?
#90: 
Ok, that's allright then. Thank you for the explanation.
           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: arch/i386/mach-voyager/voyager_smp.c:966:
+flush_tlb_mm (struct mm_struct *mm)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: arch/x86_64/kernel/smp.c:293:
+void flush_tlb_mm (struct mm_struct *mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: drivers/oprofile/buffer_sync.c:233:
+static unsigned long lookup_dcookie(struct mm_struct *mm, unsigned long addr, off_t * offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#306: FILE: drivers/oprofile/buffer_sync.c:304:
+static void add_us_sample(struct mm_struct *mm, struct op_sample * s)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#315: FILE: drivers/oprofile/buffer_sync.c:329:
+static void add_sample(struct mm_struct *mm, struct op_sample * s, int in_kernel)

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: include/asm-arm26/rmap.h:40:
+        struct page *page = virt_to_page(ptep);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: include/asm-arm26/rmap.h:40:
+        struct page *page = virt_to_page(ptep);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#504: FILE: include/linux/mm.h:611:
+extern struct vm_area_struct *find_vma(struct mm_struct *mm, unsigned long addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#505: FILE: include/linux/mm.h:612:
+extern struct vm_area_struct *find_vma_prev(struct mm_struct *mm, unsigned long addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: include/linux/mm.h:613:
+extern struct vm_area_struct *find_vma_prev(struct mm_struct *mm, unsigned long addr,
 					     struct vm_area_struct **pprev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#508: FILE: include/linux/mm.h:614:
+extern int split_vma(struct mm_struct *mm, struct vm_area_struct *vma,

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#514: FILE: include/linux/mm.h:619:
+static inline struct vm_area_struct *find_vma_intersection(struct mm_struct *mm, unsigned long start_addr, unsigned long end_addr)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: include/linux/mm.h:621:
+	struct vm_area_struct *vma = find_vma(mm,start_addr);
 	                                        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#527: FILE: include/linux/mm.h:632:
+extern struct page *vmalloc_to_page(void *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#528: FILE: include/linux/mm.h:633:
+extern struct page *follow_page(struct mm_struct *mm, unsigned long address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: include/linux/mm.h:634:
+extern struct page *follow_page(struct mm_struct *mm, unsigned long address,
 		int write);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#618: FILE: include/linux/sched.h:678:
+extern struct mm_struct *mm_alloc(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#632: FILE: include/linux/sched.h:720:
+extern void wait_task_inactive(task_t *p);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#656: FILE: kernel/fork.c:273:
+static inline int dup_mmap(struct mm_struct *mm, struct mm_struct * oldmm)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#668: FILE: kernel/fork.c:363:
 }
+static inline int mm_alloc_pgd(struct mm_struct *mm)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#802: FILE: mm/mmap.c:150:
+static void validate_mm(struct mm_struct *mm) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#811: FILE: mm/mmap.c:287:
+__insert_vm_struct(struct mm_struct *mm, struct vm_area_struct * vma)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#881: FILE: mm/mmap.c:1325:
+	struct rb_node ** rb_link, *rb_parent;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#904: FILE: mm/mmap.c:1476:
+void insert_vm_struct(struct mm_struct *mm, struct vm_area_struct * vma)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#963: FILE: mm/nommu.c:544:
+struct vm_area_struct * find_vma(struct mm_struct *mm, unsigned long addr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: mm/swapfile.c:489:
+static int unuse_process(struct mm_struct *mm,
 			swp_entry_t entry, struct page* page)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000312625.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 6 warnings, 11 checks, 706 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000312625.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
