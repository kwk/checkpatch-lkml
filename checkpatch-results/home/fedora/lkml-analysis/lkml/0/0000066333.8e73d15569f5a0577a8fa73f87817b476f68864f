WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: drivers/char/eqnx/sst_misc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: drivers/char/eqnx/sst_misc.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#64: FILE: drivers/char/eqnx/sst_misc.c:14:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#70: FILE: drivers/char/eqnx/sst_misc.c:19:
boards

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: drivers/char/eqnx/sst_misc.c:52:
+/**********************************************************************
+/* module globals and defines

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#106: FILE: drivers/char/eqnx/sst_misc.c:53:
+/* module globals and defines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#108: FILE: drivers/char/eqnx/sst_misc.c:54:
+/**********************************************************************
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#137: FILE: drivers/char/eqnx/sst_misc.c:78:
+/**********************************************************************
+/* module function declarations

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#139: FILE: drivers/char/eqnx/sst_misc.c:79:
+/* module function declarations
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#141: FILE: drivers/char/eqnx/sst_misc.c:80:
+/**********************************************************************
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#148: FILE: drivers/char/eqnx/sst_misc.c:86:
+/**********************************************************************
+/* external variable and routines

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#150: FILE: drivers/char/eqnx/sst_misc.c:87:
+/* external variable and routines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#152: FILE: drivers/char/eqnx/sst_misc.c:88:
+/**********************************************************************
+

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#171: FILE: drivers/char/eqnx/sst_misc.c:107:
+	volatile struct icp_in_struct *icpi = mpc->mpc_icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#172: FILE: drivers/char/eqnx/sst_misc.c:108:
+	volatile struct cin_bnk_struct *icpb;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#178: FILE: drivers/char/eqnx/sst_misc.c:114:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_modem', this function's name, in a string
#179: FILE: drivers/char/eqnx/sst_misc.c:115:
+		dev_dbg(mpd->pdev, "eqnx_modem: mpd lock !locked\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_tty'
#206: FILE: drivers/char/eqnx/sst_misc.c:141:
+		if ((mpc->mpc_tty) && (mpc->mpc_tty->termios)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_tty->termios'
#206: FILE: drivers/char/eqnx/sst_misc.c:141:
+		if ((mpc->mpc_tty) && (mpc->mpc_tty->termios)) {

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#253: FILE: drivers/char/eqnx/sst_misc.c:185:
+static void inline megaparam_sigs(int chan, struct mpchan *mpc,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#254: FILE: drivers/char/eqnx/sst_misc.c:186:
+				  volatile struct termios *tiosp)

CHECK:BRACES: braces {} should be used on all arms of this statement
#260: FILE: drivers/char/eqnx/sst_misc.c:192:
+	if (tiosp->c_cflag & CLOCAL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#263: FILE: drivers/char/eqnx/sst_misc.c:195:
+	} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#272: FILE: drivers/char/eqnx/sst_misc.c:204:
+		return;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#272: FILE: drivers/char/eqnx/sst_misc.c:204:
+	} else

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#287: FILE: drivers/char/eqnx/sst_misc.c:219:
+static void inline megaparam_hwflow(struct mpchan *mpc,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#288: FILE: drivers/char/eqnx/sst_misc.c:220:
+				    volatile struct termios *tiosp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#290: FILE: drivers/char/eqnx/sst_misc.c:222:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#291: FILE: drivers/char/eqnx/sst_misc.c:223:
+	volatile struct icp_out_struct *icpo;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#303: FILE: drivers/char/eqnx/sst_misc.c:234:
+	/* set HW flow control settings.  Need to account for rs-422
+	if ((mpc->mpc_icp->lmx[mpc->mpc_lmxno].lmx_id != LMX_8E_422) &&

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#339: FILE: drivers/char/eqnx/sst_misc.c:265:
+static void inline megaparam_swflow(struct mpchan *mpc,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#340: FILE: drivers/char/eqnx/sst_misc.c:266:
+				    volatile struct termios *tiosp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#342: FILE: drivers/char/eqnx/sst_misc.c:268:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#343: FILE: drivers/char/eqnx/sst_misc.c:269:
+	volatile struct icp_out_struct *icpo;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#381: FILE: drivers/char/eqnx/sst_misc.c:305:
+		dev_dbg(mpd->dev, "megaparam: IXON disabled for device
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#403: FILE: drivers/char/eqnx/sst_misc.c:324:
+		dev_dbg(mpd->dev, "megaparam: IXOFF disabled for device
 		                            ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#420: FILE: drivers/char/eqnx/sst_misc.c:340:
+static u16 inline megaparam_icpbaud(struct mpchan *mpc, int val)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#463: FILE: drivers/char/eqnx/sst_misc.c:383:
+static void inline megaparam_speed(struct mpchan *mpc,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#464: FILE: drivers/char/eqnx/sst_misc.c:384:
+				   volatile struct termios *tiosp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#466: FILE: drivers/char/eqnx/sst_misc.c:386:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#467: FILE: drivers/char/eqnx/sst_misc.c:387:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#468: FILE: drivers/char/eqnx/sst_misc.c:388:
+	volatile struct cout_que_struct *icpq;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed < 1'
#483: FILE: drivers/char/eqnx/sst_misc.c:403:
+		if ((speed < 1) || (speed > 4))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed > 4'
#483: FILE: drivers/char/eqnx/sst_misc.c:403:
+		if ((speed < 1) || (speed > 4))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'speed >= 0'
#488: FILE: drivers/char/eqnx/sst_misc.c:408:
+	if ((speed >= 0) && (speed <= (B38400 + 4))) {

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#527: FILE: drivers/char/eqnx/sst_misc.c:446:
+static void inline megaparam_databits(struct mpchan *mpc,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#528: FILE: drivers/char/eqnx/sst_misc.c:447:
+				      volatile struct termios *tiosp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#530: FILE: drivers/char/eqnx/sst_misc.c:449:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#531: FILE: drivers/char/eqnx/sst_misc.c:450:
+	volatile struct icp_out_struct *icpo;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#580: FILE: drivers/char/eqnx/sst_misc.c:499:
+static void inline megaparam_parity(struct mpchan *mpc,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#581: FILE: drivers/char/eqnx/sst_misc.c:500:
+				    volatile struct termios *tiosp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#583: FILE: drivers/char/eqnx/sst_misc.c:502:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#584: FILE: drivers/char/eqnx/sst_misc.c:503:
+	volatile struct icp_out_struct *icpo;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: drivers/char/eqnx/sst_misc.c:587:
+ * eqnx_megaparam(chan)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: drivers/char/eqnx/sst_misc.c:588:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: drivers/char/eqnx/sst_misc.c:589:
+ * Map termio parameters into ICP control register settings.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/char/eqnx/sst_misc.c:590:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/char/eqnx/sst_misc.c:591:
+ * chan^I= device index$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/char/eqnx/sst_misc.c:592:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/char/eqnx/sst_misc.c:593:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/char/eqnx/sst_misc.c:594:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#695: FILE: drivers/char/eqnx/sst_misc.c:612:
+		dev_dbg(mpd->dev, "megaparam: mpd lock !locked\n");
 		                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/char/eqnx/sst_misc.c:627:
+ * megajam(mpc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/char/eqnx/sst_misc.c:628:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/char/eqnx/sst_misc.c:629:
+ * Jam an xon character into the output queue.  If the transmitter$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/char/eqnx/sst_misc.c:630:
+ * is idle, it's easy: just place the character in the output$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/char/eqnx/sst_misc.c:631:
+ * queue and start output.  In the more difficult case,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: drivers/char/eqnx/sst_misc.c:632:
+ * we must stop the transmitter, push the character into the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/char/eqnx/sst_misc.c:633:
+ * output next byte" register, and then restart normal output.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/char/eqnx/sst_misc.c:634:
+ *$

CHECK:SPACING: space preferred before that '*' (ctx:ExE)
#717: FILE: drivers/char/eqnx/sst_misc.c:634:
+ *
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/char/eqnx/sst_misc.c:635:
+ * mpc^I= pointer to channel structure.$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#718: FILE: drivers/char/eqnx/sst_misc.c:635:
+ * mpc	= pointer to channel structure.
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/char/eqnx/sst_misc.c:636:
+ *$

CHECK:SPACING: space preferred before that '*' (ctx:ExE)
#719: FILE: drivers/char/eqnx/sst_misc.c:636:
+ *
  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.
  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.
                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.
                             ^

ERROR:SPACING: space prohibited after that '*' (ctx:OxW)
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.
                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.
                                     ^

ERROR:SPACING: space prohibited after that '*' (ctx:OxW)
#720: FILE: drivers/char/eqnx/sst_misc.c:637:
+ * mpdev (board-level) lock ** MUST ** be held.
                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: drivers/char/eqnx/sst_misc.c:638:
+ */$

CHECK:SPACING: spaces preferred around that '*' (ctx:ExO)
#721: FILE: drivers/char/eqnx/sst_misc.c:638:
+ */
  ^

CHECK:SPACING: space preferred before that '/' (ctx:OxE)
#721: FILE: drivers/char/eqnx/sst_misc.c:638:
+ */
   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#724: FILE: drivers/char/eqnx/sst_misc.c:641:
+	volatile struct icp_out_struct *icpo = mpc->mpc_icpo;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#728: FILE: drivers/char/eqnx/sst_misc.c:645:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#742: FILE: drivers/char/eqnx/sst_misc.c:657:
+		dev_warn(mpc->mpc_mpd->dev, "megajam: send flow char ack
 		                                    ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#763: FILE: drivers/char/eqnx/sst_misc.c:677:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#765: FILE: drivers/char/eqnx/sst_misc.c:679:
+	volatile unsigned char *chan_ptr;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#770: FILE: drivers/char/eqnx/sst_misc.c:684:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_chnl_sync', this function's name, in a string
#771: FILE: drivers/char/eqnx/sst_misc.c:685:
+		dev_dbg(mpd->dev, "eqnx_chnl_sync: mpd lock !locked\n");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#776: FILE: drivers/char/eqnx/sst_misc.c:690:
+		icpg = (volatile union global_regs_u *)mpc->mpc_icpo;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icpg->ssp.gicp_chan
#777: FILE: drivers/char/eqnx/sst_misc.c:691:
+		chan_ptr = &(icpg->ssp.gicp_chan);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#781: FILE: drivers/char/eqnx/sst_misc.c:695:
+		icpg = (volatile union global_regs_u *)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icpg->ssp4.chan_ctr
#783: FILE: drivers/char/eqnx/sst_misc.c:697:
+		chan_ptr = &(icpg->ssp4.chan_ctr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#804: FILE: drivers/char/eqnx/sst_misc.c:718:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#805: FILE: drivers/char/eqnx/sst_misc.c:719:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#807: FILE: drivers/char/eqnx/sst_misc.c:721:
+	volatile u16 *frame_ptr, curval;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#811: FILE: drivers/char/eqnx/sst_misc.c:725:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eqnx_frame_wait', this function's name, in a string
#812: FILE: drivers/char/eqnx/sst_misc.c:726:
+		dev_dbg(mpc->mpc_mpd->dev, "eqnx_frame_wait: mpd lock "

WARNING:SPLIT_STRING: quoted string split across lines
#813: FILE: drivers/char/eqnx/sst_misc.c:727:
+		dev_dbg(mpc->mpc_mpd->dev, "eqnx_frame_wait: mpd lock "
+			"!locked\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#818: FILE: drivers/char/eqnx/sst_misc.c:732:
+		icpg = (volatile union global_regs_u *)(mpc->mpc_icpo);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#822: FILE: drivers/char/eqnx/sst_misc.c:736:
+		icpg = (volatile union global_regs_u *)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#824: FILE: drivers/char/eqnx/sst_misc.c:738:
+		icpo = (volatile struct icp_out_struct *)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icpo->cout_frame_ctr
#827: FILE: drivers/char/eqnx/sst_misc.c:740:
+		frame_ptr = &(icpo->cout_frame_ctr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000066333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 71 warnings, 18 checks, 796 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000066333.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
