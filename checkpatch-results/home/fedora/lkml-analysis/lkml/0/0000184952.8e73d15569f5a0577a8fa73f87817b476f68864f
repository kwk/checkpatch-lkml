WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: Documentation/page_owner.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#67: FILE: Documentation/page_owner.c:7:
+ * ./sort page_owner.txt sorted_page_owner.txt
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#83: FILE: Documentation/page_owner.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#98: FILE: Documentation/page_owner.c:38:
+		if (*curr == EOF) return -1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#124: FILE: Documentation/page_owner.c:64:
+	    len == list[list_size-1].len &&
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#125: FILE: Documentation/page_owner.c:65:
+	    memcmp(buf, list[list_size-1].txt, len) == 0) {
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#126: FILE: Documentation/page_owner.c:66:
+		list[list_size-1].num++;
 		              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: Documentation/page_owner.c:73:
+	list[list_size].txt = malloc(len+1);
 	                                ^

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: Documentation/page_owner.c:106:
+	for(;;) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: Documentation/page_owner.c:125:
+	for (i=count=0;i<list_size;i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: Documentation/page_owner.c:125:
+	for (i=count=0;i<list_size;i++) {
 	            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#185: FILE: Documentation/page_owner.c:125:
+	for (i=count=0;i<list_size;i++) {
 	              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#185: FILE: Documentation/page_owner.c:125:
+	for (i=count=0;i<list_size;i++) {
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#185: FILE: Documentation/page_owner.c:125:
+	for (i=count=0;i<list_size;i++) {
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#187: FILE: Documentation/page_owner.c:127:
+		    strcmp(list2[count-1].txt, list[i].txt) != 0) {
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#190: FILE: Documentation/page_owner.c:130:
+			list2[count-1].num += list[i].num;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#196: FILE: Documentation/page_owner.c:136:
+	for (i=0;i<count;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#196: FILE: Documentation/page_owner.c:136:
+	for (i=0;i<count;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#196: FILE: Documentation/page_owner.c:136:
+	for (i=0;i<count;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#196: FILE: Documentation/page_owner.c:136:
+	for (i=0;i<count;i++) {
 	                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#196: FILE: Documentation/page_owner.c:136:
+	for (i=0;i<count;i++) {
+		fprintf(fout, "%d times:\n%s\n", list2[i].num, list2[i].txt);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: fs/proc/proc_misc.c:579:
+	ret = snprintf(kbuf, 1024, "Page allocated via order %d, mask 0x%x\n",
+			page->order, page->gfp_mask);

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#256: FILE: fs/proc/proc_misc.c:589:
+	ret += snprintf(kbuf + ret, count -ret, "\n");
 	                                  ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#265: FILE: fs/proc/proc_misc.c:598:
+static struct file_operations proc_page_owner_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#278: FILE: fs/proc/proc_misc.c:682:
+	entry = create_proc_entry("page_owner", S_IWUSR | S_IRUGO, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: No space is necessary after a cast
#383: FILE: mm/page_alloc.c:957:
+	page->order = (int) order;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 5 warnings, 10 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184952.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
