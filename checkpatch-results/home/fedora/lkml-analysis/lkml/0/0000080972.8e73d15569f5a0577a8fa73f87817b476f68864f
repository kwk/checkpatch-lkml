WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#107: FILE: include/linux/utsname.h:5:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#120: FILE: include/linux/utsname.h:40:
+};
+extern struct uts_namespace init_uts_ns;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/linux/utsname.h:43:
+extern int copy_utsname(int flags, struct task_struct *tsk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: include/linux/utsname.h:44:
+extern void free_uts_ns(struct kref *kref);

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: include/linux/utsname.h:54:
+	struct uts_namespace *uts_ns = p->uts_ns;
+	if (uts_ns) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#149: FILE: include/linux/utsname.h:67:
+}
+static inline void put_uts_ns(struct uts_namespace *ns)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#152: FILE: include/linux/utsname.h:70:
+}
+static inline void exit_utsname(struct task_struct *p)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#179: FILE: init/Kconfig:169:
+config UTS_NS
+	bool "UTS Namespaces"
+	default n
+	help
+	  Support uts namespaces.  This allows containers, i.e.
+	  vservers, to use uts namespaces to provide different
+	  uts info for different servers.  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#279: FILE: kernel/fork.c:1068:
+	if ((retval = copy_utsname(clone_flags, p)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#316: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#321: FILE: kernel/utsname.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: kernel/utsname.c:33:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 5 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
