WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#84: 
diff -u linux_2_4/drivers/block/Config.in:1.1.1.44 linux_2_4/drivers/block/Config.in:1.1.1.44.4.1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#111: FILE: drivers/block/snap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#112: FILE: drivers/block/snap.c:2:
+/*
+   Copyright 2001 Jeff Garzik <jgarzik@mandrakesoft.com>

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/block/snap.c:4:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/block/snap.c:7:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/block/snap.c:9:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: drivers/block/snap.c:13:
+   * Wrap use of "%" operator, to prepare for 64-bit-sized blockdevs on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/block/snap.c:15:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/block/snap.c:21:
+#define MAX_SNAPDEVS^I16 $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#144: FILE: drivers/block/snap.c:34:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: drivers/block/snap.c:43:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sd->src.dev == dev'
#167: FILE: drivers/block/snap.c:57:
+		if ((sd->src.dev == dev) || (sd->snap_dev == dev))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sd->snap_dev == dev'
#167: FILE: drivers/block/snap.c:57:
+		if ((sd->src.dev == dev) || (sd->snap_dev == dev))

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: drivers/block/snap.c:95:
+		unsigned int in_log;
+		if (!bit_bh) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#206: FILE: drivers/block/snap.c:96:
+			printk(KERN_ERR "%s: cannot read log %u bitmap_blk %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/block/snap.c:108:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/block/snap.c:116:
+^I^I        struct buffer_head *src_bh)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/block/snap.c:116:
+static int snapshot_blk(struct snap_device *sd, request_queue_t *q,
+		        struct buffer_head *src_bh)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/block/snap.c:135:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: drivers/block/snap.c:138:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#248: FILE: drivers/block/snap.c:138:
+	if (sd->logs[log].free == 0) {
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/block/snap.c:142:
+			request_queue_t *sq = sd->src.q;
+			spin_lock_irq(&io_request_lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#259: FILE: drivers/block/snap.c:149:
+			printk(KERN_WARNING "%s: device full, ending snapshot\n", sd->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#277: FILE: drivers/block/snap.c:167:
+		printk(KERN_ERR "%s: memory alloc fail on srcdev blk %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#290: FILE: drivers/block/snap.c:180:
+		printk(KERN_ERR "%s: cannot read log %u bitmap_blk %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#303: FILE: drivers/block/snap.c:193:
+		printk(KERN_ERR "%s: cannot read log %u map_blk %lu\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#318: FILE: drivers/block/snap.c:208:
+		printk(KERN_ERR "%s: cannot getblk log %u data_blk %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: drivers/block/snap.c:224:
+^I$

CHECK:SPACING: No space is necessary after a cast
#337: FILE: drivers/block/snap.c:227:
+	map = (unsigned long *) map_bh->b_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/block/snap.c:233:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/block/snap.c:244:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/block/snap.c:247:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: drivers/block/snap.c:250:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/block/snap.c:265:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sd"
#380: FILE: drivers/block/snap.c:270:
+	if (sd == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#381: FILE: drivers/block/snap.c:271:
+		printk(KERN_ERR PFX "src request routed to us by unknown snap device\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: drivers/block/snap.c:274:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#386: FILE: drivers/block/snap.c:276:
+		printk(KERN_ERR "%s: wrong bh size\n", sd->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: drivers/block/snap.c:286:
+^I/* sanity check */^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#398: FILE: drivers/block/snap.c:288:
+		printk(KERN_ERR "%s: unknown rw mode %d\n", sd->name, rw);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/block/snap.c:303:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/block/snap.c:315:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#433: FILE: drivers/block/snap.c:323:
+	sd->src.q = sq = blk_get_queue(sd->src.dev);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/block/snap.c:324:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#460: FILE: drivers/block/snap.c:350:
+	printk(KERN_INFO "%s: %sing snapshot of %s\n",

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#467: FILE: drivers/block/snap.c:357:
+ * a read has occured on the snapshot blkdev, and we know
               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: drivers/block/snap.c:362:
+static int remap_to_logdev(struct snap_device *sd, unsigned int log,
+			  request_queue_t *q, int rw, struct buffer_head *bh)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#489: FILE: drivers/block/snap.c:379:
+		printk(KERN_ERR "%s: unable to read log %u block %lu\n",

CHECK:SPACING: No space is necessary after a cast
#496: FILE: drivers/block/snap.c:386:
+	map = (unsigned long *) map_bh->b_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#523: FILE: drivers/block/snap.c:413:
+		printk(KERN_ERR PFX "%s out of range\n", kdevname(bh->b_rdev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#534: FILE: drivers/block/snap.c:424:
+		printk(KERN_ERR "%s: request received for non-active sd\n", sd->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#539: FILE: drivers/block/snap.c:429:
+		printk(KERN_ERR "%s: non-READ[A] request\n", sd->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#544: FILE: drivers/block/snap.c:434:
+		printk(KERN_ERR "%s: wrong bh size\n", sd->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: drivers/block/snap.c:443:
+^I$

WARNING:TYPO_SPELLING: 'targetted' may be misspelled - perhaps 'targeted'?
#560: FILE: drivers/block/snap.c:450:
+	 * is targetted.
 	      ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: drivers/block/snap.c:476:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/block/snap.c:476:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#590: FILE: drivers/block/snap.c:480:
+static void snap_mkfs (struct snap_device *sd, unsigned int logidx,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/block/snap.c:484:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#597: FILE: drivers/block/snap.c:487:
+		struct buffer_head *bh = getblk(sd->logs[i].dev, i, blksz);
+		if (bh) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#605: FILE: drivers/block/snap.c:495:
+			printk(KERN_ERR "%s: cannot get blk %u\n", sd->name, i);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*log_buf)...) over kmalloc(sizeof(struct snap_log)...)
#625: FILE: drivers/block/snap.c:515:
+	log_buf = kmalloc(sizeof(struct snap_log) * n_log_fds, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#625: FILE: drivers/block/snap.c:515:
+	log_buf = kmalloc(sizeof(struct snap_log) * n_log_fds, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: drivers/block/snap.c:526:
+	sd->src.q = blk_get_queue (sd->src.dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: drivers/block/snap.c:530:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/block/snap.c:545:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#661: FILE: drivers/block/snap.c:551:
+		kdev_t logdev = sdii[i].inode->i_rdev;
+		sd->logs[i].dev = logdev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: drivers/block/snap.c:562:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#685: FILE: drivers/block/snap.c:575:
+		snap_mkfs (sd, i, bitmap_blocks);

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#687: FILE: drivers/block/snap.c:577:
+	DPRINTK(PFX "dev %s sucessfully registered\n", sd->name);
 	                    ^^^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#699: FILE: drivers/block/snap.c:589:
+static void snap_setup_dev_cleanup (unsigned int n_log_fds, struct file *src,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#732: FILE: drivers/block/snap.c:622:
+	if ((src = fget(setup->src_fd)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#733: FILE: drivers/block/snap.c:623:
+		printk(KERN_ERR "%s: bad file descriptor %d passed\n", sd->name, setup->src_fd);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#736: FILE: drivers/block/snap.c:626:
+	if ((inode_src = src->f_dentry->d_inode) == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: drivers/block/snap.c:627:
+		printk(PFX "huh? file descriptor %d contains no inode?\n", setup->src_fd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#742: FILE: drivers/block/snap.c:632:
+		printk(PFX "device is not a block device (duh)\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#747: FILE: drivers/block/snap.c:637:
+		printk(PFX "source device associated with another snapshot dev\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#768: FILE: drivers/block/snap.c:658:
+		logf = sdii[i].file = fget(setup->log_fd[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#770: FILE: drivers/block/snap.c:660:
+			printk(PFX "bad file descriptor %d passed\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#775: FILE: drivers/block/snap.c:665:
+		logi = sdii[i].inode = sdii[i].file->f_dentry->d_inode;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#777: FILE: drivers/block/snap.c:667:
+			printk(PFX "huh? file descriptor %d contains no inode?\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#783: FILE: drivers/block/snap.c:673:
+			printk(PFX "device is not a block device\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#788: FILE: drivers/block/snap.c:678:
+			printk(PFX "log device %d associated with another snapshot dev\n", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#793: FILE: drivers/block/snap.c:683:
+			printk(PFX "Can't write to read-only dev\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: drivers/block/snap.c:692:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#803: FILE: drivers/block/snap.c:693:
+	if ((ret = snap_new_dev(sd, inode_src->i_rdev, inode_src->i_bdev,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#805: FILE: drivers/block/snap.c:695:
+		printk(PFX "all booked up\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: drivers/block/snap.c:698:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: drivers/block/snap.c:746:
+static int snap_ioctl(struct inode *inode, struct file *file,
+		     unsigned int cmd, unsigned long arg)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != SNAP_SETUP_DEV'
#866: FILE: drivers/block/snap.c:756:
+	if ((cmd != SNAP_SETUP_DEV) && !sd->src.dev) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: drivers/block/snap.c:769:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#883: FILE: drivers/block/snap.c:773:
+			printk(PFX "dev already setup\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/block/snap.c:805:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/block/snap.c:833:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/block/snap.c:833:
+ $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#963: FILE: drivers/block/snap.c:853:
+#if 0 /* no write support */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#964: FILE: drivers/block/snap.c:854:
+		if ((ret = snap_open_write(sd)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#975: FILE: drivers/block/snap.c:865:
+		printk(PFX "%lukB available on disc\n", dev_size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#989: FILE: drivers/block/snap.c:879:
+		printk(PFX "write mode not supported\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#996: FILE: drivers/block/snap.c:886:
+		printk(PFX "max %d snapdevs supported\n", MAX_SNAPDEVS);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1064: FILE: drivers/block/snap.c:954:
+	struct snap_device *sd = &snap_devs[MINOR(dev)];
+	return sd->src.bdev->bd_op->check_media_change(dev);

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1067: FILE: drivers/block/snap.c:957:
+static struct block_device_operations snap_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#1068: FILE: drivers/block/snap.c:958:
+	open:			snap_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1069: FILE: drivers/block/snap.c:959:
+	release:		snap_close,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1069: FILE: drivers/block/snap.c:959:
+	release:		snap_close,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1070: FILE: drivers/block/snap.c:960:
+	ioctl:			snap_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1070: FILE: drivers/block/snap.c:960:
+	ioctl:			snap_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1071: FILE: drivers/block/snap.c:961:
+	check_media_change:	snap_media_change,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#1071: FILE: drivers/block/snap.c:961:
+	check_media_change:	snap_media_change,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: drivers/block/snap.c:969:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: drivers/block/snap.c:969:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1080: FILE: drivers/block/snap.c:970:
+static inline void snap_cleanup (void)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1083: FILE: drivers/block/snap.c:973:
+	if (snap_devs)
+		kfree(snap_devs);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1085: FILE: drivers/block/snap.c:975:
+	if (snap_sizes)
+		kfree(snap_sizes);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1087: FILE: drivers/block/snap.c:977:
+	if (snap_blksize)
+		kfree(snap_blksize);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1089: FILE: drivers/block/snap.c:979:
+	if (snap_readahead)
+		kfree(snap_readahead);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1105: FILE: drivers/block/snap.c:995:
+		printk("unable to register snap device\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1109: FILE: drivers/block/snap.c:999:
+		       S_IFBLK | S_IRUSR | S_IWUSR, &snap_ops, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1111: FILE: drivers/block/snap.c:1001:
+	snap_sizes = kmalloc(MAX_SNAPDEVS * sizeof(int), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!snap_sizes"
#1112: FILE: drivers/block/snap.c:1002:
+	if (snap_sizes == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1115: FILE: drivers/block/snap.c:1005:
+	snap_blksize = kmalloc(MAX_SNAPDEVS * sizeof(int), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!snap_blksize"
#1116: FILE: drivers/block/snap.c:1006:
+	if (snap_blksize == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1119: FILE: drivers/block/snap.c:1009:
+	snap_readahead = kmalloc(MAX_SNAPDEVS * sizeof(int), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!snap_readahead"
#1120: FILE: drivers/block/snap.c:1010:
+	if (snap_readahead == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1123: FILE: drivers/block/snap.c:1013:
+	snap_devs = kmalloc(MAX_SNAPDEVS * sizeof(struct snap_device), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!snap_devs"
#1124: FILE: drivers/block/snap.c:1014:
+	if (snap_devs == NULL)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1143: FILE: drivers/block/snap.c:1033:
+	printk(PFX "out of memory\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1145: FILE: drivers/block/snap.c:1035:
+^I^I ^I DEVFS_SPECIAL_BLK, 0));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1145: FILE: drivers/block/snap.c:1035:
+^I^I ^I DEVFS_SPECIAL_BLK, 0));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: drivers/block/snap.c:1035:
+	devfs_unregister(devfs_find_handle(NULL, MODNAME, 0, 0,
+		 	 DEVFS_SPECIAL_BLK, 0));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1147: FILE: drivers/block/snap.c:1037:
+	snap_cleanup ();

ERROR:CODE_INDENT: code indent should use tabs where possible
#1154: FILE: drivers/block/snap.c:1044:
+^I^I ^I DEVFS_SPECIAL_BLK, 0));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1154: FILE: drivers/block/snap.c:1044:
+^I^I ^I DEVFS_SPECIAL_BLK, 0));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: drivers/block/snap.c:1044:
+	devfs_unregister(devfs_find_handle(NULL, MODNAME, 0, 0,
+		 	 DEVFS_SPECIAL_BLK, 0));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1157: FILE: drivers/block/snap.c:1047:
+	snap_cleanup ();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1171: FILE: include/linux/snap.h:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1192: FILE: include/linux/snap.h:22:
+#define DPRINTK(fmt, args...) printk(KERN_NOTICE fmt, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1198: FILE: include/linux/snap.h:28:
+#define VPRINTK(fmt, args...) printk(KERN_NOTICE fmt, ##args)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1216: FILE: include/linux/snap.h:46:
+struct snap_stats
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1228: FILE: include/linux/snap.h:58:
+struct snap_setup
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1248: FILE: include/linux/snap.h:78:
+struct snap_dev_init_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1254: FILE: include/linux/snap.h:84:
+struct snap_src
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1266: FILE: include/linux/snap.h:96:
+struct snap_log
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1275: FILE: include/linux/snap.h:105:
+struct snap_device
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1280: FILE: include/linux/snap.h:110:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000533691.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 75 warnings, 21 checks, 1194 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000533691.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
