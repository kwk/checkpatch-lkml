WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/cris/drivers/eeprom.c:452:
+  loff_t ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: arch/cris/drivers/eeprom.c:454:
+  lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: arch/cris/drivers/eeprom.c:459:
+     ret = file->f_pos = offset;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#65: FILE: arch/cris/drivers/eeprom.c:459:
+     ret = file->f_pos = offset;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: arch/cris/drivers/eeprom.c:462:
+     ret = file->f_pos += offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/cris/drivers/eeprom.c:465:
+     ret = file->f_pos = eeprom.size - offset;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#73: FILE: arch/cris/drivers/eeprom.c:465:
+     ret = file->f_pos = eeprom.size - offset;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: arch/cris/drivers/eeprom.c:468:
+     ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/cris/drivers/eeprom.c:475:
+    ret = -EOVERFLOW;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/cris/drivers/eeprom.c:481:
+    ret = -EOVERFLOW;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/cris/drivers/eeprom.c:484:
+  return ( ret );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#96: FILE: arch/cris/drivers/eeprom.c:484:
+  return ( ret );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#96: FILE: arch/cris/drivers/eeprom.c:484:
+  return ( ret );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/i386/kernel/cpuid.c:86:
+  loff_t ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/i386/kernel/cpuid.c:88:
+  lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/i386/kernel/cpuid.c:93:
+    ret = file->f_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/kernel/cpuid.c:94:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/i386/kernel/cpuid.c:97:
+    ret = file->f_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/kernel/cpuid.c:99:
+    ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/kernel/cpuid.c:102:
+  unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/kernel/cpuid.c:103:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/i386/kernel/msr.c:166:
+  loff_t ret = -EINVAL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: arch/i386/kernel/msr.c:167:
+  loff_t ret = -EINVAL;
+  lock_kernel();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/kernel/msr.c:167:
+  lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/i386/kernel/msr.c:171:
+    ret = file->f_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/i386/kernel/msr.c:172:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/i386/kernel/msr.c:175:
+    ret = file->f_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/i386/kernel/msr.c:177:
+  unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/i386/kernel/msr.c:178:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/ppc/kernel/ppc_htab.c:434:
+    long long ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/ppc/kernel/ppc_htab.c:436:
+    lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/ppc/kernel/ppc_htab.c:446:
+    unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/ppc/kernel/ppc_htab.c:447:
+    return ret;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#259: FILE: drivers/char/nvram.c:217:
origin )

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:SPACING: No space is necessary after a cast
#308: FILE: drivers/char/nwflash.c:319:
+		if ((unsigned int) offset > gbFlashSize) {

CHECK:CAMELCASE: Avoid CamelCase: <gbFlashSize>
#308: FILE: drivers/char/nwflash.c:319:
+		if ((unsigned int) offset > gbFlashSize) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/ieee1394/pcilynx.c:736:
+        loff_t newoffs = -1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/ieee1394/pcilynx.c:736:
+        loff_t newoffs = -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/ieee1394/pcilynx.c:738:
+        lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/ieee1394/pcilynx.c:738:
+        lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/ieee1394/pcilynx.c:750:
+        if (newoffs < 0 || newoffs > PCILYNX_MAX_MEMORY + 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/ieee1394/pcilynx.c:750:
+        if (newoffs < 0 || newoffs > PCILYNX_MAX_MEMORY + 1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: drivers/ieee1394/pcilynx.c:751:
+                lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/ieee1394/pcilynx.c:751:
+                lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: drivers/ieee1394/pcilynx.c:752:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/ieee1394/pcilynx.c:752:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: drivers/ieee1394/pcilynx.c:753:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/ieee1394/pcilynx.c:753:
+        }$

CHECK:CAMELCASE: Avoid CamelCase: <ConfigDev>
#867: FILE: drivers/zorro/proc.c:38:
+	if (new < 0 || new > sizeof(struct ConfigDev)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480166.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 35 warnings, 5 checks, 731 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480166.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
