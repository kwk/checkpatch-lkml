WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
 host          RAID          block         SCSI          disk          alt-disk

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/block/ll_rw_blk.c:42:
+  { .ctl_name = BLOCK_REQUEST_TIMEOUT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/block/ll_rw_blk.c:43:
+    .procname = "req_timeout",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/block/ll_rw_blk.c:44:
+    .data = &request_timeout,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/block/ll_rw_blk.c:45:
+    .maxlen = sizeof(request_timeout),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/block/ll_rw_blk.c:46:
+    .mode = 0644,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/block/ll_rw_blk.c:47:
+    .proc_handler = &proc_dointvec },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/block/ll_rw_blk.c:48:
+  { }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/block/ll_rw_blk.c:52:
+  { .ctl_name     = CTL_BLK,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/block/ll_rw_blk.c:53:
+    .procname     = "block",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/block/ll_rw_blk.c:54:
+    .mode         = 0555,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/block/ll_rw_blk.c:55:
+    .child        = req_table },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/block/ll_rw_blk.c:56:
+  { }$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#124: FILE: drivers/block/ll_rw_blk.c:59:
+int __init blk_init_sysctl(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#128: FILE: drivers/block/ll_rw_blk.c:63:
+module_param(request_timeout, int, S_IRUGO|S_IWUSR);
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#128: FILE: drivers/block/ll_rw_blk.c:63:
+module_param(request_timeout, int, S_IRUGO|S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#141: FILE: drivers/block/ll_rw_blk.c:2193:
+	if ((req->flags & REQ_SET_TIMER) && !(req->flags & REQ_TE_RESPONSE)) {
+		del_timer(&req->te_timeout);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#158: FILE: drivers/block/ll_rw_blk.c:2510:
+		req->te_timeout.expires = jiffies + request_timeout*HZ;
 		                                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: drivers/block/ll_rw_blk.c:2838:
+		printk("already set TE_RESPONSE\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: drivers/block/ll_rw_blk.c:3382:
+	printk("request_timer_expired()!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'request_timer_expired', this function's name, in a string
#206: FILE: drivers/block/ll_rw_blk.c:3382:
+	printk("request_timer_expired()!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:RETURN_VOID: void function return statements are not generally useful
#215: FILE: drivers/block/ll_rw_blk.c:3391:
+	return;
+}

CHECK:BIT_MACRO: Prefer using the BIT macro
#242: FILE: include/linux/blkdev.h:232:
+#define REQ_TE_RESPONSE	(1 << __REQ_TE_RESPONSE)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: include/linux/blkdev.h:233:
+#define REQ_SET_TIMER	(1 << __REQ_SET_TIMER)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#255: FILE: include/linux/sysctl.h:64:
+	CTL_CPU=10,		/* CPU stuff (speed scaling, etc) */
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#256: FILE: include/linux/sysctl.h:65:
+	CTL_BLK=11		/* Block */
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#266: FILE: include/linux/sysctl.h:770:
+	BLOCK_REQUEST_TIMEOUT=1,
 	                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 20 warnings, 4 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
