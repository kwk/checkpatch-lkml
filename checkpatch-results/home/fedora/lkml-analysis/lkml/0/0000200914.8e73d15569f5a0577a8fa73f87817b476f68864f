WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: aio_null.c:1:
+#include <stdio.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4096) over __attribute__((aligned(4096)))
#48: FILE: aio_null.c:13:
+char	buf[4096] __attribute__((aligned(4096)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: aio_null.c:22:
+	int res = io_queue_init(n, &io_ctx);
+	if (res != 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: aio_null.c:24:
+		printf("io_queue_setup(%d) returned %d (%s)\n",
+			n, res, strerror(-res));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#64: FILE: aio_null.c:29:
+main(int argc, char* argv[])

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#67: FILE: aio_null.c:32:
+	struct iocb* iocbbatch[MAXAIO];

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#72: FILE: aio_null.c:37:
+	batch = argc < 2 ? 100: atoi(argv[1]);
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#81: FILE: aio_null.c:46:
+		exit (0);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#83: FILE: aio_null.c:48:
+	for (i=0; i<batch; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#83: FILE: aio_null.c:48:
+	for (i=0; i<batch; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#84: FILE: aio_null.c:49:
+		iocbbatch[i] = iocbpool+i;
 		                       ^

WARNING:SPACING: missing space after struct definition
#89: FILE: aio_null.c:54:
+		struct timespec	ts={30,0};

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#89: FILE: aio_null.c:54:
+		struct timespec	ts={30,0};
 		               	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: aio_null.c:54:
+		struct timespec	ts={30,0};
 		               	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: aio_null.c:61:
+			printf("bad io_submit: %d [%s]\n", status,
+				strerror(-status));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: aio_null.c:68:
+			printf("io_getevents returned=%d [%s]\n", reap,
+				strerror(-reap));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#107: FILE: aio_null.c:72:
+		for (i=0; i<reap; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#107: FILE: aio_null.c:72:
+		for (i=0; i<reap; i++)
 		           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: pread_null.c:1:
+#include <stdio.h>

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: pread_null.c:6:
+main(int argc, char* argv[])

WARNING:BRACES: braces {} are not necessary for single statement blocks
#138: FILE: pread_null.c:23:
+	while (1) {
+		pread(fd, addr, 4096, 0);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#142: FILE: pread_null.c:27:
+
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200914.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 7 warnings, 5 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200914.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
