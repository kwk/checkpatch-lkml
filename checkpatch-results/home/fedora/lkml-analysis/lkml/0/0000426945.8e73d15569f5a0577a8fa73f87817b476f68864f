WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
diff -urN linux-2.5.40/drivers/s390/block/dasd.c linux-2.5.40-s390/drivers/s390/block/dasd.c

CHECK:SPACING: No space is necessary after a cast
#69: FILE: drivers/s390/block/dasd.c:241:
+		free_page((unsigned long) device->erp_mem);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#73: FILE: drivers/s390/block/dasd.c:244:
+		return (dasd_device_t *) gdp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/s390/block/dasd.c:433:
+ * get the kdev_t of a device $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: drivers/s390/block/dasd.c:439:
+	return to_kdev_t(device->bdev->bd_dev+partition);
 	                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#181: FILE: drivers/s390/block/dasd.c:442:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'device'
#207: FILE: drivers/s390/block/dasd.c:1561:
+		/* Rechain request on device device request queue */

CHECK:SPACING: No space is necessary after a cast
#326: FILE: drivers/s390/block/dasd_diag.c:134:
+	private->iob.interrupt_params = (u32)(addr_t) cqr;

CHECK:SPACING: No space is necessary after a cast
#344: FILE: drivers/s390/block/dasd_diag.c:182:
+	cqr = (dasd_ccw_req_t *)(addr_t) ip;

CHECK:SPACING: No space is necessary after a cast
#371: FILE: drivers/s390/block/dasd_diag.c:251:
+	rc = diag210((diag210_t *) rdc_data);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*gdp)...) over kmalloc(sizeof(struct gendisk)...)
#787: FILE: drivers/s390/block/dasd_genhd.c:195:
+	gdp = kmalloc(sizeof(struct gendisk), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: drivers/s390/block/dasd_genhd.c:196:
+	gd_part = kmalloc(sizeof (struct hd_struct) << DASD_PARTN_BITS,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*gd_part)...) over kmalloc(sizeof (struct hd_struct)...)
#788: FILE: drivers/s390/block/dasd_genhd.c:196:
+	gd_part = kmalloc(sizeof (struct hd_struct) << DASD_PARTN_BITS,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gdp"
#792: FILE: drivers/s390/block/dasd_genhd.c:200:
+	if (gdp == NULL || gd_part == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gd_part"
#792: FILE: drivers/s390/block/dasd_genhd.c:200:
+	if (gdp == NULL || gd_part == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#825: FILE: drivers/s390/block/dasd_genhd.c:233:
+	memset(gd_part, 0, sizeof (struct hd_struct) << DASD_PARTN_BITS);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#967: FILE: drivers/s390/block/dasd_int.h:142:
+	printk(d_loglevel PRINTK_HEADER " %s,%04x@%02x: " \

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1006: FILE: drivers/s390/block/dasd_int.h:481:
+int  dasd_gendisk_index_major(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1007: FILE: drivers/s390/block/dasd_int.h:482:
+struct gendisk *dasd_gendisk_alloc(char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1007: FILE: drivers/s390/block/dasd_int.h:482:
+struct gendisk *dasd_gendisk_alloc(char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#1008: FILE: drivers/s390/block/dasd_int.h:483:
+void dasd_gendisk_free(struct gendisk *);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dasd_info"
#1209: FILE: drivers/s390/block/dasd_ioctl.c:374:
+	if (dasd_info == NULL) {

CHECK:SPACING: No space is necessary after a cast
#1281: FILE: drivers/s390/block/dasd_ioctl.c:429:
+	if (copy_to_user((long *) args, (long *) dasd_info,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'no == (unsigned int) BIODASDINFO2'
#1281: FILE: drivers/s390/block/dasd_ioctl.c:429:
+	if (copy_to_user((long *) args, (long *) dasd_info,
 			 ((no == (unsigned int) BIODASDINFO2) ?
 			  sizeof (dasd_information2_t) :
 			  sizeof (dasd_information_t))))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 14 checks, 1310 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000426945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
