WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#68: FILE: char/vt.c:2004:
+		} else if (vc->vc_utf && !vc->vc_disp_ctrl) {
[...]
 		    if(c > 0x7f) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#80: FILE: char/vt.c:2009:
+			if (vc->vc_utf_count) {
+			       if ((c & 0xc0) == 0x80) {

WARNING:TABSTOP: Statements should start on a tabstop
#81: FILE: char/vt.c:2010:
+			       if ((c & 0xc0) == 0x80) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#81: FILE: char/vt.c:2010:
+			       if ((c & 0xc0) == 0x80) {
+				       vc->vc_utf_char = (vc->vc_utf_char << 6) | (c & 0x3f);

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: char/vt.c:2012:
+       ^I^I^I^I       if (--vc->vc_utf_count) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: char/vt.c:2012:
+       ^I^I^I^I       if (--vc->vc_utf_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: char/vt.c:2012:
+       ^I^I^I^I       if (--vc->vc_utf_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (39, 47)
#83: FILE: char/vt.c:2012:
+       				       if (--vc->vc_utf_count) {
+					       vc->vc_npar++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: char/vt.c:2014:
+^I^I^I^I   ^I       continue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: char/vt.c:2014:
+^I^I^I^I   ^I       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: char/vt.c:2015:
+       ^I^I^I^I       }$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: char/vt.c:2015:
+       ^I^I^I^I       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: char/vt.c:2015:
+       ^I^I^I^I       }$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#87: FILE: char/vt.c:2016:
+				       tc = c = vc->vc_utf_char;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TABSTOP: Statements should start on a tabstop
#88: FILE: char/vt.c:2017:
+			       } else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#88: FILE: char/vt.c:2017:
+			       } else
+				       goto insert_replacement_glyph;

CHECK:BRACES: Unbalanced braces around else statement
#88: FILE: char/vt.c:2017:
+			       } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#89: FILE: char/vt.c:2018:
+				       goto insert_replacement_glyph;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#98: FILE: char/vt.c:2036:
 				} else
+	    			    goto insert_replacement_glyph;

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: char/vt.c:2037:
+^I    ^I^I^I    goto insert_replacement_glyph;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: char/vt.c:2037:
+^I    ^I^I^I    goto insert_replacement_glyph;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 22)
#103: FILE: char/vt.c:2040:
 		    } else {
+		      if (vc->vc_utf_count)

WARNING:TABSTOP: Statements should start on a tabstop
#104: FILE: char/vt.c:2041:
+		      if (vc->vc_utf_count)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (22, 30)
#104: FILE: char/vt.c:2041:
+		      if (vc->vc_utf_count)
+	  		      goto insert_replacement_glyph;

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: char/vt.c:2042:
+^I  ^I^I      goto insert_replacement_glyph;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: char/vt.c:2042:
+^I  ^I^I      goto insert_replacement_glyph;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#126: FILE: char/vt.c:2068:
+			if ( tc & ~charmask ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#126: FILE: char/vt.c:2068:
+			if ( tc & ~charmask ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#127: FILE: char/vt.c:2069:
+				if ( tc == -4 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#127: FILE: char/vt.c:2069:
+				if ( tc == -4 ) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#141: FILE: char/vt.c:2079:
+						if ( c & ~0x7f )

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:SPACING: space prohibited after that open parenthesis '('
#141: FILE: char/vt.c:2079:
+						if ( c & ~0x7f )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#141: FILE: char/vt.c:2079:
+						if ( c & ~0x7f )

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#143: FILE: char/vt.c:2081:
+						else

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: char/vt.c:2084:
+                     ^I  ^I } else if ( tc == -3 ) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: char/vt.c:2084:
+                     ^I  ^I } else if ( tc == -3 ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: char/vt.c:2084:
+                     ^I  ^I } else if ( tc == -3 ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: char/vt.c:2084:
+                     	  	 } else if ( tc == -3 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: char/vt.c:2084:
+                     	  	 } else if ( tc == -3 ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#149: FILE: char/vt.c:2086:
+					if ( c & ~0x7f )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#149: FILE: char/vt.c:2086:
+					if ( c & ~0x7f )

WARNING:TABSTOP: Statements should start on a tabstop
#153: FILE: char/vt.c:2090:
+				 } else

CHECK:BRACES: Unbalanced braces around else statement
#153: FILE: char/vt.c:2090:
+				 } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: char/vt.c:2091:
+                                ^Icontinue; /* Conversion failed */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: char/vt.c:2091:
+                                ^Icontinue; /* Conversion failed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: char/vt.c:2091:
+                                ^Icontinue; /* Conversion failed */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: char/vt.c:2094:
+repeat_replacement_glyph:^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 27 warnings, 3 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
