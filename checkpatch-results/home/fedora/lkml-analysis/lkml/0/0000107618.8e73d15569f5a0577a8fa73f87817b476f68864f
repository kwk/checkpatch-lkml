ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#73: FILE: kernel/rcupdate.c:117:
+static inline int is_remote_rcu(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#99: FILE: kernel/rcupdate.c:143:
+	cpu_remotercu_next=next_cpu(cpu_remotercu_next, mask);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#100: FILE: kernel/rcupdate.c:144:
+	if (cpu_remotercu_next >= NR_CPUS) {
+		cpu_remotercu_next = first_cpu(mask);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#100: FILE: kernel/rcupdate.c:144:
+	if (cpu_remotercu_next >= NR_CPUS) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#109: FILE: kernel/rcupdate.c:153:
+int rcu_set_remote_rcu(int cpu) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#112: FILE: kernel/rcupdate.c:156:
+	if (cpu < NR_CPUS) {
[...]
+	} else
[...]

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#112: FILE: kernel/rcupdate.c:156:
+	if (cpu < NR_CPUS) {

CHECK:BRACES: Unbalanced braces around else statement
#117: FILE: kernel/rcupdate.c:161:
+	} else

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#122: FILE: kernel/rcupdate.c:166:
+void rcu_clear_remote_rcu(int cpu) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#125: FILE: kernel/rcupdate.c:169:
+	if (cpu < NR_CPUS) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: kernel/rcupdate.c:190:
+__setup ("remotercu=", rcu_remotercu_cpu_setup);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#167: FILE: kernel/rcupdate.c:504:
+	if (rdp->donelist && !is_remote_rcu()) {
 		rcu_do_batch(rdp);
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: kernel/rcupdate.c:514:
+	struct rcu_head * list = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: kernel/rcupdate.c:515:
+	struct rcu_head * list_bh = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#181: FILE: kernel/rcupdate.c:518:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#182: FILE: kernel/rcupdate.c:519:
+	if (likely(!rcu_remote_rcus() || is_remote_rcu())) {
+		return;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#187: FILE: kernel/rcupdate.c:524:
+	if (unlikely(cpu == -1)) {
+		return;
+	}

WARNING:TYPO_SPELLING: 'simulataneously' may be misspelled - perhaps 'simultaneously'?
#193: FILE: kernel/rcupdate.c:530:
+	 * list simulataneously.
 	        ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#195: FILE: kernel/rcupdate.c:532:
+	if (rdp->doneself && (list = xchg(&rdp->donelist, NULL))!=NULL) {
 	                                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#195: FILE: kernel/rcupdate.c:532:
+	if (rdp->doneself && (list = xchg(&rdp->donelist, NULL))!=NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#200: FILE: kernel/rcupdate.c:537:
+	if (rdp->doneself && (list_bh = xchg(&rdp->donelist, NULL))!=NULL) {
 	                                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: kernel/rcupdate.c:537:
+	if (rdp->doneself && (list_bh = xchg(&rdp->donelist, NULL))!=NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107618.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 9 warnings, 3 checks, 178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107618.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
