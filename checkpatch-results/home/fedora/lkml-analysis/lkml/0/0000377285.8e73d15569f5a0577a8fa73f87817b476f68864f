WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -uNrp linux-2.5.67/arch/parisc/kernel/sys_parisc32.c linux-compat/arch/parisc/kernel/sys_parisc32.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: arch/s390/kernel/compat_wrapper.S:785:
+^I.globl  compat_sys_nfsservctl_wrapper $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1250: FILE: fs/compat.c:248:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#1251: FILE: fs/compat.c:249:
+#if defined(CONFIG_NFSD) || defined(CONFIG_NFSD_MODULE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: fs/compat.c:255:
+static int compat_nfs_svc_trans(struct nfsctl_arg *karg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1261: FILE: fs/compat.c:259:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1268: FILE: fs/compat.c:266:
+static int compat_nfs_clnt_trans(struct nfsctl_arg *karg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: fs/compat.c:270:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1276: FILE: fs/compat.c:274:
+			      NFSCLNT_IDMAX+1);
 			                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1282: FILE: fs/compat.c:280:
+^I^I          &carg->ca_client.cl_fhkeytype);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1295: FILE: fs/compat.c:293:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1299: FILE: fs/compat.c:297:
+			      NFSCLNT_IDMAX+1);
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1302: FILE: fs/compat.c:300:
+			      NFS_MAXPATHLEN+1);
 			                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1315: FILE: fs/compat.c:313:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: fs/compat.c:314:
+^Ireturn err; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: fs/compat.c:321:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1330: FILE: fs/compat.c:328:
+			      NFS_MAXPATHLEN+1);
 			                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1340: FILE: fs/compat.c:338:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1347: FILE: fs/compat.c:345:
+			      NFS_MAXPATHLEN+1);
 			                    ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsctl_arg *' should also have an identifier name
#1354: FILE: fs/compat.c:352:
+	int (*translate)(struct nfsctl_arg *, struct compat_nfsctl_arg *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct compat_nfsctl_arg *' should also have an identifier name
#1354: FILE: fs/compat.c:352:
+	int (*translate)(struct nfsctl_arg *, struct compat_nfsctl_arg *);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'long'
#1365: FILE: fs/compat.c:363:
+long asmlinkage compat_sys_nfsservctl(int cmd, struct compat_nfsctl_arg *carg,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: fs/compat.c:371:
+^Iif (cmd < 0 || cmd >= sizeof(compat_nfs_map)/sizeof(compat_nfs_map[0]) $

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(compat_nfs_map)
#1373: FILE: fs/compat.c:371:
+	if (cmd < 0 || cmd >= sizeof(compat_nfs_map)/sizeof(compat_nfs_map[0]) 

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1373: FILE: fs/compat.c:371:
+	if (cmd < 0 || cmd >= sizeof(compat_nfs_map)/sizeof(compat_nfs_map[0]) 
 	                                            ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1374: FILE: fs/compat.c:372:
+	if (cmd < 0 || cmd >= sizeof(compat_nfs_map)/sizeof(compat_nfs_map[0]) 
+		    || !compat_nfs_map[cmd].translate)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: fs/compat.c:383:
+^Iif(ret) $

ERROR:SPACING: space required before the open parenthesis '('
#1385: FILE: fs/compat.c:383:
+	if(ret) 

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1398: FILE: fs/compat.c:396:
+	if (karg)
+		kfree(karg);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1400: FILE: fs/compat.c:398:
+	if (kres)
+		kfree(kres);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'long'
#1405: FILE: fs/compat.c:403:
+long asmlinkage compat_sys_nfsservctl(int cmd, struct compat_nfsctl_arg *carg,

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1408: FILE: fs/compat.c:406:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1428: FILE: include/linux/nfsd/syscall.h:124:
+	char			cl_ident[NFSCLNT_IDMAX+1];
 	    			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1437: FILE: include/linux/nfsd/syscall.h:133:
+	char			ex_client[NFSCLNT_IDMAX+1];
 	    			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1438: FILE: include/linux/nfsd/syscall.h:134:
+	char			ex_path[NFS_MAXPATHLEN+1];
 	    			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1448: FILE: include/linux/nfsd/syscall.h:144:
+	char			gd_path[NFS_MAXPATHLEN+1];
 	    			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1454: FILE: include/linux/nfsd/syscall.h:150:
+	char			gd_path[NFS_MAXPATHLEN+1];
 	    			                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 10 warnings, 13 checks, 1377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
