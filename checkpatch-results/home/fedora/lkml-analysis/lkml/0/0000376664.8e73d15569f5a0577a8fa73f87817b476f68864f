WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#71: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#78: FILE: drivers/block/elevator.c:293:
+if(!q->elevator.elevator_add_req_fn) printk(KERN_INFO "Duh. Elevator %p not initialized.\n", q);
 	q->elevator.elevator_add_req_fn(q, rq, insert);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#78: FILE: drivers/block/elevator.c:293:
+if(!q->elevator.elevator_add_req_fn) printk(KERN_INFO "Duh. Elevator %p not initialized.\n", q);

ERROR:SPACING: space required before the open parenthesis '('
#78: FILE: drivers/block/elevator.c:293:
+if(!q->elevator.elevator_add_req_fn) printk(KERN_INFO "Duh. Elevator %p not initialized.\n", q);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#78: FILE: drivers/block/elevator.c:293:
+if(!q->elevator.elevator_add_req_fn) printk(KERN_INFO "Duh. Elevator %p not initialized.\n", q);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#88: FILE: drivers/block/ll_rw_blk.c:1159:
+printk(KERN_INFO "blk_cleanup_queue: destroying %p.\n", q);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#96: FILE: drivers/block/ll_rw_blk.c:1277:
+printk(KERN_INFO "blk_init_queue: %p initialized.\n", q);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#106: FILE: drivers/ide/ide.c:602:
+printk(KERN_INFO "ide_unregister called for %s.\n", hwif->name);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#114: FILE: drivers/ide/ide.c:1432:
+printk(KERN_INFO "ata_attach: trying driver %p for drive %s(%p).\n", driver, drive->name, &drive->queue);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#114: FILE: drivers/ide/ide.c:1432:
+printk(KERN_INFO "ata_attach: trying driver %p for drive %s(%p).\n", driver, drive->name, &drive->queue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: drivers/ide/ide-probe.c:1011:
+printk(KERN_INFO "ide_init_queue: drive %s has queue %p.\n", drive->name, q); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#126: FILE: drivers/ide/ide-probe.c:1011:
+printk(KERN_INFO "ide_init_queue: drive %s has queue %p.\n", drive->name, q); 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#135: FILE: drivers/ide/ide-probe.c:1064:
+printk(KERN_INFO "init_irq called for hwif %s.\n", hwif->name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#144: FILE: drivers/ide/ide-probe.c:1112:
+		if (!hwgroup) {
+printk(KERN_INFO "init_irq: kmalloc failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#145: FILE: drivers/ide/ide-probe.c:1113:
+printk(KERN_INFO "init_irq: kmalloc failed.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#145: FILE: drivers/ide/ide-probe.c:1113:
+		if (!hwgroup) {
+printk(KERN_INFO "init_irq: kmalloc failed.\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#156: FILE: drivers/ide/ide-probe.c:1150:
+		if (request_irq(hwif->irq,&ide_intr,sa,hwif->name,hwgroup)) {
+printk(KERN_INFO "init_irq: request_irq failed for irq %d.\n", hwif->irq);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#156: FILE: drivers/ide/ide-probe.c:1150:
+		if (request_irq(hwif->irq,&ide_intr,sa,hwif->name,hwgroup)) {
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#156: FILE: drivers/ide/ide-probe.c:1150:
+		if (request_irq(hwif->irq,&ide_intr,sa,hwif->name,hwgroup)) {
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: drivers/ide/ide-probe.c:1150:
+		if (request_irq(hwif->irq,&ide_intr,sa,hwif->name,hwgroup)) {
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: drivers/ide/ide-probe.c:1150:
+		if (request_irq(hwif->irq,&ide_intr,sa,hwif->name,hwgroup)) {
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: drivers/ide/ide-probe.c:1150:
+		if (request_irq(hwif->irq,&ide_intr,sa,hwif->name,hwgroup)) {
 		                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#157: FILE: drivers/ide/ide-probe.c:1151:
+printk(KERN_INFO "init_irq: request_irq failed for irq %d.\n", hwif->irq);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#167: FILE: drivers/ide/ide-probe.c:1164:
+printk(KERN_INFO "init_irq: processing drive %s(%p), present %d.\n", drive->name, &drive->queue, drive->present);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#167: FILE: drivers/ide/ide-probe.c:1164:
+printk(KERN_INFO "init_irq: processing drive %s(%p), present %d.\n", drive->name, &drive->queue, drive->present);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#184: FILE: drivers/ide/ide-probe.c:1325:
+printk(KERN_INFO "hwif_init: hwif %s, stage 1.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#187: FILE: drivers/ide/ide-probe.c:1328:
+printk(KERN_INFO "hwif_init: hwif %s, stage 2.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#195: FILE: drivers/ide/ide-probe.c:1337:
+printk(KERN_INFO "hwif_init: hwif %s, stage 3.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: drivers/ide/ide-probe.c:1348:
+printk(KERN_INFO "hwif_init: hwif %s, stage 4.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#207: FILE: drivers/ide/ide-probe.c:1352:
+printk(KERN_INFO "hwif_init: hwif %s, stage 5.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#211: FILE: drivers/ide/ide-probe.c:1356:
+printk(KERN_INFO "hwif_init: hwif %s, stage 6.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#215: FILE: drivers/ide/ide-probe.c:1360:
+printk(KERN_INFO "hwif_init: hwif %s, stage 7.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#223: FILE: drivers/ide/ide-probe.c:1372:
+printk(KERN_INFO "hwif_init: hwif %s, stage 8.\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#233: FILE: drivers/ide/setup-pci.c:754:
+printk(KERN_INFO "ide_setup_pci_device for %s called.\n", dev->dev.name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000376664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 26 warnings, 0 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000376664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
