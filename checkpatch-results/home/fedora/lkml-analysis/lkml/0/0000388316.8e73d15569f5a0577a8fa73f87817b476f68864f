WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
diff -urP -I '\$Id:.*Exp \$' -X /usr/src/patch.exclude linux-2.5.64-kb/arch/i386/kernel/entry.S linux/arch/i386/kernel/entry.S

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/i386/kernel/entry.S:565:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#349: FILE: include/asm-i386/sys_calls.h:1:
+#ifndef SYS_CALLS_F

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: include/asm-i386/sys_calls.h:5:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: include/asm-i386/sys_calls.h:6:
+ * For some unknown reason asm code is run through cpp with the $

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#359: FILE: include/asm-i386/sys_calls.h:11:
+#define SYS_CALL(fun)  , sys_/**/fun
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#359: FILE: include/asm-i386/sys_calls.h:11:
+#define SYS_CALL(fun)  , sys_/**/fun

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#362: FILE: include/asm-i386/sys_calls.h:14:
+#define SYS_CALL(fun)  , sys_ ## fun
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#362: FILE: include/asm-i386/sys_calls.h:14:
+#define SYS_CALL(fun)  , sys_ ## fun

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#364: FILE: include/asm-i386/sys_calls.h:16:
+#define SYS_CALL_R(fun)  , sys_ni_syscall
                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#364: FILE: include/asm-i386/sys_calls.h:16:
+#define SYS_CALL_R(fun)  , sys_ni_syscall

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#365: FILE: include/asm-i386/sys_calls.h:17:
+#define SYS_CALL_D(x, fun)  , fun
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#365: FILE: include/asm-i386/sys_calls.h:17:
+#define SYS_CALL_D(x, fun)  , fun

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: include/asm-i386/sys_calls.h:18:
+#define SYS_CALL_END $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#376: FILE: include/asm-i386/sys_calls.h:28:
+#define do_calls          \
+SYS_CALL_F(restart_syscall)	\
+SYS_CALL(exit)	\
+SYS_CALL(fork)	\
+SYS_CALL(read)	\
+SYS_CALL(write)	\
+SYS_CALL(open)	\
+SYS_CALL(close)	\
+SYS_CALL(waitpid)	\
+SYS_CALL(creat)	\
+SYS_CALL(link)	\
+SYS_CALL(unlink)	\
+SYS_CALL(execve)	\
+SYS_CALL(chdir)	\
+SYS_CALL(time)	\
+SYS_CALL(mknod)	\
+SYS_CALL(chmod)	\
+SYS_CALL_D(lchown, sys_lchown16)	\
+SYS_CALL_R(break)	\
+SYS_CALL_D(oldstat, sys_stat )	\
+SYS_CALL(lseek)	\
+SYS_CALL(getpid)	\
+SYS_CALL(mount)	\
+SYS_CALL_D(umount, sys_oldumount)	\
+SYS_CALL_D(setuid, sys_setuid16)	\
+SYS_CALL_D(getuid, sys_getuid16)	\
+SYS_CALL(stime)	\
+SYS_CALL(ptrace)	\
+SYS_CALL(alarm)	\
+SYS_CALL_D(oldfstat, sys_fstat)	\
+SYS_CALL(pause)	\
+SYS_CALL(utime)	\
+SYS_CALL_R(stty)	\
+SYS_CALL_R(gtty)	\
+SYS_CALL(access)	\
+SYS_CALL(nice)	\
+SYS_CALL_R(ftime)	\
+SYS_CALL(sync)	\
+SYS_CALL(kill)	\
+SYS_CALL(rename)	\
+SYS_CALL(mkdir)	\
+SYS_CALL(rmdir)	\
+SYS_CALL(dup)	\
+SYS_CALL(pipe)	\
+SYS_CALL(times)	\
+SYS_CALL_R(prof)	\
+SYS_CALL(brk)	\
+SYS_CALL_D(setgid, sys_setgid16)	\
+SYS_CALL_D(getgid, sys_getgid16)	\
+SYS_CALL(signal)	\
+SYS_CALL_D(geteuid, sys_geteuid16)	\
+SYS_CALL_D(getegid, sys_getegid16)	\
+SYS_CALL(acct)	\
+SYS_CALL_D(umount2, sys_umount)	\
+SYS_CALL_R(lock)	\
+SYS_CALL(ioctl)	\
+SYS_CALL(fcntl)	\
+SYS_CALL_R(mpx)	\
+SYS_CALL(setpgid)	\
+SYS_CALL_R(ulimit)	\
+SYS_CALL_D(oldolduname, sys_olduname)	\
+SYS_CALL(umask)	\
+SYS_CALL(chroot)	\
+SYS_CALL(ustat)	\
+SYS_CALL(dup2)	\
+SYS_CALL(getppid)	\
+SYS_CALL(getpgrp)	\
+SYS_CALL(setsid)	\
+SYS_CALL(sigaction)	\
+SYS_CALL(sgetmask)	\
+SYS_CALL(ssetmask)	\
+SYS_CALL_D(setreuid, sys_setreuid16)	\
+SYS_CALL_D(setregid, sys_setregid16)	\
+SYS_CALL(sigsuspend)	\
+SYS_CALL(sigpending)	\
+SYS_CALL(sethostname)	\
+SYS_CALL(setrlimit)	\
+SYS_CALL_D(getrlimit, sys_old_getrlimit)	\
+SYS_CALL(getrusage)	\
+SYS_CALL(gettimeofday)	\
+SYS_CALL(settimeofday)	\
+SYS_CALL_D(getgroups, sys_getgroups16)	\
+SYS_CALL_D(setgroups, sys_setgroups16)	\
+SYS_CALL_D(select, old_select)	\
+SYS_CALL(symlink)	\
+SYS_CALL_D(oldlstat, sys_lstat)	\
+SYS_CALL(readlink)	\
+SYS_CALL(uselib)	\
+SYS_CALL(swapon)	\
+SYS_CALL(reboot)	\
+SYS_CALL_D(readdir, old_readdir)	\
+SYS_CALL_D(mmap, old_mmap)	\
+SYS_CALL(munmap)	\
+SYS_CALL(truncate)	\
+SYS_CALL(ftruncate)	\
+SYS_CALL(fchmod)	\
+SYS_CALL_D(fchown, sys_fchown16)	\
+SYS_CALL(getpriority)	\
+SYS_CALL(setpriority)	\
+SYS_CALL_R(profil)	\
+SYS_CALL(statfs)	\
+SYS_CALL(fstatfs)	\
+SYS_CALL(ioperm)	\
+SYS_CALL(socketcall)	\
+SYS_CALL(syslog)	\
+SYS_CALL(setitimer)	\
+SYS_CALL(getitimer)	\
+SYS_CALL_D(stat, sys_newstat)	\
+SYS_CALL_D(lstat, sys_newlstat)	\
+SYS_CALL_D(fstat, sys_newfstat)	\
+SYS_CALL_D(olduname, sys_uname)	\
+SYS_CALL(iopl)	\
+SYS_CALL(vhangup)	\
+SYS_CALL_R(idle)	\
+SYS_CALL(vm86old)	\
+SYS_CALL(wait4)	\
+SYS_CALL(swapoff)	\
+SYS_CALL(sysinfo)	\
+SYS_CALL(ipc)	\
+SYS_CALL(fsync)	\
+SYS_CALL(sigreturn)	\
+SYS_CALL(clone)	\
+SYS_CALL(setdomainname)	\
+SYS_CALL_D(uname, sys_newuname)	\
+SYS_CALL(modify_ldt)	\
+SYS_CALL(adjtimex)	\
+SYS_CALL(mprotect)	\
+SYS_CALL(sigprocmask)	\
+SYS_CALL_R(create_module)	\
+SYS_CALL(init_module)	\
+SYS_CALL(delete_module)	\
+SYS_CALL_R(get_kernel_syms)	\
+SYS_CALL(quotactl)	\
+SYS_CALL(getpgid)	\
+SYS_CALL(fchdir)	\
+SYS_CALL(bdflush)	\
+SYS_CALL(sysfs)	\
+SYS_CALL(personality)	\
+SYS_CALL_R(afs_syscall)	\
+SYS_CALL_D(setfsuid, sys_setfsuid16)	\
+SYS_CALL_D(setfsgid, sys_setfsgid16)	\
+SYS_CALL_D(_llseek, sys_llseek)	\
+SYS_CALL(getdents)	\
+SYS_CALL_D(_newselect, sys_select)	\
+SYS_CALL(flock)	\
+SYS_CALL(msync)	\
+SYS_CALL(readv)	\
+SYS_CALL(writev)	\
+SYS_CALL(getsid)	\
+SYS_CALL(fdatasync)	\
+SYS_CALL_D(_sysctl, sys_sysctl)	\
+SYS_CALL(mlock)	\
+SYS_CALL(munlock)	\
+SYS_CALL(mlockall)	\
+SYS_CALL(munlockall)	\
+SYS_CALL(sched_setparam)	\
+SYS_CALL(sched_getparam)	\
+SYS_CALL(sched_setscheduler)	\
+SYS_CALL(sched_getscheduler)	\
+SYS_CALL(sched_yield)	\
+SYS_CALL(sched_get_priority_max)	\
+SYS_CALL(sched_get_priority_min)	\
+SYS_CALL(sched_rr_get_interval)	\
+SYS_CALL(nanosleep)	\
+SYS_CALL(mremap)	\
+SYS_CALL_D(setresuid, sys_setresuid16)	\
+SYS_CALL_D(getresuid, sys_getresuid16)	\
+SYS_CALL(vm86)	\
+SYS_CALL_R(query_module)	\
+SYS_CALL(poll)	\
+SYS_CALL(nfsservctl)	\
+SYS_CALL_D(setresgid, sys_setresgid16)	\
+SYS_CALL_D(getresgid, sys_getresgid16)	\
+SYS_CALL(prctl)	\
+SYS_CALL(rt_sigreturn)	\
+SYS_CALL(rt_sigaction)	\
+SYS_CALL(rt_sigprocmask)	\
+SYS_CALL(rt_sigpending)	\
+SYS_CALL(rt_sigtimedwait)	\
+SYS_CALL(rt_sigqueueinfo)	\
+SYS_CALL(rt_sigsuspend)	\
+SYS_CALL(pread64)	\
+SYS_CALL(pwrite64)	\
+SYS_CALL_D(chown, sys_chown16)	\
+SYS_CALL(getcwd)	\
+SYS_CALL(capget)	\
+SYS_CALL(capset)	\
+SYS_CALL(sigaltstack)	\
+SYS_CALL(sendfile)	\
+SYS_CALL_R(getpmsg)	\
+SYS_CALL_R(putpmsg)	\
+SYS_CALL(vfork)	\
+SYS_CALL_D(ugetrlimit, sys_getrlimit)	\
+SYS_CALL(mmap2)	\
+SYS_CALL(truncate64)	\
+SYS_CALL(ftruncate64)	\
+SYS_CALL(stat64)	\
+SYS_CALL(lstat64)	\
+SYS_CALL(fstat64)	\
+SYS_CALL_D(lchown32, sys_lchown)	\
+SYS_CALL_D(getuid32, sys_getuid)	\
+SYS_CALL_D(getgid32, sys_getgid)	\
+SYS_CALL_D(geteuid32, sys_geteuid)	\
+SYS_CALL_D(getegid32, sys_getegid)	\
+SYS_CALL_D(setreuid32, sys_setreuid)	\
+SYS_CALL_D(setregid32, sys_setregid)	\
+SYS_CALL_D(getgroups32, sys_getgroups)	\
+SYS_CALL_D(setgroups32, sys_setgroups)	\
+SYS_CALL_D(fchown32, sys_fchown)	\
+SYS_CALL_D(setresuid32, sys_setresuid)	\
+SYS_CALL_D(getresuid32, sys_getresuid)	\
+SYS_CALL_D(setresgid32, sys_setresgid)	\
+SYS_CALL_D(getresgid32, sys_getresgid)	\
+SYS_CALL_D(chown32, sys_chown)	\
+SYS_CALL_D(setuid32, sys_setuid)	\
+SYS_CALL_D(setgid32, sys_setgid)	\
+SYS_CALL_D(setfsuid32, sys_setfsuid)	\
+SYS_CALL_D(setfsgid32, sys_setfsgid)	\
+SYS_CALL(pivot_root)	\
+SYS_CALL(mincore)	\
+SYS_CALL(madvise)	\
+SYS_CALL(getdents64)	\
+SYS_CALL(fcntl64)	\
+SYS_CALL_R(tux1)	\
+SYS_CALL_R(tux2)	\
+SYS_CALL(gettid)	\
+SYS_CALL(readahead)	\
+SYS_CALL(setxattr)	\
+SYS_CALL(lsetxattr)	\
+SYS_CALL(fsetxattr)	\
+SYS_CALL(getxattr)	\
+SYS_CALL(lgetxattr)	\
+SYS_CALL(fgetxattr)	\
+SYS_CALL(listxattr)	\
+SYS_CALL(llistxattr)	\
+SYS_CALL(flistxattr)	\
+SYS_CALL(removexattr)	\
+SYS_CALL(lremovexattr)	\
+SYS_CALL(fremovexattr)	\
+SYS_CALL(tkill)	\
+SYS_CALL(sendfile64)	\
+SYS_CALL(futex)	\
+SYS_CALL(sched_setaffinity)	\
+SYS_CALL(sched_getaffinity)	\
+SYS_CALL(set_thread_area)	\
+SYS_CALL(get_thread_area)	\
+SYS_CALL(io_setup)	\
+SYS_CALL(io_destroy)	\
+SYS_CALL(io_getevents)	\
+SYS_CALL(io_submit)	\
+SYS_CALL(io_cancel)	\
+SYS_CALL(fadvise64)	\
+SYS_CALL_R(empty1)	\
+SYS_CALL(exit_group)	\
+SYS_CALL(lookup_dcookie)	\
+SYS_CALL(epoll_create)	\
+SYS_CALL(epoll_ctl)	\
+SYS_CALL(epoll_wait)	\
+SYS_CALL(remap_file_pages)	\
+SYS_CALL(set_tid_address)	\
+SYS_CALL(timer_create)	\
+SYS_CALL(timer_settime)	\
+SYS_CALL(timer_gettime)	\
+SYS_CALL(timer_getoverrun)	\
+SYS_CALL(timer_delete)	\
+SYS_CALL(clock_settime)	\
+SYS_CALL(clock_gettime)	\
+SYS_CALL(clock_getres)	\
+SYS_CALL(clock_nanosleep)	\
+SYS_CALL_END

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#385: FILE: include/asm-i386/sys_calls.h:37:
+SYS_CALL(creat)	\
          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#395: FILE: include/asm-i386/sys_calls.h:47:
+SYS_CALL_D(oldstat, sys_stat )	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#647: FILE: include/asm-i386/sys_calls.h:299:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: include/asm-i386/sys_calls.h:301:
+     .long do_calls$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#656: FILE: include/asm-i386/sys_calls.h:308:
+};
+#define __NR_madvise1 __NR_madvise

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388316.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 4 warnings, 2 checks, 868 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388316.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
