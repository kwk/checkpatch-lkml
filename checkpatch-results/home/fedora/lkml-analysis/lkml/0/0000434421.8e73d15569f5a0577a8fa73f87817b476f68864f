WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#87: FILE: arch/alpha/kernel/pci_iommu.c:34:
+/* Most Alphas support 32-bit ISA DMA. Exceptions are XL, Ruffian,
+   Nautilus, Sable, and Alcor (see asm-alpha/dma.h for details). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#87: FILE: arch/alpha/kernel/pci_iommu.c:34:
+   Nautilus, Sable, and Alcor (see asm-alpha/dma.h for details). */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: arch/alpha/kernel/core_t2.c:316:
+		printk("t2_init_arch: enabling SG TLB, IOCSR was 0x%lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 't2_init_arch', this function's name, in a string
#208: FILE: arch/alpha/kernel/core_t2.c:316:
+		printk("t2_init_arch: enabling SG TLB, IOCSR was 0x%lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/alpha/kernel/core_t2.c:319:
+^I^Imb();^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#211: FILE: arch/alpha/kernel/core_t2.c:319:
+		mb();	

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: arch/alpha/kernel/core_t2.c:324:
+	printk("t2_init_arch: HBASE was 0x%lx\n", *(vulp)T2_HBASE);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 't2_init_arch', this function's name, in a string
#226: FILE: arch/alpha/kernel/core_t2.c:324:
+	printk("t2_init_arch: HBASE was 0x%lx\n", *(vulp)T2_HBASE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: arch/alpha/kernel/core_t2.c:325:
+	printk("t2_init_arch: WBASE1=0x%lx WMASK1=0x%lx TBASE1=0x%lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 't2_init_arch', this function's name, in a string
#227: FILE: arch/alpha/kernel/core_t2.c:325:
+	printk("t2_init_arch: WBASE1=0x%lx WMASK1=0x%lx TBASE1=0x%lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#229: FILE: arch/alpha/kernel/core_t2.c:327:
+	printk("t2_init_arch: WBASE2=0x%lx WMASK2=0x%lx TBASE2=0x%lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 't2_init_arch', this function's name, in a string
#229: FILE: arch/alpha/kernel/core_t2.c:327:
+	printk("t2_init_arch: WBASE2=0x%lx WMASK2=0x%lx TBASE2=0x%lx\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#237: FILE: arch/alpha/kernel/core_t2.c:335:
+	pci_isa_hose = hose = alloc_pci_controller();

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#248: FILE: arch/alpha/kernel/core_t2.c:346:
+	/* Note we can only do 1 SG window, as the other is for direct, so
+	   do an ISA SG area, especially for the floppy. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#248: FILE: arch/alpha/kernel/core_t2.c:346:
+	   do an ISA SG area, especially for the floppy. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/alpha/kernel/core_t2.c:347:
+        hose->sg_isa = iommu_arena_new(hose, 0x00800000, 0x00800000, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/alpha/kernel/core_t2.c:347:
+        hose->sg_isa = iommu_arena_new(hose, 0x00800000, 0x00800000, 0);$

WARNING:MEMORY_BARRIER: memory barrier without comment
#324: FILE: arch/alpha/kernel/core_t2.c:402:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#329: FILE: arch/alpha/kernel/core_t2.c:407:
+	mb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/alpha/kernel/core_tsunami.c:326:
+        hose->sg_isa->align_entry = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/alpha/kernel/core_tsunami.c:326:
+        hose->sg_isa->align_entry = 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/alpha/kernel/core_tsunami.c:330:
+        hose->sg_pci->align_entry = 4; /* Tsunami caches 4 PTEs at a time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/alpha/kernel/core_tsunami.c:330:
+        hose->sg_pci->align_entry = 4; /* Tsunami caches 4 PTEs at a time */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#361: FILE: arch/alpha/kernel/pci.c:100:
+	   window, we must avoid the entire 0xfff00000-0xffffffff region.  */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#369: FILE: arch/alpha/kernel/pci.c:105:
+			printk("%s: adjusting direct map size to 0x%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#370: FILE: arch/alpha/kernel/pci.c:106:
+			       __FUNCTION__, __direct_map_size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/alpha/kernel/pci.c:113:
+ ^I^I^I^Iprintk("%s: adjusting PCI S/G size to 0x%x\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#379: FILE: arch/alpha/kernel/pci.c:113:
+ ^I^I^I^Iprintk("%s: adjusting PCI S/G size to 0x%x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/alpha/kernel/pci.c:113:
+ ^I^I^I^Iprintk("%s: adjusting PCI S/G size to 0x%x\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#379: FILE: arch/alpha/kernel/pci.c:113:
+ 				printk("%s: adjusting PCI S/G size to 0x%x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#380: FILE: arch/alpha/kernel/pci.c:114:
+				       __FUNCTION__, pci->size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#401: FILE: arch/alpha/kernel/pci_impl.h:61:
+#define T2_DEFAULT_MEM_BASE ((16+1)*1024*1024)
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#401: FILE: arch/alpha/kernel/pci_impl.h:61:
+#define T2_DEFAULT_MEM_BASE ((16+1)*1024*1024)
                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#401: FILE: arch/alpha/kernel/pci_impl.h:61:
+#define T2_DEFAULT_MEM_BASE ((16+1)*1024*1024)
                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#425: FILE: arch/alpha/kernel/proto.h:62:
+extern void t2_pci_tbi(struct pci_controller *, dma_addr_t, dma_addr_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_controller *' should also have an identifier name
#425: FILE: arch/alpha/kernel/proto.h:62:
+extern void t2_pci_tbi(struct pci_controller *, dma_addr_t, dma_addr_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#425: FILE: arch/alpha/kernel/proto.h:62:
+extern void t2_pci_tbi(struct pci_controller *, dma_addr_t, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#425: FILE: arch/alpha/kernel/proto.h:62:
+extern void t2_pci_tbi(struct pci_controller *, dma_addr_t, dma_addr_t);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#436: FILE: arch/alpha/kernel/sys_alcor.c:254:
+	max_dma_address:	ALPHA_ALCOR_MAX_DMA_ADDRESS,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#436: FILE: arch/alpha/kernel/sys_alcor.c:254:
+	max_dma_address:	ALPHA_ALCOR_MAX_DMA_ADDRESS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#447: FILE: arch/alpha/kernel/sys_sable.c:293:
+	max_dma_address:	ALPHA_SABLE_MAX_DMA_ADDRESS,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#447: FILE: arch/alpha/kernel/sys_sable.c:293:
+	max_dma_address:	ALPHA_SABLE_MAX_DMA_ADDRESS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#450: FILE: arch/alpha/kernel/sys_sable.c:295:
+	min_mem_address:	T2_DEFAULT_MEM_BASE,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#450: FILE: arch/alpha/kernel/sys_sable.c:295:
+	min_mem_address:	T2_DEFAULT_MEM_BASE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#459: FILE: arch/alpha/kernel/sys_sable.c:325:
+	max_dma_address:	ALPHA_SABLE_MAX_DMA_ADDRESS,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#459: FILE: arch/alpha/kernel/sys_sable.c:325:
+	max_dma_address:	ALPHA_SABLE_MAX_DMA_ADDRESS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#462: FILE: arch/alpha/kernel/sys_sable.c:327:
+	min_mem_address:	T2_DEFAULT_MEM_BASE,
 	               ^

WARNING:INDENTED_LABEL: labels should not be indented
#462: FILE: arch/alpha/kernel/sys_sable.c:327:
+	min_mem_address:	T2_DEFAULT_MEM_BASE,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#482: FILE: arch/alpha/kernel/time.c:259:
 	do {
+	  count+=100; /* by 1 takes too long to timeout from 0 */

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#484: FILE: arch/alpha/kernel/time.c:260:
+	  count+=100; /* by 1 takes too long to timeout from 0 */
 	       ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#500: FILE: arch/alpha/kernel/traps.c:32:
+static int opDEC_checked = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <opDEC_checked>
#500: FILE: arch/alpha/kernel/traps.c:32:
+static int opDEC_checked = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#508: FILE: arch/alpha/kernel/traps.c:40:
+	if (opDEC_checked) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#640: FILE: include/asm-alpha/dma.h:79:
+/*
+  ISA DMA limitations on Alpha platforms,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#647: FILE: include/asm-alpha/dma.h:86:
+/* The maximum address for ISA DMA transfer on Alpha XL, due to an
+   hardware SIO limitation, is 64MB.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#652: FILE: include/asm-alpha/dma.h:88:
+#define ALPHA_XL_MAX_DMA_ADDRESS	(IDENT_ADDR+0x04000000UL)
                                 	           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#655: FILE: include/asm-alpha/dma.h:91:
+/* The maximum address for ISA DMA transfer on RUFFIAN and NAUTILUS,
+   due to an hardware SIO limitation, is 16MB.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#662: FILE: include/asm-alpha/dma.h:93:
+#define ALPHA_RUFFIAN_MAX_DMA_ADDRESS	(IDENT_ADDR+0x01000000UL)
                                      	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#663: FILE: include/asm-alpha/dma.h:94:
+#define ALPHA_NAUTILUS_MAX_DMA_ADDRESS	(IDENT_ADDR+0x01000000UL)
                                       	           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#666: FILE: include/asm-alpha/dma.h:97:
+/* The maximum address for ISA DMA transfer on SABLE, and some ALCORs,
+   due to an hardware SIO chip limitation, is 2GB.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#668: FILE: include/asm-alpha/dma.h:99:
+#define ALPHA_SABLE_MAX_DMA_ADDRESS	(IDENT_ADDR+0x80000000UL)
                                    	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#669: FILE: include/asm-alpha/dma.h:100:
+#define ALPHA_ALCOR_MAX_DMA_ADDRESS	(IDENT_ADDR+0x80000000UL)
                                    	           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#672: FILE: include/asm-alpha/dma.h:103:
+/*
+  Maximum address for all the others is the complete 32-bit bus

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#679: FILE: include/asm-alpha/dma.h:106:
+#define ALPHA_MAX_DMA_ADDRESS		(IDENT_ADDR+0x100000000UL)
                              		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#718: FILE: include/asm-alpha/floppy.h:111:
+#define CROSS_64KB(a,s)						\
                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 39 warnings, 12 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
