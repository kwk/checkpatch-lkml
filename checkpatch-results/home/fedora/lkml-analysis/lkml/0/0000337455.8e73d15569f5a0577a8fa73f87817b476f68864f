WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	           ChangeSet	1.1284  -> 1.1285 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	include/linux/notifier.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#	       mm/oom_kill.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#	         mm/Makefile	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#	        init/Kconfig	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	               (new)	        -> 1.1     mm/oom_panic.c 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	               (new)	        -> 1.1     include/linux/oom_notifier.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	               (new)	        -> 1.1     mm/oom_notifier.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# 03/09/11	rusty@penguin.co.intel.com	1.1285

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
# Initial attempt at an oom notifier

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#74: 
--- a/include/linux/notifier.h	Thu Sep 11 18:34:47 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: include/linux/oom_notifier.h:1:
+#ifndef _LINUX_OOM_NOTIFIER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/linux/oom_notifier.h:4:
+int register_oom_notifier(struct notifier_block * nb);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: include/linux/oom_notifier.h:5:
+int unregister_oom_notifier(struct notifier_block * nb);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#102: FILE: init/Kconfig:165:
+config OOM_KILL
+        bool "Kill process on out-of-memory conditions"
+	---help---
+	 This option enables the traditional oom_kill.c mechanism for
+         killing processes in an attempt to recover from an out-of-memory
+         condition.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: init/Kconfig:172:
+config OOM_PANIC
+	tristate "Panic on out-of-memory conditions"
+	---help---
+	 This option enables panic() to be called when a system is out of
+         memory.  This feature along with /proc/sys/kernel/panic allows a
+         different behavior on out-of-memory conditions when the standard
+         behavior (killing processes in an attempt to recover) does not 
+         make sense.
 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: init/Kconfig:178:
+         behavior (killing processes in an attempt to recover) does not $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: mm/oom_kill.c:313:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: mm/oom_kill.c:313:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: mm/oom_kill.c:325:
+	printk("Registering oom_kill handler\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#185: FILE: mm/oom_notifier.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#186: FILE: mm/oom_notifier.c:2:
+ * linux/mm/oom_notifier.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#195: FILE: mm/oom_notifier.c:11:
+static struct notifier_block * oom_notify_list = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: mm/oom_notifier.c:11:
+static struct notifier_block * oom_notify_list = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#197: FILE: mm/oom_notifier.c:13:
+int register_oom_notifier(struct notifier_block * nb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: mm/oom_notifier.c:16:
+	int err;
+	down(&notify_mutex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#207: FILE: mm/oom_notifier.c:23:
+int unregister_oom_notifier(struct notifier_block * nb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: mm/oom_notifier.c:26:
+	int err;
+	down(&notify_mutex);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#227: FILE: mm/oom_panic.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#228: FILE: mm/oom_panic.c:2:
+ * linux/mm/oom_panic.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: mm/oom_panic.c:4:
+ * This is a very simple component that will cause the kernel to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: mm/oom_panic.c:7:
+ *       $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: mm/oom_panic.c:16:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: mm/oom_panic.c:16:
+static int oom_notify(struct notifier_block * s, unsigned long v, void * d)

WARNING:LINE_SPACING: Missing a blank line after declarations
#255: FILE: mm/oom_panic.c:29:
+	int err;
+	printk(KERN_INFO "Installing oom_panic handler\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#255: FILE: mm/oom_panic.c:29:
+	printk(KERN_INFO "Installing oom_panic handler\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#257: FILE: mm/oom_panic.c:31:
+	if (err) printk(KERN_ERR "Error installing oom_panic handler\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#257: FILE: mm/oom_panic.c:31:
+	if (err) printk(KERN_ERR "Error installing oom_panic handler\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 33 warnings, 0 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337455.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
