WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#98: FILE: arch/i386/kernel/acpi/boot.c:603:
+		printk(KERN_INFO PREFIX "HPET id: %#x base: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: arch/i386/kernel/acpi/boot.c:604:
+		printk(KERN_INFO PREFIX "HPET id: %#x base: %#lx\n",
+			hpet_tbl->id, hpet_address);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#157: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#622: FILE: arch/x86_64/kernel/time.c:337:
+	static unsigned long rtc_update = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: arch/x86_64/kernel/time.c:347:
+	if (ts.tv_sec > rtc_update &&
+		abs(ts.tv_nsec - 500000000) <= tick_nsec / 2) {

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#756: FILE: arch/x86_64/kernel/time.c:1043:
+static unsigned long current_tsc_khz = 0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#769: FILE: arch/x86_64/kernel/time.c:1056:
+static cycle_t __vsyscall_fn vread_tsc(void* unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#802: FILE: arch/x86_64/kernel/time.c:1089:
+	if (current_tsc_khz != tsc_khz){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: arch/x86_64/kernel/time.c:1092:
+		clocksource_tsc.mult = clocksource_khz2mult(current_tsc_khz,
+							clocksource_tsc.shift);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#816: FILE: arch/x86_64/kernel/time.c:1103:
+		clocksource_tsc.mult = clocksource_khz2mult(current_tsc_khz,
+							clocksource_tsc.shift);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#824: FILE: arch/x86_64/kernel/time.c:1111:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#838: FILE: arch/x86_64/kernel/time.c:1125:
+static cycle_t __vsyscall_fn vread_hpet(void* ptr)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#865: FILE: arch/x86_64/kernel/time.c:1152:
+		(void __iomem*)ioremap_nocache(hpet_address, HPET_MMAP_SIZE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#932: FILE: arch/x86_64/kernel/vsyscall.c:32:
 
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#951: FILE: arch/x86_64/kernel/vsyscall.c:54:
+extern struct vsyscall_gtod_data_t vsyscall_gtod_data;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#954: FILE: arch/x86_64/kernel/vsyscall.c:57:
+extern seqlock_t vsyscall_gtod_lock;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: arch/x86_64/kernel/vsyscall.c:81:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz)
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: arch/x86_64/kernel/vsyscall.c:81:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz)
 		                                  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1017: FILE: arch/x86_64/kernel/vsyscall.c:102:
+		now = __vsyscall_gtod_data.clock.vread(

CHECK:SPACING: No space is necessary after a cast
#1036: FILE: arch/x86_64/kernel/vsyscall.c:121:
+	tv->tv_usec += (unsigned long) nsec_delta;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1083: FILE: arch/x86_64/kernel/vsyscall.c:196:
+void arch_update_vsyscall_gtod(struct timespec wall_time, cycle_t offset_base,
+				struct clocksource *clock, int ntp_adj)

WARNING:REPEATED_WORD: Possible repeated word: 'hack'
#1089: FILE: arch/x86_64/kernel/vsyscall.c:202:
+	/* XXX - hackitty hack hack. this is terrible! */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1095: FILE: arch/x86_64/kernel/vsyscall.c:208:
+	vsyscall_gtod_data.wall_time_tv.tv_usec = wall_time.tv_nsec/1000;
 	                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1132: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1132: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#1132: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
+({							\
+	u64 result = dividend;				\
+	*remainder = do_div(result,divisor);		\
+	result;						\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: include/asm-generic/div64.h:62:
+	*remainder = do_div(result,divisor);		\
 	                          ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1167: FILE: include/asm-x86_64/timeofday.h:1:
+#ifndef _ASM_X86_64_TIMEOFDAY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1181: FILE: include/asm-x86_64/timex.h:29:
+extern void mark_tsc_unstable(void);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))
                                                                                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_gtod_data") over __attribute__((__section__(".vsyscall_gtod_data")))
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1203: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))
                                                                                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_gtod_lock") over __attribute__((__section__(".vsyscall_gtod_lock")))
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1204: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1205: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))
                                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1205: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_fn") over __attribute__((__section__(".vsyscall_fn")))
#1205: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1205: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1206: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))
                                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1206: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_data") over __attribute__((__section__(".vsyscall_data")))
#1206: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1206: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 20 warnings, 12 checks, 954 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
