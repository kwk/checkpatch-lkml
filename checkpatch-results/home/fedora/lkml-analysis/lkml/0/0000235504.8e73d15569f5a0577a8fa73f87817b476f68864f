WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#55: 
wait_for_completion is design dependant; privatise that.
                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct completion *' should also have an identifier name
#67: FILE: include/linux/scheduler.h:3:
+	void (*wait_for_completion)(struct completion *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#234: FILE: kernel/scheduler.c:754:
+int try_to_wake_up(task_t *task, unsigned state, int sync);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: kernel/scheduler.c:761:
+int fastcall wake_up_process(task_t * p)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: kernel/scheduler.c:764:
+^I^I       ^I^I TASK_INTERRUPTIBLE | TASK_UNINTERRUPTIBLE, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: kernel/scheduler.c:764:
+^I^I       ^I^I TASK_INTERRUPTIBLE | TASK_UNINTERRUPTIBLE, 0);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#264: FILE: kernel/scheduler.c:784:
+		unsigned flags;

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: kernel/scheduler.c:785:
+		unsigned flags;
+		curr = list_entry(tmp, wait_queue_t, task_list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: kernel/scheduler.c:801:
+void fastcall __wake_up(wait_queue_head_t *q, unsigned int mode,
+				int nr_exclusive, void *key)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: kernel/scheduler.c:811:
+int default_wake_function(wait_queue_t *curr, unsigned mode, int sync, void *key)

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: kernel/scheduler.c:814:
+	task_t *p = curr->task;
+	return try_to_wake_up(p, mode, sync);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#353: FILE: kernel/scheduler.c:873:
+	x->done += UINT_MAX/2;
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235504.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 2 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235504.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
