WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#164: FILE: include/asm-i386/bitops.h:250:
+static __always_inline int constant_test_bit(int nr, const volatile unsigned long *addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: include/asm-i386/current.h:8:
+static __always_inline struct task_struct * get_current(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: include/asm-i386/string.h:204:
+static __always_inline void * __memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: include/asm-i386/string.h:204:
+static __always_inline void * __memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: include/asm-i386/string.h:204:
+static __always_inline void * __memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/asm-i386/string.h:226:
+static __always_inline void * __constant_memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/asm-i386/string.h:226:
+static __always_inline void * __constant_memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: include/asm-i386/string.h:226:
+static __always_inline void * __constant_memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: include/asm-i386/string.h:370:
+static __always_inline void * __constant_c_memset(void * s, unsigned long c, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: include/asm-i386/string.h:370:
+static __always_inline void * __constant_c_memset(void * s, unsigned long c, size_t count)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#217: FILE: include/asm-i386/string.h:419:
+static __always_inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: include/asm-i386/string.h:419:
+static __always_inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: include/asm-i386/string.h:419:
+static __always_inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#272: FILE: include/linux/byteorder/swab.h:137:
 }
+static __always_inline __u16 __swab16p(const __u16 *x)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#277: FILE: include/linux/byteorder/swab.h:141:
 }
+static __always_inline void __swab16s(__u16 *addr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#288: FILE: include/linux/byteorder/swab.h:150:
 }
+static __always_inline __u32 __swab32p(const __u32 *x)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#293: FILE: include/linux/byteorder/swab.h:154:
 }
+static __always_inline void __swab32s(__u32 *addr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#309: FILE: include/linux/byteorder/swab.h:170:
 }
+static __always_inline __u64 __swab64p(const __u64 *x)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#314: FILE: include/linux/byteorder/swab.h:174:
 }
+static __always_inline void __swab64s(__u64 *addr)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 2 warnings, 6 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
