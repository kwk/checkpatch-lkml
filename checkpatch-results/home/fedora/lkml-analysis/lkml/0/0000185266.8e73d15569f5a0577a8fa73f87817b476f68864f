ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: arch/um/kernel/ptrace.c:24:
+        if (on)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: arch/um/kernel/ptrace.c:24:
+        if (on)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: arch/um/kernel/ptrace.c:25:
+                child->ptrace |= PT_DTRACE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: arch/um/kernel/ptrace.c:25:
+                child->ptrace |= PT_DTRACE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: arch/um/kernel/ptrace.c:26:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: arch/um/kernel/ptrace.c:26:
+        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: arch/um/kernel/ptrace.c:27:
+                child->ptrace &= ~PT_DTRACE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/um/kernel/ptrace.c:27:
+                child->ptrace &= ~PT_DTRACE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: arch/um/kernel/ptrace.c:28:
+        child->thread.singlestep_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/um/kernel/ptrace.c:28:
+        child->thread.singlestep_syscall = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: arch/um/kernel/ptrace.c:31:
+        SUBARCH_SET_SINGLESTEPPING(child, on)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: arch/um/kernel/ptrace.c:31:
+        SUBARCH_SET_SINGLESTEPPING(child, on)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: arch/um/kernel/ptrace.c:33:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: arch/um/kernel/ptrace.c:33:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: arch/um/kernel/ptrace.c:40:
+        set_singlestepping(child,0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/um/kernel/ptrace.c:40:
+        set_singlestepping(child,0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#72: FILE: arch/um/kernel/ptrace.c:40:
+        set_singlestepping(child,0);
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: arch/um/kernel/ptrace.c:43:
+extern int peek_user(struct task_struct * child, long addr, long data);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: arch/um/kernel/ptrace.c:44:
+extern int poke_user(struct task_struct * child, long addr, long data);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#76: FILE: arch/um/kernel/ptrace.c:44:
+extern int poke_user(struct task_struct * child, long addr, long data);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: arch/um/kernel/ptrace.c:86:
+        SUBARCH_PTRACE_SPECIAL(child,request,addr,data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/um/kernel/ptrace.c:86:
+        SUBARCH_PTRACE_SPECIAL(child,request,addr,data)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: arch/um/kernel/ptrace.c:86:
+        SUBARCH_PTRACE_SPECIAL(child,request,addr,data)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: arch/um/kernel/ptrace.c:86:
+        SUBARCH_PTRACE_SPECIAL(child,request,addr,data)
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: arch/um/kernel/ptrace.c:86:
+        SUBARCH_PTRACE_SPECIAL(child,request,addr,data)
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/um/kernel/ptrace.c:109:
+        case PTRACE_PEEKUSR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/um/kernel/ptrace.c:109:
+        case PTRACE_PEEKUSR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/um/kernel/ptrace.c:110:
+                ret = peek_user(child, addr, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/um/kernel/ptrace.c:110:
+                ret = peek_user(child, addr, data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: arch/um/kernel/ptrace.c:111:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/um/kernel/ptrace.c:111:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/um/kernel/ptrace.c:124:
+                ret = poke_user(child, addr, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/um/kernel/ptrace.c:124:
+                ret = poke_user(child, addr, data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/um/kernel/ptrace.c:125:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/um/kernel/ptrace.c:125:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/um/kernel/ptrace.c:133:
+                set_singlestepping(child, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/um/kernel/ptrace.c:133:
+                set_singlestepping(child, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/um/kernel/ptrace.c:156:
+                set_singlestepping(child, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/um/kernel/ptrace.c:156:
+                set_singlestepping(child, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/um/kernel/ptrace.c:167:
+                set_singlestepping(child, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/um/kernel/ptrace.c:167:
+                set_singlestepping(child, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/um/sys-i386/ptrace.c:78:
+        if ((addr & 3) || addr < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/um/sys-i386/ptrace.c:78:
+        if ((addr & 3) || addr < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/um/sys-i386/ptrace.c:79:
+                return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/um/sys-i386/ptrace.c:79:
+                return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/um/sys-i386/ptrace.c:81:
+        if (addr < MAX_REG_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/um/sys-i386/ptrace.c:81:
+        if (addr < MAX_REG_OFFSET)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#196: FILE: arch/um/sys-i386/ptrace.c:81:
+        if (addr < MAX_REG_OFFSET)
[...]
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/um/sys-i386/ptrace.c:82:
+                return putreg(child, addr, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/um/sys-i386/ptrace.c:82:
+                return putreg(child, addr, data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/um/sys-i386/ptrace.c:84:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/um/sys-i386/ptrace.c:84:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: arch/um/sys-i386/ptrace.c:84:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/um/sys-i386/ptrace.c:85:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/um/sys-i386/ptrace.c:85:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

ERROR:SPACING: space required before the open brace '{'
#200: FILE: arch/um/sys-i386/ptrace.c:85:
+                (addr <= offsetof(struct user, u_debugreg[7]))){

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/um/sys-i386/ptrace.c:86:
+                addr -= offsetof(struct user, u_debugreg[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/um/sys-i386/ptrace.c:86:
+                addr -= offsetof(struct user, u_debugreg[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/um/sys-i386/ptrace.c:87:
+                addr = addr >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/um/sys-i386/ptrace.c:87:
+                addr = addr >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/um/sys-i386/ptrace.c:88:
+                if((addr == 4) || (addr == 5)) return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/um/sys-i386/ptrace.c:88:
+                if((addr == 4) || (addr == 5)) return -EIO;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == 4'
#203: FILE: arch/um/sys-i386/ptrace.c:88:
+                if((addr == 4) || (addr == 5)) return -EIO;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == 5'
#203: FILE: arch/um/sys-i386/ptrace.c:88:
+                if((addr == 4) || (addr == 5)) return -EIO;

ERROR:SPACING: space required before the open parenthesis '('
#203: FILE: arch/um/sys-i386/ptrace.c:88:
+                if((addr == 4) || (addr == 5)) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#203: FILE: arch/um/sys-i386/ptrace.c:88:
+                if((addr == 4) || (addr == 5)) return -EIO;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/um/sys-i386/ptrace.c:89:
+                child->thread.arch.debugregs[addr] = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/um/sys-i386/ptrace.c:89:
+                child->thread.arch.debugregs[addr] = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/um/sys-i386/ptrace.c:90:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/um/sys-i386/ptrace.c:90:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/um/sys-i386/ptrace.c:91:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/um/sys-i386/ptrace.c:91:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: arch/um/sys-i386/ptrace.c:92:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/um/sys-i386/ptrace.c:92:
+        return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/um/sys-i386/ptrace.c:118:
+        unsigned long tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/um/sys-i386/ptrace.c:118:
+        unsigned long tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/um/sys-i386/ptrace.c:120:
+        if ((addr & 3) || addr < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/um/sys-i386/ptrace.c:120:
+        if ((addr & 3) || addr < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/um/sys-i386/ptrace.c:121:
+                return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/um/sys-i386/ptrace.c:121:
+                return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/um/sys-i386/ptrace.c:123:
+        tmp = 0;  /* Default return condition */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/um/sys-i386/ptrace.c:123:
+        tmp = 0;  /* Default return condition */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/um/sys-i386/ptrace.c:124:
+        if(addr < MAX_REG_OFFSET){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/um/sys-i386/ptrace.c:124:
+        if(addr < MAX_REG_OFFSET){$

ERROR:SPACING: space required before the open brace '{'
#226: FILE: arch/um/sys-i386/ptrace.c:124:
+        if(addr < MAX_REG_OFFSET){

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: arch/um/sys-i386/ptrace.c:124:
+        if(addr < MAX_REG_OFFSET){

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/um/sys-i386/ptrace.c:125:
+                tmp = getreg(child, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/um/sys-i386/ptrace.c:125:
+                tmp = getreg(child, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/um/sys-i386/ptrace.c:126:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/um/sys-i386/ptrace.c:126:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/um/sys-i386/ptrace.c:127:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/um/sys-i386/ptrace.c:127:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: arch/um/sys-i386/ptrace.c:127:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#229: FILE: arch/um/sys-i386/ptrace.c:127:
+        }
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/um/sys-i386/ptrace.c:128:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/um/sys-i386/ptrace.c:128:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

ERROR:SPACING: space required before the open brace '{'
#230: FILE: arch/um/sys-i386/ptrace.c:128:
+                (addr <= offsetof(struct user, u_debugreg[7]))){

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/um/sys-i386/ptrace.c:129:
+                addr -= offsetof(struct user, u_debugreg[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/um/sys-i386/ptrace.c:129:
+                addr -= offsetof(struct user, u_debugreg[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/um/sys-i386/ptrace.c:130:
+                addr = addr >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/um/sys-i386/ptrace.c:130:
+                addr = addr >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/um/sys-i386/ptrace.c:131:
+                tmp = child->thread.arch.debugregs[addr];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/um/sys-i386/ptrace.c:131:
+                tmp = child->thread.arch.debugregs[addr];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/um/sys-i386/ptrace.c:132:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/um/sys-i386/ptrace.c:132:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/um/sys-i386/ptrace.c:133:
+        return put_user(tmp, (unsigned long *) data);$

CHECK:SPACING: No space is necessary after a cast
#235: FILE: arch/um/sys-i386/ptrace.c:133:
+        return put_user(tmp, (unsigned long *) data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/um/sys-i386/ptrace.c:133:
+        return put_user(tmp, (unsigned long *) data);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#254: FILE: arch/um/sys-ppc/ptrace.c:16:
+	if (addr < MAX_REG_OFFSET)
[...]
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#257: FILE: arch/um/sys-ppc/ptrace.c:19:
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&
[...]
+		  addr -= offsetof(struct user, u_debugreg[0]);

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: arch/um/sys-ppc/ptrace.c:19:
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:SPACING: space required before the open brace '{'
#258: FILE: arch/um/sys-ppc/ptrace.c:20:
+		(addr <= offsetof(struct user, u_debugreg[7]))){

WARNING:TABSTOP: Statements should start on a tabstop
#261: FILE: arch/um/sys-ppc/ptrace.c:23:
+		  if((addr == 4) || (addr == 5)) return -EIO;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == 4'
#261: FILE: arch/um/sys-ppc/ptrace.c:23:
+		  if((addr == 4) || (addr == 5)) return -EIO;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == 5'
#261: FILE: arch/um/sys-ppc/ptrace.c:23:
+		  if((addr == 4) || (addr == 5)) return -EIO;

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: arch/um/sys-ppc/ptrace.c:23:
+		  if((addr == 4) || (addr == 5)) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#261: FILE: arch/um/sys-ppc/ptrace.c:23:
+		  if((addr == 4) || (addr == 5)) return -EIO;

WARNING:TABSTOP: Statements should start on a tabstop
#263: FILE: arch/um/sys-ppc/ptrace.c:25:
+		  return 0;

ERROR:SPACING: space required before the open brace '{'
#284: FILE: arch/um/sys-ppc/ptrace.c:47:
+	if(addr < MAX_REG_OFFSET){

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: arch/um/sys-ppc/ptrace.c:47:
+	if(addr < MAX_REG_OFFSET){

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: arch/um/sys-ppc/ptrace.c:50:
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#287: FILE: arch/um/sys-ppc/ptrace.c:50:
+	}
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:SPACING: space required before the open brace '{'
#288: FILE: arch/um/sys-ppc/ptrace.c:51:
+		(addr <= offsetof(struct user, u_debugreg[7]))){

CHECK:SPACING: No space is necessary after a cast
#293: FILE: arch/um/sys-ppc/ptrace.c:56:
+	return put_user(tmp, (unsigned long *) data);

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/um/sys-x86_64/ptrace.c:67:
+        if ((addr & 3) || addr < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/um/sys-x86_64/ptrace.c:67:
+        if ((addr & 3) || addr < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/um/sys-x86_64/ptrace.c:68:
+                return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/um/sys-x86_64/ptrace.c:68:
+                return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/um/sys-x86_64/ptrace.c:70:
+        if (addr < MAX_REG_OFFSET)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/um/sys-x86_64/ptrace.c:70:
+        if (addr < MAX_REG_OFFSET)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/um/sys-x86_64/ptrace.c:71:
+                return putreg(child, addr, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/um/sys-x86_64/ptrace.c:71:
+                return putreg(child, addr, data);$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#315: FILE: arch/um/sys-x86_64/ptrace.c:73:
+#if 0 /* Need x86_64 debugregs handling */

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: arch/um/sys-x86_64/ptrace.c:74:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/um/sys-x86_64/ptrace.c:74:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

ERROR:SPACING: space required before the open parenthesis '('
#316: FILE: arch/um/sys-x86_64/ptrace.c:74:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: arch/um/sys-x86_64/ptrace.c:75:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: arch/um/sys-x86_64/ptrace.c:75:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

ERROR:SPACING: space required before the open brace '{'
#317: FILE: arch/um/sys-x86_64/ptrace.c:75:
+                (addr <= offsetof(struct user, u_debugreg[7]))){

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: arch/um/sys-x86_64/ptrace.c:76:
+                addr -= offsetof(struct user, u_debugreg[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: arch/um/sys-x86_64/ptrace.c:76:
+                addr -= offsetof(struct user, u_debugreg[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/um/sys-x86_64/ptrace.c:77:
+                addr = addr >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/um/sys-x86_64/ptrace.c:77:
+                addr = addr >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/um/sys-x86_64/ptrace.c:78:
+                if((addr == 4) || (addr == 5)) return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/um/sys-x86_64/ptrace.c:78:
+                if((addr == 4) || (addr == 5)) return -EIO;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == 4'
#320: FILE: arch/um/sys-x86_64/ptrace.c:78:
+                if((addr == 4) || (addr == 5)) return -EIO;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr == 5'
#320: FILE: arch/um/sys-x86_64/ptrace.c:78:
+                if((addr == 4) || (addr == 5)) return -EIO;

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: arch/um/sys-x86_64/ptrace.c:78:
+                if((addr == 4) || (addr == 5)) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#320: FILE: arch/um/sys-x86_64/ptrace.c:78:
+                if((addr == 4) || (addr == 5)) return -EIO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: arch/um/sys-x86_64/ptrace.c:79:
+                child->thread.arch.debugregs[addr] = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/um/sys-x86_64/ptrace.c:79:
+                child->thread.arch.debugregs[addr] = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/um/sys-x86_64/ptrace.c:80:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/um/sys-x86_64/ptrace.c:80:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: arch/um/sys-x86_64/ptrace.c:81:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/um/sys-x86_64/ptrace.c:81:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: arch/um/sys-x86_64/ptrace.c:83:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/um/sys-x86_64/ptrace.c:83:
+        return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: arch/um/sys-x86_64/ptrace.c:111:
+        unsigned long tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/um/sys-x86_64/ptrace.c:111:
+        unsigned long tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/um/sys-x86_64/ptrace.c:113:
+        if ((addr & 3) || addr < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/um/sys-x86_64/ptrace.c:113:
+        if ((addr & 3) || addr < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/um/sys-x86_64/ptrace.c:114:
+                return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/um/sys-x86_64/ptrace.c:114:
+                return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/um/sys-x86_64/ptrace.c:116:
+        tmp = 0;  /* Default return condition */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/um/sys-x86_64/ptrace.c:116:
+        tmp = 0;  /* Default return condition */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/um/sys-x86_64/ptrace.c:117:
+        if(addr < MAX_REG_OFFSET){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/um/sys-x86_64/ptrace.c:117:
+        if(addr < MAX_REG_OFFSET){$

ERROR:SPACING: space required before the open brace '{'
#344: FILE: arch/um/sys-x86_64/ptrace.c:117:
+        if(addr < MAX_REG_OFFSET){

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: arch/um/sys-x86_64/ptrace.c:117:
+        if(addr < MAX_REG_OFFSET){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#344: FILE: arch/um/sys-x86_64/ptrace.c:117:
+        if(addr < MAX_REG_OFFSET){
+                tmp = getreg(child, addr);
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/um/sys-x86_64/ptrace.c:118:
+                tmp = getreg(child, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/um/sys-x86_64/ptrace.c:118:
+                tmp = getreg(child, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/um/sys-x86_64/ptrace.c:119:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/um/sys-x86_64/ptrace.c:119:
+        }$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#347: FILE: arch/um/sys-x86_64/ptrace.c:120:
+#if 0 /* Need x86_64 debugregs handling */

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/um/sys-x86_64/ptrace.c:121:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/um/sys-x86_64/ptrace.c:121:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&$

ERROR:SPACING: space required before the open parenthesis '('
#348: FILE: arch/um/sys-x86_64/ptrace.c:121:
+        else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/um/sys-x86_64/ptrace.c:122:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/um/sys-x86_64/ptrace.c:122:
+                (addr <= offsetof(struct user, u_debugreg[7]))){$

ERROR:SPACING: space required before the open brace '{'
#349: FILE: arch/um/sys-x86_64/ptrace.c:122:
+                (addr <= offsetof(struct user, u_debugreg[7]))){

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/um/sys-x86_64/ptrace.c:123:
+                addr -= offsetof(struct user, u_debugreg[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/um/sys-x86_64/ptrace.c:123:
+                addr -= offsetof(struct user, u_debugreg[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/um/sys-x86_64/ptrace.c:124:
+                addr = addr >> 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/um/sys-x86_64/ptrace.c:124:
+                addr = addr >> 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/um/sys-x86_64/ptrace.c:125:
+                tmp = child->thread.arch.debugregs[addr];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/um/sys-x86_64/ptrace.c:125:
+                tmp = child->thread.arch.debugregs[addr];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/um/sys-x86_64/ptrace.c:126:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/um/sys-x86_64/ptrace.c:126:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/um/sys-x86_64/ptrace.c:128:
+        return put_user(tmp, (unsigned long *) data);$

CHECK:SPACING: No space is necessary after a cast
#355: FILE: arch/um/sys-x86_64/ptrace.c:128:
+        return put_user(tmp, (unsigned long *) data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/um/sys-x86_64/ptrace.c:128:
+        return put_user(tmp, (unsigned long *) data);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 103 errors, 78 warnings, 11 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000185266.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
