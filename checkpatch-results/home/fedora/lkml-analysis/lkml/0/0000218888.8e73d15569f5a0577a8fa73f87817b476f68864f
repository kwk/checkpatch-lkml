CHECK:CAMELCASE: Avoid CamelCase: <system_reset_iSeries>
#58: FILE: arch/ppc64/kernel/LparData.c:62:
+extern void system_reset_iSeries(void);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#58: FILE: arch/ppc64/kernel/LparData.c:62:
+extern void system_reset_iSeries(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <machine_check_iSeries>
#59: FILE: arch/ppc64/kernel/LparData.c:63:
+extern void machine_check_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#59: FILE: arch/ppc64/kernel/LparData.c:63:
+extern void machine_check_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <data_access_iSeries>
#60: FILE: arch/ppc64/kernel/LparData.c:64:
+extern void data_access_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#60: FILE: arch/ppc64/kernel/LparData.c:64:
+extern void data_access_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <instruction_access_iSeries>
#61: FILE: arch/ppc64/kernel/LparData.c:65:
+extern void instruction_access_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#61: FILE: arch/ppc64/kernel/LparData.c:65:
+extern void instruction_access_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <hardware_interrupt_iSeries>
#62: FILE: arch/ppc64/kernel/LparData.c:66:
+extern void hardware_interrupt_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#62: FILE: arch/ppc64/kernel/LparData.c:66:
+extern void hardware_interrupt_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <alignment_iSeries>
#63: FILE: arch/ppc64/kernel/LparData.c:67:
+extern void alignment_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#63: FILE: arch/ppc64/kernel/LparData.c:67:
+extern void alignment_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <program_check_iSeries>
#64: FILE: arch/ppc64/kernel/LparData.c:68:
+extern void program_check_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#64: FILE: arch/ppc64/kernel/LparData.c:68:
+extern void program_check_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <fp_unavailable_iSeries>
#65: FILE: arch/ppc64/kernel/LparData.c:69:
+extern void fp_unavailable_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: arch/ppc64/kernel/LparData.c:69:
+extern void fp_unavailable_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <decrementer_iSeries>
#66: FILE: arch/ppc64/kernel/LparData.c:70:
+extern void decrementer_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#66: FILE: arch/ppc64/kernel/LparData.c:70:
+extern void decrementer_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <trap_0a_iSeries>
#67: FILE: arch/ppc64/kernel/LparData.c:71:
+extern void trap_0a_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#67: FILE: arch/ppc64/kernel/LparData.c:71:
+extern void trap_0a_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <trap_0b_iSeries>
#68: FILE: arch/ppc64/kernel/LparData.c:72:
+extern void trap_0b_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#68: FILE: arch/ppc64/kernel/LparData.c:72:
+extern void trap_0b_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <system_call_iSeries>
#69: FILE: arch/ppc64/kernel/LparData.c:73:
+extern void system_call_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#69: FILE: arch/ppc64/kernel/LparData.c:73:
+extern void system_call_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <single_step_iSeries>
#70: FILE: arch/ppc64/kernel/LparData.c:74:
+extern void single_step_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#70: FILE: arch/ppc64/kernel/LparData.c:74:
+extern void single_step_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <trap_0e_iSeries>
#71: FILE: arch/ppc64/kernel/LparData.c:75:
+extern void trap_0e_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#71: FILE: arch/ppc64/kernel/LparData.c:75:
+extern void trap_0e_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <performance_monitor_iSeries>
#72: FILE: arch/ppc64/kernel/LparData.c:76:
+extern void performance_monitor_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#72: FILE: arch/ppc64/kernel/LparData.c:76:
+extern void performance_monitor_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <data_access_slb_iSeries>
#73: FILE: arch/ppc64/kernel/LparData.c:77:
+extern void data_access_slb_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#73: FILE: arch/ppc64/kernel/LparData.c:77:
+extern void data_access_slb_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <instruction_access_slb_iSeries>
#74: FILE: arch/ppc64/kernel/LparData.c:78:
+extern void instruction_access_slb_iSeries(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#74: FILE: arch/ppc64/kernel/LparData.c:78:
+extern void instruction_access_slb_iSeries(void);

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_secondary_smp_init>
#648: FILE: arch/ppc64/kernel/pSeries_smp.c:59:
+extern void pSeries_secondary_smp_init(unsigned long);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#648: FILE: arch/ppc64/kernel/pSeries_smp.c:59:
+extern void pSeries_secondary_smp_init(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#648: FILE: arch/ppc64/kernel/pSeries_smp.c:59:
+extern void pSeries_secondary_smp_init(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#687: FILE: arch/ppc64/lib/sstep.c:79:
+		regs->nip = (unsigned long) &system_call_common;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218888.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 19 warnings, 19 checks, 606 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218888.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
