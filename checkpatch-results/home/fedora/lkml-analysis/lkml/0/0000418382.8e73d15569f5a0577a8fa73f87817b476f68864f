ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#39: 
--- a/arch/i386/kernel/edd.c	Thu Oct 24 16:22:38 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#64: FILE: arch/i386/kernel/edd.c:86:
+	int (*test) (struct edd_device * edev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#64: FILE: arch/i386/kernel/edd.c:86:
+	int (*test) (struct edd_device * edev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: arch/i386/kernel/edd.c:96:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: arch/i386/kernel/edd.c:96:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: arch/i386/kernel/edd.c:96:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
                                          ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#73: FILE: arch/i386/kernel/edd.c:96:
+#define EDD_DEVICE_ATTR(_name,_mode,_show,_test) \
 struct edd_attribute edd_attr_##_name = { 	\
 	.attr = {.name = __stringify(_name), .mode = _mode },	\
 	.show	= _show,				\
+	.test	= _test,				\
 };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: arch/i386/kernel/edd.c:588:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: arch/i386/kernel/edd.c:589:
+static struct edd_attribute * def_attrs[] = {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: arch/i386/kernel/edd.c:861:
+	for (i = 0; (attr=def_attrs[i]); i++) {
 	                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#183: FILE: arch/i386/kernel/edd.c:863:
+			if ((error = edd_create_file(edev, attr))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#183: FILE: arch/i386/kernel/edd.c:863:
+			if ((error = edd_create_file(edev, attr))) {
 				break;
 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#192: FILE: arch/i386/kernel/edd.c:918:
+	int rc=0;
 	      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418382.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 1 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418382.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
