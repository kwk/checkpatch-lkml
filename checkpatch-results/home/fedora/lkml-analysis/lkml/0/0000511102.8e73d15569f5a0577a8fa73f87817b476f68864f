ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#55: FILE: fs/block_dev.c:29:
(BUFFERED_BLOCKSIZE_BITS - BLOCK_SIZE_BITS))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: fs/block_dev.c:30:
+    if (iblock >=$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#56: FILE: fs/block_dev.c:30:
+    if (iblock >=
[...]
          goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/block_dev.c:45:
+    unsigned long buffered_blocksize = BUFFERED_BLOCKSIZE(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs/block_dev.c:47:
+    if (blocksize != buffered_blocksize)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#72: FILE: fs/block_dev.c:47:
+    if (blocksize != buffered_blocksize)
          BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/block_dev.c:50:
+    nr_blocks = iobuf->length / buffered_blocksize;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#83: FILE: fs/block_dev.c:78:
     if (!page->buffers)
+         create_empty_buffers(page, inode->i_rdev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: fs/block_dev.c:79:
+         create_empty_buffers(page, inode->i_rdev,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: fs/block_dev.c:79:
+         create_empty_buffers(page, inode->i_rdev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: fs/block_dev.c:80:
+         create_empty_buffers(page, inode->i_rdev,
     head = page->buffers;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/block_dev.c:82:
+    block = (page->index << (PAGE_CACHE_SHIFT)) /$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/block_dev.c:136:
+    struct buffer_head *bh, *head, *arr[(1 << PAGE_CACHE_SHIFT ) /$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#101: FILE: fs/block_dev.c:136:
+    struct buffer_head *bh, *head, *arr[(1 << PAGE_CACHE_SHIFT ) /

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#108: FILE: fs/block_dev.c:142:
     if (!page->buffers)
+         create_empty_buffers(page, dev, BUFFERED_BLOCKSIZE(inode));

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/block_dev.c:143:
+         create_empty_buffers(page, dev, BUFFERED_BLOCKSIZE(inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/block_dev.c:143:
+         create_empty_buffers(page, dev, BUFFERED_BLOCKSIZE(inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: fs/block_dev.c:146:
+    blocks = PAGE_CACHE_SIZE / BUFFERED_BLOCKSIZE(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: fs/block_dev.c:147:
+    iblock = (page->index << PAGE_CACHE_SHIFT) /$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: fs/block_dev.c:148:
+    lblock = buffered_blk_size(dev,BUFFERED_BLOCKSIZE(inode)) /$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: fs/block_dev.c:148:
+    lblock = buffered_blk_size(dev,BUFFERED_BLOCKSIZE(inode)) /
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/block_dev.c:163:
+                   memset(kmap(page) + i * BUFFERED_BLOCKSIZE(inode), 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/block_dev.c:163:
+                   memset(kmap(page) + i * BUFFERED_BLOCKSIZE(inode), 0,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/block_dev.c:164:
+                   memset(kmap(page) + i * BUFFERED_BLOCKSIZE(inode), 0,
                    flush_dcache_page(page);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#139: FILE: fs/block_dev.c:212:
     if (!page->buffers)
+         create_empty_buffers(page, dev, BUFFERED_BLOCKSIZE(inode));

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: fs/block_dev.c:213:
+         create_empty_buffers(page, dev, BUFFERED_BLOCKSIZE(inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/block_dev.c:213:
+         create_empty_buffers(page, dev, BUFFERED_BLOCKSIZE(inode));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/block_dev.c:216:
+    block = (page->index << PAGE_CACHE_SHIFT) / BUFFERED_BLOCKSIZE(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: fs/block_dev.c:222:
+         block_end = block_start + BUFFERED_BLOCKSIZE(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/block_dev.c:222:
+         block_end = block_start + BUFFERED_BLOCKSIZE(inode);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#157: FILE: fs/block_dev.c:274:
     for(bh = head = page->buffers, block_start = 0;
[...]
+         block_end = block_start + BUFFERED_BLOCKSIZE(inode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/block_dev.c:277:
+         block_end = block_start + BUFFERED_BLOCKSIZE(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/block_dev.c:277:
+         block_end = block_start + BUFFERED_BLOCKSIZE(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/block_dev.c:382:
+    sb->s_blocksize = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/block_dev.c:383:
+    sb->s_blocksize_bits = PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/linux/blkdev.h:210:
+    int rval = (buffered_size >> BLOCK_SIZE_BITS) - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: include/linux/blkdev.h:212:
+         ret = (blk_size[major][MINOR(dev)] + rval) & ~rval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: include/linux/blkdev.h:212:
+         ret = (blk_size[major][MINOR(dev)] + rval) & ~rval;$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'inode' may be better as '(inode)' to avoid precedence issues
#208: FILE: include/linux/fs.h:50:
+#define BUFFERED_BLOCKSIZE(inode) (inode->i_sb->s_blocksize)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#218: FILE: mm/filemap.c:965:
     else
+         end_index =

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: mm/filemap.c:966:
+         end_index =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: mm/filemap.c:966:
+         end_index =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: mm/filemap.c:978:
+         rsize = (loff_t)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: mm/filemap.c:978:
+         rsize = (loff_t)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#244: FILE: mm/filemap.c:1342:
     } else {
+         kdev_t kdev = inode->i_rdev;

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: mm/filemap.c:1343:
+         kdev_t kdev = inode->i_rdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: mm/filemap.c:1343:
+         kdev_t kdev = inode->i_rdev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: mm/filemap.c:1344:
+         blocksize = blksize_size[MAJOR(kdev)][MINOR(kdev)];$

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: mm/filemap.c:1344:
+         kdev_t kdev = inode->i_rdev;
+         blocksize = blksize_size[MAJOR(kdev)][MINOR(kdev)];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: mm/filemap.c:1344:
+         blocksize = blksize_size[MAJOR(kdev)][MINOR(kdev)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: mm/filemap.c:1346:
+    for (blocksize_bits = BLOCK_SIZE_BITS; blocksize >>$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#250: FILE: mm/filemap.c:1346:
+    for (blocksize_bits = BLOCK_SIZE_BITS; blocksize >>
(blocksize_bits+1); blocksize_bits ++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511102.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 34 warnings, 3 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511102.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
