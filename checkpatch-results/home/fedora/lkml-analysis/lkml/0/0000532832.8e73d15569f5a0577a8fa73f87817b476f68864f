WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> > As for the `to' argument, yes it is redundant since it is just kmap(page).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#109: FILE: arch/alpha/kernel/alpha_ksyms.c:102:
+EXPORT_SYMBOL(__clear_page);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: No space is necessary after a cast
#295: FILE: arch/ia64/mm/init.c:313:
+	__clear_page((void *) ZERO_PAGE_ADDR);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#452: FILE: arch/ppc/kernel/ppc_ksyms.c:76:
+EXPORT_SYMBOL(__clear_page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#523: FILE: include/asm-alpha/page.h:15:
+extern void __clear_page(void *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: include/asm-alpha/page.h:16:
+extern void __copy_page(void * _to, void * _from);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#524: FILE: include/asm-alpha/page.h:16:
+extern void __copy_page(void * _to, void * _from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#524: FILE: include/asm-alpha/page.h:16:
+extern void __copy_page(void * _to, void * _from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: include/asm-arm/page.h:15:
+extern void __copy_page(void *to, void *from);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#579: FILE: include/asm-cris/page.h:15:
+#define __copy_page(to,from)      memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: include/asm-cris/pgalloc.h:67:
+                __clear_page(pte);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: include/asm-cris/pgalloc.h:67:
+                __clear_page(pte);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: include/asm-i386/page.h:19:
+#define __copy_page(to,from)	mmx_copy_page(to,from)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#605: FILE: include/asm-i386/page.h:19:
+#define __copy_page(to,from)	mmx_copy_page(to,from)
                             	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#616: FILE: include/asm-i386/page.h:29:
+#define __copy_page(to,from)	memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#655: FILE: include/asm-ia64/page.h:40:
+extern void __clear_page (void *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: include/asm-ia64/page.h:40:
+extern void __clear_page (void *page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#656: FILE: include/asm-ia64/page.h:41:
+extern void __copy_page (void *to, void *from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#656: FILE: include/asm-ia64/page.h:41:
+extern void __copy_page (void *to, void *from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: include/asm-ia64/pgalloc.h:240:
+clear_user_page (struct page *page, unsigned long vaddr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#707: FILE: include/asm-ia64/pgalloc.h:247:
+copy_user_page (struct page *to, struct page *from, unsigned long vaddr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: include/asm-m68k/page.h:76:
+#define __copy_page(to,from)	memcpy((to), (from), PAGE_SIZE)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#796: FILE: include/asm-parisc/page.h:13:
+#define __copy_page(to,from)	memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: include/asm-ppc/page.h:83:
+extern void __clear_page(void *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#824: FILE: include/asm-ppc/page.h:84:
+extern void __copy_page(void *to, void *from);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#921: FILE: include/asm-sh/page.h:28:
+#define __copy_page(to,from)	memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#932: FILE: include/asm-sh/page.h:33:
+extern void clear_user_page(struct page *to, unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#933: FILE: include/asm-sh/page.h:34:
+extern void copy_user_page(struct page *to, struct page *from,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#962: FILE: include/asm-sparc/page.h:56:
+#define __copy_page(to,from) ^Imemcpy((void *)(to), (void *)(from), PAGE_SIZE)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#962: FILE: include/asm-sparc/page.h:56:
+#define __copy_page(to,from) 	memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#978: FILE: include/asm-sparc64/page.h:27:
+#define __copy_page(X,Y)	_copy_page((void *)(X), (void *)(Y))
                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#982: FILE: include/asm-sparc64/page.h:31:
+extern void clear_user_page(struct page *page, unsigned long vaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#983: FILE: include/asm-sparc64/page.h:32:
+extern void copy_user_page(struct page *to, struct page *from, unsigned long vaddr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1107: FILE: mm/filemap.c:196:
+	memclear_page_flush(page, partial, PAGE_CACHE_SIZE-partial);
 	                                                  ^

CHECK:SPACING: No space is necessary after a cast
#1156: FILE: mm/page_alloc.c:525:
+		return (unsigned long) page_address(page);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532832.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 9 warnings, 14 checks, 868 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532832.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
