ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#67: FILE: arch/arm/mach-pxa/corgi_pm.c:184:
+	.read_main_battery= sharpsl_read_main_battery,
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: arch/arm/mach-pxa/sharpsl.h:129:
+extern irqreturn_t sharpsl_ac_isr(int irq, void *dev_id, struct pt_regs *fp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: arch/arm/mach-pxa/sharpsl.h:130:
+extern irqreturn_t sharpsl_fatal_isr(int irq, void *dev_id, struct pt_regs *fp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: arch/arm/mach-pxa/sharpsl.h:131:
+extern irqreturn_t sharpsl_chrg_full_isr(int irq, void *dev_id, struct pt_regs *fp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: arch/arm/mach-pxa/sharpsl.h:133:
+extern int sharpsl_read_main_battery(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: arch/arm/mach-pxa/sharpsl.h:134:
+extern int sharpsl_read_temp(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: arch/arm/mach-pxa/sharpsl.h:135:
+extern int sharpsl_read_acin(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: arch/arm/mach-pxa/sharpsl.h:137:
+extern int sharpsl_arch_pm_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: arch/arm/mach-pxa/sharpsl.h:138:
+extern int sharpsl_arch_pm_remove(void);

WARNING:LONG_LINE: line length of 161 exceeds 100 columns
#374: FILE: arch/arm/mach-pxa/sharpsl_pm.c:612:
+	dev_dbg(sharpsl_pm.dev, "sharpsl_fatal_check: acin: %d, discharge voltage: %d, no discharge: %d\n", acin, temp, sharpsl_pm.machinfo.read_main_battery());

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sharpsl_fatal_check', this function's name, in a string
#374: FILE: arch/arm/mach-pxa/sharpsl_pm.c:612:
+	dev_dbg(sharpsl_pm.dev, "sharpsl_fatal_check: acin: %d, discharge voltage: %d, no discharge: %d\n", acin, temp, sharpsl_pm.machinfo.read_main_battery());

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#437: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#441: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#564: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:124:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#566: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:126:
+#define MAXCTRL_PD0      1u << 0

CHECK:BIT_MACRO: Prefer using the BIT macro
#566: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:126:
+#define MAXCTRL_PD0      1u << 0

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#567: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:127:
+#define MAXCTRL_PD1      1u << 1

CHECK:BIT_MACRO: Prefer using the BIT macro
#567: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:127:
+#define MAXCTRL_PD1      1u << 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#568: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:128:
+#define MAXCTRL_SGL      1u << 2

CHECK:BIT_MACRO: Prefer using the BIT macro
#568: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:128:
+#define MAXCTRL_SGL      1u << 2

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#569: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:129:
+#define MAXCTRL_UNI      1u << 3

CHECK:BIT_MACRO: Prefer using the BIT macro
#569: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:129:
+#define MAXCTRL_UNI      1u << 3

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#571: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:131:
+#define MAXCTRL_STR      1u << 7

CHECK:BIT_MACRO: Prefer using the BIT macro
#571: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:131:
+#define MAXCTRL_STR      1u << 7

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#618: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:178:
+	if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin), sharpsl_ac_isr, SA_INTERRUPT, "AC Input Detect", sharpsl_ac_isr)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#618: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:178:
+	if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin), sharpsl_ac_isr, SA_INTERRUPT, "AC Input Detect", sharpsl_ac_isr)) {
[...]
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin),IRQT_BOTHEDGE);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#619: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:179:
+		dev_err(sharpsl_pm.dev, "Could not get irq %d.\n", IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#621: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:181:
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin),IRQT_BOTHEDGE);
 	                                                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#621: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:181:
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin),IRQT_BOTHEDGE);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#621: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:181:
+	}
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_acin),IRQT_BOTHEDGE);

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#623: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:183:
+	if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock), sharpsl_fatal_isr, SA_INTERRUPT, "Battery Cover", sharpsl_fatal_isr)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#623: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:183:
+	if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock), sharpsl_fatal_isr, SA_INTERRUPT, "Battery Cover", sharpsl_fatal_isr)) {
[...]
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock),IRQT_FALLING);
[...]

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#624: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:184:
+		dev_err(sharpsl_pm.dev, "Could not get irq %d.\n", IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#626: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:186:
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock),IRQT_FALLING);
 	                                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#626: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:186:
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock),IRQT_FALLING);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#626: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:186:
+	}
+	else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batlock),IRQT_FALLING);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#629: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:189:
+		if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal), sharpsl_fatal_isr, SA_INTERRUPT, "Fatal Battery", sharpsl_fatal_isr)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#629: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:189:
+		if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal), sharpsl_fatal_isr, SA_INTERRUPT, "Fatal Battery", sharpsl_fatal_isr)) {
[...]
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal),IRQT_FALLING);
[...]

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#630: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:190:
+			dev_err(sharpsl_pm.dev, "Could not get irq %d.\n", IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#632: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:192:
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal),IRQT_FALLING);
 		                                                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#632: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:192:
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal),IRQT_FALLING);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#632: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:192:
+		}
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_fatal),IRQT_FALLING);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#635: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:195:
+	if (!machine_is_corgi())
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#638: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:198:
+		if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull), sharpsl_chrg_full_isr, SA_INTERRUPT, "CO", sharpsl_chrg_full_isr)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#638: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:198:
+		if (request_irq(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull), sharpsl_chrg_full_isr, SA_INTERRUPT, "CO", sharpsl_chrg_full_isr)) {
[...]
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull),IRQT_RISING);
[...]

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#639: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:199:
+			dev_err(sharpsl_pm.dev, "Could not get irq %d.\n", IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#641: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:201:
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull),IRQT_RISING);
 		                                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#641: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:201:
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull),IRQT_RISING);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#641: FILE: arch/arm/mach-pxa/sharpsl_pm_pxa.c:201:
+		}
+		else set_irq_type(IRQ_GPIO(sharpsl_pm.machinfo->gpio_batfull),IRQT_RISING);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#674: FILE: arch/arm/mach-pxa/spitz_pm.c:187:
+	.read_main_battery= sharpsl_read_main_battery,
 	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 16 warnings, 14 checks, 599 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000131763.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
