WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#31: 
Signed-off-by:  Jason McMullan <jmcmullan@timesys.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: drivers/net/mii_bus.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: drivers/net/mii_bus.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#60: FILE: drivers/net/mii_bus.c:2:
+ * drivers/net/mii_bus.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: drivers/net/mii_bus.c:6:
+ * Author: Jason McMullan (jason.mcmullan@timesys.com) to $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: drivers/net/mii_bus.c:7:
+ * ^I   be a generic mii interface$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#91: FILE: drivers/net/mii_bus.c:33:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#93: FILE: drivers/net/mii_bus.c:35:
+#include <asm/uaccess.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#97: FILE: drivers/net/mii_bus.c:39:
+/*
+ * struct phy_cmd:  A command for reading or writing a PHY register

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: drivers/net/mii_bus.c:44:
+ * ^IA value of -1 indicates this is a read.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: drivers/net/mii_bus.c:47:
+ * ^IFor reads, this function will be passed the value read$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/net/mii_bus.c:53:
+    u32 mii_reg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/net/mii_bus.c:54:
+    u32 mii_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/net/mii_bus.c:55:
+    u16 (*funct) (u16 mii_reg, int bus, int id);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#113: FILE: drivers/net/mii_bus.c:55:
+    u16 (*funct) (u16 mii_reg, int bus, int id);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/net/mii_bus.c:71:
+    u32 id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/net/mii_bus.c:72:
+    const char *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/net/mii_bus.c:73:
+    unsigned int shift;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#133: FILE: drivers/net/mii_bus.c:75:
+     * based on the results */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/net/mii_bus.c:76:
+    const struct phy_cmd *config;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#137: FILE: drivers/net/mii_bus.c:79:
+     * up the interrupt for state changes */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/net/mii_bus.c:80:
+    const struct phy_cmd *startup;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#141: FILE: drivers/net/mii_bus.c:83:
+     * the interrupt */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/net/mii_bus.c:84:
+    const struct phy_cmd *ack_int;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/net/mii_bus.c:87:
+    const struct phy_cmd *poll;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/net/mii_bus.c:90:
+    const struct phy_cmd *end_int;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: drivers/net/mii_bus.c:93:
+     * the interrupts from being generated */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/net/mii_bus.c:94:
+    const struct phy_cmd *shutdown;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/net/mii_bus.c:97:
+    struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/net/mii_bus.c:102:
+    ^Istruct work_struct tq;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: drivers/net/mii_bus.c:102:
+    ^Istruct work_struct tq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/net/mii_bus.c:102:
+    ^Istruct work_struct tq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/net/mii_bus.c:104:
+    } delta;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/net/mii_bus.c:106:
+    struct phy_state state;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#169: FILE: drivers/net/mii_bus.c:111:
+#define MII_BUS_MAX	(sizeof(mii_bus)/sizeof(struct mii_bus *))
                    	                ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#171: FILE: drivers/net/mii_bus.c:113:
+#define VALID_BUS(bus) (mii_bus[bus]!=NULL)
                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mii_bus[bus]"
#171: FILE: drivers/net/mii_bus.c:113:
+#define VALID_BUS(bus) (mii_bus[bus]!=NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: drivers/net/mii_bus.c:114:
+#define VALID(bus,x) (mii_bus[bus]!=NULL && (mii_bus[bus]->phy[id] != NULL))
                  ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#172: FILE: drivers/net/mii_bus.c:114:
+#define VALID(bus,x) (mii_bus[bus]!=NULL && (mii_bus[bus]->phy[id] != NULL))
                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bus' - possible side-effects?
#172: FILE: drivers/net/mii_bus.c:114:
+#define VALID(bus,x) (mii_bus[bus]!=NULL && (mii_bus[bus]->phy[id] != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mii_bus[bus]"
#172: FILE: drivers/net/mii_bus.c:114:
+#define VALID(bus,x) (mii_bus[bus]!=NULL && (mii_bus[bus]->phy[id] != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mii_bus[bus]->phy[id]"
#172: FILE: drivers/net/mii_bus.c:114:
+#define VALID(bus,x) (mii_bus[bus]!=NULL && (mii_bus[bus]->phy[id] != NULL))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'phy_id' may be better as '(phy_id)' to avoid precedence issues
#173: FILE: drivers/net/mii_bus.c:115:
+#define PHY_ID(phy_id) (phy_id & 0x1f)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'phy_id' may be better as '(phy_id)' to avoid precedence issues
#174: FILE: drivers/net/mii_bus.c:116:
+#define PHY_BUS(phy_id) ((phy_id & 0x20) ? 1 : 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mii' may be better as '(mii)' to avoid precedence issues
#175: FILE: drivers/net/mii_bus.c:117:
+#define MII_ID(mii) PHY_ID(mii->phy_id)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mii' may be better as '(mii)' to avoid precedence issues
#176: FILE: drivers/net/mii_bus.c:118:
+#define MII_BUS(mii) PHY_BUS(mii->phy_id)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'phy_id' - possible side-effects?
#177: FILE: drivers/net/mii_bus.c:119:
+#define BUS_ID(phy_id) int bus = PHY_BUS(phy_id); int id = PHY_ID(phy_id);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#177: FILE: drivers/net/mii_bus.c:119:
+#define BUS_ID(phy_id) int bus = PHY_BUS(phy_id); int id = PHY_ID(phy_id);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mii"
#181: FILE: drivers/net/mii_bus.c:123:
+	if (mii != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/net/mii_bus.c:140:
+       ^Imii_bus[bus]->write(mii_bus[bus]->priv,id,regnum,value);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#198: FILE: drivers/net/mii_bus.c:140:
+       ^Imii_bus[bus]->write(mii_bus[bus]->priv,id,regnum,value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/net/mii_bus.c:140:
+       ^Imii_bus[bus]->write(mii_bus[bus]->priv,id,regnum,value);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/net/mii_bus.c:140:
+       	mii_bus[bus]->write(mii_bus[bus]->priv,id,regnum,value);
        	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/net/mii_bus.c:140:
+       	mii_bus[bus]->write(mii_bus[bus]->priv,id,regnum,value);
        	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/net/mii_bus.c:140:
+       	mii_bus[bus]->write(mii_bus[bus]->priv,id,regnum,value);
        	                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/net/mii_bus.c:153:
+       ^Ireturn mii_bus[bus]->read(mii_bus[bus]->priv,id,regnum);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: drivers/net/mii_bus.c:153:
+       ^Ireturn mii_bus[bus]->read(mii_bus[bus]->priv,id,regnum);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/net/mii_bus.c:153:
+       ^Ireturn mii_bus[bus]->read(mii_bus[bus]->priv,id,regnum);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/net/mii_bus.c:153:
+       	return mii_bus[bus]->read(mii_bus[bus]->priv,id,regnum);
        	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/net/mii_bus.c:153:
+       	return mii_bus[bus]->read(mii_bus[bus]->priv,id,regnum);
        	                                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#228: FILE: drivers/net/mii_bus.c:170:
+	if (!VALID(bus, id)) return 0xffff;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#245: FILE: drivers/net/mii_bus.c:187:
+			printk(KERN_INFO "phy %d.%d: Auto-negotiation done\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: drivers/net/mii_bus.c:188:
+			       bus,id);
 			          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#248: FILE: drivers/net/mii_bus.c:190:
+			printk(KERN_INFO "phy %d.%d: Auto-negotiation timed out\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: drivers/net/mii_bus.c:191:
+			       bus,id);
 			          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#279: FILE: drivers/net/mii_bus.c:221:
+	if (!VALID(bus, id)) return 0xffff;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#314: FILE: drivers/net/mii_bus.c:256:
+	if (!VALID(bus, id)) return 0xffff;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#348: FILE: drivers/net/mii_bus.c:290:
+	if (!VALID(bus, id)) return 0xffff;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#366: FILE: drivers/net/mii_bus.c:308:
+	int timeout = 3*HZ;
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/net/mii_bus.c:310:
+	if (!VALID(bus,id)) return 0xffff;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#368: FILE: drivers/net/mii_bus.c:310:
+	if (!VALID(bus,id)) return 0xffff;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: drivers/net/mii_bus.c:313:
+	 * so wait here for a bit */

CHECK:CAMELCASE: Avoid CamelCase: <theInfo>
#538: FILE: drivers/net/mii_bus.c:480:
+	struct phy_info *theInfo = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mii_bus[bus]"
#540: FILE: drivers/net/mii_bus.c:482:
+	if (mii_bus[bus] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!theInfo"
#557: FILE: drivers/net/mii_bus.c:499:
+	if (theInfo == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#558: FILE: drivers/net/mii_bus.c:500:
+		printk("phy %d.%d: PHY id 0x%x is not supported!\n", bus, id, phy_ID);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#560: FILE: drivers/net/mii_bus.c:502:
+		return NULL;
+	} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#561: FILE: drivers/net/mii_bus.c:503:
+		printk("phy %d.%d: PHY is %s (%x)\n", bus, id, theInfo->name,

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#577: FILE: drivers/net/mii_bus.c:519:
+	if (!VALID(bus, id)) return;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#579: FILE: drivers/net/mii_bus.c:521:
+	if (cmd == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmd->funct"
#590: FILE: drivers/net/mii_bus.c:532:
+			if (cmd->funct != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cmd->funct
#591: FILE: drivers/net/mii_bus.c:533:
+				(*(cmd->funct)) (result, bus, id);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/net/mii_bus.c:535:
+^I^I^I/* If a function was supplied, it will provide $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#594: FILE: drivers/net/mii_bus.c:536:
+			 * the value to write */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmd->funct"
#596: FILE: drivers/net/mii_bus.c:538:
+			if (cmd->funct != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cmd->funct
#597: FILE: drivers/net/mii_bus.c:539:
+				result = (*(cmd->funct)) (0, bus, id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/net/mii_bus.c:578:
+       ^Iif (!VALID(bus, id))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#636: FILE: drivers/net/mii_bus.c:578:
+       ^Iif (!VALID(bus, id))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/net/mii_bus.c:578:
+       ^Iif (!VALID(bus, id))$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#656: FILE: drivers/net/mii_bus.c:598:
+EXPORT_SYMBOL(mii_phy_irq_enable);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: drivers/net/mii_bus.c:599:
+int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: drivers/net/mii_bus.c:599:
+int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: drivers/net/mii_bus.c:599:
+int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data)
                                                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#661: FILE: drivers/net/mii_bus.c:603:
+	int err;
+	BUS_ID(mii->phy_id);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "phy->delta.data"
#666: FILE: drivers/net/mii_bus.c:608:
+	if (phy->delta.data != NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#685: FILE: drivers/net/mii_bus.c:627:
+EXPORT_SYMBOL(mii_phy_irq_disable);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#686: FILE: drivers/net/mii_bus.c:628:
+void mii_phy_irq_disable(struct mii_if_info *mii,void *data)
                                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#689: FILE: drivers/net/mii_bus.c:631:
+	struct phy_info *phy = mii_phy_of(mii);
+	BUS_ID(mii->phy_id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#713: FILE: drivers/net/mii_bus.c:655:
+	if (phy->delta.irq >= 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#715: FILE: drivers/net/mii_bus.c:657:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#729: FILE: drivers/net/mii_bus.c:671:
+	BUG_ON(phy == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phy"
#729: FILE: drivers/net/mii_bus.c:671:
+	BUG_ON(phy == NULL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#732: FILE: drivers/net/mii_bus.c:674:
+	mod_timer(&phy->delta.timer, jiffies + HZ*phy->delta.msecs/1000);
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#732: FILE: drivers/net/mii_bus.c:674:
+	mod_timer(&phy->delta.timer, jiffies + HZ*phy->delta.msecs/1000);
 	                                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#735: FILE: drivers/net/mii_bus.c:677:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#736: FILE: drivers/net/mii_bus.c:678:
+EXPORT_SYMBOL(mii_phy_poll_enable);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#737: FILE: drivers/net/mii_bus.c:679:
+int mii_phy_poll_enable(struct mii_if_info *mii,unsigned long msecs,void (*func)(void *),void *data)
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#737: FILE: drivers/net/mii_bus.c:679:
+int mii_phy_poll_enable(struct mii_if_info *mii,unsigned long msecs,void (*func)(void *),void *data)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#737: FILE: drivers/net/mii_bus.c:679:
+int mii_phy_poll_enable(struct mii_if_info *mii,unsigned long msecs,void (*func)(void *),void *data)
                                                                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phy"
#741: FILE: drivers/net/mii_bus.c:683:
+	if (phy == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#744: FILE: drivers/net/mii_bus.c:686:
+	if (HZ*msecs/1000 <= 0 || func == NULL)
 	      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#744: FILE: drivers/net/mii_bus.c:686:
+	if (HZ*msecs/1000 <= 0 || func == NULL)
 	            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!func"
#744: FILE: drivers/net/mii_bus.c:686:
+	if (HZ*msecs/1000 <= 0 || func == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "phy->delta.data"
#747: FILE: drivers/net/mii_bus.c:689:
+	if (phy->delta.data != NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#756: FILE: drivers/net/mii_bus.c:698:
+	mod_timer(&phy->delta.timer, jiffies + HZ*msecs/1000);
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#756: FILE: drivers/net/mii_bus.c:698:
+	mod_timer(&phy->delta.timer, jiffies + HZ*msecs/1000);
 	                                               ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#762: FILE: drivers/net/mii_bus.c:704:
+EXPORT_SYMBOL(mii_phy_poll_disable);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#763: FILE: drivers/net/mii_bus.c:705:
+void mii_phy_poll_disable(struct mii_if_info *mii,void *data)
                                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phy"
#767: FILE: drivers/net/mii_bus.c:709:
+	if (phy == NULL || phy->delta.data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phy->delta.data"
#767: FILE: drivers/net/mii_bus.c:709:
+	if (phy == NULL || phy->delta.data == NULL)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#775: FILE: drivers/net/mii_bus.c:717:
+EXPORT_SYMBOL(mii_phy_attach);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#778: FILE: drivers/net/mii_bus.c:720:
+	struct phy_info *phy,*info;
 	                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#778: FILE: drivers/net/mii_bus.c:720:
+	struct phy_info *phy,*info;
 	                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mii_bus[bus]"
#780: FILE: drivers/net/mii_bus.c:722:
+	if (mii_bus[bus] == NULL) {

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#781: FILE: drivers/net/mii_bus.c:723:
+		printk(KERN_ERR "mii_phy_attach: Can't attach %s, no MII bus %d present\n",dev->name,bus);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#781: FILE: drivers/net/mii_bus.c:723:
+		printk(KERN_ERR "mii_phy_attach: Can't attach %s, no MII bus %d present\n",dev->name,bus);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#781: FILE: drivers/net/mii_bus.c:723:
+		printk(KERN_ERR "mii_phy_attach: Can't attach %s, no MII bus %d present\n",dev->name,bus);
 		                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#781: FILE: drivers/net/mii_bus.c:723:
+		printk(KERN_ERR "mii_phy_attach: Can't attach %s, no MII bus %d present\n",dev->name,bus);
 		                                                                                    ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mii_phy_attach', this function's name, in a string
#781: FILE: drivers/net/mii_bus.c:723:
+		printk(KERN_ERR "mii_phy_attach: Can't attach %s, no MII bus %d present\n",dev->name,bus);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#785: FILE: drivers/net/mii_bus.c:727:
+	if (VALID(bus,id)) {
 	             ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#786: FILE: drivers/net/mii_bus.c:728:
+		printk(KERN_ERR "mii_phy_attach: PHY %d.%d is already attached to %s\n",bus,id,dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#786: FILE: drivers/net/mii_bus.c:728:
+		printk(KERN_ERR "mii_phy_attach: PHY %d.%d is already attached to %s\n",bus,id,dev->name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#786: FILE: drivers/net/mii_bus.c:728:
+		printk(KERN_ERR "mii_phy_attach: PHY %d.%d is already attached to %s\n",bus,id,dev->name);
 		                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#786: FILE: drivers/net/mii_bus.c:728:
+		printk(KERN_ERR "mii_phy_attach: PHY %d.%d is already attached to %s\n",bus,id,dev->name);
 		                                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#786: FILE: drivers/net/mii_bus.c:728:
+		printk(KERN_ERR "mii_phy_attach: PHY %d.%d is already attached to %s\n",bus,id,dev->name);
 		                                                                              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mii_phy_attach', this function's name, in a string
#786: FILE: drivers/net/mii_bus.c:728:
+		printk(KERN_ERR "mii_phy_attach: PHY %d.%d is already attached to %s\n",bus,id,dev->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#791: FILE: drivers/net/mii_bus.c:733:
+	if (info == NULL)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#795: FILE: drivers/net/mii_bus.c:737:
+	memcpy(phy,info,sizeof(*phy));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#795: FILE: drivers/net/mii_bus.c:737:
+	memcpy(phy,info,sizeof(*phy));
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#800: FILE: drivers/net/mii_bus.c:742:
+	phy->state.link=0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#801: FILE: drivers/net/mii_bus.c:743:
+	phy->state.duplex=0;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#802: FILE: drivers/net/mii_bus.c:744:
+	phy->state.auto_neg=1;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#803: FILE: drivers/net/mii_bus.c:745:
+	phy->state.speed=0;
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: drivers/net/mii_bus.c:747:
+	memset(mii,0,sizeof(*mii));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#805: FILE: drivers/net/mii_bus.c:747:
+	memset(mii,0,sizeof(*mii));
 	            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#820: FILE: drivers/net/mii_bus.c:762:
+EXPORT_SYMBOL(mii_phy_detach);

WARNING:LINE_SPACING: Missing a blank line after declarations
#825: FILE: drivers/net/mii_bus.c:767:
+	struct mii_bus *pbus;
+	BUS_ID(mii->phy_id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "phy->delta.data"
#833: FILE: drivers/net/mii_bus.c:775:
+	if (phy->delta.data != NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#841: FILE: drivers/net/mii_bus.c:783:
+	pbus->phy[id]=NULL;
 	             ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#845: FILE: drivers/net/mii_bus.c:787:
+EXPORT_SYMBOL(mii_phy_state);

WARNING:LINE_SPACING: Missing a blank line after declarations
#849: FILE: drivers/net/mii_bus.c:791:
+	struct phy_info *phy = mii_phy_of(mii);
+	BUS_ID(mii->phy_id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phy->delta.data"
#854: FILE: drivers/net/mii_bus.c:796:
+	if (phy->delta.data == NULL)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#857: FILE: drivers/net/mii_bus.c:799:
+	memcpy(state,&phy->state,sizeof(*state));
 	            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#857: FILE: drivers/net/mii_bus.c:799:
+	memcpy(state,&phy->state,sizeof(*state));
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#857: FILE: drivers/net/mii_bus.c:799:
+	memcpy(state,&phy->state,sizeof(*state));
 	                        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#862: FILE: drivers/net/mii_bus.c:804:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#865: FILE: drivers/net/mii_bus.c:807:
+EXPORT_SYMBOL(mii_bus_register);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus"
#870: FILE: drivers/net/mii_bus.c:812:
+	if (bus == NULL || bus->name == NULL || bus->read == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus->name"
#870: FILE: drivers/net/mii_bus.c:812:
+	if (bus == NULL || bus->name == NULL || bus->read == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus->read"
#870: FILE: drivers/net/mii_bus.c:812:
+	if (bus == NULL || bus->name == NULL || bus->read == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus->write"
#871: FILE: drivers/net/mii_bus.c:813:
+	    bus->write == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mii_bus[bus_id]"
#877: FILE: drivers/net/mii_bus.c:819:
+		if (mii_bus[bus_id] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mii_bus[bus_id]"
#888: FILE: drivers/net/mii_bus.c:830:
+	if (mii_bus[bus_id] == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#898: FILE: drivers/net/mii_bus.c:840:
+	printk(KERN_INFO "%s: registered as PHY bus %d\n",bus->name,bus_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#898: FILE: drivers/net/mii_bus.c:840:
+	printk(KERN_INFO "%s: registered as PHY bus %d\n",bus->name,bus_id);
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#898: FILE: drivers/net/mii_bus.c:840:
+	printk(KERN_INFO "%s: registered as PHY bus %d\n",bus->name,bus_id);
 	                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: drivers/net/mii_bus.c:841:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#903: FILE: drivers/net/mii_bus.c:845:
+EXPORT_SYMBOL(mii_bus_unregister);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#910: FILE: drivers/net/mii_bus.c:852:
+	for (i=0; i < MII_BUS_MAX; i++)
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/net/mii_bus.c:857:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: include/linux/mii_bus.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#920: FILE: include/linux/mii_bus.h:1:
+/* 

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#921: FILE: include/linux/mii_bus.h:2:
+ * include/linux/mii_bus.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#938: FILE: include/linux/mii_bus.h:19:
+#define MII_TIMEOUT ^I(1*HZ)$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#938: FILE: include/linux/mii_bus.h:19:
+#define MII_TIMEOUT 	(1*HZ)
                     	  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: include/linux/mii_bus.h:31:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: include/linux/mii_bus.h:31:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: include/linux/mii_bus.h:31:
+                                                                                $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#994: FILE: include/linux/mii_bus.h:75:
+#define MIIM_DM9161_INTR_INIT ^I^I0x0000$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: include/linux/mii_bus.h:78:
+ | MIIM_DM9161_INTR_LINK_MASK | MIIM_DM9161_INTR_MASK)$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1023: FILE: include/linux/mii_bus.h:104:
+extern int mii_bus_register(struct mii_bus *bus);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1024: FILE: include/linux/mii_bus.h:105:
+extern void mii_bus_unregister(struct mii_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1029: FILE: include/linux/mii_bus.h:110:
+extern int mii_bus_read(int bus_id, int phy_id, int reg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1030: FILE: include/linux/mii_bus.h:111:
+extern int mii_bus_write(int bus_id, int phy_id, int reg, uint16_t val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1034: FILE: include/linux/mii_bus.h:115:
+extern int mii_phy_attach(struct mii_if_info *mii, struct net_device *dev, int phy_bus, int phy_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1035: FILE: include/linux/mii_bus.h:116:
+extern void mii_phy_detach(struct mii_if_info *mii);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1039: FILE: include/linux/mii_bus.h:120:
+extern int mii_phy_state(struct mii_if_info *mii, struct phy_state *state);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1043: FILE: include/linux/mii_bus.h:124:
+extern int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data);
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1043: FILE: include/linux/mii_bus.h:124:
+extern int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data);
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1043: FILE: include/linux/mii_bus.h:124:
+extern int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data);
                                                                                   ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1043: FILE: include/linux/mii_bus.h:124:
+extern int mii_phy_irq_enable(struct mii_if_info *mii,int irq,void (*func)(void *),void *data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1044: FILE: include/linux/mii_bus.h:125:
+extern void mii_phy_irq_disable(struct mii_if_info *mii,void *data);
                                                        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1044: FILE: include/linux/mii_bus.h:125:
+extern void mii_phy_irq_disable(struct mii_if_info *mii,void *data);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1048: FILE: include/linux/mii_bus.h:129:
+extern int mii_phy_poll_enable(struct mii_if_info *mii, unsigned long msecs, void (*func)(void *),void *data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1048: FILE: include/linux/mii_bus.h:129:
+extern int mii_phy_poll_enable(struct mii_if_info *mii, unsigned long msecs, void (*func)(void *),void *data);
                                                                                                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1048: FILE: include/linux/mii_bus.h:129:
+extern int mii_phy_poll_enable(struct mii_if_info *mii, unsigned long msecs, void (*func)(void *),void *data);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1049: FILE: include/linux/mii_bus.h:130:
+extern void mii_phy_poll_disable(struct mii_if_info *mii,void *data);
                                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1049: FILE: include/linux/mii_bus.h:130:
+extern void mii_phy_poll_disable(struct mii_if_info *mii,void *data);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231722.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 73 warnings, 59 checks, 997 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000231722.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
