WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#79: FILE: drivers/connector/Kconfig:13:
+config FORK_CONNECTOR
+	bool "Enable fork connector"
+	select CONNECTOR
+	default y
+	---help---
+	  It adds a connector in kernel/fork.c:do_fork() function. When a fork
+	  occurs, netlink is used to transfer information about the parent and 
+	  its child. This information can be used by a user space application.
+	  The fork connector can be enable/disable by sending a message to the
+	  connector with the corresponding group id.
+	  

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/connector/Kconfig:19:
+^I  occurs, netlink is used to transfer information about the parent and $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/connector/Kconfig:23:
+^I  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/connector/Makefile:2:
+obj-$(CONFIG_FORK_CONNECTOR)^I+= cn_fork.o $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: drivers/connector/cn_fork.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/connector/cn_fork.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/connector/cn_fork.c:8:
+ * netlink datagram, when enabled, from the do_fork() routine. The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: drivers/connector/cn_fork.c:9:
+ * message can be read by a user space application. By this way, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/connector/cn_fork.c:15:
+ * messages can be used to check if a message is lost.  $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#131: FILE: drivers/connector/cn_fork.c:28:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: drivers/connector/cn_fork.c:29:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: drivers/connector/cn_fork.c:39:
+#define CN_FORK_MSG_SIZE ^I(sizeof(struct cn_msg) + CN_FORK_INFO_SIZE)$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#144: FILE: drivers/connector/cn_fork.c:41:
+static int cn_fork_enable = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#182: FILE: drivers/connector/cn_fork.c:79:
+	printk(KERN_INFO "cn_fork_enable == %d\n", cn_fork_enable);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/connector/cn_fork.c:84:
+ * @data: message send by the connector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/connector/cn_fork.c:87:
+ * about fork in the do_fork() routine. To enable the fork, the user $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: drivers/connector/cn_fork.c:88:
+ * space application must send the integer 1 in the data part of the $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->len == sizeof(cn_fork_enable)'
#199: FILE: drivers/connector/cn_fork.c:96:
+	if (cn_already_initialized && (msg->len == sizeof(cn_fork_enable))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: drivers/connector/cn_fork.c:116:
+ * built in the kernel. It adds the connector callback to the connector $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#228: FILE: drivers/connector/cn_fork.c:125:
+		printk(KERN_WARNING "Failed to register cn_fork\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#232: FILE: drivers/connector/cn_fork.c:129:
+	printk(KERN_NOTICE "cn_fork is registered\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#236: FILE: drivers/connector/cn_fork.c:133:
+__initcall(cn_fork_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#242: FILE: include/linux/cn_fork.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: include/linux/cn_fork.h:6:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#259: FILE: include/linux/cn_fork.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#260: FILE: include/linux/cn_fork.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: include/linux/cn_fork.h:32:
+ * The fork connector sends information to a user-space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: include/linux/cn_fork.h:33:
+ * application. From the user's point of view, the process $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: include/linux/cn_fork.h:37:
+ *  In user space     -  In  kernel space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: include/linux/cn_fork.h:38:
+ *                    $

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#286: FILE: include/linux/cn_fork.h:45:
+	int cpu;		/* ID of the cpu where the fork occured */
 	        		                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: include/linux/cn_fork.h:55:
+extern void fork_connector(pid_t ppid, pid_t ptid, pid_t cpid, pid_t ctid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:RETURN_VOID: void function return statements are not generally useful
#302: FILE: include/linux/cn_fork.h:61:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: kernel/fork.c:1258:
+^I^I               p->tgid, p->pid);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184715.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 10 warnings, 2 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184715.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
