CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: include/asm-i386/desc.h:42:
+	_set_tssldt_desc(&get_cpu_gdt_table(cpu)[entry], (int)addr,
 		offsetof(struct tss_struct, __cacheline_filler) - 1, 0x89);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: include/asm-i386/mach-default/mach_desc.h:1:
+#ifndef __ASM_MACH_DESC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/mach-default/mach_desc.h:8:
+#define _set_tssldt_desc(n,addr,limit,type) \
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/mach-default/mach_desc.h:8:
+#define _set_tssldt_desc(n,addr,limit,type) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: include/asm-i386/mach-default/mach_desc.h:8:
+#define _set_tssldt_desc(n,addr,limit,type) \
                                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#130: FILE: include/asm-i386/mach-default/mach_desc.h:8:
+#define _set_tssldt_desc(n,addr,limit,type) \
+__asm__ __volatile__ ("movw %w3,0(%2)\n\t" \
+	"movw %%ax,2(%2)\n\t" \
+	"rorl $16,%%eax\n\t" \
+	"movb %%al,4(%2)\n\t" \
+	"movb %4,5(%2)\n\t" \
+	"movb $0,6(%2)\n\t" \
+	"movb %%ah,7(%2)\n\t" \
+	"rorl $16,%%eax" \
+	: "=m"(*(n)) : "a" (addr), "r"(n), "ir"(limit), "i"(type))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#130: FILE: include/asm-i386/mach-default/mach_desc.h:8:
+#define _set_tssldt_desc(n,addr,limit,type) \
+__asm__ __volatile__ ("movw %w3,0(%2)\n\t" \
+	"movw %%ax,2(%2)\n\t" \
+	"rorl $16,%%eax\n\t" \
+	"movb %%al,4(%2)\n\t" \
+	"movb %4,5(%2)\n\t" \
+	"movb $0,6(%2)\n\t" \
+	"movb %%ah,7(%2)\n\t" \
+	"rorl $16,%%eax" \
+	: "=m"(*(n)) : "a" (addr), "r"(n), "ir"(limit), "i"(type))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: include/asm-i386/mach-default/mach_desc.h:21:
+	_set_tssldt_desc(&get_cpu_gdt_table(cpu)[GDT_ENTRY_LDT], (int)addr, ((size << 3)-1), 0x82);
 	                                                                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#148: FILE: include/asm-i386/mach-default/mach_desc.h:26:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#148: FILE: include/asm-i386/mach-default/mach_desc.h:26:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#148: FILE: include/asm-i386/mach-default/mach_desc.h:26:
+#define C(i) get_cpu_gdt_table(cpu)[GDT_ENTRY_TLS_MIN + i] = t->tls_array[i]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: include/asm-i386/mach-default/mach_desc.h:52:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 1 warnings, 5 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000161877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
