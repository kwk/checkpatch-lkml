WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#36: 
signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ctl_table *' should also have an identifier name
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#60: FILE: kernel/sysctl.c:76:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: kernel/sysctl.c:77:
+extern int proc_mem_nmi_panic(ctl_table *, int, struct file *,
+				  void __user *, size_t *, loff_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#74: FILE: kernel/sysctl.c:667:
+		.maxlen         = sizeof (int),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#90: FILE: arch/i386/kernel/nmi.c:37:
+extern int mem_nmi_panic;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#99: FILE: arch/i386/kernel/nmi.c:576:
+static int nmi_panic_callback(struct pt_regs *regs, int cpu)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#111: FILE: arch/i386/kernel/nmi.c:587:
+		sprintf(buf, "NMI received for possible memory parity error "
+			"%02x\n", reason);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#118: FILE: arch/i386/kernel/nmi.c:594:
+static int nmi_panic_callback_active = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/i386/kernel/nmi.c:638:
+int proc_mem_nmi_panic(ctl_table *table, int write, struct file *file,
+			void __user *buffer, size_t *length, loff_t *ppos)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#236: FILE: arch/x86_64/kernel/nmi.c:543:
+static int nmi_panic_callback(struct pt_regs *regs, int cpu)
  {

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: arch/x86_64/kernel/nmi.c:554:
+		sprintf(buf, "NMI received for possible memory parity error "
+			"%02x", reason);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#257: FILE: arch/x86_64/kernel/nmi.c:561:
+static int nmi_panic_callback_active = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: arch/x86_64/kernel/nmi.c:605:
+int proc_mem_nmi_panic(struct ctl_table *table, int write, struct file *file,
+			void __user *buffer, size_t *length, loff_t *ppos)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: arch/x86_64/kernel/traps.c:416:
+	printk("%s on CPU %d\n", str, safe_smp_processor_id());

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#362: FILE: include/linux/sysctl.h:149:
+	KERN_MEM_NMI_PANIC=71,	/* int: memory nmi panic flag */
 	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000126211.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 13 warnings, 3 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000126211.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
