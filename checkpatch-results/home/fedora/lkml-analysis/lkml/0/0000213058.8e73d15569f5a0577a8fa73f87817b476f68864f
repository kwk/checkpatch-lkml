WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#40: FILE: include/linux/sunrpc/svc.h:188:
+#if 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#113: FILE: fs/nfsacl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#114: FILE: fs/nfsacl.c:2:
+ * fs/nfsacl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#143: FILE: fs/nfsacl.c:31:
+EXPORT_SYMBOL(nfsacl_encode);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#144: FILE: fs/nfsacl.c:32:
+EXPORT_SYMBOL(nfsacl_decode);

CHECK:SPACING: No space is necessary after a cast
#159: FILE: fs/nfsacl.c:47:
+		(struct nfsacl_encode_desc *) desc;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#160: FILE: fs/nfsacl.c:48:
+	u32 *p = (u32 *) elem;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#167: FILE: fs/nfsacl.c:55:
+		switch(entry->e_tag) {
+			case ACL_USER_OBJ:
[...]
+			case ACL_GROUP_OBJ:
[...]
+			case ACL_USER:
+			case ACL_GROUP:
[...]
+			default:  /* Solaris depends on that! */

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: fs/nfsacl.c:55:
+		switch(entry->e_tag) {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXO' are not preferred. Consider using octal permissions '0007'.
#182: FILE: fs/nfsacl.c:70:
+		*p++ = htonl(entry->e_perm & S_IRWXO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#185: FILE: fs/nfsacl.c:73:
+		int group_obj_perm = ACL_READ|ACL_WRITE|ACL_EXECUTE;
 		                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#185: FILE: fs/nfsacl.c:73:
+		int group_obj_perm = ACL_READ|ACL_WRITE|ACL_EXECUTE;
 		                                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXO' are not preferred. Consider using octal permissions '0007'.
#189: FILE: fs/nfsacl.c:77:
+				group_obj_perm = pa->e_perm & S_IRWXO;

CHECK:SPACING: No space is necessary after a cast
#240: FILE: fs/nfsacl.c:128:
+		(struct nfsacl_decode_desc *) desc;

CHECK:SPACING: No space is necessary after a cast
#241: FILE: fs/nfsacl.c:129:
+	u32 *p = (u32 *) elem;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#258: FILE: fs/nfsacl.c:146:
+	switch(entry->e_tag) {
+		case ACL_USER_OBJ:
+		case ACL_USER:
+		case ACL_GROUP_OBJ:
+		case ACL_GROUP:
+		case ACL_OTHER:
[...]
+		case ACL_MASK:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: fs/nfsacl.c:146:
+	switch(entry->e_tag) {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXO' are not preferred. Consider using octal permissions '0007'.
#264: FILE: fs/nfsacl.c:152:
+			if (entry->e_perm & ~S_IRWXO)

WARNING:TYPO_SPELLING: 'additonal' may be misspelled - perhaps 'additional'?
#268: FILE: fs/nfsacl.c:156:
+			/* Solaris sometimes sets additonal bits in the mask */
 			                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXO' are not preferred. Consider using octal permissions '0007'.
#269: FILE: fs/nfsacl.c:157:
+			entry->e_perm &= S_IRWXO;

ERROR:SPACING: space required after that ',' (ctx:OxV)
#304: FILE: fs/nfsacl.c:192:
+	      (int(*)(const void *,const void *))cmp_acl_entry);
 	                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#307: FILE: fs/nfsacl.c:195:
+	/* Clear undefined identifier fields and find the ACL_GROUP_OBJ
+	   and ACL_MASK entries. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#307: FILE: fs/nfsacl.c:195:
+	   and ACL_MASK entries. */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#309: FILE: fs/nfsacl.c:197:
+		switch(pa->e_tag) {
+			case ACL_USER_OBJ:
[...]
+			case ACL_GROUP_OBJ:
[...]
+			case ACL_MASK:
[...]
+			case ACL_OTHER:

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: fs/nfsacl.c:197:
+		switch(pa->e_tag) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#319: FILE: fs/nfsacl.c:207:
+				/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#328: FILE: fs/nfsacl.c:216:
+		memmove(mask, mask+1, (3 - (mask - acl->a_entries)) *
 		                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: fs/nfsd/nfs3proc.c:639:
+nfsd3_proc_getacl(struct svc_rqst * rqstp, struct nfsd3_getaclargs *argp,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: fs/nfsd/nfs3proc.c:640:
+nfsd3_proc_getacl(struct svc_rqst * rqstp, struct nfsd3_getaclargs *argp,
+					   struct nfsd3_getaclres *resp)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#396: FILE: fs/nfsd/nfs3proc.c:647:
+	if ((nfserr = fh_verify(rqstp, &resp->fh, 0, MAY_NOP)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: fs/nfsd/nfs3proc.c:649:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#399: FILE: fs/nfsd/nfs3proc.c:650:
+	if (argp->mask & ~(NFS3_ACL|NFS3_ACLCNT|NFS3_DFACL|NFS3_DFACLCNT))
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#399: FILE: fs/nfsd/nfs3proc.c:650:
+	if (argp->mask & ~(NFS3_ACL|NFS3_ACLCNT|NFS3_DFACL|NFS3_DFACLCNT))
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#399: FILE: fs/nfsd/nfs3proc.c:650:
+	if (argp->mask & ~(NFS3_ACL|NFS3_ACLCNT|NFS3_DFACL|NFS3_DFACLCNT))
 	                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#403: FILE: fs/nfsd/nfs3proc.c:654:
+	if (resp->mask & (NFS3_ACL|NFS3_ACLCNT)) {
 	                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#408: FILE: fs/nfsd/nfs3proc.c:659:
+			if (err == -ENODATA || err == -EOPNOTSUPP)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#410: FILE: fs/nfsd/nfs3proc.c:661:
+			else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acl"
#415: FILE: fs/nfsd/nfs3proc.c:666:
+		if (acl == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#419: FILE: fs/nfsd/nfs3proc.c:670:
+			struct inode *inode = fh->fh_dentry->d_inode;
+			acl = posix_acl_from_mode(inode->i_mode, GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#423: FILE: fs/nfsd/nfs3proc.c:674:
+	if (resp->mask & (NFS3_DFACL|NFS3_DFACLCNT)) {
 	                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#425: FILE: fs/nfsd/nfs3proc.c:676:
+		/* Check how Solaris handles requests for the Default ACL
+		   of a non-directory! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: fs/nfsd/nfs3proc.c:676:
+		   of a non-directory! */

CHECK:BRACES: braces {} should be used on all arms of this statement
#431: FILE: fs/nfsd/nfs3proc.c:682:
+			if (err == -ENODATA || err == -EOPNOTSUPP)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#433: FILE: fs/nfsd/nfs3proc.c:684:
+			else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: fs/nfsd/nfs3proc.c:707:
+nfsd3_proc_setacl(struct svc_rqst * rqstp, struct nfsd3_setaclargs *argp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: fs/nfsd/nfs3proc.c:708:
+nfsd3_proc_setacl(struct svc_rqst * rqstp, struct nfsd3_setaclargs *argp,
+					   struct nfsd3_attrstat *resp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: fs/nfsd/nfs3proc.c:715:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#466: FILE: fs/nfsd/nfs3proc.c:717:
+		nfserr = nfserrno( nfsd_set_posix_acl(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#467: FILE: fs/nfsd/nfs3proc.c:718:
+			fh, ACL_TYPE_ACCESS, argp->acl_access) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#470: FILE: fs/nfsd/nfs3proc.c:721:
+		nfserr = nfserrno( nfsd_set_posix_acl(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#471: FILE: fs/nfsd/nfs3proc.c:722:
+			fh, ACL_TYPE_DEFAULT, argp->acl_default) );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#475: FILE: fs/nfsd/nfs3proc.c:726:
+	/* argp->acl_{access,default} may have been allocated in
+	   nfs3svc_decode_setaclargs. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#475: FILE: fs/nfsd/nfs3proc.c:726:
+	   nfs3svc_decode_setaclargs. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#497: FILE: fs/nfsd/nfs3proc.c:771:
+#define ACL (1+NFS3_ACL_MAX_ENTRIES*3)  /* Access Control List */
               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#497: FILE: fs/nfsd/nfs3proc.c:771:
+#define ACL (1+NFS3_ACL_MAX_ENTRIES*3)  /* Access Control List */
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/nfsd/nfs3proc.c:808:
+  PROC(null,^Ivoid,^I^Ivoid,^I^Ivoid,^I  RC_NOCACHE, ST),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/nfsd/nfs3proc.c:809:
+  PROC(getacl,^Igetacl,^I^Igetacl,^I^Igetacl,^I  RC_NOCACHE, ST+1+2*(1+ACL)),$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: fs/nfsd/nfs3proc.c:809:
+  PROC(getacl,	getacl,		getacl,		getacl,	  RC_NOCACHE, ST+1+2*(1+ACL)),
               	       		       		       	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: fs/nfsd/nfs3proc.c:809:
+  PROC(getacl,	getacl,		getacl,		getacl,	  RC_NOCACHE, ST+1+2*(1+ACL)),
               	       		       		       	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#509: FILE: fs/nfsd/nfs3proc.c:809:
+  PROC(getacl,	getacl,		getacl,		getacl,	  RC_NOCACHE, ST+1+2*(1+ACL)),
               	       		       		       	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#509: FILE: fs/nfsd/nfs3proc.c:809:
+  PROC(getacl,	getacl,		getacl,		getacl,	  RC_NOCACHE, ST+1+2*(1+ACL)),
               	       		       		       	                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: fs/nfsd/nfs3proc.c:810:
+  PROC(setacl,^Isetacl,^I^Isetacl,^I^Ifhandle,  RC_NOCACHE, ST+pAT),$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#510: FILE: fs/nfsd/nfs3proc.c:810:
+  PROC(setacl,	setacl,		setacl,		fhandle,  RC_NOCACHE, ST+pAT),
               	       		       		                        ^

CHECK:CAMELCASE: Avoid CamelCase: <pAT>
#510: FILE: fs/nfsd/nfs3proc.c:810:
+  PROC(setacl,	setacl,		setacl,		fhandle,  RC_NOCACHE, ST+pAT),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#542: FILE: fs/nfsd/nfs3xdr.c:592:
+	if (!(p = decode_fh(p, &args->fh)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#559: FILE: fs/nfsd/nfs3xdr.c:609:
+	if (!(p = decode_fh(p, &args->fh)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#562: FILE: fs/nfsd/nfs3xdr.c:612:
+	if (args->mask & ~(NFS3_ACL|NFS3_ACLCNT|NFS3_DFACL|NFS3_DFACLCNT) ||
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#562: FILE: fs/nfsd/nfs3xdr.c:612:
+	if (args->mask & ~(NFS3_ACL|NFS3_ACLCNT|NFS3_DFACL|NFS3_DFACLCNT) ||
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#562: FILE: fs/nfsd/nfs3xdr.c:612:
+	if (args->mask & ~(NFS3_ACL|NFS3_ACLCNT|NFS3_DFACL|NFS3_DFACLCNT) ||
 	                                                  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#596: FILE: fs/nfsd/nfs3xdr.c:1122:
+		int w = nfsacl_size(

CHECK:BRACES: Unbalanced braces around else statement
#625: FILE: fs/nfsd/nfs3xdr.c:1151:
+	} else

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#685: FILE: fs/nfsd/nfssvc.c:379:
+static struct svc_version *	nfsd_acl_version[] = {

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(nfsd_acl_version)
#689: FILE: fs/nfsd/nfssvc.c:383:
+#define NFSD_ACL_NRVERS		(sizeof(nfsd_acl_version)/sizeof(nfsd_acl_version[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#689: FILE: fs/nfsd/nfssvc.c:383:
+#define NFSD_ACL_NRVERS		(sizeof(nfsd_acl_version)/sizeof(nfsd_acl_version[0]))
                        		                         ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#697: FILE: fs/nfsd/nfssvc.c:391:
+};
+# define nfsd_acl_program_p &nfsd_acl_program

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#697: FILE: fs/nfsd/nfssvc.c:391:
+# define nfsd_acl_program_p &nfsd_acl_program

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#754: FILE: fs/nfsd/vfs.c:1831:
+	switch(type) {
+		case ACL_TYPE_ACCESS:
[...]
+		case ACL_TYPE_DEFAULT:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#754: FILE: fs/nfsd/vfs.c:1831:
+	switch(type) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#803: FILE: fs/nfsd/vfs.c:1880:
+	switch(type) {
+		case ACL_TYPE_ACCESS:
[...]
+		case ACL_TYPE_DEFAULT:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#803: FILE: fs/nfsd/vfs.c:1880:
+	switch(type) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#814: FILE: fs/nfsd/vfs.c:1891:
+	if (acl && acl->a_count) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#824: FILE: fs/nfsd/vfs.c:1901:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#832: FILE: fs/nfsd/vfs.c:1909:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#833: FILE: fs/nfsd/vfs.c:1910:
+		if (!S_ISDIR(inode->i_mode) && type == ACL_TYPE_DEFAULT)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#835: FILE: fs/nfsd/vfs.c:1912:
+		else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#883: FILE: include/linux/nfsacl.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#889: FILE: include/linux/nfsacl.h:7:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#898: FILE: include/linux/nfsacl.h:16:
+#define NFSACL_MAXWORDS		(2*(2+3*NFS3_ACL_MAX_ENTRIES))
                        		  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#898: FILE: include/linux/nfsacl.h:16:
+#define NFSACL_MAXWORDS		(2*(2+3*NFS3_ACL_MAX_ENTRIES))
                        		     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#898: FILE: include/linux/nfsacl.h:16:
+#define NFSACL_MAXWORDS		(2*(2+3*NFS3_ACL_MAX_ENTRIES))
                        		       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#899: FILE: include/linux/nfsacl.h:17:
+#define NFSACL_MAXPAGES		((2*(8+12*NFS3_ACL_MAX_ENTRIES) + PAGE_SIZE-1) \
                        		   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#899: FILE: include/linux/nfsacl.h:17:
+#define NFSACL_MAXPAGES		((2*(8+12*NFS3_ACL_MAX_ENTRIES) + PAGE_SIZE-1) \
                        		      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#899: FILE: include/linux/nfsacl.h:17:
+#define NFSACL_MAXPAGES		((2*(8+12*NFS3_ACL_MAX_ENTRIES) + PAGE_SIZE-1) \
                        		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#899: FILE: include/linux/nfsacl.h:17:
+#define NFSACL_MAXPAGES		((2*(8+12*NFS3_ACL_MAX_ENTRIES) + PAGE_SIZE-1) \
                        		                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#906: FILE: include/linux/nfsacl.h:24:
+	unsigned int w = 16;
+	w += max(acl_access ? (int)acl_access->a_count : 3, 4) * 12;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_fh *' should also have an identifier name
#947: FILE: include/linux/nfsd/nfsd.h:132:
+int nfsd_set_posix_acl(struct svc_fh *, int, struct posix_acl *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#947: FILE: include/linux/nfsd/nfsd.h:132:
+int nfsd_set_posix_acl(struct svc_fh *, int, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct posix_acl *' should also have an identifier name
#947: FILE: include/linux/nfsd/nfsd.h:132:
+int nfsd_set_posix_acl(struct svc_fh *, int, struct posix_acl *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#954: FILE: include/linux/nfsd/nfsd.h:139:
+}
+static inline int

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#1034: FILE: include/linux/nfsd/xdr3.h:301:
+int nfs3svc_decode_getaclargs(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1034: FILE: include/linux/nfsd/xdr3.h:301:
+int nfs3svc_decode_getaclargs(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd3_getaclargs *' should also have an identifier name
#1034: FILE: include/linux/nfsd/xdr3.h:301:
+int nfs3svc_decode_getaclargs(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#1036: FILE: include/linux/nfsd/xdr3.h:303:
+int nfs3svc_decode_setaclargs(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1036: FILE: include/linux/nfsd/xdr3.h:303:
+int nfs3svc_decode_setaclargs(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd3_setaclargs *' should also have an identifier name
#1036: FILE: include/linux/nfsd/xdr3.h:303:
+int nfs3svc_decode_setaclargs(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#1045: FILE: include/linux/nfsd/xdr3.h:334:
+int nfs3svc_encode_getaclres(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1045: FILE: include/linux/nfsd/xdr3.h:334:
+int nfs3svc_encode_getaclres(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd3_getaclres *' should also have an identifier name
#1045: FILE: include/linux/nfsd/xdr3.h:334:
+int nfs3svc_encode_getaclres(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct svc_rqst *' should also have an identifier name
#1047: FILE: include/linux/nfsd/xdr3.h:336:
+int nfs3svc_encode_setaclres(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1047: FILE: include/linux/nfsd/xdr3.h:336:
+int nfs3svc_encode_setaclres(struct svc_rqst *, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfsd3_attrstat *' should also have an identifier name
#1047: FILE: include/linux/nfsd/xdr3.h:336:
+int nfs3svc_encode_setaclres(struct svc_rqst *, u32 *,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 39 warnings, 50 checks, 939 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000213058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
