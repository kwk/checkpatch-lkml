WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -Naur -X dontdiff linux-2.5.35/drivers/char/raw.c linux-2.5.35.aio/drivers/char/raw.c

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#52: FILE: drivers/char/raw.c:204:
+rw_raw_aio_dev(int rw, struct kiocb *iocb, const struct iovec *iov, unsigned long nr_segs, loff_t *offp)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#54: FILE: drivers/char/raw.c:206:
+	struct file *filp = iocb->ki_filp;
 	             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#71: FILE: drivers/char/raw.c:235:
+rw_raw_dev(int rw, struct file *filp, const struct iovec *iov, unsigned long nr_segs, loff_t *offp)
                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#76: FILE: drivers/char/raw.c:240:
+	init_sync_kiocb(&kiocb, filp);
 	                        ^^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#113: FILE: drivers/char/raw.c:292:
+	.aio_read=	raw_aio_read,
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#115: FILE: drivers/char/raw.c:294:
+	.aio_write=	raw_aio_write,
 	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: fs/block_dev.c:119:
+blkdev_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: fs/block_dev.c:119:
+blkdev_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: fs/block_dev.c:120:
+blkdev_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, 
+		const struct iovec *iov, loff_t offset, unsigned long nr_segs)

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#170: FILE: fs/direct-io.c:155:
+	const int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
 	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#183: FILE: fs/direct-io.c:168:
+	return uptodate ? 0 : -EIO;
 	       ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: fs/direct-io.c:185:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: fs/direct-io.c:481:
+direct_io_worker(int rw, struct kiocb *iocb, struct inode * inode, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: fs/direct-io.c:481:
+direct_io_worker(int rw, struct kiocb *iocb, struct inode * inode, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: fs/direct-io.c:482:
+^Iconst struct iovec *iov, loff_t offset, unsigned long nr_segs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: fs/direct-io.c:482:
+direct_io_worker(int rw, struct kiocb *iocb, struct inode * inode, 
+	const struct iovec *iov, loff_t offset, unsigned long nr_segs, 

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#329: FILE: fs/direct-io.c:491:
+	dio = (struct dio *)kmalloc(sizeof(struct dio), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dio)...) over kmalloc(sizeof(struct dio)...)
#329: FILE: fs/direct-io.c:491:
+	dio = (struct dio *)kmalloc(sizeof(struct dio), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: fs/direct-io.c:552:
+                dio_bio_submit(dio);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: fs/direct-io.c:552:
+                dio_bio_submit(dio);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: fs/direct-io.c:565:
+generic_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: fs/direct-io.c:566:
+^Iconst struct iovec *iov, loff_t offset, unsigned long nr_segs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: fs/direct-io.c:566:
+generic_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, 
+	const struct iovec *iov, loff_t offset, unsigned long nr_segs, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: fs/direct-io.c:596:
+^Iretval = direct_io_worker(rw, iocb, inode, iov, offset, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: fs/direct-io.c:597:
+	retval = direct_io_worker(rw, iocb, inode, iov, offset, 
+				nr_segs, get_blocks);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: fs/direct-io.c:603:
+generic_file_direct_IO(int rw, struct  kiocb *iocb, struct inode *inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: fs/direct-io.c:604:
+generic_file_direct_IO(int rw, struct  kiocb *iocb, struct inode *inode, 
+	const struct iovec *iov, loff_t offset, unsigned long nr_segs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: fs/direct-io.c:609:
+^Iretval = mapping->a_ops->direct_IO(rw, iocb, inode, iov, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: fs/ext2/inode.c:622:
+ext2_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: fs/ext2/inode.c:623:
+ext2_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, 
+		const struct iovec *iov,loff_t offset, unsigned long nr_segs)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#471: FILE: fs/ext2/inode.c:623:
+		const struct iovec *iov,loff_t offset, unsigned long nr_segs)
 		                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#486: FILE: fs/ext3/inode.c:1402:
+static int ext3_direct_IO(int rw, struct kiocb *iocb, struct inode * inode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: fs/ext3/inode.c:1403:
+static int ext3_direct_IO(int rw, struct kiocb *iocb, struct inode * inode,
 			const struct iovec *iov, loff_t offset,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: fs/jfs/inode.c:312:
+static int jfs_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: fs/jfs/inode.c:313:
+^I^I^Iconst struct iovec *iov, loff_t offset, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: fs/jfs/inode.c:313:
+static int jfs_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, 
+			const struct iovec *iov, loff_t offset, 

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#541: FILE: include/linux/fs.h:312:
+	int (*direct_IO)(int, struct kiocb *, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#541: FILE: include/linux/fs.h:312:
+	int (*direct_IO)(int, struct kiocb *, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#541: FILE: include/linux/fs.h:312:
+	int (*direct_IO)(int, struct kiocb *, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#541: FILE: include/linux/fs.h:312:
+	int (*direct_IO)(int, struct kiocb *, struct inode *, const struct iovec *iov, loff_t offset, unsigned long nr_segs);

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#561: FILE: include/linux/fs.h:1252:
+extern ssize_t generic_file_direct_IO(int rw, struct kiocb *iocb, struct inode *	 inode,	const struct iovec *iov, loff_t offset, unsigned long nr_segs);

ERROR:POINTER_LOCATION: "foo *	 bar" should be "foo *bar"
#561: FILE: include/linux/fs.h:1252:
+extern ssize_t generic_file_direct_IO(int rw, struct kiocb *iocb, struct inode *	 inode,	const struct iovec *iov, loff_t offset, unsigned long nr_segs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/linux/fs.h:1252:
+extern ssize_t generic_file_direct_IO(int rw, struct kiocb *iocb, struct inode *	 inode,	const struct iovec *iov, loff_t offset, unsigned long nr_segs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: include/linux/fs.h:1253:
+extern int generic_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#562: FILE: include/linux/fs.h:1253:
+extern int generic_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: include/linux/fs.h:1253:
+extern int generic_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: include/linux/fs.h:1254:
+^Iconst struct iovec *iov, loff_t offset, unsigned long nr_segs, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: include/linux/fs.h:1254:
+extern int generic_direct_IO(int rw, struct kiocb *iocb, struct inode * inode, 
+	const struct iovec *iov, loff_t offset, unsigned long nr_segs, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: mm/filemap.c:1156:
+^I^I^Iretval = generic_file_direct_IO(READ, iocb, inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: mm/filemap.c:1157:
+			retval = generic_file_direct_IO(READ, iocb, inode, 
 					iov, pos, nr_segs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: mm/filemap.c:2104:
+^I^Iwritten = generic_file_direct_IO(WRITE, &kiocb, inode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: mm/filemap.c:2105:
+		written = generic_file_direct_IO(WRITE, &kiocb, inode, 
 					iov, pos, nr_segs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: mm/filemap.c:2108:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431994.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 14 warnings, 15 checks, 509 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431994.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
