WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1159: FILE: arch/powerpc/platforms/pseries/eeh.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1174: FILE: arch/powerpc/platforms/pseries/eeh.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1175: FILE: arch/powerpc/platforms/pseries/eeh.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#1186: FILE: arch/powerpc/platforms/pseries/eeh.c:28:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1188: FILE: arch/powerpc/platforms/pseries/eeh.c:30:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#1191: FILE: arch/powerpc/platforms/pseries/eeh.c:33:
+#include <asm/atomic.h>

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1222: FILE: arch/powerpc/platforms/pseries/eeh.c:64:
+ *  event has occured (e.g. by reading 0xff's), will then ask EEH
               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1291: FILE: arch/powerpc/platforms/pseries/eeh.c:133:
+struct pci_io_addr_range
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1302: FILE: arch/powerpc/platforms/pseries/eeh.c:144:
+	spinlock_t piar_lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1311: FILE: arch/powerpc/platforms/pseries/eeh.c:153:
+		struct pci_io_addr_range *piar;
+		piar = rb_entry(n, struct pci_io_addr_range, rb_node);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1362: FILE: arch/powerpc/platforms/pseries/eeh.c:204:
+		struct pci_io_addr_range *piar;
+		piar = rb_entry(n, struct pci_io_addr_range, rb_node);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1363: FILE: arch/powerpc/platforms/pseries/eeh.c:205:
+		printk(KERN_DEBUG "PCI: %s addr range %d [%lx-%lx]: %s\n",

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#1374: FILE: arch/powerpc/platforms/pseries/eeh.c:216:
+pci_addr_cache_insert(struct pci_dev *dev, unsigned long alo,
                                                          ^^^

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#1387: FILE: arch/powerpc/platforms/pseries/eeh.c:229:
+		} else if (alo > piar->addr_hi) {
 		           ^^^

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#1391: FILE: arch/powerpc/platforms/pseries/eeh.c:233:
+			    alo != piar->addr_lo || ahi != piar->addr_hi) {
 			    ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1392: FILE: arch/powerpc/platforms/pseries/eeh.c:234:
+				printk(KERN_WARNING "PIAR: overlapping address range\n");

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1397: FILE: arch/powerpc/platforms/pseries/eeh.c:239:
+	piar = (struct pci_io_addr_range *)kmalloc(sizeof(struct pci_io_addr_range), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*piar)...) over kmalloc(sizeof(struct pci_io_addr_range)...)
#1397: FILE: arch/powerpc/platforms/pseries/eeh.c:239:
+	piar = (struct pci_io_addr_range *)kmalloc(sizeof(struct pci_io_addr_range), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#1401: FILE: arch/powerpc/platforms/pseries/eeh.c:243:
+	piar->addr_lo = alo;
 	                ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1407: FILE: arch/powerpc/platforms/pseries/eeh.c:249:
+	printk(KERN_DEBUG "PIAR: insert range=[%lx:%lx] dev=%s\n",

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#1408: FILE: arch/powerpc/platforms/pseries/eeh.c:250:
+	                  alo, ahi, pci_name (dev));
 	                  ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1408: FILE: arch/powerpc/platforms/pseries/eeh.c:250:
+^I                  alo, ahi, pci_name (dev));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1408: FILE: arch/powerpc/platforms/pseries/eeh.c:250:
+	printk(KERN_DEBUG "PIAR: insert range=[%lx:%lx] dev=%s\n",
+	                  alo, ahi, pci_name (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1408: FILE: arch/powerpc/platforms/pseries/eeh.c:250:
+	                  alo, ahi, pci_name (dev));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1426: FILE: arch/powerpc/platforms/pseries/eeh.c:268:
+		printk(KERN_WARNING "PCI: no pci dn found for dev=%s\n", pci_name(dev));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1435: FILE: arch/powerpc/platforms/pseries/eeh.c:277:
+		printk(KERN_INFO "PCI: skip building address cache for=%s - %s\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1446: FILE: arch/powerpc/platforms/pseries/eeh.c:288:
+		unsigned long start = pci_resource_start(dev,i);
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1447: FILE: arch/powerpc/platforms/pseries/eeh.c:289:
+		unsigned long end = pci_resource_end(dev,i);
 		                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1448: FILE: arch/powerpc/platforms/pseries/eeh.c:290:
+		unsigned int flags = pci_resource_flags(dev,i);
 		                                           ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#1453: FILE: arch/powerpc/platforms/pseries/eeh.c:295:
+		if (start == 0 || ~start == 0 || end == 0 || ~end == 0)
+			 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1454: FILE: arch/powerpc/platforms/pseries/eeh.c:296:
+			 continue;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1490: FILE: arch/powerpc/platforms/pseries/eeh.c:332:
+		struct pci_io_addr_range *piar;
+		piar = rb_entry(n, struct pci_io_addr_range, rb_node);

WARNING:TYPO_SPELLING: 'scaned' may be misspelled - perhaps 'scanned'?
#1531: FILE: arch/powerpc/platforms/pseries/eeh.c:373:
+ * have been scaned for devices (after all device resources are known).
              ^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1544: FILE: arch/powerpc/platforms/pseries/eeh.c:386:
+		if ((dev->class >> 16) == PCI_BASE_CLASS_BRIDGE) {
+			continue;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1559: FILE: arch/powerpc/platforms/pseries/eeh.c:401:
+void eeh_slot_error_detail (struct pci_dn *pdn, int severity)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1569: FILE: arch/powerpc/platforms/pseries/eeh.c:411:
+^I               8, 1, NULL, pdn->eeh_config_addr,$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1570: FILE: arch/powerpc/platforms/pseries/eeh.c:412:
+	               BUID_HI(pdn->phb->buid),
 	                                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1570: FILE: arch/powerpc/platforms/pseries/eeh.c:412:
+^I               BUID_HI(pdn->phb->buid),$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1571: FILE: arch/powerpc/platforms/pseries/eeh.c:413:
+	               BUID_LO(pdn->phb->buid), NULL, 0,
 	                                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1571: FILE: arch/powerpc/platforms/pseries/eeh.c:413:
+^I               BUID_LO(pdn->phb->buid), NULL, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1572: FILE: arch/powerpc/platforms/pseries/eeh.c:414:
+^I               virt_to_phys(slot_errbuf),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: arch/powerpc/platforms/pseries/eeh.c:415:
+^I               eeh_error_buf_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: arch/powerpc/platforms/pseries/eeh.c:416:
+^I               severity);$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1618: FILE: arch/powerpc/platforms/pseries/eeh.c:460:
+			 BUID_HI(pdn->phb->buid), BUID_LO(pdn->phb->buid));
 			                   ^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1618: FILE: arch/powerpc/platforms/pseries/eeh.c:460:
+			 BUID_HI(pdn->phb->buid), BUID_LO(pdn->phb->buid));
 			                                            ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1640: FILE: arch/powerpc/platforms/pseries/eeh.c:482:
+		struct device_node *dn = pci_device_to_OF_node(dev);
+		eeh_slot_error_detail (PCI_DN(dn), 2 /* Permanent Error */);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1640: FILE: arch/powerpc/platforms/pseries/eeh.c:482:
+		eeh_slot_error_detail (PCI_DN(dn), 2 /* Permanent Error */);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1644: FILE: arch/powerpc/platforms/pseries/eeh.c:486:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1644: FILE: arch/powerpc/platforms/pseries/eeh.c:486:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1646: FILE: arch/powerpc/platforms/pseries/eeh.c:488:
+		printk(KERN_INFO "EEH: Ignored MMIO failure (%d) on device:%s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#1673: FILE: arch/powerpc/platforms/pseries/eeh.c:515:
+		if (event == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'notifiying' may be misspelled - perhaps 'notifying'?
#1676: FILE: arch/powerpc/platforms/pseries/eeh.c:518:
+		printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "
 		                                          ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1676: FILE: arch/powerpc/platforms/pseries/eeh.c:518:
+		printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "

WARNING:SPLIT_STRING: quoted string split across lines
#1677: FILE: arch/powerpc/platforms/pseries/eeh.c:519:
+		printk(KERN_INFO "EEH: MMIO failure (%d), notifiying device "
+		       "%s\n", event->reset_state,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1680: FILE: arch/powerpc/platforms/pseries/eeh.c:522:
+		notifier_call_chain (&eeh_notifier_chain,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1702: FILE: arch/powerpc/platforms/pseries/eeh.c:544:
+	return pa | (token & (PAGE_SIZE-1));
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1705: FILE: arch/powerpc/platforms/pseries/eeh.c:547:
+/** $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1708: FILE: arch/powerpc/platforms/pseries/eeh.c:550:
+static struct device_node * find_device_pe(struct device_node *dn)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1711: FILE: arch/powerpc/platforms/pseries/eeh.c:553:
+	while ((dn->parent) && PCI_DN(dn->parent) &&
+	      (PCI_DN(dn->parent)->eeh_mode & EEH_MODE_SUPPORTED)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1725: FILE: arch/powerpc/platforms/pseries/eeh.c:567:
+static inline void __eeh_mark_slot (struct device_node *dn)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1731: FILE: arch/powerpc/platforms/pseries/eeh.c:573:
+			__eeh_mark_slot (dn->child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1736: FILE: arch/powerpc/platforms/pseries/eeh.c:578:
+static inline void __eeh_clear_slot (struct device_node *dn)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1741: FILE: arch/powerpc/platforms/pseries/eeh.c:583:
+			__eeh_clear_slot (dn->child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1746: FILE: arch/powerpc/platforms/pseries/eeh.c:588:
+static inline void eeh_clear_slot (struct device_node *dn)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1749: FILE: arch/powerpc/platforms/pseries/eeh.c:591:
+	unsigned long flags;
+	spin_lock_irqsave(&confirm_error_lock, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1750: FILE: arch/powerpc/platforms/pseries/eeh.c:592:
+	__eeh_clear_slot (dn);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1796: FILE: arch/powerpc/platforms/pseries/eeh.c:638:
+^I^Iprintk ("EEH:ignored check (%x) for %s %s\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1796: FILE: arch/powerpc/platforms/pseries/eeh.c:638:
+		printk ("EEH:ignored check (%x) for %s %s\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1796: FILE: arch/powerpc/platforms/pseries/eeh.c:638:
+		printk ("EEH:ignored check (%x) for %s %s\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1797: FILE: arch/powerpc/platforms/pseries/eeh.c:639:
+^I^I        pdn->eeh_mode, pci_name (dev), dn->full_name);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1797: FILE: arch/powerpc/platforms/pseries/eeh.c:639:
+		        pdn->eeh_mode, pci_name (dev), dn->full_name);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1816: FILE: arch/powerpc/platforms/pseries/eeh.c:658:
+		pdn->eeh_check_count ++;
 		                     ^

WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#1818: FILE: arch/powerpc/platforms/pseries/eeh.c:660:
+			printk (KERN_ERR "EEH: Device driver ignored %d bad reads, panicing\n",
 			                                                           ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1818: FILE: arch/powerpc/platforms/pseries/eeh.c:660:
+			printk (KERN_ERR "EEH: Device driver ignored %d bad reads, panicing\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1818: FILE: arch/powerpc/platforms/pseries/eeh.c:660:
+			printk (KERN_ERR "EEH: Device driver ignored %d bad reads, panicing\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1819: FILE: arch/powerpc/platforms/pseries/eeh.c:661:
+^I^I^I        pdn->eeh_check_count);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1821: FILE: arch/powerpc/platforms/pseries/eeh.c:663:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1843: FILE: arch/powerpc/platforms/pseries/eeh.c:685:
+		printk(KERN_WARNING "EEH: read_slot_reset_state() failed; rc=%d dn=%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1852: FILE: arch/powerpc/platforms/pseries/eeh.c:694:
+		printk(KERN_WARNING "EEH: event on unsupported device, rc=%d dn=%s\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1867: FILE: arch/powerpc/platforms/pseries/eeh.c:709:
+	 * we recognize empty because they don't have children. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 5'
#1868: FILE: arch/powerpc/platforms/pseries/eeh.c:710:
+	if ((rets[0] == 5) && (dn->child == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dn->child == NULL'
#1868: FILE: arch/powerpc/platforms/pseries/eeh.c:710:
+	if ((rets[0] == 5) && (dn->child == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dn->child"
#1868: FILE: arch/powerpc/platforms/pseries/eeh.c:710:
+	if ((rets[0] == 5) && (dn->child == NULL)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1875: FILE: arch/powerpc/platforms/pseries/eeh.c:717:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1875: FILE: arch/powerpc/platforms/pseries/eeh.c:717:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1878: FILE: arch/powerpc/platforms/pseries/eeh.c:720:
+	 * bridges. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1879: FILE: arch/powerpc/platforms/pseries/eeh.c:721:
+	pe_dn = find_device_pe (dn);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1880: FILE: arch/powerpc/platforms/pseries/eeh.c:722:
+	__eeh_mark_slot (pe_dn);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1885: FILE: arch/powerpc/platforms/pseries/eeh.c:727:
+	eeh_slot_error_detail (pdn, 1 /* Temporary Error */);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1887: FILE: arch/powerpc/platforms/pseries/eeh.c:729:
+	printk(KERN_INFO "EEH: MMIO failure (%d) on device: %s %s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#1890: FILE: arch/powerpc/platforms/pseries/eeh.c:732:
+	if (event == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1893: FILE: arch/powerpc/platforms/pseries/eeh.c:735:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1893: FILE: arch/powerpc/platforms/pseries/eeh.c:735:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1893: FILE: arch/powerpc/platforms/pseries/eeh.c:735:
+ ^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1906: FILE: arch/powerpc/platforms/pseries/eeh.c:748:
+	 * out what happened.  So print that out. */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1907: FILE: arch/powerpc/platforms/pseries/eeh.c:749:
+	if (rets[0] != 5) dump_stack();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1917: FILE: arch/powerpc/platforms/pseries/eeh.c:759:
+EXPORT_SYMBOL_GPL(eeh_dn_check_failure);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1931: FILE: arch/powerpc/platforms/pseries/eeh.c:773:
+unsigned long eeh_check_failure(const volatile void __iomem *token, unsigned long val)

CHECK:SPACING: No space is necessary after a cast
#1938: FILE: arch/powerpc/platforms/pseries/eeh.c:780:
+	addr = eeh_token_to_phys((unsigned long __force) token);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1946: FILE: arch/powerpc/platforms/pseries/eeh.c:788:
+	eeh_dn_check_failure (dn, dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1952: FILE: arch/powerpc/platforms/pseries/eeh.c:794:
+EXPORT_SYMBOL(eeh_check_failure);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2005: FILE: arch/powerpc/platforms/pseries/eeh.c:847:
+	 * and the only way to find out is to check each and every one. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2018: FILE: arch/powerpc/platforms/pseries/eeh.c:860:
+			printk(KERN_DEBUG "EEH: %s: eeh enabled\n", dn->full_name);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2021: FILE: arch/powerpc/platforms/pseries/eeh.c:863:
+		} else {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2023: FILE: arch/powerpc/platforms/pseries/eeh.c:865:
+			 * EEH parent, in which case we mark it as supported. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2025: FILE: arch/powerpc/platforms/pseries/eeh.c:867:
+			if (dn->parent && PCI_DN(dn->parent)
+			    && (PCI_DN(dn->parent)->eeh_mode & EEH_MODE_SUPPORTED)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2033: FILE: arch/powerpc/platforms/pseries/eeh.c:875:
+		printk(KERN_WARNING "EEH: %s: unable to get reg property.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#2062: FILE: arch/powerpc/platforms/pseries/eeh.c:904:
+	if (np == NULL)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2075: FILE: arch/powerpc/platforms/pseries/eeh.c:917:
+	if (eeh_error_buf_size == RTAS_UNKNOWN_SERVICE) {
+		eeh_error_buf_size = 1024;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2079: FILE: arch/powerpc/platforms/pseries/eeh.c:921:
+		printk(KERN_WARNING "EEH: rtas-error-log-max is bigger than allocated "

WARNING:SPLIT_STRING: quoted string split across lines
#2080: FILE: arch/powerpc/platforms/pseries/eeh.c:922:
+		printk(KERN_WARNING "EEH: rtas-error-log-max is bigger than allocated "
+		      "buffer ! (%d vs %d)", eeh_error_buf_size, RTAS_ERROR_LOG_MAX);

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2087: FILE: arch/powerpc/platforms/pseries/eeh.c:929:
+		unsigned long buid;
 		              ^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2089: FILE: arch/powerpc/platforms/pseries/eeh.c:931:
+		buid = get_phb_buid(phb);
 		^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2090: FILE: arch/powerpc/platforms/pseries/eeh.c:932:
+		if (buid == 0 || PCI_DN(phb) == NULL)
 		    ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!PCI_DN"
#2090: FILE: arch/powerpc/platforms/pseries/eeh.c:932:
+		if (buid == 0 || PCI_DN(phb) == NULL)

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2093: FILE: arch/powerpc/platforms/pseries/eeh.c:935:
+		info.buid_lo = BUID_LO(buid);
 		                       ^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2094: FILE: arch/powerpc/platforms/pseries/eeh.c:936:
+		info.buid_hi = BUID_HI(buid);
 		                       ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2099: FILE: arch/powerpc/platforms/pseries/eeh.c:941:
+		printk(KERN_INFO "EEH: PCI Enhanced I/O Error Handling Enabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2101: FILE: arch/powerpc/platforms/pseries/eeh.c:943:
+		printk(KERN_WARNING "EEH: No capable adapters found\n");

WARNING:TYPO_SPELLING: 'inluding' may be misspelled - perhaps 'including'?
#2111: FILE: arch/powerpc/platforms/pseries/eeh.c:953:
+ * adapter (inluding any config-space i/o).
             ^^^^^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2124: FILE: arch/powerpc/platforms/pseries/eeh.c:966:
+	if (NULL == phb || 0 == phb->buid) {
 	                             ^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2125: FILE: arch/powerpc/platforms/pseries/eeh.c:967:
+		printk(KERN_WARNING "EEH: Expected buid but found none for %s\n",
 		                                   ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2125: FILE: arch/powerpc/platforms/pseries/eeh.c:967:
+		printk(KERN_WARNING "EEH: Expected buid but found none for %s\n",

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2131: FILE: arch/powerpc/platforms/pseries/eeh.c:973:
+	info.buid_hi = BUID_HI(phb->buid);
 	                            ^^^^

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#2132: FILE: arch/powerpc/platforms/pseries/eeh.c:974:
+	info.buid_lo = BUID_LO(phb->buid);
 	                            ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2152: FILE: arch/powerpc/platforms/pseries/eeh.c:994:
+	printk(KERN_DEBUG "EEH: adding device %s\n", pci_name(dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2155: FILE: arch/powerpc/platforms/pseries/eeh.c:997:
+	pci_dev_get (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2159: FILE: arch/powerpc/platforms/pseries/eeh.c:1001:
+	pci_addr_cache_insert_device (dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2173: FILE: arch/powerpc/platforms/pseries/eeh.c:1015:
+	struct device_node *dn;
+	if (!dev || !eeh_subsystem_enabled)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2178: FILE: arch/powerpc/platforms/pseries/eeh.c:1020:
+	printk(KERN_DEBUG "EEH: remove device %s\n", pci_name(dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2184: FILE: arch/powerpc/platforms/pseries/eeh.c:1026:
+	pci_dev_put (dev);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2206: FILE: arch/powerpc/platforms/pseries/eeh.c:1048:
+	if (0 == eeh_subsystem_enabled) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#2207: FILE: arch/powerpc/platforms/pseries/eeh.c:1049:
+		seq_printf(m, "EEH Subsystem is globally disabled\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#2210: FILE: arch/powerpc/platforms/pseries/eeh.c:1052:
+		seq_printf(m, "EEH Subsystem is enabled\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2212: FILE: arch/powerpc/platforms/pseries/eeh.c:1054:
+		seq_printf(m,
+				"no device=%ld\n"

WARNING:CONST_STRUCT: struct file_operations should normally be const
#2232: FILE: arch/powerpc/platforms/pseries/eeh.c:1074:
+static struct file_operations proc_eeh_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#2251: FILE: arch/powerpc/platforms/pseries/eeh.c:1093:
+__initcall(eeh_init_proc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 93 warnings, 20 checks, 1104 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
