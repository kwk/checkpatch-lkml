WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#48: FILE: drivers/pci/quirks.c:52:
 static void __devinit quirk_isa_dma_hangs(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#54: FILE: drivers/pci/quirks.c:76:
 static void __devinit quirk_nopcipci(struct pci_dev *dev)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#58: FILE: drivers/pci/quirks.c:78:
+	if ((pci_pci_problems & PCIPCI_FAIL)==0) {
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#70: FILE: drivers/pci/quirks.c:89:
 static void __devinit quirk_triton(struct pci_dev *dev)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#74: FILE: drivers/pci/quirks.c:91:
+	if ((pci_pci_problems&PCIPCI_TRITON)==0) {
 	                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#74: FILE: drivers/pci/quirks.c:91:
+	if ((pci_pci_problems&PCIPCI_TRITON)==0) {
 	                                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#89: FILE: drivers/pci/quirks.c:120:
+	if (p!=NULL) {
 	     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#89: FILE: drivers/pci/quirks.c:120:
+	if (p!=NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#101: FILE: drivers/pci/quirks.c:128:
+		if (p==NULL)	/* No problem parts */
 		     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#101: FILE: drivers/pci/quirks.c:128:
+		if (p==NULL)	/* No problem parts */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#110: FILE: drivers/pci/quirks.c:164:
 static void __devinit quirk_viaetbf(struct pci_dev *dev)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#114: FILE: drivers/pci/quirks.c:166:
+	if ((pci_pci_problems&PCIPCI_VIAETBF)==0) {
 	                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#114: FILE: drivers/pci/quirks.c:166:
+	if ((pci_pci_problems&PCIPCI_VIAETBF)==0) {
 	                                     ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#122: FILE: drivers/pci/quirks.c:173:
 static void __devinit quirk_vsfx(struct pci_dev *dev)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#126: FILE: drivers/pci/quirks.c:175:
+	if ((pci_pci_problems&PCIPCI_VSFX)==0) {
 	                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#126: FILE: drivers/pci/quirks.c:175:
+	if ((pci_pci_problems&PCIPCI_VSFX)==0) {
 	                                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#142: FILE: drivers/pci/quirks.c:190:
+	if ((pci_pci_problems&PCIPCI_ALIMAGIK)==0) {
 	                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#142: FILE: drivers/pci/quirks.c:190:
+	if ((pci_pci_problems&PCIPCI_ALIMAGIK)==0) {
 	                                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#145: FILE: drivers/pci/quirks.c:192:
+		pci_pci_problems |= PCIPCI_ALIMAGIK|PCIPCI_TRITON;
 		                                   ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#157: FILE: drivers/pci/quirks.c:202:
 static void __devinit quirk_natoma(struct pci_dev *dev)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#161: FILE: drivers/pci/quirks.c:204:
+	if ((pci_pci_problems&PCIPCI_NATOMA)==0) {
 	                     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#161: FILE: drivers/pci/quirks.c:204:
+	if ((pci_pci_problems&PCIPCI_NATOMA)==0) {
 	                                    ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#173: FILE: drivers/pci/quirks.c:220:
 static void __devinit quirk_s3_64M(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#181: FILE: drivers/pci/quirks.c:250:
 static void __devinit quirk_ati_exploding_mce(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#189: FILE: drivers/pci/quirks.c:401:
 static void __devinit quirk_amd_ioapic(struct pci_dev *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#213: FILE: drivers/pci/quirks.c:555:
 static void __devinit quirk_amd_ordering(struct pci_dev *dev)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#219: FILE: drivers/pci/quirks.c:559:
+	if ((pcic&6)!=6) {
 	         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#219: FILE: drivers/pci/quirks.c:559:
+	if ((pcic&6)!=6) {
 	            ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#228: FILE: drivers/pci/quirks.c:577:
 static void __devinit quirk_dunord ( struct pci_dev * dev )

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#233: FILE: drivers/pci/quirks.c:579:
+	struct resource *r = &dev->resource [1];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: drivers/pci/quirks.c:580:
+	struct resource *r = &dev->resource [1];
+	r->start = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#267: FILE: drivers/pci/quirks.c:633:
 static void __devinit quirk_ide_bases(struct pci_dev *dev)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#287: FILE: drivers/pci/quirks.c:680:
+	if (config & (1<<6)) {
 	               ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#298: FILE: drivers/pci/quirks.c:693:
 static void __devinit quirk_via_bridge(struct pci_dev *pdev)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#335: FILE: drivers/pci/quirks.c:890:
+	for (i=1; i < 6; i++) {
 	      ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#335: FILE: drivers/pci/quirks.c:890:
+	for (i=1; i < 6; i++) {
 		memset(&pdev->resource[i], 0, sizeof(pdev->resource[i]));
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#346: FILE: drivers/pci/quirks.c:986:
+			pr_debug(KERN_INFO "PCI: Calling quirk %p for %s\n", f->hook, pci_name(dev));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_INFO
#346: FILE: drivers/pci/quirks.c:986:
+			pr_debug(KERN_INFO "PCI: Calling quirk %p for %s\n", f->hook, pci_name(dev));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 17 warnings, 10 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
