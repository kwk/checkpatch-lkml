WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: drivers/cpufreq/freq_table.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#132: FILE: drivers/cpufreq/freq_table.c:2:
+ * linux/drivers/cpufreq/freq_table.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#153: FILE: drivers/cpufreq/freq_table.c:23:
+	for (i=0; (table[i].frequency != CPUFREQ_TABLE_END); i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: drivers/cpufreq/freq_table.c:25:
+		unsigned int freq = table[i].frequency;
+		if (freq == CPUFREQ_ENTRY_INVALID)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#163: FILE: drivers/cpufreq/freq_table.c:33:
+	policy->min = policy->cpuinfo.min_freq = min_freq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#164: FILE: drivers/cpufreq/freq_table.c:34:
+	policy->max = policy->cpuinfo.max_freq = max_freq;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#173: FILE: drivers/cpufreq/freq_table.c:43:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/cpufreq/freq_table.c:54:
+^Icpufreq_verify_within_limits(policy, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/cpufreq/freq_table.c:55:
+^I^I^I^I     policy->cpuinfo.min_freq, $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#188: FILE: drivers/cpufreq/freq_table.c:58:
+	for (i=0; (table[i].frequency != CPUFREQ_TABLE_END); i++) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#190: FILE: drivers/cpufreq/freq_table.c:60:
+		unsigned int freq = table[i].frequency;
+		if (freq == CPUFREQ_ENTRY_INVALID)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq >= policy->min'
#192: FILE: drivers/cpufreq/freq_table.c:62:
+		if ((freq >= policy->min) && (freq <= policy->max))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq <= policy->max'
#192: FILE: drivers/cpufreq/freq_table.c:62:
+		if ((freq >= policy->min) && (freq <= policy->max))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/cpufreq/freq_table.c:71:
+^Icpufreq_verify_within_limits(policy, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/cpufreq/freq_table.c:72:
+^I^I^I^I     policy->cpuinfo.min_freq, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: drivers/cpufreq/freq_table.c:79:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: drivers/cpufreq/freq_table.c:99:
+	for (i=0; (table[i].frequency != CPUFREQ_TABLE_END); i++) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/cpufreq/freq_table.c:101:
+		unsigned int freq = table[i].frequency;
+		if (freq == CPUFREQ_ENTRY_INVALID)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq < policy->min'
#233: FILE: drivers/cpufreq/freq_table.c:103:
+		if ((freq < policy->min) || (freq > policy->max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq > policy->max'
#233: FILE: drivers/cpufreq/freq_table.c:103:
+		if ((freq < policy->min) || (freq > policy->max))

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: drivers/cpufreq/freq_table.c:105:
+		switch(policy->policy) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: drivers/cpufreq/freq_table.c:124:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: drivers/cpufreq/freq_table.c:153:
+	for (i=0; (table[i].frequency != CPUFREQ_TABLE_END); i++) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: drivers/cpufreq/freq_table.c:155:
+		unsigned int freq = table[i].frequency;
+		if (freq == CPUFREQ_ENTRY_INVALID)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq < policy->min'
#287: FILE: drivers/cpufreq/freq_table.c:157:
+		if ((freq < policy->min) || (freq > policy->max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq > policy->max'
#287: FILE: drivers/cpufreq/freq_table.c:157:
+		if ((freq < policy->min) || (freq > policy->max))

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: drivers/cpufreq/freq_table.c:159:
+		switch(relation) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#318: FILE: drivers/cpufreq/freq_table.c:188:
+	if (optimal.index > i) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#322: FILE: drivers/cpufreq/freq_table.c:192:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/cpufreq/freq_table.c:194:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: drivers/cpufreq/freq_table.c:199:
+MODULE_AUTHOR ("Dominik Brodowski <linux@brodo.de>");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#330: FILE: drivers/cpufreq/freq_table.c:200:
+MODULE_DESCRIPTION ("CPUfreq frequency table helpers");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#331: FILE: drivers/cpufreq/freq_table.c:201:
+MODULE_LICENSE ("GPL");

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#339: FILE: include/linux/cpufreq.h:300:
+#if defined(CONFIG_CPU_FREQ_TABLE) || defined(CONFIG_CPU_FREQ_TABLE_MODULE)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393860.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 10 warnings, 12 checks, 290 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393860.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
