WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
crashes.  First, the sigio thread disables SIGWINCH because all hell breaks 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: arch/um/drivers/line.c:471:
+^I/* XXX: I assume this should be called in process context, not with $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: arch/um/drivers/line.c:472:
+         *  interrupts disabled!$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: arch/um/drivers/line.c:473:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: arch/um/drivers/line.c:485:
+        if((line->count == 0) && line->sigio){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: arch/um/drivers/line.c:485:
+        if((line->count == 0) && line->sigio){$

ERROR:SPACING: space required before the open brace '{'
#60: FILE: arch/um/drivers/line.c:485:
+        if((line->count == 0) && line->sigio){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'line->count == 0'
#60: FILE: arch/um/drivers/line.c:485:
+        if((line->count == 0) && line->sigio){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#60: FILE: arch/um/drivers/line.c:485:
+        if((line->count == 0) && line->sigio){

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: arch/um/drivers/line.c:486:
+                unregister_winch(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: arch/um/drivers/line.c:486:
+                unregister_winch(tty);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: arch/um/drivers/line.c:487:
+                line->sigio = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/um/drivers/line.c:487:
+                line->sigio = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: arch/um/drivers/line.c:488:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: arch/um/drivers/line.c:488:
+        }$

ERROR:SPACING: space required before the open brace '{'
#78: FILE: arch/um/drivers/line.c:747:
+	list_for_each(ele, &winch_handlers){

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: arch/um/drivers/line.c:749:
+                if(winch->tty == tty){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/um/drivers/line.c:749:
+                if(winch->tty == tty){$

ERROR:SPACING: space required before the open brace '{'
#80: FILE: arch/um/drivers/line.c:749:
+                if(winch->tty == tty){

ERROR:SPACING: space required before the open parenthesis '('
#80: FILE: arch/um/drivers/line.c:749:
+                if(winch->tty == tty){

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: arch/um/drivers/line.c:750:
+                        found = winch;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/um/drivers/line.c:750:
+                        found = winch;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: arch/um/drivers/line.c:751:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/um/drivers/line.c:751:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/um/drivers/line.c:752:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/um/drivers/line.c:752:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: arch/um/drivers/line.c:753:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/um/drivers/line.c:753:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: arch/um/drivers/line.c:755:
+        if(found == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/um/drivers/line.c:755:
+        if(found == NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#86: FILE: arch/um/drivers/line.c:755:
+        if(found == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!found"
#86: FILE: arch/um/drivers/line.c:755:
+        if(found == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: arch/um/drivers/line.c:756:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/um/drivers/line.c:756:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: arch/um/drivers/line.c:758:
+        if(winch->pid != -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/um/drivers/line.c:758:
+        if(winch->pid != -1)$

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: arch/um/drivers/line.c:758:
+        if(winch->pid != -1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/um/drivers/line.c:759:
+                os_kill_process(winch->pid, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/um/drivers/line.c:759:
+                os_kill_process(winch->pid, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/um/drivers/line.c:761:
+        free_irq_by_irq_and_dev(WINCH_IRQ, winch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/um/drivers/line.c:761:
+        free_irq_by_irq_and_dev(WINCH_IRQ, winch);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: arch/um/drivers/line.c:762:
+        free_irq(WINCH_IRQ, winch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/um/drivers/line.c:762:
+        free_irq(WINCH_IRQ, winch);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/um/drivers/line.c:763:
+        list_del(&winch->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/um/drivers/line.c:763:
+        list_del(&winch->list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/um/drivers/line.c:764:
+        kfree(winch);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/um/drivers/line.c:764:
+        kfree(winch);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: arch/um/include/os.h:163:
+extern int os_getpgrp(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/um/kernel/sigio_user.c:185:
+        signal(SIGWINCH, SIG_IGN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/um/kernel/sigio_user.c:185:
+        signal(SIGWINCH, SIG_IGN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/um/kernel/skas/process.c:35:
+        if(pid != os_getpgrp())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/um/kernel/skas/process.c:35:
+        if(pid != os_getpgrp())$

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: arch/um/kernel/skas/process.c:35:
+        if(pid != os_getpgrp())

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/um/kernel/skas/process.c:263:
+^Iset_handler(SIGWINCH, (__sighandler_t) sig_handler, $

CHECK:SPACING: No space is necessary after a cast
#173: FILE: arch/um/kernel/skas/process.c:263:
+	set_handler(SIGWINCH, (__sighandler_t) sig_handler, 

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: arch/um/kernel/tt/tracer.c:37:
+	if(pid != os_getpgrp())

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 20 warnings, 4 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000186313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
