WARNING:REPEATED_WORD: Possible repeated word: 'unlimited'
#33: 
	cpu unlimited unlimited

WARNING:REPEATED_WORD: Possible repeated word: 'unlimited'
#34: 
	fsize unlimited unlimited

WARNING:REPEATED_WORD: Possible repeated word: 'unlimited'
#35: 
	data unlimited unlimited

WARNING:REPEATED_WORD: Possible repeated word: 'unlimited'
#38: 
	rss unlimited unlimited

WARNING:REPEATED_WORD: Possible repeated word: 'unlimited'
#42: 
	as unlimited unlimited

WARNING:REPEATED_WORD: Possible repeated word: 'unlimited'
#43: 
	locks unlimited unlimited

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#81: FILE: fs/proc/base.c:130:
+	E(PROC_TGID_RLIMIT,    "rlimit",  S_IFREG|S_IRUGO),
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#81: FILE: fs/proc/base.c:130:
+	E(PROC_TGID_RLIMIT,    "rlimit",  S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#89: FILE: fs/proc/base.c:156:
+	E(PROC_TID_RLIMIT,     "rlimit",  S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#89: FILE: fs/proc/base.c:156:
+	E(PROC_TID_RLIMIT,     "rlimit",  S_IFREG|S_IRUGO),

CHECK:SPACING: No space is necessary after a cast
#141: FILE: fs/proc/base.c:548:
+	struct rlimit *rlim = (struct rlimit *) s->private;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rlim_name[i]"
#145: FILE: fs/proc/base.c:552:
+		if (rlim_name[i] != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: fs/proc/base.c:573:
+	struct rlimit *rlim = kmalloc(RLIM_NLIMITS * sizeof (struct rlimit), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: fs/proc/base.c:580:
+	memcpy(rlim, task->signal->rlim, RLIM_NLIMITS * sizeof (struct rlimit));

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: fs/proc/base.c:594:
+	struct seq_file *s = file->private_data;
+	kfree(s->private);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#191: FILE: fs/proc/base.c:598:
+static struct file_operations proc_rlimit_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214290.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 4 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214290.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
