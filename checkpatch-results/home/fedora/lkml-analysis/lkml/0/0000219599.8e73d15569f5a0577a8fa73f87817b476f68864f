WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: /arch/ppc/kernel/swsusp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#122: FILE: /arch/ppc/kernel/swsusp.c:27:
+#include <asm/mmu_context.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#123: FILE: /arch/ppc/kernel/swsusp.c:28:
+#include <asm/uaccess.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#129: FILE: /arch/ppc/kernel/swsusp.c:34:
+extern int nr_copy_pages __nosavedata;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#131: FILE: /arch/ppc/kernel/swsusp.c:36:
+extern asmlinkage int swsusp_save(void);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#133: FILE: /arch/ppc/kernel/swsusp.c:38:
+static void inline do_swsusp_copyback(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: /arch/ppc/kernel/swsusp.c:40:
+^Iregister int i = 0; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: /arch/ppc/kernel/swsusp.c:41:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: /arch/ppc/kernel/swsusp.c:45:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: /arch/ppc/kernel/swsusp.c:48:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: /arch/ppc/kernel/swsusp.c:49:
+^I^Ifor (loop = 0; $

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#146: FILE: /arch/ppc/kernel/swsusp.c:51:
+		     loop ++)
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#187: FILE: /arch/ppc/kernel/cpu_context.h:1:
+/*

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#196: FILE: /arch/ppc/kernel/cpu_context.h:10:
+void inline __save_processor_state(struct saved_context *s)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#206: FILE: /arch/ppc/kernel/cpu_context.h:20:
+	asm volatile ("mfsdr1 4; stw 4,%0": "=m" (s->sdr1));
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: /arch/ppc/kernel/cpu_context.h:28:
+^I^I^I  "bne 1b" : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: /arch/ppc/kernel/cpu_context.h:31:
+^I^I$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#225: FILE: /arch/ppc/kernel/cpu_context.h:39:
+void inline __restore_processor_state(struct saved_context *s)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#231: FILE: /arch/ppc/kernel/cpu_context.h:45:
+	asm volatile ("lwz 4,%0; mtsprg 0,4": "=m" (s->sprg[0]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#232: FILE: /arch/ppc/kernel/cpu_context.h:46:
+	asm volatile ("lwz 4,%0; mtsprg 1,4": "=m" (s->sprg[1]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#233: FILE: /arch/ppc/kernel/cpu_context.h:47:
+	asm volatile ("lwz 4,%0; mtsprg 2,4": "=m" (s->sprg[2]));
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#234: FILE: /arch/ppc/kernel/cpu_context.h:48:
+	asm volatile ("lwz 4,%0; mtsprg 3,4": "=m" (s->sprg[3]));
 	                                    ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#237: FILE: /arch/ppc/kernel/cpu_context.h:51:
+	asm volatile ("li 3,0; mttbl 3; \n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: /arch/ppc/kernel/cpu_context.h:58:
+^Iasm volatile ("lmw 12,%0" : "=m" (s->r12)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: /arch/ppc/kernel/cpu_context.h:61:
+^Iasm volatile ("lwz 0,%0; mtcr 0" : "=m" (s->cr)); ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: /arch/ppc/kernel/cpu_context.h:61:
+^Iasm volatile ("lwz 0,%0; mtcr 0" : "=m" (s->cr)); ^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: /arch/ppc/kernel/cpu_context.h:70:
+extern void enable_kernel_altivec(void);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: /arch/ppc/kernel/cpu_context.h:74:
+	printk("set context: <%p>\n", current);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: /arch/ppc/kernel/cpu_context.h:76:
+	set_context(current->active_mm->context,
+			current->active_mm->pgd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: /arch/ppc/kernel/cpu_context.h:78:
+	printk("pmu_resume\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: /arch/ppc/kernel/cpu_context.h:83:
+		printk("enable altivec\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#273: FILE: /arch/ppc/kernel/cpu_context.h:87:
+	printk("enable fp\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#294: FILE: /include/asm-ppc/suspend.h:1:
+/*

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#309: FILE: /include/asm-ppc/suspend.h:16:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#319: FILE: /include/asm-ppc/suspend.h:26:
+} __attribute__((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 14 warnings, 3 checks, 268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219599.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
