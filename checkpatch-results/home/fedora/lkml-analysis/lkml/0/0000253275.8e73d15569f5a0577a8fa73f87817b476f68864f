WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
 include/asm-sparc64/spinlock.h    |  122 ++++++++++++++++++++++++++++++++++----

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: include/asm-sparc64/ptrace.h:102:
+extern unsigned long profile_pc(struct pt_regs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:INLINE: plain inline is preferred over __inline__
#287: FILE: include/asm-sparc64/spinlock.h:44:
+static __inline__ void _raw_spin_lock(spinlock_t *lock)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#289: FILE: include/asm-sparc64/spinlock.h:46:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#297: FILE: include/asm-sparc64/spinlock.h:54:
+			     "ba,a,pt	%%xcc, 1b\n\t"
 			      ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INLINE: plain inline is preferred over __inline__
#309: FILE: include/asm-sparc64/spinlock.h:79:
+static __inline__ void _raw_spin_lock_flags(spinlock_t *lock, unsigned long flags)

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#320: FILE: include/asm-sparc64/spinlock.h:90:
+			      "ba,pt	%%xcc, 1b	! Retry lock acquire\n\t"
 			       ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#333: FILE: include/asm-sparc64/spinlock.h:116:
+extern int _do_spin_trylock (spinlock_t *lock);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: include/asm-sparc64/spinlock.h:116:
+extern int _do_spin_trylock (spinlock_t *lock);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#349: FILE: include/asm-sparc64/spinlock.h:134:
+static void __inline__ __read_lock(rwlock_t *lock)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#349: FILE: include/asm-sparc64/spinlock.h:134:
+static void __inline__ __read_lock(rwlock_t *lock)

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#356: FILE: include/asm-sparc64/spinlock.h:141:
+			      "ba,a,pt	%%xcc, 4f\n\t"
 			       ^^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#367: FILE: include/asm-sparc64/spinlock.h:152:
+static void __inline__ __read_unlock(rwlock_t *lock)

WARNING:INLINE: plain inline is preferred over __inline__
#367: FILE: include/asm-sparc64/spinlock.h:152:
+static void __inline__ __read_unlock(rwlock_t *lock)

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#375: FILE: include/asm-sparc64/spinlock.h:160:
+			      "ba,a,pt	%%xcc, 1b\n\t"
 			       ^^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#380: FILE: include/asm-sparc64/spinlock.h:165:
+static void __inline__ __write_lock(rwlock_t *lock)

WARNING:INLINE: plain inline is preferred over __inline__
#380: FILE: include/asm-sparc64/spinlock.h:165:
+static void __inline__ __write_lock(rwlock_t *lock)

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#388: FILE: include/asm-sparc64/spinlock.h:173:
+			      "ba,a,pt	%%xcc, 4f\n\t"
 			       ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#396: FILE: include/asm-sparc64/spinlock.h:181:
+			      "ba,a,pt	%%xcc, 1b\n\t"
 			       ^^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#401: FILE: include/asm-sparc64/spinlock.h:186:
+static void __inline__ __write_unlock(rwlock_t *lock)

WARNING:INLINE: plain inline is preferred over __inline__
#401: FILE: include/asm-sparc64/spinlock.h:186:
+static void __inline__ __write_unlock(rwlock_t *lock)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#409: FILE: include/asm-sparc64/spinlock.h:194:
+static int __inline__ __write_trylock(rwlock_t *lock)

WARNING:INLINE: plain inline is preferred over __inline__
#409: FILE: include/asm-sparc64/spinlock.h:194:
+static int __inline__ __write_trylock(rwlock_t *lock)

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#419: FILE: include/asm-sparc64/spinlock.h:204:
+			      "ba,pt	%%xcc, 1b\n\t"
 			       ^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 16 warnings, 3 checks, 205 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
