WARNING:TYPO_SPELLING: 'hach' may be misspelled - perhaps 'hatch'?
#52: 
processes' hach in request_module, as it implements the same 
           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#63: 
Maxfeldstraße 5				+49 911 74053 688
           ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#64: 
90409 Nürnberg				http://www.suse.de
       ^

WARNING:TYPO_SPELLING: 'programm' may be misspelled - perhaps 'program'?
#78: 
might hang if not enough memory to load the programm image / shared 
                                            ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: kernel/kmod.c:102:
+^I * Resource checking is now implemented in $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'vaild' may be misspelled - perhaps 'valid'?
#179: FILE: kernel/kmod.c:182:
+	/* Copy process info, it's not vaild after complete() */
 	                               ^^^^^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#187: FILE: kernel/kmod.c:190:
+	if (stored_info.wait) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: kernel/kmod.c:197:
+^I^I/* $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#200: FILE: kernel/kmod.c:203:
+		printk(KERN_INFO "khelper: delay event %s (current %d, max %d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#213: FILE: kernel/kmod.c:216:
+	printk(KERN_INFO "khelper: exec event %s (current %d, max %d)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#227: FILE: kernel/kmod.c:231:
+		 * until that is done.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#236: FILE: kernel/kmod.c:238:
+		printk(KERN_INFO "khelper: exec event %s failed (%d)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: kernel/kmod.c:250:
+^I/* $

CHECK:SPACING: No space is necessary after a cast
#280: FILE: kernel/kmod.c:273:
+	sys_wait4(pid, (int __user *) &retval, 0, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: kernel/kmod.c:274:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: kernel/kmod.c:276:
+^I^I/* $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#334: FILE: kernel/kmod.c:356:
+	if (khelper_max > max_threads/2)
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#335: FILE: kernel/kmod.c:357:
+		khelper_max = max_threads/2;
 		                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#339: FILE: kernel/kmod.c:361:
+	printk(KERN_INFO "khelper: max %d concurrent processes\n",

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#354: FILE: kernel/kmod.c:376:
+__setup("khelper_max=", khelper_setup);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: lib/kobject.c:137:
+	memset (argv_buffer, 0x00, ARGV_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: lib/kobject.c:141:
+	scratch += sizeof (char *) * 3;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#408: FILE: lib/kobject.c:147:
+	argv [0] = scratch;

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#411: FILE: lib/kobject.c:150:
+	argv [1] = scratch;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#425: FILE: lib/kobject.c:162:
+	memset (envp_buffer, 0x00, ENVP_SIZE);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#432: FILE: lib/kobject.c:168:
+	envp [i++] = scratch;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: lib/kobject.c:169:
+	strcpy(scratch,"HOME=/");
 	              ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#435: FILE: lib/kobject.c:171:
+	envp [i++] = scratch;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: lib/kobject.c:172:
+	strcpy(scratch,"PATH=/sbin:/bin:/usr/sbin:/usr/bin");
 	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: lib/kobject.c:215:
+	pr_debug ("%s - call_usermodehelper returned %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#467: FILE: lib/kobject.c:216:
+		  __FUNCTION__, retval);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 14 warnings, 6 checks, 363 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
