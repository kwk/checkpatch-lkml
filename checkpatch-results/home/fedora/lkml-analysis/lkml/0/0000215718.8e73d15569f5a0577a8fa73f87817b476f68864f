WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
Most code of ubd_user.c already uses the os_* functions, so it can be moved to

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#69: FILE: arch/um/drivers/ubd_kern.c:76:
+extern int open_ubd_file(char *file, struct openflags *openflags,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#73: FILE: arch/um/drivers/ubd_kern.c:80:
+extern int create_cow_file(char *cow_file, char *backing_file,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#78: FILE: arch/um/drivers/ubd_kern.c:85:
+extern int read_cow_bitmap(int fd, void *buf, int offset, int len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#79: FILE: arch/um/drivers/ubd_kern.c:86:
+extern int read_ubd_fs(int fd, void *buffer, int len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#80: FILE: arch/um/drivers/ubd_kern.c:87:
+extern int write_ubd_fs(int fd, char *buffer, int len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#81: FILE: arch/um/drivers/ubd_kern.c:88:
+extern void do_io(struct io_thread_req *req);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#104: FILE: arch/um/drivers/ubd_kern.c:111:
+}
+/*End stuff from ubd_user.h*/

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#117: FILE: arch/um/drivers/ubd_kern.c:1351:
+	if(from_cmdline == NULL) return(1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#117: FILE: arch/um/drivers/ubd_kern.c:1351:
+	if(from_cmdline == NULL) return(1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!from_cmdline"
#117: FILE: arch/um/drivers/ubd_kern.c:1351:
+	if(from_cmdline == NULL) return(1);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#118: FILE: arch/um/drivers/ubd_kern.c:1352:
+	if(!strcmp(from_cmdline, from_cow)) return(1);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#118: FILE: arch/um/drivers/ubd_kern.c:1352:
+	if(!strcmp(from_cmdline, from_cow)) return(1);

ERROR:SPACING: space required before the open brace '{'
#121: FILE: arch/um/drivers/ubd_kern.c:1355:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: arch/um/drivers/ubd_kern.c:1355:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: arch/um/drivers/ubd_kern.c:1356:
+		printk("Couldn't stat '%s', err = %d\n", from_cmdline, -err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#123: FILE: arch/um/drivers/ubd_kern.c:1357:
+		return(1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: space required before the open brace '{'
#126: FILE: arch/um/drivers/ubd_kern.c:1360:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: arch/um/drivers/ubd_kern.c:1360:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: arch/um/drivers/ubd_kern.c:1361:
+		printk("Couldn't stat '%s', err = %d\n", from_cow, -err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#128: FILE: arch/um/drivers/ubd_kern.c:1362:
+		return(1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf1.ust_dev == buf2.ust_dev'
#130: FILE: arch/um/drivers/ubd_kern.c:1364:
+	if((buf1.ust_dev == buf2.ust_dev) && (buf1.ust_ino == buf2.ust_ino))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf1.ust_ino == buf2.ust_ino'
#130: FILE: arch/um/drivers/ubd_kern.c:1364:
+	if((buf1.ust_dev == buf2.ust_dev) && (buf1.ust_ino == buf2.ust_ino))

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: arch/um/drivers/ubd_kern.c:1364:
+	if((buf1.ust_dev == buf2.ust_dev) && (buf1.ust_ino == buf2.ust_ino))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: arch/um/drivers/ubd_kern.c:1367:
+	printk("Backing file mismatch - \"%s\" requested,\n"

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#136: FILE: arch/um/drivers/ubd_kern.c:1370:
+	return(0);

ERROR:SPACING: space required before the open brace '{'
#146: FILE: arch/um/drivers/ubd_kern.c:1380:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: arch/um/drivers/ubd_kern.c:1380:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: arch/um/drivers/ubd_kern.c:1381:
+		printk("Failed to get modification time of backing file "

WARNING:SPLIT_STRING: quoted string split across lines
#148: FILE: arch/um/drivers/ubd_kern.c:1382:
+		printk("Failed to get modification time of backing file "
+		       "\"%s\", err = %d\n", file, -err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#149: FILE: arch/um/drivers/ubd_kern.c:1383:
+		return(err);

ERROR:SPACING: space required before the open brace '{'
#153: FILE: arch/um/drivers/ubd_kern.c:1387:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: arch/um/drivers/ubd_kern.c:1387:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: arch/um/drivers/ubd_kern.c:1388:
+		printk("Failed to get size of backing file \"%s\", "

WARNING:SPLIT_STRING: quoted string split across lines
#155: FILE: arch/um/drivers/ubd_kern.c:1389:
+		printk("Failed to get size of backing file \"%s\", "
+		       "err = %d\n", file, -err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#156: FILE: arch/um/drivers/ubd_kern.c:1390:
+		return(err);

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/um/drivers/ubd_kern.c:1393:
+  ^Iif(actual != size){$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: arch/um/drivers/ubd_kern.c:1393:
+  ^Iif(actual != size){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/um/drivers/ubd_kern.c:1393:
+  ^Iif(actual != size){$

ERROR:SPACING: space required before the open brace '{'
#159: FILE: arch/um/drivers/ubd_kern.c:1393:
+  	if(actual != size){

ERROR:SPACING: space required before the open parenthesis '('
#159: FILE: arch/um/drivers/ubd_kern.c:1393:
+  	if(actual != size){

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#161: FILE: arch/um/drivers/ubd_kern.c:1395:
+		 * the typecast.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: arch/um/drivers/ubd_kern.c:1396:
+		printk("Size mismatch (%llu vs %llu) of COW header vs backing "

CHECK:SPACING: No space is necessary after a cast
#163: FILE: arch/um/drivers/ubd_kern.c:1397:
+		       "file\n", (unsigned long long) size, actual);

WARNING:SPLIT_STRING: quoted string split across lines
#163: FILE: arch/um/drivers/ubd_kern.c:1397:
+		printk("Size mismatch (%llu vs %llu) of COW header vs backing "
+		       "file\n", (unsigned long long) size, actual);

ERROR:SPACING: space required before the open brace '{'
#166: FILE: arch/um/drivers/ubd_kern.c:1400:
+	if(modtime != mtime){

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: arch/um/drivers/ubd_kern.c:1400:
+	if(modtime != mtime){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: arch/um/drivers/ubd_kern.c:1401:
+		printk("mtime mismatch (%ld vs %ld) of COW header vs backing "

WARNING:SPLIT_STRING: quoted string split across lines
#168: FILE: arch/um/drivers/ubd_kern.c:1402:
+		printk("mtime mismatch (%ld vs %ld) of COW header vs backing "
+		       "file\n", mtime, modtime);

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: arch/um/drivers/ubd_kern.c:1413:
+	if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: arch/um/drivers/ubd_kern.c:1417:
+	if(err < 0)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#186: FILE: arch/um/drivers/ubd_kern.c:1420:
+	return(0);

ERROR:SPACING: space required before the open brace '{'
#201: FILE: arch/um/drivers/ubd_kern.c:1435:
+	if(fd < 0){

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: arch/um/drivers/ubd_kern.c:1435:
+	if(fd < 0){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'create_cow_out != NULL'
#202: FILE: arch/um/drivers/ubd_kern.c:1436:
+		if((fd == -ENOENT) && (create_cow_out != NULL))

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: arch/um/drivers/ubd_kern.c:1436:
+		if((fd == -ENOENT) && (create_cow_out != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "create_cow_out"
#202: FILE: arch/um/drivers/ubd_kern.c:1436:
+		if((fd == -ENOENT) && (create_cow_out != NULL))

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/um/drivers/ubd_kern.c:1438:
+                if(!openflags->w ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/um/drivers/ubd_kern.c:1438:
+                if(!openflags->w ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != EROFS'
#204: FILE: arch/um/drivers/ubd_kern.c:1438:
+                if(!openflags->w ||
+                   ((errno != EROFS) && (errno != EACCES))) return(-errno);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'errno != EACCES'
#204: FILE: arch/um/drivers/ubd_kern.c:1438:
+                if(!openflags->w ||
+                   ((errno != EROFS) && (errno != EACCES))) return(-errno);

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: arch/um/drivers/ubd_kern.c:1438:
+                if(!openflags->w ||

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#204: FILE: arch/um/drivers/ubd_kern.c:1438:
+                if(!openflags->w ||
+                   ((errno != EROFS) && (errno != EACCES))) return(-errno);

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/um/drivers/ubd_kern.c:1439:
+                   ((errno != EROFS) && (errno != EACCES))) return(-errno);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/um/drivers/ubd_kern.c:1439:
+                   ((errno != EROFS) && (errno != EACCES))) return(-errno);$

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: arch/um/drivers/ubd_kern.c:1442:
+		if(fd < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: arch/um/drivers/ubd_kern.c:1444:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/um/drivers/ubd_kern.c:1444:
+        }$

ERROR:SPACING: space required before the open brace '{'
#213: FILE: arch/um/drivers/ubd_kern.c:1447:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: arch/um/drivers/ubd_kern.c:1447:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: arch/um/drivers/ubd_kern.c:1448:
+		printk("Failed to lock '%s', err = %d\n", file, -err);

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: arch/um/drivers/ubd_kern.c:1452:
+	if(backing_file_out == NULL) return(fd);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#218: FILE: arch/um/drivers/ubd_kern.c:1452:
+	if(backing_file_out == NULL) return(fd);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!backing_file_out"
#218: FILE: arch/um/drivers/ubd_kern.c:1452:
+	if(backing_file_out == NULL) return(fd);

ERROR:SPACING: space required before the open brace '{'
#222: FILE: arch/um/drivers/ubd_kern.c:1456:
+	if(err && (*backing_file_out != NULL)){

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: arch/um/drivers/ubd_kern.c:1456:
+	if(err && (*backing_file_out != NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "backing_file_out"
#222: FILE: arch/um/drivers/ubd_kern.c:1456:
+	if(err && (*backing_file_out != NULL)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#223: FILE: arch/um/drivers/ubd_kern.c:1457:
+		printk("Failed to read COW header from COW file \"%s\", "

WARNING:SPLIT_STRING: quoted string split across lines
#224: FILE: arch/um/drivers/ubd_kern.c:1458:
+		printk("Failed to read COW header from COW file \"%s\", "
+		       "errno = %d\n", file, -err);

ERROR:SPACING: space required before the open parenthesis '('
#227: FILE: arch/um/drivers/ubd_kern.c:1461:
+	if(err) return(fd);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#227: FILE: arch/um/drivers/ubd_kern.c:1461:
+	if(err) return(fd);

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: arch/um/drivers/ubd_kern.c:1463:
+	if(backing_file_out == NULL) return(fd);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#229: FILE: arch/um/drivers/ubd_kern.c:1463:
+	if(backing_file_out == NULL) return(fd);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!backing_file_out"
#229: FILE: arch/um/drivers/ubd_kern.c:1463:
+	if(backing_file_out == NULL) return(fd);

ERROR:SPACING: space required before the open brace '{'
#233: FILE: arch/um/drivers/ubd_kern.c:1467:
+	if(!same && !backing_file_mismatch(*backing_file_out, size, mtime)){

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: arch/um/drivers/ubd_kern.c:1467:
+	if(!same && !backing_file_mismatch(*backing_file_out, size, mtime)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: arch/um/drivers/ubd_kern.c:1468:
+		printk("Switching backing file to '%s'\n", *backing_file_out);

ERROR:SPACING: space required before the open brace '{'
#237: FILE: arch/um/drivers/ubd_kern.c:1471:
+		if(err){

ERROR:SPACING: space required before the open parenthesis '('
#237: FILE: arch/um/drivers/ubd_kern.c:1471:
+		if(err){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: arch/um/drivers/ubd_kern.c:1472:
+			printk("Switch failed, errno = %d\n", -err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#239: FILE: arch/um/drivers/ubd_kern.c:1473:
+			return(err);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#242: FILE: arch/um/drivers/ubd_kern.c:1476:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#242: FILE: arch/um/drivers/ubd_kern.c:1476:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: arch/um/drivers/ubd_kern.c:1479:
+		if(err) goto out_close;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#245: FILE: arch/um/drivers/ubd_kern.c:1479:
+		if(err) goto out_close;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: arch/um/drivers/ubd_kern.c:1485:
+        return(fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/um/drivers/ubd_kern.c:1485:
+        return(fd);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#251: FILE: arch/um/drivers/ubd_kern.c:1485:
+        return(fd);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#254: FILE: arch/um/drivers/ubd_kern.c:1488:
+	return(err);

ERROR:SPACING: space required before the open brace '{'
#265: FILE: arch/um/drivers/ubd_kern.c:1499:
+	if(fd < 0){

ERROR:SPACING: space required before the open parenthesis '('
#265: FILE: arch/um/drivers/ubd_kern.c:1499:
+	if(fd < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: arch/um/drivers/ubd_kern.c:1501:
+		printk("Open of COW file '%s' failed, errno = %d\n", cow_file,

ERROR:SPACING: space required before the open parenthesis '('
#275: FILE: arch/um/drivers/ubd_kern.c:1509:
+	if(!err)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#285: FILE: arch/um/drivers/ubd_kern.c:1519:
+	return(os_read_file(fd, buffer, len));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#290: FILE: arch/um/drivers/ubd_kern.c:1524:
+	return(os_write_file(fd, buffer, len));

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: arch/um/drivers/ubd_kern.c:1531:
+	if(req->cow_offset == -1)

ERROR:SPACING: space required before the open brace '{'
#301: FILE: arch/um/drivers/ubd_kern.c:1535:
+	if(n < 0){

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: arch/um/drivers/ubd_kern.c:1535:
+	if(n < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#302: FILE: arch/um/drivers/ubd_kern.c:1536:
+		printk("do_io - bitmap lseek failed : err = %d\n", -n);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#303: FILE: arch/um/drivers/ubd_kern.c:1537:
+		return(1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/um/drivers/ubd_kern.c:1541:
+^I^I          sizeof(req->bitmap_words));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: arch/um/drivers/ubd_kern.c:1541:
+	n = os_write_file(req->fds[1], &req->bitmap_words,
+		          sizeof(req->bitmap_words));

ERROR:SPACING: space required before the open brace '{'
#308: FILE: arch/um/drivers/ubd_kern.c:1542:
+	if(n != sizeof(req->bitmap_words)){

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: arch/um/drivers/ubd_kern.c:1542:
+	if(n != sizeof(req->bitmap_words)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: arch/um/drivers/ubd_kern.c:1543:
+		printk("do_io - bitmap update failed, err = %d fd = %d\n", -n,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#311: FILE: arch/um/drivers/ubd_kern.c:1545:
+		return(1);

ERROR:SPACING: space required before the open brace '{'
#325: FILE: arch/um/drivers/ubd_kern.c:1559:
+	if(req->op == UBD_MMAP){

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: arch/um/drivers/ubd_kern.c:1559:
+	if(req->op == UBD_MMAP){

CHECK:SPACING: No space is necessary after a cast
#329: FILE: arch/um/drivers/ubd_kern.c:1563:
+		n = *((volatile int *) req->buffer);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#329: FILE: arch/um/drivers/ubd_kern.c:1563:
+		n = *((volatile int *) req->buffer);

CHECK:SPACING: No space is necessary after a cast
#337: FILE: arch/um/drivers/ubd_kern.c:1571:
+		bit = ubd_test_bit(start, (unsigned char *) &req->sector_mask);

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: arch/um/drivers/ubd_kern.c:1573:
+		while((end < nsectors) &&

ERROR:SPACING: space required before the open brace '{'
#350: FILE: arch/um/drivers/ubd_kern.c:1584:
+		if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#350: FILE: arch/um/drivers/ubd_kern.c:1584:
+		if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: arch/um/drivers/ubd_kern.c:1585:
+			printk("do_io - lseek failed : err = %d\n", -err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_io', this function's name, in a string
#351: FILE: arch/um/drivers/ubd_kern.c:1585:
+			printk("do_io - lseek failed : err = %d\n", -err);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open brace '{'
#355: FILE: arch/um/drivers/ubd_kern.c:1589:
+		if(req->op == UBD_READ){

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: arch/um/drivers/ubd_kern.c:1589:
+		if(req->op == UBD_READ){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: arch/um/drivers/ubd_kern.c:1596:
+					printk("do_io - read failed, err = %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_io', this function's name, in a string
#362: FILE: arch/um/drivers/ubd_kern.c:1596:
+					printk("do_io - read failed, err = %d "

WARNING:SPLIT_STRING: quoted string split across lines
#363: FILE: arch/um/drivers/ubd_kern.c:1597:
+					printk("do_io - read failed, err = %d "
+					       "fd = %d\n", -n, req->fds[bit]);

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: arch/um/drivers/ubd_kern.c:1601:
+			} while((n < len) && (n != 0));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#368: FILE: arch/um/drivers/ubd_kern.c:1602:
+			if (n < len) memset(&buf[n], 0, len - n);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#370: FILE: arch/um/drivers/ubd_kern.c:1604:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#370: FILE: arch/um/drivers/ubd_kern.c:1604:
+		else {

ERROR:SPACING: space required before the open brace '{'
#372: FILE: arch/um/drivers/ubd_kern.c:1606:
+			if(n != len){

ERROR:SPACING: space required before the open parenthesis '('
#372: FILE: arch/um/drivers/ubd_kern.c:1606:
+			if(n != len){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#373: FILE: arch/um/drivers/ubd_kern.c:1607:
+				printk("do_io - write failed err = %d "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_io', this function's name, in a string
#373: FILE: arch/um/drivers/ubd_kern.c:1607:
+				printk("do_io - write failed err = %d "

WARNING:SPLIT_STRING: quoted string split across lines
#374: FILE: arch/um/drivers/ubd_kern.c:1608:
+				printk("do_io - write failed err = %d "
+				       "fd = %d\n", -n, req->fds[bit]);

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: arch/um/drivers/ubd_kern.c:1615:
+	} while(start < nsectors);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#392: FILE: arch/um/drivers/ubd_kern.c:1626:
+int io_count = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: space required before the open brace '{'
#400: FILE: arch/um/drivers/ubd_kern.c:1634:
+	while(1){

ERROR:SPACING: space required before the open parenthesis '('
#400: FILE: arch/um/drivers/ubd_kern.c:1634:
+	while(1){

ERROR:SPACING: space required before the open brace '{'
#402: FILE: arch/um/drivers/ubd_kern.c:1636:
+		if(n != sizeof(req)){

ERROR:SPACING: space required before the open parenthesis '('
#402: FILE: arch/um/drivers/ubd_kern.c:1636:
+		if(n != sizeof(req)){

ERROR:SPACING: space required before the open parenthesis '('
#403: FILE: arch/um/drivers/ubd_kern.c:1637:
+			if(n < 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#404: FILE: arch/um/drivers/ubd_kern.c:1638:
+				printk("io_thread - read failed, fd = %d, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'io_thread', this function's name, in a string
#404: FILE: arch/um/drivers/ubd_kern.c:1638:
+				printk("io_thread - read failed, fd = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#405: FILE: arch/um/drivers/ubd_kern.c:1639:
+				printk("io_thread - read failed, fd = %d, "
+				       "err = %d\n", kernel_fd, -n);

CHECK:BRACES: Unbalanced braces around else statement
#406: FILE: arch/um/drivers/ubd_kern.c:1640:
+			else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#407: FILE: arch/um/drivers/ubd_kern.c:1641:
+				printk("io_thread - short read, fd = %d, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'io_thread', this function's name, in a string
#407: FILE: arch/um/drivers/ubd_kern.c:1641:
+				printk("io_thread - short read, fd = %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#408: FILE: arch/um/drivers/ubd_kern.c:1642:
+				printk("io_thread - short read, fd = %d, "
+				       "length = %d\n", kernel_fd, n);

ERROR:SPACING: space required before the open parenthesis '('
#415: FILE: arch/um/drivers/ubd_kern.c:1649:
+		if(n != sizeof(req))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: arch/um/drivers/ubd_kern.c:1650:
+			printk("io_thread - write failed, fd = %d, err = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'io_thread', this function's name, in a string
#416: FILE: arch/um/drivers/ubd_kern.c:1650:
+			printk("io_thread - write failed, fd = %d, err = %d\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#779: FILE: arch/um/include/ubd_user.h:10:
+extern void ignore_sigwinch_sig(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: arch/um/include/ubd_user.h:12:
+extern int io_thread(void *arg);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 89 errors, 50 warnings, 20 checks, 755 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
