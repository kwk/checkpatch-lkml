WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
looking for memory coherency problems and none has shown up so far.  I've also 

WARNING:PATCH_PREFIX: patch prefix 'Documentation' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: scsi/53c700.c:55:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: scsi/53c700.c:64:
+ * Added support for the 53c710 chip (in 53c700 emulation mode only---no $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: scsi/53c700.c:127:
+ * complaining */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <pScript>
#140: FILE: scsi/53c700.c:220:
+	dma_addr_t pScript, pSlots;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pSlots>
#140: FILE: scsi/53c700.c:220:
+	dma_addr_t pScript, pSlots;

WARNING:TYPO_SPELLING: 'necessay' may be misspelled - perhaps 'necessary'?
#147: FILE: scsi/53c700.c:227:
+	 * necessay, but may be useful in architectures which can
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: scsi/53c700.c:229:
+	 * work */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#165: FILE: scsi/53c700.c:262:
+	 * support it */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hostdata->slots)...) over kmalloc(sizeof(struct NCR_700_command_slot)...)
#166: FILE: scsi/53c700.c:263:
+	hostdata->slots = kmalloc(sizeof(struct NCR_700_command_slot)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: scsi/53c700.c:271:
+	if(hostdata->slots == NULL || hostdata->msgin == NULL

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hostdata->slots"
#174: FILE: scsi/53c700.c:271:
+	if(hostdata->slots == NULL || hostdata->msgin == NULL

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hostdata->msgin"
#174: FILE: scsi/53c700.c:271:
+	if(hostdata->slots == NULL || hostdata->msgin == NULL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#175: FILE: scsi/53c700.c:272:
+	if(hostdata->slots == NULL || hostdata->msgin == NULL
+	   || hostdata->msgout == NULL || hostdata->status==NULL) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#175: FILE: scsi/53c700.c:272:
+	   || hostdata->msgout == NULL || hostdata->status==NULL) {
 	                                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hostdata->msgout"
#175: FILE: scsi/53c700.c:272:
+	   || hostdata->msgout == NULL || hostdata->status==NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hostdata->status"
#175: FILE: scsi/53c700.c:272:
+	   || hostdata->msgout == NULL || hostdata->status==NULL) {

WARNING:TYPO_SPELLING: 'detatching' may be misspelled - perhaps 'detaching'?
#176: FILE: scsi/53c700.c:273:
+		printk(KERN_ERR "53c700: Failed to allocate command slots or message buffers, detatching\n");
 		                                                                              ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#176: FILE: scsi/53c700.c:273:
+		printk(KERN_ERR "53c700: Failed to allocate command slots or message buffers, detatching\n");

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#186: FILE: scsi/53c700.c:282:
+		hostdata->slots[j].pSG = (struct NCR_700_SG_List *)((unsigned long)(pSlots + offset));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <pSG>
#186: FILE: scsi/53c700.c:282:
+		hostdata->slots[j].pSG = (struct NCR_700_SG_List *)((unsigned long)(pSlots + offset));

CHECK:CAMELCASE: Avoid CamelCase: <NCR_700_SG_List>
#186: FILE: scsi/53c700.c:282:
+		hostdata->slots[j].pSG = (struct NCR_700_SG_List *)((unsigned long)(pSlots + offset));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: scsi/53c700.c:298:
+^I/* now patch up fixed addresses. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#208: FILE: scsi/53c700.c:300:
+	 * for these in the future */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: scsi/53c700.c:321:
+^Iif(hostdata->chip710) $

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: scsi/53c700.c:321:
+	if(hostdata->chip710) 

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#229: FILE: scsi/53c700.c:322:
+		hostdata->rev = (NCR_700_readb(host, CTEST8_REG)>>4) & 0x0f;
 		                                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#231: FILE: scsi/53c700.c:324:
+		hostdata->rev = (NCR_700_readb(host, CTEST7_REG)>>4) & 0x0f;
 		                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: scsi/53c700.c:331:
+^I       hostdata->chip710 ? "53c710" : $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#254: FILE: scsi/53c700.c:348:
+	 * the scsi_unregister was called */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: scsi/53c700.c:377:
+^Istruct NCR_700_Host_Parameters *hostdata = $

CHECK:CAMELCASE: Avoid CamelCase: <NCR_700_Host_Parameters>
#281: FILE: scsi/53c700.c:377:
+	struct NCR_700_Host_Parameters *hostdata = 

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: scsi/53c700.c:382:
+	if(hostdata->chip710) {

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: scsi/53c700.c:390:
+	if(hostdata->fast)

ERROR:SPACING: space required before the open parenthesis '('
#307: FILE: scsi/53c700.c:412:
+	if(count)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: scsi/53c700.c:413:
+		printk("RESIDUAL IS %d (ddir %d)\n", count, ddir);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#326: FILE: scsi/53c700.c:605:
+	 * period.  It is set in NCR_700_chip_setup() */

ERROR:SPACING: space required before the open parenthesis '('
#327: FILE: scsi/53c700.c:606:
+	if(period < NCR_700_SDTR_msg[3]) {

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#328: FILE: scsi/53c700.c:607:
+		printk(KERN_WARNING "53c700: Period %dns is less than this chip's minimum, setting to %d\n", period*4, NCR_700_SDTR_msg[3]*4);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#328: FILE: scsi/53c700.c:607:
+		printk(KERN_WARNING "53c700: Period %dns is less than this chip's minimum, setting to %d\n", period*4, NCR_700_SDTR_msg[3]*4);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#328: FILE: scsi/53c700.c:607:
+		printk(KERN_WARNING "53c700: Period %dns is less than this chip's minimum, setting to %d\n", period*4, NCR_700_SDTR_msg[3]*4);
 		                                                                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#328: FILE: scsi/53c700.c:607:
+		printk(KERN_WARNING "53c700: Period %dns is less than this chip's minimum, setting to %d\n", period*4, NCR_700_SDTR_msg[3]*4);
 		                                                                                                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#336: FILE: scsi/53c700.c:611:
+	if(offset > max_offset) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#337: FILE: scsi/53c700.c:612:
+		printk(KERN_WARNING "53c700: Offset %d exceeds chip maximum, setting to %d\n",

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#342: FILE: scsi/53c700.c:616:
+	if(XFERP < min_xferp) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: scsi/53c700.c:616:
+	if(XFERP < min_xferp) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: scsi/53c700.c:638:
+			printk(" ORIGINAL CMD %p RETURNED %d, new return is %d sense is\n",

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: scsi/53c700.c:646:
+		if(SCp->sc_data_direction != SCSI_DATA_NONE &&

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#365: FILE: scsi/53c700.c:646:
+		if(SCp->sc_data_direction != SCSI_DATA_NONE &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#368: FILE: scsi/53c700.c:649:
+			int pci_direction = scsi_to_pci_dma_dir(SCp->sc_data_direction);
+			if(SCp->use_sg) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#368: FILE: scsi/53c700.c:649:
+			if(SCp->use_sg) {

ERROR:SPACING: space required before the open parenthesis '('
#390: FILE: scsi/53c700.c:695:
+	if(hostdata->chip710) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: scsi/53c700.c:703:
+^I^INCR_700_writeb(burst_disable | (hostdata->differential ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: scsi/53c700.c:711:
+^I^INCR_700_writeb(hostdata->differential ? $

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: scsi/53c700.c:713:
+		if(hostdata->fast) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: scsi/53c700.c:715:
+^I^I^INCR_700_writeb(LAST_DIS_ENBL | ENABLE_ACTIVE_NEGATION $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#476: FILE: scsi/53c700.c:771:
+	 * setting of the SXFER register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#477: FILE: scsi/53c700.c:772:
+	min_period = 1000*(4+min_xferp)/(4*hostdata->sync_clock);
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#477: FILE: scsi/53c700.c:772:
+	min_period = 1000*(4+min_xferp)/(4*hostdata->sync_clock);
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#477: FILE: scsi/53c700.c:772:
+	min_period = 1000*(4+min_xferp)/(4*hostdata->sync_clock);
 	                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#477: FILE: scsi/53c700.c:772:
+	min_period = 1000*(4+min_xferp)/(4*hostdata->sync_clock);
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#478: FILE: scsi/53c700.c:773:
+	if(min_period > NCR_700_MIN_PERIOD) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#478: FILE: scsi/53c700.c:773:
+	if(min_period > NCR_700_MIN_PERIOD) {
+		NCR_700_SDTR_msg[3] = min_period;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: scsi/53c700.c:776:
+	if(hostdata->chip710)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: scsi/53c700.c:783:
+^Istruct NCR_700_Host_Parameters *hostdata = $

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: scsi/53c700.c:785:
+	if(hostdata->chip710) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#495: FILE: scsi/53c700.c:787:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#501: FILE: scsi/53c700.c:792:
+		udelay(100);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: scsi/53c700.c:793:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#596: FILE: scsi/53c700.c:990:
+		if(status_byte(hostdata->status[0]) == CHECK_CONDITION ||

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#612: FILE: scsi/53c700.c:1002:
+				printk("  cmd %p has status %d, requesting sense\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#653: FILE: scsi/53c700.c:1044:
+			//	/* Piggy back the tag queueing support
+			//	 * on this command */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#653: FILE: scsi/53c700.c:1044:
+			//	 * on this command */

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#659: FILE: scsi/53c700.c:1050:
+			//		printk(KERN_INFO "scsi%d: (%d:%d) Enabling Tag Command Queuing\n", host->host_no, pun, lun);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#661: FILE: scsi/53c700.c:1052:
+			//		NCR_700_set_flag(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING);

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#663: FILE: scsi/53c700.c:1054:
+			//		NCR_700_clear_flag(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#698: FILE: scsi/53c700.c:1157:
+			 * already have been flushed from the cache */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#702: FILE: scsi/53c700.c:1161:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#713: FILE: scsi/53c700.c:1180:
+		 * than a debug */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#714: FILE: scsi/53c700.c:1181:
+		printk(KERN_INFO "scsi%d: (%d:%d) RESELECTION DURING SELECTION, dsp=%08x[%04x] state=%d, count=%d\n",

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#715: FILE: scsi/53c700.c:1182:
+		       host->host_no, reselection_id, lun, dsp, dsp - hostdata->pScript, hostdata->state, hostdata->command_slot_count);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#720: FILE: scsi/53c700.c:1186:
+			__u32 SG = (__u32)bS_to_cpu(hostdata->script[A_SGScriptStartAddress_used[0]]);

CHECK:CAMELCASE: Avoid CamelCase: <A_SGScriptStartAddress_used>
#720: FILE: scsi/53c700.c:1186:
+			__u32 SG = (__u32)bS_to_cpu(hostdata->script[A_SGScriptStartAddress_used[0]]);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#726: FILE: scsi/53c700.c:1190:
+				if(SG >= to32bit(&hostdata->slots[i].pSG[0])

ERROR:SPACING: space required before the open parenthesis '('
#726: FILE: scsi/53c700.c:1190:
+				if(SG >= to32bit(&hostdata->slots[i].pSG[0])

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#727: FILE: scsi/53c700.c:1191:
+				if(SG >= to32bit(&hostdata->slots[i].pSG[0])
+				   && SG <= to32bit(&hostdata->slots[i].pSG[NCR_700_SG_SEGMENTS]))

WARNING:LONG_LINE: line length of 211 exceeds 100 columns
#731: FILE: scsi/53c700.c:1194:
+			printk(KERN_INFO "IDENTIFIED SG segment as being %08x in slot %p, cmd %p, slot->resume_offset=%08x\n", SG, &hostdata->slots[i], hostdata->slots[i].cmnd, hostdata->slots[i].resume_offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#731: FILE: scsi/53c700.c:1194:
+			printk(KERN_INFO "IDENTIFIED SG segment as being %08x in slot %p, cmd %p, slot->resume_offset=%08x\n", SG, &hostdata->slots[i], hostdata->slots[i].cmnd, hostdata->slots[i].resume_offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#752: FILE: scsi/53c700.c:1252:
+		printk(KERN_NOTICE "scsi%d (%d:%d) DEBUG INTERRUPT %d AT %08x[%04x], continuing\n",

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#783: FILE: scsi/53c700.c:1351:
+NCR_700_clear_fifo(struct Scsi_Host *host) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#785: FILE: scsi/53c700.c:1353:
+	const struct NCR_700_Host_Parameters *hostdata
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: space required before the open parenthesis '('
#786: FILE: scsi/53c700.c:1354:
+	if(hostdata->chip710) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#786: FILE: scsi/53c700.c:1354:
+	if(hostdata->chip710) {
[...]
+	} else {
[...]

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#796: FILE: scsi/53c700.c:1364:
+	const struct NCR_700_Host_Parameters *hostdata
+		= (struct NCR_700_Host_Parameters *)host->hostdata[0];

ERROR:SPACING: space required before the open parenthesis '('
#797: FILE: scsi/53c700.c:1365:
+	if(hostdata->chip710) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#799: FILE: scsi/53c700.c:1367:
+		udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#803: FILE: scsi/53c700.c:1371:
+		udelay(10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#808: FILE: scsi/53c700.c:1376:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#822: FILE: scsi/53c700.c:1418:
+	 * */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#875: FILE: scsi/53c700.c:1536:
+			printk(KERN_ERR "scsi%d: Bus Reset detected, executing command %p, slot %p, dsp %08x[%04x]\n",

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#876: FILE: scsi/53c700.c:1537:
+			       host->host_no, SCp, SCp == NULL ? NULL : SCp->host_scribble, dsp, dsp - hostdata->pScript);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!SCp"
#876: FILE: scsi/53c700.c:1537:
+			       host->host_no, SCp, SCp == NULL ? NULL : SCp->host_scribble, dsp, dsp - hostdata->pScript);

ERROR:SPACING: space required before the open parenthesis '('
#886: FILE: scsi/53c700.c:1590:
+			} else if(dsp >= to32bit(&slot->pSG[0].ins) &&

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#890: FILE: scsi/53c700.c:1593:
+				int SGcount = (dsp - to32bit(&slot->pSG[0].ins))/sizeof(struct NCR_700_SG_List);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#890: FILE: scsi/53c700.c:1593:
+				int SGcount = (dsp - to32bit(&slot->pSG[0].ins))/sizeof(struct NCR_700_SG_List);
 				                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <SGcount>
#890: FILE: scsi/53c700.c:1593:
+				int SGcount = (dsp - to32bit(&slot->pSG[0].ins))/sizeof(struct NCR_700_SG_List);

ERROR:SPACING: space required before the open parenthesis '('
#904: FILE: scsi/53c700.c:1624:
+					if(pAddr != naddr) {

CHECK:CAMELCASE: Avoid CamelCase: <pAddr>
#904: FILE: scsi/53c700.c:1624:
+					if(pAddr != naddr) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#904: FILE: scsi/53c700.c:1624:
+					if(pAddr != naddr) {
+						printk("scsi%d (%d:%d) transfer mismatch pAddr=%lx, naddr=%lx, data_transfer=%d, residual=%d\n", host->host_no, pun, lun, (unsigned long)pAddr, (unsigned long)naddr, data_transfer, residual);
+					}

WARNING:LONG_LINE: line length of 239 exceeds 100 columns
#905: FILE: scsi/53c700.c:1625:
+						printk("scsi%d (%d:%d) transfer mismatch pAddr=%lx, naddr=%lx, data_transfer=%d, residual=%d\n", host->host_no, pun, lun, (unsigned long)pAddr, (unsigned long)naddr, data_transfer, residual);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#905: FILE: scsi/53c700.c:1625:
+						printk("scsi%d (%d:%d) transfer mismatch pAddr=%lx, naddr=%lx, data_transfer=%d, residual=%d\n", host->host_no, pun, lun, (unsigned long)pAddr, (unsigned long)naddr, data_transfer, residual);

ERROR:SPACING: space required before the open parenthesis '('
#924: FILE: scsi/53c700.c:1652:
+		} else if(sstat0 & PARITY_ERROR) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#925: FILE: scsi/53c700.c:1653:
+			printk(KERN_ERR "scsi%d: (%d:%d) PARITY ERROR\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#927: FILE: scsi/53c700.c:1655:
+			NCR_700_scsi_done(hostdata, SCp, DID_ERROR<<16);
 			                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#934: FILE: scsi/53c700.c:1661:
+			printk(KERN_ERR "scsi%d: (%d:%d) Illegal Instruction detected at 0x%08x[0x%x]!!!\n"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#948: FILE: scsi/53c700.c:1702:
+			printk(KERN_ERR "scsi%d: Driver error: resume at 0x%08x [0x%04x] with non busy host!\n",

ERROR:SPACING: space required before the open parenthesis '('
#971: FILE: scsi/53c700.c:1826:
+	if(SCp->device->tagged_supported && !SCp->device->tagged_queue

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#972: FILE: scsi/53c700.c:1827:
+	if(SCp->device->tagged_supported && !SCp->device->tagged_queue
+	   && (hostdata->tag_negotiated &(1<<SCp->target)) == 0

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#972: FILE: scsi/53c700.c:1827:
+	   && (hostdata->tag_negotiated &(1<<SCp->target)) == 0
 	                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#972: FILE: scsi/53c700.c:1827:
+	   && (hostdata->tag_negotiated &(1<<SCp->target)) == 0
 	                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#973: FILE: scsi/53c700.c:1828:
+	   && (hostdata->tag_negotiated &(1<<SCp->target)) == 0
+	   && NCR_700_is_flag_clear(SCp->device, NCR_700_DEV_BEGIN_TAG_QUEUEING)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#979: FILE: scsi/53c700.c:1834:
+		 * of potential reselection issues */

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#980: FILE: scsi/53c700.c:1835:
+		printk(KERN_INFO "scsi%d: (%d:%d) Enabling Tag Command Queuing\n", SCp->device->host->host_no, SCp->target, SCp->lun);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#980: FILE: scsi/53c700.c:1835:
+		printk(KERN_INFO "scsi%d: (%d:%d) Enabling Tag Command Queuing\n", SCp->device->host->host_no, SCp->target, SCp->lun);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#981: FILE: scsi/53c700.c:1836:
+		hostdata->tag_negotiated |= (1<<SCp->target);
 		                              ^

CHECK:CAMELCASE: Avoid CamelCase: <vPtr>
#1033: FILE: scsi/53c700.c:1935:
+		dma_addr_t vPtr = 0;

ERROR:SPACING: space required before the open parenthesis '('
#1036: FILE: scsi/53c700.c:1938:
+		if(SCp->use_sg) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: scsi/53c700.c:1943:
+^I^I^I^I^I      SCp->request_buffer, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1048: FILE: scsi/53c700.c:1950:
+^I^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1053: FILE: scsi/53c700.c:1952:
+		for(i = 0; i < sg_count; i++) {

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1092: FILE: scsi/53c700.h:40:
+#error "Config.in must define either CONFIG_53C700_IO_MAPPED or CONFIG_53C700_MEM_MAPPED to use this scsi core."

CHECK:CAMELCASE: Avoid CamelCase: <SDp>
#1102: FILE: scsi/53c700.h:93:
+	((unsigned long)SDp->hostdata) &= 0xffffff00;

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1122: FILE: scsi/53c700.h:109:
+	return ((((unsigned long)SDp->hostdata) & 0xff00)>>8);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1154: FILE: scsi/53c700.h:165:
+	struct NCR_700_SG_List	SG[NCR_700_SG_SEGMENTS+1];
 	                      	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1168: FILE: scsi/53c700.h:179:
+	 * for later unmapping in the done routine */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1284: FILE: scsi/53c700.h:401:
+ * empirically it seems to be 8 also */

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:SPACING: space required before the open parenthesis '('
#1444: FILE: scsi/lasi700.c:145:
+	if(dev->id.sversion == LASI_700_SVERSION) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1444: FILE: scsi/lasi700.c:145:
+	if(dev->id.sversion == LASI_700_SVERSION) {
[...]
+	} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1451: FILE: scsi/lasi700.c:151:
+		printk(KERN_ERR "%s: Failed to allocate host data\n",

ERROR:SPACING: space required before the open parenthesis '('
#1458: FILE: scsi/lasi700.c:156:
+	if(request_mem_region(base, 64, driver_name) == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!request_mem_region"
#1458: FILE: scsi/lasi700.c:156:
+	if(request_mem_region(base, 64, driver_name) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1459: FILE: scsi/lasi700.c:157:
+		printk(KERN_ERR "%s: Failed to claim memory region\n",

ERROR:SPACING: space required before the open parenthesis '('
#1468: FILE: scsi/lasi700.c:164:
+	if(dev->id.sversion == LASI_700_SVERSION) {

ERROR:SPACING: space required before the open parenthesis '('
#1485: FILE: scsi/lasi700.c:179:
+	if(request_irq(irq, NCR_700_intr, SA_SHIRQ, driver_name, host)) {

WARNING:TYPO_SPELLING: 'detatching' may be misspelled - perhaps 'detaching'?
#1486: FILE: scsi/lasi700.c:180:
+		printk(KERN_ERR "%s: irq problem, detatching\n",
 		                                  ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1486: FILE: scsi/lasi700.c:180:
+		printk(KERN_ERR "%s: irq problem, detatching\n",

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:INDENTED_LABEL: labels should not be indented
#1506: FILE: scsi/lasi700.h:45:
+	hw_type:	HPHW_FIO,		\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1507: FILE: scsi/lasi700.h:46:
+	sversion:	LASI_700_SVERSION,	\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1507: FILE: scsi/lasi700.h:46:
+	sversion:	LASI_700_SVERSION,	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1508: FILE: scsi/lasi700.h:47:
+	hversion:	HVERSION_ANY_ID,	\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1508: FILE: scsi/lasi700.h:47:
+	hversion:	HVERSION_ANY_ID,	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1509: FILE: scsi/lasi700.h:48:
+	hversion_rev:	HVERSION_REV_ANY_ID,	\
 	            ^

WARNING:INDENTED_LABEL: labels should not be indented
#1509: FILE: scsi/lasi700.h:48:
+	hversion_rev:	HVERSION_REV_ANY_ID,	\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1515: FILE: scsi/lasi700.h:53:
+	sversion:	LASI_710_SVERSION,	\
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1515: FILE: scsi/lasi700.h:53:
+	sversion:	LASI_710_SVERSION,	\

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 70 warnings, 46 checks, 1346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000511980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
