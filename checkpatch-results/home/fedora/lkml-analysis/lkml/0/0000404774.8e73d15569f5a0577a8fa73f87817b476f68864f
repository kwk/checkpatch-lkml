WARNING:TYPO_SPELLING: 'dependend' may be misspelled - perhaps 'dependent'?
#23: 
- x86 per-CPU loops_per_jiffy is not dependend of TSC, so move it to
                                     ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruN linux-original/arch/i386/kernel/cpu/common.c linux/arch/i386/kernel/cpu/common.c

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#43: FILE: arch/i386/kernel/cpu/common.c:70:
+static unsigned long loops_per_jiffy_ref = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#44: FILE: arch/i386/kernel/cpu/common.c:71:
+static unsigned int  ref_freq = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#48: FILE: arch/i386/kernel/cpu/common.c:75:
+loops_per_jiffy_cpufreq_notifier(struct notifier_block *nb, unsigned long val,
+				       void *data)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#60: FILE: arch/i386/kernel/cpu/common.c:87:
+		        cpu_data[freq->cpu].loops_per_jiffy = cpufreq_scale(loops_per_jiffy_ref, ref_freq, freq->new);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: arch/i386/kernel/cpu/common.c:87:
+^I^I        cpu_data[freq->cpu].loops_per_jiffy = cpufreq_scale(loops_per_jiffy_ref, ref_freq, freq->new);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#64: FILE: arch/i386/kernel/cpu/common.c:91:
+		        cpu_data[freq->cpu].loops_per_jiffy = cpufreq_scale(loops_per_jiffy_ref, ref_freq, freq->new);

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: arch/i386/kernel/cpu/common.c:91:
+^I^I        cpu_data[freq->cpu].loops_per_jiffy = cpufreq_scale(loops_per_jiffy_ref, ref_freq, freq->new);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#76: FILE: arch/i386/kernel/cpu/common.c:103:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#89: FILE: arch/i386/kernel/cpu/common.c:418:
+	if (c == &boot_cpu_data) {
+			cpufreq_register_notifier(&loops_per_jiffy_cpufreq_notifier_block, CPUFREQ_TRANSITION_NOTIFIER);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#89: FILE: arch/i386/kernel/cpu/common.c:418:
+	if (c == &boot_cpu_data) {
+			cpufreq_register_notifier(&loops_per_jiffy_cpufreq_notifier_block, CPUFREQ_TRANSITION_NOTIFIER);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#90: FILE: arch/i386/kernel/cpu/common.c:419:
+			cpufreq_register_notifier(&loops_per_jiffy_cpufreq_notifier_block, CPUFREQ_TRANSITION_NOTIFIER);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#104: FILE: arch/i386/kernel/timers/timer_tsc.c:189:
+static unsigned long fast_gettimeoffset_ref = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#105: FILE: arch/i386/kernel/timers/timer_tsc.c:190:
+static unsigned long cpu_khz_ref = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#106: FILE: arch/i386/kernel/timers/timer_tsc.c:191:
+static unsigned int  ref_freq = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/i386/kernel/timers/timer_tsc.c:195:
+tsc_cpufreq_notifier(struct notifier_block *nb, unsigned long val,
 		       void *data)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#133: FILE: arch/i386/kernel/timers/timer_tsc.c:211:
+		        fast_gettimeoffset_quotient = cpufreq_scale(fast_gettimeoffset_ref, freq->new, ref_freq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/i386/kernel/timers/timer_tsc.c:211:
+^I^I        fast_gettimeoffset_quotient = cpufreq_scale(fast_gettimeoffset_ref, freq->new, ref_freq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/i386/kernel/timers/timer_tsc.c:212:
+^I^I        cpu_khz = cpufreq_scale(cpu_khz_ref, ref_freq, freq->new);$

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#147: FILE: arch/i386/kernel/timers/timer_tsc.c:217:
+		        fast_gettimeoffset_quotient = cpufreq_scale(fast_gettimeoffset_ref, freq->new, ref_freq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/i386/kernel/timers/timer_tsc.c:217:
+^I^I        fast_gettimeoffset_quotient = cpufreq_scale(fast_gettimeoffset_ref, freq->new, ref_freq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/i386/kernel/timers/timer_tsc.c:218:
+^I^I        cpu_khz = cpufreq_scale(cpu_khz_ref, ref_freq, freq->new);$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#173: FILE: arch/i386/kernel/timers/timer_tsc.c:282:
+			cpufreq_register_notifier(&tsc_cpufreq_notifier_block, CPUFREQ_TRANSITION_NOTIFIER);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: kernel/cpufreq.c:940:
+ * systems as each CPU might be scaled differently. So, use the arch $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#192: FILE: kernel/cpufreq.c:944:
+static unsigned long l_p_j_ref = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#193: FILE: kernel/cpufreq.c:945:
+static unsigned int  l_p_j_ref_freq = 0;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404774.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 10 warnings, 3 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404774.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
