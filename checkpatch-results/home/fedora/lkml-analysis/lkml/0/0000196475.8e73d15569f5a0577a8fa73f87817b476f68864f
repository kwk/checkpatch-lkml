CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: arch/ia64/mm/hugetlbpage.c:190:
+void hugetlb_free_pgd_range(struct mmu_gather **tlb,
+			unsigned long addr, unsigned long end,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: include/asm-ia64/page.h:142:
+	  REGION_NUMBER((addr)+(len)-1) == REGION_HPAGE)
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#129: FILE: include/asm-ia64/page.h:142:
+	  REGION_NUMBER((addr)+(len)-1) == REGION_HPAGE)
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: include/asm-ia64/pgtable.h:467:
+void hugetlb_free_pgd_range(struct mmu_gather **tlb, unsigned long addr,
+		unsigned long end, unsigned long floor, unsigned long ceiling);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#163: FILE: include/asm-ppc64/pgtable.h:503:
+						do { } while (0)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#175: FILE: include/linux/hugetlb.h:41:
+						do { } while (0)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#185: FILE: include/linux/hugetlb.h:77:
+						do { } while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: include/linux/mm.h:590:
+void free_pgd_range(struct mmu_gather **tlb, unsigned long addr,
+		unsigned long end, unsigned long floor, unsigned long ceiling);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: include/linux/mm.h:592:
+void free_pgtables(struct mmu_gather **tlb, struct vm_area_struct *start_vma,
 		unsigned long floor, unsigned long ceiling);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: mm/memory.c:194:
+void free_pgd_range(struct mmu_gather **tlb,
 			unsigned long addr, unsigned long end,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: mm/memory.c:265:
+			hugetlb_free_pgd_range(tlb, addr, vma->vm_end,
 				floor, next? next->vm_start: ceiling);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#252: FILE: mm/memory.c:271:
+			while (next && next->vm_start <= vma->vm_end + PMD_SIZE
+			&& !is_hugepage_only_range(next->vm_start, HPAGE_SIZE)){

ERROR:SPACING: space required before the open brace '{'
#252: FILE: mm/memory.c:271:
+			&& !is_hugepage_only_range(next->vm_start, HPAGE_SIZE)){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: mm/memory.c:276:
+			free_pgd_range(tlb, addr, vma->vm_end,
+				floor, next? next->vm_start: ceiling);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#257: FILE: mm/memory.c:276:
+				floor, next? next->vm_start: ceiling);
 				           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#257: FILE: mm/memory.c:276:
+				floor, next? next->vm_start: ceiling);
 				                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196475.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 3 warnings, 10 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000196475.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
