ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: arch/ppc64/Kconfig:114:
+^Ibool $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: arch/ppc64/kernel/u3_iommu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#505: FILE: arch/ppc64/kernel/u3_iommu.c:2:
+ * arch/ppc64/kernel/u3_iommu.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: arch/ppc64/kernel/u3_iommu.c:12:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: arch/ppc64/kernel/u3_iommu.c:17:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: arch/ppc64/kernel/u3_iommu.c:22:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#527: FILE: arch/ppc64/kernel/u3_iommu.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#528: FILE: arch/ppc64/kernel/u3_iommu.c:25:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#541: FILE: arch/ppc64/kernel/u3_iommu.c:38:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#548: FILE: arch/ppc64/kernel/u3_iommu.c:45:
+#include <asm/cacheflush.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#553: FILE: arch/ppc64/kernel/u3_iommu.c:50:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#564: FILE: arch/ppc64/kernel/u3_iommu.c:61:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: arch/ppc64/kernel/u3_iommu.c:87:
+static unsigned int *dart; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: arch/ppc64/kernel/u3_iommu.c:110:
+^I */ $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#618: FILE: arch/ppc64/kernel/u3_iommu.c:115:
+	reg = in_be32((unsigned int *)dart+DARTCNTL);
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#620: FILE: arch/ppc64/kernel/u3_iommu.c:117:
+	out_be32((unsigned int *)dart+DARTCNTL, reg);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#623: FILE: arch/ppc64/kernel/u3_iommu.c:120:
+	while ((in_be32((unsigned int *)dart+DARTCNTL) & DARTCNTL_FLUSHTLB) &&
 	                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: arch/ppc64/kernel/u3_iommu.c:121:
+	while ((in_be32((unsigned int *)dart+DARTCNTL) & DARTCNTL_FLUSHTLB) &&
+		l < (1L<<limit)) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#624: FILE: arch/ppc64/kernel/u3_iommu.c:121:
+		l < (1L<<limit)) {
 		       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#627: FILE: arch/ppc64/kernel/u3_iommu.c:124:
+	if (l == (1L<<limit)) {
 	            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: arch/ppc64/kernel/u3_iommu.c:127:
+^I^I        reg = in_be32((unsigned int *)dart+DARTCNTL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#630: FILE: arch/ppc64/kernel/u3_iommu.c:127:
+		        reg = in_be32((unsigned int *)dart+DARTCNTL);
 		                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: arch/ppc64/kernel/u3_iommu.c:128:
+^I^I        reg &= ~DARTCNTL_FLUSHTLB;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: arch/ppc64/kernel/u3_iommu.c:129:
+^I^I        out_be32((unsigned int *)dart+DARTCNTL, reg);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#632: FILE: arch/ppc64/kernel/u3_iommu.c:129:
+		        out_be32((unsigned int *)dart+DARTCNTL, reg);
 		                                     ^

CHECK:BRACES: Unbalanced braces around else statement
#634: FILE: arch/ppc64/kernel/u3_iommu.c:131:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#636: FILE: arch/ppc64/kernel/u3_iommu.c:133:
+			panic("U3-DART: TLB did not flush after waiting a long "
+			      "time. Buggy U3 ?");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: arch/ppc64/kernel/u3_iommu.c:144:
+static void dart_build(struct iommu_table *tbl, long index, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#656: FILE: arch/ppc64/kernel/u3_iommu.c:153:
+	dp = ((unsigned int*)tbl->it_base) + index;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: arch/ppc64/kernel/u3_iommu.c:154:
+^I$

WARNING:TYPO_SPELLING: 'contigous' may be misspelled - perhaps 'contiguous'?
#658: FILE: arch/ppc64/kernel/u3_iommu.c:155:
+	/* On U3, all memory is contigous, so we can move this
 	                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#673: FILE: arch/ppc64/kernel/u3_iommu.c:170:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: arch/ppc64/kernel/u3_iommu.c:174:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: arch/ppc64/kernel/u3_iommu.c:183:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#691: FILE: arch/ppc64/kernel/u3_iommu.c:188:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#700: FILE: arch/ppc64/kernel/u3_iommu.c:197:
+		printk(KERN_INFO "U3-DART: table not allocated, using direct DMA\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dart"
#722: FILE: arch/ppc64/kernel/u3_iommu.c:219:
+	if (dart == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: arch/ppc64/kernel/u3_iommu.c:222:
+^I/* Set initial control register contents: table base, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: arch/ppc64/kernel/u3_iommu.c:225:
+^Iregword = DARTCNTL_ENABLE | $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#736: FILE: arch/ppc64/kernel/u3_iommu.c:233:
+	for (i = 0; i < dart_tablesize/4; i++)
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: arch/ppc64/kernel/u3_iommu.c:243:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: arch/ppc64/kernel/u3_iommu.c:246:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#765: FILE: arch/ppc64/kernel/u3_iommu.c:262:
+	printk(KERN_INFO "U3/CPC925 DART IOMMU initialized\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dn"
#777: FILE: arch/ppc64/kernel/u3_iommu.c:274:
+	if (dn == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#801: FILE: arch/ppc64/kernel/u3_iommu.c:298:
+		struct device_node *dn = pci_device_to_OF_node(dev);
+		if (dn)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!get_property"
#812: FILE: arch/ppc64/kernel/u3_iommu.c:309:
+	    get_property(of_chosen, "linux,iommu-force-on", NULL) == NULL)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#821: FILE: arch/ppc64/kernel/u3_iommu.c:318:
+		abs_to_virt(lmb_alloc_base(1UL<<24, 1UL<<24, 0x80000000L));
 		                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#821: FILE: arch/ppc64/kernel/u3_iommu.c:318:
+		abs_to_virt(lmb_alloc_base(1UL<<24, 1UL<<24, 0x80000000L));
 		                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#823: FILE: arch/ppc64/kernel/u3_iommu.c:320:
+	printk(KERN_INFO "U3-DART allocated at: %lx\n", dart_tablebase);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#866: FILE: include/asm-ppc64/iommu.h:111:
+extern void iommu_setup_u3(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#875: FILE: include/asm-ppc64/iommu.h:158:
+extern void alloc_u3_dart_table(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246524.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 8 warnings, 23 checks, 466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246524.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
