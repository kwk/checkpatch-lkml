WARNING:LINE_SPACING: Missing a blank line after declarations
#35: FILE: fs/binfmt_aout.c:65:
+	int r;
+	down(&file->f_dentry->d_inode->i_sem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#41: FILE: fs/binfmt_aout.c:71:
+#define DUMP_WRITE(addr, nr)	\
+	if (!dump_write(file, (void *)(addr), (nr))) \
+		goto close_coredump;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#41: FILE: fs/binfmt_aout.c:71:
+#define DUMP_WRITE(addr, nr)	\
+	if (!dump_write(file, (void *)(addr), (nr))) \
+		goto close_coredump;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#41: FILE: fs/binfmt_aout.c:71:
+#define DUMP_WRITE(addr, nr)	\
+	if (!dump_write(file, (void *)(addr), (nr))) \
+		goto close_coredump;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LINE_SPACING: Missing a blank line after declarations
#55: FILE: fs/binfmt_elf.c:931:
+	int r;
+	down(&file->f_dentry->d_inode->i_sem);

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: arch/sparc64/kernel/binfmt_aout32.c:64:
+	int r;
+	down(&file->f_dentry->d_inode->i_sem);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#80: FILE: arch/sparc64/kernel/binfmt_aout32.c:70:
+#define DUMP_WRITE(addr, nr)	\
+	if (!dump_write(file, (void *)(addr), (nr))) \
+		goto close_coredump;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#80: FILE: arch/sparc64/kernel/binfmt_aout32.c:70:
+#define DUMP_WRITE(addr, nr)	\
+	if (!dump_write(file, (void *)(addr), (nr))) \
+		goto close_coredump;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#80: FILE: arch/sparc64/kernel/binfmt_aout32.c:70:
+#define DUMP_WRITE(addr, nr)	\
+	if (!dump_write(file, (void *)(addr), (nr))) \
+		goto close_coredump;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 0 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000570213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
