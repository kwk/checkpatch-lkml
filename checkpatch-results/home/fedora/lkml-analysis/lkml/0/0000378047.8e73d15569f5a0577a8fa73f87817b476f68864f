WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN linux-2.5.67/drivers/s390/Kconfig linux-2.5.67-s390/drivers/s390/Kconfig

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#66: FILE: drivers/s390/block/dasd.c:10:
+ * $Revision: 1.82 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/s390/block/dasd.c:184:
+^I * As long as the device is not in state DASD_STATE_NEW we want to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/s390/block/dasd.c:191:
+ ^Idevice->gdp->de = devfs_mk_dir("dasd/%04x",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: drivers/s390/block/dasd.c:191:
+ ^Idevice->gdp->de = devfs_mk_dir("dasd/%04x",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/s390/block/dasd.c:191:
+ ^Idevice->gdp->de = devfs_mk_dir("dasd/%04x",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/s390/block/dasd.c:192:
+ 	device->gdp->de = devfs_mk_dir("dasd/%04x",
+		_ccw_device_get_device_number(device->cdev));

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: drivers/s390/block/dasd.c:425:
 			MESSAGE (KERN_INFO, "giving up on dasd device with "
+				 "devno %04x",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#205: FILE: drivers/s390/block/dasd.c:445:
+	device = (dasd_device_t *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/s390/block/dasd.c:960:
+	cqr = (dasd_ccw_req_t *) intparm;

CHECK:SPACING: No space is necessary after a cast
#299: FILE: drivers/s390/block/dasd.c:968:
+	device = (dasd_device_t *) cqr->device;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#300: FILE: drivers/s390/block/dasd.c:969:
+	if (device == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#302: FILE: drivers/s390/block/dasd.c:971:
+	    strncmp(device->discipline->ebcname, (char *) &cqr->magic, 4)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#337: FILE: drivers/s390/block/dasd.c:1022:
+			printk(KERN_WARNING"%s(%s): request timed out\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#337: FILE: drivers/s390/block/dasd.c:1022:
+			printk(KERN_WARNING"%s(%s): request timed out\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#338: FILE: drivers/s390/block/dasd.c:1023:
+			       __FUNCTION__, cdev->dev.bus_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#342: FILE: drivers/s390/block/dasd.c:1027:
+			printk(KERN_WARNING"%s(%s): unknown error %ld\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#342: FILE: drivers/s390/block/dasd.c:1027:
+			printk(KERN_WARNING"%s(%s): unknown error %ld\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#343: FILE: drivers/s390/block/dasd.c:1028:
+			       __FUNCTION__, cdev->dev.bus_id, PTR_ERR(irb));

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#435: FILE: drivers/s390/block/dasd.c:1795:
+struct block_device_operations

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#532: FILE: drivers/s390/block/dasd.c:1935:
+		printk (KERN_WARNING "Can't offline dasd device with open"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: drivers/s390/block/dasd.c:1935:
+		printk (KERN_WARNING "Can't offline dasd device with open"

WARNING:SPLIT_STRING: quoted string split across lines
#533: FILE: drivers/s390/block/dasd.c:1936:
+		printk (KERN_WARNING "Can't offline dasd device with open"
+			" count = %i.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#551: FILE: drivers/s390/block/dasd.c:1953:
+dasd_generic_auto_online (struct ccw_driver *dasd_discipline_driver)

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#602: FILE: drivers/s390/block/dasd_devmap.c:14:
+ * $Revision: 1.12 $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#619: FILE: drivers/s390/block/dasd_devmap.c:43:
+typedef struct {

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: drivers/s390/block/dasd_devmap.c:46:
+        unsigned int devindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/s390/block/dasd_devmap.c:46:
+        unsigned int devindex;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: drivers/s390/block/dasd_devmap.c:47:
+        unsigned short devno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/s390/block/dasd_devmap.c:47:
+        unsigned short devno;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: drivers/s390/block/dasd_devmap.c:48:
+        unsigned short features;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/s390/block/dasd_devmap.c:48:
+        unsigned short features;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: drivers/s390/block/dasd_devmap.c:308:
+^I^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#647: FILE: drivers/s390/block/dasd_devmap.c:312:
+	list_for_each(l, &dasd_devno_hashlists[devno&255]) {
 	                                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!devmap"
#724: FILE: drivers/s390/block/dasd_devmap.c:427:
+	if (devmap == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: drivers/s390/block/dasd_devmap.c:452:
+	if (!(devmap = dasd_devmap_from_devno (devno)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#749: FILE: drivers/s390/block/dasd_devmap.c:452:
+	if (!(devmap = dasd_devmap_from_devno (devno)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cdev->dev.driver_data"
#762: FILE: drivers/s390/block/dasd_devmap.c:463:
+	if (cdev->dev.driver_data == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#768: FILE: drivers/s390/block/dasd_devmap.c:469:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#812: FILE: drivers/s390/block/dasd_devmap.c:502:
+	devmap = dasd_devmap_from_devno (devno);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#859: FILE: drivers/s390/block/dasd_diag.c:9:
+ * $Revision: 1.28 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#907: FILE: drivers/s390/block/dasd_eckd.c:10:
+ * $Revision: 1.38 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#970: FILE: drivers/s390/block/dasd_fba.c:7:
+ * $Revision: 1.27 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1000: FILE: drivers/s390/block/dasd_genhd.c:12:
+ * $Revision: 1.24 $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1062: FILE: drivers/s390/block/dasd_int.h:9:
+ * $Revision: 1.38 $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dasd_device_t *' should also have an identifier name
#1081: FILE: drivers/s390/block/dasd_int.h:314:
+void dasd_put_device_wake(dasd_device_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1132: FILE: drivers/s390/block/dasd_int.h:466:
+void dasd_generic_auto_online (struct ccw_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_driver *' should also have an identifier name
#1132: FILE: drivers/s390/block/dasd_int.h:466:
+void dasd_generic_auto_online (struct ccw_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#1145: FILE: drivers/s390/block/dasd_int.h:476:
+dasd_device_t *dasd_create_device(struct ccw_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dasd_device_t *' should also have an identifier name
#1146: FILE: drivers/s390/block/dasd_int.h:477:
+void dasd_delete_device(dasd_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dasd_device_t *' should also have an identifier name
#1148: FILE: drivers/s390/block/dasd_int.h:479:
+kdev_t dasd_get_kdev(dasd_device_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1149: FILE: drivers/s390/block/dasd_int.h:480:
+dasd_device_t *dasd_device_from_devindex(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1153: FILE: drivers/s390/block/dasd_int.h:484:
+int dasd_devno_in_range(int);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1185: FILE: drivers/s390/block/dasd_proc.c:12:
+ * $Revision: 1.18 $

CHECK:SPACING: No space is necessary after a cast
#1200: FILE: drivers/s390/block/dasd_proc.c:62:
+	device = dasd_device_from_devindex((unsigned long) v - 1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378047.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 35 warnings, 13 checks, 1073 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378047.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
