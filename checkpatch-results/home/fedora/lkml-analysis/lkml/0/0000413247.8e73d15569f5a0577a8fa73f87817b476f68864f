WARNING:LINE_SPACING: Missing a blank line after declarations
#46: FILE: fs/namespace.c:893:
+	struct vfsmount *old_rootmnt;
+	write_lock(&fs->lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/fs_struct.h:23:
+extern void set_fs_root(struct fs_struct *, struct vfsmount *, struct dentry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_struct *' should also have an identifier name
#117: FILE: include/linux/fs_struct.h:23:
+extern void set_fs_root(struct fs_struct *, struct vfsmount *, struct dentry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#117: FILE: include/linux/fs_struct.h:23:
+extern void set_fs_root(struct fs_struct *, struct vfsmount *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#117: FILE: include/linux/fs_struct.h:23:
+extern void set_fs_root(struct fs_struct *, struct vfsmount *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/linux/fs_struct.h:24:
+extern void set_fs_pwd(struct fs_struct *, struct vfsmount *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_struct *' should also have an identifier name
#118: FILE: include/linux/fs_struct.h:24:
+extern void set_fs_pwd(struct fs_struct *, struct vfsmount *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#118: FILE: include/linux/fs_struct.h:24:
+extern void set_fs_pwd(struct fs_struct *, struct vfsmount *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#118: FILE: include/linux/fs_struct.h:24:
+extern void set_fs_pwd(struct fs_struct *, struct vfsmount *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/fs_struct.h:25:
+extern struct fs_struct *copy_fs_struct(struct fs_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_struct *' should also have an identifier name
#119: FILE: include/linux/fs_struct.h:25:
+extern struct fs_struct *copy_fs_struct(struct fs_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/fs_struct.h:26:
+extern void put_fs_struct(struct fs_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fs_struct *' should also have an identifier name
#120: FILE: include/linux/fs_struct.h:26:
+extern void put_fs_struct(struct fs_struct *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000413247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 4 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000413247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
