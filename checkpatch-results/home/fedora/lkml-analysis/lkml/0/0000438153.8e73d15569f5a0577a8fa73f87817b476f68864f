WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
diff -Nru a/Documentation/filesystems/ntfs.txt b/Documentation/filesystems/ntfs.txt

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#58: 
--- a/Documentation/filesystems/ntfs.txt	Tue Aug 20 23:58:06 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'extention' may be misspelled - perhaps 'extension'?
#92: FILE: fs/ntfs/ChangeLog:17:
+	  length. Also need to be careful with initialized_size extention in
 	                                                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'accross' may be misspelled - perhaps 'across'?
#94: FILE: fs/ntfs/ChangeLog:19:
+	  OTOH, perhaps i_sem, which is held accross generic_file_write is
 	                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#143: FILE: fs/ntfs/aops.c:589:
+			 * all non-uptodate buffers and set them uptodate (and
 			                                         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#145: FILE: fs/ntfs/aops.c:591:
+			 * if the page is uptodate.
 			                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#146: FILE: fs/ntfs/aops.c:592:
+			 * FIXME: For an uptodate page, the buffers may need to
 			                 ^^^^^^^^

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#226: FILE: fs/ntfs/aops.c:923:
+		ntfs_error(vi->i_sb, "BUG()! i_size (0x%Lx) doesn't match "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#234: FILE: fs/ntfs/aops.c:930:
+		ntfs_error(vi->i_sb, "BUG()! attr_pos (0x%Lx) > attr_len (0x%x)"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: fs/ntfs/aops.c:1011:
+static int ntfs_prepare_nonresident_write(struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: fs/ntfs/aops.c:1011:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: fs/ntfs/aops.c:1011:
+		unsigned from, unsigned to)

WARNING:SPLIT_STRING: quoted string split across lines
#303: FILE: fs/ntfs/aops.c:1032:
+	ntfs_debug("Entering for inode %li, attribute type 0x%x, page index "
+			"0x%lx, from = %u, to = %u.", vi->i_ino, ni->type,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#306: FILE: fs/ntfs/aops.c:1035:
+	BUG_ON(!NInoNonResident(ni));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <NInoNonResident>
#306: FILE: fs/ntfs/aops.c:1035:
+	BUG_ON(!NInoNonResident(ni));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#307: FILE: fs/ntfs/aops.c:1036:
+	BUG_ON(NInoMstProtected(ni));

CHECK:CAMELCASE: Avoid CamelCase: <NInoMstProtected>
#307: FILE: fs/ntfs/aops.c:1036:
+	BUG_ON(NInoMstProtected(ni));

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#313: FILE: fs/ntfs/aops.c:1042:
+	 * create_empty_buffers() will create uptodate/dirty buffers if the
 	                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#314: FILE: fs/ntfs/aops.c:1043:
+	 * page is uptodate/dirty.
 	           ^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#318: FILE: fs/ntfs/aops.c:1047:
+	bh = head = page_buffers(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#343: FILE: fs/ntfs/aops.c:1072:
+		 * If buffer @bh is outside the write, just mark it uptodate
 		                                                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#344: FILE: fs/ntfs/aops.c:1073:
+		 * if the page is uptodate and continue with the next buffer.
 		                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#362: FILE: fs/ntfs/aops.c:1091:
+			// allocate it. Best done in one go to accomodate not
 			                                       ^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: fs/ntfs/aops.c:1098:
+			ntfs_error(vol->sb, "Writing beyond allocated size "
+					"is not supported yet. Sorry.");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block >= iblock'
#380: FILE: fs/ntfs/aops.c:1109:
+		if (unlikely((block >= iblock) &&
+				(ni->initialized_size < vi->i_size))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ni->initialized_size < vi->i_size'
#380: FILE: fs/ntfs/aops.c:1109:
+		if (unlikely((block >= iblock) &&
+				(ni->initialized_size < vi->i_size))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: fs/ntfs/aops.c:1110:
+		if (unlikely((block >= iblock) &&
+				(ni->initialized_size < vi->i_size))) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: fs/ntfs/aops.c:1124:
+^I^I^I^I// ^I^I^I!PageError(page))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#399: FILE: fs/ntfs/aops.c:1128:
+^I^I^I^I// ^I__set_page_dirty_buffers();$

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#406: FILE: fs/ntfs/aops.c:1135:
+			 * all non-uptodate buffers and set them uptodate (and
 			                                         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#408: FILE: fs/ntfs/aops.c:1137:
+			 * if the page is uptodate.
 			                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#409: FILE: fs/ntfs/aops.c:1138:
+			 * FIXME: For an uptodate page, the buffers may need to
 			                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#416: FILE: fs/ntfs/aops.c:1145:
+				// Set them uptodate and dirty.
 				            ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#425: FILE: fs/ntfs/aops.c:1154:
+			ntfs_error(vol->sb, "Writing beyond initialized size "
+					"is not supported yet. Sorry.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#451: FILE: fs/ntfs/aops.c:1180:
+			if (likely(rl != NULL)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rl"
#451: FILE: fs/ntfs/aops.c:1180:
+			if (likely(rl != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Unbalanced braces around else statement
#456: FILE: fs/ntfs/aops.c:1185:
+			} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#464: FILE: fs/ntfs/aops.c:1193:
+				BUG_ON(lcn == LCN_ENOENT);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#471: FILE: fs/ntfs/aops.c:1200:
+^I^I^I^I^I// ^I^Ibh->b_blocknr);$

WARNING:SPLIT_STRING: quoted string split across lines
#481: FILE: fs/ntfs/aops.c:1210:
+					ntfs_error(vol->sb, "Writing into "
+							"sparse regions is "

WARNING:SPLIT_STRING: quoted string split across lines
#482: FILE: fs/ntfs/aops.c:1211:
+							"sparse regions is "
+							"not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#483: FILE: fs/ntfs/aops.c:1212:
+							"not supported yet. "
+							"Sorry.");

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#504: FILE: fs/ntfs/aops.c:1233:
+				ntfs_error(vol->sb, "vcn_to_lcn(vcn = 0x%Lx) "

WARNING:SPLIT_STRING: quoted string split across lines
#505: FILE: fs/ntfs/aops.c:1234:
+				ntfs_error(vol->sb, "vcn_to_lcn(vcn = 0x%Lx) "
+						"failed with error code "

WARNING:SPLIT_STRING: quoted string split across lines
#506: FILE: fs/ntfs/aops.c:1235:
+						"failed with error code "
+						"0x%Lx%s.", (long long)vcn,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#506: FILE: fs/ntfs/aops.c:1235:
+						"0x%Lx%s.", (long long)vcn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: fs/ntfs/aops.c:1260:
+				unmap_underlying_metadata(bh->b_bdev,
+						bh->b_blocknr);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#537: FILE: fs/ntfs/aops.c:1266:
+				 * Page is _not_ uptodate, zero surrounding
 				                 ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: fs/ntfs/aops.c:1274:
+					memset(kaddr + block_start, 0,
+							from - block_start);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#551: FILE: fs/ntfs/aops.c:1280:
+		/* @bh is mapped, set it uptodate if the page is uptodate. */
 		                         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#551: FILE: fs/ntfs/aops.c:1280:
+		/* @bh is mapped, set it uptodate if the page is uptodate. */
 		                                                 ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: fs/ntfs/aops.c:1284:
+^I^I^Icontinue; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#558: FILE: fs/ntfs/aops.c:1287:
+		 * The page is not uptodate. The buffer is mapped. If it is not
 		                   ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#559: FILE: fs/ntfs/aops.c:1288:
+		 * uptodate, and it is only partially being written to, we need
 		   ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: fs/ntfs/aops.c:1292:
+		if (!buffer_uptodate(bh) &&
+				(block_start < from || block_end > to)) {

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#628: FILE: fs/ntfs/aops.c:1357:
+ * make partially overwritten blocks uptodate,
                                      ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: fs/ntfs/aops.c:1372:
+static int ntfs_prepare_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#643: FILE: fs/ntfs/aops.c:1372:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#643: FILE: fs/ntfs/aops.c:1372:
+		unsigned from, unsigned to)

WARNING:SPLIT_STRING: quoted string split across lines
#649: FILE: fs/ntfs/aops.c:1378:
+	ntfs_debug("Entering for inode %li, attribute type 0x%x, page index "
+			"0x%lx, from = %u, to = %u.", vi->i_ino, ni->type,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#652: FILE: fs/ntfs/aops.c:1381:
+	BUG_ON(!PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#653: FILE: fs/ntfs/aops.c:1382:
+	BUG_ON(from > PAGE_CACHE_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#654: FILE: fs/ntfs/aops.c:1383:
+	BUG_ON(to > PAGE_CACHE_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#655: FILE: fs/ntfs/aops.c:1384:
+	BUG_ON(from > to);

CHECK:CAMELCASE: Avoid CamelCase: <NInoEncrypted>
#664: FILE: fs/ntfs/aops.c:1393:
+			if (NInoEncrypted(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#666: FILE: fs/ntfs/aops.c:1395:
+				ntfs_debug("Denying write access to encrypted "
+						"file.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoCompressed>
#670: FILE: fs/ntfs/aops.c:1399:
+			if (NInoCompressed(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#674: FILE: fs/ntfs/aops.c:1403:
+				ntfs_error(vi->i_sb, "Writing to compressed "
+						"files is not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#675: FILE: fs/ntfs/aops.c:1404:
+						"files is not supported yet. "
+						"Sorry.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoSparse>
#679: FILE: fs/ntfs/aops.c:1408:
+			if (NInoSparse(ni)) {

WARNING:SPLIT_STRING: quoted string split across lines
#681: FILE: fs/ntfs/aops.c:1410:
+				ntfs_error(vi->i_sb, "Writing to sparse files "
+						"is not supported yet. Sorry.");

WARNING:SPLIT_STRING: quoted string split across lines
#689: FILE: fs/ntfs/aops.c:1418:
+			ntfs_error(vi->i_sb, "Writing to MST protected "
+					"attributes is not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#690: FILE: fs/ntfs/aops.c:1419:
+					"attributes is not supported yet. "
+					"Sorry.");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#702: FILE: fs/ntfs/aops.c:1431:
+	BUG_ON(page_has_buffers(page));

WARNING:SPLIT_STRING: quoted string split across lines
#708: FILE: fs/ntfs/aops.c:1437:
+		ntfs_error(vi->i_sb, "Writing beyond the existing file size is "
+				"not supported yet. Sorry.");

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#716: FILE: fs/ntfs/aops.c:1445:
+	 * page uptodate here as in the non-resident case where we need to
 	        ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#717: FILE: fs/ntfs/aops.c:1446:
+	 * bring the buffers straddled by the write uptodate before
 	                                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#720: FILE: fs/ntfs/aops.c:1449:
+	 * We thus defer the uptodate bringing of the page region outside the
 	                     ^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#721: FILE: fs/ntfs/aops.c:1450:
+	 * region written to to ntfs_commit_write(). The reason for doing this

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: fs/ntfs/aops.c:1475:
+static int ntfs_commit_nonresident_write(struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#746: FILE: fs/ntfs/aops.c:1475:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#746: FILE: fs/ntfs/aops.c:1475:
+		unsigned from, unsigned to)

WARNING:SPLIT_STRING: quoted string split across lines
#757: FILE: fs/ntfs/aops.c:1486:
+	ntfs_debug("Entering for inode %li, attribute type 0x%x, page index "
+			"0x%lx, from = %u, to = %u.", vi->i_ino,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#768: FILE: fs/ntfs/aops.c:1497:
+	bh = head = page_buffers(page);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#784: FILE: fs/ntfs/aops.c:1513:
+	 * uptodate then we can optimize away a bogus ->readpage() for the next
 	   ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#785: FILE: fs/ntfs/aops.c:1514:
+	 * read(). Here we 'discover' whether the page went uptodate as a
 	                                                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#816: FILE: fs/ntfs/aops.c:1545:
+ * Should be using generic_commit_write(). This marks buffers uptodate and
                                                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#817: FILE: fs/ntfs/aops.c:1546:
+ * dirty, sets the page uptodate if all buffers in the page are uptodate, and
                         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#817: FILE: fs/ntfs/aops.c:1546:
+ * dirty, sets the page uptodate if all buffers in the page are uptodate, and
                                                                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#830: FILE: fs/ntfs/aops.c:1559:
+ * to resident attribute case, where we need to do the uptodate bringing here
                                                        ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: fs/ntfs/aops.c:1564:
+static int ntfs_commit_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#835: FILE: fs/ntfs/aops.c:1564:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#835: FILE: fs/ntfs/aops.c:1564:
+		unsigned from, unsigned to)

WARNING:SPLIT_STRING: quoted string split across lines
#850: FILE: fs/ntfs/aops.c:1579:
+	ntfs_debug("Entering for inode %li, attribute type 0x%x, page index "
+			"0x%lx, from = %u, to = %u.", vi->i_ino, ni->type,

WARNING:SPLIT_STRING: quoted string split across lines
#863: FILE: fs/ntfs/aops.c:1592:
+				ntfs_debug("Denying write access to encrypted "
+						"file.");

WARNING:SPLIT_STRING: quoted string split across lines
#872: FILE: fs/ntfs/aops.c:1601:
+				ntfs_error(vi->i_sb, "Writing to compressed "
+						"files is not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#873: FILE: fs/ntfs/aops.c:1602:
+						"files is not supported yet. "
+						"Sorry.");

WARNING:SPLIT_STRING: quoted string split across lines
#880: FILE: fs/ntfs/aops.c:1609:
+				ntfs_error(vi->i_sb, "Writing to sparse files "
+						"is not supported yet. Sorry.");

WARNING:SPLIT_STRING: quoted string split across lines
#889: FILE: fs/ntfs/aops.c:1618:
+			ntfs_error(vi->i_sb, "Writing to MST protected "
+					"attributes is not supported yet. "

WARNING:SPLIT_STRING: quoted string split across lines
#890: FILE: fs/ntfs/aops.c:1619:
+					"attributes is not supported yet. "
+					"Sorry.");

WARNING:SPLIT_STRING: quoted string split across lines
#911: FILE: fs/ntfs/aops.c:1640:
+		ntfs_error(vi->i_sb, "Writing beyond the existing file size is "
+				"not supported yet. Sorry.");

CHECK:CAMELCASE: Avoid CamelCase: <NInoAttr>
#915: FILE: fs/ntfs/aops.c:1644:
+	if (!NInoAttr(ni))

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#922: FILE: fs/ntfs/aops.c:1651:
+	if (unlikely(IS_ERR(m))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#934: FILE: fs/ntfs/aops.c:1663:
+	if (unlikely(!lookup_attr(ni->type, ni->name, ni->name_len,
+			IGNORE_CASE, 0, NULL, 0, ctx))) {

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#946: FILE: fs/ntfs/aops.c:1675:
+		ntfs_error(vi->i_sb, "BUG()! i_size (0x%Lx) doesn't match "

WARNING:SPLIT_STRING: quoted string split across lines
#947: FILE: fs/ntfs/aops.c:1676:
+		ntfs_error(vi->i_sb, "BUG()! i_size (0x%Lx) doesn't match "
+				"attr_len (0x%x). Aborting write.", vi->i_size,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#953: FILE: fs/ntfs/aops.c:1682:
+		ntfs_error(vi->i_sb, "BUG()! attr_pos (0x%Lx) > attr_len (0x%x)"

WARNING:SPLIT_STRING: quoted string split across lines
#954: FILE: fs/ntfs/aops.c:1683:
+		ntfs_error(vi->i_sb, "BUG()! attr_pos (0x%Lx) > attr_len (0x%x)"
+				". Aborting write.", attr_pos, attr_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#967: FILE: fs/ntfs/aops.c:1696:
+	kattr = (u8*)ctx->attr + le16_to_cpu(ctx->attr->_ARA(value_offset)) +

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#978: FILE: fs/ntfs/aops.c:1707:
+		 * Bring the out of bounds area(s) uptodate by copying data
 		                                   ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: fs/ntfs/aops.c:1709:
+^I ^I */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#980: FILE: fs/ntfs/aops.c:1709:
+^I ^I */$

WARNING:SPLIT_STRING: quoted string split across lines
#1001: FILE: fs/ntfs/aops.c:1730:
+	ntfs_error(vi->i_sb, "Writing to resident files is not supported yet. "
+			"Wrote to memory only...");

WARNING:SPLIT_STRING: quoted string split across lines
#1010: FILE: fs/ntfs/aops.c:1739:
+		ntfs_warning(vi->i_sb, "Error allocating memory required to "
+				"commit the write.");

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1012: FILE: fs/ntfs/aops.c:1741:
+			ntfs_warning(vi->i_sb, "Page is uptodate, setting "
 			                                ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1013: FILE: fs/ntfs/aops.c:1742:
+			ntfs_warning(vi->i_sb, "Page is uptodate, setting "
+					"dirty so the write will be retried "

WARNING:SPLIT_STRING: quoted string split across lines
#1014: FILE: fs/ntfs/aops.c:1743:
+					"dirty so the write will be retried "
+					"later on by the VM.");

CHECK:BRACES: Unbalanced braces around else statement
#1021: FILE: fs/ntfs/aops.c:1750:
+		} else

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1022: FILE: fs/ntfs/aops.c:1751:
+			ntfs_error(vi->i_sb, "Page is not uptodate. Written "
 			                                  ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1023: FILE: fs/ntfs/aops.c:1752:
+			ntfs_error(vi->i_sb, "Page is not uptodate. Written "
+					"data has been lost. )-:");

WARNING:SPLIT_STRING: quoted string split across lines
#1026: FILE: fs/ntfs/aops.c:1755:
+		ntfs_error(vi->i_sb, "Resident attribute write failed with "
+				"error %i. Setting page error flag.", -err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1044: FILE: fs/ntfs/aops.c:1777:
+	.prepare_write	= ntfs_prepare_write,	/* Prepare page and buffers
+						   ready to receive data. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1044: FILE: fs/ntfs/aops.c:1777:
+						   ready to receive data. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1058: FILE: fs/ntfs/attrib.c:1185:
+			rc = memcmp(val, (u8*)a + le16_to_cpu(

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1058: FILE: fs/ntfs/attrib.c:1185:
+			rc = memcmp(val, (u8*)a + le16_to_cpu(

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438153.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 96 warnings, 24 checks, 1024 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438153.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
