ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#51: FILE: Makefile:0:
VERSION = 2

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#55: FILE: Makefile:1:
+EXTRAVERSION =-syscounter
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: arch/i386/kernel/entry.S:205:
+ENTRY(system_call) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/i386/kernel/entry.S:211:
+ movl taskstruct, %ebx  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/i386/kernel/entry.S:214:
+ jne original_syscall # if not, go on!         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/kernel/entry.S:340:
+ pushl %ebx                      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/kernel/entry.S:345:
+        #   ebx   <-- %esp      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: arch/i386/kernel/entry.S:347:
+ movl %ebx, taskstruct           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: arch/i386/kernel/entry.S:348:
+ movl taskstruct, %ebx  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/kernel/entry.S:351:
+        jne original_debug $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: arch/i386/kernel/entry.S:362:
+original_debug:                    $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#160: FILE: arch/i386/kernel/syscounter.c:1:
+#include <linux/syscounter.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#162: FILE: arch/i386/kernel/syscounter.c:3:
+volatile long long userinstrexec = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#162: FILE: arch/i386/kernel/syscounter.c:3:
+volatile long long userinstrexec = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#163: FILE: arch/i386/kernel/syscounter.c:4:
+volatile long long syscalls = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#163: FILE: arch/i386/kernel/syscounter.c:4:
+volatile long long syscalls = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#164: FILE: arch/i386/kernel/syscounter.c:5:
+struct task_struct *taskstruct = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: arch/i386/kernel/syscounter.c:8:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/i386/kernel/syscounter.c:11:
+         unsigned char *stack;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/i386/kernel/syscounter.c:11:
+         unsigned char *stack;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/i386/kernel/syscounter.c:13:
+         stack = (unsigned char *)task->thread.esp0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/i386/kernel/syscounter.c:13:
+         stack = (unsigned char *)task->thread.esp0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/i386/kernel/syscounter.c:14:
+         stack += offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/kernel/syscounter.c:14:
+         stack += offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/i386/kernel/syscounter.c:15:
+         return (*((int *)stack));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/i386/kernel/syscounter.c:15:
+         return (*((int *)stack));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: arch/i386/kernel/syscounter.c:19:
+static inline int put_stack_long(struct task_struct *task, int offset,
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/i386/kernel/syscounter.c:20:
+         unsigned char * stack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/i386/kernel/syscounter.c:20:
+         unsigned char * stack;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: arch/i386/kernel/syscounter.c:20:
+         unsigned char * stack;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/i386/kernel/syscounter.c:22:
+         stack = (unsigned char *) task->thread.esp0;$

CHECK:SPACING: No space is necessary after a cast
#183: FILE: arch/i386/kernel/syscounter.c:22:
+         stack = (unsigned char *) task->thread.esp0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/i386/kernel/syscounter.c:22:
+         stack = (unsigned char *) task->thread.esp0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/i386/kernel/syscounter.c:23:
+         stack += offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: arch/i386/kernel/syscounter.c:23:
+         stack += offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/i386/kernel/syscounter.c:24:
+         *(unsigned long *) stack = data;$

CHECK:SPACING: No space is necessary after a cast
#185: FILE: arch/i386/kernel/syscounter.c:24:
+         *(unsigned long *) stack = data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/i386/kernel/syscounter.c:24:
+         *(unsigned long *) stack = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: arch/i386/kernel/syscounter.c:25:
+         return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/i386/kernel/syscounter.c:25:
+         return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#188: FILE: arch/i386/kernel/syscounter.c:27:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#191: FILE: arch/i386/kernel/syscounter.c:30:
+asmlinkage int sys_counter(int pid, int action, void* retval) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#191: FILE: arch/i386/kernel/syscounter.c:30:
+asmlinkage int sys_counter(int pid, int action, void* retval) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#192: FILE: arch/i386/kernel/syscounter.c:31:
+asmlinkage int sys_counter(int pid, int action, void* retval) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/i386/kernel/syscounter.c:32:
+ struct task_struct *tsk = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/i386/kernel/syscounter.c:32:
+ struct task_struct *tsk = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/i386/kernel/syscounter.c:33:
+ int ret;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/i386/kernel/syscounter.c:33:
+ int ret;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/i386/kernel/syscounter.c:35:
+ lock_kernel();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/i386/kernel/syscounter.c:36:
+        ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/i386/kernel/syscounter.c:36:
+        ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/i386/kernel/syscounter.c:38:
+ if (action == GET_USER) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 16)
#199: FILE: arch/i386/kernel/syscounter.c:38:
+ if (action == GET_USER) {
+                if (retval ==  NULL) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/kernel/syscounter.c:39:
+                if (retval ==  NULL) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/i386/kernel/syscounter.c:39:
+                if (retval ==  NULL) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/i386/kernel/syscounter.c:39:
+                if (retval ==  NULL) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 1)
#200: FILE: arch/i386/kernel/syscounter.c:39:
+                if (retval ==  NULL) 
+ ret = INVALIDPOINTER; 

CHECK:BRACES: braces {} should be used on all arms of this statement
#200: FILE: arch/i386/kernel/syscounter.c:39:
+                if (retval ==  NULL) 
[...]
+                else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!retval"
#200: FILE: arch/i386/kernel/syscounter.c:39:
+                if (retval ==  NULL) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: arch/i386/kernel/syscounter.c:40:
+ ret = INVALIDPOINTER; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/i386/kernel/syscounter.c:40:
+ ret = INVALIDPOINTER; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/i386/kernel/syscounter.c:41:
+                else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/i386/kernel/syscounter.c:41:
+                else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#202: FILE: arch/i386/kernel/syscounter.c:41:
+                else {
+                if (copy_to_user(retval, (void *) &userinstrexec,

CHECK:BRACES: Unbalanced braces around else statement
#202: FILE: arch/i386/kernel/syscounter.c:41:
+                else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/i386/kernel/syscounter.c:42:
+                if (copy_to_user(retval, (void *) &userinstrexec,$

CHECK:SPACING: No space is necessary after a cast
#203: FILE: arch/i386/kernel/syscounter.c:42:
+                if (copy_to_user(retval, (void *) &userinstrexec,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/i386/kernel/syscounter.c:42:
+                if (copy_to_user(retval, (void *) &userinstrexec,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#203: FILE: arch/i386/kernel/syscounter.c:42:
+                if (copy_to_user(retval, (void *) &userinstrexec,
[...]
+                         ret = BADUSERLANDCOPY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/i386/kernel/syscounter.c:43:
+                         ret = BADUSERLANDCOPY;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: arch/i386/kernel/syscounter.c:43:
+                if (copy_to_user(retval, (void *) &userinstrexec,
+                         ret = BADUSERLANDCOPY;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/i386/kernel/syscounter.c:43:
+                         ret = BADUSERLANDCOPY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/i386/kernel/syscounter.c:44:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/i386/kernel/syscounter.c:44:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/i386/kernel/syscounter.c:45:
+ goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/i386/kernel/syscounter.c:46:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/i386/kernel/syscounter.c:46:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/i386/kernel/syscounter.c:47:
+        else if (action == GET_SYSCALLS) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/i386/kernel/syscounter.c:47:
+        else if (action == GET_SYSCALLS) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#209: FILE: arch/i386/kernel/syscounter.c:47:
+        }
+        else if (action == GET_SYSCALLS) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/i386/kernel/syscounter.c:48:
+                if (retval ==  NULL) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: arch/i386/kernel/syscounter.c:48:
+                if (retval ==  NULL) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/i386/kernel/syscounter.c:48:
+                if (retval ==  NULL) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 1)
#210: FILE: arch/i386/kernel/syscounter.c:48:
+                if (retval ==  NULL) 
+ ret = INVALIDPOINTER;

CHECK:BRACES: braces {} should be used on all arms of this statement
#210: FILE: arch/i386/kernel/syscounter.c:48:
+                if (retval ==  NULL) 
[...]
+                else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!retval"
#210: FILE: arch/i386/kernel/syscounter.c:48:
+                if (retval ==  NULL) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/i386/kernel/syscounter.c:49:
+ ret = INVALIDPOINTER;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/i386/kernel/syscounter.c:50:
+                else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/i386/kernel/syscounter.c:50:
+                else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 4)
#212: FILE: arch/i386/kernel/syscounter.c:50:
+                else {
+    if (copy_to_user(retval, (void *) &syscalls, sizeof(long long)) !=

CHECK:BRACES: Unbalanced braces around else statement
#212: FILE: arch/i386/kernel/syscounter.c:50:
+                else {

CHECK:SPACING: No space is necessary after a cast
#213: FILE: arch/i386/kernel/syscounter.c:51:
+    if (copy_to_user(retval, (void *) &syscalls, sizeof(long long)) !=

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/i386/kernel/syscounter.c:51:
+    if (copy_to_user(retval, (void *) &syscalls, sizeof(long long)) !=$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 24)
#213: FILE: arch/i386/kernel/syscounter.c:51:
+    if (copy_to_user(retval, (void *) &syscalls, sizeof(long long)) !=
[...]
+                        ret = BADUSERLANDCOPY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/i386/kernel/syscounter.c:52:
+                        ret = BADUSERLANDCOPY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/i386/kernel/syscounter.c:52:
+                        ret = BADUSERLANDCOPY;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: arch/i386/kernel/syscounter.c:53:
+ } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/i386/kernel/syscounter.c:53:
+ } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/i386/kernel/syscounter.c:54:
+ goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/i386/kernel/syscounter.c:55:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/i386/kernel/syscounter.c:55:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/i386/kernel/syscounter.c:56:
+ else if (action == STOP) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#219: FILE: arch/i386/kernel/syscounter.c:56:
+ else if (action == STOP) {
+ tracedpid = -1; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: arch/i386/kernel/syscounter.c:57:
+ tracedpid = -1; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/i386/kernel/syscounter.c:57:
+ tracedpid = -1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: arch/i386/kernel/syscounter.c:58:
+ goto out; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/syscounter.c:58:
+ goto out; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/syscounter.c:59:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/i386/kernel/syscounter.c:60:
+ else if (action == RESET) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#223: FILE: arch/i386/kernel/syscounter.c:60:
+ else if (action == RESET) {
+ tracedpid = -1;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#223: FILE: arch/i386/kernel/syscounter.c:60:
+ }
+ else if (action == RESET) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/kernel/syscounter.c:61:
+ tracedpid = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/syscounter.c:62:
+ userinstrexec=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#225: FILE: arch/i386/kernel/syscounter.c:62:
+ userinstrexec=0;
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/i386/kernel/syscounter.c:63:
+                syscalls = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/i386/kernel/syscounter.c:63:
+                syscalls = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/i386/kernel/syscounter.c:64:
+ goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/i386/kernel/syscounter.c:65:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/i386/kernel/syscounter.c:66:
+ else if (action == START) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#229: FILE: arch/i386/kernel/syscounter.c:66:
+ else if (action == START) {
[...]
+ if (tracedpid != -1) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#229: FILE: arch/i386/kernel/syscounter.c:66:
+ }
+ else if (action == START) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#230: FILE: arch/i386/kernel/syscounter.c:67:
+ else if (action == START) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/i386/kernel/syscounter.c:68:
+ if (tracedpid != -1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#231: FILE: arch/i386/kernel/syscounter.c:68:
+ if (tracedpid != -1) {
+ ret = TRACEINPROGRESS;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/i386/kernel/syscounter.c:69:
+ ret = TRACEINPROGRESS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/i386/kernel/syscounter.c:70:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/i386/kernel/syscounter.c:71:
+ else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#234: FILE: arch/i386/kernel/syscounter.c:71:
+ else {
+ long tmp;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#234: FILE: arch/i386/kernel/syscounter.c:71:
+ }
+ else {

CHECK:BRACES: Unbalanced braces around else statement
#234: FILE: arch/i386/kernel/syscounter.c:71:
+ else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/i386/kernel/syscounter.c:72:
+ long tmp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: arch/i386/kernel/syscounter.c:73:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/i386/kernel/syscounter.c:73:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/i386/kernel/syscounter.c:74:
+ read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/i386/kernel/syscounter.c:75:
+ tsk = find_task_by_pid(pid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/i386/kernel/syscounter.c:76:
+ read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/i386/kernel/syscounter.c:78:
+ if (tsk) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#241: FILE: arch/i386/kernel/syscounter.c:78:
+ if (tsk) {
[...]
+ get_task_struct(tsk);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: arch/i386/kernel/syscounter.c:79:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/i386/kernel/syscounter.c:79:
+ $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#242: FILE: arch/i386/kernel/syscounter.c:79:
+ if (tsk) {
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/i386/kernel/syscounter.c:80:
+ get_task_struct(tsk);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: arch/i386/kernel/syscounter.c:82:
+ tracedpid = pid; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/i386/kernel/syscounter.c:82:
+ tracedpid = pid; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/i386/kernel/syscounter.c:83:
+ userinstrexec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/i386/kernel/syscounter.c:84:
+ syscalls = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: arch/i386/kernel/syscounter.c:85:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/i386/kernel/syscounter.c:85:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/i386/kernel/syscounter.c:87:
+ tmp = get_stack_long(tsk, EFL_OFFSET) | TF_FLAG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/i386/kernel/syscounter.c:88:
+ put_stack_long(tsk, EFL_OFFSET, tmp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/i386/kernel/syscounter.c:91:
+ wake_up_process(tsk);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: arch/i386/kernel/syscounter.c:92:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/i386/kernel/syscounter.c:92:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/i386/kernel/syscounter.c:93:
+ free_task_struct(tsk);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: arch/i386/kernel/syscounter.c:94:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/i386/kernel/syscounter.c:94:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: arch/i386/kernel/syscounter.c:95:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: arch/i386/kernel/syscounter.c:95:
+ 
+ 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/i386/kernel/syscounter.c:95:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/i386/kernel/syscounter.c:96:
+ }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#259: FILE: arch/i386/kernel/syscounter.c:96:
+ 
+ }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: arch/i386/kernel/syscounter.c:97:
+ else { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/i386/kernel/syscounter.c:97:
+ else { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#260: FILE: arch/i386/kernel/syscounter.c:97:
+ else { 
+ ret = NOSUCHPROCESS;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#260: FILE: arch/i386/kernel/syscounter.c:97:
+ }
+ else { 

CHECK:BRACES: Unbalanced braces around else statement
#260: FILE: arch/i386/kernel/syscounter.c:97:
+ else { 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/i386/kernel/syscounter.c:98:
+ ret = NOSUCHPROCESS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/i386/kernel/syscounter.c:99:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/i386/kernel/syscounter.c:101:
+ }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#264: FILE: arch/i386/kernel/syscounter.c:101:
+
+ }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/i386/kernel/syscounter.c:102:
+ goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/i386/kernel/syscounter.c:104:
+ }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#267: FILE: arch/i386/kernel/syscounter.c:104:
+
+ }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/i386/kernel/syscounter.c:105:
+ else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#268: FILE: arch/i386/kernel/syscounter.c:105:
+ else {
+ ret = UNKNOWNOPERATION;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#268: FILE: arch/i386/kernel/syscounter.c:105:
+ }
+ else {

CHECK:BRACES: Unbalanced braces around else statement
#268: FILE: arch/i386/kernel/syscounter.c:105:
+ else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/i386/kernel/syscounter.c:106:
+ ret = UNKNOWNOPERATION;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/i386/kernel/syscounter.c:107:
+ goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/i386/kernel/syscounter.c:108:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/i386/kernel/syscounter.c:111:
+ unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: arch/i386/kernel/syscounter.c:112:
+ return ret;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: include/linux/syscounter.h:1:
+#ifndef __SYSCOUNTER_H

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#308: FILE: include/linux/syscounter.h:9:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: include/linux/syscounter.h:15:
+#define EFL_OFFSET ((EFL-2)*4-sizeof(struct pt_regs)) $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#314: FILE: include/linux/syscounter.h:15:
+#define EFL_OFFSET ((EFL-2)*4-sizeof(struct pt_regs)) 
                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#314: FILE: include/linux/syscounter.h:15:
+#define EFL_OFFSET ((EFL-2)*4-sizeof(struct pt_regs)) 
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#314: FILE: include/linux/syscounter.h:15:
+#define EFL_OFFSET ((EFL-2)*4-sizeof(struct pt_regs)) 
                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: include/linux/syscounter.h:17:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#326: FILE: include/linux/syscounter.h:27:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#338: FILE: include/linux/syscounter.h:39:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#340: FILE: include/linux/syscounter.h:41:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243548.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 99 warnings, 31 checks, 273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243548.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
