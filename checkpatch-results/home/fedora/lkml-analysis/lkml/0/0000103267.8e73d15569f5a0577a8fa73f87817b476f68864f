CHECK:BRACES: braces {} should be used on all arms of this statement
#192: FILE: drivers/net/sky2.c:1455:
+	if (sky2->autoneg == AUTONEG_DISABLE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#212: FILE: drivers/net/sky2.c:1475:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#254: FILE: drivers/net/wireless/atmel.c:1886:
+	if (encoding->flags & IW_ENCODE_DISABLED)
+	    alg = IW_ENCODE_ALG_NONE;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: drivers/net/wireless/atmel.c:1916:
+			key_len = min ((int)ext->key_len, priv->wep_key_len[idx]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MINMAX: min() should probably be min_t(int, ext->key_len, priv->wep_key_len[idx])
#299: FILE: drivers/net/wireless/atmel.c:1916:
+			key_len = min ((int)ext->key_len, priv->wep_key_len[idx]);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#329: FILE: drivers/net/wireless/atmel.c:3073:
+			if (trans_seq_no == 0x0002) {
+				should_associate = 1;
+			}

CHECK:CAMELCASE: Avoid CamelCase: <C80211_MGMT_ElementID_ChallengeText>
#334: FILE: drivers/net/wireless/atmel.c:3078:
+			    auth->el_id == C80211_MGMT_ElementID_ChallengeText) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#335: FILE: drivers/net/wireless/atmel.c:3079:
+				send_authentication_request(priv, system, auth->chall_text, auth->chall_text_len);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/net/wireless/wavelan_cs.c:953:
+  return(wv_82593_cmd(dev, "wv_diag(): diagnose",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/net/wireless/wavelan_cs.c:3599:
+  cfblk.ifrm_spc = 0x20 >> 4;^I/* 32 bit times interframe spacing */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/net/wireless/wavelan_cs.c:3600:
+  cfblk.slottim_low = 0x20 >> 5;^I/* 32 bit times slot time */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: drivers/s390/net/lcs.c:1295:
+        if (!lcs_set_thread_start_bit(card, LCS_SET_MC_THREAD)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: drivers/s390/net/lcs.c:1295:
+        if (!lcs_set_thread_start_bit(card, LCS_SET_MC_THREAD)) $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/s390/net/lcs.c:1295:
+        if (!lcs_set_thread_start_bit(card, LCS_SET_MC_THREAD)) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "card->tx_buffer"
#508: FILE: drivers/s390/net/lcs.c:1528:
+	if (card->tx_emitted <= 0 && card->tx_buffer != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/s390/net/qeth.h:1100:
+^Irc = sscanf(buf, "%d.%d.%d.%d%n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/s390/net/qeth.h:1102:
+^Iif (rc != 4  || count) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/s390/net/qeth.h:1128:
+        char num[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/s390/net/qeth.h:1128:
+        char num[5];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: drivers/s390/net/qeth.h:1129:
+        int num2, cnt, out, found, save_cnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: drivers/s390/net/qeth.h:1129:
+        int num2, cnt, out, found, save_cnt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: drivers/s390/net/qeth.h:1130:
+        unsigned short in_tmp[8] = {0, };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/s390/net/qeth.h:1130:
+        unsigned short in_tmp[8] = {0, };$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#640: FILE: drivers/s390/net/qeth.h:1132:
+	cnt = out = found = save_cnt = num2 = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: drivers/s390/net/qeth.h:1133:
+        end = start = (char *) buf;$

CHECK:SPACING: No space is necessary after a cast
#641: FILE: drivers/s390/net/qeth.h:1133:
+        end = start = (char *) buf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/s390/net/qeth.h:1133:
+        end = start = (char *) buf;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#641: FILE: drivers/s390/net/qeth.h:1133:
+        end = start = (char *) buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: drivers/s390/net/qeth.h:1134:
+^Iin = (__u16 *) addr;^I$

CHECK:SPACING: No space is necessary after a cast
#642: FILE: drivers/s390/net/qeth.h:1134:
+	in = (__u16 *) addr;	

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: drivers/s390/net/qeth.h:1136:
+        while (end) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: drivers/s390/net/qeth.h:1136:
+        while (end) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: drivers/s390/net/qeth.h:1137:
+                end = strchr(end,':');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/s390/net/qeth.h:1137:
+                end = strchr(end,':');$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#645: FILE: drivers/s390/net/qeth.h:1137:
+                end = strchr(end,':');
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: drivers/s390/net/qeth.h:1138:
+                if (end == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/s390/net/qeth.h:1138:
+                if (end == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!end"
#646: FILE: drivers/s390/net/qeth.h:1138:
+                if (end == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: drivers/s390/net/qeth.h:1139:
+                        end = (char *)buf + (strlen(buf));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: drivers/s390/net/qeth.h:1139:
+                        end = (char *)buf + (strlen(buf));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: drivers/s390/net/qeth.h:1140:
+                        out = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/s390/net/qeth.h:1140:
+                        out = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: drivers/s390/net/qeth.h:1141:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/s390/net/qeth.h:1141:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: drivers/s390/net/qeth.h:1142:
+                if ((end - start)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: drivers/s390/net/qeth.h:1142:
+                if ((end - start)) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/s390/net/qeth.h:1142:
+                if ((end - start)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: drivers/s390/net/qeth.h:1143:
+                        memset(num, 0, 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/s390/net/qeth.h:1143:
+                        memset(num, 0, 5);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: drivers/s390/net/qeth.h:1144:
+                        memcpy(num, start, end - start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/s390/net/qeth.h:1144:
+                        memcpy(num, start, end - start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#655: FILE: drivers/s390/net/qeth.h:1147:
+                        sscanf(start, "%x", &num2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/s390/net/qeth.h:1147:
+                        sscanf(start, "%x", &num2);$

WARNING:NAKED_SSCANF: unchecked sscanf return value
#655: FILE: drivers/s390/net/qeth.h:1147:
+                        sscanf(start, "%x", &num2);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#655: FILE: drivers/s390/net/qeth.h:1147:
+                        sscanf(start, "%x", &num2);

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: drivers/s390/net/qeth.h:1148:
+                        if (found)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/s390/net/qeth.h:1148:
+                        if (found)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: drivers/s390/net/qeth.h:1149:
+                                in_tmp[save_cnt++] = num2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: drivers/s390/net/qeth.h:1149:
+                                in_tmp[save_cnt++] = num2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: drivers/s390/net/qeth.h:1150:
+                        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/s390/net/qeth.h:1150:
+                        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: drivers/s390/net/qeth.h:1151:
+                                in[cnt++] = num2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/s390/net/qeth.h:1151:
+                                in[cnt++] = num2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: drivers/s390/net/qeth.h:1152:
+                        if (out)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: drivers/s390/net/qeth.h:1152:
+                        if (out)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#661: FILE: drivers/s390/net/qeth.h:1153:
+                                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/s390/net/qeth.h:1153:
+                                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: drivers/s390/net/qeth.h:1154:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: drivers/s390/net/qeth.h:1154:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: drivers/s390/net/qeth.h:1157:
+                        found = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/s390/net/qeth.h:1157:
+                        found = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: drivers/s390/net/qeth.h:1160:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: drivers/s390/net/qeth.h:1160:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: drivers/s390/net/qeth.h:1161:
+        cnt = 7;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/s390/net/qeth.h:1161:
+        cnt = 7;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: drivers/s390/net/qeth.h:1163:
+                in[cnt--] = in_tmp[--save_cnt];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/s390/net/qeth.h:1163:
+                in[cnt--] = in_tmp[--save_cnt];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/s390/net/qeth_eddp.c:415:
+       if (eddp->qh.hdr.l2.id == QETH_HEADER_TYPE_LAYER2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#706: FILE: drivers/s390/net/qeth_eddp.c:415:
+       if (eddp->qh.hdr.l2.id == QETH_HEADER_TYPE_LAYER2) {
+               eddp->skb_offset += sizeof(struct ethhdr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: drivers/s390/net/qeth_eddp.c:416:
+               eddp->skb_offset += sizeof(struct ethhdr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: drivers/s390/net/qeth_eddp.c:416:
+               eddp->skb_offset += sizeof(struct ethhdr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: drivers/s390/net/qeth_eddp.c:418:
+               if (eddp->mac.h_proto == __constant_htons(ETH_P_8021Q))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/s390/net/qeth_eddp.c:418:
+               if (eddp->mac.h_proto == __constant_htons(ETH_P_8021Q))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#709: FILE: drivers/s390/net/qeth_eddp.c:418:
+               if (eddp->mac.h_proto == __constant_htons(ETH_P_8021Q))
+                       eddp->skb_offset += VLAN_HLEN;

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#709: FILE: drivers/s390/net/qeth_eddp.c:418:
+               if (eddp->mac.h_proto == __constant_htons(ETH_P_8021Q))

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: drivers/s390/net/qeth_eddp.c:419:
+                       eddp->skb_offset += VLAN_HLEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: drivers/s390/net/qeth_eddp.c:419:
+                       eddp->skb_offset += VLAN_HLEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/s390/net/qeth_eddp.c:421:
+       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#742: FILE: drivers/s390/net/qeth_main.c:1683:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103267.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 44 warnings, 10 checks, 629 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103267.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
