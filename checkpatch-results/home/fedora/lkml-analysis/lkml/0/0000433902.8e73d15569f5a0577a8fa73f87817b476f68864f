WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#19: 
I've been playing with different HZ values in the 2.4 kernel for a while now,

WARNING:TYPO_SPELLING: 'apparantly' may be misspelled - perhaps 'apparently'?
#20: 
and apparantly Linus also has decided to introduce a USER_HZ constant (I used
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#53: 
Of course all kinds of calculations had te be improved as well. The ACTHZ
                                        ^^

CHECK:SPACING: No space is necessary after a cast
#101: FILE: arch/i386/kernel/time.c:441:
+	    (xtime.tv_nsec / 1000) >= 500000 - ((unsigned) TICK_SIZE) / 2 &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#101: FILE: arch/i386/kernel/time.c:441:
+	    (xtime.tv_nsec / 1000) >= 500000 - ((unsigned) TICK_SIZE) / 2 &&

CHECK:SPACING: No space is necessary after a cast
#102: FILE: arch/i386/kernel/time.c:442:
+	    (xtime.tv_nsec / 1000) <= 500000 + ((unsigned) TICK_SIZE) / 2) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#102: FILE: arch/i386/kernel/time.c:442:
+	    (xtime.tv_nsec / 1000) <= 500000 + ((unsigned) TICK_SIZE) / 2) {

WARNING:TYPO_SPELLING: 'devide' may be misspelled - perhaps 'divide'?
#146: FILE: include/linux/timex.h:158:
+/* Suppose we want to devide two numbers NOM and DEN: NOM/DEN, the we can
                       ^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'NOM' - possible side-effects?
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'NOM' may be better as '(NOM)' to avoid precedence issues
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'DEN' - possible side-effects?
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'DEN' may be better as '(DEN)' to avoid precedence issues
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'LSH' - possible side-effects?
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'LSH' may be better as '(LSH)' to avoid precedence issues
#155: FILE: include/linux/timex.h:167:
+#define SH_DIV(NOM,DEN,LSH) (   ((NOM / DEN) << LSH)                    \
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: include/linux/timex.h:168:
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/timex.h:168:
+                             + (((NOM % DEN) << LSH) + DEN / 2) / DEN)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: include/linux/timex.h:171:
+#define ACTHZ (SH_DIV (CLOCK_TICK_RATE, LATCH, 8))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#162: FILE: include/linux/timex.h:174:
+#define TICK_USEC ((1000000UL + USER_HZ/2) / USER_HZ)
                                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: include/linux/timex.h:178:
+#define TICK_NSEC(TUSEC) (SH_DIV (TUSEC * USER_HZ * 1000, ACTHZ, 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'TUSEC' may be better as '(TUSEC)' to avoid precedence issues
#166: FILE: include/linux/timex.h:178:
+#define TICK_NSEC(TUSEC) (SH_DIV (TUSEC * USER_HZ * 1000, ACTHZ, 8))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#198: FILE: kernel/time.c:234:
+		if (txc->tick <  900000/USER_HZ ||
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#199: FILE: kernel/time.c:235:
+		    txc->tick > 1100000/USER_HZ)
 		                       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: kernel/timer.c:36:
+unsigned long tick_usec = TICK_USEC; ^I^I/* ACTHZ          period (usec) */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: kernel/timer.c:40:
+struct timespec xtime __attribute__ ((aligned (16)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#241: FILE: kernel/timer.c:40:
+struct timespec xtime __attribute__ ((aligned (16)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: kernel/timer.c:496:
+		long ltemp = -time_phase >> (SHIFT_SCALE - 10);
+		time_phase += ltemp << (SHIFT_SCALE - 10);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: kernel/timer.c:501:
+		long ltemp = time_phase >> (SHIFT_SCALE - 10);
+		time_phase -= ltemp << (SHIFT_SCALE - 10);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#297: FILE: kernel/timer.c:520:
+	if (xtime.tv_nsec >= 1000000000) {
+	    xtime.tv_nsec -= 1000000000;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433902.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 15 warnings, 12 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433902.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
