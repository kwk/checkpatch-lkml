WARNING:TYPO_SPELLING: 'demostrates' may be misspelled - perhaps 'demonstrates'?
#34: 
SPD/IF decoder chip.  This driver demostrates some but not all of the 
                                  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
--- linux-2.6.12-spi/include/linux/spi/cirrus.h	1969-12-31 16:00:00.000000000 -0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: include/linux/spi/cirrus.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: include/linux/spi/cirrus.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: include/linux/spi/cirrus.h:16:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#74: FILE: include/linux/spi/cirrus.h:29:
+#define TO_MAP(x) ((x & 0x7f) | 0x80)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: include/linux/spi/cirrus.h:41:
+inline void _cirrus_setup_async(struct spi_message *message, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: include/linux/spi/cirrus.h:42:
+^I^I^I^I^Ivoid (*chip_callback)(void *context), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: include/linux/spi/cirrus.h:49:
+^Ireturn NULL;^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#97: FILE: include/linux/spi/cirrus.h:52:
+inline void __cirrus_pool_free(struct cirrus_message_pool *pool, void* ptr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: include/linux/spi/cirrus.h:56:
+inline struct spi_message *_cirrus_alloc_read(struct cirrus_message_pool *pool, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: include/linux/spi/cirrus.h:57:
+^I^I^I^I^I^I^Iu8 address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: include/linux/spi/cirrus.h:58:
+^I^I^I^I^I^I^Iconst char* buffer, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#103: FILE: include/linux/spi/cirrus.h:58:
+							const char* buffer, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: include/linux/spi/cirrus.h:65:
+^I^I^I^I^I^I^Iu8 address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: include/linux/spi/cirrus.h:66:
+^I^I^I^I^I^I^Iunsigned char* buffer, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#111: FILE: include/linux/spi/cirrus.h:66:
+							unsigned char* buffer, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: include/linux/spi/cirrus.h:72:
+inline void _cirrus_free(struct cirrus_message_pool *pool, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#118: FILE: include/linux/spi/cirrus.h:73:
+				struct spi_message* message)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: include/linux/spi/cirrus.h:77:
+inline struct cirrus_message_pool *_cirrus_create_pool(const char* name, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#122: FILE: include/linux/spi/cirrus.h:77:
+inline struct cirrus_message_pool *_cirrus_create_pool(const char* name, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: include/linux/spi/cirrus.h:78:
+^I^I^I^I^I^I^Isize_t pool_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: include/linux/spi/cirrus.h:88:
+inline ssize_t _cirrus_read_sync(struct device *dev, u8 address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: include/linux/spi/cirrus.h:95:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: include/linux/spi/cirrus.h:107:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: include/linux/spi/cirrus.h:118:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: include/linux/spi/cirrus.h:122:
+inline int _cirrus_write_sync(struct device *dev, u8 address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: include/linux/spi/cirrus.h:123:
+^I^I^I^Iconst unsigned char *buffer, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: include/linux/spi/cirrus.h:129:
+^I$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#175: FILE: include/linux/spi/cirrus.h:130:
+	transfers[0].tx_buf = map_buffer,
+	transfers[0].rx_buf = NULL;

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#177: FILE: include/linux/spi/cirrus.h:132:
+	transfers[0].len = ARRAY_SIZE(map_buffer),
+	transfers[0].cs_change = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: include/linux/spi/cirrus.h:135:
+^I$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#183: FILE: include/linux/spi/cirrus.h:138:
+	transfers[1].len = length,
+	transfers[1].cs_change = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: include/linux/spi/cirrus.h:146:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#195: FILE: include/linux/spi/cirrus.h:150:
+inline int _cirrus_read_register_sync(struct device* dev, u8 address)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: include/linux/spi/cirrus.h:157:
+^I$

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#203: FILE: include/linux/spi/cirrus.h:158:
+	transfers[0].tx_buf = map_buffer,
+	transfers[0].rx_buf = NULL;

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#205: FILE: include/linux/spi/cirrus.h:160:
+	transfers[0].len = ARRAY_SIZE(map_buffer),
+	transfers[0].cs_change = 1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: include/linux/spi/cirrus.h:172:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: include/linux/spi/cirrus.h:176:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#225: FILE: include/linux/spi/cirrus.h:180:
+inline int _cirrus_write_register_sync(struct device* dev, u8 address, u8 data)

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#231: FILE: include/linux/spi/cirrus.h:186:
+	transfers[0].tx_buf = write_buffer,
+	transfers[0].rx_buf = NULL;

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#233: FILE: include/linux/spi/cirrus.h:188:
+	transfers[0].len = ARRAY_SIZE(write_buffer),
+	transfers[0].cs_change = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: include/linux/spi/cirrus.h:194:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: include/linux/spi/cirrus.h:196:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#249: FILE: include/linux/spi/cs8415a.h:1:
+/* cs8415a.h - Definitions for the CS8415A chip

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#264: FILE: include/linux/spi/cs8415a.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#265: FILE: include/linux/spi/cs8415a.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#295: FILE: include/linux/spi/cs8415a.h:47:
+#define CS8415A_SWCLK    (1<<7)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#295: FILE: include/linux/spi/cs8415a.h:47:
+#define CS8415A_SWCLK    (1<<7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#296: FILE: include/linux/spi/cs8415a.h:48:
+#define CS8415A_MUTESAO  (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#296: FILE: include/linux/spi/cs8415a.h:48:
+#define CS8415A_MUTESAO  (1<<5)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#297: FILE: include/linux/spi/cs8415a.h:49:
+#define CS8415A_INT(x)   ((x&3)<<1)
                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#297: FILE: include/linux/spi/cs8415a.h:49:
+#define CS8415A_INT(x)   ((x&3)<<1)
                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#297: FILE: include/linux/spi/cs8415a.h:49:
+#define CS8415A_INT(x)   ((x&3)<<1)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#298: FILE: include/linux/spi/cs8415a.h:50:
+#define CS8415A_HOLD(x)  ((x&3)<<5)
                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#298: FILE: include/linux/spi/cs8415a.h:50:
+#define CS8415A_HOLD(x)  ((x&3)<<5)
                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#298: FILE: include/linux/spi/cs8415a.h:50:
+#define CS8415A_HOLD(x)  ((x&3)<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#299: FILE: include/linux/spi/cs8415a.h:51:
+#define CS8415A_RMCKF    (1<<4)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: include/linux/spi/cs8415a.h:51:
+#define CS8415A_RMCKF    (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#300: FILE: include/linux/spi/cs8415a.h:52:
+#define CS8415A_MMR      (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#300: FILE: include/linux/spi/cs8415a.h:52:
+#define CS8415A_MMR      (1<<3)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#301: FILE: include/linux/spi/cs8415a.h:53:
+#define CS8415A_MUX(x)   (x&7)
                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#301: FILE: include/linux/spi/cs8415a.h:53:
+#define CS8415A_MUX(x)   (x&7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#302: FILE: include/linux/spi/cs8415a.h:54:
+#define CS8415A_RUN      (1<<6)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#302: FILE: include/linux/spi/cs8415a.h:54:
+#define CS8415A_RUN      (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#303: FILE: include/linux/spi/cs8415a.h:55:
+#define CS8415A_SOMS     (1<<7)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: include/linux/spi/cs8415a.h:55:
+#define CS8415A_SOMS     (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#304: FILE: include/linux/spi/cs8415a.h:56:
+#define CS8415A_SOSF     (1<<6)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#304: FILE: include/linux/spi/cs8415a.h:56:
+#define CS8415A_SOSF     (1<<6)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#305: FILE: include/linux/spi/cs8415a.h:57:
+#define CS8415A_SORES(x) ((x&3)<<4)
                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#305: FILE: include/linux/spi/cs8415a.h:57:
+#define CS8415A_SORES(x) ((x&3)<<4)
                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#305: FILE: include/linux/spi/cs8415a.h:57:
+#define CS8415A_SORES(x) ((x&3)<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#306: FILE: include/linux/spi/cs8415a.h:58:
+#define CS8415A_SOJUST   (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: include/linux/spi/cs8415a.h:58:
+#define CS8415A_SOJUST   (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#307: FILE: include/linux/spi/cs8415a.h:59:
+#define CS8415A_SODEL    (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: include/linux/spi/cs8415a.h:59:
+#define CS8415A_SODEL    (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#308: FILE: include/linux/spi/cs8415a.h:60:
+#define CS8415A_SOSPOL   (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: include/linux/spi/cs8415a.h:60:
+#define CS8415A_SOSPOL   (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#310: FILE: include/linux/spi/cs8415a.h:62:
+#define CS8415A_OSLIP    (1<<6)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#310: FILE: include/linux/spi/cs8415a.h:62:
+#define CS8415A_OSLIP    (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#311: FILE: include/linux/spi/cs8415a.h:63:
+#define CS8415A_DETC     (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#311: FILE: include/linux/spi/cs8415a.h:63:
+#define CS8415A_DETC     (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#313: FILE: include/linux/spi/cs8415a.h:65:
+#define CS8415A_DETU     (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: include/linux/spi/cs8415a.h:65:
+#define CS8415A_DETU     (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#314: FILE: include/linux/spi/cs8415a.h:66:
+#define CS8415A_QCH      (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#314: FILE: include/linux/spi/cs8415a.h:66:
+#define CS8415A_QCH      (1<<1)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#315: FILE: include/linux/spi/cs8415a.h:67:
+#define CS8415A_AUX(x)   ((x&f)<<4)
                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#315: FILE: include/linux/spi/cs8415a.h:67:
+#define CS8415A_AUX(x)   ((x&f)<<4)
                                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#315: FILE: include/linux/spi/cs8415a.h:67:
+#define CS8415A_AUX(x)   ((x&f)<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#316: FILE: include/linux/spi/cs8415a.h:68:
+#define CS8415A_PRO      (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#316: FILE: include/linux/spi/cs8415a.h:68:
+#define CS8415A_PRO      (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#317: FILE: include/linux/spi/cs8415a.h:69:
+#define CS8415A_AUDIO    (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#317: FILE: include/linux/spi/cs8415a.h:69:
+#define CS8415A_AUDIO    (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#318: FILE: include/linux/spi/cs8415a.h:70:
+#define CS8415A_COPY     (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#318: FILE: include/linux/spi/cs8415a.h:70:
+#define CS8415A_COPY     (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#320: FILE: include/linux/spi/cs8415a.h:72:
+#define CS8415A_QCRC     (1<<6)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#320: FILE: include/linux/spi/cs8415a.h:72:
+#define CS8415A_QCRC     (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#321: FILE: include/linux/spi/cs8415a.h:73:
+#define CS8415A_CCRC     (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#321: FILE: include/linux/spi/cs8415a.h:73:
+#define CS8415A_CCRC     (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#322: FILE: include/linux/spi/cs8415a.h:74:
+#define CS8415A_UNLOCK   (1<<4)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#322: FILE: include/linux/spi/cs8415a.h:74:
+#define CS8415A_UNLOCK   (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#323: FILE: include/linux/spi/cs8415a.h:75:
+#define CS8415A_V        (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#323: FILE: include/linux/spi/cs8415a.h:75:
+#define CS8415A_V        (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#324: FILE: include/linux/spi/cs8415a.h:76:
+#define CS8415A_CONF     (1<<2)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#324: FILE: include/linux/spi/cs8415a.h:76:
+#define CS8415A_CONF     (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#325: FILE: include/linux/spi/cs8415a.h:77:
+#define CS8415A_BIP      (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#325: FILE: include/linux/spi/cs8415a.h:77:
+#define CS8415A_BIP      (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#327: FILE: include/linux/spi/cs8415a.h:79:
+#define CS8415A_BSEL     (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#327: FILE: include/linux/spi/cs8415a.h:79:
+#define CS8415A_BSEL     (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#328: FILE: include/linux/spi/cs8415a.h:80:
+#define CS8415A_CBMR     (1<<4)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#328: FILE: include/linux/spi/cs8415a.h:80:
+#define CS8415A_CBMR     (1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#329: FILE: include/linux/spi/cs8415a.h:81:
+#define CS8415A_DETCI    (1<<3)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#329: FILE: include/linux/spi/cs8415a.h:81:
+#define CS8415A_DETCI    (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#330: FILE: include/linux/spi/cs8415a.h:82:
+#define CS8415A_CAM      (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#330: FILE: include/linux/spi/cs8415a.h:82:
+#define CS8415A_CAM      (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#332: FILE: include/linux/spi/cs8415a.h:84:
+#define CS8415A_DETUI    (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#332: FILE: include/linux/spi/cs8415a.h:84:
+#define CS8415A_DETUI    (1<<1)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#349: FILE: include/linux/spi/cs8415a.h:101:
+extern int cs8415a_get_version(struct device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: include/linux/spi/cs8415a.h:103:
+extern int cs8415a_get_enabled(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#353: FILE: include/linux/spi/cs8415a.h:105:
+extern int cs8415a_set_enabled(struct device *dev, int value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: include/linux/spi/cs8415a.h:107:
+extern int cs8415a_get_muted(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: include/linux/spi/cs8415a.h:109:
+extern int cs8415a_set_muted(struct device *dev, int value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/linux/spi/cs8415a.h:111:
+extern int cs8415a_get_channel(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: include/linux/spi/cs8415a.h:113:
+extern int cs8415a_set_channel(struct device *dev, int value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/linux/spi/cs8415a.h:115:
+extern int cs8415a_is_pll_locked(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#365: FILE: include/linux/spi/cs8415a.h:117:
+extern int cs8415a_get_channel_status(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: include/linux/spi/cs8415a.h:119:
+extern int cs8415a_read_qch(struct device *dev, unsigned char *buffer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#369: FILE: include/linux/spi/cs8415a.h:121:
+extern int cs8415a_read_ubit(struct device *dev, unsigned char *buffer);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#371: FILE: include/linux/spi/cs8415a.h:123:
+extern int cs8415a_read_cbit(struct device *dev, unsigned char* buffer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/linux/spi/cs8415a.h:123:
+extern int cs8415a_read_cbit(struct device *dev, unsigned char* buffer);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: include/linux/spi/cs8415a.h:125:
+extern int cs8415a_add_event_handler(struct device *dev, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/spi/cs8415a.h:125:
+extern int cs8415a_add_event_handler(struct device *dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: include/linux/spi/cs8415a.h:126:
+extern int cs8415a_add_event_handler(struct device *dev, 
+					struct cs8415a_event *event);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: include/linux/spi/cs8415a.h:127:
+extern int cs8415a_remove_event_handler(struct device *dev, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: include/linux/spi/cs8415a.h:127:
+extern int cs8415a_remove_event_handler(struct device *dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: include/linux/spi/cs8415a.h:128:
+extern int cs8415a_remove_event_handler(struct device *dev, 
+						struct cs8415a_event *event);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#378: FILE: include/linux/spi/cs8415a.h:130:
+extern int _cs8415a_read_register(struct device *dev, u8 address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#380: FILE: include/linux/spi/cs8415a.h:132:
+extern int _cs8415a_write_register(struct device *dev, u8 address, u8 value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: include/linux/spi/cs8415a.h:134:
+extern int _cs8415a_read(struct device *dev, u8 address, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#382: FILE: include/linux/spi/cs8415a.h:134:
+extern int _cs8415a_read(struct device *dev, u8 address, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: include/linux/spi/cs8415a.h:135:
+extern int _cs8415a_read(struct device *dev, u8 address, 
+				unsigned char *buffer, unsigned int length);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: include/linux/spi/cs8415a.h:137:
+extern int _cs8415a_write(struct device *dev, u8 address, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: include/linux/spi/cs8415a.h:137:
+extern int _cs8415a_write(struct device *dev, u8 address, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: include/linux/spi/cs8415a.h:138:
+extern int _cs8415a_write(struct device *dev, u8 address, 
+				unsigned char *buffer, unsigned int length);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: include/linux/spi/cs8415a.h:140:
+extern int _cs8415a_read_register_async(struct device *dev, u8 address, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/spi/cs8415a.h:140:
+extern int _cs8415a_read_register_async(struct device *dev, u8 address, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: include/linux/spi/cs8415a.h:141:
+extern int _cs8415a_read_register_async(struct device *dev, u8 address, 
+						void (*done)(int value));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: include/linux/spi/cs8415a.h:143:
+extern int _cs8415a_write_register_async(struct device *dev, u8 address, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#391: FILE: include/linux/spi/cs8415a.h:143:
+extern int _cs8415a_write_register_async(struct device *dev, u8 address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: include/linux/spi/cs8415a.h:144:
+^I^I^I^I^I^Iu8 value, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: include/linux/spi/cs8415a.h:144:
+extern int _cs8415a_write_register_async(struct device *dev, u8 address, 
+						u8 value, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: include/linux/spi/cs8415a.h:146:
+extern int _cs8415a_read_async(struct device *dev, u8 address, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#394: FILE: include/linux/spi/cs8415a.h:146:
+extern int _cs8415a_read_async(struct device *dev, u8 address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: include/linux/spi/cs8415a.h:147:
+^I^I^I^I^Iunsigned char *buffer, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: include/linux/spi/cs8415a.h:147:
+extern int _cs8415a_read_async(struct device *dev, u8 address, 
+					unsigned char *buffer, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: include/linux/spi/cs8415a.h:148:
+^I^I^I^I^Iunsigned int length, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: include/linux/spi/cs8415a.h:151:
+extern int _cs8415a_write_async(struct device *dev, u8 address, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: include/linux/spi/cs8415a.h:151:
+extern int _cs8415a_write_async(struct device *dev, u8 address, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: include/linux/spi/cs8415a.h:152:
+^I^I^I^I^Iunsigned char *buffer, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: include/linux/spi/cs8415a.h:152:
+extern int _cs8415a_write_async(struct device *dev, u8 address, 
+					unsigned char *buffer, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: include/linux/spi/cs8415a.h:153:
+^I^I^I^I^Iunsigned int length, $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#408: FILE: drivers/spi/cs8415a.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#422: FILE: drivers/spi/cs8415a.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#423: FILE: drivers/spi/cs8415a.c:16:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#448: FILE: drivers/spi/cs8415a.c:41:
+	spinlock_t lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/spi/cs8415a.c:64:
+int _cs8415a_read(struct device *dev, u8 address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: drivers/spi/cs8415a.c:65:
+int _cs8415a_read(struct device *dev, u8 address, 
+			unsigned char *buffer, unsigned int length)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/spi/cs8415a.c:71:
+int _cs8415a_write(struct device *dev, u8 address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/spi/cs8415a.c:72:
+int _cs8415a_write(struct device *dev, u8 address, 
+			unsigned char *buffer, unsigned int length)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drivers/spi/cs8415a.c:78:
+int _cs8415a_read_register_async(struct device *dev, u8 address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/spi/cs8415a.c:79:
+int _cs8415a_read_register_async(struct device *dev, u8 address, 
+					void (*done)(int value))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: drivers/spi/cs8415a.c:85:
+int _cs8415a_write_register_async(struct device *dev, u8 address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/spi/cs8415a.c:86:
+int _cs8415a_write_register_async(struct device *dev, u8 address, 
+					u8 value, void (*done)(int status))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: drivers/spi/cs8415a.c:92:
+int _cs8415a_read_async(struct device *dev, u8 address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: drivers/spi/cs8415a.c:93:
+^I^I^I^Iunsigned char *buffer, unsigned int length, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/spi/cs8415a.c:93:
+int _cs8415a_read_async(struct device *dev, u8 address, 
+				unsigned char *buffer, unsigned int length, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/spi/cs8415a.c:100:
+int _cs8415a_write_async(struct device *dev, u8 address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: drivers/spi/cs8415a.c:101:
+^I^I^I^Iunsigned char *buffer, unsigned int length, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/spi/cs8415a.c:101:
+int _cs8415a_write_async(struct device *dev, u8 address, 
+				unsigned char *buffer, unsigned int length, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: drivers/spi/cs8415a.c:113:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/spi/cs8415a.c:115:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: drivers/spi/cs8415a.c:119:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/spi/cs8415a.c:120:
+^Istatus = _cs8415a_write_register(dev, CS8415A_CTL1, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/spi/cs8415a.c:121:
+	status = _cs8415a_write_register(dev, CS8415A_CTL1, 
+						CS8415A_INT(0)

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#529: FILE: drivers/spi/cs8415a.c:122:
+						|CS8415A_MUTESAO);
 						^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: drivers/spi/cs8415a.c:130:
+^Istatus = _cs8415a_write_register(dev, CS8415A_SOF, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: drivers/spi/cs8415a.c:131:
+^I^I^I^I^I^ICS8415A_SOMS $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/spi/cs8415a.c:131:
+	status = _cs8415a_write_register(dev, CS8415A_SOF, 
+						CS8415A_SOMS 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: drivers/spi/cs8415a.c:132:
+^I^I^I^I^I^I| CS8415A_SODEL $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: drivers/spi/cs8415a.c:148:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: drivers/spi/cs8415a.c:152:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: drivers/spi/cs8415a.c:159:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: drivers/spi/cs8415a.c:163:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: drivers/spi/cs8415a.c:165:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: drivers/spi/cs8415a.c:172:
+^I$

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#587: FILE: drivers/spi/cs8415a.c:180:
+}

The DEVICE_ATTR_RO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0444, name_show, NULL);

Note that the macro automatically appends _show to the named
attribute variable of the device for the show method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: drivers/spi/cs8415a.c:191:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: drivers/spi/cs8415a.c:193:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: drivers/spi/cs8415a.c:195:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: drivers/spi/cs8415a.c:204:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/spi/cs8415a.c:207:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: drivers/spi/cs8415a.c:208:
+^Istatus = _cs8415a_write_register(dev, CS8415A_CSC, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: drivers/spi/cs8415a.c:209:
+	status = _cs8415a_write_register(dev, CS8415A_CSC, 
+						(u8)(value ? CS8415A_RUN : 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: drivers/spi/cs8415a.c:212:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#635: FILE: drivers/spi/cs8415a.c:228:
+^I$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#636: FILE: drivers/spi/cs8415a.c:229:
+	status = sscanf(buf, "%u", &value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/spi/cs8415a.c:230:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#638: FILE: drivers/spi/cs8415a.c:231:
+	if (status != 1 || (value != 0 && value != 1)) {
+		return -EINVAL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: drivers/spi/cs8415a.c:234:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#643: FILE: drivers/spi/cs8415a.c:236:
+^I$

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#645: FILE: drivers/spi/cs8415a.c:238:
+}

The DEVICE_ATTR_RW(name) helper macro can be used instead of
DEVICE_ATTR(name, 0644, name_show, name_store);

Note that the macro automatically appends _show and _store to the
named attribute variable of the device for the show and store methods.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/spi/cs8415a.c:249:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: drivers/spi/cs8415a.c:251:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: drivers/spi/cs8415a.c:253:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: drivers/spi/cs8415a.c:262:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: drivers/spi/cs8415a.c:265:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: drivers/spi/cs8415a.c:266:
+^Istatus = _cs8415a_write_register(dev, CS8415A_CTL1, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: drivers/spi/cs8415a.c:267:
+	status = _cs8415a_write_register(dev, CS8415A_CTL1, 
+						(u8)(value?CS8415A_MUTESAO:0));

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#674: FILE: drivers/spi/cs8415a.c:267:
+						(u8)(value?CS8415A_MUTESAO:0));
 						          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#674: FILE: drivers/spi/cs8415a.c:267:
+						(u8)(value?CS8415A_MUTESAO:0));
 						                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: drivers/spi/cs8415a.c:270:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: drivers/spi/cs8415a.c:272:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: drivers/spi/cs8415a.c:286:
+^I$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#694: FILE: drivers/spi/cs8415a.c:287:
+	status = sscanf(buf, "%u", &value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: drivers/spi/cs8415a.c:288:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#696: FILE: drivers/spi/cs8415a.c:289:
+	if (status != 1 || (value != 0 && value != 1)) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: drivers/spi/cs8415a.c:292:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: drivers/spi/cs8415a.c:294:
+^I$

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#703: FILE: drivers/spi/cs8415a.c:296:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: drivers/spi/cs8415a.c:303:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: drivers/spi/cs8415a.c:306:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: drivers/spi/cs8415a.c:308:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: drivers/spi/cs8415a.c:310:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#726: FILE: drivers/spi/cs8415a.c:319:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: drivers/spi/cs8415a.c:322:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: drivers/spi/cs8415a.c:323:
+^Istatus = _cs8415a_write_register(dev, CS8415A_CTL2, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: drivers/spi/cs8415a.c:324:
+^I^I^I^I^I^I(u8)(CS8415A_HOLD(1) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/spi/cs8415a.c:324:
+	status = _cs8415a_write_register(dev, CS8415A_CTL2, 
+						(u8)(CS8415A_HOLD(1) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: drivers/spi/cs8415a.c:328:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#751: FILE: drivers/spi/cs8415a.c:344:
+^I$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#752: FILE: drivers/spi/cs8415a.c:345:
+	status = sscanf(buf, "%u", &value);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: drivers/spi/cs8415a.c:346:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#754: FILE: drivers/spi/cs8415a.c:347:
+	if (status != 1 || value < 0 || value > 7) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: drivers/spi/cs8415a.c:350:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: drivers/spi/cs8415a.c:352:
+^I$

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#761: FILE: drivers/spi/cs8415a.c:354:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: drivers/spi/cs8415a.c:361:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#771: FILE: drivers/spi/cs8415a.c:364:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: drivers/spi/cs8415a.c:366:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: drivers/spi/cs8415a.c:368:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#778: FILE: drivers/spi/cs8415a.c:371:
+}
+static ssize_t channel_status_show(struct device *dev, char *buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: drivers/spi/cs8415a.c:373:
+^Ireturn snprintf(buf, PAGE_SIZE, "0x%01x\n", $

WARNING:DEVICE_ATTR_RO: Use DEVICE_ATTR_RO
#782: FILE: drivers/spi/cs8415a.c:375:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: drivers/spi/cs8415a.c:385:
+^Idriver_data = kcalloc(1, sizeof(struct cs8415a_driver_data), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#793: FILE: drivers/spi/cs8415a.c:386:
+	driver_data = kcalloc(1, sizeof(struct cs8415a_driver_data), 
+				GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#795: FILE: drivers/spi/cs8415a.c:388:
+	if (!driver_data) {
+		dev_err(dev, "problem allocating driver memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: drivers/spi/cs8415a.c:392:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: drivers/spi/cs8415a.c:396:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: drivers/spi/cs8415a.c:398:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#808: FILE: drivers/spi/cs8415a.c:401:
+/*
+	driver_data->read_async_pool = _cirrus_create_pool(0);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: drivers/spi/cs8415a.c:409:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: drivers/spi/cs8415a.c:420:
+^I^I^I^I"found version 0x%02x\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#827: FILE: drivers/spi/cs8415a.c:420:
+		dev_err(dev, "problem reading chip version "
+				"found version 0x%02x\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: drivers/spi/cs8415a.c:425:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: drivers/spi/cs8415a.c:428:
+^I/* Attach to IRQ  */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#842: FILE: drivers/spi/cs8415a.c:435:
+^Istatus = request_irq(spi_dev->irq, cs8415a_int, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: drivers/spi/cs8415a.c:436:
+	status = request_irq(spi_dev->irq, cs8415a_int, 
+				SA_SHIRQ, dev->bus_id, dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#849: FILE: drivers/spi/cs8415a.c:442:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#856: FILE: drivers/spi/cs8415a.c:449:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: drivers/spi/cs8415a.c:452:
+^I^Idev_err(dev, "problem creating attribute %s\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#860: FILE: drivers/spi/cs8415a.c:453:
+		dev_err(dev, "problem creating attribute %s\n", 
+				dev_attr_version.attr.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/spi/cs8415a.c:456:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#866: FILE: drivers/spi/cs8415a.c:459:
+^I^Idev_err(dev, "problem creating attribute %s\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: drivers/spi/cs8415a.c:460:
+		dev_err(dev, "problem creating attribute %s\n", 
+				dev_attr_enabled.attr.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: drivers/spi/cs8415a.c:463:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: drivers/spi/cs8415a.c:466:
+^I^Idev_err(dev, "problem creating attribute %s\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#874: FILE: drivers/spi/cs8415a.c:467:
+		dev_err(dev, "problem creating attribute %s\n", 
+				dev_attr_muted.attr.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: drivers/spi/cs8415a.c:470:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#880: FILE: drivers/spi/cs8415a.c:473:
+^I^Idev_err(dev, "problem creating attribute %s\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: drivers/spi/cs8415a.c:474:
+		dev_err(dev, "problem creating attribute %s\n", 
+				dev_attr_channel.attr.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: drivers/spi/cs8415a.c:480:
+^I^Idev_err(dev, "problem creating attribute %s\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/spi/cs8415a.c:481:
+		dev_err(dev, "problem creating attribute %s\n", 
+				dev_attr_channel_status.attr.name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#901: FILE: drivers/spi/cs8415a.c:494:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#906: FILE: drivers/spi/cs8415a.c:499:
+^Iif (driver_data->read_async_pool) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: drivers/spi/cs8415a.c:501:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: drivers/spi/cs8415a.c:504:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/spi/cs8415a.c:508:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: drivers/spi/cs8415a.c:510:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: drivers/spi/cs8415a.c:526:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#942: FILE: drivers/spi/cs8415a.c:535:
+^I_cirrus_release_pool(driver_data->read_async_pool);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/spi/cs8415a.c:536:
+^I_cirrus_release_pool(driver_data->write_async_pool);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#944: FILE: drivers/spi/cs8415a.c:537:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: drivers/spi/cs8415a.c:539:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145464.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 144 errors, 26 warnings, 124 checks, 917 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145464.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
