WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#51: 
signed-off-by: Mike Galbraith <efault@gmx.de>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#85: FILE: include/linux/sysctl.h:151:
+	KERN_SCHED_THROTTLE1=73,  /* int: throttling grace period 1 in secs */
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#86: FILE: include/linux/sysctl.h:152:
+	KERN_SCHED_THROTTLE2=74,  /* int: throttling grace period 2 in secs */
 	                    ^

CHECK:SPACING: No space is necessary after a cast
#98: FILE: kernel/sched.c:85:
+	((unsigned long long)(TIME) * ((unsigned long) (1000000000 / HZ)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'TIME' - possible side-effects?
#100: FILE: kernel/sched.c:87:
+#define NS64_TO_JIFFIES(TIME) \
+	((((unsigned long long)((TIME)) >> BITS_PER_LONG) * \
+	(1 + NS_TO_JIFFIES(~0UL))) + NS_TO_JIFFIES((unsigned long)(TIME)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: kernel/sched.c:97:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'aviod' may be misspelled - perhaps 'avoid'?
#134: FILE: kernel/sched.c:211:
+ *           can aviod being throttled.  Each conforming slice
                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#176: FILE: kernel/sched.c:253:
+#define INFO_MASK(x)      ((1U << (x))-1)
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#195: FILE: kernel/sched.c:272:
+#define set_last_slice(p, n) ((p)->slice_info = (((p)->slice_info & \
+	~SLICE_LTS_MASK) | (((n) << SLICE_LTS_SHIFT) & SLICE_LTS_MASK)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#203: FILE: kernel/sched.c:280:
+#define set_slice_avg(p, n) ((p)->slice_info = (((p)->slice_info & \
+	~SLICE_AVG_MASK) | ((((n) / NS_SLEEP_AVG_PCNT) \
+	<< SLICE_AVG_SHIFT) & SLICE_AVG_MASK)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#208: FILE: kernel/sched.c:285:
+#define set_slice_avg_raw(p, n) ((p)->slice_info = (((p)->slice_info & \
+	~SLICE_AVG_MASK) | (((n) << SLICE_AVG_SHIFT) & SLICE_AVG_MASK)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#223: FILE: kernel/sched.c:300:
+#define cpu_this_slice(p) \
+	(100 * last_slice(p) / max((unsigned) time_this_slice(p), \
+	(unsigned) last_slice(p)))

CHECK:SPACING: No space is necessary after a cast
#224: FILE: kernel/sched.c:301:
+	(100 * last_slice(p) / max((unsigned) time_this_slice(p), \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: kernel/sched.c:301:
+	(100 * last_slice(p) / max((unsigned) time_this_slice(p), \

CHECK:SPACING: No space is necessary after a cast
#225: FILE: kernel/sched.c:302:
+	(unsigned) last_slice(p)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: kernel/sched.c:302:
+	(unsigned) last_slice(p)))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#304: FILE: kernel/sched.c:2890:
+	else p->sleep_avg = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: kernel/sched.c:2914:
+		unsigned long run_time = p->sleep_avg - slice_avg(p);
+		run_time /= w;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#415: FILE: kernel/sysctl.c:76:
+extern int grace_g1;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#416: FILE: kernel/sysctl.c:77:
+extern int grace_g2;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#417: FILE: kernel/sysctl.c:78:
+extern int grace_max;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#426: FILE: kernel/sysctl.c:237:
+ * kern_table.  We use these as one-element integer vectors. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#441: FILE: kernel/sysctl.c:699:
+		.maxlen		= sizeof (int),

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#445: FILE: kernel/sysctl.c:703:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#452: FILE: kernel/sysctl.c:710:
+		.maxlen		= sizeof (int),

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#456: FILE: kernel/sysctl.c:714:
+		.extra1		= &zero,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098508.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 10 checks, 389 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000098508.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
