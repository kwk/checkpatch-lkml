WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: arch/ppc64/kernel/iSeries_htab.c:60:
+	BUG_ON(lhpte.v & HPTE_V_VALID);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <physRpn_to_absRpn>
#104: FILE: arch/ppc64/kernel/iSeries_htab.c:74:
+	hpte.r = (physRpn_to_absRpn(prpn) << HPTE_R_RPN_SHIFT) | rflags;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <iSeries_hpte_getword0>
#137: FILE: arch/ppc64/kernel/iSeries_htab.c:105:
+		hpte_v = iSeries_hpte_getword0(hpte_group + slot_offset);

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#140: FILE: arch/ppc64/kernel/iSeries_htab.c:107:
+		if (! (hpte_v & HPTE_V_BOLTED)) {
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#248: FILE: arch/ppc64/kernel/pSeries_lpar.c:304:
+	if (rflags & (_PAGE_GUARDED|_PAGE_NO_CACHE))
 	                           ^

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_lpar_hpte_getword0>
#285: FILE: arch/ppc64/kernel/pSeries_lpar.c:426:
+			hpte_v = pSeries_lpar_hpte_getword0(slot);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#290: FILE: arch/ppc64/kernel/pSeries_lpar.c:429:
+			if ((HPTE_V_AVPN_VAL(hpte_v) == (vpn >> 11))
+			    && (hpte_v & HPTE_V_VALID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#291: FILE: arch/ppc64/kernel/pSeries_lpar.c:430:
+			    && (hpte_v & HPTE_V_VALID)
+			    && (!!(hpte_v & HPTE_V_SECONDARY) == j)) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#369: FILE: arch/ppc64/mm/hash_native.c:60:
+		if (! (hptep->v & HPTE_V_VALID)) {
 		    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#374: FILE: arch/ppc64/mm/hash_native.c:63:
+			if (! (hptep->v & HPTE_V_VALID))
 			    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#445: FILE: arch/ppc64/mm/hash_native.c:112:
+			if ((hpte_v & HPTE_V_VALID)
+			    && !(hpte_v & HPTE_V_BOLTED))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#492: FILE: arch/ppc64/mm/hash_native.c:166:
+			if ((HPTE_V_AVPN_VAL(hpte_v) == (vpn >> 11))
+			    && (hpte_v & HPTE_V_VALID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#493: FILE: arch/ppc64/mm/hash_native.c:167:
+			    && (hpte_v & HPTE_V_VALID)
+			    && ( !!(hpte_v & HPTE_V_SECONDARY) == j)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#493: FILE: arch/ppc64/mm/hash_native.c:167:
+			    && ( !!(hpte_v & HPTE_V_SECONDARY) == j)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#520: FILE: arch/ppc64/mm/hash_native.c:198:
+	if ((HPTE_V_AVPN_VAL(hpte_v) != avpn)
+	    || !(hpte_v & HPTE_V_VALID)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#558: FILE: arch/ppc64/mm/hash_native.c:275:
+	if ((HPTE_V_AVPN_VAL(hpte_v) != avpn)
+	    || !(hpte_v & HPTE_V_VALID)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#615: FILE: arch/ppc64/mm/hash_native.c:385:
+		if ((HPTE_V_AVPN_VAL(hpte_v) != avpn)
+		    || !(hpte_v & HPTE_V_VALID)) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#690: FILE: arch/ppc64/mm/hugetlbpage.c:629:
+	rflags = 0x2 | (! (pte_val(new_pte) & _PAGE_RW));
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#742: FILE: arch/ppc64/mm/init.c:185:
+				       _PAGE_NO_CACHE|_PAGE_GUARDED|PP_RWXX)
 				                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#742: FILE: arch/ppc64/mm/init.c:185:
+				       _PAGE_NO_CACHE|_PAGE_GUARDED|PP_RWXX)
 				                                   ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#865: FILE: include/asm-ppc64/mmu.h:166:
+	if (! (hpte_v & HPTE_V_LARGE)) {
 	    ^

CHECK:CAMELCASE: Avoid CamelCase: <HvCallHpt_findValid>
#899: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:80:
+static inline u64 HvCallHpt_findValid(hpte_t *hpte, u64 vpn)

CHECK:CAMELCASE: Avoid CamelCase: <HvCallHpt_findNextValid>
#905: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:85:
+static inline u64 HvCallHpt_findNextValid(hpte_t *hpte, u32 hpteIndex,

CHECK:CAMELCASE: Avoid CamelCase: <hpteIndex>
#905: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:85:
+static inline u64 HvCallHpt_findNextValid(hpte_t *hpte, u32 hpteIndex,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:86:
+static inline u64 HvCallHpt_findNextValid(hpte_t *hpte, u32 hpteIndex,
 		u8 bitson, u8 bitsoff)

CHECK:CAMELCASE: Avoid CamelCase: <HvCallHpt_get>
#913: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:92:
+static inline void HvCallHpt_get(hpte_t *hpte, u32 hpteIndex)

CHECK:CAMELCASE: Avoid CamelCase: <HvCallHpt_addValidate>
#919: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:97:
+static inline void HvCallHpt_addValidate(u32 hpteIndex, u32 hBit, hpte_t *hpte)

CHECK:CAMELCASE: Avoid CamelCase: <hBit>
#919: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:97:
+static inline void HvCallHpt_addValidate(u32 hpteIndex, u32 hBit, hpte_t *hpte)

CHECK:CAMELCASE: Avoid CamelCase: <HvCall4>
#923: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:99:
+	HvCall4(HvCallHptAddValidate, hpteIndex, hBit, hpte->v, hpte->r);

CHECK:CAMELCASE: Avoid CamelCase: <HvCallHptAddValidate>
#923: FILE: include/asm-ppc64/iSeries/HvCallHpt.h:99:
+	HvCall4(HvCallHptAddValidate, hpteIndex, hBit, hpte->v, hpte->r);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 1 warnings, 23 checks, 794 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
