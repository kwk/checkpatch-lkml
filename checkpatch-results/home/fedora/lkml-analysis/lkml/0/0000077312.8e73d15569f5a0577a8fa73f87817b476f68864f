ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#44: FILE: drivers/input/joystick/iforce/iforce-ff.c:201:
+static int need_condition_modifier(struct ff_effect* old, struct ff_effect* new)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#44: FILE: drivers/input/joystick/iforce/iforce-ff.c:201:
+static int need_condition_modifier(struct ff_effect* old, struct ff_effect* new)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#56: FILE: drivers/input/joystick/iforce/iforce-ff.c:226:
+static int need_magnitude_modifier(struct ff_effect* old, struct ff_effect* effect)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#56: FILE: drivers/input/joystick/iforce/iforce-ff.c:226:
+static int need_magnitude_modifier(struct ff_effect* old, struct ff_effect* effect)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#69: FILE: drivers/input/joystick/iforce/iforce-ff.c:240:
+static int need_envelope_modifier(struct ff_effect* old, struct ff_effect* effect)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#69: FILE: drivers/input/joystick/iforce/iforce-ff.c:240:
+static int need_envelope_modifier(struct ff_effect* old, struct ff_effect* effect)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#82: FILE: drivers/input/joystick/iforce/iforce-ff.c:270:
+static int need_period_modifier(struct ff_effect* old, struct ff_effect* new)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#82: FILE: drivers/input/joystick/iforce/iforce-ff.c:270:
+static int need_period_modifier(struct ff_effect* old, struct ff_effect* new)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#89: FILE: drivers/input/joystick/iforce/iforce-ff.c:273:
+		printk(KERN_WARNING "iforce.c: bad effect type in need_period_modifier\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'need_period_modifier', this function's name, in a string
#89: FILE: drivers/input/joystick/iforce/iforce-ff.c:273:
+		printk(KERN_WARNING "iforce.c: bad effect type in need_period_modifier\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#101: FILE: drivers/input/joystick/iforce/iforce-ff.c:286:
+static int need_core(struct ff_effect* old, struct ff_effect* new)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#101: FILE: drivers/input/joystick/iforce/iforce-ff.c:286:
+static int need_core(struct ff_effect* old, struct ff_effect* new)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#114: FILE: drivers/input/joystick/iforce/iforce-ff.c:348:
+int iforce_upload_periodic(struct iforce* iforce, struct ff_effect* effect, struct ff_effect *old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#114: FILE: drivers/input/joystick/iforce/iforce-ff.c:348:
+int iforce_upload_periodic(struct iforce* iforce, struct ff_effect* effect, struct ff_effect *old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#155: FILE: drivers/input/joystick/iforce/iforce-ff.c:417:
+int iforce_upload_constant(struct iforce* iforce, struct ff_effect* effect, struct ff_effect* old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#155: FILE: drivers/input/joystick/iforce/iforce-ff.c:417:
+int iforce_upload_constant(struct iforce* iforce, struct ff_effect* effect, struct ff_effect* old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#155: FILE: drivers/input/joystick/iforce/iforce-ff.c:417:
+int iforce_upload_constant(struct iforce* iforce, struct ff_effect* effect, struct ff_effect* old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#195: FILE: drivers/input/joystick/iforce/iforce-ff.c:471:
+int iforce_upload_condition(struct iforce* iforce, struct ff_effect* effect, struct ff_effect* old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#195: FILE: drivers/input/joystick/iforce/iforce-ff.c:471:
+int iforce_upload_condition(struct iforce* iforce, struct ff_effect* effect, struct ff_effect* old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#195: FILE: drivers/input/joystick/iforce/iforce-ff.c:471:
+int iforce_upload_condition(struct iforce* iforce, struct ff_effect* effect, struct ff_effect* old)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#263: FILE: drivers/input/joystick/iforce/iforce.h:179:
+int iforce_upload_periodic(struct iforce*, struct ff_effect*, struct ff_effect* old);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iforce*' should also have an identifier name
#263: FILE: drivers/input/joystick/iforce/iforce.h:179:
+int iforce_upload_periodic(struct iforce*, struct ff_effect*, struct ff_effect* old);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ff_effect*' should also have an identifier name
#263: FILE: drivers/input/joystick/iforce/iforce.h:179:
+int iforce_upload_periodic(struct iforce*, struct ff_effect*, struct ff_effect* old);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#264: FILE: drivers/input/joystick/iforce/iforce.h:180:
+int iforce_upload_constant(struct iforce*, struct ff_effect*, struct ff_effect* old);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iforce*' should also have an identifier name
#264: FILE: drivers/input/joystick/iforce/iforce.h:180:
+int iforce_upload_constant(struct iforce*, struct ff_effect*, struct ff_effect* old);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ff_effect*' should also have an identifier name
#264: FILE: drivers/input/joystick/iforce/iforce.h:180:
+int iforce_upload_constant(struct iforce*, struct ff_effect*, struct ff_effect* old);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#265: FILE: drivers/input/joystick/iforce/iforce.h:181:
+int iforce_upload_condition(struct iforce*, struct ff_effect*, struct ff_effect* old);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct iforce*' should also have an identifier name
#265: FILE: drivers/input/joystick/iforce/iforce.h:181:
+int iforce_upload_condition(struct iforce*, struct ff_effect*, struct ff_effect* old);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ff_effect*' should also have an identifier name
#265: FILE: drivers/input/joystick/iforce/iforce.h:181:
+int iforce_upload_condition(struct iforce*, struct ff_effect*, struct ff_effect* old);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#279: FILE: drivers/input/joystick/iforce/iforce-main.c:87:
+	struct iforce* iforce = (struct iforce*)(dev->private);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#279: FILE: drivers/input/joystick/iforce/iforce-main.c:87:
+	struct iforce* iforce = (struct iforce*)(dev->private);

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: drivers/input/joystick/iforce/iforce-main.c:88:
+	struct iforce* iforce = (struct iforce*)(dev->private);
+	if (value > 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#280: FILE: drivers/input/joystick/iforce/iforce-main.c:88:
+	if (value > 0) {
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#283: FILE: drivers/input/joystick/iforce/iforce-main.c:91:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#283: FILE: drivers/input/joystick/iforce/iforce-main.c:91:
+	else {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#343: FILE: drivers/input/joystick/iforce/iforce-main.c:109:
+	struct iforce* iforce = (struct iforce*)(dev->private);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#343: FILE: drivers/input/joystick/iforce/iforce-main.c:109:
+	struct iforce* iforce = (struct iforce*)(dev->private);

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: drivers/input/joystick/iforce/iforce-main.c:111:
+	unsigned char data[3];
+	data[0] = 0x03;

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#359: FILE: drivers/input/joystick/iforce/iforce-main.c:124:
+static int iforce_upload_effect(struct input_dev *dev, struct ff_effect *effect, struct ff_effect *old)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 122 exceeds 100 columns
#388: FILE: drivers/input/joystick/iforce/iforce-main.c:130:
+		iforce->core_effects[effect->id].flags[0] = (1 << FF_CORE_IS_USED);	/* Only IS_USED bit must be set */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#541: FILE: drivers/input/joystick/iforce/iforce-main.c:357:
+	if (!iforce_get_id_packet(iforce, "N")) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#544: FILE: drivers/input/joystick/iforce/iforce-main.c:360:
+	} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077312.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 13 warnings, 3 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077312.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
