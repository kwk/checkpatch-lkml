WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	           ChangeSet	1.514   -> 1.515  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	 drivers/pci/names.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# 02/08/02	t-kouchi@mvf.biglobe.ne.jp	1.515

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# [PATCH] [PATCH] PCI Hotplug patch to drivers/pci/names.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# I found that both compaq and ibm PCI hotplug driver call pci_scan_slot(),

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# which eventually call pci_name_device() in drivers/pci/names.c.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# pci_name_device() is declared as __devinit while other data are

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# declared as __initdata.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# This may result in undefined behavior for example, /proc/pci.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#46: 
--- a/drivers/pci/names.c	Fri Aug  2 16:49:27 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#53: FILE: drivers/pci/names.c:35:
+#define VENDOR( vendor, name )		static char __vendorstr_##vendor[] __devinitdata = name;

ERROR:SPACING: space prohibited after that open parenthesis '('
#53: FILE: drivers/pci/names.c:35:
+#define VENDOR( vendor, name )		static char __vendorstr_##vendor[] __devinitdata = name;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#53: FILE: drivers/pci/names.c:35:
+#define VENDOR( vendor, name )		static char __vendorstr_##vendor[] __devinitdata = name;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#53: FILE: drivers/pci/names.c:35:
+#define VENDOR( vendor, name )		static char __vendorstr_##vendor[] __devinitdata = name;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#56: FILE: drivers/pci/names.c:37:
+#define DEVICE( vendor, device, name ) 	static char __devicestr_##vendor##device[] __devinitdata = name;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: drivers/pci/names.c:37:
+#define DEVICE( vendor, device, name ) ^Istatic char __devicestr_##vendor##device[] __devinitdata = name;$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#56: FILE: drivers/pci/names.c:37:
+#define DEVICE( vendor, device, name ) 	static char __devicestr_##vendor##device[] __devinitdata = name;

ERROR:SPACING: space prohibited after that open parenthesis '('
#56: FILE: drivers/pci/names.c:37:
+#define DEVICE( vendor, device, name ) 	static char __devicestr_##vendor##device[] __devinitdata = name;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#56: FILE: drivers/pci/names.c:37:
+#define DEVICE( vendor, device, name ) 	static char __devicestr_##vendor##device[] __devinitdata = name;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#56: FILE: drivers/pci/names.c:37:
+#define DEVICE( vendor, device, name ) 	static char __devicestr_##vendor##device[] __devinitdata = name;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#61: FILE: drivers/pci/names.c:41:
+#define VENDOR( vendor, name )		static struct pci_device_info __devices_##vendor[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#61: FILE: drivers/pci/names.c:41:
+#define VENDOR( vendor, name )		static struct pci_device_info __devices_##vendor[] __devinitdata = {

ERROR:SPACING: space prohibited after that open parenthesis '('
#61: FILE: drivers/pci/names.c:41:
+#define VENDOR( vendor, name )		static struct pci_device_info __devices_##vendor[] __devinitdata = {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#61: FILE: drivers/pci/names.c:41:
+#define VENDOR( vendor, name )		static struct pci_device_info __devices_##vendor[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#67: FILE: drivers/pci/names.c:46:
+static struct pci_vendor_info __devinitdata pci_vendor_list[] = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after pci_vendor_list[]
#67: FILE: drivers/pci/names.c:46:
+static struct pci_vendor_info __devinitdata pci_vendor_list[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#76: FILE: drivers/pci/names.c:124:
+void __devinit pci_name_device(struct pci_dev *dev)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442339.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 32 warnings, 0 checks, 30 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000442339.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
