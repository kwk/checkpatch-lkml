WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
diff -uNr linux-2.4.18.S18.sdmany/drivers/scsi/scsi.c linux-2.4.18.S18.sdma=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#72: FILE: drivers/scsi/scsi.c:1555:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#73: FILE: drivers/scsi/scsi.c:1556:
 }
+int __init scsi_find_bdev(int h, int c, int i, int l, const char* tag,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#73: FILE: drivers/scsi/scsi.c:1556:
+int __init scsi_find_bdev(int h, int c, int i, int l, const char* tag,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#74: FILE: drivers/scsi/scsi.c:1557:
+			  char* name, kdev_t *dev)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#76: FILE: drivers/scsi/scsi.c:1559:
+	Scsi_Device *scd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#77: FILE: drivers/scsi/scsi.c:1560:
+	struct Scsi_Host *HBA_ptr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#78: FILE: drivers/scsi/scsi.c:1561:
+	struct Scsi_Device_Template *sg_t =3D scsi_devicelist;
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device_Template>
#78: FILE: drivers/scsi/scsi.c:1561:
+	struct Scsi_Device_Template *sg_t =3D scsi_devicelist;

ERROR:SPACING: spaces required around that '&&' (ctx:WxO)
#80: FILE: drivers/scsi/scsi.c:1563:
+	while (sg_t &&=20
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#80: FILE: drivers/scsi/scsi.c:1563:
+	while (sg_t &&=20
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#83: FILE: drivers/scsi/scsi.c:1566:
+		sg_t =3D sg_t->next;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#87: FILE: drivers/scsi/scsi.c:1570:
+	for (HBA_ptr =3D scsi_hostlist; HBA_ptr; HBA_ptr =3D HBA_ptr->next) {
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#87: FILE: drivers/scsi/scsi.c:1570:
+	for (HBA_ptr =3D scsi_hostlist; HBA_ptr; HBA_ptr =3D HBA_ptr->next) {
 	                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#88: FILE: drivers/scsi/scsi.c:1571:
+		for (scd =3D HBA_ptr->host_queue; scd; scd =3D scd->next) {
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#88: FILE: drivers/scsi/scsi.c:1571:
+		for (scd =3D HBA_ptr->host_queue; scd; scd =3D scd->next) {
 		                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#89: FILE: drivers/scsi/scsi.c:1572:
+			if (scd->host->host_no =3D=3D h &&
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#89: FILE: drivers/scsi/scsi.c:1572:
+			if (scd->host->host_no =3D=3D h &&
 			                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#89: FILE: drivers/scsi/scsi.c:1572:
+			if (scd->host->host_no =3D=3D h &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#90: FILE: drivers/scsi/scsi.c:1573:
+			    scd->channel =3D=3D c &&
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#90: FILE: drivers/scsi/scsi.c:1573:
+			    scd->channel =3D=3D c &&
 			                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#91: FILE: drivers/scsi/scsi.c:1574:
+			    scd->id =3D=3D i &&
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#91: FILE: drivers/scsi/scsi.c:1574:
+			    scd->id =3D=3D i &&
 			               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#92: FILE: drivers/scsi/scsi.c:1575:
+			    scd->lun =3D=3D l) {
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#92: FILE: drivers/scsi/scsi.c:1575:
+			    scd->lun =3D=3D l) {
 			                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: drivers/scsi/scsi.c:151:
+	 * Better use /dev/scsi/hXcXiXlXpX */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: drivers/scsi/scsi.c:271:
 };
+#if defined(CONFIG_SCSI) && !defined(CONFIG_DEVFS_FS)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: drivers/scsi/scsi.c:272:
+int scsi_find_bdev (int, int, int, int, const char*, char*, kdev_t*);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#145: FILE: drivers/scsi/scsi.c:274:
+ * compiled in. Otherwise the initrd stuff needs to take care ... */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#146: FILE: drivers/scsi/scsi.c:275:
+kdev_t __init scsiname_to_kdev_t(char* line)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#148: FILE: drivers/scsi/scsi.c:277:
+	kdev_t dev =3D ROOT_DEV;
 	           ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#149: FILE: drivers/scsi/scsi.c:278:
+	int h, c, i ,l;
 	            ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#149: FILE: drivers/scsi/scsi.c:278:
+	int h, c, i ,l;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: drivers/scsi/scsi.c:279:
+	char *tp =3D 0;
 	         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/scsi/scsi.c:282:
+	if (!strncmp (line, "sd", 2)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#154: FILE: drivers/scsi/scsi.c:283:
+		tp =3D "sd"; line +=3D 2;
 		   ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#154: FILE: drivers/scsi/scsi.c:283:
+		tp =3D "sd"; line +=3D 2;
 		                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#156: FILE: drivers/scsi/scsi.c:285:
+	else if (!strncmp (line, "sr", 2)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#156: FILE: drivers/scsi/scsi.c:285:
+	}
+	else if (!strncmp (line, "sr", 2)) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#157: FILE: drivers/scsi/scsi.c:286:
+		tp =3D "sr"; line +=3D 2;
 		   ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#157: FILE: drivers/scsi/scsi.c:286:
+		tp =3D "sr"; line +=3D 2;
 		                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: drivers/scsi/scsi.c:288:
+	else if (!strncmp (line, "scd", 3)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#159: FILE: drivers/scsi/scsi.c:288:
+	}
+	else if (!strncmp (line, "scd", 3)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: drivers/scsi/scsi.c:289:
+		tp =3D "sr"; line +=3D 3;
 		   ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#160: FILE: drivers/scsi/scsi.c:289:
+		tp =3D "sr"; line +=3D 3;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#162: FILE: drivers/scsi/scsi.c:291:
+=09
 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: drivers/scsi/scsi.c:292:
+	if (strlen (line) < 8 || !tp)

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#165: FILE: drivers/scsi/scsi.c:294:
+=09
 ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#166: FILE: drivers/scsi/scsi.c:295:
+	if (*line++ !=3D 'c')
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#168: FILE: drivers/scsi/scsi.c:297:
+	h =3D simple_strtoul(line, &line, 10);
 	  ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#168: FILE: drivers/scsi/scsi.c:297:
+	h =3D simple_strtoul(line, &line, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#169: FILE: drivers/scsi/scsi.c:298:
+	if (*line++ !=3D 'b')
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#171: FILE: drivers/scsi/scsi.c:300:
+	c =3D simple_strtoul(line, &line, 10);
 	  ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#171: FILE: drivers/scsi/scsi.c:300:
+	c =3D simple_strtoul(line, &line, 10);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#172: FILE: drivers/scsi/scsi.c:301:
+	if (*line++ !=3D 't')
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: drivers/scsi/scsi.c:303:
+	i =3D simple_strtoul(line, &line, 10);
 	  ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#174: FILE: drivers/scsi/scsi.c:303:
+	i =3D simple_strtoul(line, &line, 10);

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#175: FILE: drivers/scsi/scsi.c:304:
+	if (*line++ !=3D 'u')
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#177: FILE: drivers/scsi/scsi.c:306:
+	l =3D simple_strtoul(line, &line, 10);
 	  ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#177: FILE: drivers/scsi/scsi.c:306:
+	l =3D simple_strtoul(line, &line, 10);

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#178: FILE: drivers/scsi/scsi.c:307:
+=09
 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: drivers/scsi/scsi.c:308:
+	if (!scsi_find_bdev (h, c, i, l, tp, nmbuf, &dev)) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#180: FILE: drivers/scsi/scsi.c:309:
+		if (line && *line++ =3D=3D 'p') {
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: drivers/scsi/scsi.c:309:
+		if (line && *line++ =3D=3D 'p') {
 		                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#180: FILE: drivers/scsi/scsi.c:309:
+		if (line && *line++ =3D=3D 'p') {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#181: FILE: drivers/scsi/scsi.c:310:
+			int p =3D simple_strtoul(line, &line, 10);
 			      ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#181: FILE: drivers/scsi/scsi.c:310:
+			int p =3D simple_strtoul(line, &line, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: drivers/scsi/scsi.c:311:
+			int p =3D simple_strtoul(line, &line, 10);
+			dev =3D MKDEV(MAJOR(dev),MINOR(dev)+p);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#182: FILE: drivers/scsi/scsi.c:311:
+			dev =3D MKDEV(MAJOR(dev),MINOR(dev)+p);
 			    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: drivers/scsi/scsi.c:311:
+			dev =3D MKDEV(MAJOR(dev),MINOR(dev)+p);
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#182: FILE: drivers/scsi/scsi.c:311:
+			dev =3D MKDEV(MAJOR(dev),MINOR(dev)+p);
 			                                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: drivers/scsi/scsi.c:312:
+			sprintf (nmbuf+strlen(nmbuf), "%i", p);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#183: FILE: drivers/scsi/scsi.c:312:
+			sprintf (nmbuf+strlen(nmbuf), "%i", p);
 			              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#184: FILE: drivers/scsi/scsi.c:313:
+			printk("found scsi root device %sc%ib%it%iu%ip%i: %s (%02x:%02x)\n",

CHECK:BRACES: Unbalanced braces around else statement
#186: FILE: drivers/scsi/scsi.c:315:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: drivers/scsi/scsi.c:316:
+			printk("found scsi root device %sc%ib%it%iu%i: %s (%02x:%02x)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: drivers/scsi/scsi.c:318:
+		strcpy (root_device_name, nmbuf);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#190: FILE: drivers/scsi/scsi.c:319:
+	} else=20
 	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#190: FILE: drivers/scsi/scsi.c:319:
+	} else=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: drivers/scsi/scsi.c:320:
+		printk("did not find scsi root device %sc%ib%it%iu%i\n",

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#196: FILE: drivers/scsi/scsi.c:325:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#207: FILE: drivers/scsi/scsi.c:807:
+# ifdef CONFIG_SCSI=09
                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: drivers/scsi/scsi.c:808:
+	if (!strncmp (name, "scsi/", 5))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#209: FILE: drivers/scsi/scsi.c:809:
+		ROOT_DEV =3D scsiname_to_kdev_t (name+5);
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#209: FILE: drivers/scsi/scsi.c:809:
+		ROOT_DEV =3D scsiname_to_kdev_t (name+5);
 		                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449912.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 21 warnings, 9 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449912.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
