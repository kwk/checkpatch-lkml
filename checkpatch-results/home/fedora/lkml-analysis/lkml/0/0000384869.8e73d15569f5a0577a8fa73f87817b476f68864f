WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
>      As a result of IPv6 IPsec support, Extension Header processing is devided

WARNING:TYPO_SPELLING: 'devided' may be misspelled - perhaps 'divided'?
#37: 
>      As a result of IPv6 IPsec support, Extension Header processing is devided
                                                                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'extention' may be misspelled - perhaps 'extension'?
#100: FILE: net/transp_v6.h:18:
+/* extention headers */
    ^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: net/transp_v6.h:19:
+extern void				ipv6_hopopts_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: net/transp_v6.h:20:
+extern void				ipv6_rthdr_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: net/transp_v6.h:21:
+extern void				ipv6_frag_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: net/transp_v6.h:22:
+extern void				ipv6_nodata_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: net/transp_v6.h:23:
+extern void				ipv6_destopt_init(void);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: net/xfrm.h:418:
+extern int xfrm6_rcv(struct sk_buff **pskb);

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#155: FILE: ipv4/xfrm_input.c:329:
+	nh_offset = ((unsigned char*)&skb->nh.ipv6h->nexthdr) - skb->nh.raw;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'extention' may be misspelled - perhaps 'extension'?
#190: FILE: ipv6/af_inet6.c:796:
+	/* Init v6 extention headers. */
 	           ^^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'extention' may be misspelled - perhaps 'extension'?
#212: FILE: ipv6/exthdrs.c:22:
+ *				: Register inbound extention header
   				                   ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: ipv6/exthdrs.c:156:
+int ipv6_destopt_rcv(struct sk_buff **skbp) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: ipv6/exthdrs.c:169:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: ipv6/exthdrs.c:176:
+^I^I^I^I^I^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#272: FILE: ipv6/exthdrs.c:181:
+static struct inet6_protocol destopt_protocol =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: ipv6/exthdrs.c:182:
+^I.handler ^I= ^Iipv6_destopt_rcv,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: ipv6/exthdrs.c:187:
+^Iif (inet6_add_protocol(&destopt_protocol, IPPROTO_DSTOPTS) < 0) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#279: FILE: ipv6/exthdrs.c:188:
+		printk(KERN_ERR "ipv6_destopt_init: Could not register protocol\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_destopt_init', this function's name, in a string
#279: FILE: ipv6/exthdrs.c:188:
+		printk(KERN_ERR "ipv6_destopt_init: Could not register protocol\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#298: FILE: ipv6/exthdrs.c:204:
+static struct inet6_protocol nodata_protocol =
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: ipv6/exthdrs.c:211:
+		printk(KERN_ERR "ipv6_nodata_init: Could not register protocol\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_nodata_init', this function's name, in a string
#305: FILE: ipv6/exthdrs.c:211:
+		printk(KERN_ERR "ipv6_nodata_init: Could not register protocol\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#419: FILE: ipv6/exthdrs.c:328:
+static struct inet6_protocol rthdr_protocol =
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#426: FILE: ipv6/exthdrs.c:335:
+		printk(KERN_ERR "ipv6_rthdr_init: Could not register protocol\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_rthdr_init', this function's name, in a string
#426: FILE: ipv6/exthdrs.c:335:
+		printk(KERN_ERR "ipv6_rthdr_init: Could not register protocol\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#542: FILE: ipv6/exthdrs.c:479:
+	if (!pskb_may_pull(skb, (skb->h.raw-skb->data)+8) ||
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#542: FILE: ipv6/exthdrs.c:479:
+	if (!pskb_may_pull(skb, (skb->h.raw-skb->data)+8) ||
 	                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#543: FILE: ipv6/exthdrs.c:480:
+	    !pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#543: FILE: ipv6/exthdrs.c:480:
+	    !pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 	                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#543: FILE: ipv6/exthdrs.c:480:
+	    !pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 	                                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#543: FILE: ipv6/exthdrs.c:480:
+	    !pskb_may_pull(skb, (skb->h.raw-skb->data)+((skb->h.raw[1]+1)<<3))) {
 	                                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#548: FILE: ipv6/exthdrs.c:485:
+	skb->h.raw += (skb->h.raw[1]+1)<<3;
 	                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#548: FILE: ipv6/exthdrs.c:485:
+	skb->h.raw += (skb->h.raw[1]+1)<<3;
 	                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: ipv6/exthdrs.c:487:
+       return -nexthdr;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#554: FILE: ipv6/exthdrs.c:491:
+static struct inet6_protocol hopopts_protocol =
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#561: FILE: ipv6/exthdrs.c:498:
+		printk(KERN_ERR "ipv6_hopopts_init: Could not register protocol\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_hopopts_init', this function's name, in a string
#561: FILE: ipv6/exthdrs.c:498:
+		printk(KERN_ERR "ipv6_hopopts_init: Could not register protocol\n");

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: ipv6/ip6_input.c:20:
+ * ^IMitsuru KANDA @USAGI^I: Remove ipv6_parse_exthdrs().$

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#694: FILE: ipv6/reassembly.c:540:
+	nexthdr = ((struct frag_hdr*)head->h.raw)->nexthdr;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#703: FILE: ipv6/reassembly.c:616:
+	if (!pskb_pull(head, head->h.raw - head->data)) {
+		goto out_fail;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#770: FILE: ipv6/reassembly.c:698:
+static struct inet6_protocol frag_protocol =
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#777: FILE: ipv6/reassembly.c:705:
+		printk(KERN_ERR "ipv6_frag_init: Could not register protocol\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipv6_frag_init', this function's name, in a string
#777: FILE: ipv6/reassembly.c:705:
+		printk(KERN_ERR "ipv6_frag_init: Could not register protocol\n");

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384869.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 31 warnings, 14 checks, 644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384869.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
