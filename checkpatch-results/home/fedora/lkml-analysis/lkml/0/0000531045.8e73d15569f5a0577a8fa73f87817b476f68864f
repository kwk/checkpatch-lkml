ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: drivers/net/natsemi.c:346:
+	struct netdev_desc* rx_ring;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#110: FILE: drivers/net/natsemi.c:347:
+	struct netdev_desc* tx_ring;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#202: FILE: drivers/net/natsemi.c:493:
+			printk(KERN_INFO "%s: ignoring user supplied media type %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/net/natsemi.c:494:
+			printk(KERN_INFO "%s: ignoring user supplied media type %d",
+				dev->name, option & 15);

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: drivers/net/natsemi.c:615:
+	int i;
+	writel(ChipReset, dev->base_addr + ChipCmd);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ChipReset>
#221: FILE: drivers/net/natsemi.c:615:
+	writel(ChipReset, dev->base_addr + ChipCmd);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#221: FILE: drivers/net/natsemi.c:615:
+	writel(ChipReset, dev->base_addr + ChipCmd);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#222: FILE: drivers/net/natsemi.c:616:
+	for (i=0;i<NATSEMI_RESET_TIMEOUT;i++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#222: FILE: drivers/net/natsemi.c:616:
+	for (i=0;i<NATSEMI_RESET_TIMEOUT;i++)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#222: FILE: drivers/net/natsemi.c:616:
+	for (i=0;i<NATSEMI_RESET_TIMEOUT;i++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#222: FILE: drivers/net/natsemi.c:616:
+	for (i=0;i<NATSEMI_RESET_TIMEOUT;i++)
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#222: FILE: drivers/net/natsemi.c:616:
+	for (i=0;i<NATSEMI_RESET_TIMEOUT;i++)
 	                                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#228: FILE: drivers/net/natsemi.c:622:
+	if (i==NATSEMI_RESET_TIMEOUT) {
 	     ^

WARNING:TYPO_SPELLING: 'complet' may be misspelled - perhaps 'complete'?
#230: FILE: drivers/net/natsemi.c:624:
+			printk(KERN_INFO "%s: reset did not complet in %d usec.\n",
 			                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#230: FILE: drivers/net/natsemi.c:624:
+			printk(KERN_INFO "%s: reset did not complet in %d usec.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/net/natsemi.c:625:
+			printk(KERN_INFO "%s: reset did not complet in %d usec.\n",
+			   dev->name, i*5);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#231: FILE: drivers/net/natsemi.c:625:
+			   dev->name, i*5);
 			               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#234: FILE: drivers/net/natsemi.c:628:
+			printk(KERN_DEBUG "%s: reset completed in %d usec.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/net/natsemi.c:629:
+			printk(KERN_DEBUG "%s: reset completed in %d usec.\n",
+			   dev->name, i*5);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#235: FILE: drivers/net/natsemi.c:629:
+			   dev->name, i*5);
 			               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#250: FILE: drivers/net/natsemi.c:644:
+	if (i) return i;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#253: FILE: drivers/net/natsemi.c:647:
+		printk(KERN_DEBUG "%s: netdev_open() irq %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/net/natsemi.c:648:
+		printk(KERN_DEBUG "%s: netdev_open() irq %d.\n",
+			   dev->name, dev->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#266: FILE: drivers/net/natsemi.c:660:
+		printk(KERN_DEBUG "%s: Done netdev_open(), status: %x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/net/natsemi.c:661:
+		printk(KERN_DEBUG "%s: Done netdev_open(), status: %x.\n",
+			   dev->name, (int)readl(ioaddr + ChipCmd));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#271: FILE: drivers/net/natsemi.c:665:
+	np->timer.expires = jiffies + 3*HZ;
 	                               ^

CHECK:CAMELCASE: Avoid CamelCase: <ChipConfig>
#285: FILE: drivers/net/natsemi.c:679:
+	duplex = np->full_duplex || readl(ioaddr + ChipConfig) & 0x20000000 ? 1 : 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#290: FILE: drivers/net/natsemi.c:684:
+			printk(KERN_INFO "%s: Setting %s-duplex based on negotiated link"

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: drivers/net/natsemi.c:685:
+			printk(KERN_INFO "%s: Setting %s-duplex based on negotiated link"
+				   " capability.\n", dev->name,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <TxConfig>
#300: FILE: drivers/net/natsemi.c:694:
+		writel(np->tx_config, ioaddr + TxConfig);

CHECK:CAMELCASE: Avoid CamelCase: <RxConfig>
#301: FILE: drivers/net/natsemi.c:695:
+		writel(np->rx_config, ioaddr + RxConfig);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#312: FILE: drivers/net/natsemi.c:706:
+		printk(KERN_DEBUG "%s: found silicon revision %xh.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/net/natsemi.c:707:
+		printk(KERN_DEBUG "%s: found silicon revision %xh.\n",
+				dev->name, readl(ioaddr + SiliconRev));

CHECK:CAMELCASE: Avoid CamelCase: <SiliconRev>
#313: FILE: drivers/net/natsemi.c:707:
+				dev->name, readl(ioaddr + SiliconRev));

WARNING:TYPO_SPELLING: 'regsiters' may be misspelled - perhaps 'registers'?
#321: FILE: drivers/net/natsemi.c:715:
+	   SiliconRev regsiters says "DP83815CVNG: 00000302h"
 	              ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <RxRingPtr>
#340: FILE: drivers/net/natsemi.c:730:
+	writel(np->ring_dma, ioaddr + RxRingPtr);

CHECK:CAMELCASE: Avoid CamelCase: <TxRingPtr>
#341: FILE: drivers/net/natsemi.c:731:
+	writel(np->ring_dma + RX_RING_SIZE * sizeof(struct netdev_desc), ioaddr + TxRingPtr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: drivers/net/natsemi.c:743:
+^I * to the correct settings. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: drivers/net/natsemi.c:749:
+^I * ^IMXDMA must be <= FLTH$

WARNING:LINE_SPACING: Missing a blank line after declarations
#484: FILE: drivers/net/natsemi.c:833:
+	struct netdev_private *np = dev->priv;
+	np->rx_ring = pci_alloc_consistent(np->pci_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/net/natsemi.c:834:
+	np->rx_ring = pci_alloc_consistent(np->pci_dev,
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#485: FILE: drivers/net/natsemi.c:834:
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),
 				                                          ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#502: FILE: drivers/net/natsemi.c:856:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: drivers/net/natsemi.c:856:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));
 		                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#502: FILE: drivers/net/natsemi.c:856:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));
 		                                                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: drivers/net/natsemi.c:856:
+		np->rx_ring[i].next_desc = cpu_to_le32(np->ring_dma+sizeof(struct netdev_desc)*(i+1));
 		                                                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <DescOwn>
#503: FILE: drivers/net/natsemi.c:857:
+		np->rx_ring[i].cmd_status = cpu_to_le32(DescOwn);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#508: FILE: drivers/net/natsemi.c:861:
+	np->rx_ring[i-1].next_desc = cpu_to_le32(np->ring_dma);
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/net/natsemi.c:871:
+		np->rx_dma[i] = pci_map_single(np->pci_dev,
+						skb->data, skb->len, PCI_DMA_FROMDEVICE);

CHECK:CAMELCASE: Avoid CamelCase: <DescIntr>
#522: FILE: drivers/net/natsemi.c:873:
+		np->rx_ring[i].cmd_status = cpu_to_le32(DescIntr | np->rx_buf_sz);

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#531: FILE: drivers/net/natsemi.c:880:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#531: FILE: drivers/net/natsemi.c:880:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#531: FILE: drivers/net/natsemi.c:880:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#531: FILE: drivers/net/natsemi.c:880:
+					+sizeof(struct netdev_desc)*(i+1+RX_RING_SIZE));
 					                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#536: FILE: drivers/net/natsemi.c:883:
+	np->tx_ring[i-1].next_desc = cpu_to_le32(np->ring_dma
 	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#537: FILE: drivers/net/natsemi.c:884:
+					+sizeof(struct netdev_desc)*(RX_RING_SIZE));
 					^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#537: FILE: drivers/net/natsemi.c:884:
+					+sizeof(struct netdev_desc)*(RX_RING_SIZE));
 					                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/net/natsemi.c:898:
+			pci_unmap_single(np->pci_dev,
+						np->rx_dma[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#561: FILE: drivers/net/natsemi.c:908:
+			pci_unmap_single(np->pci_dev,
+						np->rx_dma[i],

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: drivers/net/natsemi.c:920:
+	struct netdev_private *np = dev->priv;
+	pci_free_consistent(np->pci_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/net/natsemi.c:921:
+	pci_free_consistent(np->pci_dev,
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#574: FILE: drivers/net/natsemi.c:921:
+				sizeof(struct netdev_desc) * (RX_RING_SIZE+TX_RING_SIZE),
 				                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/net/natsemi.c:938:
+	np->tx_dma[entry] = pci_map_single(np->pci_dev,
+				skb->data,skb->len, PCI_DMA_TODEVICE);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: drivers/net/natsemi.c:938:
+				skb->data,skb->len, PCI_DMA_TODEVICE);
 				         ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#593: FILE: drivers/net/natsemi.c:944:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: drivers/net/natsemi.c:977:
+		int entry = np->dirty_tx % TX_RING_SIZE;
+		if (np->tx_ring[entry].cmd_status & cpu_to_le32(DescOwn)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#625: FILE: drivers/net/natsemi.c:979:
+				printk(KERN_DEBUG "%s: tx frame #%d is busy.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/net/natsemi.c:980:
+				printk(KERN_DEBUG "%s: tx frame #%d is busy.\n",
+						dev->name, np->dirty_tx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#630: FILE: drivers/net/natsemi.c:984:
+			printk(KERN_DEBUG "%s: tx frame #%d finished with status %8.8xh.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/net/natsemi.c:985:
+			printk(KERN_DEBUG "%s: tx frame #%d finished with status %8.8xh.\n",
+					dev->name, np->dirty_tx,

WARNING:LINE_SPACING: Missing a blank line after declarations
#638: FILE: drivers/net/natsemi.c:992:
+			int tx_status = le32_to_cpu(np->tx_ring[entry].cmd_status);
+			if (tx_status & 0x04010000) np->stats.tx_aborted_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#638: FILE: drivers/net/natsemi.c:992:
+			if (tx_status & 0x04010000) np->stats.tx_aborted_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#639: FILE: drivers/net/natsemi.c:993:
+			if (tx_status & 0x02000000) np->stats.tx_fifo_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#640: FILE: drivers/net/natsemi.c:994:
+			if (tx_status & 0x01000000) np->stats.tx_carrier_errors++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#641: FILE: drivers/net/natsemi.c:995:
+			if (tx_status & 0x00200000) np->stats.tx_window_errors++;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: drivers/net/natsemi.c:998:
+		pci_unmap_single(np->pci_dev,np->tx_dma[entry],
 		                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/net/natsemi.c:999:
+		pci_unmap_single(np->pci_dev,np->tx_dma[entry],
+					np->tx_skbuff[entry]->len,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#652: FILE: drivers/net/natsemi.c:1006:
+	if (netif_queue_stopped(dev)
+		&& np->cur_tx - np->dirty_tx < TX_QUEUE_LEN - 4) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#658: FILE: drivers/net/natsemi.c:1012:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#686: FILE: drivers/net/natsemi.c:1041:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxDone>
#686: FILE: drivers/net/natsemi.c:1041:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxIntr>
#686: FILE: drivers/net/natsemi.c:1041:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxIdle>
#686: FILE: drivers/net/natsemi.c:1041:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxErr>
#686: FILE: drivers/net/natsemi.c:1041:
+		if (intr_status & (IntrTxDone | IntrTxIntr | IntrTxIdle | IntrTxErr) ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/net/natsemi.c:1107:
+				pci_dma_sync_single(np->pci_dev, np->rx_dma[entry],
+							np->rx_skbuff[entry]->len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#726: FILE: drivers/net/natsemi.c:1118:
+				pci_unmap_single(np->pci_dev, np->rx_dma[entry],
+							np->rx_skbuff[entry]->len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: drivers/net/natsemi.c:1146:
+			np->rx_dma[entry] = pci_map_single(np->pci_dev,
+							skb->data, skb->len, PCI_DMA_FROMDEVICE);

WARNING:TYPO_SPELLING: 'theshold' may be misspelled - perhaps 'threshold'?
#781: FILE: drivers/net/natsemi.c:1178:
+			printk(KERN_NOTICE "%s: increasing Tx theshold, new tx cfg %8.8xh.\n",
 			                                      ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#781: FILE: drivers/net/natsemi.c:1178:
+			printk(KERN_NOTICE "%s: increasing Tx theshold, new tx cfg %8.8xh.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: drivers/net/natsemi.c:1179:
+			printk(KERN_NOTICE "%s: increasing Tx theshold, new tx cfg %8.8xh.\n",
+					dev->name, np->tx_config);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#798: FILE: drivers/net/natsemi.c:1222:
+#if 0

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#809: FILE: drivers/net/natsemi.c:1243:
+static unsigned ether_crc_le(int length, unsigned char *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: drivers/net/natsemi.c:1245:
+    u32 crc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/net/natsemi.c:1246:
+    u8 cur_byte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: drivers/net/natsemi.c:1247:
+    u8 msb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: drivers/net/natsemi.c:1248:
+    u8 byte, bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: drivers/net/natsemi.c:1250:
+    crc = ~0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: drivers/net/natsemi.c:1251:
+    for (byte=0; byte<length; byte++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#817: FILE: drivers/net/natsemi.c:1251:
+    for (byte=0; byte<length; byte++) {
              ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#817: FILE: drivers/net/natsemi.c:1251:
+    for (byte=0; byte<length; byte++) {
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: drivers/net/natsemi.c:1252:
+        cur_byte = *data++;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/net/natsemi.c:1252:
+        cur_byte = *data++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: drivers/net/natsemi.c:1253:
+        for (bit=0; bit<8; bit++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: drivers/net/natsemi.c:1253:
+        for (bit=0; bit<8; bit++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#819: FILE: drivers/net/natsemi.c:1253:
+        for (bit=0; bit<8; bit++) {
+            msb = crc >> 31;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#819: FILE: drivers/net/natsemi.c:1253:
+        for (bit=0; bit<8; bit++) {
                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#819: FILE: drivers/net/natsemi.c:1253:
+        for (bit=0; bit<8; bit++) {
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: drivers/net/natsemi.c:1254:
+            msb = crc >> 31;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: drivers/net/natsemi.c:1254:
+            msb = crc >> 31;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: drivers/net/natsemi.c:1255:
+            crc <<= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: drivers/net/natsemi.c:1255:
+            crc <<= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: drivers/net/natsemi.c:1256:
+            if (msb ^ (cur_byte & 1)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: drivers/net/natsemi.c:1256:
+            if (msb ^ (cur_byte & 1)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: drivers/net/natsemi.c:1257:
+                crc ^= DP_POLYNOMIAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: drivers/net/natsemi.c:1257:
+                crc ^= DP_POLYNOMIAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: drivers/net/natsemi.c:1258:
+                crc |= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/net/natsemi.c:1258:
+                crc |= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: drivers/net/natsemi.c:1259:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: drivers/net/natsemi.c:1259:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: drivers/net/natsemi.c:1260:
+            cur_byte >>= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: drivers/net/natsemi.c:1260:
+            cur_byte >>= 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: drivers/net/natsemi.c:1261:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: drivers/net/natsemi.c:1261:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: drivers/net/natsemi.c:1262:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: drivers/net/natsemi.c:1263:
+    crc >>= 23;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: drivers/net/natsemi.c:1265:
+    return (crc);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#832: FILE: drivers/net/natsemi.c:1265:
+    return (crc);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:CAMELCASE: Avoid CamelCase: <RxFilterAddr>
#846: FILE: drivers/net/natsemi.c:1296:
+			writew(HASH_TABLE + i, ioaddr + RxFilterAddr);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#854: FILE: drivers/net/natsemi.c:1304:
+}
+static void set_rx_mode(struct net_device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#857: FILE: drivers/net/natsemi.c:1307:
+	struct netdev_private *np = dev->priv;
+	spin_lock_irq(&np->lock);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 45 warnings, 53 checks, 829 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531045.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
