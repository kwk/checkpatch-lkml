ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#62: FILE: fs/ext2/namei.c:61:
+					     struct dentry * dentry,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#71: FILE: fs/ext2/namei.c:73:
+	if(dentry->d_fsdata != NULL) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dentry->d_fsdata"
#71: FILE: fs/ext2/namei.c:73:
+	if(dentry->d_fsdata != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: fs/ext2/namei.c:74:
+		struct buffer_head * bh;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: fs/ext2/namei.c:75:
+		struct ext2_dir_entry_2 * de;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#84: FILE: fs/ext2/namei.c:86:
+		if (!buffer_uptodate(bh)) {
+			ll_rw_block (READ, 1, &bh);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: fs/ext2/namei.c:87:
+			ll_rw_block (READ, 1, &bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#87: FILE: fs/ext2/namei.c:89:
+		wait_on_buffer (bh);

CHECK:SPACING: No space is necessary after a cast
#95: FILE: fs/ext2/namei.c:97:
+		de = (struct ext2_dir_entry_2 *) (bh->b_data+dentry->d_time);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#95: FILE: fs/ext2/namei.c:97:
+		de = (struct ext2_dir_entry_2 *) (bh->b_data+dentry->d_time);
 		                                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#96: FILE: fs/ext2/namei.c:98:
+		if(!ext2_match (dentry->d_name.len, dentry->d_name.name, de)) {

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: fs/ext2/namei.c:98:
+		if(!ext2_match (dentry->d_name.len, dentry->d_name.name, de)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: fs/ext2/namei.c:99:
+			ext2_error (sb, "ext2_find_entry",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: fs/ext2/namei.c:100:
+			ext2_error (sb, "ext2_find_entry",
+					    "bad cached directory pos");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#103: FILE: fs/ext2/namei.c:105:
+		/* found a match -
+		   just to be sure, do a full check */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#103: FILE: fs/ext2/namei.c:105:
+		   just to be sure, do a full check */

CHECK:SPACING: No space is necessary after a cast
#123: FILE: fs/ext2/namei.c:165:
+			if ((char *) de + dentry->d_name.len <= dlimit &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: fs/ext2/namei.c:166:
+			    ext2_match (dentry->d_name.len, dentry->d_name.name, de)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#132: FILE: fs/ext2/namei.c:176:
+				dentry->d_fsdata = (void*)bh->b_blocknr;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: fs/ext2/namei.c:177:
+				dentry->d_time = ((long)de)-((long)bh->b_data);
 				                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: fs/ext2/namei.c:216:
+	bh = ext2_find_entry (dir, dentry, &de);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/ext2/namei.c:253:
+static int ext2_add_entry (struct inode * dir, struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: fs/ext2/namei.c:253:
+static int ext2_add_entry (struct inode * dir, struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: fs/ext2/namei.c:254:
+static int ext2_add_entry (struct inode * dir, struct dentry *dentry,
 		    struct inode *inode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: fs/ext2/namei.c:305:
+		if (ext2_match (dentry->d_name.len, dentry->d_name.name, de)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: fs/ext2/namei.c:306:
+			brelse (bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: fs/ext2/namei.c:327:
+			memcpy (de->name, dentry->d_name.name, de->name_len);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#191: FILE: fs/ext2/namei.c:328:
+			dentry->d_fsdata = (void*)bh->b_blocknr;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#192: FILE: fs/ext2/namei.c:329:
+			dentry->d_time = ((long)de)-((long)bh->b_data);
 			                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#202: FILE: fs/ext2/namei.c:420:
+	err = ext2_add_entry (dir, dentry, inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#212: FILE: fs/ext2/namei.c:441:
+	err = ext2_add_entry (dir, dentry, inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: fs/ext2/namei.c:500:
+	err = ext2_add_entry (dir, dentry, inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: fs/ext2/namei.c:586:
+	bh = ext2_find_entry (dir, dentry, &de);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: fs/ext2/namei.c:630:
+	bh = ext2_find_entry (dir, dentry, &de);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#248: FILE: fs/ext2/namei.c:650:
+	dentry->d_fsdata=NULL;	/* flush the cached lookup */
 	                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: fs/ext2/namei.c:693:
+	err = ext2_add_entry (dir, dentry, inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: fs/ext2/namei.c:718:
+	err = ext2_add_entry (dir, dentry, inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: fs/ext2/namei.c:748:
+	old_bh = ext2_find_entry (old_dir, old_dentry, &old_de);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: fs/ext2/namei.c:761:
+	new_bh = ext2_find_entry (new_dir, new_dentry, &new_de);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: fs/ext2/namei.c:788:
+		retval = ext2_add_entry (new_dir, new_dentry,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 23 warnings, 8 checks, 245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550114.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
