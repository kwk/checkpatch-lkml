ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: fs/reiserfs/inode.c:529:
+    /* space reserved in transaction batch: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: fs/reiserfs/inode.c:530:
+        . 3 balancings in direct->indirect conversion$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#51: FILE: fs/reiserfs/inode.c:530:
+    /* space reserved in transaction batch: 
+        . 3 balancings in direct->indirect conversion

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: fs/reiserfs/inode.c:531:
+        . 1 block involved into reiserfs_update_sd()$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#54: FILE: fs/reiserfs/inode.c:533:
+       can incur (much) more that 3 balancings. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: fs/reiserfs/inode.c:534:
+    int jbegin_count = JOURNAL_PER_BALANCE_CNT * 3 + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: fs/reiserfs/inode.c:537:
+    loff_t new_offset = (((loff_t)block) << inode->i_sb->s_blocksize_bits) + 1 ;$

WARNING:SPACING: space prohibited before semicolon
#59: FILE: fs/reiserfs/inode.c:537:
+    loff_t new_offset = (((loff_t)block) << inode->i_sb->s_blocksize_bits) + 1 ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/reiserfs/inode.c:544:
+    if (block < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/reiserfs/inode.c:547:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/reiserfs/inode.c:571:
+    make_cpu_key (&key, inode, new_offset,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#90: FILE: fs/reiserfs/inode.c:571:
+    make_cpu_key (&key, inode, new_offset,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/reiserfs/inode.c:573:
+    if ((new_offset + inode->i_sb->s_blocksize - 1) > inode->i_size) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: fs/reiserfs/inode.c:631:
+	unfm_ptr = le32_to_cpu (item[pos_in_item]);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#108: FILE: fs/reiserfs/inode.c:632:
+	if (unfm_ptr == 0) {
[...]
 	    reiserfs_prepare_for_journal(inode->i_sb, bh, 1) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#133: FILE: fs/reiserfs/inode.c:824:
 	if (retval == POSITION_FOUND) {
+	    reiserfs_warning ("vs-825: reiserfs_get_block: "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: fs/reiserfs/inode.c:825:
+	    reiserfs_warning ("vs-825: reiserfs_get_block: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'reiserfs_get_block', this function's name, in a string
#136: FILE: fs/reiserfs/inode.c:825:
+	    reiserfs_warning ("vs-825: reiserfs_get_block: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#137: FILE: fs/reiserfs/inode.c:826:
+	    reiserfs_warning ("vs-825: reiserfs_get_block: "
+			      "%k should not be found\n", &key);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 16 warnings, 0 checks, 91 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515966.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
