WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux.vanilla-2.6.8-rc2/drivers/char/amiserial.c linux-2.6.8-rc2/drivers/char/amiserial.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: drivers/char/amiserial.c:1628:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: drivers/char/amiserial.c:1636:
+		printk("serdatr = %d ...", lsr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#86: FILE: drivers/char/amiserial.c:1648:
+	printk("lsr = %d ...done\n", lsr);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#96: FILE: drivers/char/cyclades.c:961:
 	if (cyz_rx_full_timer[info->line].function == NULL) {
+	    cyz_rx_full_timer[info->line].expires = 1;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#122: FILE: drivers/char/cyclades.c:1914:
+	static volatile struct FIRM_ID *firm_id;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#123: FILE: drivers/char/cyclades.c:1915:
+	static volatile struct ZFW_CTRL *zfw_ctrl;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#124: FILE: drivers/char/cyclades.c:1916:
+	static volatile struct BOARD_CTRL *board_ctrl;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#125: FILE: drivers/char/cyclades.c:1917:
+	static volatile struct CH_CTRL *ch_ctrl;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#126: FILE: drivers/char/cyclades.c:1918:
+	static volatile struct BUF_CTRL *buf_ctrl;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/char/cyclades.c:1921:
+    cyz_timerlist.expires = HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/char/cyclades.c:1956:
+    add_timeout(&cyz_timerlist);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#191: FILE: drivers/char/dtlk.c:257:
+	expires = 3*HZ / 100;
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#201: FILE: drivers/char/dtlk.c:382:
+	printk(" dtlk_readable=%u", inb_p(dtlk_port_lpc) != 0x7f);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#213: FILE: drivers/char/epca.c:1809:
+	mod_timeout(&epca_timer, HZ/25);
 	                           ^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#234: FILE: drivers/char/isicom.c:156:
+			msleep(10);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#250: FILE: drivers/char/isicom.c:469:
+	tx.expires = HZ/100;
 	               ^

CHECK:CAMELCASE: Avoid CamelCase: <moxaTimer>
#280: FILE: drivers/char/moxa.c:366:
+	moxaTimer.expires = (HZ / 50);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <moxaEmptyTimer>
#316: FILE: drivers/char/moxa.c:1104:
+	moxaEmptyTimer[ch->port].expires = HZ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: drivers/char/moxa.c:2757:
+	struct timer_list t;
+	init_timer(&t);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <moxaFuncTout>
#373: FILE: drivers/char/moxa.c:2758:
+	t.expires = moxaFuncTout;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: drivers/char/moxa.c:2760:
+^Iadd_timeout(&t);^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#381: FILE: drivers/char/moxa.c:2764:
+		if (!timer_pending(&t)) {
 			return;
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#394: FILE: drivers/char/moxa.c:2795:
+	msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#403: FILE: drivers/char/moxa.c:2966:
+				msleep(10);	/* delay 10 ms */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#412: FILE: drivers/char/moxa.c:2978:
+			msleep(10);	/* delay 10 ms */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#421: FILE: drivers/char/moxa.c:2989:
+		msleep(10);	/* delay 10 ms */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#430: FILE: drivers/char/moxa.c:2999:
+		msleep(10);	/* delay 10 ms */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#439: FILE: drivers/char/moxa.c:3041:
+				msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#448: FILE: drivers/char/moxa.c:3052:
+			msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#457: FILE: drivers/char/moxa.c:3062:
+		msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#466: FILE: drivers/char/moxa.c:3081:
+		msleep(10);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#475: FILE: drivers/char/moxa.c:3095:
+		msleep(10);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/char/n_r3964.c:449:
+      mod_timeout(&pInfo->tmr, R3964_TO_QVZ);$

CHECK:CAMELCASE: Avoid CamelCase: <pInfo>
#487: FILE: drivers/char/n_r3964.c:449:
+      mod_timeout(&pInfo->tmr, R3964_TO_QVZ);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/char/n_r3964.c:477:
+      mod_timeout(&pInfo->tmr, R3964_TO_QVZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/char/n_r3964.c:536:
+      mod_timeout(&pInfo->tmr, R3964_TO_QVZ);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: drivers/char/nwflash.c:425:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: drivers/char/nwflash.c:498:
+^I $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#607: FILE: drivers/char/nwflash.c:509:
 		if (__get_user(c2, buf + offset))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: drivers/char/nwflash.c:574:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: drivers/char/nwflash.c:631:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#682: FILE: drivers/char/pcxx.c:1551:
+	mod_timeout(&pcxx_timer, HZ/25);
 	                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#691: FILE: drivers/char/pcxx.c:1596:
+	mod_timeout(&pcxx_timer, HZ/25);
 	                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#739: FILE: drivers/char/rocket.c:1520:
+	printk(KERN_INFO "In RP_wait_until_sent(%d)...", timeout);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#752: FILE: drivers/char/rocket.c:1536:
+/* FIXME: Does this check actually matter anyway ? Do we need an
+   upstream "time_remaining(&t)) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#752: FILE: drivers/char/rocket.c:1536:
+   upstream "time_remaining(&t)) */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#753: FILE: drivers/char/rocket.c:1537:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: drivers/char/rocket.c:1540:
+#endif^I^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#768: FILE: drivers/char/rocket.c:1555:
+	printk(KERN_INFO "txcnt = %d ...done\n", txcnt);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#780: FILE: drivers/char/rtc.c:242:
+		mod_timeout(&rtc_irq_timer, HZ/rtc_freq + 2*HZ/100);
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#780: FILE: drivers/char/rtc.c:242:
+		mod_timeout(&rtc_irq_timer, HZ/rtc_freq + 2*HZ/100);
 		                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#780: FILE: drivers/char/rtc.c:242:
+		mod_timeout(&rtc_irq_timer, HZ/rtc_freq + 2*HZ/100);
 		                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#790: FILE: drivers/char/rtc.c:425:
+			rtc_irq_timer.expires = HZ/rtc_freq + 2*HZ/100;
 			                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#790: FILE: drivers/char/rtc.c:425:
+			rtc_irq_timer.expires = HZ/rtc_freq + 2*HZ/100;
 			                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#790: FILE: drivers/char/rtc.c:425:
+			rtc_irq_timer.expires = HZ/rtc_freq + 2*HZ/100;
 			                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#800: FILE: drivers/char/rtc.c:1099:
+		mod_timeout(&rtc_irq_timer,HZ/rtc_freq + 2*HZ/100);
 		                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#800: FILE: drivers/char/rtc.c:1099:
+		mod_timeout(&rtc_irq_timer,HZ/rtc_freq + 2*HZ/100);
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#800: FILE: drivers/char/rtc.c:1099:
+		mod_timeout(&rtc_irq_timer,HZ/rtc_freq + 2*HZ/100);
 		                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#800: FILE: drivers/char/rtc.c:1099:
+		mod_timeout(&rtc_irq_timer,HZ/rtc_freq + 2*HZ/100);
 		                                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#813: FILE: drivers/char/scan_keyb.c:33:
+static int scan_jiffies = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#814: FILE: drivers/char/scan_keyb.c:34:
+static struct scan_keyboard *keyboards = NULL;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#871: FILE: drivers/char/specialix.c:347:
+^Imsleep(HZ/20); ^I^I                     /* Delay 0.05 sec            */$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#871: FILE: drivers/char/specialix.c:347:
+	msleep(HZ/20); 		                     /* Delay 0.05 sec            */
 	         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: drivers/char/specialix.c:465:
+^I^Imsleep(HZ/20);^I       ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#891: FILE: drivers/char/specialix.c:465:
+^I^Imsleep(HZ/20);^I       ^I^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#891: FILE: drivers/char/specialix.c:465:
+		msleep(HZ/20);	       		
 		         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/char/stallion.c:1852:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#952: FILE: drivers/char/sx.c:1299:
+	add_timeout (&board->timer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#961: FILE: drivers/char/sx.c:1517:
+	sx_dprintk (SX_DEBUG_CLOSE, "waited %d jiffies for close. count=%d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#991: FILE: drivers/char/synclink.c:3328:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#996: FILE: drivers/char/synclink.c:3333:
 	if (timeout)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: drivers/char/synclink.c:5832:
+^I^I^Iadd_timeout(&info->tx_timer);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/char/synclinkmp.c:1131:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1179: FILE: drivers/char/synclinkmp.c:1162:
 	if (timeout)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1185: FILE: drivers/char/synclinkmp.c:1167:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1193: FILE: drivers/char/synclinkmp.c:1174:
+			if (timeout && !timer_pending(&t)))

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1202: FILE: drivers/char/synclinkmp.c:1185:
+			if (timeout && !timer_pending(&t)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1254: FILE: drivers/char/tpqic02.c:517:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1267: FILE: drivers/char/tpqic02.c:531:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: drivers/char/tpqic02.c:534:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: drivers/char/tpqic02.c:539:
+^I$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1280: FILE: drivers/char/tpqic02.c:542:
+	while (((stat = inb_p(QIC02_STAT_PORT) & QIC02_STAT_MASK) == QIC02_STAT_MASK)  && timeout_pending(&t))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1297: FILE: drivers/char/tpqic02.c:560:
+^I$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1302: FILE: drivers/char/tpqic02.c:564:
+	while (((stat = inb_p(QIC02_STAT_PORT) & QIC02_STAT_MASK) == QIC02_STAT_MASK) && timer_pending(&t)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1395: FILE: include/linux/timer.h:69:
+extern int mod_timeout(struct timer_list *timer, unsigned long expires);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1396: FILE: include/linux/timer.h:70:
+extern void timer_noop(unsigned long unused);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1417: FILE: include/linux/timer.h:105:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: include/linux/timer.h:105:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1418: FILE: include/linux/timer.h:106:
+static inline void add_timeout(struct timer_list * timer)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#1420: FILE: include/linux/timer.h:108:
+	if(timer->function == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!timer->function"
#1420: FILE: include/linux/timer.h:108:
+	if(timer->function == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1423: FILE: include/linux/timer.h:111:
+	/* This will shift when we go tickless, for now the goal
+	   is to get jiffies in one place only */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1423: FILE: include/linux/timer.h:111:
+	   is to get jiffies in one place only */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1494: FILE: kernel/timer.c:296:
+	BUG_ON(!timer->function);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1510: FILE: kernel/timer.c:312:
+EXPORT_SYMBOL(mod_timeout);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1520: FILE: kernel/timer.c:455:
+ * timer_noop ^I-^Inull timer function$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: kernel/timer.c:461:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: kernel/timer.c:461:
+ $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1531: FILE: kernel/timer.c:466:
+EXPORT_SYMBOL(timer_noop);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265645.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 47 warnings, 23 checks, 1325 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265645.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
