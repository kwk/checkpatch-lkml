WARNING:TYPO_SPELLING: 'continously' may be misspelled - perhaps 'continuously'?
#50: 
continously on a number of computers for almost two years, although
^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#77: 
[2] ftp://ftp.yggdrasil.com/pub/dist/device_control/devfs/devfs_helper/devfs_helper-0.2.tar.gz

ERROR:SPACING: space required after that ',' (ctx:VxV)
#99: FILE: include/linux/devfs_fs_kernel.h:15:
+#define devfs_mk_cdev(dev, mode, fmt...)	devfs_mk_bdev(dev,mode,fmt)
                                         	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#99: FILE: include/linux/devfs_fs_kernel.h:15:
+#define devfs_mk_cdev(dev, mode, fmt...)	devfs_mk_bdev(dev,mode,fmt)
                                         	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: include/linux/devfs_fs_kernel.h:17:
+extern int devfs_mk_symlink (const char *link_contents, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: include/linux/devfs_fs_kernel.h:17:
+extern int devfs_mk_symlink (const char *link_contents, const char *fmt, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#110: FILE: include/linux/devfs_fs_kernel.h:34:
 }
+static inline int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: include/linux/devfs_fs_kernel.h:35:
+devfs_mk_symlink (const char *link_contents, const char *fmt, ...)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#122: FILE: fs/compat_ioctl.c:415:
+#if defined(CONFIG_NET) || defined(CONFIG_NET_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#131: FILE: fs/compat_ioctl.c:3169:
+#if defined(CONFIG_NET) || defined(CONFIG_NET_MODULE)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: fs/devfs/fs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#148: FILE: fs/devfs/fs.c:2:
+/*
+  Device File System implementation as an instance of trapfs.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: fs/devfs/fs.c:3:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#163: FILE: fs/devfs/fs.c:17:
+  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#164: FILE: fs/devfs/fs.c:18:
+  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: fs/devfs/fs.c:36:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#195: FILE: fs/devfs/fs.c:49:
+			printk (KERN_ERR "devfs_get_sb: unable to find %s.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: fs/devfs/fs.c:49:
+			printk (KERN_ERR "devfs_get_sb: unable to find %s.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'devfs_get_sb', this function's name, in a string
#195: FILE: fs/devfs/fs.c:49:
+			printk (KERN_ERR "devfs_get_sb: unable to find %s.\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: Unbalanced braces around else statement
#197: FILE: fs/devfs/fs.c:51:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (slavefs->get_sb)
#198: FILE: fs/devfs/fs.c:52:
+			devfs_sb = (slavefs->get_sb)(fs_type, flags, dev_name,

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#201: FILE: fs/devfs/fs.c:55:
+				printk (KERN_ERR "devfs_get_sb: "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: fs/devfs/fs.c:55:
+				printk (KERN_ERR "devfs_get_sb: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'devfs_get_sb', this function's name, in a string
#201: FILE: fs/devfs/fs.c:55:
+				printk (KERN_ERR "devfs_get_sb: "

WARNING:SPLIT_STRING: quoted string split across lines
#202: FILE: fs/devfs/fs.c:56:
+				printk (KERN_ERR "devfs_get_sb: "
+					"slavefs_get_sb failed.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#205: FILE: fs/devfs/fs.c:59:
+
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: fs/devfs/fs.c:71:
+	BUG_ON(sb != devfs_sb);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#221: FILE: fs/devfs/fs.c:75:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#237: FILE: fs/devfs/fs.c:91:
+	if (initialized)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#239: FILE: fs/devfs/fs.c:93:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#248: FILE: fs/devfs/fs.c:102:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#267: FILE: fs/devfs/interface.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#268: FILE: fs/devfs/interface.c:2:
+/*
+    Device File System (devfs) - device interface routines

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: fs/devfs/interface.c:7:
+
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#288: FILE: fs/devfs/interface.c:22:
+    License along with this library; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#289: FILE: fs/devfs/interface.c:23:
+    Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#293: FILE: fs/devfs/interface.c:27:
+/* Change log:
+	2003.02.24 - Maneesh Soni <maneesh@in.ibm.com> made it work with

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: fs/devfs/interface.c:45:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: fs/devfs/interface.c:46:
+	
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#328: FILE: fs/devfs/interface.c:62:
+/*
+   walk_parents expects to be called with parent->d_inode->i_sem

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#361: FILE: fs/devfs/interface.c:95:
+	/*
+	  FUTURE: parent can be null if the kernel has devfs support

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: fs/devfs/interface.c:101:
+	if(!parent || !parent->d_inode)

ERROR:SPACING: space required before the open parenthesis '('
#372: FILE: fs/devfs/interface.c:106:
+	for(;;) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#377: FILE: fs/devfs/interface.c:111:
+		/* paths passed to devfs_mk_* must not end in "/".
+		   It's too much of a pain to deal with, so we just

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#378: FILE: fs/devfs/interface.c:112:
+		   declare that to be a bug in the calling device driver. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#379: FILE: fs/devfs/interface.c:113:
+		BUG_ON(*path == '\0');

CHECK:LINE_SPACING: Please don't use multiple blank lines
#381: FILE: fs/devfs/interface.c:115:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slash"
#387: FILE: fs/devfs/interface.c:121:
+		if (slash == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#435: FILE: fs/devfs/interface.c:169:
+	if (IS_ERR(dentry))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#437: FILE: fs/devfs/interface.c:171:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#450: FILE: fs/devfs/interface.c:184:
+int devfs_mk_symlink (const char *link_contents, const char *fmt, ...)

CHECK:BRACES: braces {} should be used on all arms of this statement
#464: FILE: fs/devfs/interface.c:198:
+	if (IS_ERR(dentry))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#466: FILE: fs/devfs/interface.c:200:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#493: FILE: fs/devfs/interface.c:227:
+	if (IS_ERR(dentry))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#495: FILE: fs/devfs/interface.c:229:
+	else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "devfs_root"
#565: FILE: fs/devfs/interface.c:299:
+	if (devfs_root != NULL)	/* FIXME? Can this happen? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#569: FILE: fs/devfs/interface.c:303:
+	devfs_init();		/* Safe to call repeatedly if devfs
+				   is compiled into the kernel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#569: FILE: fs/devfs/interface.c:303:
+				   is compiled into the kernel. */

CHECK:BRACES: braces {} should be used on all arms of this statement
#573: FILE: fs/devfs/interface.c:307:
+	if (IS_ERR(vfsmount))
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#575: FILE: fs/devfs/interface.c:309:
+		return PTR_ERR(vfsmount);
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#575: FILE: fs/devfs/interface.c:309:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#581: FILE: fs/devfs/interface.c:315:
+void __init mount_devfs_fs (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: fs/devfs/interface.c:318:
+		int err = do_mount ("none", devfs_mountpoint, dev_fs_type, 0, "");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#587: FILE: fs/devfs/interface.c:321:
+			printk (KERN_INFO "Mounted devfs on /dev\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#587: FILE: fs/devfs/interface.c:321:
+			printk (KERN_INFO "Mounted devfs on /dev\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#589: FILE: fs/devfs/interface.c:323:
+			printk ("(): unable to mount devfs, err: %d\n", err);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#589: FILE: fs/devfs/interface.c:323:
+			printk ("(): unable to mount devfs, err: %d\n", err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: fs/devfs/interface.c:327:
+#else $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#595: FILE: fs/devfs/interface.c:329:
+void __init mount_devfs_fs (void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#604: FILE: fs/devfs/internal.h:1:
+#ifndef DEVFS_INTERNAL_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#607: FILE: fs/devfs/internal.h:4:
+extern int __init devfs_init(void);

WARNING:TYPO_SPELLING: 'deamon' may be misspelled - perhaps 'daemon'?
#913: FILE: Documentation/filesystems/devfs/small-devfs:14:
+devfs_helper is not a deamon.  Instead, the new devfs invokes
                       ^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000233449.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 37 warnings, 24 checks, 861 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000233449.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
