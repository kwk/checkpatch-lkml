WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#17: 
Subject: [PATCH 7/10] UML - Sparse cleanups

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#67: FILE: arch/um/drivers/harddog_kern.c:121:
+	void __user *argp= (void __user *)arg;
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#77: FILE: arch/um/drivers/harddog_kern.c:131:
+			if(copy_to_user(argp, &ident, sizeof(ident)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#83: FILE: arch/um/drivers/harddog_kern.c:136:
+			return put_user(0,(int __user *)argp);
 			                 ^

CHECK:SPACING: No space is necessary after a cast
#116: FILE: arch/um/drivers/hostaudio_kern.c:155:
+		if(get_user(data, (int __user *) arg))

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: arch/um/drivers/hostaudio_kern.c:155:
+		if(get_user(data, (int __user *) arg))

CHECK:SPACING: No space is necessary after a cast
#125: FILE: arch/um/drivers/hostaudio_kern.c:171:
+		if(put_user(data, (int __user *) arg))

ERROR:SPACING: space required before the open parenthesis '('
#125: FILE: arch/um/drivers/hostaudio_kern.c:171:
+		if(put_user(data, (int __user *) arg))

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#229: FILE: arch/um/kernel/process_kern.c:410:
+static int proc_write_sysemu(struct file *file,const char __user *buf, unsigned long count,void *data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: arch/um/kernel/process_kern.c:410:
+static int proc_write_sysemu(struct file *file,const char __user *buf, unsigned long count,void *data)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: arch/um/kernel/process_kern.c:410:
+static int proc_write_sysemu(struct file *file,const char __user *buf, unsigned long count,void *data)
                                                                                           ^

ERROR:SPACING: space required before the open brace '{'
#318: FILE: arch/um/kernel/ptrace.c:204:
+		if(copy_from_user(&ldt, p, sizeof(ldt))){

ERROR:SPACING: space required before the open parenthesis '('
#318: FILE: arch/um/kernel/ptrace.c:204:
+		if(copy_from_user(&ldt, p, sizeof(ldt))){

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: arch/um/kernel/syscall_kern.c:107:
+long sys_uname(struct old_utsname __user * name)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: arch/um/kernel/syscall_kern.c:118:
+long sys_olduname(struct oldold_utsname __user * name)

CHECK:SPACING: No space is necessary after a cast
#362: FILE: arch/um/kernel/trap_kern.c:210:
+		si.si_addr = (void __user *) address;

CHECK:SPACING: No space is necessary after a cast
#372: FILE: arch/um/kernel/trap_kern.c:223:
+	si.si_addr = (void __user *) FAULT_ADDRESS(fi);

ERROR:SPACING: space required before the open brace '{'
#405: FILE: arch/um/sys-i386/ptrace.c:133:
+	if(addr < MAX_REG_OFFSET){

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: arch/um/sys-i386/ptrace.c:133:
+	if(addr < MAX_REG_OFFSET){

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: arch/um/sys-i386/ptrace.c:136:
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#408: FILE: arch/um/sys-i386/ptrace.c:136:
+	}
+	else if((addr >= offsetof(struct user, u_debugreg[0])) &&

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#409: FILE: arch/um/sys-i386/ptrace.c:137:
+		(addr <= offsetof(struct user, u_debugreg[7]))){

CHECK:SPACING: No space is necessary after a cast
#414: FILE: arch/um/sys-i386/ptrace.c:142:
+	return put_user(tmp, (unsigned long __user *) data);

CHECK:SPACING: No space is necessary after a cast
#445: FILE: arch/um/sys-i386/signal.c:95:
+	to_fp = (to_fp ? to_fp : (struct _fpstate __user *) (to + 1));

CHECK:SPACING: No space is necessary after a cast
#477: FILE: arch/um/sys-i386/signal.c:142:
+	to_fp =	(fp ? fp : (struct _fpstate __user *) (to + 1));

CHECK:SPACING: No space is necessary after a cast
#533: FILE: arch/um/sys-i386/signal.c:223:
+	frame = (struct sigframe __user *) stack_top - 1;

CHECK:SPACING: No space is necessary after a cast
#553: FILE: arch/um/sys-i386/signal.c:288:
+	frame = (struct rt_sigframe __user *) stack_top - 1;

CHECK:SPACING: No space is necessary after a cast
#578: FILE: arch/um/sys-i386/signal.c:371:
+	struct rt_sigframe __user *frame = (struct rt_sigframe __user *) (sp - 4);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 2 warnings, 10 checks, 492 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089664.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
