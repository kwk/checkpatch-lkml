WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -pur -X /home/devel/roman/nodiff linux-2.5.66/drivers/char/tty_io.c linux-2.5.66-cdev1/drivers/char/tty_io.c

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ma' - possible side-effects?
#52: FILE: fs/char_dev.c:26:
+#define is_a_tty_dev(ma)	(ma == TTY_MAJOR || ma == TTYAUX_MAJOR)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ma' may be better as '(ma)' to avoid precedence issues
#52: FILE: fs/char_dev.c:26:
+#define is_a_tty_dev(ma)	(ma == TTY_MAJOR || ma == TTYAUX_MAJOR)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: fs/char_dev.c:27:
+#define need_serial(ma,mi) (get_tty_driver(mk_kdev(ma,mi)) == NULL)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#53: FILE: fs/char_dev.c:27:
+#define need_serial(ma,mi) (get_tty_driver(mk_kdev(ma,mi)) == NULL)
                                                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!get_tty_driver"
#53: FILE: fs/char_dev.c:27:
+#define need_serial(ma,mi) (get_tty_driver(mk_kdev(ma,mi)) == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#58: FILE: fs/char_dev.c:31:
+	const char * name;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#59: FILE: fs/char_dev.c:32:
+	struct file_operations * fops;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#59: FILE: fs/char_dev.c:32:
+	struct file_operations * fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#143: FILE: fs/char_dev.c:63:
+	struct file_operations *ret;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: fs/char_dev.c:74:
+		if (need_serial(major,minor)) {
 		                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: fs/char_dev.c:77:
+			/* The reason is that we may have a driver for
+			   /dev/tty1 already, but need one for /dev/ttyS1. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#160: FILE: fs/char_dev.c:77:
+			   /dev/tty1 already, but need one for /dev/ttyS1. */

WARNING:CONST_STRUCT: struct file_operations should normally be const
#188: FILE: fs/char_dev.c:97:
+		    struct file_operations *fops)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#220: FILE: fs/char_dev.c:101:
+		for (major = MAX_CHRDEV-1; major > 0; major--) {
 		                       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chrdevs[major].fops"
#221: FILE: fs/char_dev.c:102:
+			if (chrdevs[major].fops == NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: fs/char_dev.c:171:
+	const char * name = chrdevs[major(dev)].name;

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#329: FILE: fs/inode.c:148:
+			inode->i_data.backing_dev_info = sb->s_bdev->bd_inode->i_mapping->backing_dev_info;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: include/linux/fs.h:1058:
+extern int register_chrdev(unsigned int, const char *, struct file_operations *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#344: FILE: include/linux/fs.h:1058:
+extern int register_chrdev(unsigned int, const char *, struct file_operations *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#344: FILE: include/linux/fs.h:1058:
+extern int register_chrdev(unsigned int, const char *, struct file_operations *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file_operations *' should also have an identifier name
#344: FILE: include/linux/fs.h:1058:
+extern int register_chrdev(unsigned int, const char *, struct file_operations *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 6 checks, 316 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
