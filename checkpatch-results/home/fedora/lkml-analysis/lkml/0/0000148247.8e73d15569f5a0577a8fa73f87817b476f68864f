WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
 drivers/spi/spi-core.c |  456 +++++++++++++++++++++++++++++++++++++++++++++++++

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#85: FILE: drivers/spi/Kconfig:6:
+config SPI
+	default Y
+	tristate "SPI support"
+        default false
+	help
+	  Say Y if you need to enable SPI support on your kernel
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/spi/Kconfig:14:
+^Ibool "SPI debug output" $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/spi/Kconfig:15:
+^Idepends on SPI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: drivers/spi/Kconfig:16:
+^Idefault false $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/spi/Kconfig:17:
+^Ihelp $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/spi/Kconfig:20:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: drivers/spi/Kconfig:28:
+^I  programs use the SPI bus. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/spi/Kconfig:29:
+^I  This support is also available as a module.  If so, the module $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/spi/Makefile:5:
+obj-$(CONFIG_SPI) += spi-core.o $

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#126: FILE: drivers/spi/Makefile:9:
+EXTRA_CFLAGS += -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#134: FILE: drivers/spi/spi-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#135: FILE: drivers/spi/spi-core.c:2:
+ *  drivers/spi/spi-core.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#157: FILE: drivers/spi/spi-core.c:24:
+#include <asm/atomic.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/spi/spi-core.c:30:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: drivers/spi/spi-core.c:37:
+^Ireturn  !strcmp (drv->name, SPI_DEV_CHAR) || $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#170: FILE: drivers/spi/spi-core.c:37:
+	return  !strcmp (drv->name, SPI_DEV_CHAR) || 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/spi/spi-core.c:49:
+ * This function initializes the spi_bus_data structure for the $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: drivers/spi/spi-core.c:53:
+ * ^Ispi_bus_driver* ^Ipointer to bus driver structure$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: drivers/spi/spi-core.c:54:
+ * ^Idevice*^I^I^Iplatform device to be attached to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: drivers/spi/spi-core.c:56:
+ * ^I0 on success, error code otherwise$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/spi/spi-core.c:63:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/spi/spi-core.c:80:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/spi/spi-core.c:82:
+^Ikfree(pd);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/spi/spi-core.c:83:
+init_failed_1:^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: drivers/spi/spi-core.c:94:
+ * ^Istruct device* dev^Ithe 'bus' device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: drivers/spi/spi-core.c:95:
+ * ^Ivoid* context^I^Inot used. Will be NULL$

ERROR:SPACING: space prohibited after that open parenthesis '('
#238: FILE: drivers/spi/spi-core.c:105:
+	dev_dbg( dev, "unregistering children\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#238: FILE: drivers/spi/spi-core.c:105:
+	dev_dbg( dev, "unregistering children\n" );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/spi/spi-core.c:106:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: drivers/spi/spi-core.c:110:
+^I *       device_for_each_child will hold the semaphore needed $

ERROR:SPACING: space prohibited after that open parenthesis '('
#246: FILE: drivers/spi/spi-core.c:113:
+	while( !list_empty( &dev->children ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#246: FILE: drivers/spi/spi-core.c:113:
+	while( !list_empty( &dev->children ) ) {

ERROR:SPACING: space required before the open parenthesis '('
#246: FILE: drivers/spi/spi-core.c:113:
+	while( !list_empty( &dev->children ) ) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#247: FILE: drivers/spi/spi-core.c:114:
+		struct device* child = list_entry ( dev->children.next, struct device, node );

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: drivers/spi/spi-core.c:114:
+		struct device* child = list_entry ( dev->children.next, struct device, node );

ERROR:SPACING: space prohibited after that open parenthesis '('
#247: FILE: drivers/spi/spi-core.c:114:
+		struct device* child = list_entry ( dev->children.next, struct device, node );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#247: FILE: drivers/spi/spi-core.c:114:
+		struct device* child = list_entry ( dev->children.next, struct device, node );

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/spi/spi-core.c:115:
+^I    ^Ispi_device_del (TO_SPI_DEV (child) );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/spi/spi-core.c:115:
+^I    ^Ispi_device_del (TO_SPI_DEV (child) );$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: drivers/spi/spi-core.c:115:
+	    	spi_device_del (TO_SPI_DEV (child) );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: drivers/spi/spi-core.c:115:
+	    	spi_device_del (TO_SPI_DEV (child) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#248: FILE: drivers/spi/spi-core.c:115:
+	    	spi_device_del (TO_SPI_DEV (child) );

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/spi/spi-core.c:127:
+ *  ^Istruct spi_bus_driver* bus_driver^Ithe bus driver$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: drivers/spi/spi-core.c:129:
+ *  ^Ivoid$

ERROR:SPACING: space prohibited after that open parenthesis '('
#267: FILE: drivers/spi/spi-core.c:134:
+		driver_for_each_dev( &bus_driver->driver, NULL, __spi_bus_free);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/spi/spi-core.c:141:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/spi/spi-core.c:144:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/spi/spi-core.c:146:
+ * ^Istruct device* dev$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: drivers/spi/spi-core.c:148:
+ * ^Inone$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#283: FILE: drivers/spi/spi-core.c:150:
+void spi_device_release( struct device* dev )

ERROR:SPACING: space prohibited after that open parenthesis '('
#283: FILE: drivers/spi/spi-core.c:150:
+void spi_device_release( struct device* dev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#283: FILE: drivers/spi/spi-core.c:150:
+void spi_device_release( struct device* dev )

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#294: FILE: drivers/spi/spi-core.c:161:
+ * ^Istruct device* parent^I^Ithe 'bus' device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: drivers/spi/spi-core.c:162:
+ * ^Istruct spi_device* dev^I^Inew device to be added$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: drivers/spi/spi-core.c:163:
+ * ^Ichar* name^I^I^Iname of device. Should not be NULL$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: drivers/spi/spi-core.c:165:
+ * ^Ierror code, or 0 on success$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/spi/spi-core.c:169:
+^Iif (!name || !dev) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#302: FILE: drivers/spi/spi-core.c:169:
+	if (!name || !dev) 
+	    return -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#303: FILE: drivers/spi/spi-core.c:170:
+	    return -EINVAL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/spi/spi-core.c:171:
+^I    $

ERROR:SPACING: space prohibited after that open parenthesis '('
#308: FILE: drivers/spi/spi-core.c:175:
+	strncpy( dev->name, name, sizeof(dev->name));

ERROR:SPACING: space prohibited after that open parenthesis '('
#309: FILE: drivers/spi/spi-core.c:176:
+	strncpy( dev->dev.bus_id, name, sizeof( dev->dev.bus_id ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#309: FILE: drivers/spi/spi-core.c:176:
+	strncpy( dev->dev.bus_id, name, sizeof( dev->dev.bus_id ) );

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: drivers/spi/spi-core.c:188:
+ *  ^Istruct spi_msg* msg            message to be sent$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: drivers/spi/spi-core.c:190:
+ *  ^I0 on no errors, negative error code otherwise$

ERROR:SPACING: space prohibited after that open parenthesis '('
#325: FILE: drivers/spi/spi-core.c:192:
+int spi_queue( struct spi_msg *msg)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#327: FILE: drivers/spi/spi-core.c:194:
+	struct device* dev = &msg->device->dev;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#332: FILE: drivers/spi/spi-core.c:199:
+	dev_dbg(dev->parent, "message has been queued\n" );

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: drivers/spi/spi-core.c:214:
+ * ^Istruct spimsg* msg^Imessage that is being processed now$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: drivers/spi/spi-core.c:215:
+ * ^Iint code^I^Istatus of processing$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#350: FILE: drivers/spi/spi-core.c:217:
+static void __spi_transfer_callback( struct spi_msg* msg, int code )

ERROR:SPACING: space prohibited after that open parenthesis '('
#350: FILE: drivers/spi/spi-core.c:217:
+static void __spi_transfer_callback( struct spi_msg* msg, int code )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#350: FILE: drivers/spi/spi-core.c:217:
+static void __spi_transfer_callback( struct spi_msg* msg, int code )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: drivers/spi/spi-core.c:219:
+^Iif( code & (SPIMSG_OK|SPIMSG_FAILED) ) $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#352: FILE: drivers/spi/spi-core.c:219:
+	if( code & (SPIMSG_OK|SPIMSG_FAILED) ) 
 	                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#352: FILE: drivers/spi/spi-core.c:219:
+	if( code & (SPIMSG_OK|SPIMSG_FAILED) ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#352: FILE: drivers/spi/spi-core.c:219:
+	if( code & (SPIMSG_OK|SPIMSG_FAILED) ) 

ERROR:SPACING: space required before the open parenthesis '('
#352: FILE: drivers/spi/spi-core.c:219:
+	if( code & (SPIMSG_OK|SPIMSG_FAILED) ) 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#353: FILE: drivers/spi/spi-core.c:220:
+		complete( (struct completion*)msg->context );

ERROR:SPACING: space prohibited after that open parenthesis '('
#353: FILE: drivers/spi/spi-core.c:220:
+		complete( (struct completion*)msg->context );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#353: FILE: drivers/spi/spi-core.c:220:
+		complete( (struct completion*)msg->context );

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: drivers/spi/spi-core.c:230:
+ * ^Istruct spi_msg* msg^Imessage to process$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#364: FILE: drivers/spi/spi-core.c:231:
+ * ^Icallback^I^Iuser-supplied callback. If both msg->status and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#365: FILE: drivers/spi/spi-core.c:232:
+ * ^I^I^I^Icallback are set, the error code of -EINVAL$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#366: FILE: drivers/spi/spi-core.c:233:
+ * ^I^I^I^Iwill be returned$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#368: FILE: drivers/spi/spi-core.c:235:
+ * ^I0 on success, error code otherwise. This code does not reflect$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#369: FILE: drivers/spi/spi-core.c:236:
+ * ^Istatus of message, just status of queueing$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#371: FILE: drivers/spi/spi-core.c:238:
+int spi_transfer( struct spi_msg* msg, void (*callback)( struct spi_msg*, int ) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#371: FILE: drivers/spi/spi-core.c:238:
+int spi_transfer( struct spi_msg* msg, void (*callback)( struct spi_msg*, int ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#371: FILE: drivers/spi/spi-core.c:238:
+int spi_transfer( struct spi_msg* msg, void (*callback)( struct spi_msg*, int ) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#376: FILE: drivers/spi/spi-core.c:243:
+	if( callback && !msg->status ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#376: FILE: drivers/spi/spi-core.c:243:
+	if( callback && !msg->status ) {

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: drivers/spi/spi-core.c:243:
+	if( callback && !msg->status ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: drivers/spi/spi-core.c:247:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#381: FILE: drivers/spi/spi-core.c:248:
+	if( !callback ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#381: FILE: drivers/spi/spi-core.c:248:
+	if( !callback ) {

ERROR:SPACING: space required before the open parenthesis '('
#381: FILE: drivers/spi/spi-core.c:248:
+	if( !callback ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#382: FILE: drivers/spi/spi-core.c:249:
+		if( !msg->status ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#382: FILE: drivers/spi/spi-core.c:249:
+		if( !msg->status ) {

ERROR:SPACING: space required before the open parenthesis '('
#382: FILE: drivers/spi/spi-core.c:249:
+		if( !msg->status ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#383: FILE: drivers/spi/spi-core.c:250:
+			init_completion( &msg_done );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#383: FILE: drivers/spi/spi-core.c:250:
+			init_completion( &msg_done );

ERROR:SPACING: space prohibited after that open parenthesis '('
#386: FILE: drivers/spi/spi-core.c:253:
+			spi_queue( msg );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#386: FILE: drivers/spi/spi-core.c:253:
+			spi_queue( msg );

ERROR:SPACING: space prohibited after that open parenthesis '('
#387: FILE: drivers/spi/spi-core.c:254:
+			wait_for_completion( &msg_done );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#387: FILE: drivers/spi/spi-core.c:254:
+			wait_for_completion( &msg_done );

ERROR:SPACING: space prohibited after that open parenthesis '('
#390: FILE: drivers/spi/spi-core.c:257:
+			err = spi_queue( msg );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#390: FILE: drivers/spi/spi-core.c:257:
+			err = spi_queue( msg );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/spi/spi-core.c:260:
+^I^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#396: FILE: drivers/spi/spi-core.c:263:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: drivers/spi/spi-core.c:265:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: drivers/spi/spi-core.c:266:
+ * This function is started as separate thread to perform actual $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: drivers/spi/spi-core.c:270:
+ *^Ivoid* context ^I^Ipointer to struct spi_bus_data $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#403: FILE: drivers/spi/spi-core.c:270:
+ *^Ivoid* context ^I^Ipointer to struct spi_bus_data $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#409: FILE: drivers/spi/spi-core.c:276:
+	if (atomic_read(&bd->exiting)) {
+		return 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#426: FILE: drivers/spi/spi-core.c:293:
+	while (!kthread_should_stop()) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/spi/spi-core.c:301:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/spi/spi-core.c:302:
+^I^I^I * this part is locked by bus_data->lock, $

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'bd->selected_device'
#444: FILE: drivers/spi/spi-core.c:311:
+						bd->bus->select(bd->
+								selected_device);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: drivers/spi/spi-core.c:321:
+^I^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/spi/spi-core.c:322:
+^I^I^I^I * all messages for current selected_device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: drivers/spi/spi-core.c:323:
+^I^I^I^I * are processed. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/spi/spi-core.c:324:
+^I^I^I^I * let's switch to another device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/spi/spi-core.c:338:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: drivers/spi/spi-core.c:339:
+^I^I^I * and this part is locked by device's lock; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/spi/spi-core.c:340:
+^I^I^I * spi_queue will be able to queue new $

ERROR:SPACING: space prohibited after that open parenthesis '('
#479: FILE: drivers/spi/spi-core.c:346:
+			if( bd->bus->set_clock && msg->clock )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#479: FILE: drivers/spi/spi-core.c:346:
+			if( bd->bus->set_clock && msg->clock )

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: drivers/spi/spi-core.c:346:
+			if( bd->bus->set_clock && msg->clock )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: drivers/spi/spi-core.c:347:
+^I^I^I^Ibd->bus->set_clock( $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#480: FILE: drivers/spi/spi-core.c:347:
+				bd->bus->set_clock( 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#481: FILE: drivers/spi/spi-core.c:348:
+					msg->device->dev.parent, msg->clock );

ERROR:SPACING: space prohibited after that open parenthesis '('
#482: FILE: drivers/spi/spi-core.c:349:
+			xfer_status = bd->bus->xfer( msg );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#482: FILE: drivers/spi/spi-core.c:349:
+			xfer_status = bd->bus->xfer( msg );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: drivers/spi/spi-core.c:372:
+ * spi_write $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: drivers/spi/spi-core.c:373:
+ * ^Isend data to a device on an SPI bus$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: drivers/spi/spi-core.c:375:
+ * ^Ispi_device* dev^I^Ithe target device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: drivers/spi/spi-core.c:379:
+ * ^Ithe number of bytes transferred, or negative error code.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#520: FILE: drivers/spi/spi-core.c:387:
+	ret = spi_transfer( msg, NULL );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#520: FILE: drivers/spi/spi-core.c:387:
+	ret = spi_transfer( msg, NULL );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: drivers/spi/spi-core.c:392:
+ * spi_write $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: drivers/spi/spi-core.c:393:
+ * ^Ireceive data from a device on an SPI bus$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#528: FILE: drivers/spi/spi-core.c:395:
+ * ^Ispi_device* dev^I^Ithe target device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#532: FILE: drivers/spi/spi-core.c:399:
+ * ^I the number of bytes transferred, or negative error code.$

ERROR:SPACING: space prohibited after that open parenthesis '('
#539: FILE: drivers/spi/spi-core.c:406:
+	ret = spi_transfer( msg, NULL );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#539: FILE: drivers/spi/spi-core.c:406:
+	ret = spi_transfer( msg, NULL );

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#546: FILE: drivers/spi/spi-core.c:413:
+		     void (*callback) (struct device * bus,

WARNING:SPACING: Unnecessary space before function pointer arguments
#546: FILE: drivers/spi/spi-core.c:413:
+		     void (*callback) (struct device * bus,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#547: FILE: drivers/spi/spi-core.c:414:
+				       struct spi_device * new_dev))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_device)...) over kmalloc(sizeof(struct spi_device)...)
#555: FILE: drivers/spi/spi-core.c:422:
+		new_device = kmalloc(sizeof(struct spi_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for single statement blocks
#556: FILE: drivers/spi/spi-core.c:423:
+		if (!new_device) {
+			break;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#559: FILE: drivers/spi/spi-core.c:426:
+		if (spi_device_add(parent, new_device, devices)) {
+			break;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#562: FILE: drivers/spi/spi-core.c:429:
+		if (callback) {
+			callback(parent, new_device);
+		}

ERROR:SPACING: space prohibited after that open parenthesis '('
#571: FILE: drivers/spi/spi-core.c:438:
+int __init spi_core_init( void )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#571: FILE: drivers/spi/spi-core.c:438:
+int __init spi_core_init( void )

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#581: FILE: drivers/spi/spi-core.c:448:
+EXPORT_SYMBOL_GPL(spi_queue);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#582: FILE: drivers/spi/spi-core.c:449:
+EXPORT_SYMBOL_GPL(spi_device_add);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#583: FILE: drivers/spi/spi-core.c:450:
+EXPORT_SYMBOL_GPL(spi_bus_driver_unregister);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#584: FILE: drivers/spi/spi-core.c:451:
+EXPORT_SYMBOL_GPL(spi_bus_populate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#585: FILE: drivers/spi/spi-core.c:452:
+EXPORT_SYMBOL_GPL(spi_transfer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#586: FILE: drivers/spi/spi-core.c:453:
+EXPORT_SYMBOL_GPL(spi_write);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#587: FILE: drivers/spi/spi-core.c:454:
+EXPORT_SYMBOL_GPL(spi_read);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#588: FILE: drivers/spi/spi-core.c:455:
+EXPORT_SYMBOL_GPL(spi_bus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#589: FILE: drivers/spi/spi-core.c:456:
+EXPORT_SYMBOL_GPL(spi_bus_driver_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#595: FILE: drivers/spi/spi-dev.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: drivers/spi/spi-dev.c:2:
+    spi-dev.c - spi-bus driver, char device interface  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#596: FILE: drivers/spi/spi-dev.c:2:
+/*
+    spi-dev.c - spi-bus driver, char device interface  

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#613: FILE: drivers/spi/spi-dev.c:19:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#614: FILE: drivers/spi/spi-dev.c:20:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#620: FILE: drivers/spi/spi-dev.c:26:
+/* Note that this is a complete rewrite of Simon Vogl's i2c-dev module.
+   But I have used so much of his original code and ideas that it seems

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#621: FILE: drivers/spi/spi-dev.c:27:
+   only fair to recognize him as co-author -- Frodo */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: drivers/spi/spi-dev.c:29:
+/* The devfs code is contributed by Philipp Matthias Hahn $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#624: FILE: drivers/spi/spi-dev.c:30:
+/* The devfs code is contributed by Philipp Matthias Hahn 
+   <pmhahn@titan.lahn.de> */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#624: FILE: drivers/spi/spi-dev.c:30:
+   <pmhahn@titan.lahn.de> */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/spi/spi-dev.c:32:
+/* Modifications to allow work with current spi-core by $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#627: FILE: drivers/spi/spi-dev.c:33:
+/* Modifications to allow work with current spi-core by 
+   Andrey Ivolgin <aivolgin@ru.mvista.com>, Sep 2004

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: drivers/spi/spi-dev.c:37:
+   by Vitaly Wool <vwool@ru.mvista.com> (C) 2004 MontaVista Software, Inc. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#631: FILE: drivers/spi/spi-dev.c:37:
+/* devfs code corrected to support automatic device addition/deletion
+   by Vitaly Wool <vwool@ru.mvista.com> (C) 2004 MontaVista Software, Inc. 

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#644: FILE: drivers/spi/spi-dev.c:50:
+#include <asm/uaccess.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#650: FILE: drivers/spi/spi-dev.c:56:
+struct spidev_driver_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#655: FILE: drivers/spi/spi-dev.c:61:
+			   loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#657: FILE: drivers/spi/spi-dev.c:63:
+			    loff_t * offset);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#668: FILE: drivers/spi/spi-dev.c:74:
+static struct file_operations spidev_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*drvdata)...) over kmalloc(sizeof(struct spidev_driver_data)...)
#693: FILE: drivers/spi/spi-dev.c:99:
+	drvdata = kmalloc(sizeof(struct spidev_driver_data), GFP_KERNEL);

ERROR:SPACING: space prohibited after that open parenthesis '('
#694: FILE: drivers/spi/spi-dev.c:100:
+	if ( !drvdata) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#695: FILE: drivers/spi/spi-dev.c:101:
+		dev_dbg( dev, "allocating drvdata failed\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#695: FILE: drivers/spi/spi-dev.c:101:
+		dev_dbg( dev, "allocating drvdata failed\n" );

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#695: FILE: drivers/spi/spi-dev.c:101:
+	if ( !drvdata) {
+		dev_dbg( dev, "allocating drvdata failed\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#700: FILE: drivers/spi/spi-dev.c:106:
+	dev_dbg( dev, "setting device's(%p) minor to %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/spi/spi-dev.c:107:
+	dev_dbg( dev, "setting device's(%p) minor to %d\n",
+		 dev, drvdata->minor);

ERROR:SPACING: space prohibited after that open parenthesis '('
#707: FILE: drivers/spi/spi-dev.c:113:
+	dev_dbg( dev, " added\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#707: FILE: drivers/spi/spi-dev.c:113:
+	dev_dbg( dev, " added\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#718: FILE: drivers/spi/spi-dev.c:124:
+	dev_dbg( dev, " removed\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#718: FILE: drivers/spi/spi-dev.c:124:
+	dev_dbg( dev, " removed\n" );

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#723: FILE: drivers/spi/spi-dev.c:129:
+			   loff_t * offset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#726: FILE: drivers/spi/spi-dev.c:132:
+	struct spi_device *dev = (struct spi_device *)file->private_data;
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space prohibited after that open parenthesis '('
#726: FILE: drivers/spi/spi-dev.c:132:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#726: FILE: drivers/spi/spi-dev.c:132:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space required before the open parenthesis '('
#726: FILE: drivers/spi/spi-dev.c:132:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#726: FILE: drivers/spi/spi-dev.c:132:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#727: FILE: drivers/spi/spi-dev.c:133:
+	return spi_read(dev, buf, count );

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#731: FILE: drivers/spi/spi-dev.c:137:
+			    loff_t * offset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#734: FILE: drivers/spi/spi-dev.c:140:
+	struct spi_device *dev = (struct spi_device *)file->private_data;
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space prohibited after that open parenthesis '('
#734: FILE: drivers/spi/spi-dev.c:140:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#734: FILE: drivers/spi/spi-dev.c:140:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space required before the open parenthesis '('
#734: FILE: drivers/spi/spi-dev.c:140:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#734: FILE: drivers/spi/spi-dev.c:140:
+	if( count > SPI_TRANSFER_MAX ) count = SPI_TRANSFER_MAX;

ERROR:SPACING: space prohibited after that open parenthesis '('
#735: FILE: drivers/spi/spi-dev.c:141:
+	return spi_write( dev, buf, count );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#735: FILE: drivers/spi/spi-dev.c:141:
+	return spi_write( dev, buf, count );

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#750: FILE: drivers/spi/spi-dev.c:156:
+	if (NULL == drvdata) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#751: FILE: drivers/spi/spi-dev.c:157:
+		pr_debug("%s: oops, drvdata is NULL !\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#772: FILE: drivers/spi/spi-dev.c:178:
+	if (status == 0) {
+		status = -ENODEV;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#782: FILE: drivers/spi/spi-dev.c:188:
+	if (dev) {
+		put_device(&dev->dev);
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#794: FILE: drivers/spi/spi-dev.c:200:
+	if (0 != (res = register_chrdev(SPI_MAJOR, "spi", &spidev_fops))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#794: FILE: drivers/spi/spi-dev.c:200:
+	if (0 != (res = register_chrdev(SPI_MAJOR, "spi", &spidev_fops))) {
+		goto out;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#800: FILE: drivers/spi/spi-dev.c:206:
+		printk(KERN_ERR "%s: error creating class\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#800: FILE: drivers/spi/spi-dev.c:206:
+		printk(KERN_ERR "%s: error creating class\n", __FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#805: FILE: drivers/spi/spi-dev.c:211:
+	if (0 != (res = spi_driver_add(&spidev_driver))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#805: FILE: drivers/spi/spi-dev.c:211:
+	if (0 != (res = spi_driver_add(&spidev_driver))) {
+		goto out_unreg;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#808: FILE: drivers/spi/spi-dev.c:214:
+	printk("SPI /dev entries driver.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#814: FILE: drivers/spi/spi-dev.c:220:
+	printk(KERN_ERR "%s: Driver initialization failed\n", __FILE__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#836: FILE: include/linux/spi.h:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#860: FILE: include/linux/spi.h:25:
+struct spi_bus_data
+{

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#864: FILE: include/linux/spi.h:29:
+	struct task_struct* thread;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: include/linux/spi.h:30:
+^Iwait_queue_head_t queue; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#866: FILE: include/linux/spi.h:31:
+	struct spi_device* selected_device;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#867: FILE: include/linux/spi.h:32:
+	struct spi_bus_driver* bus;

ERROR:SPACING: space prohibited after that open parenthesis '('
#870: FILE: include/linux/spi.h:35:
+#define TO_SPI_BUS_DRIVER(drv) container_of( drv, struct spi_bus_driver, driver )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#870: FILE: include/linux/spi.h:35:
+#define TO_SPI_BUS_DRIVER(drv) container_of( drv, struct spi_bus_driver, driver )

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#872: FILE: include/linux/spi.h:37:
+struct spi_bus_driver
+{

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#873: FILE: include/linux/spi.h:38:
+	int (*xfer)( struct spi_msg* msg );

ERROR:SPACING: space prohibited after that open parenthesis '('
#873: FILE: include/linux/spi.h:38:
+	int (*xfer)( struct spi_msg* msg );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#873: FILE: include/linux/spi.h:38:
+	int (*xfer)( struct spi_msg* msg );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#874: FILE: include/linux/spi.h:39:
+	void (*select)( struct spi_device* dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#874: FILE: include/linux/spi.h:39:
+	void (*select)( struct spi_device* dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#874: FILE: include/linux/spi.h:39:
+	void (*select)( struct spi_device* dev );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#875: FILE: include/linux/spi.h:40:
+	void (*deselect)( struct spi_device* dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#875: FILE: include/linux/spi.h:40:
+	void (*deselect)( struct spi_device* dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#875: FILE: include/linux/spi.h:40:
+	void (*deselect)( struct spi_device* dev );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#876: FILE: include/linux/spi.h:41:
+	void (*set_clock)( struct device* bus_device, u32 clock_hz );

ERROR:SPACING: space prohibited after that open parenthesis '('
#876: FILE: include/linux/spi.h:41:
+	void (*set_clock)( struct device* bus_device, u32 clock_hz );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#876: FILE: include/linux/spi.h:41:
+	void (*set_clock)( struct device* bus_device, u32 clock_hz );

ERROR:SPACING: space prohibited after that open parenthesis '('
#880: FILE: include/linux/spi.h:45:
+#define TO_SPI_DEV(device) container_of( device, struct spi_device, dev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#880: FILE: include/linux/spi.h:45:
+#define TO_SPI_DEV(device) container_of( device, struct spi_device, dev )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: include/linux/spi.h:46:
+struct spi_device $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#882: FILE: include/linux/spi.h:47:
+struct spi_device 
+{

ERROR:SPACING: space prohibited after that open square bracket '['
#883: FILE: include/linux/spi.h:48:
+	char name[ BUS_ID_SIZE ];

ERROR:SPACING: space prohibited before that close square bracket ']'
#883: FILE: include/linux/spi.h:48:
+	char name[ BUS_ID_SIZE ];

ERROR:SPACING: space prohibited after that open parenthesis '('
#887: FILE: include/linux/spi.h:52:
+#define TO_SPI_DRIVER(drv) container_of( drv, struct spi_driver, driver )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#887: FILE: include/linux/spi.h:52:
+#define TO_SPI_DRIVER(drv) container_of( drv, struct spi_driver, driver )

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: include/linux/spi.h:54:
+    ^Ivoid* (*alloc)( size_t, int );$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#889: FILE: include/linux/spi.h:54:
+    ^Ivoid* (*alloc)( size_t, int );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: include/linux/spi.h:54:
+    ^Ivoid* (*alloc)( size_t, int );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#889: FILE: include/linux/spi.h:54:
+    	void* (*alloc)( size_t, int );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#889: FILE: include/linux/spi.h:54:
+    	void* (*alloc)( size_t, int );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#889: FILE: include/linux/spi.h:54:
+    	void* (*alloc)( size_t, int );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#889: FILE: include/linux/spi.h:54:
+    	void* (*alloc)( size_t, int );

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: include/linux/spi.h:55:
+    ^Ivoid  (*free)( const void* );$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#890: FILE: include/linux/spi.h:55:
+    ^Ivoid  (*free)( const void* );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: include/linux/spi.h:55:
+    ^Ivoid  (*free)( const void* );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#890: FILE: include/linux/spi.h:55:
+    	void  (*free)( const void* );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#890: FILE: include/linux/spi.h:55:
+    	void  (*free)( const void* );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void*' should also have an identifier name
#890: FILE: include/linux/spi.h:55:
+    	void  (*free)( const void* );

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: include/linux/spi.h:56:
+    ^Iunsigned char* (*get_buffer)( struct spi_device*, void* );$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#891: FILE: include/linux/spi.h:56:
+    ^Iunsigned char* (*get_buffer)( struct spi_device*, void* );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: include/linux/spi.h:56:
+    ^Iunsigned char* (*get_buffer)( struct spi_device*, void* );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#891: FILE: include/linux/spi.h:56:
+    	unsigned char* (*get_buffer)( struct spi_device*, void* );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#891: FILE: include/linux/spi.h:56:
+    	unsigned char* (*get_buffer)( struct spi_device*, void* );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_device*' should also have an identifier name
#891: FILE: include/linux/spi.h:56:
+    	unsigned char* (*get_buffer)( struct spi_device*, void* );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#891: FILE: include/linux/spi.h:56:
+    	unsigned char* (*get_buffer)( struct spi_device*, void* );

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: include/linux/spi.h:57:
+    ^Ivoid (*release_buffer)( struct spi_device*, unsigned char*);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#892: FILE: include/linux/spi.h:57:
+    ^Ivoid (*release_buffer)( struct spi_device*, unsigned char*);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: include/linux/spi.h:57:
+    ^Ivoid (*release_buffer)( struct spi_device*, unsigned char*);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#892: FILE: include/linux/spi.h:57:
+    	void (*release_buffer)( struct spi_device*, unsigned char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_device*' should also have an identifier name
#892: FILE: include/linux/spi.h:57:
+    	void (*release_buffer)( struct spi_device*, unsigned char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char*' should also have an identifier name
#892: FILE: include/linux/spi.h:57:
+    	void (*release_buffer)( struct spi_device*, unsigned char*);

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: include/linux/spi.h:58:
+    ^Ivoid (*control)( struct spi_device*, int mode, u32 ctl );$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#893: FILE: include/linux/spi.h:58:
+    ^Ivoid (*control)( struct spi_device*, int mode, u32 ctl );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: include/linux/spi.h:58:
+    ^Ivoid (*control)( struct spi_device*, int mode, u32 ctl );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#893: FILE: include/linux/spi.h:58:
+    	void (*control)( struct spi_device*, int mode, u32 ctl );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#893: FILE: include/linux/spi.h:58:
+    	void (*control)( struct spi_device*, int mode, u32 ctl );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_device*' should also have an identifier name
#893: FILE: include/linux/spi.h:58:
+    	void (*control)( struct spi_device*, int mode, u32 ctl );

ERROR:SPACING: space prohibited after that open parenthesis '('
#897: FILE: include/linux/spi.h:62:
+#define SPI_DEV_DRV( device )  TO_SPI_DRIVER( (device)->dev.driver )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#897: FILE: include/linux/spi.h:62:
+#define SPI_DEV_DRV( device )  TO_SPI_DRIVER( (device)->dev.driver )

ERROR:SPACING: space prohibited after that open parenthesis '('
#899: FILE: include/linux/spi.h:64:
+#define spi_device_lock( dev ) /* down( dev->dev.sem ) */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#899: FILE: include/linux/spi.h:64:
+#define spi_device_lock( dev ) /* down( dev->dev.sem ) */

ERROR:SPACING: space prohibited after that open parenthesis '('
#900: FILE: include/linux/spi.h:65:
+#define spi_device_unlock( dev ) /* up( dev->dev.sem ) */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#900: FILE: include/linux/spi.h:65:
+#define spi_device_unlock( dev ) /* up( dev->dev.sem ) */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#905: FILE: include/linux/spi.h:70:
+ * This structure represent the SPI message internally. You should never use fields of this structure directly

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#914: FILE: include/linux/spi.h:79:
+#define SPI_M_CS	0x08	/**< CS active level at begining of frame ( default low ) */
                 	    	                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#919: FILE: include/linux/spi.h:84:
+	struct spi_device* device;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: include/linux/spi.h:86:
+^Istruct list_head link; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#922: FILE: include/linux/spi.h:87:
+	void (*status)( struct spi_msg* msg, int code );

ERROR:SPACING: space prohibited after that open parenthesis '('
#922: FILE: include/linux/spi.h:87:
+	void (*status)( struct spi_msg* msg, int code );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#922: FILE: include/linux/spi.h:87:
+	void (*status)( struct spi_msg* msg, int code );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: include/linux/spi.h:92:
+static inline struct spi_msg* spimsg_alloc( struct spi_device* device, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#927: FILE: include/linux/spi.h:92:
+static inline struct spi_msg* spimsg_alloc( struct spi_device* device, 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#927: FILE: include/linux/spi.h:92:
+static inline struct spi_msg* spimsg_alloc( struct spi_device* device, 

ERROR:SPACING: space prohibited after that open parenthesis '('
#927: FILE: include/linux/spi.h:92:
+static inline struct spi_msg* spimsg_alloc( struct spi_device* device, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: include/linux/spi.h:93:
+static inline struct spi_msg* spimsg_alloc( struct spi_device* device, 
+					    unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#928: FILE: include/linux/spi.h:93:
+					    unsigned flags,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: include/linux/spi.h:94:
+^I^I^I^I^I    unsigned short len, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#930: FILE: include/linux/spi.h:95:
+					    void (*status)( struct spi_msg*, int code ) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#930: FILE: include/linux/spi.h:95:
+					    void (*status)( struct spi_msg*, int code ) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: include/linux/spi.h:97:
+    struct spi_msg* msg;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#932: FILE: include/linux/spi.h:97:
+    struct spi_msg* msg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: include/linux/spi.h:98:
+    struct spi_driver* drv = SPI_DEV_DRV( device );$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#933: FILE: include/linux/spi.h:98:
+    struct spi_driver* drv = SPI_DEV_DRV( device );

ERROR:SPACING: space prohibited after that open parenthesis '('
#933: FILE: include/linux/spi.h:98:
+    struct spi_driver* drv = SPI_DEV_DRV( device );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#933: FILE: include/linux/spi.h:98:
+    struct spi_driver* drv = SPI_DEV_DRV( device );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: include/linux/spi.h:99:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: include/linux/spi.h:99:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: include/linux/spi.h:100:
+    msg = kmalloc( sizeof( struct spi_msg ), GFP_KERNEL );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#935: FILE: include/linux/spi.h:100:
+    msg = kmalloc( sizeof( struct spi_msg ), GFP_KERNEL );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#935: FILE: include/linux/spi.h:100:
+    msg = kmalloc( sizeof( struct spi_msg ), GFP_KERNEL );

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*msg)...) over kmalloc(sizeof( struct spi_msg )...)
#935: FILE: include/linux/spi.h:100:
+    msg = kmalloc( sizeof( struct spi_msg ), GFP_KERNEL );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: include/linux/spi.h:101:
+    if( !msg )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#936: FILE: include/linux/spi.h:101:
+    if( !msg )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#936: FILE: include/linux/spi.h:101:
+    if( !msg )

ERROR:SPACING: space required before the open parenthesis '('
#936: FILE: include/linux/spi.h:101:
+    if( !msg )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: include/linux/spi.h:103:
+    memset( msg, 0, sizeof( struct spi_msg ) );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#938: FILE: include/linux/spi.h:103:
+    memset( msg, 0, sizeof( struct spi_msg ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#938: FILE: include/linux/spi.h:103:
+    memset( msg, 0, sizeof( struct spi_msg ) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: include/linux/spi.h:104:
+    msg->len = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: include/linux/spi.h:105:
+    msg->status = status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: include/linux/spi.h:106:
+    msg->device = device;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: include/linux/spi.h:107:
+    msg->flags = flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: include/linux/spi.h:108:
+    INIT_LIST_HEAD( &msg->link );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#943: FILE: include/linux/spi.h:108:
+    INIT_LIST_HEAD( &msg->link );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#943: FILE: include/linux/spi.h:108:
+    INIT_LIST_HEAD( &msg->link );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: include/linux/spi.h:109:
+    if( flags & SPI_M_RD ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#944: FILE: include/linux/spi.h:109:
+    if( flags & SPI_M_RD ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#944: FILE: include/linux/spi.h:109:
+    if( flags & SPI_M_RD ) {

ERROR:SPACING: space required before the open parenthesis '('
#944: FILE: include/linux/spi.h:109:
+    if( flags & SPI_M_RD ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: include/linux/spi.h:110:
+        msg->devbuf_rd =  drv->alloc ? $

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: include/linux/spi.h:110:
+        msg->devbuf_rd =  drv->alloc ? $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: include/linux/spi.h:110:
+        msg->devbuf_rd =  drv->alloc ? $

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#946: FILE: include/linux/spi.h:111:
+	    drv->alloc( len, GFP_KERNEL ):kmalloc( len, GFP_KERNEL);
 	                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#946: FILE: include/linux/spi.h:111:
+	    drv->alloc( len, GFP_KERNEL ):kmalloc( len, GFP_KERNEL);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#946: FILE: include/linux/spi.h:111:
+	    drv->alloc( len, GFP_KERNEL ):kmalloc( len, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: include/linux/spi.h:112:
+^Imsg->databuf_rd = drv->get_buffer ? $

ERROR:SPACING: space prohibited after that open parenthesis '('
#948: FILE: include/linux/spi.h:113:
+	    drv->get_buffer( device, msg->devbuf_rd ) : msg->devbuf_rd;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#948: FILE: include/linux/spi.h:113:
+	    drv->get_buffer( device, msg->devbuf_rd ) : msg->devbuf_rd;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: include/linux/spi.h:114:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: include/linux/spi.h:115:
+    if( flags & SPI_M_WR ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#950: FILE: include/linux/spi.h:115:
+    if( flags & SPI_M_WR ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#950: FILE: include/linux/spi.h:115:
+    if( flags & SPI_M_WR ) {

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: include/linux/spi.h:115:
+    if( flags & SPI_M_WR ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: include/linux/spi.h:116:
+        msg->devbuf_wr =  drv->alloc ? $

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: include/linux/spi.h:116:
+        msg->devbuf_wr =  drv->alloc ? $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: include/linux/spi.h:116:
+        msg->devbuf_wr =  drv->alloc ? $

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#952: FILE: include/linux/spi.h:117:
+	    drv->alloc( len, GFP_KERNEL ):kmalloc( len, GFP_KERNEL);
 	                                 ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#952: FILE: include/linux/spi.h:117:
+	    drv->alloc( len, GFP_KERNEL ):kmalloc( len, GFP_KERNEL);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#952: FILE: include/linux/spi.h:117:
+	    drv->alloc( len, GFP_KERNEL ):kmalloc( len, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: include/linux/spi.h:118:
+^Imsg->databuf_wr = drv->get_buffer ? $

ERROR:SPACING: space prohibited after that open parenthesis '('
#954: FILE: include/linux/spi.h:119:
+	    drv->get_buffer( device, msg->devbuf_wr ) : msg->devbuf_wr;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#954: FILE: include/linux/spi.h:119:
+	    drv->get_buffer( device, msg->devbuf_wr ) : msg->devbuf_wr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: include/linux/spi.h:120:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: include/linux/spi.h:121:
+    pr_debug( "%s: msg = %p, RD=(%p,%p) WR=(%p,%p). Actual flags = %s+%s\n",$

ERROR:SPACING: space prohibited after that open parenthesis '('
#956: FILE: include/linux/spi.h:121:
+    pr_debug( "%s: msg = %p, RD=(%p,%p) WR=(%p,%p). Actual flags = %s+%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: include/linux/spi.h:122:
+    pr_debug( "%s: msg = %p, RD=(%p,%p) WR=(%p,%p). Actual flags = %s+%s\n",
+		   __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#957: FILE: include/linux/spi.h:122:
+		   __FUNCTION__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: include/linux/spi.h:123:
+^I^I  msg, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: include/linux/spi.h:125:
+^I^I  msg->devbuf_wr, msg->databuf_wr, $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#962: FILE: include/linux/spi.h:127:
+		  msg->flags & SPI_M_WR ? "WR" : "~wr" );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: include/linux/spi.h:128:
+    return msg;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#966: FILE: include/linux/spi.h:131:
+static inline void spimsg_free( struct spi_msg * msg )

ERROR:SPACING: space prohibited after that open parenthesis '('
#966: FILE: include/linux/spi.h:131:
+static inline void spimsg_free( struct spi_msg * msg )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#966: FILE: include/linux/spi.h:131:
+static inline void spimsg_free( struct spi_msg * msg )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: include/linux/spi.h:133:
+    void (*do_free)( const void* ) = kfree;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#968: FILE: include/linux/spi.h:133:
+    void (*do_free)( const void* ) = kfree;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#968: FILE: include/linux/spi.h:133:
+    void (*do_free)( const void* ) = kfree;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: include/linux/spi.h:134:
+    struct spi_driver* drv = SPI_DEV_DRV( msg->device );$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#969: FILE: include/linux/spi.h:134:
+    struct spi_driver* drv = SPI_DEV_DRV( msg->device );

ERROR:SPACING: space prohibited after that open parenthesis '('
#969: FILE: include/linux/spi.h:134:
+    struct spi_driver* drv = SPI_DEV_DRV( msg->device );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#969: FILE: include/linux/spi.h:134:
+    struct spi_driver* drv = SPI_DEV_DRV( msg->device );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: include/linux/spi.h:135:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: include/linux/spi.h:135:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: include/linux/spi.h:136:
+    if( msg ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#971: FILE: include/linux/spi.h:136:
+    if( msg ) {
+	    if( drv->free ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#971: FILE: include/linux/spi.h:136:
+    if( msg ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#971: FILE: include/linux/spi.h:136:
+    if( msg ) {

ERROR:SPACING: space required before the open parenthesis '('
#971: FILE: include/linux/spi.h:136:
+    if( msg ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#972: FILE: include/linux/spi.h:137:
+^I    if( drv->free ) $

WARNING:TABSTOP: Statements should start on a tabstop
#972: FILE: include/linux/spi.h:137:
+	    if( drv->free ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#972: FILE: include/linux/spi.h:137:
+	    if( drv->free ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#972: FILE: include/linux/spi.h:137:
+	    if( drv->free ) 

ERROR:SPACING: space required before the open parenthesis '('
#972: FILE: include/linux/spi.h:137:
+	    if( drv->free ) 

WARNING:TABSTOP: Statements should start on a tabstop
#974: FILE: include/linux/spi.h:139:
+	    if( drv->release_buffer ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#974: FILE: include/linux/spi.h:139:
+	    if( drv->release_buffer ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#974: FILE: include/linux/spi.h:139:
+	    if( drv->release_buffer ) {

ERROR:SPACING: space required before the open parenthesis '('
#974: FILE: include/linux/spi.h:139:
+	    if( drv->release_buffer ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: include/linux/spi.h:140:
+^I^Iif( msg->databuf_rd) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#975: FILE: include/linux/spi.h:140:
+		if( msg->databuf_rd) 
+		    drv->release_buffer( msg->device, msg->databuf_rd );

ERROR:SPACING: space prohibited after that open parenthesis '('
#975: FILE: include/linux/spi.h:140:
+		if( msg->databuf_rd) 

ERROR:SPACING: space required before the open parenthesis '('
#975: FILE: include/linux/spi.h:140:
+		if( msg->databuf_rd) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#976: FILE: include/linux/spi.h:141:
+		    drv->release_buffer( msg->device, msg->databuf_rd );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#976: FILE: include/linux/spi.h:141:
+		    drv->release_buffer( msg->device, msg->databuf_rd );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#977: FILE: include/linux/spi.h:142:
+    ^I^Iif( msg->databuf_wr) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: include/linux/spi.h:142:
+    ^I^Iif( msg->databuf_wr) $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#977: FILE: include/linux/spi.h:142:
+    ^I^Iif( msg->databuf_wr) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: include/linux/spi.h:142:
+    ^I^Iif( msg->databuf_wr) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#977: FILE: include/linux/spi.h:142:
+    		if( msg->databuf_wr) 
+		    drv->release_buffer( msg->device, msg->databuf_wr );

ERROR:SPACING: space prohibited after that open parenthesis '('
#977: FILE: include/linux/spi.h:142:
+    		if( msg->databuf_wr) 

ERROR:SPACING: space required before the open parenthesis '('
#977: FILE: include/linux/spi.h:142:
+    		if( msg->databuf_wr) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#978: FILE: include/linux/spi.h:143:
+		    drv->release_buffer( msg->device, msg->databuf_wr );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#978: FILE: include/linux/spi.h:143:
+		    drv->release_buffer( msg->device, msg->databuf_wr );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#980: FILE: include/linux/spi.h:145:
+^Iif( msg->devbuf_rd ) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#980: FILE: include/linux/spi.h:145:
+	if( msg->devbuf_rd ) 
+	    do_free( msg->devbuf_rd );

ERROR:SPACING: space prohibited after that open parenthesis '('
#980: FILE: include/linux/spi.h:145:
+	if( msg->devbuf_rd ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#980: FILE: include/linux/spi.h:145:
+	if( msg->devbuf_rd ) 

ERROR:SPACING: space required before the open parenthesis '('
#980: FILE: include/linux/spi.h:145:
+	if( msg->devbuf_rd ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#981: FILE: include/linux/spi.h:146:
+	    do_free( msg->devbuf_rd );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#981: FILE: include/linux/spi.h:146:
+	    do_free( msg->devbuf_rd );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#982: FILE: include/linux/spi.h:147:
+	if( msg->devbuf_wr)
+	    do_free( msg->devbuf_wr );

ERROR:SPACING: space prohibited after that open parenthesis '('
#982: FILE: include/linux/spi.h:147:
+	if( msg->devbuf_wr)

ERROR:SPACING: space required before the open parenthesis '('
#982: FILE: include/linux/spi.h:147:
+	if( msg->devbuf_wr)

ERROR:SPACING: space prohibited after that open parenthesis '('
#983: FILE: include/linux/spi.h:148:
+	    do_free( msg->devbuf_wr );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#983: FILE: include/linux/spi.h:148:
+	    do_free( msg->devbuf_wr );

ERROR:SPACING: space prohibited after that open parenthesis '('
#984: FILE: include/linux/spi.h:149:
+	kfree( msg );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#984: FILE: include/linux/spi.h:149:
+	kfree( msg );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: include/linux/spi.h:150:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#988: FILE: include/linux/spi.h:153:
+static inline u8* spimsg_buffer_rd( struct spi_msg* msg ) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#988: FILE: include/linux/spi.h:153:
+static inline u8* spimsg_buffer_rd( struct spi_msg* msg ) 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#988: FILE: include/linux/spi.h:153:
+static inline u8* spimsg_buffer_rd( struct spi_msg* msg ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#988: FILE: include/linux/spi.h:153:
+static inline u8* spimsg_buffer_rd( struct spi_msg* msg ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#988: FILE: include/linux/spi.h:153:
+static inline u8* spimsg_buffer_rd( struct spi_msg* msg ) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: include/linux/spi.h:155:
+    return msg ? msg->databuf_rd : NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: include/linux/spi.h:158:
+static inline u8* spimsg_buffer_wr( struct spi_msg* msg ) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#993: FILE: include/linux/spi.h:158:
+static inline u8* spimsg_buffer_wr( struct spi_msg* msg ) 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#993: FILE: include/linux/spi.h:158:
+static inline u8* spimsg_buffer_wr( struct spi_msg* msg ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#993: FILE: include/linux/spi.h:158:
+static inline u8* spimsg_buffer_wr( struct spi_msg* msg ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#993: FILE: include/linux/spi.h:158:
+static inline u8* spimsg_buffer_wr( struct spi_msg* msg ) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: include/linux/spi.h:160:
+    return msg ? msg->databuf_wr : NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: include/linux/spi.h:163:
+static inline u8* spimsg_buffer( struct spi_msg* msg ) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#998: FILE: include/linux/spi.h:163:
+static inline u8* spimsg_buffer( struct spi_msg* msg ) 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#998: FILE: include/linux/spi.h:163:
+static inline u8* spimsg_buffer( struct spi_msg* msg ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#998: FILE: include/linux/spi.h:163:
+static inline u8* spimsg_buffer( struct spi_msg* msg ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#998: FILE: include/linux/spi.h:163:
+static inline u8* spimsg_buffer( struct spi_msg* msg ) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: include/linux/spi.h:165:
+    if( !msg ) return NULL;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1000: FILE: include/linux/spi.h:165:
+    if( !msg ) return NULL;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1000: FILE: include/linux/spi.h:165:
+    if( !msg ) return NULL;

ERROR:SPACING: space required before the open parenthesis '('
#1000: FILE: include/linux/spi.h:165:
+    if( !msg ) return NULL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1000: FILE: include/linux/spi.h:165:
+    if( !msg ) return NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: include/linux/spi.h:166:
+    if( ( msg->flags & (SPI_M_RD|SPI_M_WR) ) == (SPI_M_RD|SPI_M_WR) ) {$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1001: FILE: include/linux/spi.h:166:
+    if( ( msg->flags & (SPI_M_RD|SPI_M_WR) ) == (SPI_M_RD|SPI_M_WR) ) {
                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1001: FILE: include/linux/spi.h:166:
+    if( ( msg->flags & (SPI_M_RD|SPI_M_WR) ) == (SPI_M_RD|SPI_M_WR) ) {
                                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1001: FILE: include/linux/spi.h:166:
+    if( ( msg->flags & (SPI_M_RD|SPI_M_WR) ) == (SPI_M_RD|SPI_M_WR) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1001: FILE: include/linux/spi.h:166:
+    if( ( msg->flags & (SPI_M_RD|SPI_M_WR) ) == (SPI_M_RD|SPI_M_WR) ) {

ERROR:SPACING: space required before the open parenthesis '('
#1001: FILE: include/linux/spi.h:166:
+    if( ( msg->flags & (SPI_M_RD|SPI_M_WR) ) == (SPI_M_RD|SPI_M_WR) ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1002: FILE: include/linux/spi.h:167:
+	printk( KERN_ERR"%s: what buffer do you really want ?\n", __FUNCTION__ );

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1002: FILE: include/linux/spi.h:167:
+	printk( KERN_ERR"%s: what buffer do you really want ?\n", __FUNCTION__ );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1002: FILE: include/linux/spi.h:167:
+	printk( KERN_ERR"%s: what buffer do you really want ?\n", __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1002: FILE: include/linux/spi.h:167:
+	printk( KERN_ERR"%s: what buffer do you really want ?\n", __FUNCTION__ );

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1002: FILE: include/linux/spi.h:167:
+	printk( KERN_ERR"%s: what buffer do you really want ?\n", __FUNCTION__ );

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1002: FILE: include/linux/spi.h:167:
+	printk( KERN_ERR"%s: what buffer do you really want ?\n", __FUNCTION__ );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: include/linux/spi.h:169:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: include/linux/spi.h:170:
+    if( msg->flags & SPI_M_RD) return msg->databuf_rd;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1005: FILE: include/linux/spi.h:170:
+    if( msg->flags & SPI_M_RD) return msg->databuf_rd;

ERROR:SPACING: space required before the open parenthesis '('
#1005: FILE: include/linux/spi.h:170:
+    if( msg->flags & SPI_M_RD) return msg->databuf_rd;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1005: FILE: include/linux/spi.h:170:
+    if( msg->flags & SPI_M_RD) return msg->databuf_rd;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: include/linux/spi.h:171:
+    if( msg->flags & SPI_M_WR) return msg->databuf_wr;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1006: FILE: include/linux/spi.h:171:
+    if( msg->flags & SPI_M_WR) return msg->databuf_wr;

ERROR:SPACING: space required before the open parenthesis '('
#1006: FILE: include/linux/spi.h:171:
+    if( msg->flags & SPI_M_WR) return msg->databuf_wr;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1006: FILE: include/linux/spi.h:171:
+    if( msg->flags & SPI_M_WR) return msg->databuf_wr;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1009: FILE: include/linux/spi.h:174:
+#define SPIMSG_OK ^I0x01$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1010: FILE: include/linux/spi.h:175:
+#define SPIMSG_FAILED ^I0x80$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1011: FILE: include/linux/spi.h:176:
+#define SPIMSG_STARTED  0x02 $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1019: FILE: include/linux/spi.h:184:
+static inline int spi_bus_driver_register( struct spi_bus_driver* bus_driver )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1019: FILE: include/linux/spi.h:184:
+static inline int spi_bus_driver_register( struct spi_bus_driver* bus_driver )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1019: FILE: include/linux/spi.h:184:
+static inline int spi_bus_driver_register( struct spi_bus_driver* bus_driver )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1021: FILE: include/linux/spi.h:186:
+	return driver_register( &bus_driver->driver );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1021: FILE: include/linux/spi.h:186:
+	return driver_register( &bus_driver->driver );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1024: FILE: include/linux/spi.h:189:
+void spi_bus_driver_unregister( struct spi_bus_driver* );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1024: FILE: include/linux/spi.h:189:
+void spi_bus_driver_unregister( struct spi_bus_driver* );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1025: FILE: include/linux/spi.h:190:
+int spi_bus_driver_init( struct spi_bus_driver* driver, struct device* dev );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1025: FILE: include/linux/spi.h:190:
+int spi_bus_driver_init( struct spi_bus_driver* driver, struct device* dev );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1025: FILE: include/linux/spi.h:190:
+int spi_bus_driver_init( struct spi_bus_driver* driver, struct device* dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1025: FILE: include/linux/spi.h:190:
+int spi_bus_driver_init( struct spi_bus_driver* driver, struct device* dev );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1026: FILE: include/linux/spi.h:191:
+int spi_device_add( struct device* parent, struct spi_device*, char* name );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1026: FILE: include/linux/spi.h:191:
+int spi_device_add( struct device* parent, struct spi_device*, char* name );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1026: FILE: include/linux/spi.h:191:
+int spi_device_add( struct device* parent, struct spi_device*, char* name );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1026: FILE: include/linux/spi.h:191:
+int spi_device_add( struct device* parent, struct spi_device*, char* name );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_device*' should also have an identifier name
#1026: FILE: include/linux/spi.h:191:
+int spi_device_add( struct device* parent, struct spi_device*, char* name );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1027: FILE: include/linux/spi.h:192:
+static inline void spi_device_del( struct spi_device* dev )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1027: FILE: include/linux/spi.h:192:
+static inline void spi_device_del( struct spi_device* dev )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1027: FILE: include/linux/spi.h:192:
+static inline void spi_device_del( struct spi_device* dev )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1029: FILE: include/linux/spi.h:194:
+	device_unregister( &dev->dev );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1029: FILE: include/linux/spi.h:194:
+	device_unregister( &dev->dev );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: include/linux/spi.h:196:
+static inline int spi_driver_add( struct spi_driver* drv ) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1031: FILE: include/linux/spi.h:196:
+}
+static inline int spi_driver_add( struct spi_driver* drv ) 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1031: FILE: include/linux/spi.h:196:
+static inline int spi_driver_add( struct spi_driver* drv ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1031: FILE: include/linux/spi.h:196:
+static inline int spi_driver_add( struct spi_driver* drv ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1031: FILE: include/linux/spi.h:196:
+static inline int spi_driver_add( struct spi_driver* drv ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1033: FILE: include/linux/spi.h:198:
+	return driver_register( &drv->driver );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1033: FILE: include/linux/spi.h:198:
+	return driver_register( &drv->driver );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: include/linux/spi.h:200:
+static inline void spi_driver_del( struct spi_driver* drv ) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1035: FILE: include/linux/spi.h:200:
+}
+static inline void spi_driver_del( struct spi_driver* drv ) 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1035: FILE: include/linux/spi.h:200:
+static inline void spi_driver_del( struct spi_driver* drv ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1035: FILE: include/linux/spi.h:200:
+static inline void spi_driver_del( struct spi_driver* drv ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1035: FILE: include/linux/spi.h:200:
+static inline void spi_driver_del( struct spi_driver* drv ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1037: FILE: include/linux/spi.h:202:
+	driver_unregister( &drv->driver );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1037: FILE: include/linux/spi.h:202:
+	driver_unregister( &drv->driver );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1042: FILE: include/linux/spi.h:207:
+extern int spi_write(struct spi_device *dev, const char *buf, int len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1043: FILE: include/linux/spi.h:208:
+extern int spi_read(struct spi_device *dev, char *buf, int len);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1045: FILE: include/linux/spi.h:210:
+extern int spi_queue( struct spi_msg* message );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1045: FILE: include/linux/spi.h:210:
+extern int spi_queue( struct spi_msg* message );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1045: FILE: include/linux/spi.h:210:
+extern int spi_queue( struct spi_msg* message );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1045: FILE: include/linux/spi.h:210:
+extern int spi_queue( struct spi_msg* message );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1046: FILE: include/linux/spi.h:211:
+extern int spi_transfer( struct spi_msg* message, void (*status)( struct spi_msg*, int ) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1046: FILE: include/linux/spi.h:211:
+extern int spi_transfer( struct spi_msg* message, void (*status)( struct spi_msg*, int ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1046: FILE: include/linux/spi.h:211:
+extern int spi_transfer( struct spi_msg* message, void (*status)( struct spi_msg*, int ) );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1046: FILE: include/linux/spi.h:211:
+extern int spi_transfer( struct spi_msg* message, void (*status)( struct spi_msg*, int ) );

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1047: FILE: include/linux/spi.h:212:
+extern int spi_bus_populate( struct device* parent, char* device, void (*assign)( struct device* parent, struct spi_device* ) );

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1055: FILE: Documentation/spi.txt:1:
+Documentation/spi.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1070: FILE: Documentation/spi.txt:16:
+SPI stands for "Serial Peripheral Interface", a full-duplex synchronous $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1071: FILE: Documentation/spi.txt:17:
+serial interface for connecting low-/medium-bandwidth external devices $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1074: FILE: Documentation/spi.txt:20:
+- Master Out Slave In (MOSI): supplies the output data from the master $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1076: FILE: Documentation/spi.txt:22:
+- Master In Slave Out (MISO): supplies the output data from a slave to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1077: FILE: Documentation/spi.txt:23:
+  the input of the master. It is important to note that there can be no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: Documentation/spi.txt:24:
+  more than one slave that is transmitting data during any particular $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1080: FILE: Documentation/spi.txt:26:
+- Serial Clock (SCLK): a control line driven by the master, regulating $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1082: FILE: Documentation/spi.txt:28:
+- Slave Select (SS): a control line that allows slaves to be turned on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1089: FILE: Documentation/spi.txt:35:
+SPI busses as well as devices connected to these busses. Currently, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: Documentation/spi.txt:43:
+The SPI infrastructure deals with several levels of abstraction. They are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: Documentation/spi.txt:44:
+"SPI bus", "SPI bus driver", "SPI device" and "SPI device driver". The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: Documentation/spi.txt:45:
+"SPI bus" is hardware device, which usually called "SPI adapter", and has $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1102: FILE: Documentation/spi.txt:48:
+spi_device. The "SPI bus driver" is the driver which controls the whole $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1104: FILE: Documentation/spi.txt:50:
+and "SPI device driver" is driver that controls the only device on the SPI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1105: FILE: Documentation/spi.txt:51:
+bus, controlled by "SPI bus driver". "SPI device driver" can indirectly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: Documentation/spi.txt:52:
+call "SPI bus driver" to send/receive messages using API provided by SPI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: Documentation/spi.txt:60:
+       |..|--------+               +---------------+   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: Documentation/spi.txt:61:
+     +------------+| is parent to  |  SPI devices  | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: Documentation/spi.txt:82:
+In this example, function like extract_name would put the '\0' on the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1137: FILE: Documentation/spi.txt:83:
+1st space of device's name, so names will become just "Dev1", "Dev2", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: Documentation/spi.txt:90:
+callbacks to allocate/free/get access to buffer. These callbacks are defined $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: Documentation/spi.txt:92:
+To send data using DMA, the buffers should be allocated using $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1148: FILE: Documentation/spi.txt:94:
+using kmalloc function. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1149: FILE: Documentation/spi.txt:95:
+To allow drivers to allocate buffers in non-standard $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: Documentation/spi.txt:100:
+After allocation, the buffer must be accessed to copy the buffer to be send $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1156: FILE: Documentation/spi.txt:102:
+allocated using driver's alloc method, it(buffer) will be accessed using $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: Documentation/spi.txt:104:
+allocated by driver's alloc method. If there is no get_buffer method, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1163: FILE: Documentation/spi.txt:109:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: Documentation/spi.txt:115:
+i. struct spi_msg $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1174: FILE: Documentation/spi.txt:120:
+        unsigned short len;     $

WARNING:TYPO_SPELLING: 'approproate' may be misspelled - perhaps 'appropriate'?
#1201: FILE: Documentation/spi.txt:147:
+		device driver, if device driver provides approproate callback.
 		                                         ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: Documentation/spi.txt:159:
+This functions is called to allocate the spi_msg structure and set the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1236: FILE: Documentation/spi.txt:182:
+This structure represents the physical device on SPI bus. The SPI bus driver $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1242: FILE: Documentation/spi.txt:188:
+int spi_device_add( struct device* parent, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: Documentation/spi.txt:189:
+                    struct spi_device* dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: Documentation/spi.txt:193:
+that should be non-empty, non-NULL string. Returns 0 on no error, error code $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1265: FILE: Documentation/spi.txt:211:
+all fields of driver sub-structure should be properly filled, e.g., the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1266: FILE: Documentation/spi.txt:212:
+`bus_type' should be set to spi_bus. Otherwise, the driver will be incorrectly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1294: FILE: Documentation/spi.txt:240:
+To handle transactions over the SPI bus, the spi_bus_driver structure must $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1295: FILE: Documentation/spi.txt:241:
+be prepared and registered with core. Any transactions, either synchronous $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: Documentation/spi.txt:242:
+or asynchronous, go through spi_bus_driver->xfer function. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1310: FILE: Documentation/spi.txt:256:
+^Iselect^Ipointer to function that gets called when bus needs to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: Documentation/spi.txt:280:
+The driver and corresponding platform device are matched by name, so, in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1343: FILE: Documentation/spi.txt:289:
+void spi_bus_populate( struct device* parent, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1348: FILE: Documentation/spi.txt:294:
+After creating the spi_device, the spi_bus_populate calls the `callback' $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1363: FILE: Documentation/spi.txt:309:
+The driver that uses SPI core can initiate transfers either by calling $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1367: FILE: Documentation/spi.txt:313:
+prepare the spimsg structure and know the target device to your message to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: Documentation/spi.txt:316:
+int spi_transfer( struct spi_msg msgs, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1372: FILE: Documentation/spi.txt:318:
+If callback is zero, start synchronous transfer. Otherwise, queue $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: Documentation/spi.txt:334:
+This variable is created during initialization of spi core, and has to be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1391: FILE: Documentation/spi.txt:337:
+matched to spi_device and never be probed with hardware. Note that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1398: FILE: Documentation/spi.txt:344:
+to contact me: $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 399 errors, 153 warnings, 22 checks, 1321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
