WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
Following Jeremy Fitzhardinge's advice, I rewrote my marker mechanism taking in

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#481: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#486: FILE: include/asm-alpha/marker.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: include/asm-alpha/marker.h:6:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#505: FILE: include/asm-arm/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: include/asm-arm/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#524: FILE: include/asm-arm26/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: include/asm-arm26/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#543: FILE: include/asm-cris/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: include/asm-cris/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#562: FILE: include/asm-frv/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: include/asm-frv/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#581: FILE: include/asm-generic/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: include/asm-generic/marker.h:5:
+ * $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'format' - possible side-effects?
#590: FILE: include/asm-generic/marker.h:10:
+#define MARK_CALL(name, format, args...) \
+	do { \
+		static marker_probe_func *__mark_call_##name = \
+					__mark_empty_function; \
+		asm volatile(	".section .markers, \"a\";\n\t" \
+				".long %0, %1;\n\t" \
+				".previous;\n\t" : : \
+			"m" (__mark_call_##name), \
+			"m" (*format));\
+		preempt_disable(); \
+		(*__mark_call_##name)(format, ## args); \
+		preempt_enable_no_resched(); \
+	} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'format' may be better as '(format)' to avoid precedence issues
#590: FILE: include/asm-generic/marker.h:10:
+#define MARK_CALL(name, format, args...) \
+	do { \
+		static marker_probe_func *__mark_call_##name = \
+					__mark_empty_function; \
+		asm volatile(	".section .markers, \"a\";\n\t" \
+				".long %0, %1;\n\t" \
+				".previous;\n\t" : : \
+			"m" (__mark_call_##name), \
+			"m" (*format));\
+		preempt_disable(); \
+		(*__mark_call_##name)(format, ## args); \
+		preempt_enable_no_resched(); \
+	} while(0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#594: FILE: include/asm-generic/marker.h:14:
+		asm volatile(	".section .markers, \"a\";\n\t" \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#602: FILE: include/asm-generic/marker.h:22:
+	} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#626: FILE: include/asm-h8300/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: include/asm-h8300/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#645: FILE: include/asm-i386/marker.h:1:
+/*

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_MARK_JUMP' is wrong - use Kconfig variables or standard guards instead
#658: FILE: include/asm-i386/marker.h:14:
+#define ARCH_HAS_MARK_JUMP

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

ERROR:SPACING: space prohibited after that open parenthesis '('
#664: FILE: include/asm-i386/marker.h:20:
+		asm volatile(	".section .markers, \"a\";\n\t" \

ERROR:SPACING: space prohibited after that open parenthesis '('
#670: FILE: include/asm-i386/marker.h:26:
+		asm volatile (	".align 16;\n\t" : : ); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#671: FILE: include/asm-i386/marker.h:27:
+		asm volatile (	".byte 0xeb;\n\t" : : ); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#673: FILE: include/asm-i386/marker.h:29:
+		asm volatile (	".byte %0-%1;\n\t" : : \

ERROR:SPACING: space required before the open parenthesis '('
#681: FILE: include/asm-i386/marker.h:37:
+	} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#688: FILE: include/asm-ia64/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: include/asm-ia64/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#707: FILE: include/asm-m32r/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: include/asm-m32r/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#726: FILE: include/asm-m68k/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: include/asm-m68k/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#745: FILE: include/asm-m68knommu/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#750: FILE: include/asm-m68knommu/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#764: FILE: include/asm-mips/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: include/asm-mips/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#783: FILE: include/asm-parisc/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: include/asm-parisc/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#802: FILE: include/asm-powerpc/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: include/asm-powerpc/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#821: FILE: include/asm-ppc/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: include/asm-ppc/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#840: FILE: include/asm-ppc64/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#845: FILE: include/asm-ppc64/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#859: FILE: include/asm-s390/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: include/asm-s390/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#878: FILE: include/asm-sh/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#883: FILE: include/asm-sh/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#897: FILE: include/asm-sh64/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: include/asm-sh64/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#916: FILE: include/asm-sparc/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: include/asm-sparc/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#935: FILE: include/asm-sparc64/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: include/asm-sparc64/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#954: FILE: include/asm-um/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#959: FILE: include/asm-um/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#973: FILE: include/asm-v850/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#978: FILE: include/asm-v850/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#992: FILE: include/asm-x86_64/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#997: FILE: include/asm-x86_64/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1011: FILE: include/asm-xtensa/marker.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1016: FILE: include/asm-xtensa/marker.h:6:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1030: FILE: include/linux/marker.h:1:
+#ifndef _LINUX_MARKER_H

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'format' - possible side-effects?
#1076: FILE: include/linux/marker.h:47:
+#define MARK(name, format, args...) \
+	do { \
+		__label__ here; \
+here:   	asm volatile(	".section .markers, \"a\";\n\t" \
+				".long %0, %1;\n\t" \
+				".previous;\n\t" : : \
+			"m" (*(#name)), \
+			"m" (*&&here)); \
+		__mark_check_format(format, ## args); \
+		MARK_JUMP(name, format, ## args); \
+	} while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1079: FILE: include/linux/marker.h:50:
+here:   ^Iasm volatile(^I".section .markers, \"a\";\n\t" \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1079: FILE: include/linux/marker.h:50:
+here:   	asm volatile(	".section .markers, \"a\";\n\t" \

ERROR:SPACING: space required before the open parenthesis '('
#1086: FILE: include/linux/marker.h:57:
+	} while(0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1092: FILE: include/linux/marker.h:63:
+typedef asmlinkage void marker_probe_func(const char *fmt, ...);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#1106: FILE: include/linux/marker.h:77:
+static inline __attribute__ ((format (printf, 1, 2)))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1112: FILE: include/linux/marker.h:83:
+extern int marker_set_probe(const char *name, const char *format,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1113: FILE: include/linux/marker.h:84:
+extern int marker_set_probe(const char *name, const char *format,
+				marker_probe_func *probe);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1115: FILE: include/linux/marker.h:86:
+extern int marker_remove_probe(marker_probe_func *probe);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1116: FILE: include/linux/marker.h:87:
+extern int marker_list_probe(marker_probe_func *probe);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1141: FILE: kernel/Kconfig.marker:3:
+config MARKERS
+	bool "Activate markers"
+	select MODULES
+	default n
+	help
+	  Place an empty function call at each marker site. Can by
+	  dynamically changed for a probe function.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1149: FILE: kernel/Kconfig.marker:11:
+config MARKERS_FORCE_DIRECT_CALL
+	bool "Disable markers jump optimisations"
+	depends EMBEDDED
+	default n
+	help
+	  Disable code replacement jump optimisations. Especially useful if your
+	  code is in a read-only rom/flash.
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1165: FILE: kernel/module.c:126:
+extern const struct __mark_marker __start___markers[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1166: FILE: kernel/module.c:127:
+extern const struct __mark_marker __stop___markers[];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: kernel/module.c:247:
+static int marker_set_probe_range(const char *name, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1181: FILE: kernel/module.c:248:
+static int marker_set_probe_range(const char *name, 
+	const char *format,

ERROR:SPACING: space required before the open parenthesis '('
#1189: FILE: kernel/module.c:256:
+	for(iter = begin; iter < end; iter++) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1192: FILE: kernel/module.c:259:
+				printk(KERN_NOTICE

WARNING:SPLIT_STRING: quoted string split across lines
#1194: FILE: kernel/module.c:261:
+					"Format mismatch for probe %s "
+					"(%s), marker (%s)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: kernel/module.c:282:
+static int marker_remove_probe_range(marker_probe_func *probe,
+	const struct __mark_marker *begin,

ERROR:SPACING: space required before the open parenthesis '('
#1221: FILE: kernel/module.c:288:
+	for(iter = begin; iter < end; iter++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1235: FILE: kernel/module.c:302:
+static int marker_list_probe_range(marker_probe_func *probe,
+	const struct __mark_marker *begin,

ERROR:SPACING: space required before the open parenthesis '('
#1241: FILE: kernel/module.c:308:
+	for(iter = begin; iter < end; iter++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1243: FILE: kernel/module.c:310:
+			if (probe != *iter->call) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1244: FILE: kernel/module.c:311:
+		printk("name %s location 0x%p\n", iter->name, iter->location);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1246: FILE: kernel/module.c:313:
+		printk("  select %hu jump_call %p jump_over %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: kernel/module.c:314:
+		printk("  select %hu jump_call %p jump_over %p\n",
+			*iter->select, iter->jump_call, iter->jump_over);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1249: FILE: kernel/module.c:316:
+		printk("  func 0x%p format \"%s\"\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: kernel/module.c:317:
+		printk("  func 0x%p format \"%s\"\n",
+			*iter->call, iter->format);

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#1255: FILE: kernel/module.c:322:
+/* markers use the modlist_lock to to synchronise */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1255: FILE: kernel/module.c:322:
+}
+/* markers use the modlist_lock to to synchronise */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1257: FILE: kernel/module.c:324:
+int marker_set_probe(const char *name, const char *format,
+				marker_probe_func *probe)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1267: FILE: kernel/module.c:334:
+^I/* Markers in modules. */ $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1270: FILE: kernel/module.c:337:
+				mod->markers, mod->markers+mod->num_markers);
 				                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1287: FILE: kernel/module.c:354:
+^I/* Markers in modules. */ $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1290: FILE: kernel/module.c:357:
+				mod->markers, mod->markers+mod->num_markers);
 				                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1305: FILE: kernel/module.c:372:
+	printk("Listing kernel markers\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1308: FILE: kernel/module.c:375:
+^I/* Markers in modules. */ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1309: FILE: kernel/module.c:376:
+	printk("Listing module markers\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1311: FILE: kernel/module.c:378:
+		printk("Listing markers for module %s\n", mod->name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1313: FILE: kernel/module.c:380:
+				mod->markers, mod->markers+mod->num_markers);
 				                          ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000035096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 45 warnings, 17 checks, 977 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000035096.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
