ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#57: FILE: drivers/char/raw.c:248:
+	struct rio * rio = bio->bi_private;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#59: FILE: drivers/char/raw.c:250:
+	if ((bio->bi_rw & 0x1) == READ)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#61: FILE: drivers/char/raw.c:252:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: drivers/char/raw.c:256:
+^I        for (i = 0; i < bio->bi_vcnt; i++) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#79: FILE: drivers/char/raw.c:270:
+static ssize_t raw_file_rw(struct file *filp, char __user *buf,
                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: drivers/char/raw.c:271:
+static ssize_t raw_file_rw(struct file *filp, char __user *buf,
+				size_t count, loff_t *ppos, int rw)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#82: FILE: drivers/char/raw.c:273:
+	struct inode * inode = filp->f_mapping->host;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxW)
#84: FILE: drivers/char/raw.c:275:
+	unsigned long blocksize_mask = (1<< blkbits) - 1;
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#85: FILE: drivers/char/raw.c:276:
+	struct page * quick_list[PAGE_QUICK_LIST];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: drivers/char/raw.c:278:
+	struct bio * bio;

CHECK:SPACING: No space is necessary after a cast
#89: FILE: drivers/char/raw.c:280:
+	unsigned long addr = (unsigned long) buf;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: drivers/char/raw.c:289:
+	if (addr & blocksize_mask || count & blocksize_mask ||
+		count < 0 || pos & blocksize_mask)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#116: FILE: drivers/char/raw.c:307:
+	if (unlikely(bio == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#117: FILE: drivers/char/raw.c:308:
+		if (atomic_read(&rio.bio_count) == 1)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#119: FILE: drivers/char/raw.c:310:
+			return -ENOMEM;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#119: FILE: drivers/char/raw.c:310:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/char/raw.c:330:
+			ret = get_user_pages(current, current->mm, addr,
+						min(nr_pages, PAGE_QUICK_LIST),

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#140: FILE: drivers/char/raw.c:331:
+						rw==READ, 0, quick_list, NULL);
 						  ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#144: FILE: drivers/char/raw.c:335:
+				if (atomic_read(&rio.bio_count) == 1)
[...]
+				else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#146: FILE: drivers/char/raw.c:337:
+					return ret;
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#146: FILE: drivers/char/raw.c:337:
+				else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/char/raw.c:345:
+		if (unlikely(!bio_add_page(bio, quick_list[pg_idx], cur_len,
+			cur_offset))) {

CHECK:SPACING: No space is necessary after a cast
#159: FILE: drivers/char/raw.c:350:
+			pos += addr - (unsigned long) buf;

CHECK:SPACING: No space is necessary after a cast
#180: FILE: drivers/char/raw.c:371:
+	ret = addr - (unsigned long) buf;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#185: FILE: drivers/char/raw.c:376:
+static ssize_t raw_file_read(struct file *filp, char __user *buf,
                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: drivers/char/raw.c:377:
+static ssize_t raw_file_read(struct file *filp, char __user *buf,
+				size_t count, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#188: FILE: drivers/char/raw.c:379:
+	return raw_file_rw(filp, buf, count, ppos, READ);
 	                   ^^^^

CHECK:SPACING: No space is necessary after a cast
#200: FILE: drivers/char/raw.c:385:
+	return raw_file_rw(file, (char __user *) buf, count, ppos, WRITE);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200915.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 7 warnings, 15 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200915.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
