WARNING:TYPO_SPELLING: 'frontent' may be misspelled - perhaps 'frontend'?
#87: 
gconf.cc (QT frontent) i18n coding and to all the volunteers that are
             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#90: 
	I left the question on wether to ship the translations with the
	                       ^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#111: 
  For the menu entries and help texts. A new tool, kxgettext, is now used with 

WARNING:REPEATED_WORD: Possible repeated word: 'as'
#113: 
  scripts/kconfig/linux.pot, that should be used as as the starting point for

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#116: 
  Signed-off-by: Arnaldo Carvalho de Melo <acme@conectiva.com.br>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#117: 
  Signed-off-by: Andrew Morton <akpm@osdl.org>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#118: 
  Signed-off-by: Linus Torvalds <torvalds@osdl.org

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Linus Torvalds <torvalds@osdl.org'
#118: 
  Signed-off-by: Linus Torvalds <torvalds@osdl.org

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: scripts/kconfig/conf.c:508:
+				printf(_("%s: No default config file specified\n"),
 					av[0]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: scripts/kconfig/confdata.c:92:
+^I^I^I^I         "# using defaults found in %s\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: scripts/kconfig/confdata.c:93:
+^I^I^I^I         "#\n"), name);$

WARNING:SPLIT_STRING: quoted string split across lines
#295: FILE: scripts/kconfig/confdata.c:319:
+		       "%s%s"
+		       "#\n"),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: scripts/kconfig/gconf.c:43:
+    N_("Sorry, no help available for this option yet.\n");$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#452: FILE: scripts/kconfig/gconf.c:710:
+	const gchar *intro_text = _(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: scripts/kconfig/kxgettext.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#516: FILE: scripts/kconfig/kxgettext.c:13:
+static char *escape(const char* text, char *bf, int len)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strchr"
#519: FILE: scripts/kconfig/kxgettext.c:16:
+	int multiline = strchr(text, '\n') != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#532: FILE: scripts/kconfig/kxgettext.c:29:
+		if (*text == '"')
[...]
+		else if (*text == '\n') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo*		 bar" should be "foo *bar"
#560: FILE: scripts/kconfig/kxgettext.c:57:
+	char*		 file;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#568: FILE: scripts/kconfig/kxgettext.c:65:
+	if (self == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self"
#591: FILE: scripts/kconfig/kxgettext.c:88:
+	if (self == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->files"
#595: FILE: scripts/kconfig/kxgettext.c:92:
+	if (self->files == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->msg"
#599: FILE: scripts/kconfig/kxgettext.c:96:
+	if (self->msg == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "m"
#618: FILE: scripts/kconfig/kxgettext.c:115:
+	while (m != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fl"
#632: FILE: scripts/kconfig/kxgettext.c:129:
+	if (fl == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#649: FILE: scripts/kconfig/kxgettext.c:146:
+	if (m != NULL)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "m"
#649: FILE: scripts/kconfig/kxgettext.c:146:
+	if (m != NULL)

CHECK:BRACES: Unbalanced braces around else statement
#651: FILE: scripts/kconfig/kxgettext.c:148:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#654: FILE: scripts/kconfig/kxgettext.c:151:
+		if (m != NULL) {
[...]
+		} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "m"
#654: FILE: scripts/kconfig/kxgettext.c:151:
+		if (m != NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#657: FILE: scripts/kconfig/kxgettext.c:154:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!menu->file"
#668: FILE: scripts/kconfig/kxgettext.c:165:
+		     menu->file == NULL ? "Root Menu" : menu->file->name,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "menu->sym"
#671: FILE: scripts/kconfig/kxgettext.c:168:
+	if (menu->sym != NULL && menu->sym->help != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "menu->sym->help"
#671: FILE: scripts/kconfig/kxgettext.c:168:
+	if (menu->sym != NULL && menu->sym->help != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!menu->file"
#673: FILE: scripts/kconfig/kxgettext.c:170:
+			     menu->file == NULL ? "Root Menu" : menu->file->name,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "child"
#676: FILE: scripts/kconfig/kxgettext.c:173:
+	for (child = menu->list; child != NULL; child = child->next)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "child->prompt"
#677: FILE: scripts/kconfig/kxgettext.c:174:
+		if (child->prompt != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fl"
#688: FILE: scripts/kconfig/kxgettext.c:185:
+	while (fl != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self->option"
#693: FILE: scripts/kconfig/kxgettext.c:190:
+	if (self->option != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "m"
#711: FILE: scripts/kconfig/kxgettext.c:208:
+	while (m != NULL) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#767: FILE: scripts/kconfig/mconf.c:28:
+static const char mconf_readme[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#778: FILE: scripts/kconfig/mconf.c:162:
+menu_instructions[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#786: FILE: scripts/kconfig/mconf.c:168:
 	"Press <Esc><Esc> to exit, <?> for Help, </> for Search.  "
+	"Legend: [*] built-in  [ ] excluded  <M> module  < > module capable"),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#787: FILE: scripts/kconfig/mconf.c:169:
+radiolist_instructions[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#793: FILE: scripts/kconfig/mconf.c:173:
 	"followed by the <SPACE BAR>. "
+	"Press <?> for additional information about this option."),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#794: FILE: scripts/kconfig/mconf.c:174:
+inputbox_instructions_int[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#799: FILE: scripts/kconfig/mconf.c:177:
 	"Fractions will not be accepted.  "
+	"Use the <TAB> key to move from the input field to the buttons below it."),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#800: FILE: scripts/kconfig/mconf.c:178:
+inputbox_instructions_hex[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#804: FILE: scripts/kconfig/mconf.c:180:
 	"Please enter a hexadecimal value. "
+	"Use the <TAB> key to move from the input field to the buttons below it."),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#805: FILE: scripts/kconfig/mconf.c:181:
+inputbox_instructions_string[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#809: FILE: scripts/kconfig/mconf.c:183:
 	"Please enter a string value. "
+	"Use the <TAB> key to move from the input field to the buttons below it."),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#810: FILE: scripts/kconfig/mconf.c:184:
+setmod_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#817: FILE: scripts/kconfig/mconf.c:187:
+nohelp_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#819: FILE: scripts/kconfig/mconf.c:189:
+load_config_text[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#824: FILE: scripts/kconfig/mconf.c:192:
 	"Accept the name shown to restore the configuration you "
+	"last retrieved.  Leave blank to abort."),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#825: FILE: scripts/kconfig/mconf.c:193:
+load_config_help[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#836: FILE: scripts/kconfig/mconf.c:204:
+save_config_text[] = N_(

WARNING:SPLIT_STRING: quoted string split across lines
#840: FILE: scripts/kconfig/mconf.c:206:
 	"Enter a filename to which this configuration should be saved "
+	"as an alternate.  Leave blank to abort."),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#841: FILE: scripts/kconfig/mconf.c:207:
+save_config_help[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#852: FILE: scripts/kconfig/mconf.c:218:
+search_help[] = N_(

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1009: FILE: scripts/kconfig/mconf.c:1021:
+			show_textbox(NULL, _("Can't create file!  Probably a nonexistent directory."), 5, 60);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPLIT_STRING: quoted string split across lines
#1053: FILE: scripts/kconfig/mconf.c:1082:
 				"Your kernel configuration changes were NOT saved."
+				"\n\n"));

WARNING:SPLIT_STRING: quoted string split across lines
#1061: FILE: scripts/kconfig/mconf.c:1088:
 			"*** Execute 'make' to build the kernel or try 'make help'."
+			"\n\n"));

WARNING:SPLIT_STRING: quoted string split across lines
#1067: FILE: scripts/kconfig/mconf.c:1092:
 			"Your kernel configuration changes were NOT saved."
+			"\n\n"));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 21 warnings, 38 checks, 1033 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
