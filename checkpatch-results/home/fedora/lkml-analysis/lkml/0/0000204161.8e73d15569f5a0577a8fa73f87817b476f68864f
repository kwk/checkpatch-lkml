WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: drivers/serial/jsm/jsm_mgmt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/serial/jsm/jsm_mgmt.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: drivers/serial/jsm/jsm_mgmt.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: drivers/serial/jsm/jsm_mgmt.c:20:
+ *^INOTE TO LINUX KERNEL HACKERS:  DO NOT REFORMAT THIS CODE! $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: drivers/serial/jsm/jsm_mgmt.c:27:
+ *^ISend any bug fixes/changes to:  Eng.Linux at digi dot com. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: drivers/serial/jsm/jsm_mgmt.c:28:
+ *^IThank you. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/serial/jsm/jsm_mgmt.c:33:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: drivers/serial/jsm/jsm_mgmt.c:36:
+ * $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#83: FILE: drivers/serial/jsm/jsm_mgmt.c:38:
+ * $Id: jsm_mgmt.c,v 1.16 2004/08/30 21:40:39 scottk Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#92: FILE: drivers/serial/jsm/jsm_mgmt.c:47:
+#include <asm/uaccess.h>	/* For copy_from_user/copy_to_user */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: drivers/serial/jsm/jsm_mgmt.c:55:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: drivers/serial/jsm/jsm_mgmt.c:60:
+ * jsm_mgmt_open()  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/serial/jsm/jsm_mgmt.c:63:
+ */  $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_mgmt_open', this function's name, in a string
#114: FILE: drivers/serial/jsm/jsm_mgmt.c:69:
+	DPR_MGMT(("jsm_mgmt_open start.\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#127: FILE: drivers/serial/jsm/jsm_mgmt.c:82:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#127: FILE: drivers/serial/jsm/jsm_mgmt.c:82:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_mgmt_open', this function's name, in a string
#134: FILE: drivers/serial/jsm/jsm_mgmt.c:89:
+	DPR_MGMT(("jsm_mgmt_open finish.\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/serial/jsm/jsm_mgmt.c:98:
+ */  $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_mgmt_close', this function's name, in a string
#149: FILE: drivers/serial/jsm/jsm_mgmt.c:104:
+	DPR_MGMT(("jsm_mgmt_close start.\n"));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_mgmt_close', this function's name, in a string
#160: FILE: drivers/serial/jsm/jsm_mgmt.c:115:
+	DPR_MGMT(("jsm_mgmt_close finish.\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/serial/jsm/jsm_mgmt.c:124:
+ */  $

CHECK:SPACING: No space is necessary after a cast
#174: FILE: drivers/serial/jsm/jsm_mgmt.c:129:
+	void __user *uarg = (void __user *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_mgmt_ioctl', this function's name, in a string
#176: FILE: drivers/serial/jsm/jsm_mgmt.c:131:
+	DPR_MGMT(("jsm_mgmt_ioctl start.\n"));

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#179: FILE: drivers/serial/jsm/jsm_mgmt.c:134:
+	switch (cmd) {
+

CHECK:CAMELCASE: Avoid CamelCase: <jsm_NumBoards>
#191: FILE: drivers/serial/jsm/jsm_mgmt.c:146:
+		ddi.dinfo_nboards = jsm_NumBoards;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/serial/jsm/jsm_mgmt.c:152:
+		DPR_MGMT(("DIGI_GETDD returning numboards: %d version: %s\n",
+			ddi.dinfo_nboards, ddi.dinfo_version));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/serial/jsm/jsm_mgmt.c:154:
+		if (copy_to_user(uarg, &ddi, sizeof (ddi)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'brd < 0'
#216: FILE: drivers/serial/jsm/jsm_mgmt.c:171:
+		if ((brd < 0) || (brd > jsm_NumBoards) || (jsm_NumBoards == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'brd > jsm_NumBoards'
#216: FILE: drivers/serial/jsm/jsm_mgmt.c:171:
+		if ((brd < 0) || (brd > jsm_NumBoards) || (jsm_NumBoards == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jsm_NumBoards == 0'
#216: FILE: drivers/serial/jsm/jsm_mgmt.c:171:
+		if ((brd < 0) || (brd > jsm_NumBoards) || (jsm_NumBoards == 0))

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Board>
#223: FILE: drivers/serial/jsm/jsm_mgmt.c:178:
+		spin_lock_irqsave(&jsm_Board[brd]->bd_lock, lock_flags);

CHECK:SPACING: No space is necessary after a cast
#228: FILE: drivers/serial/jsm/jsm_mgmt.c:183:
+		di.info_physaddr = (ulong) jsm_Board[brd]->membase;

CHECK:SPACING: No space is necessary after a cast
#229: FILE: drivers/serial/jsm/jsm_mgmt.c:184:
+		di.info_physsize = (ulong) jsm_Board[brd]->membase - jsm_Board[brd]->membase_end;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/serial/jsm/jsm_mgmt.c:193:
+		DPR_MGMT(("DIGI_GETBD returning type: %x state: %x ports: %x size: %x\n",
+			di.info_bdtype, di.info_bdstate, di.info_nports, di.info_physsize));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/serial/jsm/jsm_mgmt.c:195:
+		if (copy_to_user(uarg, &di, sizeof (di)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/serial/jsm/jsm_mgmt.c:214:
+		DPR_MGMT(("DIGI_GETBD asking about board: %d channel: %d\n",
+			ni.board, ni.channel));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board < 0'
#265: FILE: drivers/serial/jsm/jsm_mgmt.c:220:
+		if ((board < 0) || (board > jsm_NumBoards) || (jsm_NumBoards == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board > jsm_NumBoards'
#265: FILE: drivers/serial/jsm/jsm_mgmt.c:220:
+		if ((board < 0) || (board > jsm_NumBoards) || (jsm_NumBoards == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jsm_NumBoards == 0'
#265: FILE: drivers/serial/jsm/jsm_mgmt.c:220:
+		if ((board < 0) || (board > jsm_NumBoards) || (jsm_NumBoards == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel < 0'
#269: FILE: drivers/serial/jsm/jsm_mgmt.c:224:
+		if ((channel < 0) || (channel > jsm_Board[board]->nasync))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel > jsm_Board[board]->nasync'
#269: FILE: drivers/serial/jsm/jsm_mgmt.c:224:
+		if ((channel < 0) || (channel > jsm_Board[board]->nasync))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#336: FILE: drivers/serial/jsm/jsm_mgmt.c:291:
+
+	}

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_mgmt_ioctl', this function's name, in a string
#338: FILE: drivers/serial/jsm/jsm_mgmt.c:293:
+	DPR_MGMT(("jsm_mgmt_ioctl finish.\n"));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 11 warnings, 20 checks, 296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
