WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: drivers/char/raw.c:257:
+^I.aio_write = ^Igeneric_file_aio_write_nolock,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: fs/block_dev.c:1089:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: fs/block_dev.c:1089:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/block_dev.c:1089:
+  ^I.aio_write^I= generic_file_aio_write_nolock,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#354: FILE: fs/xfs/linux-2.6/xfs_file.c:88:
+	return __xfs_file_read(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#406: FILE: fs/xfs/linux-2.6/xfs_file.c:129:
+	return __xfs_file_write(iocb, iov, nr_segs, IO_ISAIO|IO_INVIS, pos);
 	                                                    ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#421: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#421: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#421: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#421: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#421: FILE: include/linux/fs.h:1019:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#422: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#422: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#422: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#422: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#422: FILE: include/linux/fs.h:1020:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#431: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#431: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#431: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#431: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#431: FILE: include/linux/fs.h:1597:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#434: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#434: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#434: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#434: FILE: include/linux/fs.h:1599:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *, unsigned long, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: mm/filemap.c:1100:
+generic_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: mm/filemap.c:2166:
+ssize_t generic_file_aio_write_nolock(struct kiocb *iocb,
+		const struct iovec *iov, unsigned long nr_segs, loff_t pos)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#494: FILE: mm/filemap.c:2173:
+	BUG_ON(iocb->ki_pos != pos);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: mm/filemap.c:2222:
+ssize_t generic_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: net/socket.c:100:
+static ssize_t sock_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: net/socket.c:102:
+static ssize_t sock_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: net/socket.c:757:
+static ssize_t sock_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t pos)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#632: FILE: net/socket.c:767:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: net/socket.c:816:
+static ssize_t sock_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t pos)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#693: FILE: drivers/usb/gadget/inode.c:531:
+^Istruct iovec ^I^I*iv;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#694: FILE: drivers/usb/gadget/inode.c:532:
+^Iunsigned long ^I^Icount;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#715: FILE: drivers/usb/gadget/inode.c:567:
+	for (i=0; i < priv->count; i++) {
 	      ^

WARNING:MINMAX: min() should probably be min_t(size_t, priv->iv[i].iov_len, total)
#716: FILE: drivers/usb/gadget/inode.c:568:
+		ssize_t this = min(priv->iv[i].iov_len, (size_t)total);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#744: FILE: drivers/usb/gadget/inode.c:634:
+^Iunsigned long ^Icount$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: drivers/usb/gadget/inode.c:696:
+ep_aio_read(struct kiocb *iocb, const struct iovec *iv,
+		unsigned long count, loff_t o)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: drivers/usb/gadget/inode.c:717:
+ep_aio_write(struct kiocb *iocb, const struct iovec *iv,
+		unsigned long count, loff_t o)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#807: FILE: drivers/usb/gadget/inode.c:732:
+	for (i=0; i < count; i++) {
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: drivers/usb/gadget/inode.c:734:
+		if (unlikely(copy_from_user(&buf[len], iv[i]->iov_base,
+				iv[i]->iov_len) != 0)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080700.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 26 warnings, 15 checks, 685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080700.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
