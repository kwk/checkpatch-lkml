WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#53: 
Erich, can you seperate out the cleanups from the functional changes?
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#82: FILE: arch/ia64/kernel/smpboot.c:529:
BogoMIPS).\n",

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/sched.h:447:
+extern void build_node_data(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: include/linux/sched.h:448:
+extern void sched_balance_exec(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/sched.h:449:
+extern void node_nr_running_init(void);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#142: FILE: include/linux/sched.h:450:
+#define nr_running_inc(rq) atomic_inc(rq->node_ptr); \
+	rq->nr_running++

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#142: FILE: include/linux/sched.h:450:
+#define nr_running_inc(rq) atomic_inc(rq->node_ptr); \
+	rq->nr_running++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#142: FILE: include/linux/sched.h:450:
+#define nr_running_inc(rq) atomic_inc(rq->node_ptr); \
+	rq->nr_running++

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#144: FILE: include/linux/sched.h:452:
+#define nr_running_dec(rq) atomic_dec(rq->node_ptr); \
+	rq->nr_running--

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#144: FILE: include/linux/sched.h:452:
+#define nr_running_dec(rq) atomic_dec(rq->node_ptr); \
+	rq->nr_running--

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#144: FILE: include/linux/sched.h:452:
+#define nr_running_dec(rq) atomic_dec(rq->node_ptr); \
+	rq->nr_running--

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: include/linux/sched.h:458:
+#define nr_running_inc(rq) rq->nr_running++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#150: FILE: include/linux/sched.h:458:
+#define nr_running_inc(rq) rq->nr_running++

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#151: FILE: include/linux/sched.h:459:
+#define nr_running_dec(rq) rq->nr_running--

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#151: FILE: include/linux/sched.h:459:
+#define nr_running_dec(rq) rq->nr_running--

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: kernel/sched.c:194:
+static int _node_nr_cpus[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#192: FILE: kernel/sched.c:194:
+static int _node_nr_cpus[MAX_NUMNODES] = { [0 ... MAX_NUMNODES-1] = 
                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: kernel/sched.c:195:
+static int node_ptr[MAX_NUMNODES+1]; /* first cpu of node (logical cpus $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: kernel/sched.c:195:
+static int node_ptr[MAX_NUMNODES+1]; /* first cpu of node (logical cpus 
                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#196: FILE: kernel/sched.c:196:
+static int node_ptr[MAX_NUMNODES+1]; /* first cpu of node (logical cpus 
+#define node_nr_cpus(node)  _node_nr_cpus[node]

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: kernel/sched.c:199:
+ * Delay stealing from remote node when own queue is idle/busy. These $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#228: FILE: kernel/sched.c:224:
+		for (cpu = 0; cpu < NR_CPUS; cpu++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: kernel/sched.c:239:
+#define loop_over_node(cpu,n) for(cpu = 0; cpu < NR_CPUS; cpu++)
                           ^

ERROR:SPACING: space required before the open parenthesis '('
#247: FILE: kernel/sched.c:239:
+#define loop_over_node(cpu,n) for(cpu = 0; cpu < NR_CPUS; cpu++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#247: FILE: kernel/sched.c:239:
+#define loop_over_node(cpu,n) for(cpu = 0; cpu < NR_CPUS; cpu++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 
                        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 
                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 
                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 
                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 
                                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 
                                                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#259: FILE: kernel/sched.c:753:
+#define cpus_balanced(m,t) (((m)<=1) || (((m)-(t))/2 < (((m)+(t))/2 + 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: kernel/sched.c:758:
+#define nodes_balanced(comp,this) (((comp)-(this)) < LOADSCALE/2)
                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#267: FILE: kernel/sched.c:758:
+#define nodes_balanced(comp,this) (((comp)-(this)) < LOADSCALE/2)
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#275: FILE: kernel/sched.c:764:
+	int n, steal_delay, system_load = 0, this_node=__cpu_to_node(this_cpu);
 	                                              ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#287: FILE: kernel/sched.c:781:
+		node = &nd[__cpu_to_node(cpu)];
 		        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#296: FILE: kernel/sched.c:797:
+		if (!cpus_balanced(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                   ^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#296: FILE: kernel/sched.c:797:
+		if (!cpus_balanced(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                                                 ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#296: FILE: kernel/sched.c:797:
+		if (!cpus_balanced(nd[this_node].busiest_cpu_load,*nr_running)) {
 		                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#305: FILE: kernel/sched.c:809:
+		node->average_load = node->total_load*LOADSCALE/node_nr_cpus(n);
 		                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#305: FILE: kernel/sched.c:809:
+		node->average_load = node->total_load*LOADSCALE/node_nr_cpus(n);
 		                                               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#314: FILE: kernel/sched.c:818:
+	    nodes_balanced(max_avg_load,nd[this_node].average_load)) {
 	                                ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: kernel/sched.c:818:
+	    nodes_balanced(max_avg_load,nd[this_node].average_load)) {
 	                               ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#323: FILE: kernel/sched.c:826:
+	if (nodes_balanced(avg_load,nd[this_node].average_load))
 	                            ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: kernel/sched.c:826:
+	if (nodes_balanced(avg_load,nd[this_node].average_load))
 	                           ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#339: FILE: kernel/sched.c:839:
+	if ((!cpus_balanced(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                    ^^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#339: FILE: kernel/sched.c:839:
+	if ((!cpus_balanced(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                                                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#339: FILE: kernel/sched.c:839:
+	if ((!cpus_balanced(nd[busiest_node].busiest_cpu_load,*nr_running))) {
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#352: FILE: kernel/sched.c:966:
+#define BUSY_REBALANCE_TICK (HZ/4 ?: 1)
                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402899.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 8 warnings, 22 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402899.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
