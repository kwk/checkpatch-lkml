CHECK:SPACING: No space is necessary after a cast
#95: FILE: include/asm-m68k/div64.h:29:
+	__res = ((unsigned long long) n) % (unsigned) base;	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#95: FILE: include/asm-m68k/div64.h:29:
+	__res = ((unsigned long long) n) % (unsigned) base;	\

CHECK:SPACING: No space is necessary after a cast
#96: FILE: include/asm-m68k/div64.h:30:
+	n = ((unsigned long long) n) / (unsigned) base;		\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#96: FILE: include/asm-m68k/div64.h:30:
+	n = ((unsigned long long) n) / (unsigned) base;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: include/asm-ppc/div64.h:7:
+#define do_div(n,base) ({					\
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#113: FILE: include/asm-ppc/div64.h:7:
+#define do_div(n,base) ({					\
+	int __res;						\
+	__res = ((unsigned long long) n) % (unsigned) base;	\
+	n = ((unsigned long long) n) / (unsigned) base;		\
+	__res; })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#113: FILE: include/asm-ppc/div64.h:7:
+#define do_div(n,base) ({					\
+	int __res;						\
+	__res = ((unsigned long long) n) % (unsigned) base;	\
+	n = ((unsigned long long) n) / (unsigned) base;		\
+	__res; })

CHECK:SPACING: No space is necessary after a cast
#115: FILE: include/asm-ppc/div64.h:9:
+	__res = ((unsigned long long) n) % (unsigned) base;	\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#115: FILE: include/asm-ppc/div64.h:9:
+	__res = ((unsigned long long) n) % (unsigned) base;	\

CHECK:SPACING: No space is necessary after a cast
#116: FILE: include/asm-ppc/div64.h:10:
+	n = ((unsigned long long) n) / (unsigned) base;		\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: include/asm-ppc/div64.h:10:
+	n = ((unsigned long long) n) / (unsigned) base;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-sh/div64.h:4:
+#define do_div(n,base) ({					\
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#132: FILE: include/asm-sh/div64.h:4:
+#define do_div(n,base) ({					\
+	int __res;						\
+	__res = ((unsigned long long) n) % (unsigned) base;	\
+	n = ((unsigned long long) n) / (unsigned) base;		\
+	__res; })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#132: FILE: include/asm-sh/div64.h:4:
+#define do_div(n,base) ({					\
+	int __res;						\
+	__res = ((unsigned long long) n) % (unsigned) base;	\
+	n = ((unsigned long long) n) / (unsigned) base;		\
+	__res; })

CHECK:SPACING: No space is necessary after a cast
#134: FILE: include/asm-sh/div64.h:6:
+	__res = ((unsigned long long) n) % (unsigned) base;	\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#134: FILE: include/asm-sh/div64.h:6:
+	__res = ((unsigned long long) n) % (unsigned) base;	\

CHECK:SPACING: No space is necessary after a cast
#135: FILE: include/asm-sh/div64.h:7:
+	n = ((unsigned long long) n) / (unsigned) base;		\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: include/asm-sh/div64.h:7:
+	n = ((unsigned long long) n) / (unsigned) base;		\

CHECK:SPACING: No space is necessary after a cast
#150: FILE: include/asm-sparc/div64.h:6:
+	__res = ((unsigned long long) n) % (unsigned) base; \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: include/asm-sparc/div64.h:6:
+	__res = ((unsigned long long) n) % (unsigned) base; \

CHECK:SPACING: No space is necessary after a cast
#151: FILE: include/asm-sparc/div64.h:7:
+	n = ((unsigned long long) n) / (unsigned) base; \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: include/asm-sparc/div64.h:7:
+	n = ((unsigned long long) n) / (unsigned) base; \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000481735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 12 checks, 98 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000481735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
