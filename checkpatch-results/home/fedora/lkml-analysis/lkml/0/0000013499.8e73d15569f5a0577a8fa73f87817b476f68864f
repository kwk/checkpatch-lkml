ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#124: FILE: fs/inode.c:716:
+	if (! rv)
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: fs/inode.c:721:
+	rv = idr_get_new_above(&inode->i_sb->s_inode_ids, inode,
+		max_reserved+1, (int *) &inode->i_ino);

CHECK:SPACING: No space is necessary after a cast
#129: FILE: fs/inode.c:721:
+		max_reserved+1, (int *) &inode->i_ino);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: fs/inode.c:721:
+		max_reserved+1, (int *) &inode->i_ino);
 		            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#135: FILE: fs/inode.c:727:
+EXPORT_SYMBOL(iunique_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: No space is necessary after a cast
#140: FILE: fs/inode.c:732:
+	if (idr_find(&inode->i_sb->s_inode_ids, (int) inode->i_ino))

CHECK:SPACING: No space is necessary after a cast
#141: FILE: fs/inode.c:733:
+		idr_remove(&inode->i_sb->s_inode_ids, (int) inode->i_ino);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#145: FILE: fs/inode.c:737:
+EXPORT_SYMBOL(iunique_unregister);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: include/linux/fs.h:967:
+	/* for fs's with dynamic i_ino values, track them with idr, and increment
+	   the generation every time we register a new inode */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: include/linux/fs.h:967:
+	   the generation every time we register a new inode */

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#214: FILE: include/linux/fs.h:970:
+	spinlock_t		s_inode_ids_lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: include/linux/fs.h:1691:
+extern int iunique_register(struct inode *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#222: FILE: include/linux/fs.h:1691:
+extern int iunique_register(struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#222: FILE: include/linux/fs.h:1691:
+extern int iunique_register(struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/fs.h:1692:
+extern void iunique_unregister(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#223: FILE: include/linux/fs.h:1692:
+extern void iunique_unregister(struct inode *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013499.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 8 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013499.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
