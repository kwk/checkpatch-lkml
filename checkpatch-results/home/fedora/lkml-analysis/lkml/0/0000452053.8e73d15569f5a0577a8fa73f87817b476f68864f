WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#25: 
plus a seperate 4KB irq stack for use by interrupts.  There are a couple 
       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
I had been playing with 2.5KB stacks (4KB page minus 1.5K for task_struct), 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#188: FILE: arch/i386/kernel/init_task.c:16:
+union thread_union init_irq_union

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#189: FILE: arch/i386/kernel/init_task.c:17:
+	__attribute__((__section__(".data.init_task")));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: arch/i386/kernel/init_task.c:28:
+^I^I{ { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#199: FILE: arch/i386/kernel/init_task.c:28:
 	__attribute__((__section__(".data.init_task"))) =
+		{ { 

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#200: FILE: arch/i386/kernel/init_task.c:29:
+			task:		&init_task,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#201: FILE: arch/i386/kernel/init_task.c:30:
+			exec_domain:	&default_exec_domain,
 			           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#201: FILE: arch/i386/kernel/init_task.c:30:
+			exec_domain:	&default_exec_domain,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#204: FILE: arch/i386/kernel/init_task.c:33:
+			addr_limit:	KERNEL_DS,
 			          ^

WARNING:INDENTED_LABEL: labels should not be indented
#204: FILE: arch/i386/kernel/init_task.c:33:
+			addr_limit:	KERNEL_DS,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#205: FILE: arch/i386/kernel/init_task.c:34:
+			irq_stack:	&init_irq_union,
 			         ^

WARNING:INDENTED_LABEL: labels should not be indented
#205: FILE: arch/i386/kernel/init_task.c:34:
+			irq_stack:	&init_irq_union,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#269: FILE: arch/i386/kernel/smpboot.c:75:
+extern union thread_union init_irq_union;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#271: FILE: arch/i386/kernel/smpboot.c:77:
+union thread_union *irq_stacks[NR_CPUS] __cacheline_aligned =
+	{ &init_irq_union, };

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#292: FILE: arch/i386/kernel/smpboot.c:827:
+					/* interrupts are not preemptable */
 					                      ^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#318: FILE: arch/i386/kernel/smpboot.c:878:
+	stack_start.esp = (void *) (THREAD_SIZE + (char *)idle->thread_info);

CHECK:BIT_MACRO: Prefer using the BIT macro
#332: FILE: include/asm-i386/page.h:9:
+#define PAGE_SIZE	(1 << PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: No space is necessary after a cast
#389: FILE: include/asm-i386/thread_info.h:67:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: include/asm-i386/thread_info.h:67:
+#define alloc_thread_info() ((struct thread_info *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))
                                                                                ^

CHECK:SPACING: No space is necessary after a cast
#390: FILE: include/asm-i386/thread_info.h:68:
+#define free_thread_info(ti) free_pages((unsigned long) (ti), THREAD_ORDER)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#399: FILE: include/asm-i386/thread_info.h:76:
+	__asm__("andl %%esp,%0; ":"=r" (ti) : "0" (~(THREAD_SIZE - 1)));
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#417: FILE: include/asm-i386/thread_info.h:86:
+	movl $-THREAD_SIZE, reg; \
 	      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#421: FILE: include/asm-i386/thread_info.h:90:
+#define GET_THREAD_INFO_WITH_ESP(reg) \
+	andl $-THREAD_SIZE, reg

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#422: FILE: include/asm-i386/thread_info.h:91:
+	andl $-THREAD_SIZE, reg
 	      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 10 warnings, 7 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
