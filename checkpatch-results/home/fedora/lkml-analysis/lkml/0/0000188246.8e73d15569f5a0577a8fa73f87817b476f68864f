WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
Fix some console locking problems (including scheduling in atomic) and various

WARNING:TYPO_SPELLING: 'datas' may be misspelled - perhaps 'data'?
#47: FILE: arch/um/drivers/line.c:44:
+ * Should be called while holding line->lock (this does not modify datas).
                                                                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!line->buffer"
#55: FILE: arch/um/drivers/line.c:50:
+	if (line->buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#83: FILE: arch/um/drivers/line.c:75:
+	if (0 == room)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#84: FILE: arch/um/drivers/line.c:76:
+		printk(KERN_DEBUG "%s: %s: no room left in buffer\n",

ERROR:SPACING: space required after that ',' (ctx:VxV)
#85: FILE: arch/um/drivers/line.c:77:
+		       __FUNCTION__,tty->name);
 		                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#85: FILE: arch/um/drivers/line.c:77:
+		       __FUNCTION__,tty->name);

ERROR:SPACING: space required before the open brace '{'
#122: FILE: arch/um/drivers/line.c:124:
+	if (len < end){

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#147: FILE: arch/um/drivers/line.c:146:
+ * Must be called while holding line->lock!*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#168: FILE: arch/um/drivers/line.c:164:
+			 * must flush only from the beginning to ->tail.*/

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: arch/um/drivers/line.c:176:
+	if(n < 0)

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: arch/um/drivers/line.c:190:
+	if(tty->stopped)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#205: FILE: arch/um/drivers/line.c:197:
+	/*if (err == 1)
+		err = 0;*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#205: FILE: arch/um/drivers/line.c:197:
+		err = 0;*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: arch/um/drivers/line.c:203:
+ * and ->write. Hope it's not that bad.*/

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: arch/um/drivers/line.c:220:
+	if(tty->stopped)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#299: FILE: arch/um/drivers/line.c:349:
+	 * SA_INTERRUPT (see line_setup_irq).*/

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: arch/um/drivers/line.c:355:
+	} else if(err < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->ldisc.write_wakeup != NULL'
#319: FILE: arch/um/drivers/line.c:364:
+	if (test_bit(TTY_DO_WRITE_WAKEUP, &tty->flags) &&
 	   (tty->ldisc.write_wakeup != NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: arch/um/drivers/line.c:365:
+	if (test_bit(TTY_DO_WRITE_WAKEUP, &tty->flags) &&
 	   (tty->ldisc.write_wakeup != NULL))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#328: FILE: arch/um/drivers/line.c:374:
+	if (waitqueue_active(&tty->write_wait))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: arch/um/drivers/line.c:387:
+		err = um_request_irq(driver->read_irq, fd, IRQ_READ,
 				       line_interrupt, flags, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: arch/um/drivers/line.c:393:
+		err = um_request_irq(driver->write_irq, fd, IRQ_WRITE,
 					line_write_interrupt, flags, 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#364: FILE: arch/um/drivers/line.c:433:
+	 * before the end, so we don't need to use spin_lock_irq.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#393: FILE: arch/um/drivers/line.c:470:
+	 * disabled!*/

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#415: FILE: arch/um/drivers/line.c:493:
+ * @lines contains the the array (of size @num) to modify;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#419: FILE: arch/um/drivers/line.c:497:
+ * can use con=xterm) and false for mconsole.*/

ERROR:SPACING: space required before the open parenthesis '('
#428: FILE: arch/um/drivers/line.c:504:
+	if(*init == '=') {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: arch/um/drivers/line.c:506:
+		 * consoles at once.*/

CHECK:SPACING: No space is necessary after a cast
#445: FILE: arch/um/drivers/line.c:519:
+	if (n >= (signed int) num) {

ERROR:SPACING: space required before the open brace '{'
#452: FILE: arch/um/drivers/line.c:523:
+	} else if (n >= 0){

ERROR:SPACING: space required before the open brace '{'
#466: FILE: arch/um/drivers/line.c:537:
+	} else if(!all_allowed){

ERROR:SPACING: space required before the open parenthesis '('
#466: FILE: arch/um/drivers/line.c:537:
+	} else if(!all_allowed){

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#473: FILE: arch/um/drivers/line.c:541:
+		return 0;
+	} else {

ERROR:SPACING: space required before the open parenthesis '('
#592: FILE: arch/um/drivers/line.c:724:
+	if(um_request_irq(WINCH_IRQ, fd, IRQ_READ, winch_interrupt,

ERROR:SPACING: space required before the open parenthesis '('
#601: FILE: arch/um/drivers/line.c:755:
+	if(umid == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!umid"
#601: FILE: arch/um/drivers/line.c:755:
+	if(umid == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#651: FILE: arch/um/include/line.h:47:
+	 * LINE_BUFSIZE, head to the start of the ring, tail to the end.*/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#672: FILE: arch/um/include/line.h:79:
+extern int line_setup(struct line *lines, unsigned int sizeof_lines, char *init,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#678: FILE: arch/um/include/line.h:85:
+extern void line_flush_buffer(struct tty_struct *tty);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#679: FILE: arch/um/include/line.h:86:
+extern void line_flush_chars(struct tty_struct *tty);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#695: FILE: arch/um/include/line.h:103:
+extern int line_config(struct line *lines, unsigned int sizeof_lines, char *str);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#696: FILE: arch/um/include/line.h:104:
+extern int line_remove(struct line *lines, unsigned int sizeof_lines, char *str);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#697: FILE: arch/um/include/line.h:105:
+extern int line_get_config(char *dev, struct line *lines, unsigned int sizeof_lines, char *str,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#731: FILE: arch/um/drivers/ssl.c:147:
+^I.flush_buffer ^I^I= line_flush_buffer,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#732: FILE: arch/um/drivers/ssl.c:148:
+^I.flush_chars ^I^I= line_flush_chars,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#777: FILE: arch/um/drivers/stdio_console.c:119:
+^I.put_char ^I^I= line_put_char,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#780: FILE: arch/um/drivers/stdio_console.c:122:
+^I.flush_buffer ^I^I= line_flush_buffer,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#781: FILE: arch/um/drivers/stdio_console.c:123:
+^I.flush_chars ^I^I= line_flush_chars,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 24 warnings, 13 checks, 752 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
