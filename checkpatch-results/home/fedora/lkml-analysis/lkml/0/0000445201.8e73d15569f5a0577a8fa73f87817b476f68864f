WARNING:TYPO_SPELLING: 'repacement' may be misspelled - perhaps 'replacement'?
#17: 
Subject: PATCH: type safe(r) list_entry repacement: generic_out_cast
                                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
list.h has this nifty macro called list_entry that takes a pointer to a "struct

WARNING:TYPO_SPELLING: 'arguement' may be misspelled - perhaps 'argument'?
#41: 
list_entry but with an extra type arguement.  I have then
                                  ^^^^^^^^^

WARNING:TYPO_SPELLING: 'embeded' may be misspelled - perhaps 'embedded'?
#51: 
But seeing that one is casting from an embeded internal structure to a
                                       ^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: drivers/scsi/scsi.h:630:
 };
+#define	to_scsi_device(d)	\

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#121: FILE: drivers/scsi/scsi_scan.c:296:
+	struct scsi_device *SDpnt = to_scsi_device(driverfs_dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: drivers/usb/core/usb.c:835:
+	udev = to_usb_device (dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: drivers/usb/core/usb.c:854:
+	interface = to_usb_interface (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: drivers/usb/core/usb.c:871:
+	udev = to_usb_device (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: drivers/usb/core/usb.c:893:
+	udev = to_usb_device (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: drivers/usb/core/usb.c:915:
+	udev = to_usb_device (dev);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: drivers/pci/pci-driver.c:63:
+	struct pci_dev * pci_dev = to_pci_dev(dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: drivers/pci/pci-driver.c:76:
+	struct pci_dev * pci_dev = to_pci_dev(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/pci/pci-driver.c:90:
+	struct pci_dev * pci_dev = to_pci_dev(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: drivers/pci/pci-driver.c:178:
+	struct pci_dev * pci_dev = to_pci_dev(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: drivers/pci/pci-driver.c:179:
+	struct pci_driver * pci_drv = to_pci_driver(drv);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#230: FILE: drivers/pci/proc.c:377:
+	struct pci_dev * pci_dev = to_pci_dev(dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: drivers/pci/proc.c:389:
+	struct pci_dev * pci_dev = to_pci_dev(dev);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ptr_type' may be better as '(ptr_type)' to avoid precedence issues
#257: FILE: include/linux/list.h:189:
+#define generic_out_cast(ptr_type, ptr, type, member) \
+	({ const ptr_type *__ptr = ptr ; (type *)((char *)(__ptr)-(unsigned long)(&((type *)0)->member));})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'member' may be better as '(member)' to avoid precedence issues
#257: FILE: include/linux/list.h:189:
+#define generic_out_cast(ptr_type, ptr, type, member) \
+	({ const ptr_type *__ptr = ptr ; (type *)((char *)(__ptr)-(unsigned long)(&((type *)0)->member));})

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#258: FILE: include/linux/list.h:190:
+	({ const ptr_type *__ptr = ptr ; (type *)((char *)(__ptr)-(unsigned long)(&((type *)0)->member));})

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#258: FILE: include/linux/list.h:190:
+	({ const ptr_type *__ptr = ptr ; (type *)((char *)(__ptr)-(unsigned long)(&((type *)0)->member));})
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#258: FILE: include/linux/list.h:190:
+	({ const ptr_type *__ptr = ptr ; (type *)((char *)(__ptr)-(unsigned long)(&((type *)0)->member));})
 	                                                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#258: FILE: include/linux/list.h:190:
+	({ const ptr_type *__ptr = ptr ; (type *)((char *)(__ptr)-(unsigned long)(&((type *)0)->member));})
 	                                                                                                ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#312: FILE: include/linux/pci.h:496:
+	generic_out_cast(struct device_driver, drv,struct pci_driver, driver)
 	                                          ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#487: FILE: include/linux/usb.h:260:
 };
+#define	to_usb_interface(d) generic_out_cast(struct device, d, struct usb_interface, dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#495: FILE: include/linux/usb.h:426:
 };
+#define	to_usb_device(d) generic_out_cast(struct device, d, struct usb_device, dev)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445201.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 37 warnings, 8 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445201.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
