WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#52: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#105: FILE: include/linux/sched.h:728:
+		list_add_tail(&(p)->tasks.l,&init_task.tasks.l);	\
 		                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#105: FILE: include/linux/sched.h:728:
+		list_add_tail(&(p)->tasks.l,&init_task.tasks.l);	\
 		                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#111: FILE: include/linux/sched.h:732:
+static inline task_t * next_task(task_t *p)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#115: FILE: include/linux/sched.h:736:
+	} while(p->tasks.is_cookie);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: include/linux/sched.h:740:
+static inline task_t * prev_task(task_t *p)

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: include/linux/sched.h:744:
+	} while(p->tasks.is_cookie);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#186: FILE: fs/proc/base.c:1667:
+	switch (origin) {
+		case 2:
[...]
+		case 1:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#194: FILE: fs/proc/base.c:1675:
+	if (offset>=0 && offset<=inode->i_sb->s_maxbytes) {
 	          ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#194: FILE: fs/proc/base.c:1675:
+	if (offset>=0 && offset<=inode->i_sb->s_maxbytes) {
 	                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#199: FILE: fs/proc/base.c:1680:
+				struct clist_head *cl;
+				cl = (struct clist_head *)file->f_version;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#238: FILE: fs/proc/base.c:1714:
+		task_t *p;
+		pcl = kmalloc(sizeof(struct clist_head), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pcl)...) over kmalloc(sizeof(struct clist_head)...)
#238: FILE: fs/proc/base.c:1714:
+		pcl = kmalloc(sizeof(struct clist_head), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: fs/proc/base.c:1722:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: fs/proc/base.c:1725:
+		while(nr) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#293: FILE: fs/proc/base.c:1765:
+		ino = fake_ino(tgid,PROC_TGID_INO);
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#299: FILE: fs/proc/base.c:1770:
+		if (filldir(dirent, buf+j, PROC_NUMBUF-j, filp->f_pos, ino, DT_DIR) < 0) {
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#299: FILE: fs/proc/base.c:1770:
+		if (filldir(dirent, buf+j, PROC_NUMBUF-j, filp->f_pos, ino, DT_DIR) < 0) {
 		                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313991.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 3 warnings, 3 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313991.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
