WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#45: FILE: mm/mem_init.c:344:
+	printk("memmap_init_zone(size %lu, nid %d, zone %lu, start_pfn %lu)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'memmap_init_zone', this function's name, in a string
#45: FILE: mm/mem_init.c:344:
+	printk("memmap_init_zone(size %lu, nid %d, zone %lu, start_pfn %lu)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#46: FILE: mm/mem_init.c:345:
+	printk("memmap_init_zone(size %lu, nid %d, zone %lu, start_pfn %lu)\n",
+						size, nid, zone, start_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#65: FILE: mm/mem_init.c:721:
+			printk("start_pfn %lu >= %lu\n", early_node_map[i].start_pfn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: mm/mem_init.c:722:
+			printk("start_pfn %lu >= %lu\n", early_node_map[i].start_pfn,
+								max_low_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#72: FILE: mm/mem_init.c:727:
+			printk("end_pfn %lu going back to %lu\n", early_node_map[i].end_pfn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: mm/mem_init.c:728:
+			printk("end_pfn %lu going back to %lu\n", early_node_map[i].end_pfn,
+									max_low_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#78: FILE: mm/mem_init.c:733:
+		printk("free_bootmem_node(%d, %lu, %lu) :::: pfn ranges (%d, %lu, %lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: mm/mem_init.c:734:
+		printk("free_bootmem_node(%d, %lu, %lu) :::: pfn ranges (%d, %lu, %lu)\n",
+				early_node_map[i].nid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#92: FILE: mm/mem_init.c:748:
+		printk("memory_present(%d, %lu, %lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: mm/mem_init.c:749:
+		printk("memory_present(%d, %lu, %lu)\n",
+			early_node_map[i].nid,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: mm/mem_init.c:808:
+	printk("__absent_pages_in_range(%d, %lu, %lu) = ", nid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: mm/mem_init.c:809:
+	printk("__absent_pages_in_range(%d, %lu, %lu) = ", nid,
+					range_start_pfn, range_end_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#116: FILE: mm/mem_init.c:836:
+	printk("%lu\n", hole_pages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: mm/mem_init.c:1002:
+	printk("add_active_range(%d, %lu, %lu): ",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_active_range', this function's name, in a string
#125: FILE: mm/mem_init.c:1002:
+	printk("add_active_range(%d, %lu, %lu): ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: mm/mem_init.c:1003:
+	printk("add_active_range(%d, %lu, %lu): ",
+			nid, start_pfn, end_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: mm/mem_init.c:1013:
+			printk("Existing\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: mm/mem_init.c:1020:
+			printk("Merging forward\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: mm/mem_init.c:1028:
+			printk("Merging backwards\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: mm/mem_init.c:1040:
+	printk("New\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: mm/mem_init.c:1052:
+	printk("Shrinking %u from %lu to %lu: ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: mm/mem_init.c:1053:
+	printk("Shrinking %u from %lu to %lu: ",
+					nid, old_end_pfn, new_end_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: mm/mem_init.c:1056:
+			printk("Done\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#178: FILE: mm/mem_init.c:1062:
+	printk("Not found\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: mm/mem_init.c:1067:
+	printk("remove_all_active_ranges()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: mm/mem_init.c:1096:
+	printk("Dumping sorted node map\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: mm/mem_init.c:1098:
+		printk("entry %lu: %d  %lu -> %lu\n", num,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: mm/mem_init.c:1099:
+		printk("entry %lu: %d  %lu -> %lu\n", num,
+				early_node_map[num].nid,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: mm/mem_init.c:1118:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: mm/mem_init.c:1132:
+	printk("find_max_pfn_with_active_regions() == %lu\n", max_pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: mm/mem_init.c:1144:
+	printk("free_area_init_nodes(%lu, %lu, %lu, %lu)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_area_init_nodes', this function's name, in a string
#222: FILE: mm/mem_init.c:1144:
+	printk("free_area_init_nodes(%lu, %lu, %lu, %lu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: mm/mem_init.c:1145:
+	printk("free_area_init_nodes(%lu, %lu, %lu, %lu)\n",
+			arch_max_dma_pfn, arch_max_dma32_pfn,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: mm/mem_init.c:1164:
+	printk("free_area_init_nodes(): find_min_pfn = %lu\n", find_min_pfn_with_active_regions());

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_area_init_nodes', this function's name, in a string
#233: FILE: mm/mem_init.c:1164:
+	printk("free_area_init_nodes(): find_min_pfn = %lu\n", find_min_pfn_with_active_regions());

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 25 warnings, 11 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
