WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# chmod u-s /bin/ping

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# chcap cap_net_raw+ep /bin/ping

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: chcap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:REPEATED_WORD: Possible repeated word: 'chcap'
#53: FILE: chcap.c:7:
+ * gcc -Wall -o chcap chcap.c -lcap

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#53: FILE: chcap.c:7:
+ * gcc -Wall -o chcap chcap.c -lcap

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: chcap.c:38:
+	int err = stat(file, &buf);
+	if (err)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: chcap.c:61:
+	char file[PATH_MAX], mnt[PATH_MAX];
+	if (!realpath(name, file))

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: chcap.c:75:
+	int fd = open_capabilities(name);
+	if (fd < 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: chcap.c:84:
+		off_t rc = lseek(fd, buf.st_ino * 3 * sizeof(*caps), SEEK_SET);
+		if (rc == -1)

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: chcap.c:97:
+	int i;
+	for (i = 0; i <= 28; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: chcap.c:100:
+		int err = cap_get_flag(cap, i, flag, &on);
+		if (err)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cap_to_u32', this function's name, in a string
#147: FILE: chcap.c:101:
+			fatal("cap_to_u32()");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#172: FILE: chcap.c:126:
+	for (i = 2; i < argc; ++i) {
+		chcap(argv[i], caps);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 0 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420036.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
