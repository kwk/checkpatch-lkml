WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> A sorted list of bad stack users (more than 256 bytes) in my default build

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	sound/core/oss/pcm_oss.c	1.20    -> 1.21   

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# 03/02/21	mulix@alhambra.mulix.org	1.1007

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# snd_pcm_oss_change_params was a stack offender, having three large 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# structs on the stack. Allocate those structs on the heap and change

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# the code accordingly. 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#62: 
--- a/sound/core/oss/pcm_oss.c	Fri Feb 21 09:35:24 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: sound/core/oss/pcm_oss.c:294:
+static int alloc_param_structs(snd_pcm_hw_params_t** params, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#68: FILE: sound/core/oss/pcm_oss.c:294:
+static int alloc_param_structs(snd_pcm_hw_params_t** params, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#69: FILE: sound/core/oss/pcm_oss.c:295:
+			       snd_pcm_hw_params_t** sparams,

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#70: FILE: sound/core/oss/pcm_oss.c:296:
+			       snd_pcm_sw_params_t** sw_params)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: sound/core/oss/pcm_oss.c:298:
+^Isnd_pcm_hw_params_t* hwp; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#72: FILE: sound/core/oss/pcm_oss.c:298:
+	snd_pcm_hw_params_t* hwp; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: sound/core/oss/pcm_oss.c:299:
+^Isnd_pcm_sw_params_t* swp; $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#73: FILE: sound/core/oss/pcm_oss.c:299:
+	snd_pcm_sw_params_t* swp; 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#75: FILE: sound/core/oss/pcm_oss.c:301:
+	if (!(hwp = kmalloc(sizeof(*hwp), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: sound/core/oss/pcm_oss.c:302:
+^I^Igoto out; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: sound/core/oss/pcm_oss.c:304:
+^Imemset(hwp, 0, sizeof(*hwp)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: sound/core/oss/pcm_oss.c:305:
+^I*params = hwp; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#81: FILE: sound/core/oss/pcm_oss.c:307:
+	if (!(hwp = kmalloc(sizeof(*hwp), GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: sound/core/oss/pcm_oss.c:308:
+^I^Igoto free_params; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: sound/core/oss/pcm_oss.c:310:
+^Imemset(hwp, 0, sizeof(*hwp)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: sound/core/oss/pcm_oss.c:311:
+^I*sparams = hwp; $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#87: FILE: sound/core/oss/pcm_oss.c:313:
+	if (!(swp = kmalloc(sizeof(*swp), GFP_KERNEL)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: sound/core/oss/pcm_oss.c:314:
+^I^Igoto free_sparams; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: sound/core/oss/pcm_oss.c:316:
+^Imemset(swp, 0, sizeof(*swp)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: sound/core/oss/pcm_oss.c:317:
+^I*sw_params = swp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: sound/core/oss/pcm_oss.c:318:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: sound/core/oss/pcm_oss.c:319:
+^Ireturn 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: sound/core/oss/pcm_oss.c:322:
+^Ikfree(*sparams); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: sound/core/oss/pcm_oss.c:323:
+^I*sparams = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: sound/core/oss/pcm_oss.c:326:
+^Ikfree(*params); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: sound/core/oss/pcm_oss.c:327:
+^I*params = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: sound/core/oss/pcm_oss.c:329:
+ out: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: sound/core/oss/pcm_oss.c:330:
+^Ireturn -ENOMEM; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#107: FILE: sound/core/oss/pcm_oss.c:333:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: sound/core/oss/pcm_oss.c:354:
+	if ((err = alloc_param_structs(&params, &sparams, &sw_params))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: sound/core/oss/pcm_oss.c:355:
+^I^Isnd_printd("out of memory\n"); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: sound/core/oss/pcm_oss.c:356:
+^I^Ireturn err; $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#149: FILE: sound/core/oss/pcm_oss.c:376:
+	snd_pcm_hw_param_near(substream, sparams, SNDRV_PCM_HW_PARAM_CHANNELS, runtime->oss.channels, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: sound/core/oss/pcm_oss.c:401:
+^I^Imemcpy(params, sparams, sizeof(*params)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: sound/core/oss/pcm_oss.c:428:
+^I^I^I^I^I^I       params, $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#217: FILE: sound/core/oss/pcm_oss.c:436:
+			if ((err = snd_pcm_plugin_build_io(substream, sparams, &plugin)) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: sound/core/oss/pcm_oss.c:462:
+	err = snd_pcm_hw_param_near(substream, sparams, SNDRV_PCM_HW_PARAM_PERIODS,
 				     runtime->oss.periods, 0);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#243: FILE: sound/core/oss/pcm_oss.c:467:
+	if ((err = snd_pcm_kernel_ioctl(substream, SNDRV_PCM_IOCTL_HW_PARAMS, sparams)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#278: FILE: sound/core/oss/pcm_oss.c:489:
+	if ((err = snd_pcm_kernel_ioctl(substream, SNDRV_PCM_IOCTL_SW_PARAMS, sw_params)) < 0) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391646.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 12 warnings, 2 checks, 239 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391646.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
