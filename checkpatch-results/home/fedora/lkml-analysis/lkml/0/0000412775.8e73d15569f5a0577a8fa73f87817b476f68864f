WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urN linux-2.5.48/drivers/s390/char/sclp.c linux-2.5.48-s390/drivers/s390/char/sclp.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#29: FILE: drivers/s390/char/sclp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#30: FILE: drivers/s390/char/sclp.c:2:
+ *  drivers/s390/char/sclp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#55: FILE: drivers/s390/char/sclp.c:27:
+ * decides wether we make use of the macro MACHINE_IS_VM to
            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((__aligned__(PAGE_SIZE)))
#80: FILE: drivers/s390/char/sclp.c:52:
+static char sclp_read_sccb[PAGE_SIZE] __attribute__((__aligned__(PAGE_SIZE)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((__aligned__(PAGE_SIZE)))
#82: FILE: drivers/s390/char/sclp.c:54:
+static char sclp_init_sccb[PAGE_SIZE] __attribute__((__aligned__(PAGE_SIZE)));

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#84: FILE: drivers/s390/char/sclp.c:56:
+static unsigned long sclp_status = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#104: FILE: drivers/s390/char/sclp.c:76:
+	__asm__ __volatile__(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#110: FILE: drivers/s390/char/sclp.c:82:
+		: "cc", "memory" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#112: FILE: drivers/s390/char/sclp.c:84:
+	 * cc == 0:   Service Call succesful initiated
 	                           ^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->callback"
#151: FILE: drivers/s390/char/sclp.c:123:
+		if (req->callback != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#167: FILE: drivers/s390/char/sclp.c:139:
+	evbuf = (struct evbuf_header *) (sccb + 1);

CHECK:SPACING: No space is necessary after a cast
#168: FILE: drivers/s390/char/sclp.c:140:
+	while ((void *) evbuf < (void *) sccb + sccb->length) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "t->receiver_fn"
#173: FILE: drivers/s390/char/sclp.c:145:
+				if (t->receiver_fn != NULL)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#180: FILE: drivers/s390/char/sclp.c:152:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(errors)
#216: FILE: drivers/s390/char/sclp.c:188:
+		for (i = 0; i < sizeof(errors)/sizeof(errors[0]); i++)

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#216: FILE: drivers/s390/char/sclp.c:188:
+		for (i = 0; i < sizeof(errors)/sizeof(errors[0]); i++)
 		                              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!errmsg"
#221: FILE: drivers/s390/char/sclp.c:193:
+		if (errmsg == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#224: FILE: drivers/s390/char/sclp.c:196:
+	printk(KERN_WARNING SCLP_CORE_PRINT_HEADER

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#240: FILE: drivers/s390/char/sclp.c:212:
+	 * Don´t try to initiate Unconditional Read if we are not able to
 	      ^

CHECK:SPACING: No space is necessary after a cast
#249: FILE: drivers/s390/char/sclp.c:221:
+	sccb = (struct sccb_header *) sclp_read_sccb;

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/s390/char/sclp.c:263:
+				if (finished_sccb == (u32)(addr_t) tmp->sccb) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req"
#299: FILE: drivers/s390/char/sclp.c:271:
+		if (req != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->callback"
#301: FILE: drivers/s390/char/sclp.c:273:
+			if (req->callback != NULL)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#389: FILE: drivers/s390/char/sclp.c:361:
+} __attribute__((packed));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "t->state_change_fn"
#406: FILE: drivers/s390/char/sclp.c:378:
+			if (t->state_change_fn != NULL)

CHECK:SPACING: No space is necessary after a cast
#419: FILE: drivers/s390/char/sclp.c:391:
+	scbuf = (struct sclp_statechangebuf *) evbuf;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#423: FILE: drivers/s390/char/sclp.c:395:
+			printk(KERN_WARNING SCLP_CORE_PRINT_HEADER

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#433: FILE: drivers/s390/char/sclp.c:405:
+			printk(KERN_WARNING SCLP_CORE_PRINT_HEADER

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_StateChange_Mask>
#446: FILE: drivers/s390/char/sclp.c:418:
+	.receive_mask = EvTyp_StateChange_Mask,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#450: FILE: drivers/s390/char/sclp.c:422:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#455: FILE: drivers/s390/char/sclp.c:427:
+static volatile unsigned long cpu_quiesce_map;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#458: FILE: drivers/s390/char/sclp.c:430:
+do_load_quiesce_psw(void * __unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#465: FILE: drivers/s390/char/sclp.c:437:
+		while (cpu_quiesce_map != 0);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#505: FILE: drivers/s390/char/sclp.c:477:
+	_machine_restart = (void *) do_machine_quiesce;

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_SigQuiesce_Mask>
#512: FILE: drivers/s390/char/sclp.c:484:
+	.receive_mask = EvTyp_SigQuiesce_Mask,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#525: FILE: drivers/s390/char/sclp.c:497:
+} __attribute__((packed));

CHECK:SPACING: No space is necessary after a cast
#537: FILE: drivers/s390/char/sclp.c:509:
+	sccb = (struct init_sccb *) sclp_init_sccb;

CHECK:SPACING: No space is necessary after a cast
#539: FILE: drivers/s390/char/sclp.c:511:
+	req = (struct sclp_req *) ((addr_t) sccb + PAGE_SIZE) - 1;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#583: FILE: drivers/s390/char/sclp.c:555:
+				return -ENOSYS;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#640: FILE: drivers/s390/char/sclp.c:612:
+	ctl_clear_bit(0,9);
 	               ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#696: FILE: drivers/s390/char/sclp.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#697: FILE: drivers/s390/char/sclp.h:2:
+ *  drivers/s390/char/sclp.h

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_OpCmd>
#717: FILE: drivers/s390/char/sclp.h:22:
+#define EvTyp_OpCmd		0x01

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_Msg>
#718: FILE: drivers/s390/char/sclp.h:23:
+#define EvTyp_Msg		0x02

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_StateChange>
#719: FILE: drivers/s390/char/sclp.h:24:
+#define EvTyp_StateChange	0x08

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_PMsgCmd>
#720: FILE: drivers/s390/char/sclp.h:25:
+#define EvTyp_PMsgCmd		0x09

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_CntlProgOpCmd>
#721: FILE: drivers/s390/char/sclp.h:26:
+#define EvTyp_CntlProgOpCmd	0x20

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_CntlProgIdent>
#722: FILE: drivers/s390/char/sclp.h:27:
+#define EvTyp_CntlProgIdent	0x0B

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_SigQuiesce>
#723: FILE: drivers/s390/char/sclp.h:28:
+#define EvTyp_SigQuiesce	0x1D

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_OpCmd_Mask>
#725: FILE: drivers/s390/char/sclp.h:30:
+#define EvTyp_OpCmd_Mask	0x80000000

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_Msg_Mask>
#726: FILE: drivers/s390/char/sclp.h:31:
+#define EvTyp_Msg_Mask		0x40000000

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_PMsgCmd_Mask>
#728: FILE: drivers/s390/char/sclp.h:33:
+#define EvTyp_PMsgCmd_Mask	0x00800000

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_CtlProgOpCmd_Mask>
#729: FILE: drivers/s390/char/sclp.h:34:
+#define EvTyp_CtlProgOpCmd_Mask	0x00000001

CHECK:CAMELCASE: Avoid CamelCase: <EvTyp_CtlProgIdent_Mask>
#730: FILE: drivers/s390/char/sclp.h:35:
+#define EvTyp_CtlProgIdent_Mask	0x00200000

CHECK:CAMELCASE: Avoid CamelCase: <GnrlMsgFlgs_DOM>
#733: FILE: drivers/s390/char/sclp.h:38:
+#define GnrlMsgFlgs_DOM		0x8000

CHECK:CAMELCASE: Avoid CamelCase: <GnrlMsgFlgs_SndAlrm>
#734: FILE: drivers/s390/char/sclp.h:39:
+#define GnrlMsgFlgs_SndAlrm	0x4000

CHECK:CAMELCASE: Avoid CamelCase: <GnrlMsgFlgs_HoldMsg>
#735: FILE: drivers/s390/char/sclp.h:40:
+#define GnrlMsgFlgs_HoldMsg	0x2000

CHECK:CAMELCASE: Avoid CamelCase: <LnTpFlgs_CntlText>
#737: FILE: drivers/s390/char/sclp.h:42:
+#define LnTpFlgs_CntlText	0x8000

CHECK:CAMELCASE: Avoid CamelCase: <LnTpFlgs_LabelText>
#738: FILE: drivers/s390/char/sclp.h:43:
+#define LnTpFlgs_LabelText	0x4000

CHECK:CAMELCASE: Avoid CamelCase: <LnTpFlgs_DataText>
#739: FILE: drivers/s390/char/sclp.h:44:
+#define LnTpFlgs_DataText	0x2000

CHECK:CAMELCASE: Avoid CamelCase: <LnTpFlgs_EndText>
#740: FILE: drivers/s390/char/sclp.h:45:
+#define LnTpFlgs_EndText	0x1000

CHECK:CAMELCASE: Avoid CamelCase: <LnTpFlgs_PromptText>
#741: FILE: drivers/s390/char/sclp.h:46:
+#define LnTpFlgs_PromptText	0x0800

WARNING:NEW_TYPEDEFS: do not add new typedefs
#747: FILE: drivers/s390/char/sclp.h:52:
+typedef unsigned int sclp_cmdw_t;

CHECK:CAMELCASE: Avoid CamelCase: <GDS_ID_MDSRouteInfo>
#754: FILE: drivers/s390/char/sclp.h:59:
+#define GDS_ID_MDSRouteInfo	0x1311

CHECK:CAMELCASE: Avoid CamelCase: <GDS_ID_SNACondReport>
#756: FILE: drivers/s390/char/sclp.h:61:
+#define GDS_ID_SNACondReport	0x1532

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#771: FILE: drivers/s390/char/sclp.h:76:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#776: FILE: drivers/s390/char/sclp.h:81:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#781: FILE: drivers/s390/char/sclp.h:86:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#788: FILE: drivers/s390/char/sclp.h:93:
+} __attribute__((packed));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_req *' should also have an identifier name
#796: FILE: drivers/s390/char/sclp.h:101:
+	void (*callback)(struct sclp_req *, void *data);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_register *' should also have an identifier name
#817: FILE: drivers/s390/char/sclp.h:122:
+	void (*state_change_fn)(struct sclp_register *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evbuf_header *' should also have an identifier name
#819: FILE: drivers/s390/char/sclp.h:124:
+	void (*receiver_fn)(struct evbuf_header *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#857: FILE: drivers/s390/char/sclp_con.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#858: FILE: drivers/s390/char/sclp_con.c:2:
+ *  drivers/s390/char/sclp_con.c

CHECK:SPACING: No space is necessary after a cast
#913: FILE: drivers/s390/char/sclp_con.c:57:
+	list_add_tail((struct list_head *) page, &sclp_con_pages);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "next"
#923: FILE: drivers/s390/char/sclp_con.c:67:
+	if (next != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_conbuf"
#945: FILE: drivers/s390/char/sclp_con.c:89:
+	if (sclp_conbuf != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sclp_conbuf"
#972: FILE: drivers/s390/char/sclp_con.c:116:
+		if (sclp_conbuf == NULL) {

CHECK:SPACING: No space is necessary after a cast
#979: FILE: drivers/s390/char/sclp_con.c:123:
+			list_del((struct list_head *) page);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_conbuf"
#998: FILE: drivers/s390/char/sclp_con.c:142:
+	if (sclp_conbuf != NULL && !timer_pending(&sclp_con_timer)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1002: FILE: drivers/s390/char/sclp_con.c:146:
+		sclp_con_timer.expires = jiffies + HZ/10;
 		                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_conbuf"
#1028: FILE: drivers/s390/char/sclp_con.c:172:
+	if (sclp_conbuf != NULL) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1045: FILE: drivers/s390/char/sclp_con.c:189:
+struct console sclp_console =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#1070: FILE: drivers/s390/char/sclp_con.c:214:
+		if (page == NULL)

CHECK:SPACING: No space is necessary after a cast
#1072: FILE: drivers/s390/char/sclp_con.c:216:
+		list_add_tail((struct list_head *) page, &sclp_con_pages);

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1091: FILE: drivers/s390/char/sclp_con.c:235:
+	/* enable printk´s access to this driver */
 	                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1098: FILE: drivers/s390/char/sclp_cpi.c:1:
+/*

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1136: FILE: drivers/s390/char/sclp_cpi.c:39:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1141: FILE: drivers/s390/char/sclp_cpi.c:44:
+} __attribute__((packed));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1145: FILE: drivers/s390/char/sclp_cpi.c:48:
+static struct sclp_register sclp_cpi_event =
+{

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1149: FILE: drivers/s390/char/sclp_cpi.c:52:
+MODULE_AUTHOR(

WARNING:SPLIT_STRING: quoted string split across lines
#1151: FILE: drivers/s390/char/sclp_cpi.c:54:
+	"Martin Peschke, IBM Deutschland Entwicklung GmbH "
+	"<mpeschke@de.ibm.com>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1153: FILE: drivers/s390/char/sclp_cpi.c:56:
+MODULE_DESCRIPTION(

WARNING:SPLIT_STRING: quoted string split across lines
#1155: FILE: drivers/s390/char/sclp_cpi.c:58:
+	"identify this operating system instance to the S/390 "
+	"or zSeries hardware");

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1157: FILE: drivers/s390/char/sclp_cpi.c:60:
+static char *system_name = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1161: FILE: drivers/s390/char/sclp_cpi.c:64:
+static char *sysplex_name = NULL;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1175: FILE: drivers/s390/char/sclp_cpi.c:78:
+		printk("cpi: bug: no system type specified\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1181: FILE: drivers/s390/char/sclp_cpi.c:84:
+		printk("cpi: bug: system type has length of %li characters - "

WARNING:SPLIT_STRING: quoted string split across lines
#1182: FILE: drivers/s390/char/sclp_cpi.c:85:
+		printk("cpi: bug: system type has length of %li characters - "
+		       "only %i characters supported\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1189: FILE: drivers/s390/char/sclp_cpi.c:92:
+		printk("cpi: no system name specified\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1195: FILE: drivers/s390/char/sclp_cpi.c:98:
+		printk("cpi: system name has length of %li characters - "

WARNING:SPLIT_STRING: quoted string split across lines
#1196: FILE: drivers/s390/char/sclp_cpi.c:99:
+		printk("cpi: system name has length of %li characters - "
+		       "only %i characters supported\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1203: FILE: drivers/s390/char/sclp_cpi.c:106:
+		printk("cpi: sysplex name has length of %li characters"

WARNING:SPLIT_STRING: quoted string split across lines
#1204: FILE: drivers/s390/char/sclp_cpi.c:107:
+		printk("cpi: sysplex name has length of %li characters"
+		       " - only %i characters supported\n",

CHECK:SPACING: No space is necessary after a cast
#1216: FILE: drivers/s390/char/sclp_cpi.c:119:
+	sem = (struct semaphore *) data;

CHECK:SPACING: No space is necessary after a cast
#1227: FILE: drivers/s390/char/sclp_cpi.c:130:
+	req = (struct sclp_req *) kmalloc(sizeof(struct sclp_req), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1227: FILE: drivers/s390/char/sclp_cpi.c:130:
+	req = (struct sclp_req *) kmalloc(sizeof(struct sclp_req), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*req)...) over kmalloc(sizeof(struct sclp_req)...)
#1227: FILE: drivers/s390/char/sclp_cpi.c:130:
+	req = (struct sclp_req *) kmalloc(sizeof(struct sclp_req), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#1228: FILE: drivers/s390/char/sclp_cpi.c:131:
+	if (req == NULL)

CHECK:SPACING: No space is necessary after a cast
#1230: FILE: drivers/s390/char/sclp_cpi.c:133:
+	sccb = (struct cpi_sccb *) get_free_page(GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sccb"
#1231: FILE: drivers/s390/char/sclp_cpi.c:134:
+	if (sccb == NULL) {

WARNING:TYPO_SPELLING: 'sytem' may be misspelled - perhaps 'system'?
#1255: FILE: drivers/s390/char/sclp_cpi.c:158:
+	/* set sytem level */
 	       ^^^^^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1256: FILE: drivers/s390/char/sclp_cpi.c:159:
+	evb->system_level = LINUX_VERSION_CODE;

CHECK:SPACING: No space is necessary after a cast
#1277: FILE: drivers/s390/char/sclp_cpi.c:180:
+	free_page((unsigned long) req->sccb);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1295: FILE: drivers/s390/char/sclp_cpi.c:198:
+		printk("cpi: could not register to hardware console.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1299: FILE: drivers/s390/char/sclp_cpi.c:202:
+		printk("cpi: no control program identification support\n");

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#1301: FILE: drivers/s390/char/sclp_cpi.c:204:
+		return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1306: FILE: drivers/s390/char/sclp_cpi.c:209:
+		printk("cpi: couldn't allocate request\n");

WARNING:CONSIDER_COMPLETION: consider using a completion
#1312: FILE: drivers/s390/char/sclp_cpi.c:215:
+	sema_init(&sem, 0);

CHECK:SPACING: No space is necessary after a cast
#1319: FILE: drivers/s390/char/sclp_cpi.c:222:
+	rc = ((struct cpi_sccb *) req->sccb)->header.response_code;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1320: FILE: drivers/s390/char/sclp_cpi.c:223:
+	if (rc != 0x0020) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1321: FILE: drivers/s390/char/sclp_cpi.c:224:
+		printk("cpi: failed with response code 0x%x\n", rc);

CHECK:BRACES: Unbalanced braces around else statement
#1323: FILE: drivers/s390/char/sclp_cpi.c:226:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1331: FILE: drivers/s390/char/sclp_cpi.c:234:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1336: FILE: drivers/s390/char/sclp_cpi.c:239:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1345: FILE: drivers/s390/char/sclp_rw.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1346: FILE: drivers/s390/char/sclp_rw.c:2:
+ *  drivers/s390/char/sclp_rw.c

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1363: FILE: drivers/s390/char/sclp_rw.c:19:
+#include <asm/uaccess.h>

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1372: FILE: drivers/s390/char/sclp_rw.c:28:
+ * (as it is specified as the maximum size in the the SCLP ducumentation)

CHECK:SPACING: No space is necessary after a cast
#1394: FILE: drivers/s390/char/sclp_rw.c:50:
+	sccb = (struct write_sccb *) page;

CHECK:SPACING: No space is necessary after a cast
#1399: FILE: drivers/s390/char/sclp_rw.c:55:
+	buffer = ((struct sclp_buffer *) ((addr_t) sccb + PAGE_SIZE)) - 1;

WARNING:TYPO_SPELLING: 'orignal' may be misspelled - perhaps 'original'?
#1424: FILE: drivers/s390/char/sclp_rw.c:80:
+ * Return a pointer to the orignal page that has been used to create
                            ^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1456: FILE: drivers/s390/char/sclp_rw.c:112:
+	mto = (struct mto *)(((unsigned long) sccb) + sccb->header.length);

CHECK:SPACING: No space is necessary after a cast
#1468: FILE: drivers/s390/char/sclp_rw.c:124:
+	buffer->current_line = (char *) (mto + 1);

CHECK:SPACING: No space is necessary after a cast
#1494: FILE: drivers/s390/char/sclp_rw.c:150:
+	mto = (struct mto *)(((unsigned long) sccb) + sccb->header.length);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!from->current_line"
#1519: FILE: drivers/s390/char/sclp_rw.c:175:
+	if (from->current_line == NULL)

WARNING:TYPO_SPELLING: 'formated' may be misspelled - perhaps 'formatted'?
#1549: FILE: drivers/s390/char/sclp_rw.c:205:
+	 * parse msg for escape sequences (\t,\v ...) and put formated
 	                                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'ourselfs' may be misspelled - perhaps 'ourselves'?
#1552: FILE: drivers/s390/char/sclp_rw.c:208:
+	 * We have to do this work ourselfs because there is no support for
 	                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#1557: FILE: drivers/s390/char/sclp_rw.c:213:
+	 * immediatly or we wait for a final new line maybe coming with the
 	   ^^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1572: FILE: drivers/s390/char/sclp_rw.c:228:
+		if (from_user) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1575: FILE: drivers/s390/char/sclp_rw.c:231:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer->current_line"
#1581: FILE: drivers/s390/char/sclp_rw.c:237:
+			if (buffer->current_line == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer->current_line"
#1595: FILE: drivers/s390/char/sclp_rw.c:251:
+			if (buffer->current_line == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1613: FILE: drivers/s390/char/sclp_rw.c:269:
+			if (buffer->current_line != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1634: FILE: drivers/s390/char/sclp_rw.c:290:
+			if (buffer->current_line != NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1642: FILE: drivers/s390/char/sclp_rw.c:298:
+			if (buffer->current_line != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer->current_line"
#1652: FILE: drivers/s390/char/sclp_rw.c:308:
+			if (buffer->current_line == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1662: FILE: drivers/s390/char/sclp_rw.c:318:
+		if (buffer->current_line != NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1680: FILE: drivers/s390/char/sclp_rw.c:336:
+	if (buffer->current_line != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1694: FILE: drivers/s390/char/sclp_rw.c:350:
+	if (buffer->current_line != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1706: FILE: drivers/s390/char/sclp_rw.c:362:
+	if (buffer->current_line != NULL &&

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1723: FILE: drivers/s390/char/sclp_rw.c:379:
+	static int init_done = 0;

CHECK:SPACING: No space is necessary after a cast
#1741: FILE: drivers/s390/char/sclp_rw.c:397:
+	buffer = (struct sclp_buffer *) data;

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1747: FILE: drivers/s390/char/sclp_rw.c:403:
+	case 0x0020 :
 	            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1756: FILE: drivers/s390/char/sclp_rw.c:412:
+		printk(KERN_WARNING SCLP_RW_PRINT_HEADER

WARNING:SPLIT_STRING: quoted string split across lines
#1758: FILE: drivers/s390/char/sclp_rw.c:414:
+		       "write event data failed "
+		       "(response code: 0x%x SCCB address %p).\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->callback"
#1762: FILE: drivers/s390/char/sclp_rw.c:418:
+	if (buffer->callback != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buffer->current_line"
#1777: FILE: drivers/s390/char/sclp_rw.c:433:
+	if (buffer->current_line != NULL)

CHECK:BRACES: Unbalanced braces around else statement
#1791: FILE: drivers/s390/char/sclp_rw.c:447:
+	else {

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1792: FILE: drivers/s390/char/sclp_rw.c:448:
+		callback(buffer, -ENOSYS);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1807: FILE: drivers/s390/char/sclp_rw.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1808: FILE: drivers/s390/char/sclp_rw.h:2:
+ *  drivers/s390/char/sclp_rw.h

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1826: FILE: drivers/s390/char/sclp_rw.h:20:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1841: FILE: drivers/s390/char/sclp_rw.h:35:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1848: FILE: drivers/s390/char/sclp_rw.h:42:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1853: FILE: drivers/s390/char/sclp_rw.h:47:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1858: FILE: drivers/s390/char/sclp_rw.h:52:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1863: FILE: drivers/s390/char/sclp_rw.h:57:
+} __attribute__((packed));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1886: FILE: drivers/s390/char/sclp_rw.h:80:
+	void (*callback)(struct sclp_buffer *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1886: FILE: drivers/s390/char/sclp_rw.h:80:
+	void (*callback)(struct sclp_buffer *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1890: FILE: drivers/s390/char/sclp_rw.h:84:
+struct sclp_buffer *sclp_make_buffer(void *, unsigned short, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#1890: FILE: drivers/s390/char/sclp_rw.h:84:
+struct sclp_buffer *sclp_make_buffer(void *, unsigned short, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#1890: FILE: drivers/s390/char/sclp_rw.h:84:
+struct sclp_buffer *sclp_make_buffer(void *, unsigned short, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1891: FILE: drivers/s390/char/sclp_rw.h:85:
+void *sclp_unmake_buffer(struct sclp_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1892: FILE: drivers/s390/char/sclp_rw.h:86:
+int sclp_buffer_space(struct sclp_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1893: FILE: drivers/s390/char/sclp_rw.h:87:
+int sclp_write(struct sclp_buffer *buffer, const char *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1893: FILE: drivers/s390/char/sclp_rw.h:87:
+int sclp_write(struct sclp_buffer *buffer, const char *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1893: FILE: drivers/s390/char/sclp_rw.h:87:
+int sclp_write(struct sclp_buffer *buffer, const char *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1894: FILE: drivers/s390/char/sclp_rw.h:88:
+void sclp_move_current_line(struct sclp_buffer *, struct sclp_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1894: FILE: drivers/s390/char/sclp_rw.h:88:
+void sclp_move_current_line(struct sclp_buffer *, struct sclp_buffer *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1895: FILE: drivers/s390/char/sclp_rw.h:89:
+void sclp_emit_buffer(struct sclp_buffer *,void (*)(struct sclp_buffer *,int));
                                           ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1895: FILE: drivers/s390/char/sclp_rw.h:89:
+void sclp_emit_buffer(struct sclp_buffer *,void (*)(struct sclp_buffer *,int));
                                                                         ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1895: FILE: drivers/s390/char/sclp_rw.h:89:
+void sclp_emit_buffer(struct sclp_buffer *,void (*)(struct sclp_buffer *,int));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1896: FILE: drivers/s390/char/sclp_rw.h:90:
+void sclp_set_columns(struct sclp_buffer *, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#1896: FILE: drivers/s390/char/sclp_rw.h:90:
+void sclp_set_columns(struct sclp_buffer *, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1897: FILE: drivers/s390/char/sclp_rw.h:91:
+void sclp_set_htab(struct sclp_buffer *, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#1897: FILE: drivers/s390/char/sclp_rw.h:91:
+void sclp_set_htab(struct sclp_buffer *, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sclp_buffer *' should also have an identifier name
#1898: FILE: drivers/s390/char/sclp_rw.h:92:
+int sclp_chars_in_buffer(struct sclp_buffer *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1905: FILE: drivers/s390/char/sclp_tty.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1906: FILE: drivers/s390/char/sclp_tty.c:2:
+ *  drivers/s390/char/sclp_tty.c

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1923: FILE: drivers/s390/char/sclp_tty.c:19:
+#include <asm/uaccess.h>

WARNING:TYPO_SPELLING: 'excatly' may be misspelled - perhaps 'exactly'?
#1939: FILE: drivers/s390/char/sclp_tty.c:35:
+ * There is excatly one SCLP terminal, so we can keep things simple
             ^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1963: FILE: drivers/s390/char/sclp_tty.c:59:
+static struct tty_struct * sclp_tty_table[1];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1964: FILE: drivers/s390/char/sclp_tty.c:60:
+static struct termios * sclp_tty_termios[1];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1965: FILE: drivers/s390/char/sclp_tty.c:61:
+static struct termios * sclp_tty_termios_locked[1];

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1966: FILE: drivers/s390/char/sclp_tty.c:62:
+static int sclp_tty_refcount = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1968: FILE: drivers/s390/char/sclp_tty.c:64:
+extern struct termios  tty_std_termios;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1972: FILE: drivers/s390/char/sclp_tty.c:68:
+static struct sclp_ioctls sclp_ioctls_init =
+{

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#1980: FILE: drivers/s390/char/sclp_tty.c:76:
+	0x6c			/* to seprate upper and lower case */
 	    			      ^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1986: FILE: drivers/s390/char/sclp_tty.c:82:
+sclp_tty_open(struct tty_struct *tty, struct file *filp)
                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1999: FILE: drivers/s390/char/sclp_tty.c:95:
+sclp_tty_close(struct tty_struct *tty, struct file *filp)
                                                     ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2011: FILE: drivers/s390/char/sclp_tty.c:107:
+sclp_tty_ioctl(struct tty_struct *tty, struct file * file,

CHECK:SPACING: No space is necessary after a cast
#2026: FILE: drivers/s390/char/sclp_tty.c:122:
+		if (get_user(sclp_ioctls.htab, (unsigned short *) arg))

CHECK:SPACING: No space is necessary after a cast
#2033: FILE: drivers/s390/char/sclp_tty.c:129:
+		if (put_user(sclp_ioctls.htab, (unsigned short *) arg))

CHECK:SPACING: No space is necessary after a cast
#2038: FILE: drivers/s390/char/sclp_tty.c:134:
+		if (get_user(sclp_ioctls.echo, (unsigned char *) arg))

CHECK:SPACING: No space is necessary after a cast
#2043: FILE: drivers/s390/char/sclp_tty.c:139:
+		if (put_user(sclp_ioctls.echo, (unsigned char *) arg))

CHECK:SPACING: No space is necessary after a cast
#2048: FILE: drivers/s390/char/sclp_tty.c:144:
+		if (get_user(sclp_ioctls.columns, (unsigned short *) arg))

CHECK:SPACING: No space is necessary after a cast
#2055: FILE: drivers/s390/char/sclp_tty.c:151:
+		if (put_user(sclp_ioctls.columns, (unsigned short *) arg))

CHECK:SPACING: No space is necessary after a cast
#2060: FILE: drivers/s390/char/sclp_tty.c:156:
+		if (get_user(sclp_ioctls.final_nl, (signed char *) arg))

CHECK:SPACING: No space is necessary after a cast
#2065: FILE: drivers/s390/char/sclp_tty.c:161:
+		if (put_user(sclp_ioctls.final_nl, (signed char *) arg))

CHECK:SPACING: No space is necessary after a cast
#2074: FILE: drivers/s390/char/sclp_tty.c:170:
+		if (get_user(obuf, (unsigned int *) arg) == 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2074: FILE: drivers/s390/char/sclp_tty.c:170:
+		if (get_user(obuf, (unsigned int *) arg) == 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2079: FILE: drivers/s390/char/sclp_tty.c:175:
+		} else

CHECK:SPACING: No space is necessary after a cast
#2085: FILE: drivers/s390/char/sclp_tty.c:181:
+		if (put_user(obuf, (unsigned int *) arg))

CHECK:SPACING: No space is necessary after a cast
#2090: FILE: drivers/s390/char/sclp_tty.c:186:
+		if (put_user(sclp_ioctls.kmem_sccb, (unsigned short *) arg))

CHECK:SPACING: No space is necessary after a cast
#2095: FILE: drivers/s390/char/sclp_tty.c:191:
+		if (get_user(sclp_ioctls.tolower, (unsigned char *) arg))

CHECK:SPACING: No space is necessary after a cast
#2100: FILE: drivers/s390/char/sclp_tty.c:196:
+		if (put_user(sclp_ioctls.tolower, (unsigned char *) arg))

WARNING:TYPO_SPELLING: 'seperating' may be misspelled - perhaps 'separating'?
#2105: FILE: drivers/s390/char/sclp_tty.c:201:
+		 * set special character used for seperating upper and
 		                                  ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2108: FILE: drivers/s390/char/sclp_tty.c:204:
+		if (get_user(sclp_ioctls.delim, (unsigned char *) arg))

WARNING:TYPO_SPELLING: 'seperating' may be misspelled - perhaps 'separating'?
#2113: FILE: drivers/s390/char/sclp_tty.c:209:
+		 * get special character used for seperating upper and
 		                                  ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2116: FILE: drivers/s390/char/sclp_tty.c:212:
+		if (put_user(sclp_ioctls.delim, (unsigned char *) arg))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_ttybuf"
#2130: FILE: drivers/s390/char/sclp_tty.c:226:
+		if (sclp_ttybuf != NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2149: FILE: drivers/s390/char/sclp_tty.c:245:
+sclp_tty_write_room (struct tty_struct *tty)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_ttybuf"
#2157: FILE: drivers/s390/char/sclp_tty.c:253:
+	if (sclp_ttybuf != NULL)

CHECK:SPACING: No space is necessary after a cast
#2175: FILE: drivers/s390/char/sclp_tty.c:271:
+	list_add_tail((struct list_head *) page, &sclp_tty_pages);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "next"
#2185: FILE: drivers/s390/char/sclp_tty.c:281:
+	if (next != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_tty"
#2189: FILE: drivers/s390/char/sclp_tty.c:285:
+	if (sclp_tty != NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (sclp_tty->ldisc.write_wakeup)
#2192: FILE: drivers/s390/char/sclp_tty.c:288:
+			(sclp_tty->ldisc.write_wakeup)(sclp_tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_ttybuf"
#2215: FILE: drivers/s390/char/sclp_tty.c:311:
+	if (sclp_ttybuf != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sclp_ttybuf"
#2237: FILE: drivers/s390/char/sclp_tty.c:333:
+		if (sclp_ttybuf == NULL) {

CHECK:SPACING: No space is necessary after a cast
#2245: FILE: drivers/s390/char/sclp_tty.c:341:
+			list_del((struct list_head *) page);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_ttybuf"
#2266: FILE: drivers/s390/char/sclp_tty.c:362:
+		if (sclp_ttybuf != NULL && !timer_pending(&sclp_tty_timer)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2270: FILE: drivers/s390/char/sclp_tty.c:366:
+			sclp_tty_timer.expires = jiffies + HZ/10;
 			                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sclp_ttybuf"
#2347: FILE: drivers/s390/char/sclp_tty.c:443:
+	if (sclp_ttybuf != NULL)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2372: FILE: drivers/s390/char/sclp_tty.c:468:
+void sclp_tty_input(unsigned char* buf, unsigned int count)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sclp_tty"
#2380: FILE: drivers/s390/char/sclp_tty.c:476:
+	if (sclp_tty == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2395: FILE: drivers/s390/char/sclp_tty.c:491:
+		if (count < 2 ||
[...]
+		} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2396: FILE: drivers/s390/char/sclp_tty.c:492:
+		    strncmp (buf + count - 2, "^n", 2) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2397: FILE: drivers/s390/char/sclp_tty.c:493:
+		    strncmp (buf + count - 2, "\0252n", 2)) {

CHECK:BRACES: Unbalanced braces around else statement
#2400: FILE: drivers/s390/char/sclp_tty.c:496:
+		} else

WARNING:TYPO_SPELLING: 'seperated' may be misspelled - perhaps 'separated'?
#2413: FILE: drivers/s390/char/sclp_tty.c:509:
+ * find out characters in lower/upper case seperated by a special character,
                                            ^^^^^^^^^

WARNING:TYPO_SPELLING: 'modifiy' may be misspelled - perhaps 'modify'?
#2414: FILE: drivers/s390/char/sclp_tty.c:510:
+ * modifiy original string,
    ^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2426: FILE: drivers/s390/char/sclp_tty.c:522:
+	ip = op = buf;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#2438: FILE: drivers/s390/char/sclp_tty.c:534:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#2446: FILE: drivers/s390/char/sclp_tty.c:542:
+		} else

CHECK:SPACING: No space is necessary after a cast
#2452: FILE: drivers/s390/char/sclp_tty.c:548:
+					*op++ = _ebc_toupper[(int) *ip++];

CHECK:SPACING: No space is necessary after a cast
#2455: FILE: drivers/s390/char/sclp_tty.c:551:
+					*op++ = _ebc_tolower[(int) *ip++];

WARNING:TYPO_SPELLING: 'seperated' may be misspelled - perhaps 'separated'?
#2479: FILE: drivers/s390/char/sclp_tty.c:575:
+	 * (depends on current case) seperated by a special character,
 	                             ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2503: FILE: drivers/s390/char/sclp_tty.c:599:
+	for (vec = start; vec < end; (void *) vec += vec->length)

CHECK:SPACING: No space is necessary after a cast
#2515: FILE: drivers/s390/char/sclp_tty.c:611:
+	for (subvec = start; subvec < end; (void *) subvec += subvec->length)

CHECK:SPACING: No space is necessary after a cast
#2533: FILE: drivers/s390/char/sclp_tty.c:629:
+			       (void *) subvec + subvec->length);

CHECK:SPACING: No space is necessary after a cast
#2534: FILE: drivers/s390/char/sclp_tty.c:630:
+		(void *) subvec += subvec->length;

CHECK:SPACING: No space is necessary after a cast
#2552: FILE: drivers/s390/char/sclp_tty.c:648:
+		(void *) subvec += subvec->length;

CHECK:SPACING: No space is necessary after a cast
#2567: FILE: drivers/s390/char/sclp_tty.c:663:
+				  (void *) vec + vec->length);

CHECK:SPACING: No space is necessary after a cast
#2568: FILE: drivers/s390/char/sclp_tty.c:664:
+		(void *) vec += vec->length;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2572: FILE: drivers/s390/char/sclp_tty.c:668:
+
+

CHECK:SPACING: No space is necessary after a cast
#2580: FILE: drivers/s390/char/sclp_tty.c:676:
+		sclp_eval_cpmsu(vec + 1, (void *) vec + vec->length);

CHECK:SPACING: No space is necessary after a cast
#2589: FILE: drivers/s390/char/sclp_tty.c:685:
+	end = (void *) evbuf + evbuf->length;

CHECK:SPACING: No space is necessary after a cast
#2592: FILE: drivers/s390/char/sclp_tty.c:688:
+		sclp_eval_mdsmu(vec + 1, (void *) vec + vec->length);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2601: FILE: drivers/s390/char/sclp_tty.c:697:
+struct sclp_register sclp_input_event =
+{

CHECK:SPACING: No space is necessary after a cast
#2620: FILE: drivers/s390/char/sclp_tty.c:716:
+		page = (void *) get_zeroed_page(GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#2621: FILE: drivers/s390/char/sclp_tty.c:717:
+		if (page == NULL)

CHECK:SPACING: No space is necessary after a cast
#2623: FILE: drivers/s390/char/sclp_tty.c:719:
+		list_add_tail((struct list_head *) page, &sclp_tty_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2647: FILE: drivers/s390/char/sclp_tty.c:743:
+	memset (&sclp_tty_driver, 0, sizeof(struct tty_driver));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2707: FILE: drivers/s390/char/sclp_tty.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2708: FILE: drivers/s390/char/sclp_tty.h:2:
+ *  drivers/s390/char/sclp_tty.h

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#2729: FILE: drivers/s390/char/sclp_tty.h:23:
+	unsigned short kmem_sccb;	/* can´t be modified at run time */
 	                         	      ^

WARNING:TYPO_SPELLING: 'colums' may be misspelled - perhaps 'columns'?
#2741: FILE: drivers/s390/char/sclp_tty.h:35:
+/* set number of colums for output */
                  ^^^^^^

WARNING:TYPO_SPELLING: 'seperating' may be misspelled - perhaps 'separating'?
#2751: FILE: drivers/s390/char/sclp_tty.h:45:
+/* set special character used for seperating upper and lower case, */
                                   ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'colums' may be misspelled - perhaps 'columns'?
#2759: FILE: drivers/s390/char/sclp_tty.h:53:
+/* get number of colums for output */
                  ^^^^^^

WARNING:TYPO_SPELLING: 'seperating' may be misspelled - perhaps 'separating'?
#2767: FILE: drivers/s390/char/sclp_tty.h:61:
+/* get special character used for seperating upper and lower case, */
                                   ^^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412775.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 110 warnings, 141 checks, 2717 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412775.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
