WARNING:REPEATED_WORD: Possible repeated word: 'the'
#30: 
KERNELBASE  from the the virtual address. bus_to_virt() will perform

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#62: FILE: asm-ppc/io.h:11:
+#include <asm/pgtable.h>

CHECK:SPACING: No space is necessary after a cast
#77: FILE: asm-ppc/io.h:230:
+	if (likely((address >= (void*) KERNELBASE) &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#77: FILE: asm-ppc/io.h:230:
+	if (likely((address >= (void*) KERNELBASE) &&
[...]
         return (unsigned long)address - KERNELBASE + PCI_DRAM_OFFSET;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#77: FILE: asm-ppc/io.h:230:
+	if (likely((address >= (void*) KERNELBASE) &&

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#78: FILE: asm-ppc/io.h:231:
+		   (address < ((void*) ioremap_bot))))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#78: FILE: asm-ppc/io.h:231:
+		   (address < ((void*) ioremap_bot))))

CHECK:SPACING: No space is necessary after a cast
#84: FILE: asm-ppc/io.h:235:
+		return iopa ((unsigned long) address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: asm-ppc/io.h:235:
+		return iopa ((unsigned long) address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: asm-ppc/io.h:241:
+	if (unlikely (address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address == 0'
#91: FILE: asm-ppc/io.h:241:
+	if (unlikely (address == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#93: FILE: asm-ppc/io.h:243:
+	if (likely((address >= PCI_DRAM_OFFSET) &&
[...]
         return (void *)(address - PCI_DRAM_OFFSET + KERNELBASE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address >= PCI_DRAM_OFFSET'
#93: FILE: asm-ppc/io.h:243:
+	if (likely((address >= PCI_DRAM_OFFSET) &&
+		   (address < (ioremap_bot - KERNELBASE + PCI_DRAM_OFFSET))))

CHECK:SPACING: No space is necessary after a cast
#100: FILE: asm-ppc/io.h:248:
+		return (void*) mm_ptov (address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#100: FILE: asm-ppc/io.h:248:
+		return (void*) mm_ptov (address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: asm-ppc/io.h:248:
+		return (void*) mm_ptov (address);

CHECK:SPACING: No space is necessary after a cast
#112: FILE: asm-ppc/io.h:260:
+	if (likely((address >= (void*) KERNELBASE) &&

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#112: FILE: asm-ppc/io.h:260:
+	if (likely((address >= (void*) KERNELBASE) &&
[...]
 	return (unsigned long) address - KERNELBASE;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#112: FILE: asm-ppc/io.h:260:
+	if (likely((address >= (void*) KERNELBASE) &&

CHECK:SPACING: No space is necessary after a cast
#113: FILE: asm-ppc/io.h:261:
+		   (address < ((void*) ioremap_bot))))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#113: FILE: asm-ppc/io.h:261:
+		   (address < ((void*) ioremap_bot))))

CHECK:SPACING: No space is necessary after a cast
#119: FILE: asm-ppc/io.h:265:
+		return iopa ((unsigned long) address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: asm-ppc/io.h:265:
+		return iopa ((unsigned long) address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: asm-ppc/io.h:271:
+	if (unlikely (address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address == 0'
#125: FILE: asm-ppc/io.h:271:
+	if (unlikely (address == 0))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#127: FILE: asm-ppc/io.h:273:
+	if (likely(address < (ioremap_bot - KERNELBASE)))
 	return (void *) (address + KERNELBASE);

CHECK:SPACING: No space is necessary after a cast
#133: FILE: asm-ppc/io.h:277:
+		return (void*) mm_ptov (address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#133: FILE: asm-ppc/io.h:277:
+		return (void*) mm_ptov (address);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: asm-ppc/io.h:277:
+		return (void*) mm_ptov (address);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225898.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 13 warnings, 11 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225898.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
