WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
TEST: ptr list: mem = f6f82400, elf = f6f82400, prstatus = f6f82434, psinfo = f6f824c4

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#93: FILE: fs/binfmt_elf.c:1194:
+	///struct elf_prstatus prstatus;	/* NT_PRSTATUS */	///80B
+	struct elf_prstatus *prstatus;	/* NT_PRSTATUS */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#95: FILE: fs/binfmt_elf.c:1196:
+	///struct elf_prpsinfo psinfo;	/* NT_PRPSINFO */	///128B
+	struct elf_prpsinfo *psinfo;	/* NT_PRPSINFO */

WARNING:TYPO_SPELLING: 'proceses' may be misspelled - perhaps 'processes'?
#119: FILE: fs/binfmt_elf.c:1214:
+	 * This is because those proceses that could possibly change map_count or
 	                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: fs/binfmt_elf.c:1222:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/binfmt_elf.c:1222:
+  $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#134: FILE: fs/binfmt_elf.c:1225:
+			+ sizeof(*prstatus)+ sizeof(*psinfo)
 			                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#146: FILE: fs/binfmt_elf.c:1237:
+	for (i = 0; i < NUM_NOTES; i++) {
+		notes[i] = (void *)xfpu + xfpu_size + i * sizeof(struct memelfnote);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: fs/binfmt_elf.c:1241:
+	printk ("TEST: alloc sizes = 0x%x + 0x%x + 0x%x + 0x%x + 0x%x  + 0x%x = 0x%x\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: fs/binfmt_elf.c:1241:
+	printk ("TEST: alloc sizes = 0x%x + 0x%x + 0x%x + 0x%x + 0x%x  + 0x%x = 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: fs/binfmt_elf.c:1242:
+	printk ("TEST: alloc sizes = 0x%x + 0x%x + 0x%x + 0x%x + 0x%x  + 0x%x = 0x%x\n",
+			sizeof(*elf), sizeof(*prstatus), sizeof(*psinfo),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#154: FILE: fs/binfmt_elf.c:1245:
+			sizeof(*elf)+ sizeof(*prstatus)+ sizeof(*psinfo)+
 			            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#154: FILE: fs/binfmt_elf.c:1245:
+			sizeof(*elf)+ sizeof(*prstatus)+ sizeof(*psinfo)+
 			                               ^

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#154: FILE: fs/binfmt_elf.c:1245:
+			sizeof(*elf)+ sizeof(*prstatus)+ sizeof(*psinfo)+
 			                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#155: FILE: fs/binfmt_elf.c:1246:
+			sizeof(*fpu)+ xfpu_size+
 			            ^

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#155: FILE: fs/binfmt_elf.c:1246:
+			sizeof(*fpu)+ xfpu_size+
 			                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#157: FILE: fs/binfmt_elf.c:1248:
+	printk ("TEST: ptr list: mem = %p, elf = %p, prstatus = %p, psinfo = %p\n  fpu = %p, xfpu = %p, notes = %p\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: fs/binfmt_elf.c:1248:
+	printk ("TEST: ptr list: mem = %p, elf = %p, prstatus = %p, psinfo = %p\n  fpu = %p, xfpu = %p, notes = %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: fs/binfmt_elf.c:1249:
+	printk ("TEST: ptr list: mem = %p, elf = %p, prstatus = %p, psinfo = %p\n  fpu = %p, xfpu = %p, notes = %p\n",
+			mem, elf, prstatus, psinfo, fpu, xfpu, notes[0]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: fs/binfmt_elf.c:1275:
+	fill_elf_header(elf, segs+1);	/* including notes section*/
 	                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: fs/binfmt_elf.c:1293:
+	if ((prstatus->pr_fpvalid = elf_core_copy_task_fpregs(current, fpu)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389895.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 11 warnings, 9 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000389895.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
