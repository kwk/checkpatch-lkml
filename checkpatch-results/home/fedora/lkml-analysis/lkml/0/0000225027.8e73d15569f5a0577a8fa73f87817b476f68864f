ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#231: FILE: sound/oss/ad1848.c:2925:
+static struct pnp_dev	*ad1848_dev  = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: sound/oss/ad1889.c:311:
+static int ad1889_read_proc (char *page, char **start, off_t off,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#264: FILE: sound/oss/aedsp16.c:613:
+static void __init aedsp16_hard_decode(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#273: FILE: sound/oss/aedsp16.c:657:
+static void __init aedsp16_hard_encode(void) {

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_SuspendFIFO>
#376: FILE: sound/oss/cs4281/cs4281m.c:1146:
+static void cs4281_SuspendFIFO(struct cs4281_state *s, struct cs4281_pipeline *pl)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#385: FILE: sound/oss/cs4281/cs4281m.c:1154:
 }
+static void cs4281_ResumeFIFO(struct cs4281_state *s, struct cs4281_pipeline *pl)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_ResumeFIFO>
#385: FILE: sound/oss/cs4281/cs4281m.c:1154:
+static void cs4281_ResumeFIFO(struct cs4281_state *s, struct cs4281_pipeline *pl)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#394: FILE: sound/oss/cs4281/cs4281m.c:1162:
 }
+static void cs4281_SuspendDMAengine(struct cs4281_state *s, struct cs4281_pipeline *pl)

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_SuspendDMAengine>
#394: FILE: sound/oss/cs4281/cs4281m.c:1162:
+static void cs4281_SuspendDMAengine(struct cs4281_state *s, struct cs4281_pipeline *pl)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#403: FILE: sound/oss/cs4281/cs4281m.c:1174:
 }
+static void cs4281_ResumeDMAengine(struct cs4281_state *s, struct cs4281_pipeline *pl)

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_ResumeDMAengine>
#403: FILE: sound/oss/cs4281/cs4281m.c:1174:
+static void cs4281_ResumeDMAengine(struct cs4281_state *s, struct cs4281_pipeline *pl)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#439: FILE: sound/oss/cs4281/cs4281m.c:4115:
+static void __devinit cs4281_BuildFIFO(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#439: FILE: sound/oss/cs4281/cs4281m.c:4115:
+static void __devinit cs4281_BuildFIFO(

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_BuildFIFO>
#439: FILE: sound/oss/cs4281/cs4281m.c:4115:
+static void __devinit cs4281_BuildFIFO(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#448: FILE: sound/oss/cs4281/cs4281m.c:4162:
+static void __devinit cs4281_BuildDMAengine(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#448: FILE: sound/oss/cs4281/cs4281m.c:4162:
+static void __devinit cs4281_BuildDMAengine(

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_BuildDMAengine>
#448: FILE: sound/oss/cs4281/cs4281m.c:4162:
+static void __devinit cs4281_BuildDMAengine(

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#457: FILE: sound/oss/cs4281/cs4281m.c:4232:
+static void __devinit cs4281_InitPM(struct cs4281_state *s)

CHECK:CAMELCASE: Avoid CamelCase: <cs4281_InitPM>
#457: FILE: sound/oss/cs4281/cs4281m.c:4232:
+static void __devinit cs4281_InitPM(struct cs4281_state *s)

CHECK:CAMELCASE: Avoid CamelCase: <SetCaptureSPValues>
#569: FILE: sound/oss/cs46xx.c:971:
+static void SetCaptureSPValues(struct cs_card *card)

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#691: FILE: sound/oss/emu10k1/audio.c:1038:
+static struct vm_operations_struct emu10k1_mm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#831: FILE: sound/oss/emu10k1/main.c:312:
+static int emu10k1_info_proc (char *page, char **start, off_t off,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#881: FILE: sound/oss/emu10k1/cardmi.c:41:
 
+

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#882: FILE: sound/oss/emu10k1/cardmi.c:42:
+static int emu10k1_mpuin_callback(struct emu10k1_mpuin *card_mpuin, u32 msg, unsigned long data, u32 bytesvalid);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateInit>
#884: FILE: sound/oss/emu10k1/cardmi.c:44:
+static int sblive_miStateInit(struct emu10k1_mpuin *);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateEntry>
#885: FILE: sound/oss/emu10k1/cardmi.c:45:
+static int sblive_miStateEntry(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateParse>
#886: FILE: sound/oss/emu10k1/cardmi.c:46:
+static int sblive_miStateParse(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miState3Byte>
#887: FILE: sound/oss/emu10k1/cardmi.c:47:
+static int sblive_miState3Byte(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miState3ByteKey>
#888: FILE: sound/oss/emu10k1/cardmi.c:48:
+static int sblive_miState3ByteKey(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miState3ByteVel>
#889: FILE: sound/oss/emu10k1/cardmi.c:49:
+static int sblive_miState3ByteVel(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miState2Byte>
#890: FILE: sound/oss/emu10k1/cardmi.c:50:
+static int sblive_miState2Byte(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miState2ByteKey>
#891: FILE: sound/oss/emu10k1/cardmi.c:51:
+static int sblive_miState2ByteKey(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysCommon2>
#892: FILE: sound/oss/emu10k1/cardmi.c:52:
+static int sblive_miStateSysCommon2(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysCommon2Key>
#893: FILE: sound/oss/emu10k1/cardmi.c:53:
+static int sblive_miStateSysCommon2Key(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysCommon3>
#894: FILE: sound/oss/emu10k1/cardmi.c:54:
+static int sblive_miStateSysCommon3(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysCommon3Key>
#895: FILE: sound/oss/emu10k1/cardmi.c:55:
+static int sblive_miStateSysCommon3Key(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysCommon3Vel>
#896: FILE: sound/oss/emu10k1/cardmi.c:56:
+static int sblive_miStateSysCommon3Vel(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysExNorm>
#897: FILE: sound/oss/emu10k1/cardmi.c:57:
+static int sblive_miStateSysExNorm(struct emu10k1_mpuin *, u8);

CHECK:CAMELCASE: Avoid CamelCase: <sblive_miStateSysReal>
#898: FILE: sound/oss/emu10k1/cardmi.c:58:
+static int sblive_miStateSysReal(struct emu10k1_mpuin *, u8);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#900: FILE: sound/oss/emu10k1/cardmi.c:60:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#908: FILE: sound/oss/emu10k1/cardmi.c:92:
 
+

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#917: FILE: sound/oss/emu10k1/cardmi.c:293:
+static int emu10k1_mpuin_callback(struct emu10k1_mpuin *card_mpuin, u32 msg, unsigned long data, u32 bytesvalid)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1086: FILE: sound/oss/gus_wave.c:97:
+static int      iw_mode = 0;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1133: FILE: sound/oss/maestro.c:3669:
+static void cleanup_maestro(void) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1238: FILE: sound/oss/maestro3.c:2583:
 }
+static void free_dsp_suspendmem(struct m3_card *card)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1310: FILE: sound/oss/rme96xx.c:342:
+static inline void rme96xx_set_ctrl(rme96xx_info* s,int mask)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1310: FILE: sound/oss/rme96xx.c:342:
+static inline void rme96xx_set_ctrl(rme96xx_info* s,int mask)
                                                    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1319: FILE: sound/oss/rme96xx.c:350:
+static inline void rme96xx_unset_ctrl(rme96xx_info* s,int mask)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1319: FILE: sound/oss/rme96xx.c:350:
+static inline void rme96xx_unset_ctrl(rme96xx_info* s,int mask)
                                                      ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1328: FILE: sound/oss/rme96xx.c:358:
+static inline int rme96xx_get_sample_rate_status(rme96xx_info* s)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1337: FILE: sound/oss/rme96xx.c:369:
+static inline int rme96xx_get_sample_rate_ctrl(rme96xx_info* s)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1346: FILE: sound/oss/rme96xx.c:542:
+static inline int rme96xx_gethwptr(rme96xx_info* s,int exact)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1346: FILE: sound/oss/rme96xx.c:542:
+static inline int rme96xx_gethwptr(rme96xx_info* s,int exact)
                                                   ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1355: FILE: sound/oss/rme96xx.c:560:
+static inline void rme96xx_setlatency(rme96xx_info* s,int l)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1355: FILE: sound/oss/rme96xx.c:560:
+static inline void rme96xx_setlatency(rme96xx_info* s,int l)
                                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1364: FILE: sound/oss/rme96xx.c:629:
+static inline int rme96xx_getospace(struct dmabuf * dma, unsigned int hwp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1373: FILE: sound/oss/rme96xx.c:646:
+static inline int rme96xx_getispace(struct dmabuf * dma, unsigned int hwp)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1382: FILE: sound/oss/rme96xx.c:664:
+static inline int rme96xx_copyfromuser(struct dmabuf* dma,const char __user * buffer,int count,int hop)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1382: FILE: sound/oss/rme96xx.c:664:
+static inline int rme96xx_copyfromuser(struct dmabuf* dma,const char __user * buffer,int count,int hop)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1382: FILE: sound/oss/rme96xx.c:664:
+static inline int rme96xx_copyfromuser(struct dmabuf* dma,const char __user * buffer,int count,int hop)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1382: FILE: sound/oss/rme96xx.c:664:
+static inline int rme96xx_copyfromuser(struct dmabuf* dma,const char __user * buffer,int count,int hop)
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1382: FILE: sound/oss/rme96xx.c:664:
+static inline int rme96xx_copyfromuser(struct dmabuf* dma,const char __user * buffer,int count,int hop)
                                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1382: FILE: sound/oss/rme96xx.c:664:
+static inline int rme96xx_copyfromuser(struct dmabuf* dma,const char __user * buffer,int count,int hop)
                                                                                               ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1391: FILE: sound/oss/rme96xx.c:713:
+static inline int rme96xx_copytouser(struct dmabuf* dma,const char __user* buffer,int count,int hop)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1391: FILE: sound/oss/rme96xx.c:713:
+static inline int rme96xx_copytouser(struct dmabuf* dma,const char __user* buffer,int count,int hop)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: sound/oss/rme96xx.c:713:
+static inline int rme96xx_copytouser(struct dmabuf* dma,const char __user* buffer,int count,int hop)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: sound/oss/rme96xx.c:713:
+static inline int rme96xx_copytouser(struct dmabuf* dma,const char __user* buffer,int count,int hop)
                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: sound/oss/rme96xx.c:713:
+static inline int rme96xx_copytouser(struct dmabuf* dma,const char __user* buffer,int count,int hop)
                                                                                            ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1400: FILE: sound/oss/rme96xx.c:796:
+static void* busmaster_malloc(int size) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1400: FILE: sound/oss/rme96xx.c:796:
+static void* busmaster_malloc(int size) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1409: FILE: sound/oss/rme96xx.c:822:
+static void busmaster_free(void* ptr,int size) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1409: FILE: sound/oss/rme96xx.c:822:
+static void busmaster_free(void* ptr,int size) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1409: FILE: sound/oss/rme96xx.c:822:
+static void busmaster_free(void* ptr,int size) {
                                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1418: FILE: sound/oss/rme96xx.c:869:
+static int rme96xx_init(rme96xx_info* s)

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1429: FILE: sound/oss/sb_card.c:52:
+static struct sb_card_config *legacy = NULL;

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#1454: FILE: sound/oss/sb_common.c:84:
+static sb_devc *last_sb;		/* Last sb loaded */
                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1521: FILE: sound/oss/sb_ess.c:1699:
+static int es_rec_set_recmask(sb_devc * devc, int mask)

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#1555: FILE: sound/oss/via82cxxx_audio.c:2177:
+static struct vm_operations_struct via_mm_ops = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1572: FILE: sound/oss/wavfront.c:161:
+^I^I          whatever state it is when the driver is loaded.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1572: FILE: sound/oss/wavfront.c:161:
+static int fx_raw = 1; /* if this is zero, we'll leave the FX processor in
+		          whatever state it is when the driver is loaded.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: sound/oss/wavfront.c:162:
+^I^I          The default is to download the microprogram and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: sound/oss/wavfront.c:163:
+^I^I          associated coefficients to set it up for "default"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1575: FILE: sound/oss/wavfront.c:164:
+^I^I          operation, whatever that means.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1597: FILE: sound/oss/wavfront.c:176:
+^I^I^I^I^I            version of the WaveFront OS$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1597: FILE: sound/oss/wavfront.c:176:
+static char *ospath = "/etc/sound/wavefront.os"; /* where to find a processed
+					            version of the WaveFront OS

ERROR:CODE_INDENT: code indent should use tabs where possible
#1598: FILE: sound/oss/wavfront.c:177:
+^I^I^I^I^I          */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1601: FILE: sound/oss/wavfront.c:180:
+static int wait_polls = 2000; /* This is a number of tries we poll the
+				 status register before resorting to sleeping.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1604: FILE: sound/oss/wavfront.c:183:
+^I^I^I         sleep we wait up to 2.4ms in a loop.$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1607: FILE: sound/oss/wavfront.c:186:
+static int sleep_length = HZ/100; /* This says how long we're going to
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1608: FILE: sound/oss/wavfront.c:187:
+static int sleep_length = HZ/100; /* This says how long we're going to
+				     sleep between polls.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1609: FILE: sound/oss/wavfront.c:188:
+^I^I^I             10ms sounds reasonable for fast response.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1610: FILE: sound/oss/wavfront.c:189:
+^I^I^I          */$

WARNING:TYPO_SPELLING: 'hundreths' may be misspelled - perhaps 'hundredths'?
#1620: FILE: sound/oss/wavfront.c:193:
+static int reset_time = 2; /* hundreths of a second we wait after a HW reset for
                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1632: FILE: sound/oss/wavfront.c:198:
+^I^I^I             checks on-board RAM.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1632: FILE: sound/oss/wavfront.c:198:
+static int ramcheck_time = 20;    /* time in seconds to wait while ROM code
+			             checks on-board RAM.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1633: FILE: sound/oss/wavfront.c:199:
+^I^I^I          */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1636: FILE: sound/oss/wavfront.c:202:
+^I^I^I        start running.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1636: FILE: sound/oss/wavfront.c:202:
+static int osrun_time = 10;  /* time in seconds we wait for the OS to
+			        start running.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 47 errors, 17 warnings, 34 checks, 1350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
