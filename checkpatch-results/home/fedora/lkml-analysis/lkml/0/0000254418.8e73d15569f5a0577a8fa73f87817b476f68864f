WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The following small patch (applies to BK head) addresses issues relevant for transparent NIC failover (especially in case of NFS). It allows to configure on a per device basis via sysctl an IP address (Source Virtual IP Address - Source VIPA) that is set as IP source address for all connections for which no bind has been applied. ?To allow for NIC failover one then just needs:

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: include/linux/inetdevice.h:31:
+        __u32   source_vipa;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: include/linux/inetdevice.h:31:
+        __u32   source_vipa;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: include/linux/sysctl.h:397:
+       NET_IPV4_CONF_SOURCE_VIPA = 20$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: net/ipv4/devinet.c:779:
+        u32 source_vipa = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: net/ipv4/devinet.c:779:
+        u32 source_vipa = 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: net/ipv4/devinet.c:837:
+	/* Set Source Virtual IP Address (Source VIPA) if one is
+	   configured for the device and the device has a natural

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: net/ipv4/devinet.c:838:
+	   IP */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#179: FILE: net/ipv4/devinet.c:839:
+	if (addr != 0 && source_vipa != 0) {
+		addr = source_vipa;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <byteNo>
#199: FILE: net/ipv4/devinet.c:1191:
+	int byteNo;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: net/ipv4/devinet.c:1192:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#201: FILE: net/ipv4/devinet.c:1193:
+	*((int*)bytes) = 0;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#205: FILE: net/ipv4/devinet.c:1197:
+		value = simple_strtoul( startp, &endp, 10 );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#205: FILE: net/ipv4/devinet.c:1197:
+		value = simple_strtoul( startp, &endp, 10 );

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#205: FILE: net/ipv4/devinet.c:1197:
+		value = simple_strtoul( startp, &endp, 10 );

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space prohibited after that open parenthesis '('
#206: FILE: net/ipv4/devinet.c:1198:
+		if ( value > 0xFF ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#206: FILE: net/ipv4/devinet.c:1198:
+		if ( value > 0xFF ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#206: FILE: net/ipv4/devinet.c:1198:
+		if ( value > 0xFF ) {
+			return -EINVAL;
+		}

CHECK:SPACING: No space is necessary after a cast
#209: FILE: net/ipv4/devinet.c:1201:
+		bytes[byteNo] = (char) value;

ERROR:SPACING: space prohibited after that open parenthesis '('
#210: FILE: net/ipv4/devinet.c:1202:
+		if ( *endp == 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#210: FILE: net/ipv4/devinet.c:1202:
+		if ( *endp == 0 ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#214: FILE: net/ipv4/devinet.c:1206:
+		else if ( *endp == '.' ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#214: FILE: net/ipv4/devinet.c:1206:
+		else if ( *endp == '.' ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#214: FILE: net/ipv4/devinet.c:1206:
+		}
+		else if ( *endp == '.' ) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#217: FILE: net/ipv4/devinet.c:1209:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#217: FILE: net/ipv4/devinet.c:1209:
+		else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: net/ipv4/devinet.c:1217:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#230: FILE: net/ipv4/devinet.c:1222:
+ * @filp: the file structure
     ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: net/ipv4/devinet.c:1226:
+ * Reads/writes a string representing an IP address from/to the user buffer. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: net/ipv4/devinet.c:1227:
+ * It converts the string to an integer value through the use of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: net/ipv4/devinet.c:1228:
+ * ipv4_inet_addr. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: net/ipv4/devinet.c:1238:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: net/ipv4/devinet.c:1239:
+ipv4_doinetaddrstring_and_flush(ctl_table *table, int write, $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#248: FILE: net/ipv4/devinet.c:1240:
+				struct file *filp,
 				             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: net/ipv4/devinet.c:1241:
+^I^I^I^Ivoid __user *buffer, size_t *lenp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: net/ipv4/devinet.c:1248:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#257: FILE: net/ipv4/devinet.c:1249:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: net/ipv4/devinet.c:1255:
+^I$

CHECK:SPACING: No space is necessary after a cast
#265: FILE: net/ipv4/devinet.c:1257:
+		kerneltempbuffer = (char*) kmalloc(table->maxlen, GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#265: FILE: net/ipv4/devinet.c:1257:
+		kerneltempbuffer = (char*) kmalloc(table->maxlen, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#265: FILE: net/ipv4/devinet.c:1257:
+		kerneltempbuffer = (char*) kmalloc(table->maxlen, GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#266: FILE: net/ipv4/devinet.c:1258:
+		if (!kerneltempbuffer) {
+			return -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: net/ipv4/devinet.c:1261:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: net/ipv4/devinet.c:1263:
+^I^Iif(strncpy_from_user(kerneltempbuffer, buffer, $

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: net/ipv4/devinet.c:1263:
+		if(strncpy_from_user(kerneltempbuffer, buffer, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: net/ipv4/devinet.c:1275:
+^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: net/ipv4/devinet.c:1279:
+^I^Iif ( nullterminationpos == table->maxlen ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#287: FILE: net/ipv4/devinet.c:1279:
+		if ( nullterminationpos == table->maxlen ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#287: FILE: net/ipv4/devinet.c:1279:
+		if ( nullterminationpos == table->maxlen ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: net/ipv4/devinet.c:1282:
+^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#293: FILE: net/ipv4/devinet.c:1285:
+		if ( retval != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#293: FILE: net/ipv4/devinet.c:1285:
+		if ( retval != 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#293: FILE: net/ipv4/devinet.c:1285:
+		if ( retval != 0 ) {
+			goto cleanup;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: net/ipv4/devinet.c:1292:
+^I^Iprintk( KERN_DEBUG "%s: new IP written: %s(%u)", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: net/ipv4/devinet.c:1292:
+		printk( KERN_DEBUG "%s: new IP written: %s(%u)", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: net/ipv4/devinet.c:1292:
+		printk( KERN_DEBUG "%s: new IP written: %s(%u)", 

ERROR:SPACING: space prohibited after that open parenthesis '('
#300: FILE: net/ipv4/devinet.c:1292:
+		printk( KERN_DEBUG "%s: new IP written: %s(%u)", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: net/ipv4/devinet.c:1293:
+^I^I^I__FUNCTION__, kerneltempbuffer, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: net/ipv4/devinet.c:1293:
+		printk( KERN_DEBUG "%s: new IP written: %s(%u)", 
+			__FUNCTION__, kerneltempbuffer, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#301: FILE: net/ipv4/devinet.c:1293:
+			__FUNCTION__, kerneltempbuffer, 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#302: FILE: net/ipv4/devinet.c:1294:
+			*((__u32*)table->data) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#302: FILE: net/ipv4/devinet.c:1294:
+			*((__u32*)table->data) );

WARNING:INDENTED_LABEL: labels should not be indented
#303: FILE: net/ipv4/devinet.c:1295:
+	cleanup:

ERROR:SPACING: space prohibited after that open parenthesis '('
#304: FILE: net/ipv4/devinet.c:1296:
+		kfree( kerneltempbuffer );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#304: FILE: net/ipv4/devinet.c:1296:
+		kfree( kerneltempbuffer );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: net/ipv4/devinet.c:1302:
+^I^Isprintf( inetaddrstr, "%u.%u.%u.%u", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#310: FILE: net/ipv4/devinet.c:1302:
+		size_t len;
+		sprintf( inetaddrstr, "%u.%u.%u.%u", 

ERROR:SPACING: space prohibited after that open parenthesis '('
#310: FILE: net/ipv4/devinet.c:1302:
+		sprintf( inetaddrstr, "%u.%u.%u.%u", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: net/ipv4/devinet.c:1303:
+		sprintf( inetaddrstr, "%u.%u.%u.%u", 
+			 *((unsigned char*)table->data),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#311: FILE: net/ipv4/devinet.c:1303:
+			 *((unsigned char*)table->data),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#312: FILE: net/ipv4/devinet.c:1304:
+			 *((unsigned char*)table->data+1),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#312: FILE: net/ipv4/devinet.c:1304:
+			 *((unsigned char*)table->data+1),
 			                              ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#313: FILE: net/ipv4/devinet.c:1305:
+			 *((unsigned char*)table->data+2),

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: net/ipv4/devinet.c:1305:
+			 *((unsigned char*)table->data+2),
 			                              ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#314: FILE: net/ipv4/devinet.c:1306:
+			 *((unsigned char*)table->data+3) );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#314: FILE: net/ipv4/devinet.c:1306:
+			 *((unsigned char*)table->data+3) );
 			                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#314: FILE: net/ipv4/devinet.c:1306:
+			 *((unsigned char*)table->data+3) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#315: FILE: net/ipv4/devinet.c:1307:
+		len = strlen( inetaddrstr );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#315: FILE: net/ipv4/devinet.c:1307:
+		len = strlen( inetaddrstr );

ERROR:SPACING: space prohibited after that open parenthesis '('
#316: FILE: net/ipv4/devinet.c:1308:
+		if ( len > table->maxlen)

ERROR:SPACING: space required before the open parenthesis '('
#321: FILE: net/ipv4/devinet.c:1313:
+			if(copy_to_user(buffer, inetaddrstr, len)) {

CHECK:SPACING: No space is necessary after a cast
#326: FILE: net/ipv4/devinet.c:1318:
+			if(put_user('\n', ((char __user *) buffer) + len)) {

ERROR:SPACING: space required before the open parenthesis '('
#326: FILE: net/ipv4/devinet.c:1318:
+			if(put_user('\n', ((char __user *) buffer) + len)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: net/ipv4/devinet.c:1393:
+        ctl_table               devinet_vars[21];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: net/ipv4/devinet.c:1393:
+        ctl_table               devinet_vars[21];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: net/ipv4/devinet.c:1395:
+        ctl_table               devinet_vars[20];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: net/ipv4/devinet.c:1395:
+        ctl_table               devinet_vars[20];$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254418.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 21 warnings, 12 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254418.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
