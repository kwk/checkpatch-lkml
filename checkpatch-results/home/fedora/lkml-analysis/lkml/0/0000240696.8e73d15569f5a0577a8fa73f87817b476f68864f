WARNING:TYPO_SPELLING: 'relevent' may be misspelled - perhaps 'relevant'?
#36: 
to log relevent data at the probe point. More information on kprobes
       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#86: 
diff -Naurp temp/linux-2.6.9-rc4/arch/i386/kernel/kprobes.c linux-2.6.9-rc4/arch/i386/kernel/kprobes.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: arch/ppc64/kernel/kprobes.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#127: FILE: arch/ppc64/kernel/kprobes.c:3:
+ *  arch/ppc64/kernel/kprobes.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: arch/ppc64/kernel/kprobes.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: arch/ppc64/kernel/kprobes.c:17:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#159: FILE: arch/ppc64/kernel/kprobes.c:35:
+#include <asm/kdebug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#170: FILE: arch/ppc64/kernel/kprobes.c:46:
+extern int emulate_step(struct pt_regs *regs, unsigned int instr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/ppc64/kernel/kprobes.c:52:
+^I^I/* cannot put bp on RFID/MTMSRD */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#209: FILE: arch/ppc64/kernel/kprobes.c:85:
+		/* We *are* holding lock here, so this is safe.
+		   Disarm the probe we just hit, and ignore it. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#209: FILE: arch/ppc64/kernel/kprobes.c:85:
+		   Disarm the probe we just hit, and ignore it. */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#216: FILE: arch/ppc64/kernel/kprobes.c:92:
+			if (p->break_handler && p->break_handler(p, regs)) {
+				goto ss_probe;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: arch/ppc64/kernel/kprobes.c:150:
+^Iif (ret == 0) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#309: FILE: arch/ppc64/kernel/kprobes.c:185:
+	if (current_kprobe->fault_handler
+	    && current_kprobe->fault_handler(current_kprobe, regs, trapnr))

ERROR:SPACING: space prohibited after that '&&' (ctx:ExW)
#309: FILE: arch/ppc64/kernel/kprobes.c:185:
+	    && current_kprobe->fault_handler(current_kprobe, regs, trapnr))
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: arch/ppc64/kernel/kprobes.c:205:
+	struct die_args *args = (struct die_args *)data;
+	switch (val) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: arch/ppc64/kernel/kprobes.c:231:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: arch/ppc64/kernel/kprobes.c:253:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: arch/ppc64/kernel/kprobes.c:260:
+} $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#402: FILE: arch/ppc64/kernel/traps.c:32:
+#include <asm/kdebug.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: arch/ppc64/kernel/traps.c:306:
+	if (notify_die(DIE_BPT, "iabr_match", regs, 5,
+					5, SIGTRAP) == NOTIFY_STOP)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: arch/ppc64/kernel/traps.c:319:
+	if (notify_die(DIE_SSTEP, "single_step", regs, 5,
+					5, SIGTRAP) == NOTIFY_STOP)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: arch/ppc64/kernel/traps.c:495:
+		if (notify_die(DIE_BPT, "breakpoint", regs, 5,
+					5, SIGTRAP) == NOTIFY_STOP)

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#464: FILE: arch/ppc64/mm/fault.c:39:
+#include <asm/kdebug.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: arch/ppc64/mm/fault.c:101:
+		if (notify_die(DIE_PAGE_FAULT, "page_fault", regs, error_code,
+					11, SIGSEGV) == NOTIFY_STOP)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: arch/ppc64/mm/fault.c:113:
+		if (notify_die(DIE_BPT, "dabr_match", regs, error_code,
+					11, SIGSEGV) == NOTIFY_STOP)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#496: FILE: arch/ppc64/xmon/xmon.c:135:
+int emulate_step(struct pt_regs *regs, unsigned int instr);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#532: FILE: include/asm-i386/kprobes.h:41:
+#define JPROBE_ENTRY(pentry)	(kprobe_opcode_t *)pentry

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#541: FILE: include/asm-ppc64/kdebug.h:1:
+#ifndef _PPC64_KDEBUG_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: include/asm-ppc64/kdebug.h:18:
+/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#559: FILE: include/asm-ppc64/kdebug.h:19:
+/* 
+   Note - you should never unregister because that can race with NMIs.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: include/asm-ppc64/kdebug.h:20:
+   If you really want to do it first unregister - then synchronize_kernel - $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#577: FILE: include/asm-ppc64/kdebug.h:37:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: include/asm-ppc64/kdebug.h:37:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: include/asm-ppc64/kdebug.h:37:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: include/asm-ppc64/kdebug.h:37:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#577: FILE: include/asm-ppc64/kdebug.h:37:
+static inline int notify_die(enum die_val val,char *str,struct pt_regs *regs,long err,int trap, int sig)
                                                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#579: FILE: include/asm-ppc64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#579: FILE: include/asm-ppc64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#579: FILE: include/asm-ppc64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#579: FILE: include/asm-ppc64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#579: FILE: include/asm-ppc64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#579: FILE: include/asm-ppc64/kdebug.h:39:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
 	                                                                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: include/asm-ppc64/kdebug.h:40:
+	struct die_args args = { .regs=regs, .str=str, .err=err, .trapnr=trap,.signr=sig };
+	return notifier_call_chain(&ppc64_die_chain, val, &args);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#588: FILE: include/asm-ppc64/kprobes.h:1:
+#ifndef _ASM_KPROBES_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#592: FILE: include/asm-ppc64/kprobes.h:5:
+ *  include/asm-ppc64/kprobes.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#605: FILE: include/asm-ppc64/kprobes.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#606: FILE: include/asm-ppc64/kprobes.h:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#621: FILE: include/asm-ppc64/kprobes.h:34:
+typedef unsigned int kprobe_opcode_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#628: FILE: include/asm-ppc64/kprobes.h:41:
+#define JPROBE_ENTRY(pentry)	(kprobe_opcode_t *)((func_descr_t *)pentry)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#631: FILE: include/asm-ppc64/kprobes.h:44:
+extern int kprobe_exceptions_notify(struct notifier_block *self,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: include/linux/kprobes.h:97:
+extern int arch_prepare_kprobe(struct kprobe *p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: kernel/kprobes.c:30:
+ * 2004-Oct^IAnanth N Mavinakayanahalli <ananth@in.ibm.com> $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240696.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 17 warnings, 11 checks, 539 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240696.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
