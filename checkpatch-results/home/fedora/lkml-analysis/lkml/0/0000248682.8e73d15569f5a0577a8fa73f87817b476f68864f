WARNING:TYPO_SPELLING: 'tyes' may be misspelled - perhaps 'types'?
#41: 
> > more uniform with the dir and nod tyes.
                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> Comments already given on klibc list by others, but repeated for lkml readers.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: usr/gen_init_cpio.c:95:
+static int cpio_mkdir(const char *name, unsigned int mode,
 		       uid_t uid, gid_t gid)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#121: FILE: usr/gen_init_cpio.c:129:
+	if (4 != sscanf(line, "%" str(PATH_MAX) "s %o %d %d", name, &mode, &uid, &gid)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: usr/gen_init_cpio.c:139:
+static int cpio_mknod(const char *name, unsigned int mode,
+		       uid_t uid, gid_t gid, char dev_type,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#153: FILE: usr/gen_init_cpio.c:182:
+	if (7 != sscanf(line, "%" str(PATH_MAX) "s %o %d %d %c %u %u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: usr/gen_init_cpio.c:183:
+	if (7 != sscanf(line, "%" str(PATH_MAX) "s %o %d %d %c %u %u",
+			 name, &mode, &uid, &gid, &dev_type, &maj, &min)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: usr/gen_init_cpio.c:194:
+static int cpio_mkfile(const char *name, const char *location,
 			unsigned int mode, uid_t uid, gid_t gid)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: usr/gen_init_cpio.c:206:
+	retval = stat (location, &buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: usr/gen_init_cpio.c:208:
+		fprintf (stderr, "File %s could not be located\n", location);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: usr/gen_init_cpio.c:212:
+	file = open (location, O_RDONLY);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: usr/gen_init_cpio.c:214:
+		fprintf (stderr, "File %s could not be opened for reading\n", location);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: usr/gen_init_cpio.c:226:
+		fprintf (stderr, "Can not read %s file\n", location);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#217: FILE: usr/gen_init_cpio.c:244:
+		(unsigned)strlen(name) + 1,/* namesize */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#239: FILE: usr/gen_init_cpio.c:257:
+	if (filebuf) free(filebuf);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#240: FILE: usr/gen_init_cpio.c:258:
+	if (file >= 0) close(file);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#253: FILE: usr/gen_init_cpio.c:271:
+	if (5 != sscanf(line, "%" str(PATH_MAX) "s %" str(PATH_MAX) "s %o %d %d", name, location, &mode, &uid, &gid)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#253: FILE: usr/gen_init_cpio.c:271:
+	if (5 != sscanf(line, "%" str(PATH_MAX) "s %" str(PATH_MAX) "s %o %d %d", name, location, &mode, &uid, &gid)) {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#271: FILE: usr/gen_init_cpio.c:289:
+		"file <name> <location> <mode> <uid> <gid> \n"

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#324: FILE: usr/gen_init_cpio.c:338:
+	if (2 != argc) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#330: FILE: usr/gen_init_cpio.c:343:
+	if (! (cpio_list = fopen(argv[1], "r"))) {
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#330: FILE: usr/gen_init_cpio.c:343:
+	if (! (cpio_list = fopen(argv[1], "r"))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#353: FILE: usr/gen_init_cpio.c:361:
+		if (! (type = strtok(line, " \t"))) {
 		    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#353: FILE: usr/gen_init_cpio.c:361:
+		if (! (type = strtok(line, " \t"))) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#370: FILE: usr/gen_init_cpio.c:378:
+		if (! (args = strtok(NULL, "\n"))) {
 		    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#370: FILE: usr/gen_init_cpio.c:378:
+		if (! (args = strtok(NULL, "\n"))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#379: FILE: usr/gen_init_cpio.c:387:
+			int rc;
+			if (! strcmp(line, file_type_table[type_idx].type)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#379: FILE: usr/gen_init_cpio.c:387:
+			if (! strcmp(line, file_type_table[type_idx].type)) {
 			    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#380: FILE: usr/gen_init_cpio.c:388:
+				if ((rc = file_type_table[type_idx].handler(args))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#388: FILE: usr/gen_init_cpio.c:396:
+		if (NULL == file_type_table[type_idx].type) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248682.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 16 warnings, 4 checks, 346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248682.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
