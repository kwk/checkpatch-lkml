WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#75: 
>         +           (clock->clock_get != do_posix_clock_monotonic_gettime)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/i386/kernel/entry.S:841:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: arch/i386/kernel/entry.S:842:
+ $

ERROR:SPACING: space prohibited after that open parenthesis '('
#202: FILE: include/asm-generic/siginfo.h:48:
+			char _pad[sizeof( __ARCH_SI_UID_T) - sizeof(int)];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#232: FILE: include/asm-generic/siginfo.h:243:
+		 int _tid;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#256: FILE: include/asm-i386/posix_types.h:25:
+typedef int		__kernel_timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#257: FILE: include/asm-i386/posix_types.h:26:
+typedef int		__kernel_clockid_t;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: include/asm-i386/unistd.h:268:
+#define __NR_timer_settime	(__NR_timer_create+1)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: include/asm-i386/unistd.h:269:
+#define __NR_timer_gettime	(__NR_timer_create+2)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: include/asm-i386/unistd.h:270:
+#define __NR_timer_getoverrun	(__NR_timer_create+3)
                              	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#283: FILE: include/asm-i386/unistd.h:271:
+#define __NR_timer_delete	(__NR_timer_create+4)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#284: FILE: include/asm-i386/unistd.h:272:
+#define __NR_clock_settime	(__NR_timer_create+5)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#285: FILE: include/asm-i386/unistd.h:273:
+#define __NR_clock_gettime	(__NR_timer_create+6)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#286: FILE: include/asm-i386/unistd.h:274:
+#define __NR_clock_getres	(__NR_timer_create+7)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#287: FILE: include/asm-i386/unistd.h:275:
+#define __NR_clock_nanosleep	(__NR_timer_create+8)
                             	                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#295: FILE: include/linux/id_reuse.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: include/linux/id_reuse.h:3:
+ * $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#307: FILE: include/linux/id_reuse.h:13:
+#define IDR_MASK ((1 << IDR_BITS)-1)
                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#308: FILE: include/linux/id_reuse.h:14:
+#define IDR_FULL ((int)((1ULL << (1 << IDR_BITS))-1))
                                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#315: FILE: include/linux/id_reuse.h:21:
+	struct idr_layer	*ary[1<<IDR_BITS];
 	                	      ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#323: FILE: include/linux/id_reuse.h:29:
+	spinlock_t      id_slock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#375: FILE: include/linux/id_reuse.h:81:
+	if ((unsigned)id >= (1 << n)) { // unsigned catches <=0 input

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#377: FILE: include/linux/id_reuse.h:83:
+		return(NULL);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#387: FILE: include/linux/id_reuse.h:93:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#399: FILE: include/linux/id_reuse.h:105:
+	if ((unsigned)id >= (1 << n)) { // unsigned catches <=0 input

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#400: FILE: include/linux/id_reuse.h:106:
+		return(NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: include/linux/id_reuse.h:116:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#429: FILE: include/linux/posix-timers.h:1:
+#ifndef _linux_POSIX_TIMERS_H

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#434: FILE: include/linux/posix-timers.h:6:
+	int (*clock_set) (struct timespec * tp);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#434: FILE: include/linux/posix-timers.h:6:
+	int (*clock_set) (struct timespec * tp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#435: FILE: include/linux/posix-timers.h:7:
+	int (*clock_get) (struct timespec * tp);

WARNING:SPACING: Unnecessary space before function pointer arguments
#435: FILE: include/linux/posix-timers.h:7:
+	int (*clock_get) (struct timespec * tp);

WARNING:SPACING: Unnecessary space before function pointer arguments
#436: FILE: include/linux/posix-timers.h:8:
+	int (*nsleep) (int flags,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#437: FILE: include/linux/posix-timers.h:9:
+		       struct timespec * new_setting,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#438: FILE: include/linux/posix-timers.h:10:
+		       struct itimerspec * old_setting);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#439: FILE: include/linux/posix-timers.h:11:
+	int (*timer_set) (struct k_itimer * timr, int flags,

WARNING:SPACING: Unnecessary space before function pointer arguments
#439: FILE: include/linux/posix-timers.h:11:
+	int (*timer_set) (struct k_itimer * timr, int flags,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#440: FILE: include/linux/posix-timers.h:12:
+			  struct itimerspec * new_setting,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#441: FILE: include/linux/posix-timers.h:13:
+			  struct itimerspec * old_setting);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: include/linux/posix-timers.h:14:
+	int (*timer_del) (struct k_itimer * timr);

WARNING:SPACING: Unnecessary space before function pointer arguments
#442: FILE: include/linux/posix-timers.h:14:
+	int (*timer_del) (struct k_itimer * timr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#443: FILE: include/linux/posix-timers.h:15:
+	void (*timer_get) (struct k_itimer * timr,

WARNING:SPACING: Unnecessary space before function pointer arguments
#443: FILE: include/linux/posix-timers.h:15:
+	void (*timer_get) (struct k_itimer * timr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: include/linux/posix-timers.h:16:
+			   struct itimerspec * cur_setting);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#446: FILE: include/linux/posix-timers.h:18:
+};
+struct now_struct {

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#450: FILE: include/linux/posix-timers.h:22:
+#define posix_get_now(now) (now)->jiffies = jiffies;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#450: FILE: include/linux/posix-timers.h:22:
+#define posix_get_now(now) (now)->jiffies = jiffies;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: include/linux/posix-timers.h:24:
+                      time_before((timer)->expires, (now)->jiffies)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: include/linux/posix-timers.h:24:
+                      time_before((timer)->expires, (now)->jiffies)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'timr' - possible side-effects?
#454: FILE: include/linux/posix-timers.h:26:
+#define posix_bump_timer(timr) do { \
+                        (timr)->it_timer.expires += (timr)->it_incr; \
+                        (timr)->it_overrun++;               \
+                       }while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: include/linux/posix-timers.h:27:
+                        (timr)->it_timer.expires += (timr)->it_incr; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: include/linux/posix-timers.h:27:
+                        (timr)->it_timer.expires += (timr)->it_incr; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: include/linux/posix-timers.h:28:
+                        (timr)->it_overrun++;               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: include/linux/posix-timers.h:28:
+                        (timr)->it_overrun++;               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: include/linux/posix-timers.h:29:
+                       }while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: include/linux/posix-timers.h:29:
+                       }while (0)$

ERROR:SPACING: space required after that close brace '}'
#457: FILE: include/linux/posix-timers.h:29:
+                       }while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: include/linux/sched.h:296:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#500: FILE: include/linux/sched.h:600:
+extern void exit_itimers(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#500: FILE: include/linux/sched.h:600:
+extern void exit_itimers(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#557: FILE: include/linux/time.h:154:
+extern int do_sys_settimeofday(struct timeval *tv, struct timezone *tz);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#558: FILE: include/linux/time.h:155:
+extern void clock_was_set(void); // call when ever the clock is set

CHECK:LINE_SPACING: Please don't use multiple blank lines
#567: FILE: include/linux/time.h:184:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#595: FILE: include/linux/types.h:26:
+typedef __kernel_timer_t	timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#596: FILE: include/linux/types.h:27:
+typedef __kernel_clockid_t	clockid_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#620: FILE: kernel/exit.c:414:
 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#647: FILE: kernel/id_reuse.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: kernel/id_reuse.c:8:
+ * Small id to pointer translation service.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: kernel/id_reuse.c:10:
+ * It uses a radix tree like structure as a sparse array indexed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: kernel/id_reuse.c:12:
+ * an new id quick.  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#664: FILE: kernel/id_reuse.c:18:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#688: FILE: kernel/id_reuse.c:42:
+	if (!(p = id_free))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#689: FILE: kernel/id_reuse.c:43:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#693: FILE: kernel/id_reuse.c:47:
+	return(p);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#715: FILE: kernel/id_reuse.c:69:
+		return(n);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#719: FILE: kernel/id_reuse.c:73:
+	v = sub_alloc(p->ary[n], shift-IDR_BITS, ptr);
 	                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: kernel/id_reuse.c:81:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#735: FILE: kernel/id_reuse.c:89:
+	while (id_free_cnt < n+1) {
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#737: FILE: kernel/id_reuse.c:91:
+		struct idr_layer *new;
+		idr_unlock(idp);

ERROR:SPACING: space required before the open parenthesis '('
#739: FILE: kernel/id_reuse.c:93:
+		if(new == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new"
#739: FILE: kernel/id_reuse.c:93:
+		if(new == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: kernel/id_reuse.c:100:
+^I * Add a new layer if the array is full $

ERROR:SPACING: space required before the open brace '{'
#748: FILE: kernel/id_reuse.c:102:
+	if (idp->top->bitmap == IDR_FULL){

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#756: FILE: kernel/id_reuse.c:110:
+	v = sub_alloc(idp->top, n-IDR_BITS, ptr);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#760: FILE: kernel/id_reuse.c:114:
+	return(v+1);
 	        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#762: FILE: kernel/id_reuse.c:116:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#770: FILE: kernel/id_reuse.c:124:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#772: FILE: kernel/id_reuse.c:126:
+		if (sub_remove(p->ary[n], shift-IDR_BITS, id)) {
 		                               ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#777: FILE: kernel/id_reuse.c:131:
+		return (0);      // for now, prune only at 0

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#778: FILE: kernel/id_reuse.c:132:
+		return (0);      // for now, prune only at 0
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#781: FILE: kernel/id_reuse.c:135:
+^I} $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#782: FILE: kernel/id_reuse.c:136:
+	return (! p->bitmap);
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#793: FILE: kernel/id_reuse.c:147:
+	sub_remove(idp->top, (idp->layers-1)*IDR_BITS, id);
 	                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#793: FILE: kernel/id_reuse.c:147:
+	sub_remove(idp->top, (idp->layers-1)*IDR_BITS, id);
 	                                    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#794: FILE: kernel/id_reuse.c:148:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: kernel/id_reuse.c:153:
+^I * This is not too bad as we do prune the leaf nodes. So for a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: kernel/id_reuse.c:154:
+^I * three layer tree we will only be left with 33 nodes when $

ERROR:SPACING: space required before the open brace '{'
#803: FILE: kernel/id_reuse.c:157:
+	if(idp->top->bitmap == 1 && idp->layers > 1 ){  // We can drop a layer

ERROR:SPACING: space prohibited before that close parenthesis ')'
#803: FILE: kernel/id_reuse.c:157:
+	if(idp->top->bitmap == 1 && idp->layers > 1 ){  // We can drop a layer

ERROR:SPACING: space required before the open parenthesis '('
#803: FILE: kernel/id_reuse.c:157:
+	if(idp->top->bitmap == 1 && idp->layers > 1 ){  // We can drop a layer

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: kernel/id_reuse.c:166:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#812: FILE: kernel/id_reuse.c:166:
+	if (id_free_cnt >= IDR_FREE_MAX) {
+		

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: kernel/id_reuse.c:178:
+^I^Iidr_layer_cache = kmem_cache_create("idr_layer_cache", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: kernel/id_reuse.c:179:
+		idr_layer_cache = kmem_cache_create("idr_layer_cache", 
+			sizeof(struct idr_layer), 0, 0, 0, 0);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#840: FILE: kernel/id_reuse.c:194:
+__initcall(init_id_cache);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#845: FILE: kernel/posix-timers.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: kernel/posix-timers.c:4:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: kernel/posix-timers.c:9:
+/* These are all the functions necessary to implement $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#863: FILE: kernel/posix-timers.c:19:
+#include <asm/uaccess.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#874: FILE: kernel/posix-timers.c:30:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
+		       u64 result = dividend;		\
+		       *remainder = do_div(result,divisor); \
+		       result; })

WARNING:TABSTOP: Statements should start on a tabstop
#875: FILE: kernel/posix-timers.c:31:
+		       u64 result = dividend;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#876: FILE: kernel/posix-timers.c:32:
+		       *remainder = do_div(result,divisor); \
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: kernel/posix-timers.c:43:
+ *int idr_get_new(struct idr *idp, void *ptr);       to get a new id and $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#900: FILE: kernel/posix-timers.c:56:
+/*
+   * Lets keep our timers in a slab cache :-)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#901: FILE: kernel/posix-timers.c:57:
+   * Lets keep our timers in a slab cache :-)
+ */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tmr' may be better as '(tmr)' to avoid precedence issues
#912: FILE: kernel/posix-timers.c:68:
+#define timer_active(tmr) (tmr->it_timer.entry.prev != (void *)TIMER_INACTIVE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tmr' may be better as '(tmr)' to avoid precedence issues
#913: FILE: kernel/posix-timers.c:69:
+#define set_timer_inactive(tmr) tmr->it_timer.entry.prev = (void *)TIMER_INACTIVE

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: kernel/posix-timers.c:77:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: kernel/posix-timers.c:85:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: kernel/posix-timers.c:101:
+ $

WARNING:TYPO_SPELLING: 'underlaying' may be misspelled - perhaps 'underlying'?
#949: FILE: kernel/posix-timers.c:105:
+ *	    resolution may depend on the underlaying clock hardware and
   	                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#963: FILE: kernel/posix-timers.c:119:
+ *^I    fields are not modified by timer code. $

WARNING:TYPO_SPELLING: 'ignors' may be misspelled - perhaps 'ignores'?
#967: FILE: kernel/posix-timers.c:123:
+ *          there, but the code ignors it.
                                 ^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                        ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	                       ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                       ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	 ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
                                              	             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'clock_fun' - possible side-effects?
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'clock_fun' may be better as '(clock_fun)' to avoid precedence issues
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'parms' - possible side-effects?
#979: FILE: kernel/posix-timers.c:135:
+#define if_clock_do(clock_fun, alt_fun,parms)	(! clock_fun)? alt_fun parms :\
+							      clock_fun parms

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#980: FILE: kernel/posix-timers.c:136:
+							      clock_fun parms
 							                ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#982: FILE: kernel/posix-timers.c:138:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#982: FILE: kernel/posix-timers.c:138:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \
                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#982: FILE: kernel/posix-timers.c:138:
+#define p_timer_get( clock,a,b) if_clock_do((clock)->timer_get, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: kernel/posix-timers.c:140:
+					     (a,b))
 					       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: kernel/posix-timers.c:142:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: kernel/posix-timers.c:142:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#986: FILE: kernel/posix-timers.c:142:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \
                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#986: FILE: kernel/posix-timers.c:142:
+#define p_nsleep( clock,a,b,c) if_clock_do((clock)->nsleep,   \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#988: FILE: kernel/posix-timers.c:144:
+					    (a,b,c))
 					      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#988: FILE: kernel/posix-timers.c:144:
+					    (a,b,c))
 					        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#990: FILE: kernel/posix-timers.c:146:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \
                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#990: FILE: kernel/posix-timers.c:146:
+#define p_timer_del( clock,a) if_clock_do((clock)->timer_del, \

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#994: FILE: kernel/posix-timers.c:150:
+void register_posix_clock(int clock_id, struct k_clock *new_clock);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#998: FILE: kernel/posix-timers.c:154:
+int do_posix_clock_monotonic_gettime(struct timespec *tp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1000: FILE: kernel/posix-timers.c:156:
+int do_posix_clock_monotonic_settime(struct timespec *tp);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: kernel/posix-timers.c:160:
+/* $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1021: FILE: kernel/posix-timers.c:177:
+					       sizeof (struct k_itimer), 0, 0,

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#1027: FILE: kernel/posix-timers.c:183:
+__initcall(init_posix_timers);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1048: FILE: kernel/posix-timers.c:204:
+^I * bits.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1052: FILE: kernel/posix-timers.c:208:
+^I * Do the res thing. (Don't forget the add in the declaration of nsec) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: kernel/posix-timers.c:216:
+^I * We trust that the optimizer will use the remainder from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1061: FILE: kernel/posix-timers.c:217:
+^I * above div in the following operation as long as they are close. $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1065: FILE: kernel/posix-timers.c:221:
+}
+static void

WARNING:LINE_SPACING: Missing a blank line after declarations
#1069: FILE: kernel/posix-timers.c:225:
+	int res = posix_clocks[timer->it_clock].res;
+	tstojiffie(&time->it_value, res, &timer->it_timer.expires);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1095: FILE: kernel/posix-timers.c:251:
+/*
+

WARNING:TYPO_SPELLING: 'aginst' may be misspelled - perhaps 'against'?
#1103: FILE: kernel/posix-timers.c:259:
+ * To protect aginst the timer going away while the interrupt is queued,
               ^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1110: FILE: kernel/posix-timers.c:266:
+{
+

WARNING:INDENTED_LABEL: labels should not be indented
#1121: FILE: kernel/posix-timers.c:277:
+      exit:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: kernel/posix-timers.c:282:
+/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1127: FILE: kernel/posix-timers.c:283:
+/* 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1144: FILE: kernel/posix-timers.c:300:
+	memset(&info, 0, sizeof (info));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1152: FILE: kernel/posix-timers.c:308:
+	if (timr->it_incr == 0) {
[...]
+	} else {
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1155: FILE: kernel/posix-timers.c:311:
+		timr->it_requeue_pending = info.si_sys_private = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1159: FILE: kernel/posix-timers.c:315:
+	switch (ret) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1165: FILE: kernel/posix-timers.c:321:
+		printk(KERN_WARNING "sending signal failed: %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: kernel/posix-timers.c:327:
+^I^I * it should be restarted. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1175: FILE: kernel/posix-timers.c:331:
+^I^I/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1183: FILE: kernel/posix-timers.c:339:
+/*
+

WARNING:TYPO_SPELLING: 'interrutps' may be misspelled - perhaps 'interrupts'?
#1186: FILE: kernel/posix-timers.c:342:
+ * run_timer_list code ALWAYS calls with interrutps on.
                                          ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1192: FILE: kernel/posix-timers.c:348:
+	struct k_itimer *timr = (struct k_itimer *) __data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1201: FILE: kernel/posix-timers.c:357:
+ * For some reason mips/mips64 define the SIGEV constants plus 128.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1202: FILE: kernel/posix-timers.c:358:
+ * Here we define a mask to get rid of the common bits.^I The $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1205: FILE: kernel/posix-timers.c:361:
+#if (ARCH == mips) || (ARCH == mips64)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1211: FILE: kernel/posix-timers.c:367:
+#define MIPS_SIGEV (int)-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1215: FILE: kernel/posix-timers.c:371:
+good_sigevent(sigevent_t * event)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1220: FILE: kernel/posix-timers.c:376:
+		if (!(rtn =

CHECK:SPACING: No space is necessary after a cast
#1227: FILE: kernel/posix-timers.c:383:
+		if ((unsigned) (event->sigev_signo > SIGRTMAX))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1227: FILE: kernel/posix-timers.c:383:
+		if ((unsigned) (event->sigev_signo > SIGRTMAX))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->sigev_signo > SIGRTMAX'
#1227: FILE: kernel/posix-timers.c:383:
+		if ((unsigned) (event->sigev_signo > SIGRTMAX))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1230: FILE: kernel/posix-timers.c:386:
+	if (event->sigev_notify & ~(SIGEV_SIGNAL | SIGEV_THREAD_ID)) {
+		return NULL;
+	}

CHECK:SPACING: No space is necessary after a cast
#1239: FILE: kernel/posix-timers.c:395:
+	if ((unsigned) clock_id >= MAX_CLOCKS) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1239: FILE: kernel/posix-timers.c:395:
+	if ((unsigned) clock_id >= MAX_CLOCKS) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1240: FILE: kernel/posix-timers.c:396:
+		printk("POSIX clock register failed for clock_id %d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1251: FILE: kernel/posix-timers.c:407:
+	struct k_itimer *tmr;
+	tmr = kmem_cache_alloc(posix_timers_cache, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1252: FILE: kernel/posix-timers.c:408:
+	memset(tmr, 0, sizeof (struct k_itimer));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1253: FILE: kernel/posix-timers.c:409:
+	return (tmr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1268: FILE: kernel/posix-timers.c:424:
+		 struct sigevent *timer_event_spec, timer_t * created_timer_id)

CHECK:SPACING: No space is necessary after a cast
#1276: FILE: kernel/posix-timers.c:432:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1276: FILE: kernel/posix-timers.c:432:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1276: FILE: kernel/posix-timers.c:432:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||
+	    !posix_clocks[which_clock].res) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_timer"
#1280: FILE: kernel/posix-timers.c:436:
+	if (new_timer == NULL)

CHECK:SPACING: No space is necessary after a cast
#1284: FILE: kernel/posix-timers.c:440:
+	new_timer_id = (timer_t) idr_get_new(&posix_timers_id,

CHECK:SPACING: No space is necessary after a cast
#1285: FILE: kernel/posix-timers.c:441:
+					     (void *) new_timer);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1292: FILE: kernel/posix-timers.c:448:
+^I * return the timer_id now.  The next step is hard to $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1296: FILE: kernel/posix-timers.c:452:
+			 &new_timer_id, sizeof (new_timer_id))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1301: FILE: kernel/posix-timers.c:457:
+		if (copy_from_user(&event, timer_event_spec, sizeof (event))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1306: FILE: kernel/posix-timers.c:462:
+		if ((process = good_sigevent(&event))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1308: FILE: kernel/posix-timers.c:464:
+			/*
+

WARNING:TYPO_SPELLING: 'invloved' may be misspelled - perhaps 'involved'?
#1315: FILE: kernel/posix-timers.c:471:
+			 * The exec case is a bit more invloved but easy
 			                               ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1357: FILE: kernel/posix-timers.c:513:
+	new_timer->it_timer.data = (unsigned long) new_timer;

WARNING:INDENTED_LABEL: labels should not be indented
#1366: FILE: kernel/posix-timers.c:522:
+      out:

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1367: FILE: kernel/posix-timers.c:523:
+	if (error) {
+		release_posix_timer(new_timer);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1381: FILE: kernel/posix-timers.c:537:
+ * Return value: $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts == NULL'
#1391: FILE: kernel/posix-timers.c:547:
+	if ((ts == NULL) ||
+	    (ts->tv_sec < 0) ||
+	    ((unsigned) ts->tv_nsec >= NSEC_PER_SEC)) return 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts->tv_sec < 0'
#1391: FILE: kernel/posix-timers.c:547:
+	if ((ts == NULL) ||
+	    (ts->tv_sec < 0) ||
+	    ((unsigned) ts->tv_nsec >= NSEC_PER_SEC)) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1391: FILE: kernel/posix-timers.c:547:
+	if ((ts == NULL) ||
[...]
+	    ((unsigned) ts->tv_nsec >= NSEC_PER_SEC)) return 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ts"
#1391: FILE: kernel/posix-timers.c:547:
+	if ((ts == NULL) ||

CHECK:SPACING: No space is necessary after a cast
#1393: FILE: kernel/posix-timers.c:549:
+	    ((unsigned) ts->tv_nsec >= NSEC_PER_SEC)) return 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1393: FILE: kernel/posix-timers.c:549:
+	    ((unsigned) ts->tv_nsec >= NSEC_PER_SEC)) return 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1404: FILE: kernel/posix-timers.c:560:
+/*
+

CHECK:SPACING: No space is necessary after a cast
#1418: FILE: kernel/posix-timers.c:574:
+	timr = (struct k_itimer *) idr_find_nolock(&posix_timers_id,

CHECK:SPACING: No space is necessary after a cast
#1419: FILE: kernel/posix-timers.c:575:
+						   (int) timer_id);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1424: FILE: kernel/posix-timers.c:580:
+		if (timr->it_id != timer_id) {
+			BUG();
+		}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1425: FILE: kernel/posix-timers.c:581:
+			BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1439: FILE: kernel/posix-timers.c:595:
+/* $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1440: FILE: kernel/posix-timers.c:596:
+/* 
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1457: FILE: kernel/posix-timers.c:613:
+void inline

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:SPACING: No space is necessary after a cast
#1466: FILE: kernel/posix-timers.c:622:
+	} while ((volatile long) (timr->it_timer.expires) != expires);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1466: FILE: kernel/posix-timers.c:622:
+	} while ((volatile long) (timr->it_timer.expires) != expires);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1471: FILE: kernel/posix-timers.c:627:
+		if (posix_time_before(&timr->it_timer, &now)) {
+			timr->it_timer.expires = expires = 0;
+		}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1472: FILE: kernel/posix-timers.c:628:
+			timr->it_timer.expires = expires = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1482: FILE: kernel/posix-timers.c:638:
+			if (!timer_pending(&timr->it_timer)) {
+				sub_expires = expires = 0;
+			}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1483: FILE: kernel/posix-timers.c:639:
+				sub_expires = expires = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1486: FILE: kernel/posix-timers.c:642:
+		if (expires) {
+			expires -= now.jiffies;
+		}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1498: FILE: kernel/posix-timers.c:654:
+}
+/* Get the time remaining on a POSIX.1b interval timer. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1514: FILE: kernel/posix-timers.c:670:
+	if (copy_to_user(setting, &cur_setting, sizeof (cur_setting)))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1519: FILE: kernel/posix-timers.c:675:
+}
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1520: FILE: kernel/posix-timers.c:676:
+/*
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1547: FILE: kernel/posix-timers.c:703:
+}
+/* Adjust for absolute time */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1561: FILE: kernel/posix-timers.c:717:
+	struct timespec oc;
+	do_posix_clock_monotonic_gettime(&now);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get'
#1563: FILE: kernel/posix-timers.c:719:
+	if (abs &&
+	    (posix_clocks[CLOCK_MONOTONIC].clock_get == clock->clock_get)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1566: FILE: kernel/posix-timers.c:722:
+	} else {
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1567: FILE: kernel/posix-timers.c:723:
+		if (abs) {
[...]
+		} else {
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1570: FILE: kernel/posix-timers.c:726:
+			oc.tv_nsec = oc.tv_sec = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1575: FILE: kernel/posix-timers.c:731:
+^I^I/* $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->tv_nsec'
#1582: FILE: kernel/posix-timers.c:738:
+		if ((tp->tv_nsec) < 0) {

CHECK:SPACING: No space is necessary after a cast
#1594: FILE: kernel/posix-timers.c:750:
+	if ((unsigned) (tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1594: FILE: kernel/posix-timers.c:750:
+	if ((unsigned) (tp->tv_sec - now.tv_sec) > (MAX_JIFFY_OFFSET / HZ)) {

CHECK:SPACING: No space is necessary after a cast
#1595: FILE: kernel/posix-timers.c:751:
+		if ((unsigned) tp->tv_sec < now.tv_sec) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1595: FILE: kernel/posix-timers.c:751:
+		if ((unsigned) tp->tv_sec < now.tv_sec) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1603: FILE: kernel/posix-timers.c:759:
+^I^I^I * possible overflows).  We assume such a large $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1622: FILE: kernel/posix-timers.c:778:
+	if (old_setting) {
+		do_timer_gettime(timr, old_setting);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1628: FILE: kernel/posix-timers.c:784:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1638: FILE: kernel/posix-timers.c:794:
+^I^I * we do that anything could happen, including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: kernel/posix-timers.c:795:
+^I^I * complete melt down of the timer.  So return with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1651: FILE: kernel/posix-timers.c:807:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1652: FILE: kernel/posix-timers.c:808:
+^I *switch off the timer when it_value is zero $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_sec == 0'
#1654: FILE: kernel/posix-timers.c:810:
+	if ((new_setting->it_value.tv_sec == 0) &&
+	    (new_setting->it_value.tv_nsec == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_setting->it_value.tv_nsec == 0'
#1654: FILE: kernel/posix-timers.c:810:
+	if ((new_setting->it_value.tv_sec == 0) &&
+	    (new_setting->it_value.tv_nsec == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'clock->clock_get != do_posix_clock_monotonic_gettime'
#1660: FILE: kernel/posix-timers.c:816:
+	if ((flags & TIMER_ABSTIME) &&
+	    (clock->clock_get != do_posix_clock_monotonic_gettime)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1675: FILE: kernel/posix-timers.c:831:
+		if (timr->it_timer.expires == jiffies) {
[...]
+		} else
[...]

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1675: FILE: kernel/posix-timers.c:831:
+		if (timr->it_timer.expires == jiffies) {

CHECK:BRACES: Unbalanced braces around else statement
#1677: FILE: kernel/posix-timers.c:833:
+		} else

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1695: FILE: kernel/posix-timers.c:851:
+	if (new_setting == NULL) {
+		return -EINVAL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_setting"
#1695: FILE: kernel/posix-timers.c:851:
+	if (new_setting == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1699: FILE: kernel/posix-timers.c:855:
+	if (copy_from_user(&new_spec, new_setting, sizeof (new_spec))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1699: FILE: kernel/posix-timers.c:855:
+	if (copy_from_user(&new_spec, new_setting, sizeof (new_spec))) {
+		return -EFAULT;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#1707: FILE: kernel/posix-timers.c:863:
+      retry:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1726: FILE: kernel/posix-timers.c:882:
+		if (copy_to_user(old_setting, &old_spec, sizeof (old_spec))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1726: FILE: kernel/posix-timers.c:882:
+		if (copy_to_user(old_setting, &old_spec, sizeof (old_spec))) {
+			error = -EFAULT;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1745: FILE: kernel/posix-timers.c:901:
+^I^I * we do that anything could happen, including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1746: FILE: kernel/posix-timers.c:902:
+^I^I * complete melt down of the timer.  So return with $

WARNING:INDENTED_LABEL: labels should not be indented
#1766: FILE: kernel/posix-timers.c:922:
+      retry_delete:

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1799: FILE: kernel/posix-timers.c:955:
+}
+/*

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1805: FILE: kernel/posix-timers.c:961:
+	if (sys_timer_delete(timer->it_id)) {
+		BUG();
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1806: FILE: kernel/posix-timers.c:962:
+		BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1809: FILE: kernel/posix-timers.c:965:
+}
+/*

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1837: FILE: kernel/posix-timers.c:993:
+{
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1838: FILE: kernel/posix-timers.c:994:
+	if (clock->clock_get) {
+		return clock->clock_get(tp);
+	}

CHECK:SPACING: No space is necessary after a cast
#1842: FILE: kernel/posix-timers.c:998:
+	do_gettimeofday((struct timeval *) tp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1871: FILE: kernel/posix-timers.c:1027:
+		unsigned long flags;
+		read_lock_irqsave(&xtime_lock, flags);

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#1876: FILE: kernel/posix-timers.c:1032:
+#elif ! defined(CONFIG_SMP) && (BITS_PER_LONG < 64)
       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1878: FILE: kernel/posix-timers.c:1034:
+	unsigned long jiffies_f;
+	do {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1882: FILE: kernel/posix-timers.c:1038:
+	} while (unlikely(jiffies_f != jiffies));

CHECK:SPACING: No space is necessary after a cast
#1902: FILE: kernel/posix-timers.c:1058:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1902: FILE: kernel/posix-timers.c:1058:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1902: FILE: kernel/posix-timers.c:1058:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||
+	    !posix_clocks[which_clock].res) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1904: FILE: kernel/posix-timers.c:1060:
+	if (copy_from_user(&new_tp, tp, sizeof (*tp)))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1906: FILE: kernel/posix-timers.c:1062:
+	if (posix_clocks[which_clock].clock_set) {
+		return posix_clocks[which_clock].clock_set(&new_tp);
+	}

CHECK:SPACING: No space is necessary after a cast
#1910: FILE: kernel/posix-timers.c:1066:
+	return do_sys_settimeofday((struct timeval *) &new_tp, NULL);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1912: FILE: kernel/posix-timers.c:1068:
+}
+asmlinkage int

CHECK:SPACING: No space is necessary after a cast
#1918: FILE: kernel/posix-timers.c:1074:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1918: FILE: kernel/posix-timers.c:1074:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1918: FILE: kernel/posix-timers.c:1074:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||
+	    !posix_clocks[which_clock].res) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1924: FILE: kernel/posix-timers.c:1080:
+		if (copy_to_user(tp, &rtn_tp, sizeof (rtn_tp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1924: FILE: kernel/posix-timers.c:1080:
+		if (copy_to_user(tp, &rtn_tp, sizeof (rtn_tp))) {
+			error = -EFAULT;
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1930: FILE: kernel/posix-timers.c:1086:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1931: FILE: kernel/posix-timers.c:1087:
+}
+asmlinkage int

CHECK:SPACING: No space is necessary after a cast
#1936: FILE: kernel/posix-timers.c:1092:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1936: FILE: kernel/posix-timers.c:1092:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1936: FILE: kernel/posix-timers.c:1092:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||
+	    !posix_clocks[which_clock].res) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1942: FILE: kernel/posix-timers.c:1098:
+		if (copy_to_user(tp, &rtn_tp, sizeof (rtn_tp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1942: FILE: kernel/posix-timers.c:1098:
+		if (copy_to_user(tp, &rtn_tp, sizeof (rtn_tp))) {
+			return -EFAULT;
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1948: FILE: kernel/posix-timers.c:1104:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1949: FILE: kernel/posix-timers.c:1105:
+}
+static void

CHECK:SPACING: No space is necessary after a cast
#1952: FILE: kernel/posix-timers.c:1108:
+	struct task_struct *p = (struct task_struct *) __data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1960: FILE: kernel/posix-timers.c:1116:
+ * For each nanosleep call that needs it (only absolute and not on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1966: FILE: kernel/posix-timers.c:1122:
+ * On locking, clock_was_set() is called from update_wall_clock which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1967: FILE: kernel/posix-timers.c:1123:
+ * holds (or has held for it) a write_lock_irq( xtime_lock) and is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1994: FILE: kernel/posix-timers.c:1150:
+extern long do_clock_nanosleep(clockid_t which_clock, int flags, $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1994: FILE: kernel/posix-timers.c:1150:
+extern long do_clock_nanosleep(clockid_t which_clock, int flags, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2005: FILE: kernel/posix-timers.c:1161:
+	if (copy_from_user(&t, rqtp, sizeof (t)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2010: FILE: kernel/posix-timers.c:1166:
+^Iif (ret == -ERESTART_RESTARTBLOCK && rmtp && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#2010: FILE: kernel/posix-timers.c:1166:
+	if (ret == -ERESTART_RESTARTBLOCK && rmtp && 
[...]
+			return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2011: FILE: kernel/posix-timers.c:1167:
+	    copy_to_user(rmtp, &t, sizeof (t)))

CHECK:SPACING: No space is necessary after a cast
#2024: FILE: kernel/posix-timers.c:1180:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2024: FILE: kernel/posix-timers.c:1180:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2024: FILE: kernel/posix-timers.c:1180:
+	if ((unsigned) which_clock >= MAX_CLOCKS ||
+	    !posix_clocks[which_clock].res) return -EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2027: FILE: kernel/posix-timers.c:1183:
+	if (copy_from_user(&t, rqtp, sizeof (struct timespec)))

CHECK:SPACING: No space is necessary after a cast
#2030: FILE: kernel/posix-timers.c:1186:
+	if ((unsigned) t.tv_nsec >= NSEC_PER_SEC || t.tv_sec < 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2030: FILE: kernel/posix-timers.c:1186:
+	if ((unsigned) t.tv_nsec >= NSEC_PER_SEC || t.tv_sec < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2035: FILE: kernel/posix-timers.c:1191:
+^Iif ((ret == -ERESTART_RESTARTBLOCK) && rmtp && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#2035: FILE: kernel/posix-timers.c:1191:
+	if ((ret == -ERESTART_RESTARTBLOCK) && rmtp && 
[...]
+			return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2036: FILE: kernel/posix-timers.c:1192:
+	    copy_to_user(rmtp, &t, sizeof (t)))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2040: FILE: kernel/posix-timers.c:1196:
+
+}

CHECK:SPACING: No space is necessary after a cast
#2056: FILE: kernel/posix-timers.c:1212:
+	new_timer.data = (unsigned long) current;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'posix_clocks[which_clock].clock_get !=
 		    posix_clocks[CLOCK_MONOTONIC].clock_get'
#2074: FILE: kernel/posix-timers.c:1230:
+	if (abs && (posix_clocks[which_clock].clock_get !=
+		    posix_clocks[CLOCK_MONOTONIC].clock_get)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2083: FILE: kernel/posix-timers.c:1239:
+		if ((abs || !new_timer.expires) &&

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#2104: FILE: kernel/posix-timers.c:1260:
+	}
+	while ((active = del_timer_sync(&new_timer)) &&

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2141: FILE: kernel/posix-timers.c:1297:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2150: FILE: kernel/posix-timers.c:1306:
+^Iif ((ret == -ERESTART_RESTARTBLOCK) && restart_block->arg1 && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'restart_block->arg1'
#2150: FILE: kernel/posix-timers.c:1306:
+	if ((ret == -ERESTART_RESTARTBLOCK) && restart_block->arg1 && 
+	    copy_to_user((struct timespec *)(restart_block->arg1), &t, 
+			 sizeof (t)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2151: FILE: kernel/posix-timers.c:1307:
+^I    copy_to_user((struct timespec *)(restart_block->arg1), &t, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2152: FILE: kernel/posix-timers.c:1308:
+			 sizeof (t)))

ERROR:SPACING: space prohibited after that open parenthesis '('
#2182: FILE: kernel/signal.c:486:
+	if ( ret &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2183: FILE: kernel/signal.c:487:
+	if ( ret &&
+	     ((info->si_code & __SI_MASK) == __SI_TIMER) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->si_code == SI_TIMER'
#2214: FILE: kernel/signal.c:683:
+		if (((unsigned long)info > 1) && (info->si_code == SI_TIMER))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2216: FILE: kernel/signal.c:685:
+^I^I^I * Set up a return to indicate that we dropped $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retval >= 0'
#2234: FILE: kernel/signal.c:733:
+	if ((retval >= 0) && !sigismember(&t->blocked, sig))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->si_code == SI_TIMER'
#2242: FILE: kernel/signal.c:769:
+	if (((unsigned long)info > 2) && (info->si_code == SI_TIMER))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2394: FILE: kernel/timer.c:1024:
 }
+#ifndef FOLD_NANO_SLEEP_INTO_CLOCK_NANO_SLEEP

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 117 errors, 117 warnings, 102 checks, 2175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404169.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
