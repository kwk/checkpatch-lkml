WARNING:TYPO_SPELLING: 'follwoing' may be misspelled - perhaps 'following'?
#30: 
The follwoing updates are included:
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -uNr -Xdontdiff ../master/linux-2.4.10-pre3/fs/sysv/Makefile linux/fs/sysv/Makefile

CHECK:BRACES: braces {} should be used on all arms of this statement
#99: FILE: fs/sysv/inode.c:134:
+		if (inode->i_blocks) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#102: FILE: fs/sysv/inode.c:137:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: fs/sysv/super.c:205:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/sysv/super.c:205:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: fs/sysv/super.c:206:
+ ^Iif (fs16_to_cpu(sb, sbd->s_nfree) == 0xffff) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: fs/sysv/super.c:206:
+ ^Iif (fs16_to_cpu(sb, sbd->s_nfree) == 0xffff) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: fs/sysv/super.c:206:
+ ^Iif (fs16_to_cpu(sb, sbd->s_nfree) == 0xffff) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: fs/sysv/super.c:207:
+ ^I^Isb->sv_type = FSTYPE_AFS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: fs/sysv/super.c:207:
+ ^I^Isb->sv_type = FSTYPE_AFS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: fs/sysv/super.c:207:
+ ^I^Isb->sv_type = FSTYPE_AFS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/sysv/super.c:208:
+ ^I^Iif (!(sb->s_flags & MS_RDONLY)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: fs/sysv/super.c:208:
+ ^I^Iif (!(sb->s_flags & MS_RDONLY)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/sysv/super.c:208:
+ ^I^Iif (!(sb->s_flags & MS_RDONLY)) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: fs/sysv/super.c:209:
+ ^I^I^Iprintk("SysV FS: SCO EAFS on %s detected, " $

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: fs/sysv/super.c:209:
+ ^I^I^Iprintk("SysV FS: SCO EAFS on %s detected, " $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: fs/sysv/super.c:209:
+ ^I^I^Iprintk("SysV FS: SCO EAFS on %s detected, " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/sysv/super.c:209:
+ ^I^I^Iprintk("SysV FS: SCO EAFS on %s detected, " $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: fs/sysv/super.c:209:
+ 			printk("SysV FS: SCO EAFS on %s detected, " 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: fs/sysv/super.c:210:
+ ^I^I^I^I"forcing read-only mode.\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: fs/sysv/super.c:210:
+ ^I^I^I^I"forcing read-only mode.\n", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: fs/sysv/super.c:210:
+ ^I^I^I^I"forcing read-only mode.\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/sysv/super.c:210:
+ ^I^I^I^I"forcing read-only mode.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#146: FILE: fs/sysv/super.c:210:
+ 			printk("SysV FS: SCO EAFS on %s detected, " 
+ 				"forcing read-only mode.\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/sysv/super.c:211:
+ ^I^I^I^Ibdevname(sb->s_dev));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: fs/sysv/super.c:211:
+ ^I^I^I^Ibdevname(sb->s_dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/sysv/super.c:211:
+ ^I^I^I^Ibdevname(sb->s_dev));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: fs/sysv/super.c:212:
+ ^I^I^Isb->s_flags |= MS_RDONLY;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: fs/sysv/super.c:212:
+ ^I^I^Isb->s_flags |= MS_RDONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/sysv/super.c:212:
+ ^I^I^Isb->s_flags |= MS_RDONLY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: fs/sysv/super.c:213:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: fs/sysv/super.c:213:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/sysv/super.c:213:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: fs/sysv/super.c:214:
+ ^I^Ireturn sbd->s_type;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: fs/sysv/super.c:214:
+ ^I^Ireturn sbd->s_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/sysv/super.c:214:
+ ^I^Ireturn sbd->s_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: fs/sysv/super.c:215:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: fs/sysv/super.c:215:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: fs/sysv/super.c:215:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: fs/sysv/super.c:216:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/sysv/super.c:216:
+ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#223: FILE: fs/sysv/super.c:448:
+			printk("VFS: unable to read V7 FS superblock on "

WARNING:SPLIT_STRING: quoted string split across lines
#224: FILE: fs/sysv/super.c:449:
+			printk("VFS: unable to read V7 FS superblock on "
+			       "device %s.\n", bdevname(dev));

CHECK:SPACING: No space is necessary after a cast
#229: FILE: fs/sysv/super.c:454:
+	v7sb = (struct v7_super_block *) bh->b_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: fs/sysv/super.c:455:
+	if (fs16_to_cpu(sb,v7sb->s_nfree) > V7_NICFREE ||
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: fs/sysv/super.c:456:
+	    fs16_to_cpu(sb,v7sb->s_ninode) > V7_NICINOD ||
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: fs/sysv/super.c:457:
+	    fs32_to_cpu(sb,v7sb->s_time) == 0)
 	                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#236: FILE: fs/sysv/super.c:461:
+	/* plausibility check on root inode: it is a directory,
+	   with a nonzero size that is a multiple of 16 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: fs/sysv/super.c:461:
+	   with a nonzero size that is a multiple of 16 */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#237: FILE: fs/sysv/super.c:462:
+	if ((bh2 = bread(dev, 2, 512)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: fs/sysv/super.c:465:
+	if ((fs16_to_cpu(sb,v7i->i_mode) & ~0777) != S_IFDIR ||
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: fs/sysv/super.c:466:
+	    (fs32_to_cpu(sb,v7i->i_size) == 0) ||
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#242: FILE: fs/sysv/super.c:467:
+	    (fs32_to_cpu(sb,v7i->i_size) & 017) != 0)
 	                   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#262: FILE: fs/sysv/symlink.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#263: FILE: fs/sysv/symlink.c:2:
+ *  linux/fs/sysv/symlink.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: fs/sysv/symlink.c:13:
+	char *s = (char *)dentry->d_inode->u.sysv_i.i_data;
+	return vfs_readlink(dentry, buffer, buflen, s);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#277: FILE: fs/sysv/symlink.c:16:
+static int sysv_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#280: FILE: fs/sysv/symlink.c:19:
+	return vfs_follow_link(nd, s);
 	                       ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: fs/sysv/symlink.c:19:
+	char *s = (char *)dentry->d_inode->u.sysv_i.i_data;
+	return vfs_follow_link(nd, s);

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#283: FILE: fs/sysv/symlink.c:22:
+struct inode_operations sysv_fast_symlink_inode_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#284: FILE: fs/sysv/symlink.c:23:
+	readlink:	sysv_readlink,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#285: FILE: fs/sysv/symlink.c:24:
+	follow_link:	sysv_follow_link,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#285: FILE: fs/sysv/symlink.c:24:
+	follow_link:	sysv_follow_link,

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#302: FILE: include/linux/sysv_fs.h:377:
+extern struct inode_operations sysv_fast_symlink_inode_operations;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515439.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 40 warnings, 3 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515439.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
