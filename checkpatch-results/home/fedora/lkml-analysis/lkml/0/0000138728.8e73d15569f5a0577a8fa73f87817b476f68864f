WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- linux-2.6.14-rc5-mm1/fs/ecryptfs/main.c	1969-12-31 18:00:00.000000000 -0600

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: fs/ecryptfs/main.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: fs/ecryptfs/main.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: fs/ecryptfs/main.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

WARNING:SPLIT_STRING: quoted string split across lines
#96: FILE: fs/ecryptfs/main.c:55:
+		 "Initial verbosity level (0 or 1; defaults to "
+		 "0, which is Quiet)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: fs/ecryptfs/main.c:60:
+	va_list args;
+	va_start(args, fmt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecryptfs_verbosity == VERBOSE_DUMP'
#102: FILE: fs/ecryptfs/main.c:61:
+	if (unlikely((ecryptfs_verbosity == VERBOSE_DUMP))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#106: FILE: fs/ecryptfs/main.c:65:
+	if ((ecryptfs_verbosity >= verb) && printk_ratelimit()) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ecryptfs_verbosity >= verb'
#106: FILE: fs/ecryptfs/main.c:65:
+	if ((ecryptfs_verbosity >= verb) && printk_ratelimit()) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#106: FILE: fs/ecryptfs/main.c:65:
+	if ((ecryptfs_verbosity >= verb) && printk_ratelimit()) {
+		vprintk(fmt, args);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: fs/ecryptfs/main.c:76:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: Releasing memory at location "
+			"[%p]\n", fun, line, ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: fs/ecryptfs/main.c:83:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: Allocated memory at location "
+			"[%p] ([%d] bytes)\n", fun, line, ptr, size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: fs/ecryptfs/main.c:97:
+	void *ptr;
+	ptr = kmalloc(size, flags);

WARNING:SPLIT_STRING: quoted string split across lines
#153: FILE: fs/ecryptfs/main.c:112:
+			KERN_NOTICE, "%s:%d: calling kmem_cache_free() on "
+			"kmem_cache = [%p]; ptr = [%p]\n", fun, line,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: fs/ecryptfs/main.c:117:
+void *__ecryptfs_kmem_cache_alloc(kmem_cache_t * kmem_cache,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: fs/ecryptfs/main.c:122:
+	void *ptr;
+	ecryptfs_printk(ECRYPTFS_KMEM_CACHE_DEBUG_VERBOSITY,

WARNING:SPLIT_STRING: quoted string split across lines
#165: FILE: fs/ecryptfs/main.c:124:
+			KERN_NOTICE, "%s:%d: calling kmem_cache_alloc() on "
+			"kmem_cache = [%p]\n", fun, line, kmem_cache);

WARNING:SPLIT_STRING: quoted string split across lines
#169: FILE: fs/ecryptfs/main.c:128:
+			KERN_NOTICE, "%s:%d: called kmem_cache_alloc(); ptr "
+			"= [%p]\n", fun, line, ptr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: fs/ecryptfs/main.c:139:
+	struct inode *inode;
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling iget(); ino = [%lu]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: fs/ecryptfs/main.c:144:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called iget(): after call, "
+			"inode = [%p]; inode->i_count = [%d]\n", fun, line,

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: fs/ecryptfs/main.c:152:
+	int count;
+	count = atomic_read(&inode->i_count);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#194: FILE: fs/ecryptfs/main.c:153:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling iput(); before call, "
 	                                                ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#195: FILE: fs/ecryptfs/main.c:154:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling iput(); before call, "
+			"inode = [%p]; inode->i_count = [%d]\n", fun, line,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#197: FILE: fs/ecryptfs/main.c:156:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#199: FILE: fs/ecryptfs/main.c:158:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called iput(); after call, "
 	                                               ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#200: FILE: fs/ecryptfs/main.c:159:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called iput(); after call, "
+			"inode->i_count = [%d]\n", fun, line, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: fs/ecryptfs/main.c:165:
+	int count;
+	count = atomic_read(&file->f_count);

WARNING:SPLIT_STRING: quoted string split across lines
#208: FILE: fs/ecryptfs/main.c:167:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling fput(); before call, "
+			"file = [%p]; file->f_count = [%d]\n", fun, line,

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: fs/ecryptfs/main.c:172:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called fput(); after call, "
+			"file->f_count = [%d]\n", fun, line, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: fs/ecryptfs/main.c:179:
+	int count;
+	count = atomic_read(&dentry->d_count);

WARNING:SPLIT_STRING: quoted string split across lines
#222: FILE: fs/ecryptfs/main.c:181:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling d_add(); before call, "
+			"dentry->d_count = [%d]\n", fun, line, count);

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: fs/ecryptfs/main.c:185:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called iget(): after call, "
+			"dentry->d_count = [%d]\n", fun, line, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#233: FILE: fs/ecryptfs/main.c:192:
+	int count;
+	count = atomic_read(&dentry->d_count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#248: FILE: fs/ecryptfs/main.c:207:
+	struct dentry *dentry;
+	dentry = d_alloc(parent, name);

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: fs/ecryptfs/main.c:209:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: Allocated a new dentry at "
+			"location [%p] for name [%s]\n", fun, line, dentry,

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: fs/ecryptfs/main.c:217:
+	int count;
+	count = atomic_read(&dentry->d_count);

WARNING:SPLIT_STRING: quoted string split across lines
#260: FILE: fs/ecryptfs/main.c:219:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling d_drop() w/ "
+			"dentry = [%p]; dentry->d_count = [%d]\n", fun, line,

WARNING:SPLIT_STRING: quoted string split across lines
#265: FILE: fs/ecryptfs/main.c:224:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called d_drop(), "
+			"dentry->d_count = [%d]\n", fun, line, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#271: FILE: fs/ecryptfs/main.c:230:
+	int count;
+	count = atomic_read(&dentry->d_count);

WARNING:SPLIT_STRING: quoted string split across lines
#273: FILE: fs/ecryptfs/main.c:232:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling dput() on dentry with "
+			"dentry = [%p]; dentry->d_name.name = [%s]; "

WARNING:SPLIT_STRING: quoted string split across lines
#279: FILE: fs/ecryptfs/main.c:238:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called dput() on dentry; now "
+			"dentry->d_count = [%d]\n", fun, line, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: fs/ecryptfs/main.c:245:
+	struct dentry *ret_dentry;
+	count = atomic_read(&dentry->d_count);

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: fs/ecryptfs/main.c:247:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling dget() on dentry with "
+			"dentry = [%p]; dentry->d_name.name = [%s]; "

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: fs/ecryptfs/main.c:252:
+		ecryptfs_printk(0, KERN_ERR, "%s:%d: The dentry has a count "
+				"of 0, which is illegal!\n");

WARNING:SPLIT_STRING: quoted string split across lines
#298: FILE: fs/ecryptfs/main.c:257:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called dget() on dentry; now "
+			"dentry->d_count = [%d]\n", fun, line, count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: fs/ecryptfs/main.c:265:
+	struct file *file;
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling dentry_open(); "

WARNING:SPLIT_STRING: quoted string split across lines
#320: FILE: fs/ecryptfs/main.c:279:
+			"dentry = [%p], dentry->d_name.name = [%s], "
+			"dentry->d_count = [%d]\n", fun, line, dentry,

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: fs/ecryptfs/main.c:291:
+	int count;
+	count = atomic_read(&inode->i_count);

WARNING:SPLIT_STRING: quoted string split across lines
#334: FILE: fs/ecryptfs/main.c:293:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: calling igrab(); before call, "
+			"inode = [%p]; inode->i_count = [%d]\n", fun, line,

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: fs/ecryptfs/main.c:298:
+	ecryptfs_printk(1, KERN_NOTICE, "%s:%d: called igrab(); after call, "
+			"inode->i_count = [%d]\n", fun, line, count);

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#347: FILE: fs/ecryptfs/main.c:306:
+ * This function will call an ecryptfs_inode into existance through the call to
                                                   ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: fs/ecryptfs/main.c:308:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: fs/ecryptfs/main.c:313:
+ * ^I^I^Iis called.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#363: FILE: fs/ecryptfs/main.c:322:
+	struct inode *inode;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; lower_dentry = [%p], "

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: fs/ecryptfs/main.c:323:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; lower_dentry = [%p], "
+			"lower_dentry->d_name.name = [%s], dentry = "

WARNING:SPLIT_STRING: quoted string split across lines
#365: FILE: fs/ecryptfs/main.c:324:
+			"lower_dentry->d_name.name = [%s], dentry = "
+			"[%p], dentry->d_name.name = [%s], sb = [%p]; "

WARNING:SPLIT_STRING: quoted string split across lines
#367: FILE: fs/ecryptfs/main.c:326:
+			"flag = [%.4x]; lower_dentry->d_count "
+			"= [%d]; dentry->d_count = [%d]\n", lower_dentry,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#383: FILE: fs/ecryptfs/main.c:342:
+	 * we know we failed, is by the pointer being NULL */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#386: FILE: fs/ecryptfs/main.c:345:
+		ecryptfs_printk(1, KERN_ERR, "Out of memory. Failure to "
+				"allocate memory in ecryptfs_read_inode.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#388: FILE: fs/ecryptfs/main.c:347:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#392: FILE: fs/ecryptfs/main.c:351:
+	if (NULL == INODE_TO_LOWER(inode)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#395: FILE: fs/ecryptfs/main.c:354:
+		 * We are _NOT_ supposed to be failing here */

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#396: FILE: fs/ecryptfs/main.c:355:
+		if (NULL == INODE_TO_LOWER(inode)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#397: FILE: fs/ecryptfs/main.c:356:
+			BUG();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: fs/ecryptfs/main.c:368:
+	 * special? */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#416: FILE: fs/ecryptfs/main.c:375:
+	if (flag) {
[...]
+	} else {
[...]

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: fs/ecryptfs/main.c:408:
+ * debug=N ^I   - ecryptfs_verbosity level for debug output$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: fs/ecryptfs/main.c:410:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: fs/ecryptfs/main.c:416:
+ * ^Ialready in the keyring. Mounting will fail if the key can not be$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#458: FILE: fs/ecryptfs/main.c:417:
+ * ^Ifound.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#482: FILE: fs/ecryptfs/main.c:441:
+		int token;
+		if (!*p)

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: fs/ecryptfs/main.c:449:
+				char *sig_dst;
+				sig_src = args[0].from;

WARNING:SPLIT_STRING: quoted string split across lines
#497: FILE: fs/ecryptfs/main.c:456:
+						"The mount_crypt_stats "
+						"global_auth_tok_sig set to: "

WARNING:SPLIT_STRING: quoted string split across lines
#498: FILE: fs/ecryptfs/main.c:457:
+						"global_auth_tok_sig set to: "
+						"[%s]\n", sig_dst);

WARNING:LINE_SPACING: Missing a blank line after declarations
#505: FILE: fs/ecryptfs/main.c:464:
+				char *debug_src = args[0].from;
+				ecryptfs_verbosity =

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#506: FILE: fs/ecryptfs/main.c:465:
+				    (int)simple_strtol(debug_src, &debug_src,

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#509: FILE: fs/ecryptfs/main.c:468:
+						"Verbosity set to [%d]" "\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: fs/ecryptfs/main.c:476:
+				char *cipher_name_src;
+				cipher_name_src = args[0].from;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mount_crypt_stats->global_default_cipher_name'
#520: FILE: fs/ecryptfs/main.c:479:
+				    mount_crypt_stats->
+				    global_default_cipher_name;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:SPLIT_STRING: quoted string split across lines
#525: FILE: fs/ecryptfs/main.c:484:
+						"The mount_crypt_stats "
+						"global_default_cipher_name set to: "

WARNING:SPLIT_STRING: quoted string split across lines
#526: FILE: fs/ecryptfs/main.c:485:
+						"global_default_cipher_name set to: "
+						"[%s]\n", cipher_name_dst);

WARNING:SPLIT_STRING: quoted string split across lines
#541: FILE: fs/ecryptfs/main.c:500:
+		ecryptfs_printk(0, KERN_ERR, "You must supply a valid "
+				"passphrase auth tok signature as a mount "

WARNING:SPLIT_STRING: quoted string split across lines
#542: FILE: fs/ecryptfs/main.c:501:
+				"passphrase auth tok signature as a mount "
+				"parameter; see the eCryptfs README\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: fs/ecryptfs/main.c:506:
+^I^Iif (unlikely(cipher_name_len $

WARNING:LINE_SPACING: Missing a blank line after declarations
#547: FILE: fs/ecryptfs/main.c:506:
+		int cipher_name_len = strlen(ECRYPTFS_DEFAULT_CIPHER);
+		if (unlikely(cipher_name_len 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#550: FILE: fs/ecryptfs/main.c:509:
+			BUG();

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#556: FILE: fs/ecryptfs/main.c:515:
+		mount_crypt_stats->global_default_cipher_name[cipher_name_len]
+		    = '\0';

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:SPLIT_STRING: quoted string split across lines
#559: FILE: fs/ecryptfs/main.c:518:
+	ecryptfs_printk(1, KERN_NOTICE, "Requesting the key with description: "
+			"[%s]\n", mount_crypt_stats->global_auth_tok_sig);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#561: FILE: fs/ecryptfs/main.c:520:
+	 * The call to key_put is done in ecryptfs_put_super() */

WARNING:SPLIT_STRING: quoted string split across lines
#567: FILE: fs/ecryptfs/main.c:526:
+		ecryptfs_printk(0, KERN_ERR, "Could not find key with "
+				"description: [%s]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#576: FILE: fs/ecryptfs/main.c:535:
+		ecryptfs_printk(0, KERN_ERR, "Invalid auth_tok structure "
+				"returned from key");

WARNING:TYPO_SPELLING: 'Preform' may be misspelled - perhaps 'Perform'?
#590: FILE: fs/ecryptfs/main.c:549:
+ * Preform the cleanup for ecryptfs_read_super()
    ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#595: FILE: fs/ecryptfs/main.c:554:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; sb = [%p], sb->s_root = [%p] "
+			"SUPERBLOCK_TO_PRIVATE(sb) = [%p] sb->s_root.d_name->"

WARNING:SPLIT_STRING: quoted string split across lines
#596: FILE: fs/ecryptfs/main.c:555:
+			"SUPERBLOCK_TO_PRIVATE(sb) = [%p] sb->s_root.d_name->"
+			"name = [%s]\n", sb,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: fs/ecryptfs/main.c:569:
+ * @return ^I^IZero on success; non-zero otherwise$

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: fs/ecryptfs/main.c:575:
+	int err = 0;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; sb = [%p] raw_data = [%s] "

WARNING:SPLIT_STRING: quoted string split across lines
#617: FILE: fs/ecryptfs/main.c:576:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; sb = [%p] raw_data = [%s] "
+			"silent = [%d]\n", sb, (char *)raw_data, silent);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: fs/ecryptfs/main.c:589:
+			     .hash = 0,.name = "/",.len = 1});
 			              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: fs/ecryptfs/main.c:589:
+			     .hash = 0,.name = "/",.len = 1});
 			                          ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#665: FILE: fs/ecryptfs/main.c:624:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#667: FILE: fs/ecryptfs/main.c:626:
+	memset(&nd, 0, sizeof(struct nameidata));
 	        ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#667: FILE: fs/ecryptfs/main.c:626:
+	struct dentry *lower_root;
+	memset(&nd, 0, sizeof(struct nameidata));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#670: FILE: fs/ecryptfs/main.c:629:
+	err = path_lookup(dev_name, LOOKUP_FOLLOW, &nd);
 	                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#675: FILE: fs/ecryptfs/main.c:634:
+	lower_root = nd.dentry;
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#676: FILE: fs/ecryptfs/main.c:635:
+	SUPERBLOCK_TO_PRIVATE(sb)->lower_mnt = nd.mnt;
 	                                       ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#686: FILE: fs/ecryptfs/main.c:645:
+	if ((err = ecryptfs_interpose(lower_root, sb->s_root, sb, 0))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#686: FILE: fs/ecryptfs/main.c:645:
+	if ((err = ecryptfs_interpose(lower_root, sb->s_root, sb, 0))) {
+		goto out_free;
+	}

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#692: FILE: fs/ecryptfs/main.c:651:
+	path_release(&nd);
 	              ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: fs/ecryptfs/main.c:666:
+ * ecryptfs_interpolate(): links the lower filesystem into ecryptfs $

WARNING:LINE_SPACING: Missing a blank line after declarations
#715: FILE: fs/ecryptfs/main.c:674:
+	struct super_block *sb = NULL;
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; fs_type = [%p], flags = [%d],"

WARNING:SPLIT_STRING: quoted string split across lines
#716: FILE: fs/ecryptfs/main.c:675:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; fs_type = [%p], flags = [%d],"
+			" dev_name = [%s], raw_data = [%s]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#721: FILE: fs/ecryptfs/main.c:680:
+		ecryptfs_printk(0, KERN_ERR, "Getting sb failed. "
+				"sb = [%p]\n", sb);

WARNING:SPLIT_STRING: quoted string split across lines
#733: FILE: fs/ecryptfs/main.c:692:
+		ecryptfs_printk(0, KERN_ERR, "Reading sb failed. "
+				"sb = [%p]\n", sb);

WARNING:SPLIT_STRING: quoted string split across lines
#747: FILE: fs/ecryptfs/main.c:706:
+	ecryptfs_printk(1, KERN_NOTICE, "Enter; sb = [%p], sb->s_root = [%p] "
+			"SUPERBLOCK_TO_PRIVATE(sb) = [%p]\n", sb, sb->s_root,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#765: FILE: fs/ecryptfs/main.c:724:
+inode_info_init_once(void *vptr, kmem_cache_t * cachep, unsigned long flags)

WARNING:LINE_SPACING: Missing a blank line after declarations
#768: FILE: fs/ecryptfs/main.c:727:
+	struct ecryptfs_inode_info *ei = (struct ecryptfs_inode_info *)vptr;
+	if ((flags & (SLAB_CTOR_VERIFY | SLAB_CTOR_CONSTRUCTOR)) ==

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#777: FILE: fs/ecryptfs/main.c:736:
+#define ECRYPTFS_AUTH_TOK_LIST_ITEM_CACHE ^I0x0001$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#781: FILE: fs/ecryptfs/main.c:740:
+#define ECRYPTFS_FILE_INFO_CACHE ^I^I0x0010$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#782: FILE: fs/ecryptfs/main.c:741:
+#define ECRYPTFS_DENTRY_INFO_CACHE ^I^I0x0020$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#783: FILE: fs/ecryptfs/main.c:742:
+#define ECRYPTFS_INODE_INFO_CACHE ^I^I0x0040$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#784: FILE: fs/ecryptfs/main.c:743:
+#define ECRYPTFS_SB_INFO_CACHE ^I^I^I0x0080$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#785: FILE: fs/ecryptfs/main.c:744:
+#define ECRYPTFS_HEADER_CACHE_0 ^I^I0x0100$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#786: FILE: fs/ecryptfs/main.c:745:
+#define ECRYPTFS_HEADER_CACHE_1 ^I^I0x0200$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#787: FILE: fs/ecryptfs/main.c:746:
+#define ECRYPTFS_HEADER_CACHE_2 ^I^I0x0400$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#788: FILE: fs/ecryptfs/main.c:747:
+#define ECRYPTFS_LOWER_PAGE_CACHE ^I^I0x0800$

WARNING:SPLIT_STRING: quoted string split across lines
#818: FILE: fs/ecryptfs/main.c:777:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_auth_tok_list_item "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#828: FILE: fs/ecryptfs/main.c:787:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_file_cache "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#838: FILE: fs/ecryptfs/main.c:797:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_dentry_cache "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#848: FILE: fs/ecryptfs/main.c:807:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_inode_cache "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: fs/ecryptfs/main.c:817:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_sb_cache "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#867: FILE: fs/ecryptfs/main.c:826:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_headers_0 "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#876: FILE: fs/ecryptfs/main.c:835:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_headers_1 "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#885: FILE: fs/ecryptfs/main.c:844:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_headers_2 "
+				"kmem_cache_create failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#894: FILE: fs/ecryptfs/main.c:853:
+		ecryptfs_printk(0, KERN_WARNING, "ecryptfs_lower_page_cache "
+				"kmem_cache_create failed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#908: FILE: fs/ecryptfs/main.c:867:
+	int err;
+	if (ecryptfs_allocated_caches & ECRYPTFS_AUTH_TOK_LIST_ITEM_CACHE) {

WARNING:SPLIT_STRING: quoted string split across lines
#913: FILE: fs/ecryptfs/main.c:872:
+					"Not all ecryptfs_auth_tok_"
+					"list_item_cache structures were "

WARNING:MISSING_SPACE: break quoted strings at a space character
#913: FILE: fs/ecryptfs/main.c:872:
+					"Not all ecryptfs_auth_tok_"
+					"list_item_cache structures were "

WARNING:SPLIT_STRING: quoted string split across lines
#914: FILE: fs/ecryptfs/main.c:873:
+					"list_item_cache structures were "
+					"freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#921: FILE: fs/ecryptfs/main.c:880:
+					"Not all ecryptfs_file_info_"
+					"cache regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#921: FILE: fs/ecryptfs/main.c:880:
+					"Not all ecryptfs_file_info_"
+					"cache regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#929: FILE: fs/ecryptfs/main.c:888:
+					"Not all ecryptfs_dentry_info_"
+					"cache regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#929: FILE: fs/ecryptfs/main.c:888:
+					"Not all ecryptfs_dentry_info_"
+					"cache regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#937: FILE: fs/ecryptfs/main.c:896:
+					"Not all ecryptfs_inode_info_"
+					"cache regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#937: FILE: fs/ecryptfs/main.c:896:
+					"Not all ecryptfs_inode_info_"
+					"cache regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#945: FILE: fs/ecryptfs/main.c:904:
+					"Not all ecryptfs_sb_info_"
+					"cache regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#945: FILE: fs/ecryptfs/main.c:904:
+					"Not all ecryptfs_sb_info_"
+					"cache regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#952: FILE: fs/ecryptfs/main.c:911:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"header_cache_0 regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#952: FILE: fs/ecryptfs/main.c:911:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"header_cache_0 regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#959: FILE: fs/ecryptfs/main.c:918:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"header_cache_1 regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#959: FILE: fs/ecryptfs/main.c:918:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"header_cache_1 regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#966: FILE: fs/ecryptfs/main.c:925:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"header_cache_2 regions were freed\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#966: FILE: fs/ecryptfs/main.c:925:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"header_cache_2 regions were freed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#973: FILE: fs/ecryptfs/main.c:932:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"lower_page_cache regions were "

WARNING:MISSING_SPACE: break quoted strings at a space character
#973: FILE: fs/ecryptfs/main.c:932:
+			ecryptfs_printk(0, KERN_WARNING, "Not all ecryptfs_"
+					"lower_page_cache regions were "

WARNING:SPLIT_STRING: quoted string split across lines
#974: FILE: fs/ecryptfs/main.c:933:
+					"lower_page_cache regions were "
+					"freed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#983: FILE: fs/ecryptfs/main.c:942:
+	int rc;
+	rc = ecryptfs_init_kmem_caches();

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#985: FILE: fs/ecryptfs/main.c:944:
+		ecryptfs_printk(0, KERN_EMERG, "Failure occured while "
 		                                        ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#986: FILE: fs/ecryptfs/main.c:945:
+		ecryptfs_printk(0, KERN_EMERG, "Failure occured while "
+				"attempting to create caches [CREATED: %x]."

WARNING:SPLIT_STRING: quoted string split across lines
#987: FILE: fs/ecryptfs/main.c:946:
+				"attempting to create caches [CREATED: %x]."
+				"Now freeing caches.\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#999: FILE: fs/ecryptfs/main.c:958:
+	int rc;
+	ecryptfs_printk(1, KERN_NOTICE, "Unregistering eCryptfs\n");

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1003: FILE: fs/ecryptfs/main.c:962:
+		ecryptfs_printk(0, KERN_EMERG, "Failure occured while "
 		                                        ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1004: FILE: fs/ecryptfs/main.c:963:
+		ecryptfs_printk(0, KERN_EMERG, "Failure occured while "
+				"attempting to free caches: [%d]\n", rc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138728.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 148 warnings, 3 checks, 973 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138728.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
