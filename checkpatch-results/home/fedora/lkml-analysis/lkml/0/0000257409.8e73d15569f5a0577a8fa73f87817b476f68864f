WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> A well-chosen patch Subject: becomes a sort of globally-unique key by which

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#63: FILE: arch/ia64/ia32/binfmt_elf32.c:190:
+		current->mm->stack_vm = current->mm->total_vm = vma_pages(mpnt);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#101: FILE: arch/s390/kernel/compat_exec.c:72:
+		mm->stack_vm = mm->total_vm = vma_pages(mpnt);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#114: FILE: arch/x86_64/ia32/ia32_binfmt.c:371:
+		mm->stack_vm = mm->total_vm = vma_pages(mpnt);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#127: FILE: fs/exec.c:437:
+		mm->stack_vm = mm->total_vm = vma_pages(mpnt);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#193: FILE: fs/proc/task_mmu.c:13:
+	lib = (mm->exec_vm << (PAGE_SHIFT-10)) - text;
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#204: FILE: fs/proc/task_mmu.c:25:
+		data << (PAGE_SHIFT-10),
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#205: FILE: fs/proc/task_mmu.c:26:
+		mm->stack_vm << (PAGE_SHIFT-10), text, lib);
 		                           ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#273: FILE: include/linux/mm.h:757:
+void __vm_stat_account(struct mm_struct *, unsigned long, struct file *, long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#273: FILE: include/linux/mm.h:757:
+void __vm_stat_account(struct mm_struct *, unsigned long, struct file *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#273: FILE: include/linux/mm.h:757:
+void __vm_stat_account(struct mm_struct *, unsigned long, struct file *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#273: FILE: include/linux/mm.h:757:
+void __vm_stat_account(struct mm_struct *, unsigned long, struct file *, long);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: include/linux/mm.h:762:
+	__vm_stat_account(vma->vm_mm, vma->vm_flags, vma->vm_file,
+							vma_pages(vma));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: include/linux/mm.h:768:
+	__vm_stat_account(vma->vm_mm, vma->vm_flags, vma->vm_file,
+							-vma_pages(vma));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#297: FILE: include/linux/proc_fs.h:94:
+int task_statm(struct mm_struct *, int *, int *, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#297: FILE: include/linux/proc_fs.h:94:
+int task_statm(struct mm_struct *, int *, int *, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#297: FILE: include/linux/proc_fs.h:94:
+int task_statm(struct mm_struct *, int *, int *, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#297: FILE: include/linux/proc_fs.h:94:
+int task_statm(struct mm_struct *, int *, int *, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#297: FILE: include/linux/proc_fs.h:94:
+int task_statm(struct mm_struct *, int *, int *, int *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#298: FILE: include/linux/proc_fs.h:95:
+char *task_mem(struct mm_struct *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#298: FILE: include/linux/proc_fs.h:95:
+char *task_mem(struct mm_struct *, char *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: mm/mmap.c:733:
+void __vm_stat_account(struct mm_struct *mm, unsigned long flags,
+						struct file *file, long pages)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#329: FILE: mm/mmap.c:736:
+	const unsigned long stack_flags
+		= VM_STACK_FLAGS & (VM_GROWSUP|VM_GROWSDOWN);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#329: FILE: mm/mmap.c:736:
+		= VM_STACK_FLAGS & (VM_GROWSUP|VM_GROWSDOWN);
 		                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#406: FILE: mm/mremap.c:227:
+	__vm_stat_account(mm, vma->vm_flags, vma->vm_file, new_len>>PAGE_SHIFT);
 	                                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: mm/mremap.c:365:
+			__vm_stat_account(vma->vm_mm, vma->vm_flags,
+							vma->vm_file, pages);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 14 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000257409.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
