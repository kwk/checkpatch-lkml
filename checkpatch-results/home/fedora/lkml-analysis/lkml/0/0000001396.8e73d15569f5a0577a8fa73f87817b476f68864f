CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: fs/ext3/inode.c:1685:
+static ssize_t ext3_direct_IO(int rw, struct file *file,
 			const struct iovec *iov, loff_t offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: fs/ext4/inode.c:1684:
+static ssize_t ext4_direct_IO(int rw, struct file *file,
 			const struct iovec *iov, loff_t offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: fs/jfs/inode.c:291:
+static ssize_t jfs_direct_IO(int rw, struct file *file,
+		const struct iovec *iov, loff_t offset, unsigned long nr_segs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: fs/xfs/linux-2.6/xfs_lrw.c:840:
+		ret = generic_file_direct_write(file, iovp, &segs, pos,
+				offset, count, ocount, aio_complete, iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#500: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: include/linux/fs.h:1777:
+extern ssize_t generic_file_direct_write(struct file *, const struct iovec *,
+					unsigned long *, loff_t, loff_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: include/linux/fs.h:1850:
+static inline ssize_t blockdev_direct_IO(int rw, struct file *file,
+	const struct iovec *iov, loff_t offset, unsigned long nr_segs,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#537: FILE: include/linux/nfs_fs.h:370:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: include/linux/nfs_fs.h:371:
+extern ssize_t nfs_direct_IO(int, struct file *, const struct iovec *, loff_t,
+			unsigned long, file_endio_t, void *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: mm/filemap.c:45:
+generic_file_direct_IO(int rw, struct file *file, const struct iovec *iov,
+			loff_t offset, unsigned long nr_segs,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#563: FILE: mm/filemap.c:1227:
+			retval = generic_file_direct_IO(READ, filp, iov, pos,
 			                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: mm/filemap.c:1228:
+			retval = generic_file_direct_IO(READ, filp, iov, pos,
+						nr_segs, aio_complete, iocb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: mm/filemap.c:2083:
+generic_file_direct_write(struct file *file, const struct iovec *iov,
+		unsigned long *nr_segs, loff_t pos, loff_t *ppos, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: mm/filemap.c:2348:
+		written = generic_file_direct_write(file, iov, &nr_segs, pos,
+							ppos, count, ocount,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: mm/filemap.c:2463:
+generic_file_direct_IO(int rw, struct file *file, const struct iovec *iov,
+	loff_t offset, unsigned long nr_segs,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001396.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 17 warnings, 14 checks, 474 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001396.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
