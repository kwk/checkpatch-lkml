WARNING:SPACING: space prohibited between function name and open parenthesis '('
#52: FILE: fs/inode.c:79:
+static struct inode *alloc_inode (struct super_block *sb)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: fs/inode.c:107:
+void inode_init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: fs/inode.c:107:
+void inode_init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: fs/inode.c:835:
+struct inode * get_empty_inode(struct super_block *sb)

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: fs/inode.c:849:
+                inode->i_dev = sb ? sb->s_dev : NODEV;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/inode.c:849:
+                inode->i_dev = sb ? sb->s_dev : NODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: fs/inode.c:850:
+                inode->i_blkbits = sb ? sb->s_blocksize_bits : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/inode.c:850:
+                inode->i_blkbits = sb ? sb->s_blocksize_bits : 0;$

WARNING:SPACING: Unnecessary space before function pointer arguments
#158: FILE: include/linux/fs.h:888:
+	struct inode * (*alloc_inode) (struct super_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#158: FILE: include/linux/fs.h:888:
+	struct inode * (*alloc_inode) (struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#159: FILE: include/linux/fs.h:889:
+	void (*destroy_inode) (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#159: FILE: include/linux/fs.h:889:
+	void (*destroy_inode) (struct inode *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: include/linux/fs.h:1350:
+extern struct inode * get_empty_inode(struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/linux/fs.h:1350:
+extern struct inode * get_empty_inode(struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#168: FILE: include/linux/fs.h:1350:
+extern struct inode * get_empty_inode(struct super_block *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000487069.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 8 warnings, 1 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000487069.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
