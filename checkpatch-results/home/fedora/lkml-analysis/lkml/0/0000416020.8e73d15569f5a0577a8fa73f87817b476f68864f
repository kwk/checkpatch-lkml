WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#31: 
an API roughly similiar in concept to the API implemented by MontaVista
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/CREDITS	Tue Nov  5 17:26:15 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#62: FILE: MAINTAINERS:322:
+P:	Scott Murray
+M:	scottm@somanetworks.com

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: drivers/hotplug/cpci_hotplug.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: drivers/hotplug/cpci_hotplug.h:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#147: FILE: drivers/hotplug/cpci_hotplug.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACING: Unnecessary space before function pointer arguments
#180: FILE: drivers/hotplug/cpci_hotplug.h:56:
+	int (*query_enum) (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#181: FILE: drivers/hotplug/cpci_hotplug.h:57:
+	int (*enable_irq) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#182: FILE: drivers/hotplug/cpci_hotplug.h:58:
+	int (*disable_irq) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#183: FILE: drivers/hotplug/cpci_hotplug.h:59:
+	int (*check_irq) (void *dev_id);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#184: FILE: drivers/hotplug/cpci_hotplug.h:60:
+	int (*hardware_test) (struct slot* slot, u32 value);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#184: FILE: drivers/hotplug/cpci_hotplug.h:60:
+	int (*hardware_test) (struct slot* slot, u32 value);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#185: FILE: drivers/hotplug/cpci_hotplug.h:61:
+	u8  (*get_power) (struct slot* slot);

WARNING:SPACING: Unnecessary space before function pointer arguments
#185: FILE: drivers/hotplug/cpci_hotplug.h:61:
+	u8  (*get_power) (struct slot* slot);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#186: FILE: drivers/hotplug/cpci_hotplug.h:62:
+	int (*set_power) (struct slot* slot, int value);

WARNING:SPACING: Unnecessary space before function pointer arguments
#186: FILE: drivers/hotplug/cpci_hotplug.h:62:
+	int (*set_power) (struct slot* slot, int value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: drivers/hotplug/cpci_hotplug.h:74:
+extern int cpci_hp_register_controller(struct cpci_hp_controller *controller);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: drivers/hotplug/cpci_hotplug.h:75:
+extern int cpci_hp_unregister_controller(struct cpci_hp_controller *controller);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: drivers/hotplug/cpci_hotplug.h:76:
+extern int cpci_hp_register_bus(struct pci_bus *bus, u8 first, u8 last);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: drivers/hotplug/cpci_hotplug.h:77:
+extern int cpci_hp_unregister_bus(struct pci_bus *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: drivers/hotplug/cpci_hotplug.h:78:
+extern struct slot *cpci_find_slot(struct pci_bus *bus, unsigned int devfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: drivers/hotplug/cpci_hotplug.h:79:
+extern int cpci_hp_start(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: drivers/hotplug/cpci_hotplug.h:80:
+extern int cpci_hp_stop(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#210: FILE: drivers/hotplug/cpci_hotplug.h:86:
+extern u8 cpci_get_attention_status(struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: drivers/hotplug/cpci_hotplug.h:87:
+extern u8 cpci_get_latch_status(struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: drivers/hotplug/cpci_hotplug.h:88:
+extern u8 cpci_get_adapter_status(struct slot *slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: drivers/hotplug/cpci_hotplug.h:89:
+extern u16 cpci_get_hs_csr(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: drivers/hotplug/cpci_hotplug.h:89:
+extern u16 cpci_get_hs_csr(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#214: FILE: drivers/hotplug/cpci_hotplug.h:90:
+extern u16 cpci_set_hs_csr(struct slot * slot, u16 hs_csr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: drivers/hotplug/cpci_hotplug.h:90:
+extern u16 cpci_set_hs_csr(struct slot * slot, u16 hs_csr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: drivers/hotplug/cpci_hotplug.h:91:
+extern int cpci_set_attention_status(struct slot *slot, int status);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#216: FILE: drivers/hotplug/cpci_hotplug.h:92:
+extern int cpci_check_and_clear_ins(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: drivers/hotplug/cpci_hotplug.h:92:
+extern int cpci_check_and_clear_ins(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: drivers/hotplug/cpci_hotplug.h:93:
+extern int cpci_check_ext(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: drivers/hotplug/cpci_hotplug.h:93:
+extern int cpci_check_ext(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: drivers/hotplug/cpci_hotplug.h:94:
+extern int cpci_clear_ext(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#218: FILE: drivers/hotplug/cpci_hotplug.h:94:
+extern int cpci_clear_ext(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: drivers/hotplug/cpci_hotplug.h:95:
+extern int cpci_led_on(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: drivers/hotplug/cpci_hotplug.h:95:
+extern int cpci_led_on(struct slot * slot);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: drivers/hotplug/cpci_hotplug.h:96:
+extern int cpci_led_off(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: drivers/hotplug/cpci_hotplug.h:96:
+extern int cpci_led_off(struct slot * slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: drivers/hotplug/cpci_hotplug.h:97:
+extern int cpci_configure_slot(struct slot *slot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: drivers/hotplug/cpci_hotplug.h:98:
+extern int cpci_unconfigure_slot(struct slot *slot);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: drivers/hotplug/cpci_hotplug_core.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#250: FILE: drivers/hotplug/cpci_hotplug_core.c:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#251: FILE: drivers/hotplug/cpci_hotplug_core.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: drivers/hotplug/cpci_hotplug_core.c:51:
+		if(cpci_debug)					\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#280: FILE: drivers/hotplug/cpci_hotplug_core.c:52:
+			printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/hotplug/cpci_hotplug_core.c:52:
+			printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: drivers/hotplug/cpci_hotplug_core.c:53:
+^I^I^I^IMY_NAME , ## arg); ^I^I\$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#281: FILE: drivers/hotplug/cpci_hotplug_core.c:53:
+				MY_NAME , ## arg); 		\
 				        ^

ERROR:SPACING: space required before the open parenthesis '('
#282: FILE: drivers/hotplug/cpci_hotplug_core.c:54:
+	} while(0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#283: FILE: drivers/hotplug/cpci_hotplug_core.c:55:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#283: FILE: drivers/hotplug/cpci_hotplug_core.c:55:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", MY_NAME , ## arg)
                                                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: drivers/hotplug/cpci_hotplug_core.c:56:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#284: FILE: drivers/hotplug/cpci_hotplug_core.c:56:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", MY_NAME , ## arg)
                                                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#285: FILE: drivers/hotplug/cpci_hotplug_core.c:57:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#285: FILE: drivers/hotplug/cpci_hotplug_core.c:57:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", MY_NAME , ## arg)
                                                                              ^

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#293: FILE: drivers/hotplug/cpci_hotplug_core.c:65:
+static struct semaphore event_semaphore;	/* mutex for process loop (up if something to process) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#294: FILE: drivers/hotplug/cpci_hotplug_core.c:66:
+static struct semaphore thread_exit;		/* guard ensure thread has exited before calling it quits */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: drivers/hotplug/cpci_hotplug_core.c:72:
+static int get_power_status(struct hotplug_slot *slot, u8 * value);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#301: FILE: drivers/hotplug/cpci_hotplug_core.c:73:
+static int get_attention_status(struct hotplug_slot *slot, u8 * value);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: drivers/hotplug/cpci_hotplug_core.c:74:
+static int get_latch_status(struct hotplug_slot *slot, u8 * value);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: drivers/hotplug/cpci_hotplug_core.c:75:
+static int get_adapter_status(struct hotplug_slot *slot, u8 * value);

ERROR:SPACING: space required before the open parenthesis '('
#321: FILE: drivers/hotplug/cpci_hotplug_core.c:93:
+	if(!slot) {

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/hotplug/cpci_hotplug_core.c:97:
+	if(slot->magic != SLOT_MAGIC) {

ERROR:SPACING: space required before the open parenthesis '('
#329: FILE: drivers/hotplug/cpci_hotplug_core.c:101:
+	if(!slot->hotplug_slot) {

ERROR:SPACING: space required before the open parenthesis '('
#341: FILE: drivers/hotplug/cpci_hotplug_core.c:113:
+	if(!hotplug_slot) {

CHECK:SPACING: No space is necessary after a cast
#346: FILE: drivers/hotplug/cpci_hotplug_core.c:118:
+	slot = (struct slot *) hotplug_slot->private;

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: drivers/hotplug/cpci_hotplug_core.c:119:
+	if(slot_paranoia_check(slot, function))

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: drivers/hotplug/cpci_hotplug_core.c:129:
+	if(!(hotplug_slot && hotplug_slot->info))

ERROR:SPACING: space required before the open parenthesis '('
#369: FILE: drivers/hotplug/cpci_hotplug_core.c:141:
+	if(!(hotplug_slot && hotplug_slot->info))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#379: FILE: drivers/hotplug/cpci_hotplug_core.c:151:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#382: FILE: drivers/hotplug/cpci_hotplug_core.c:154:
+	if(slot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#382: FILE: drivers/hotplug/cpci_hotplug_core.c:154:
+	if(slot == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#385: FILE: drivers/hotplug/cpci_hotplug_core.c:157:
+	dbg("%s - physical_slot = %s", __FUNCTION__, hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#387: FILE: drivers/hotplug/cpci_hotplug_core.c:159:
+	if(controller->ops->set_power) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#387: FILE: drivers/hotplug/cpci_hotplug_core.c:159:
+	if(controller->ops->set_power) {
+		retval = controller->ops->set_power(slot, 1);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#397: FILE: drivers/hotplug/cpci_hotplug_core.c:169:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#400: FILE: drivers/hotplug/cpci_hotplug_core.c:172:
+	if(slot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#400: FILE: drivers/hotplug/cpci_hotplug_core.c:172:
+	if(slot == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#403: FILE: drivers/hotplug/cpci_hotplug_core.c:175:
+	dbg("%s - physical_slot = %s", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#407: FILE: drivers/hotplug/cpci_hotplug_core.c:179:
+	    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: drivers/hotplug/cpci_hotplug_core.c:180:
+	if((retval = cpci_unconfigure_slot(slot))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#408: FILE: drivers/hotplug/cpci_hotplug_core.c:180:
+	if((retval = cpci_unconfigure_slot(slot))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#410: FILE: drivers/hotplug/cpci_hotplug_core.c:182:
+		    __FUNCTION__, slot->hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#414: FILE: drivers/hotplug/cpci_hotplug_core.c:186:
+	    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#417: FILE: drivers/hotplug/cpci_hotplug_core.c:189:
+	if(cpci_clear_ext(slot)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#419: FILE: drivers/hotplug/cpci_hotplug_core.c:191:
+		    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#424: FILE: drivers/hotplug/cpci_hotplug_core.c:196:
+	if(controller->ops->set_power) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#424: FILE: drivers/hotplug/cpci_hotplug_core.c:196:
+	if(controller->ops->set_power) {
+		retval = controller->ops->set_power(slot, 0);
+	}

ERROR:SPACING: space required before the open parenthesis '('
#428: FILE: drivers/hotplug/cpci_hotplug_core.c:200:
+	if(update_adapter_status(slot->hotplug_slot, 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#428: FILE: drivers/hotplug/cpci_hotplug_core.c:200:
+	if(update_adapter_status(slot->hotplug_slot, 0)) {
+		warn("failure to update adapter file");
+	}

ERROR:SPACING: space required before the open parenthesis '('
#442: FILE: drivers/hotplug/cpci_hotplug_core.c:214:
+	if(controller->ops->get_power) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#442: FILE: drivers/hotplug/cpci_hotplug_core.c:214:
+	if(controller->ops->get_power) {
+		power = controller->ops->get_power(slot);
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#449: FILE: drivers/hotplug/cpci_hotplug_core.c:221:
+get_power_status(struct hotplug_slot *hotplug_slot, u8 * value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#451: FILE: drivers/hotplug/cpci_hotplug_core.c:223:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#453: FILE: drivers/hotplug/cpci_hotplug_core.c:225:
+	if(slot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#453: FILE: drivers/hotplug/cpci_hotplug_core.c:225:
+	if(slot == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#460: FILE: drivers/hotplug/cpci_hotplug_core.c:232:
+get_attention_status(struct hotplug_slot *hotplug_slot, u8 * value)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#462: FILE: drivers/hotplug/cpci_hotplug_core.c:234:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#464: FILE: drivers/hotplug/cpci_hotplug_core.c:236:
+	if(slot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#464: FILE: drivers/hotplug/cpci_hotplug_core.c:236:
+	if(slot == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#473: FILE: drivers/hotplug/cpci_hotplug_core.c:245:
+	struct slot *slot = get_slot(hotplug_slot, __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#475: FILE: drivers/hotplug/cpci_hotplug_core.c:247:
+	if(slot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot"
#475: FILE: drivers/hotplug/cpci_hotplug_core.c:247:
+	if(slot == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: drivers/hotplug/cpci_hotplug_core.c:264:
+get_latch_status(struct hotplug_slot *hotplug_slot, u8 * value)

ERROR:SPACING: space required before the open parenthesis '('
#494: FILE: drivers/hotplug/cpci_hotplug_core.c:266:
+	if(hotplug_slot == NULL || hotplug_slot->info == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotplug_slot"
#494: FILE: drivers/hotplug/cpci_hotplug_core.c:266:
+	if(hotplug_slot == NULL || hotplug_slot->info == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotplug_slot->info"
#494: FILE: drivers/hotplug/cpci_hotplug_core.c:266:
+	if(hotplug_slot == NULL || hotplug_slot->info == NULL)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: drivers/hotplug/cpci_hotplug_core.c:273:
+get_adapter_status(struct hotplug_slot *hotplug_slot, u8 * value)

ERROR:SPACING: space required before the open parenthesis '('
#503: FILE: drivers/hotplug/cpci_hotplug_core.c:275:
+	if(hotplug_slot == NULL || hotplug_slot->info == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotplug_slot"
#503: FILE: drivers/hotplug/cpci_hotplug_core.c:275:
+	if(hotplug_slot == NULL || hotplug_slot->info == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotplug_slot->info"
#503: FILE: drivers/hotplug/cpci_hotplug_core.c:275:
+	if(hotplug_slot == NULL || hotplug_slot->info == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#527: FILE: drivers/hotplug/cpci_hotplug_core.c:299:
+	if(!(controller && bus)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#527: FILE: drivers/hotplug/cpci_hotplug_core.c:299:
+	if(!(controller && bus)) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#530: FILE: drivers/hotplug/cpci_hotplug_core.c:302:
+	if(last < first) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#530: FILE: drivers/hotplug/cpci_hotplug_core.c:302:
+	if(last < first) {
+		return -EINVAL;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#539: FILE: drivers/hotplug/cpci_hotplug_core.c:311:
+		slot = kmalloc(sizeof (struct slot), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*slot)...) over kmalloc(sizeof (struct slot)...)
#539: FILE: drivers/hotplug/cpci_hotplug_core.c:311:
+		slot = kmalloc(sizeof (struct slot), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#540: FILE: drivers/hotplug/cpci_hotplug_core.c:312:
+		if(!slot)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#542: FILE: drivers/hotplug/cpci_hotplug_core.c:314:
+		memset(slot, 0, sizeof (struct slot));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#545: FILE: drivers/hotplug/cpci_hotplug_core.c:317:
+		    kmalloc(sizeof (struct hotplug_slot), GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: drivers/hotplug/cpci_hotplug_core.c:318:
+		if(!hotplug_slot) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#550: FILE: drivers/hotplug/cpci_hotplug_core.c:322:
+		memset(hotplug_slot, 0, sizeof (struct hotplug_slot));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: drivers/hotplug/cpci_hotplug_core.c:325:
+		info = kmalloc(sizeof (struct hotplug_slot_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof (struct hotplug_slot_info)...)
#553: FILE: drivers/hotplug/cpci_hotplug_core.c:325:
+		info = kmalloc(sizeof (struct hotplug_slot_info), GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#554: FILE: drivers/hotplug/cpci_hotplug_core.c:326:
+		if(!info) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#559: FILE: drivers/hotplug/cpci_hotplug_core.c:331:
+		memset(info, 0, sizeof (struct hotplug_slot_info));

ERROR:SPACING: space required before the open parenthesis '('
#563: FILE: drivers/hotplug/cpci_hotplug_core.c:335:
+		if(!name) {

ERROR:SPACING: space required before the open parenthesis '('
#590: FILE: drivers/hotplug/cpci_hotplug_core.c:362:
+		if(status) {

ERROR:SPACING: space required before the open parenthesis '('
#615: FILE: drivers/hotplug/cpci_hotplug_core.c:387:
+	if(!bus) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#615: FILE: drivers/hotplug/cpci_hotplug_core.c:387:
+	if(!bus) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#620: FILE: drivers/hotplug/cpci_hotplug_core.c:392:
+	if(!slots) {

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: drivers/hotplug/cpci_hotplug_core.c:398:
+		if(slot->bus == bus) {

ERROR:SPACING: space required before the open parenthesis '('
#629: FILE: drivers/hotplug/cpci_hotplug_core.c:401:
+			if(status) {

ERROR:SPACING: space required before the open parenthesis '('
#655: FILE: drivers/hotplug/cpci_hotplug_core.c:427:
+	if(!bus) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#655: FILE: drivers/hotplug/cpci_hotplug_core.c:427:
+	if(!bus) {
+		return NULL;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#660: FILE: drivers/hotplug/cpci_hotplug_core.c:432:
+	if(!slots) {

ERROR:SPACING: space required before the open parenthesis '('
#667: FILE: drivers/hotplug/cpci_hotplug_core.c:439:
+		if(slot->bus == bus && slot->devfn == devfn) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpci_hp_intr', this function's name, in a string
#680: FILE: drivers/hotplug/cpci_hotplug_core.c:452:
+	dbg("entered cpci_hp_intr");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open parenthesis '('
#683: FILE: drivers/hotplug/cpci_hotplug_core.c:455:
+	if((controller->irq_flags & SA_SHIRQ) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: drivers/hotplug/cpci_hotplug_core.c:456:
+	if((controller->irq_flags & SA_SHIRQ) &&
+	    !controller->ops->check_irq(controller->dev_id)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpci_hp_intr', this function's name, in a string
#685: FILE: drivers/hotplug/cpci_hotplug_core.c:457:
+		dbg("exited cpci_hp_intr, not our interrupt");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpci_hp_intr', this function's name, in a string
#695: FILE: drivers/hotplug/cpci_hotplug_core.c:467:
+	dbg("exited cpci_hp_intr");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#708: FILE: drivers/hotplug/cpci_hotplug_core.c:480:
+	struct pci_dev* dev;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#710: FILE: drivers/hotplug/cpci_hotplug_core.c:482:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#712: FILE: drivers/hotplug/cpci_hotplug_core.c:484:
+	if(!slots) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#719: FILE: drivers/hotplug/cpci_hotplug_core.c:491:
+		    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#720: FILE: drivers/hotplug/cpci_hotplug_core.c:492:
+		if(cpci_check_and_clear_ins(slot)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#722: FILE: drivers/hotplug/cpci_hotplug_core.c:494:
+			    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#724: FILE: drivers/hotplug/cpci_hotplug_core.c:496:
+			if(dev) {

ERROR:SPACING: space required before the open parenthesis '('
#725: FILE: drivers/hotplug/cpci_hotplug_core.c:497:
+				if(update_adapter_status(slot->hotplug_slot, 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#725: FILE: drivers/hotplug/cpci_hotplug_core.c:497:
+				if(update_adapter_status(slot->hotplug_slot, 1)) {
+					warn("failure to update adapter file");
+				}

ERROR:SPACING: space required before the open parenthesis '('
#728: FILE: drivers/hotplug/cpci_hotplug_core.c:500:
+				if(update_latch_status(slot->hotplug_slot, 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#728: FILE: drivers/hotplug/cpci_hotplug_core.c:500:
+				if(update_latch_status(slot->hotplug_slot, 1)) {
+					warn("failure to update latch file");
+				}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#734: FILE: drivers/hotplug/cpci_hotplug_core.c:506:
+				    __FUNCTION__, slot->hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#739: FILE: drivers/hotplug/cpci_hotplug_core.c:511:
+	dbg("%s - exit", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#752: FILE: drivers/hotplug/cpci_hotplug_core.c:524:
+	if(!slots) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#757: FILE: drivers/hotplug/cpci_hotplug_core.c:529:
+	extracted = inserted = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#761: FILE: drivers/hotplug/cpci_hotplug_core.c:533:
+		    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#762: FILE: drivers/hotplug/cpci_hotplug_core.c:534:
+		if(cpci_check_and_clear_ins(slot)) {

ERROR:SPACING: space required before the open parenthesis '('
#766: FILE: drivers/hotplug/cpci_hotplug_core.c:538:
+			if(slot->dev) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#774: FILE: drivers/hotplug/cpci_hotplug_core.c:546:
+			    __FUNCTION__, slot->hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#779: FILE: drivers/hotplug/cpci_hotplug_core.c:551:
+			    __FUNCTION__, slot->hotplug_slot->name, hs_csr);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#783: FILE: drivers/hotplug/cpci_hotplug_core.c:555:
+			    __FUNCTION__, slot->hotplug_slot->name);

ERROR:SPACING: space required before the open parenthesis '('
#784: FILE: drivers/hotplug/cpci_hotplug_core.c:556:
+			if(cpci_configure_slot(slot)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#786: FILE: drivers/hotplug/cpci_hotplug_core.c:558:
+				    __FUNCTION__, slot->hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#790: FILE: drivers/hotplug/cpci_hotplug_core.c:562:
+			    __FUNCTION__, slot->hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#795: FILE: drivers/hotplug/cpci_hotplug_core.c:567:
+			    __FUNCTION__, slot->hotplug_slot->name, hs_csr);

ERROR:SPACING: space required before the open parenthesis '('
#797: FILE: drivers/hotplug/cpci_hotplug_core.c:569:
+			if(update_latch_status(slot->hotplug_slot, 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#797: FILE: drivers/hotplug/cpci_hotplug_core.c:569:
+			if(update_latch_status(slot->hotplug_slot, 1)) {
+				warn("failure to update latch file");
+			}

ERROR:SPACING: space required before the open parenthesis '('
#801: FILE: drivers/hotplug/cpci_hotplug_core.c:573:
+			if(update_adapter_status(slot->hotplug_slot, 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#801: FILE: drivers/hotplug/cpci_hotplug_core.c:573:
+			if(update_adapter_status(slot->hotplug_slot, 1)) {
+				warn("failure to update adapter file");
+			}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#810: FILE: drivers/hotplug/cpci_hotplug_core.c:582:
+			    __FUNCTION__, slot->hotplug_slot->name, hs_csr);

ERROR:SPACING: space required before the open parenthesis '('
#813: FILE: drivers/hotplug/cpci_hotplug_core.c:585:
+		} else if(cpci_check_ext(slot)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#818: FILE: drivers/hotplug/cpci_hotplug_core.c:590:
+			    __FUNCTION__, slot->hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#823: FILE: drivers/hotplug/cpci_hotplug_core.c:595:
+			    __FUNCTION__, slot->hotplug_slot->name, hs_csr);

ERROR:SPACING: space required before the open parenthesis '('
#825: FILE: drivers/hotplug/cpci_hotplug_core.c:597:
+			if(!slot->extracting) {

ERROR:SPACING: space required before the open parenthesis '('
#826: FILE: drivers/hotplug/cpci_hotplug_core.c:598:
+				if(update_latch_status(slot->hotplug_slot, 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#826: FILE: drivers/hotplug/cpci_hotplug_core.c:598:
+				if(update_latch_status(slot->hotplug_slot, 0)) {
+					warn("failure to update latch file");
+				}

ERROR:SPACING: space required before the open parenthesis '('
#835: FILE: drivers/hotplug/cpci_hotplug_core.c:607:
+	if(inserted || extracted) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#838: FILE: drivers/hotplug/cpci_hotplug_core.c:610:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#838: FILE: drivers/hotplug/cpci_hotplug_core.c:610:
+	else {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#857: FILE: drivers/hotplug/cpci_hotplug_core.c:629:
+	dbg("%s - event thread started", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#858: FILE: drivers/hotplug/cpci_hotplug_core.c:630:
+	while(1) {

ERROR:SPACING: space required before the open parenthesis '('
#863: FILE: drivers/hotplug/cpci_hotplug_core.c:635:
+		if(thread_finished || signal_pending(current))

ERROR:SPACING: space required before the open parenthesis '('
#865: FILE: drivers/hotplug/cpci_hotplug_core.c:637:
+		while(controller->ops->query_enum()) {

ERROR:SPACING: space required before the open parenthesis '('
#867: FILE: drivers/hotplug/cpci_hotplug_core.c:639:
+			if(rc > 0) {

ERROR:SPACING: space required before the open parenthesis '('
#871: FILE: drivers/hotplug/cpci_hotplug_core.c:643:
+			} else if(rc < 0) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#872: FILE: drivers/hotplug/cpci_hotplug_core.c:644:
+				dbg("%s - error checking slots", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#880: FILE: drivers/hotplug/cpci_hotplug_core.c:652:
+			if(slot->extracting) {

ERROR:SPACING: space required before the open parenthesis '('
#887: FILE: drivers/hotplug/cpci_hotplug_core.c:659:
+				if(update_adapter_status(slot->hotplug_slot, 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#887: FILE: drivers/hotplug/cpci_hotplug_core.c:659:
+				if(update_adapter_status(slot->hotplug_slot, 0)) {
+					warn("failure to update adapter file");
+				}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#895: FILE: drivers/hotplug/cpci_hotplug_core.c:667:
+		dbg("%s - re-enabling irq", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#899: FILE: drivers/hotplug/cpci_hotplug_core.c:671:
+	dbg("%s - event thread signals exit", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#917: FILE: drivers/hotplug/cpci_hotplug_core.c:689:
+	while(1) {

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: drivers/hotplug/cpci_hotplug_core.c:690:
+		if(thread_finished || signal_pending(current))

ERROR:SPACING: space required before the open parenthesis '('
#921: FILE: drivers/hotplug/cpci_hotplug_core.c:693:
+		while(controller->ops->query_enum()) {

ERROR:SPACING: space required before the open parenthesis '('
#923: FILE: drivers/hotplug/cpci_hotplug_core.c:695:
+			if(rc > 0) {

ERROR:SPACING: space required before the open parenthesis '('
#927: FILE: drivers/hotplug/cpci_hotplug_core.c:699:
+			} else if(rc < 0) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#928: FILE: drivers/hotplug/cpci_hotplug_core.c:700:
+				dbg("%s - error checking slots", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#936: FILE: drivers/hotplug/cpci_hotplug_core.c:708:
+			if(slot->extracting) {

ERROR:SPACING: space required before the open parenthesis '('
#943: FILE: drivers/hotplug/cpci_hotplug_core.c:715:
+				if(update_adapter_status(slot->hotplug_slot, 0)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#943: FILE: drivers/hotplug/cpci_hotplug_core.c:715:
+				if(update_adapter_status(slot->hotplug_slot, 0)) {
+					warn("failure to update adapter file");
+				}

ERROR:SPACING: space required before the open parenthesis '('
#968: FILE: drivers/hotplug/cpci_hotplug_core.c:740:
+	if(controller->irq) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#968: FILE: drivers/hotplug/cpci_hotplug_core.c:740:
+	if(controller->irq) {
[...]
+	} else {
[...]

ERROR:SPACING: space required before the open parenthesis '('
#973: FILE: drivers/hotplug/cpci_hotplug_core.c:745:
+	if(pid < 0) {

ERROR:SPACING: space required before the open parenthesis '('
#986: FILE: drivers/hotplug/cpci_hotplug_core.c:758:
+	if(controller->irq) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#986: FILE: drivers/hotplug/cpci_hotplug_core.c:758:
+	if(controller->irq) {
+		up(&event_semaphore);
+	}

ERROR:SPACING: space required before the open parenthesis '('
#998: FILE: drivers/hotplug/cpci_hotplug_core.c:770:
+	if(!controller) {

ERROR:SPACING: space required before the open parenthesis '('
#1000: FILE: drivers/hotplug/cpci_hotplug_core.c:772:
+		if(controller->irq) {

ERROR:SPACING: space required before the open parenthesis '('
#1001: FILE: drivers/hotplug/cpci_hotplug_core.c:773:
+			if(request_irq(controller->irq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: drivers/hotplug/cpci_hotplug_core.c:774:
+			if(request_irq(controller->irq,
+					cpci_hp_intr,

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1005: FILE: drivers/hotplug/cpci_hotplug_core.c:777:
+				err("Can't get irq %d for the hotplug cPCI controller", controller->irq);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1008: FILE: drivers/hotplug/cpci_hotplug_core.c:780:
+			dbg("%s - acquired controller irq %d", __FUNCTION__,

ERROR:SPACING: space required before the open parenthesis '('
#1023: FILE: drivers/hotplug/cpci_hotplug_core.c:795:
+	if(controller) {

ERROR:SPACING: space required before the open parenthesis '('
#1024: FILE: drivers/hotplug/cpci_hotplug_core.c:796:
+		if(!thread_finished) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1024: FILE: drivers/hotplug/cpci_hotplug_core.c:796:
+		if(!thread_finished) {
+			cpci_stop_thread();
+		}

ERROR:SPACING: space required before the open parenthesis '('
#1027: FILE: drivers/hotplug/cpci_hotplug_core.c:799:
+		if(controller->irq) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1027: FILE: drivers/hotplug/cpci_hotplug_core.c:799:
+		if(controller->irq) {
+			free_irq(controller->irq, controller->dev_id);
+		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1043: FILE: drivers/hotplug/cpci_hotplug_core.c:815:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1044: FILE: drivers/hotplug/cpci_hotplug_core.c:816:
+	if(!controller) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1044: FILE: drivers/hotplug/cpci_hotplug_core.c:816:
+	if(!controller) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1049: FILE: drivers/hotplug/cpci_hotplug_core.c:821:
+	if(!slots) {

ERROR:SPACING: space required before the open parenthesis '('
#1055: FILE: drivers/hotplug/cpci_hotplug_core.c:827:
+	if(first) {

ERROR:SPACING: space required before the open parenthesis '('
#1057: FILE: drivers/hotplug/cpci_hotplug_core.c:829:
+		if(status) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1057: FILE: drivers/hotplug/cpci_hotplug_core.c:829:
+		if(status) {
+			return status;
+		}

ERROR:SPACING: space required before the open parenthesis '('
#1064: FILE: drivers/hotplug/cpci_hotplug_core.c:836:
+	if(status) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1064: FILE: drivers/hotplug/cpci_hotplug_core.c:836:
+	if(status) {
+		return status;
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1067: FILE: drivers/hotplug/cpci_hotplug_core.c:839:
+	dbg("%s - thread started", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1069: FILE: drivers/hotplug/cpci_hotplug_core.c:841:
+	if(controller->irq) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1071: FILE: drivers/hotplug/cpci_hotplug_core.c:843:
+		dbg("%s - enabling irq", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1074: FILE: drivers/hotplug/cpci_hotplug_core.c:846:
+	dbg("%s - exit", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1081: FILE: drivers/hotplug/cpci_hotplug_core.c:853:
+	if(!controller) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1081: FILE: drivers/hotplug/cpci_hotplug_core.c:853:
+	if(!controller) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1085: FILE: drivers/hotplug/cpci_hotplug_core.c:857:
+	if(controller->irq) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1087: FILE: drivers/hotplug/cpci_hotplug_core.c:859:
+		dbg("%s - disabling irq", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1105: FILE: drivers/hotplug/cpci_hotplug_core.c:877:
+	if(!slots) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1105: FILE: drivers/hotplug/cpci_hotplug_core.c:877:
+	if(!slots) {
+		goto null_cleanup;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#1117: FILE: drivers/hotplug/cpci_hotplug_core.c:889:
+      null_cleanup:

WARNING:RETURN_VOID: void function return statements are not generally useful
#1120: FILE: drivers/hotplug/cpci_hotplug_core.c:892:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1149: FILE: drivers/hotplug/cpci_hotplug_core.c:921:
+EXPORT_SYMBOL_GPL(cpci_hp_register_controller);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1150: FILE: drivers/hotplug/cpci_hotplug_core.c:922:
+EXPORT_SYMBOL_GPL(cpci_hp_unregister_controller);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1151: FILE: drivers/hotplug/cpci_hotplug_core.c:923:
+EXPORT_SYMBOL_GPL(cpci_hp_register_bus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1152: FILE: drivers/hotplug/cpci_hotplug_core.c:924:
+EXPORT_SYMBOL_GPL(cpci_hp_unregister_bus);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1153: FILE: drivers/hotplug/cpci_hotplug_core.c:925:
+EXPORT_SYMBOL_GPL(cpci_find_slot);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1154: FILE: drivers/hotplug/cpci_hotplug_core.c:926:
+EXPORT_SYMBOL_GPL(cpci_hp_start);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1155: FILE: drivers/hotplug/cpci_hotplug_core.c:927:
+EXPORT_SYMBOL_GPL(cpci_hp_stop);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1160: FILE: drivers/hotplug/cpci_hotplug_pci.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1179: FILE: drivers/hotplug/cpci_hotplug_pci.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1180: FILE: drivers/hotplug/cpci_hotplug_pci.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1199: FILE: drivers/hotplug/cpci_hotplug_pci.c:40:
+extern int cpci_debug;

ERROR:SPACING: space required before the open parenthesis '('
#1203: FILE: drivers/hotplug/cpci_hotplug_pci.c:44:
+		if(cpci_debug)					\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1204: FILE: drivers/hotplug/cpci_hotplug_pci.c:45:
+			printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1204: FILE: drivers/hotplug/cpci_hotplug_pci.c:45:
+			printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1205: FILE: drivers/hotplug/cpci_hotplug_pci.c:46:
+^I^I^I^IMY_NAME , ## arg); ^I^I\$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1205: FILE: drivers/hotplug/cpci_hotplug_pci.c:46:
+				MY_NAME , ## arg); 		\
 				        ^

ERROR:SPACING: space required before the open parenthesis '('
#1206: FILE: drivers/hotplug/cpci_hotplug_pci.c:47:
+	} while(0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1207: FILE: drivers/hotplug/cpci_hotplug_pci.c:48:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1207: FILE: drivers/hotplug/cpci_hotplug_pci.c:48:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n", MY_NAME , ## arg)
                                                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1208: FILE: drivers/hotplug/cpci_hotplug_pci.c:49:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1208: FILE: drivers/hotplug/cpci_hotplug_pci.c:49:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n", MY_NAME , ## arg)
                                                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1209: FILE: drivers/hotplug/cpci_hotplug_pci.c:50:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1209: FILE: drivers/hotplug/cpci_hotplug_pci.c:50:
+#define warn(format, arg...) printk(KERN_WARNING "%s: " format "\n", MY_NAME , ## arg)
                                                                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1211: FILE: drivers/hotplug/cpci_hotplug_pci.c:52:
+#define ROUND_UP(x, a)		(((x) + (a) - 1) & ~((a) - 1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1213: FILE: drivers/hotplug/cpci_hotplug_pci.c:54:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1214: FILE: drivers/hotplug/cpci_hotplug_pci.c:55:
+u8 cpci_get_attention_status(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1222: FILE: drivers/hotplug/cpci_hotplug_pci.c:63:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1222: FILE: drivers/hotplug/cpci_hotplug_pci.c:63:
+	if(!hs_cap) {
+		return 0;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1226: FILE: drivers/hotplug/cpci_hotplug_pci.c:67:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1227: FILE: drivers/hotplug/cpci_hotplug_pci.c:68:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1235: FILE: drivers/hotplug/cpci_hotplug_pci.c:76:
+int cpci_set_attention_status(struct slot* slot, int status)

ERROR:SPACING: space required before the open parenthesis '('
#1243: FILE: drivers/hotplug/cpci_hotplug_pci.c:84:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1243: FILE: drivers/hotplug/cpci_hotplug_pci.c:84:
+	if(!hs_cap) {
+		return 0;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1247: FILE: drivers/hotplug/cpci_hotplug_pci.c:88:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1248: FILE: drivers/hotplug/cpci_hotplug_pci.c:89:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1253: FILE: drivers/hotplug/cpci_hotplug_pci.c:94:
+	if(status) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1253: FILE: drivers/hotplug/cpci_hotplug_pci.c:94:
+	if(status) {
[...]
+	} else {
[...]

ERROR:SPACING: space required before the open parenthesis '('
#1258: FILE: drivers/hotplug/cpci_hotplug_pci.c:99:
+	if(pci_bus_write_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1259: FILE: drivers/hotplug/cpci_hotplug_pci.c:100:
+	if(pci_bus_write_config_word(slot->bus,
+				      slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1267: FILE: drivers/hotplug/cpci_hotplug_pci.c:108:
+u16 cpci_get_hs_csr(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1275: FILE: drivers/hotplug/cpci_hotplug_pci.c:116:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1275: FILE: drivers/hotplug/cpci_hotplug_pci.c:116:
+	if(!hs_cap) {
+		return 0xFFFF;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1279: FILE: drivers/hotplug/cpci_hotplug_pci.c:120:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1280: FILE: drivers/hotplug/cpci_hotplug_pci.c:121:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1288: FILE: drivers/hotplug/cpci_hotplug_pci.c:129:
+u16 cpci_set_hs_csr(struct slot* slot, u16 hs_csr)

ERROR:SPACING: space required before the open parenthesis '('
#1296: FILE: drivers/hotplug/cpci_hotplug_pci.c:137:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1296: FILE: drivers/hotplug/cpci_hotplug_pci.c:137:
+	if(!hs_cap) {
+		return 0xFFFF;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1301: FILE: drivers/hotplug/cpci_hotplug_pci.c:142:
+	if(pci_bus_write_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1302: FILE: drivers/hotplug/cpci_hotplug_pci.c:143:
+	if(pci_bus_write_config_word(slot->bus,
+				      slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1309: FILE: drivers/hotplug/cpci_hotplug_pci.c:150:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: drivers/hotplug/cpci_hotplug_pci.c:151:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1318: FILE: drivers/hotplug/cpci_hotplug_pci.c:159:
+int cpci_check_and_clear_ins(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1327: FILE: drivers/hotplug/cpci_hotplug_pci.c:168:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1327: FILE: drivers/hotplug/cpci_hotplug_pci.c:168:
+	if(!hs_cap) {
+		return 0;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1330: FILE: drivers/hotplug/cpci_hotplug_pci.c:171:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1331: FILE: drivers/hotplug/cpci_hotplug_pci.c:172:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1336: FILE: drivers/hotplug/cpci_hotplug_pci.c:177:
+	if(hs_csr & HS_CSR_INS) {

ERROR:SPACING: space required before the open parenthesis '('
#1338: FILE: drivers/hotplug/cpci_hotplug_pci.c:179:
+		if(pci_bus_write_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1339: FILE: drivers/hotplug/cpci_hotplug_pci.c:180:
+		if(pci_bus_write_config_word(slot->bus,
+					      slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1349: FILE: drivers/hotplug/cpci_hotplug_pci.c:190:
+int cpci_check_ext(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1358: FILE: drivers/hotplug/cpci_hotplug_pci.c:199:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1358: FILE: drivers/hotplug/cpci_hotplug_pci.c:199:
+	if(!hs_cap) {
+		return 0;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1361: FILE: drivers/hotplug/cpci_hotplug_pci.c:202:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1362: FILE: drivers/hotplug/cpci_hotplug_pci.c:203:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1367: FILE: drivers/hotplug/cpci_hotplug_pci.c:208:
+	if(hs_csr & HS_CSR_EXT) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1367: FILE: drivers/hotplug/cpci_hotplug_pci.c:208:
+	if(hs_csr & HS_CSR_EXT) {
+		ext = 1;
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1373: FILE: drivers/hotplug/cpci_hotplug_pci.c:214:
+int cpci_clear_ext(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1381: FILE: drivers/hotplug/cpci_hotplug_pci.c:222:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1381: FILE: drivers/hotplug/cpci_hotplug_pci.c:222:
+	if(!hs_cap) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1384: FILE: drivers/hotplug/cpci_hotplug_pci.c:225:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1385: FILE: drivers/hotplug/cpci_hotplug_pci.c:226:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1390: FILE: drivers/hotplug/cpci_hotplug_pci.c:231:
+	if(hs_csr & HS_CSR_EXT) {

ERROR:SPACING: space required before the open parenthesis '('
#1392: FILE: drivers/hotplug/cpci_hotplug_pci.c:233:
+		if(pci_bus_write_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: drivers/hotplug/cpci_hotplug_pci.c:234:
+		if(pci_bus_write_config_word(slot->bus,
+					      slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1402: FILE: drivers/hotplug/cpci_hotplug_pci.c:243:
+int cpci_led_on(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1410: FILE: drivers/hotplug/cpci_hotplug_pci.c:251:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1410: FILE: drivers/hotplug/cpci_hotplug_pci.c:251:
+	if(!hs_cap) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1413: FILE: drivers/hotplug/cpci_hotplug_pci.c:254:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: drivers/hotplug/cpci_hotplug_pci.c:255:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1419: FILE: drivers/hotplug/cpci_hotplug_pci.c:260:
+	if((hs_csr & HS_CSR_LOO) != HS_CSR_LOO) {

ERROR:SPACING: space required before the open parenthesis '('
#1422: FILE: drivers/hotplug/cpci_hotplug_pci.c:263:
+		if(pci_bus_write_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1423: FILE: drivers/hotplug/cpci_hotplug_pci.c:264:
+		if(pci_bus_write_config_word(slot->bus,
+					      slot->devfn,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1434: FILE: drivers/hotplug/cpci_hotplug_pci.c:275:
+int cpci_led_off(struct slot* slot)

ERROR:SPACING: space required before the open parenthesis '('
#1442: FILE: drivers/hotplug/cpci_hotplug_pci.c:283:
+	if(!hs_cap) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1442: FILE: drivers/hotplug/cpci_hotplug_pci.c:283:
+	if(!hs_cap) {
+		return -ENODEV;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1445: FILE: drivers/hotplug/cpci_hotplug_pci.c:286:
+	if(pci_bus_read_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1446: FILE: drivers/hotplug/cpci_hotplug_pci.c:287:
+	if(pci_bus_read_config_word(slot->bus,
+				     slot->devfn,

ERROR:SPACING: space required before the open parenthesis '('
#1451: FILE: drivers/hotplug/cpci_hotplug_pci.c:292:
+	if(hs_csr & HS_CSR_LOO) {

ERROR:SPACING: space required before the open parenthesis '('
#1454: FILE: drivers/hotplug/cpci_hotplug_pci.c:295:
+		if(pci_bus_write_config_word(slot->bus,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: drivers/hotplug/cpci_hotplug_pci.c:296:
+		if(pci_bus_write_config_word(slot->bus,
+					      slot->devfn,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1466: FILE: drivers/hotplug/cpci_hotplug_pci.c:307:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1476: FILE: drivers/hotplug/cpci_hotplug_pci.c:317:
+	dbg("%s - enter", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1488: FILE: drivers/hotplug/cpci_hotplug_pci.c:329:
+		struct resource *res = dev->resource + r;
+		if(res->flags)

ERROR:SPACING: space required before the open parenthesis '('
#1488: FILE: drivers/hotplug/cpci_hotplug_pci.c:329:
+		if(res->flags)

ERROR:SPACING: space required before the open parenthesis '('
#1497: FILE: drivers/hotplug/cpci_hotplug_pci.c:338:
+	if(irq_pin) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1497: FILE: drivers/hotplug/cpci_hotplug_pci.c:338:
+	if(irq_pin) {
+		dbg("function uses interrupt pin %d", irq_pin);
+	}

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#1503: FILE: drivers/hotplug/cpci_hotplug_pci.c:344:
+	 * by the pcibios platform dependant code called by pci_enable_device.
 	                           ^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#1510: FILE: drivers/hotplug/cpci_hotplug_pci.c:351:
+	if(irq_pin && dev->irq) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1510: FILE: drivers/hotplug/cpci_hotplug_pci.c:351:
+	if(irq_pin && dev->irq) {
+		pci_write_config_byte(dev, PCI_INTERRUPT_LINE, dev->irq);
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1518: FILE: drivers/hotplug/cpci_hotplug_pci.c:359:
+	dbg("%s - exit", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1522: FILE: drivers/hotplug/cpci_hotplug_pci.c:363:
+static int cpci_configure_bridge(struct pci_bus* bus, struct pci_dev* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1522: FILE: drivers/hotplug/cpci_hotplug_pci.c:363:
+static int cpci_configure_bridge(struct pci_bus* bus, struct pci_dev* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1525: FILE: drivers/hotplug/cpci_hotplug_pci.c:366:
+	struct pci_bus* child;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1526: FILE: drivers/hotplug/cpci_hotplug_pci.c:367:
+	struct resource* r;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1530: FILE: drivers/hotplug/cpci_hotplug_pci.c:371:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1534: FILE: drivers/hotplug/cpci_hotplug_pci.c:375:
+	if(rc) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1534: FILE: drivers/hotplug/cpci_hotplug_pci.c:375:
+	if(rc) {
+		printk(KERN_ERR "%s - write of PCI_LATENCY_TIMER failed\n", __FUNCTION__);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1535: FILE: drivers/hotplug/cpci_hotplug_pci.c:376:
+		printk(KERN_ERR "%s - write of PCI_LATENCY_TIMER failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1535: FILE: drivers/hotplug/cpci_hotplug_pci.c:376:
+		printk(KERN_ERR "%s - write of PCI_LATENCY_TIMER failed\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1538: FILE: drivers/hotplug/cpci_hotplug_pci.c:379:
+	if(rc) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1538: FILE: drivers/hotplug/cpci_hotplug_pci.c:379:
+	if(rc) {
+		printk(KERN_ERR "%s - write of PCI_SEC_LATENCY_TIMER failed\n", __FUNCTION__);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1539: FILE: drivers/hotplug/cpci_hotplug_pci.c:380:
+		printk(KERN_ERR "%s - write of PCI_SEC_LATENCY_TIMER failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1539: FILE: drivers/hotplug/cpci_hotplug_pci.c:380:
+		printk(KERN_ERR "%s - write of PCI_SEC_LATENCY_TIMER failed\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1542: FILE: drivers/hotplug/cpci_hotplug_pci.c:383:
+	if(rc) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1542: FILE: drivers/hotplug/cpci_hotplug_pci.c:383:
+	if(rc) {
+		printk(KERN_ERR "%s - write of PCI_CACHE_LINE_SIZE failed\n", __FUNCTION__);
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1543: FILE: drivers/hotplug/cpci_hotplug_pci.c:384:
+		printk(KERN_ERR "%s - write of PCI_CACHE_LINE_SIZE failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1543: FILE: drivers/hotplug/cpci_hotplug_pci.c:384:
+		printk(KERN_ERR "%s - write of PCI_CACHE_LINE_SIZE failed\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1564: FILE: drivers/hotplug/cpci_hotplug_pci.c:405:
+	if(n > max) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1577: FILE: drivers/hotplug/cpci_hotplug_pci.c:418:
+	command = PCI_COMMAND_MASTER | PCI_COMMAND_INVALIDATE | PCI_COMMAND_PARITY | PCI_COMMAND_SERR;

ERROR:SPACING: space required before the open parenthesis '('
#1579: FILE: drivers/hotplug/cpci_hotplug_pci.c:420:
+	if(r && r->start) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1579: FILE: drivers/hotplug/cpci_hotplug_pci.c:420:
+	if(r && r->start) {
+		command |= PCI_COMMAND_IO;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1583: FILE: drivers/hotplug/cpci_hotplug_pci.c:424:
+	if(r && r->start) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1583: FILE: drivers/hotplug/cpci_hotplug_pci.c:424:
+	if(r && r->start) {
+		command |= PCI_COMMAND_MEMORY;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1587: FILE: drivers/hotplug/cpci_hotplug_pci.c:428:
+	if(r && r->start) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1587: FILE: drivers/hotplug/cpci_hotplug_pci.c:428:
+	if(r && r->start) {
+		command |= PCI_COMMAND_MEMORY;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1591: FILE: drivers/hotplug/cpci_hotplug_pci.c:432:
+	if(rc) {

ERROR:SPACING: space required before the open parenthesis '('
#1599: FILE: drivers/hotplug/cpci_hotplug_pci.c:440:
+	if(rc) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1603: FILE: drivers/hotplug/cpci_hotplug_pci.c:444:
+	dbg("%s - exit", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1608: FILE: drivers/hotplug/cpci_hotplug_pci.c:449:
+static int configure_visit_pci_dev(struct pci_dev_wrapped *wrapped_dev,
+			struct pci_bus_wrapped *wrapped_bus)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1613: FILE: drivers/hotplug/cpci_hotplug_pci.c:454:
+	struct slot* slot;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1615: FILE: drivers/hotplug/cpci_hotplug_pci.c:456:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1622: FILE: drivers/hotplug/cpci_hotplug_pci.c:463:
+	if(slot) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1622: FILE: drivers/hotplug/cpci_hotplug_pci.c:463:
+	if(slot) {
+		slot->dev = dev;
+	}

ERROR:SPACING: space required before the open parenthesis '('
#1627: FILE: drivers/hotplug/cpci_hotplug_pci.c:468:
+	if(dev->hdr_type == PCI_HEADER_TYPE_BRIDGE) {

ERROR:SPACING: space required before the open parenthesis '('
#1629: FILE: drivers/hotplug/cpci_hotplug_pci.c:470:
+		if(rc)

ERROR:SPACING: space required before the open parenthesis '('
#1634: FILE: drivers/hotplug/cpci_hotplug_pci.c:475:
+	if(dev) {

ERROR:SPACING: space required before the open parenthesis '('
#1636: FILE: drivers/hotplug/cpci_hotplug_pci.c:477:
+		if(rc)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1639: FILE: drivers/hotplug/cpci_hotplug_pci.c:480:
+	dbg("%s - exit", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1644: FILE: drivers/hotplug/cpci_hotplug_pci.c:485:
+static int unconfigure_visit_pci_dev_phase1(struct pci_dev_wrapped *wrapped_dev,
+				 struct pci_bus_wrapped *wrapped_bus)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1648: FILE: drivers/hotplug/cpci_hotplug_pci.c:489:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1654: FILE: drivers/hotplug/cpci_hotplug_pci.c:495:
+	if(dev->driver) {

ERROR:SPACING: space required before the open parenthesis '('
#1656: FILE: drivers/hotplug/cpci_hotplug_pci.c:497:
+		if(dev->driver->remove) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1662: FILE: drivers/hotplug/cpci_hotplug_pci.c:503:
+	dbg("%s - exit", __FUNCTION__);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1670: FILE: drivers/hotplug/cpci_hotplug_pci.c:511:
+	struct slot* slot;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1672: FILE: drivers/hotplug/cpci_hotplug_pci.c:513:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1673: FILE: drivers/hotplug/cpci_hotplug_pci.c:514:
+	if(!dev)

ERROR:SPACING: space required before the open parenthesis '('
#1677: FILE: drivers/hotplug/cpci_hotplug_pci.c:518:
+	if(pci_remove_device_safe(dev) == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#1688: FILE: drivers/hotplug/cpci_hotplug_pci.c:529:
+	if(slot) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1694: FILE: drivers/hotplug/cpci_hotplug_pci.c:535:
+	dbg("%s - exit", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1704: FILE: drivers/hotplug/cpci_hotplug_pci.c:545:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1707: FILE: drivers/hotplug/cpci_hotplug_pci.c:548:
+	if(bus->procdir)

ERROR:SPACING: space required before the open parenthesis '('
#1718: FILE: drivers/hotplug/cpci_hotplug_pci.c:559:
+	if(bus)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1719: FILE: drivers/hotplug/cpci_hotplug_pci.c:560:
+	if(bus)
+		kfree(bus);

ERROR:SPACING: space required before the open parenthesis '('
#1722: FILE: drivers/hotplug/cpci_hotplug_pci.c:563:
+	if(parent) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1724: FILE: drivers/hotplug/cpci_hotplug_pci.c:565:
+		u8 n = pci_bus_max_busnr(parent);
+		if(n < parent->subordinate) {

ERROR:SPACING: space required before the open parenthesis '('
#1724: FILE: drivers/hotplug/cpci_hotplug_pci.c:565:
+		if(n < parent->subordinate) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1729: FILE: drivers/hotplug/cpci_hotplug_pci.c:570:
+	dbg("%s - exit", __FUNCTION__);

WARNING:INDENTED_LABEL: labels should not be indented
#1734: FILE: drivers/hotplug/cpci_hotplug_pci.c:575:
+	visit_pci_dev:configure_visit_pci_dev,

WARNING:INDENTED_LABEL: labels should not be indented
#1738: FILE: drivers/hotplug/cpci_hotplug_pci.c:579:
+	post_visit_pci_dev:unconfigure_visit_pci_dev_phase1

WARNING:INDENTED_LABEL: labels should not be indented
#1742: FILE: drivers/hotplug/cpci_hotplug_pci.c:583:
+	post_visit_pci_bus:unconfigure_visit_pci_bus_phase2,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1743: FILE: drivers/hotplug/cpci_hotplug_pci.c:584:
+	post_visit_pci_dev:unconfigure_visit_pci_dev_phase2
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#1743: FILE: drivers/hotplug/cpci_hotplug_pci.c:584:
+	post_visit_pci_dev:unconfigure_visit_pci_dev_phase2

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1746: FILE: drivers/hotplug/cpci_hotplug_pci.c:587:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1747: FILE: drivers/hotplug/cpci_hotplug_pci.c:588:
+int cpci_configure_slot(struct slot* slot)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1751: FILE: drivers/hotplug/cpci_hotplug_pci.c:592:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1753: FILE: drivers/hotplug/cpci_hotplug_pci.c:594:
+	if(slot->dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot->dev"
#1753: FILE: drivers/hotplug/cpci_hotplug_pci.c:594:
+	if(slot->dev == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1760: FILE: drivers/hotplug/cpci_hotplug_pci.c:601:
+	if(slot->dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot->dev"
#1760: FILE: drivers/hotplug/cpci_hotplug_pci.c:601:
+	if(slot->dev == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1764: FILE: drivers/hotplug/cpci_hotplug_pci.c:605:
+		memset(&dev0, 0, sizeof (struct pci_dev));

ERROR:SPACING: space required before the open parenthesis '('
#1774: FILE: drivers/hotplug/cpci_hotplug_pci.c:615:
+		if(slot->dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot->dev"
#1774: FILE: drivers/hotplug/cpci_hotplug_pci.c:615:
+		if(slot->dev == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1780: FILE: drivers/hotplug/cpci_hotplug_pci.c:621:
+	if(slot->dev) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1786: FILE: drivers/hotplug/cpci_hotplug_pci.c:627:
+		memset(&wrapped_dev, 0, sizeof (struct pci_dev_wrapped));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1787: FILE: drivers/hotplug/cpci_hotplug_pci.c:628:
+		memset(&wrapped_bus, 0, sizeof (struct pci_bus_wrapped));

ERROR:SPACING: space required before the open parenthesis '('
#1792: FILE: drivers/hotplug/cpci_hotplug_pci.c:633:
+			if(!dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1800: FILE: drivers/hotplug/cpci_hotplug_pci.c:641:
+	dbg("%s - exit, rc = %d", __FUNCTION__, rc);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1804: FILE: drivers/hotplug/cpci_hotplug_pci.c:645:
+int cpci_unconfigure_slot(struct slot* slot)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1812: FILE: drivers/hotplug/cpci_hotplug_pci.c:653:
+	dbg("%s - enter", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1814: FILE: drivers/hotplug/cpci_hotplug_pci.c:655:
+	if(!slot->dev) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1819: FILE: drivers/hotplug/cpci_hotplug_pci.c:660:
+	memset(&wrapped_dev, 0, sizeof (struct pci_dev_wrapped));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1820: FILE: drivers/hotplug/cpci_hotplug_pci.c:661:
+	memset(&wrapped_bus, 0, sizeof (struct pci_bus_wrapped));

ERROR:SPACING: space required before the open parenthesis '('
#1825: FILE: drivers/hotplug/cpci_hotplug_pci.c:666:
+		if(dev) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1828: FILE: drivers/hotplug/cpci_hotplug_pci.c:669:
+			dbg("%s - unconfigure phase 1", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1831: FILE: drivers/hotplug/cpci_hotplug_pci.c:672:
+			if(rc) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1831: FILE: drivers/hotplug/cpci_hotplug_pci.c:672:
+			if(rc) {
+				break;
+			}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1835: FILE: drivers/hotplug/cpci_hotplug_pci.c:676:
+			dbg("%s - unconfigure phase 2", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#1838: FILE: drivers/hotplug/cpci_hotplug_pci.c:679:
+			if(rc)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1842: FILE: drivers/hotplug/cpci_hotplug_pci.c:683:
+	dbg("%s - exit, rc = %d", __FUNCTION__, rc);

ERROR:SPACING: space required before the open parenthesis '('
#1886: FILE: drivers/hotplug/pci_hotplug_util.c:111:
+	if(bus) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1908: FILE: drivers/hotplug/pci_hotplug_util.c:168:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1909: FILE: drivers/hotplug/pci_hotplug_util.c:169:
+^I * dev->driver will be set if the device is in use by a new-style $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1940: FILE: drivers/hotplug/pci_hotplug_util.c:200:
+ * Delete the device structure from the device lists and $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1947: FILE: drivers/hotplug/pci_hotplug_util.c:207:
+	if (pci_is_dev_in_use(dev)) {
+		return -EBUSY;
+	}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1955: FILE: drivers/hotplug/pci_hotplug_util.c:215:
+EXPORT_SYMBOL(pci_is_dev_in_use);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1956: FILE: drivers/hotplug/pci_hotplug_util.c:216:
+EXPORT_SYMBOL(pci_remove_device_safe);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 208 errors, 169 warnings, 61 checks, 1895 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416020.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
