WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
  - Removed dio_scodetoviraddr() and introduced dio_scodetophysaddr() instead,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: drivers/dio/dio.c:1:
+/* Code to support devices on the DIO and DIO-II bus

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#61: FILE: drivers/dio/dio.c:32:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#62: FILE: drivers/dio/dio.c:33:
+#include <asm/io.h>                             /* readb() */

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/dio/dio.c:62:
+        DIONAME(FHPIB), DIONAME(NHPIB),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/dio/dio.c:62:
+        DIONAME(FHPIB), DIONAME(NHPIB),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/dio/dio.c:82:
+        = "unknown DIO board -- please email <linux-m68k@lists.linux-m68k.org>!";$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#81: FILE: drivers/dio/dio.c:82:
 static const char *unknowndioname 
+        = "unknown DIO board -- please email <linux-m68k@lists.linux-m68k.org>!";

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/dio/dio.c:82:
+        = "unknown DIO board -- please email <linux-m68k@lists.linux-m68k.org>!";$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/dio/dio.c:132:
+                pa = dio_scodetophysaddr(scode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/dio/dio.c:132:
+                pa = dio_scodetophysaddr(scode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: drivers/dio/dio.c:145:
+                if (get_user(i, (unsigned char *)va + DIO_IDOFF))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/dio/dio.c:145:
+                if (get_user(i, (unsigned char *)va + DIO_IDOFF))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#135: FILE: drivers/dio/dio.c:145:
+                if (get_user(i, (unsigned char *)va + DIO_IDOFF))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/dio/dio.c:156:
+                if (DIO_NEEDSSECID(prid))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/dio/dio.c:156:
+                if (DIO_NEEDSSECID(prid))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#151: FILE: drivers/dio/dio.c:156:
+                if (DIO_NEEDSSECID(prid))
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/dio/dio.c:157:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/dio/dio.c:157:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/dio/dio.c:158:
+                        secid = DIO_SECID(va);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/dio/dio.c:158:
+                        secid = DIO_SECID(va);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/dio/dio.c:159:
+                        id = DIO_ENCODE_ID(prid, secid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/dio/dio.c:159:
+                        id = DIO_ENCODE_ID(prid, secid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/dio/dio.c:160:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/dio/dio.c:160:
+                }$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#161: FILE: drivers/dio/dio.c:164:
+		if (id == deviceid)
+		{

CHECK:BRACES: braces {} should be used on all arms of this statement
#179: FILE: drivers/dio/dio.c:177:
+	if (blist)
[...]
+	}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#189: FILE: drivers/dio/dio.c:186:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#189: FILE: drivers/dio/dio.c:186:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: drivers/dio/dio.c:202:
+        printk(KERN_INFO "Scanning for DIO devices...\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/dio/dio.c:202:
+        printk(KERN_INFO "Scanning for DIO devices...\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#209: FILE: drivers/dio/dio.c:202:
+        printk(KERN_INFO "Scanning for DIO devices...\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/dio/dio.c:226:
+                if (get_user(i, (unsigned char *)va + DIO_IDOFF))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/dio/dio.c:226:
+                if (get_user(i, (unsigned char *)va + DIO_IDOFF))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#236: FILE: drivers/dio/dio.c:226:
+                if (get_user(i, (unsigned char *)va + DIO_IDOFF))
+		{

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: drivers/dio/dio.c:239:
+                /* read the ID byte(s) and encode if necessary. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: drivers/dio/dio.c:254:
+                printk(KERN_INFO "select code %3d: ipl %d: ID %02X", b->scode, b->ipl, prid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/dio/dio.c:254:
+                printk(KERN_INFO "select code %3d: ipl %d: ID %02X", b->scode, b->ipl, prid);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#276: FILE: drivers/dio/dio.c:254:
+                printk(KERN_INFO "select code %3d: ipl %d: ID %02X", b->scode, b->ipl, prid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/dio/dio.c:255:
+                if (DIO_NEEDSSECID(prid))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/dio/dio.c:255:
+                if (DIO_NEEDSSECID(prid))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/dio/dio.c:281:
+        if (scode >= DIOII_SCBASE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/dio/dio.c:281:
+        if (scode >= DIOII_SCBASE)$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#306: FILE: drivers/dio/dio.c:281:
+        if (scode >= DIOII_SCBASE)
[...]
+                return (DIOII_BASE + (scode - 132) * DIOII_DEVSIZE);
[...]
         else if (scode > DIO_SCMAX || scode < 0)
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: drivers/dio/dio.c:283:
+                return (DIOII_BASE + (scode - 132) * DIOII_DEVSIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/dio/dio.c:283:
+                return (DIOII_BASE + (scode - 132) * DIOII_DEVSIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: drivers/dio/dio.c:290:
+        return (DIO_BASE + scode * DIO_DEVSIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/dio/dio.c:290:
+        return (DIO_BASE + scode * DIO_DEVSIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: drivers/dio/dio.c:302:
+                printk(KERN_ERR "dio_scodetoipl: bad select code %d\n", scode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/dio/dio.c:302:
+                printk(KERN_ERR "dio_scodetoipl: bad select code %d\n", scode);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#333: FILE: drivers/dio/dio.c:302:
+                printk(KERN_ERR "dio_scodetoipl: bad select code %d\n", scode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/dio/dio.c:318:
+                printk(KERN_ERR "dio_scodetoname: bad select code %d\n", scode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/dio/dio.c:318:
+                printk(KERN_ERR "dio_scodetoname: bad select code %d\n", scode);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#346: FILE: drivers/dio/dio.c:318:
+                printk(KERN_ERR "dio_scodetoname: bad select code %d\n", scode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/dio/dio.c:333:
+                printk(KERN_ERR "dio_config_board: bad select code %d\n", scode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/dio/dio.c:333:
+                printk(KERN_ERR "dio_config_board: bad select code %d\n", scode);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#358: FILE: drivers/dio/dio.c:333:
+                printk(KERN_ERR "dio_config_board: bad select code %d\n", scode);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#361: FILE: drivers/dio/dio.c:335:
+                printk(KERN_WARNING "dio_config_board: board at select code %d already configured\n", scode);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/dio/dio.c:335:
+                printk(KERN_WARNING "dio_config_board: board at select code %d already configured\n", scode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/dio/dio.c:335:
+                printk(KERN_WARNING "dio_config_board: board at select code %d already configured\n", scode);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#361: FILE: drivers/dio/dio.c:335:
+                printk(KERN_WARNING "dio_config_board: board at select code %d already configured\n", scode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: drivers/dio/dio.c:348:
+                printk(KERN_ERR "dio_unconfig_board: bad select code %d\n", scode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/dio/dio.c:348:
+                printk(KERN_ERR "dio_unconfig_board: bad select code %d\n", scode);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#373: FILE: drivers/dio/dio.c:348:
+                printk(KERN_ERR "dio_unconfig_board: bad select code %d\n", scode);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: drivers/dio/dio.c:350:
+                printk(KERN_WARNING "dio_unconfig_board: board at select code %d not configured\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/dio/dio.c:350:
+                printk(KERN_WARNING "dio_unconfig_board: board at select code %d not configured\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/dio/dio.c:350:
+                printk(KERN_WARNING "dio_unconfig_board: board at select code %d not configured\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#376: FILE: drivers/dio/dio.c:350:
+                printk(KERN_WARNING "dio_unconfig_board: board at select code %d not configured\n", 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'scode' - possible side-effects?
#428: FILE: include/linux/dio.h:57:
+#define DIO_ISDIOII(scode) ((scode) >= 132 && (scode) < 256)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#437: FILE: include/linux/dio.h:79:
+#define DIO_ENCODE_ID(pr,sec) ((((int)sec & 0xff) << 8) | ((int)pr & 0xff))
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pr' may be better as '(pr)' to avoid precedence issues
#437: FILE: include/linux/dio.h:79:
+#define DIO_ENCODE_ID(pr,sec) ((((int)sec & 0xff) << 8) | ((int)pr & 0xff))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sec' may be better as '(sec)' to avoid precedence issues
#437: FILE: include/linux/dio.h:79:
+#define DIO_ENCODE_ID(pr,sec) ((((int)sec & 0xff) << 8) | ((int)pr & 0xff))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: include/linux/dio.h:179:
+extern unsigned long dio_scodetophysaddr(int scode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235288.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 36 warnings, 6 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235288.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
