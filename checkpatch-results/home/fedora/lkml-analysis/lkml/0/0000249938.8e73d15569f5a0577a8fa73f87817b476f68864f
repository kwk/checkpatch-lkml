ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: arch/um/drivers/stdio_console.c:194:
+static void uml_console_write(struct console *console, const char *string, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#45: FILE: arch/um/drivers/stdio_console.c:195:
+static void uml_console_write(struct console *console, const char *string, 
 			  unsigned len)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#70: FILE: arch/um/drivers/stdio_console.c:219:
+	write:		uml_console_write,
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#70: FILE: arch/um/drivers/stdio_console.c:219:
+	write:		uml_console_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#71: FILE: arch/um/drivers/stdio_console.c:220:
+	device:		uml_console_device,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#71: FILE: arch/um/drivers/stdio_console.c:220:
+	device:		uml_console_device,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#72: FILE: arch/um/drivers/stdio_console.c:221:
+	setup:		uml_console_setup,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#72: FILE: arch/um/drivers/stdio_console.c:221:
+	setup:		uml_console_setup,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: arch/um/kernel/sigio_kern.c:31:
+	err = um_request_irq(SIGIO_WRITE_IRQ, fd, IRQ_READ, sigio_interrupt,
 			  SA_INTERRUPT | SA_SAMPLE_RANDOM, "write sigio", 

ERROR:SPACING: space required before the open brace '{'
#134: FILE: arch/um/kernel/sigio_kern.c:33:
+	if(err){

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: arch/um/kernel/sigio_kern.c:33:
+	if(err){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#135: FILE: arch/um/kernel/sigio_kern.c:34:
+		printk("write_sigio_irq : um_request_irq failed, err = %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: arch/um/kernel/skas/process_kern.c:206:
+	if(fd < 0)

ERROR:SPACING: space required before the open brace '{'
#198: FILE: arch/um/kernel/skas/process_kern.c:209:
+	if(from != -1){

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: arch/um/kernel/skas/process_kern.c:209:
+	if(from != -1){

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: arch/um/kernel/skas/process_kern.c:210:
+^I^Icopy = ((struct proc_mm_op) { .op ^I= MM_COPY_SEGMENTS,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/um/kernel/skas/process_kern.c:211:
+^I^I^I^I^I      .u ^I= $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: arch/um/kernel/skas/process_kern.c:211:
+^I^I^I^I^I      .u ^I= $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: arch/um/kernel/skas/process_kern.c:212:
+					      .u 	= 
+					      { .copy_segments	= from } } );

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#201: FILE: arch/um/kernel/skas/process_kern.c:212:
+					      { .copy_segments	= from } } );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/um/kernel/skas/process_kern.c:214:
+^I^Iif(n != sizeof(copy)) $

ERROR:SPACING: space required before the open parenthesis '('
#203: FILE: arch/um/kernel/skas/process_kern.c:214:
+		if(n != sizeof(copy)) 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#204: FILE: arch/um/kernel/skas/process_kern.c:215:
+			printk("new_mm : /proc/mm copy_segments failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'new_mm', this function's name, in a string
#204: FILE: arch/um/kernel/skas/process_kern.c:215:
+			printk("new_mm : /proc/mm copy_segments failed, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#205: FILE: arch/um/kernel/skas/process_kern.c:216:
+			printk("new_mm : /proc/mm copy_segments failed, "
+			       "err = %d\n", -n);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: arch/um/kernel/tt/process_kern.c:138:
+	if(err != sizeof(c))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'suspend_new_thread', this function's name, in a string
#230: FILE: arch/um/kernel/tt/process_kern.c:139:
+		panic("read failed in suspend_new_thread, err = %d", -err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/um/kernel/tt/process_kern.c:176:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: arch/um/kernel/tt/tracer.c:333:
+				if(do_syscall(task, pid))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#295: FILE: arch/um/kernel/umid.c:215:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: arch/um/kernel/user_util.c:91:
+^I^I^I^Iprintk("process %d exited with status %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: arch/um/kernel/user_util.c:91:
+				printk("process %d exited with status %d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: arch/um/kernel/user_util.c:94:
+^I^I^I^Iprintk("process %d exited with signal %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#314: FILE: arch/um/kernel/user_util.c:94:
+				printk("process %d exited with signal %d\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: arch/um/kernel/user_util.c:111:
+^I^I^Ielse printk("process %d stopped with signal %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#325: FILE: arch/um/kernel/user_util.c:111:
+			else printk("process %d stopped with signal %d\n", 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: arch/um/kernel/user_util.c:111:
+			else printk("process %d stopped with signal %d\n", 

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#325: FILE: arch/um/kernel/user_util.c:111:
 			}
+			else printk("process %d stopped with signal %d\n", 

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/um/os-Linux/file.c:190:
+^I^Iprintk("fcntl F_SETFL or F_SETOWN failed, errno = %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#339: FILE: arch/um/os-Linux/file.c:190:
+		printk("fcntl F_SETFL or F_SETOWN failed, errno = %d\n", 

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: arch/um/os-Linux/process.c:45:
+	if(sscanf(buf, "%*d " COMM_SCANF " %*c %*d %*d %*d %*d %*d %*d %*d "

WARNING:SPLIT_STRING: quoted string split across lines
#356: FILE: arch/um/os-Linux/process.c:47:
 		  "%*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d %*d "
+		  "%*d %*d %*d %*d %*d %lu", &pc) != 1){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: arch/um/sys-i386/ptrace_user.c:45:
+^I^I^I       "register %d, value = 0x%x, errno = %d\n", i, $

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: arch/um/sys-i386/ptrace_user.c:45:
 			printk("write_debugregs - ptrace failed on "
+			       "register %d, value = 0x%x, errno = %d\n", i, 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000249938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 16 warnings, 2 checks, 268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000249938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
