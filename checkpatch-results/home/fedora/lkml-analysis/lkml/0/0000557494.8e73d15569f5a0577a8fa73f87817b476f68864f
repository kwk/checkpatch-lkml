WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
> The following patch fixes an oops in 2.4.0 RAID5 initialisation when the kernel

WARNING:TYPO_SPELLING: 'asymetric' may be misspelled - perhaps 'asymmetric'?
#44: 
it to be disabled via kernel param for asymetric MP), forward ported stright
                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: arch/i386/kernel/i387.c:36:
+	if ( HAVE_XMM )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#146: FILE: arch/i386/kernel/i387.c:36:
+	if ( HAVE_XMM )

ERROR:SPACING: space prohibited after that open parenthesis '('
#155: FILE: arch/i386/kernel/i387.c:202:
+	if ( HAVE_XMM ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#155: FILE: arch/i386/kernel/i387.c:202:
+	if ( HAVE_XMM ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#155: FILE: arch/i386/kernel/i387.c:202:
+	if ( HAVE_XMM ) {
 		tsk->thread.i387.fxsave.mxcsr = mxcsr;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#165: FILE: arch/i386/kernel/i387.c:424:
+		if (__copy_to_user( (void *)buf, &tsk->thread.i387.fxsave,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: arch/i386/kernel/i387.c:425:
+		if (__copy_to_user( (void *)buf, &tsk->thread.i387.fxsave,
+				    sizeof(struct user_fxsr_struct) ))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#166: FILE: arch/i386/kernel/i387.c:425:
+				    sizeof(struct user_fxsr_struct) ))

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#178: FILE: arch/i386/kernel/setup.c:150:
+int disable_x86_fxsr __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: arch/i386/kernel/setup.c:1800:
+int __init x86_fxsr_setup(char * s)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#192: FILE: arch/i386/kernel/setup.c:1805:
+__setup("nofxsr", x86_fxsr_setup);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/asm-i386/bugs.h:85:
+		extern void __buggy_fxsr_alignment(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#237: FILE: include/asm-i386/bugs.h:90:
+			printk(KERN_INFO "Enabling fast FPU save and restore... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: include/asm-i386/bugs.h:92:
+			printk("done.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#242: FILE: include/asm-i386/bugs.h:95:
+			printk(KERN_INFO "Enabling unmasked SIMD FPU exception support... ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: include/asm-i386/bugs.h:97:
+			printk("done.\n");

CHECK:BRACES: Unbalanced braces around else statement
#246: FILE: include/asm-i386/bugs.h:99:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#247: FILE: include/asm-i386/bugs.h:100:
+		printk(KERN_INFO "Disabling fast FPU save and restore.\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#278: FILE: include/asm-i386/i387.h:54:
+	asm volatile( "ldmxcsr %0" : : "m" (__mxcsr) ); \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#278: FILE: include/asm-i386/i387.h:54:
+	asm volatile( "ldmxcsr %0" : : "m" (__mxcsr) ); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: include/asm-i386/xor.h:846:
+^I        if (HAVE_XMM)^I^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:CAMELCASE: Avoid CamelCase: <xor_block_pIII_sse>
#323: FILE: include/asm-i386/xor.h:858:
+	(HAVE_XMM ? &xor_block_pIII_sse : FASTEST)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000557494.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 8 warnings, 5 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000557494.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
