WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
In 2.6.14, the notifier chains are unsafe. notifier_call_chain() walks through

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#64: 
Signed-off-by:  Chandra Seetharaman <sekharan@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#65: 
Signed-off-by:  Alan Stern <stern@rowland.harvard.edu>

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#106: FILE: include/linux/notifier.h:38:
+	int (*notifier_call)(struct notifier_block *, unsigned long, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#106: FILE: include/linux/notifier.h:38:
+	int (*notifier_call)(struct notifier_block *, unsigned long, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#106: FILE: include/linux/notifier.h:38:
+	int (*notifier_call)(struct notifier_block *, unsigned long, void *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#122: FILE: include/linux/notifier.h:54:
+#define NOTIFIER_HEAD(name, head_type) \
+	struct notifier_head name = NOTIFIER_HEAD_INIT(name, head_type)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/notifier.h:79:
+extern int notifier_chain_register(struct notifier_head *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/linux/notifier.h:80:
+extern int notifier_chain_register(struct notifier_head *,
+					struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: include/linux/notifier.h:81:
+extern int notifier_chain_unregister(struct notifier_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_head *' should also have an identifier name
#152: FILE: include/linux/notifier.h:81:
+extern int notifier_chain_unregister(struct notifier_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_block *' should also have an identifier name
#152: FILE: include/linux/notifier.h:81:
+extern int notifier_chain_unregister(struct notifier_head *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: include/linux/notifier.h:82:
+extern int notifier_chain_unregister(struct notifier_head *,
+					struct notifier_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/notifier.h:83:
+extern int notifier_call_chain(struct notifier_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct notifier_head *' should also have an identifier name
#154: FILE: include/linux/notifier.h:83:
+extern int notifier_call_chain(struct notifier_head *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: include/linux/notifier.h:84:
+extern int notifier_call_chain(struct notifier_head *,
+					unsigned long val, void *v);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: include/linux/notifier.h:89:
+#define NOTIFY_BAD		(NOTIFY_STOP_MASK|0x0002)
                   		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: kernel/sys.c:140:
+int notifier_chain_unregister(struct notifier_head *nh,
+					struct notifier_block *n)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 9 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135421.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
