WARNING:TYPO_SPELLING: 'completly' may be misspelled - perhaps 'completely'?
#30: 
The code is completly contained in a header file and all the functions
            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'do'
#37: 
using these functions do do the frequency change math.  And the divide 

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#97: 
diff -urP -I '\$Id:.*Exp \$' -X /usr/src/patch.exclude linux-2.5.50-kb/Documentation/scaled_math.txt linux/Documentation/scaled_math.txt

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: Documentation/scaled_math.txt:3:
+scaled math. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/scaled_math.txt:79:
+scaling. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: Documentation/scaled_math.txt:103:
+remainder. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: Documentation/scaled_math.txt:121:
+SC_32(x) given an integer (or long) returns  (unsigned long long)x<<32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: Documentation/scaled_math.txt:147:
+mpy_l_X_l_ll(unsigned long mpy1, unsigned long mpy2); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: Documentation/scaled_math.txt:151:
+returns (unsigned long)(mpy1 * mpy2) & 0xffffffff  and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: Documentation/scaled_math.txt:161:
+returns (unsigned long)(divs/div) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: Documentation/scaled_math.txt:166:
+div_h_or_l_X_l_rem(unsigned long divh, unsigned long divl, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: Documentation/scaled_math.txt:168:
+returns (unsigned long)((divh << 32) | divl) / div $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#274: FILE: include/asm-generic/sc_math.h:1:
+#ifndef SC_MATH_GENERIC

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: include/asm-generic/sc_math.h:12:
+#define SC_n(n,x) (((unsigned long long)(x)) << (n))
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#290: FILE: include/asm-generic/sc_math.h:17:
+#define SCC_MASK ((1 << SCC_SHIFT) -1)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: include/asm-generic/sc_math.h:22:
+extern inline long long mpy_l_X_l_ll(unsigned long mpy1,unsigned long mpy2)
                                                        ^

CHECK:SPACING: No space is necessary after a cast
#297: FILE: include/asm-generic/sc_math.h:24:
+	unsigned long low1 = (unsigned) (mpy1 & SCC_MASK);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: include/asm-generic/sc_math.h:24:
+	unsigned long low1 = (unsigned) (mpy1 & SCC_MASK);

CHECK:SPACING: No space is necessary after a cast
#299: FILE: include/asm-generic/sc_math.h:26:
+	unsigned long low2 = (unsigned) (mpy2 & SCC_MASK);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#299: FILE: include/asm-generic/sc_math.h:26:
+	unsigned long low2 = (unsigned) (mpy2 & SCC_MASK);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: include/asm-generic/sc_math.h:31:
+        return ^I(((long long)(high1 * high2)) << (SCC_SHIFT + SCC_SHIFT)) + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: include/asm-generic/sc_math.h:31:
+        return ^I(((long long)(high1 * high2)) << (SCC_SHIFT + SCC_SHIFT)) + $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: include/asm-generic/sc_math.h:31:
+        return ^I(((long long)(high1 * high2)) << (SCC_SHIFT + SCC_SHIFT)) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: include/asm-generic/sc_math.h:31:
+        return ^I(((long long)(high1 * high2)) << (SCC_SHIFT + SCC_SHIFT)) + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: include/asm-generic/sc_math.h:33:
+^I        (low1 * low2);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#308: FILE: include/asm-generic/sc_math.h:35:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#309: FILE: include/asm-generic/sc_math.h:36:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: include/asm-generic/sc_math.h:44:
+	long long result = mpy_l_X_l_ll((unsigned long)mpy1, mpy2);
+	result +=  (mpy_l_X_l_ll((long)(mpy1 >> 32), mpy2) << 32);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#320: FILE: include/asm-generic/sc_math.h:47:
+}
+/*

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#321: FILE: include/asm-generic/sc_math.h:48:
+ * mpy a long by a long and return the low part and a seperate hi part
                                                       ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: include/asm-generic/sc_math.h:51:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: include/asm-generic/sc_math.h:53:
+extern inline unsigned long  mpy_l_X_l_h(unsigned long mpy1,
+				unsigned long mpy2,

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: include/asm-generic/sc_math.h:58:
+        return (unsigned long)it;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: include/asm-generic/sc_math.h:58:
+        return (unsigned long)it;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#333: FILE: include/asm-generic/sc_math.h:60:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#334: FILE: include/asm-generic/sc_math.h:61:
+}
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: include/asm-generic/sc_math.h:67:
+extern inline unsigned long mpy_sc32(unsigned long a,unsigned long b)
                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: include/asm-generic/sc_math.h:69:
+        return (unsigned long)(mpy_l_X_l_ll(a, b) >> 32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: include/asm-generic/sc_math.h:69:
+        return (unsigned long)(mpy_l_X_l_ll(a, b) >> 32);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#344: FILE: include/asm-generic/sc_math.h:71:
+}
+/*

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#348: FILE: include/asm-generic/sc_math.h:75:
+#if 0  // maybe one day we will do signed numbers...

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'result' - possible side-effects?
#352: FILE: include/asm-generic/sc_math.h:79:
+#define do_div_signed(result, div)					\
+({									\
+        long rem, flip = 0;						\
+	if (result < 0){						\
+		result = -result;					\
+		flip = 2;                 /* flip rem & result sign*/	\
+		if (div < 0){						\
+			div = -div;					\
+			flip--;          /* oops, just flip rem */	\
+		}							\
+	}								\
+	rem = do_div(result,div);					\
+	rem = flip ? -rem : rem;					\
+	if ( flip == 2)							\
+		result = -result;					\
+	rem;								\
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'result' may be better as '(result)' to avoid precedence issues
#352: FILE: include/asm-generic/sc_math.h:79:
+#define do_div_signed(result, div)					\
+({									\
+        long rem, flip = 0;						\
+	if (result < 0){						\
+		result = -result;					\
+		flip = 2;                 /* flip rem & result sign*/	\
+		if (div < 0){						\
+			div = -div;					\
+			flip--;          /* oops, just flip rem */	\
+		}							\
+	}								\
+	rem = do_div(result,div);					\
+	rem = flip ? -rem : rem;					\
+	if ( flip == 2)							\
+		result = -result;					\
+	rem;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'div' - possible side-effects?
#352: FILE: include/asm-generic/sc_math.h:79:
+#define do_div_signed(result, div)					\
+({									\
+        long rem, flip = 0;						\
+	if (result < 0){						\
+		result = -result;					\
+		flip = 2;                 /* flip rem & result sign*/	\
+		if (div < 0){						\
+			div = -div;					\
+			flip--;          /* oops, just flip rem */	\
+		}							\
+	}								\
+	rem = do_div(result,div);					\
+	rem = flip ? -rem : rem;					\
+	if ( flip == 2)							\
+		result = -result;					\
+	rem;								\
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'div' may be better as '(div)' to avoid precedence issues
#352: FILE: include/asm-generic/sc_math.h:79:
+#define do_div_signed(result, div)					\
+({									\
+        long rem, flip = 0;						\
+	if (result < 0){						\
+		result = -result;					\
+		flip = 2;                 /* flip rem & result sign*/	\
+		if (div < 0){						\
+			div = -div;					\
+			flip--;          /* oops, just flip rem */	\
+		}							\
+	}								\
+	rem = do_div(result,div);					\
+	rem = flip ? -rem : rem;					\
+	if ( flip == 2)							\
+		result = -result;					\
+	rem;								\
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: include/asm-generic/sc_math.h:81:
+        long rem, flip = 0;^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: include/asm-generic/sc_math.h:81:
+        long rem, flip = 0;^I^I^I^I^I^I\$

ERROR:SPACING: space required before the open brace '{'
#355: FILE: include/asm-generic/sc_math.h:82:
+	if (result < 0){						\

ERROR:SPACING: space required before the open brace '{'
#358: FILE: include/asm-generic/sc_math.h:85:
+		if (div < 0){						\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: include/asm-generic/sc_math.h:90:
+	rem = do_div(result,div);					\
 	                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#365: FILE: include/asm-generic/sc_math.h:92:
+	if ( flip == 2)							\

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: include/asm-generic/sc_math.h:101:
+	unsigned long long result = SC_32(a);
+	do_div(result, b);

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: include/asm-generic/sc_math.h:102:
+        return (unsigned long)result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: include/asm-generic/sc_math.h:102:
+        return (unsigned long)result;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#377: FILE: include/asm-generic/sc_math.h:104:
+}
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: include/asm-generic/sc_math.h:109:
+#define mpy_sc24(a,b) mpy_sc_n(24,(a),(b))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: include/asm-generic/sc_math.h:109:
+#define mpy_sc24(a,b) mpy_sc_n(24,(a),(b))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: include/asm-generic/sc_math.h:109:
+#define mpy_sc24(a,b) mpy_sc_n(24,(a),(b))
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: include/asm-generic/sc_math.h:113:
+#define div_sc24(a,b) div_sc_n(24,(a),(b))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: include/asm-generic/sc_math.h:113:
+#define div_sc24(a,b) div_sc_n(24,(a),(b))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: include/asm-generic/sc_math.h:113:
+#define div_sc24(a,b) div_sc_n(24,(a),(b))
                                      ^

WARNING:TYPO_SPELLING: 'signifigant' may be misspelled - perhaps 'significant'?
#395: FILE: include/asm-generic/sc_math.h:122:
+ *     keeping more signifigant bits.
                     ^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#402: FILE: include/asm-generic/sc_math.h:129:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: include/asm-generic/sc_math.h:130:
+#define mpy_sc_n(N,aa,bb) ({(unsigned long)(mpy_l_X_l_ll((aa), (bb)) >> (N));})
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#403: FILE: include/asm-generic/sc_math.h:130:
+#define mpy_sc_n(N,aa,bb) ({(unsigned long)(mpy_l_X_l_ll((aa), (bb)) >> (N));})
                      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#403: FILE: include/asm-generic/sc_math.h:130:
+#define mpy_sc_n(N,aa,bb) ({(unsigned long)(mpy_l_X_l_ll((aa), (bb)) >> (N));})
                                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: include/asm-generic/sc_math.h:133:
+#define div_sc_n(N,aa,bb) ({unsigned long long result = SC_n((N), (aa)); \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: include/asm-generic/sc_math.h:133:
+#define div_sc_n(N,aa,bb) ({unsigned long long result = SC_n((N), (aa)); \
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: include/asm-generic/sc_math.h:134:
+                            do_div(result, (bb)); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: include/asm-generic/sc_math.h:134:
+                            do_div(result, (bb)); \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: include/asm-generic/sc_math.h:135:
+                            (long)result;})  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: include/asm-generic/sc_math.h:135:
+                            (long)result;})  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: include/asm-generic/sc_math.h:135:
+                            (long)result;})  $

ERROR:SPACING: space required after that ';' (ctx:VxV)
#408: FILE: include/asm-generic/sc_math.h:135:
+                            (long)result;})  
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: include/asm-generic/sc_math.h:137:
+  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: include/asm-generic/sc_math.h:137:
+
+  

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: include/asm-generic/sc_math.h:137:
+  $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#418: FILE: include/asm-generic/sc_math.h:145:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem((a),(b),(c))
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#418: FILE: include/asm-generic/sc_math.h:145:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem((a),(b),(c))
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#418: FILE: include/asm-generic/sc_math.h:145:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem((a),(b),(c))
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#418: FILE: include/asm-generic/sc_math.h:145:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem((a),(b),(c))
                                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: include/asm-generic/sc_math.h:148:
+extern inline unsigned long div_ll_X_l_rem(unsigned long long divs, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: include/asm-generic/sc_math.h:149:
+^I^I^I^I^I   unsigned long div, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#423: FILE: include/asm-generic/sc_math.h:150:
+					   unsigned long * rem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#429: FILE: include/asm-generic/sc_math.h:156:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: include/asm-generic/sc_math.h:159:
+extern inline unsigned long div_ll_X_l(unsigned long long divs, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: include/asm-generic/sc_math.h:163:
+        do_div(it, div);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: include/asm-generic/sc_math.h:163:
+        do_div(it, div);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: include/asm-generic/sc_math.h:164:
+        return (unsigned long)it;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: include/asm-generic/sc_math.h:164:
+        return (unsigned long)it;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#439: FILE: include/asm-generic/sc_math.h:166:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: include/asm-generic/sc_math.h:174:
+^I^I^I^I^I       unsigned long divl, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#449: FILE: include/asm-generic/sc_math.h:176:
+					       unsigned long* rem)

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: include/asm-generic/sc_math.h:180:
+        return div_ll_X_l_rem(result, (div), (rem));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: include/asm-generic/sc_math.h:180:
+        return div_ll_X_l_rem(result, (div), (rem));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#455: FILE: include/asm-generic/sc_math.h:182:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#459: FILE: include/asm-generic/sc_math.h:186:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: include/asm-generic/sc_math.h:187:
+ * The 64-bit long machine can do most of these in native C.  We assume that $

WARNING:TYPO_SPELLING: 'enought' may be misspelled - perhaps 'enough'?
#462: FILE: include/asm-generic/sc_math.h:189:
+ * deal with longs.  This code should be tight enought that asm code is not
                                                ^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#472: FILE: include/asm-generic/sc_math.h:199:
+{
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: include/asm-generic/sc_math.h:200:
+        return (mpy1) * (mpy2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: include/asm-generic/sc_math.h:200:
+        return (mpy1) * (mpy2);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#475: FILE: include/asm-generic/sc_math.h:202:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#476: FILE: include/asm-generic/sc_math.h:203:
+}
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: include/asm-generic/sc_math.h:208:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: include/asm-generic/sc_math.h:215:
+        return it & 0xffffffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: include/asm-generic/sc_math.h:215:
+        return it & 0xffffffff;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#490: FILE: include/asm-generic/sc_math.h:217:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#491: FILE: include/asm-generic/sc_math.h:218:
+}
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: include/asm-generic/sc_math.h:226:
+        return (mpy1 * mpy2) >> 32);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: include/asm-generic/sc_math.h:226:
+        return (mpy1 * mpy2) >> 32);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#501: FILE: include/asm-generic/sc_math.h:228:
+}
+/*

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#509: FILE: include/asm-generic/sc_math.h:236:
+}
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: include/asm-generic/sc_math.h:241:
+#define mpy_sc24(a,b) mpy_sc_n(24,a,b)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: include/asm-generic/sc_math.h:241:
+#define mpy_sc24(a,b) mpy_sc_n(24,a,b)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: include/asm-generic/sc_math.h:241:
+#define mpy_sc24(a,b) mpy_sc_n(24,a,b)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: include/asm-generic/sc_math.h:245:
+#define div_sc24(a,b) div_sc_n(24,a,b)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: include/asm-generic/sc_math.h:245:
+#define div_sc24(a,b) div_sc_n(24,a,b)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: include/asm-generic/sc_math.h:245:
+#define div_sc24(a,b) div_sc_n(24,a,b)
                                    ^

WARNING:TYPO_SPELLING: 'signifigant' may be misspelled - perhaps 'significant'?
#527: FILE: include/asm-generic/sc_math.h:254:
+ *     keeping more signifigant bits.
                     ^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#534: FILE: include/asm-generic/sc_math.h:261:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: include/asm-generic/sc_math.h:262:
+#define mpy_sc_n(N,aa,bb) ((aa) * (bb)) >> N)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: include/asm-generic/sc_math.h:262:
+#define mpy_sc_n(N,aa,bb) ((aa) * (bb)) >> N)
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#535: FILE: include/asm-generic/sc_math.h:262:
+#define mpy_sc_n(N,aa,bb) ((aa) * (bb)) >> N)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'N' may be better as '(N)' to avoid precedence issues
#535: FILE: include/asm-generic/sc_math.h:262:
+#define mpy_sc_n(N,aa,bb) ((aa) * (bb)) >> N)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#538: FILE: include/asm-generic/sc_math.h:265:
+#define div_sc_n(N,aa,bb) (SC_n((N), (aa)) / (bb))
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#538: FILE: include/asm-generic/sc_math.h:265:
+#define div_sc_n(N,aa,bb) (SC_n((N), (aa)) / (bb))
                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: include/asm-generic/sc_math.h:267:
+  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#540: FILE: include/asm-generic/sc_math.h:267:
+
+  

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: include/asm-generic/sc_math.h:267:
+  $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: include/asm-generic/sc_math.h:275:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem(a, b, c)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#548: FILE: include/asm-generic/sc_math.h:275:
+#define div_long_long_rem(a,b,c) div_ll_X_l_rem(a, b, c)
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: include/asm-generic/sc_math.h:278:
+extern inline unsigned long div_ll_X_l_rem(unsigned long divs, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: include/asm-generic/sc_math.h:279:
+^I^I^I^I^I   unsigned long div, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#553: FILE: include/asm-generic/sc_math.h:280:
+					   unsigned long * rem)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#558: FILE: include/asm-generic/sc_math.h:285:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: include/asm-generic/sc_math.h:288:
+extern inline unsigned long div_ll_X_l(unsigned long divs, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: include/asm-generic/sc_math.h:291:
+        return divs / div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: include/asm-generic/sc_math.h:291:
+        return divs / div;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#566: FILE: include/asm-generic/sc_math.h:293:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: include/asm-generic/sc_math.h:301:
+^I^I^I^I^I       unsigned long divl, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#576: FILE: include/asm-generic/sc_math.h:303:
+					       unsigned long* rem)

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: include/asm-generic/sc_math.h:307:
+        return div_ll_X_l_rem(result, div, rem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: include/asm-generic/sc_math.h:307:
+        return div_ll_X_l_rem(result, div, rem);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#582: FILE: include/asm-generic/sc_math.h:309:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#589: FILE: include/asm-i386/sc_math.h:1:
+#ifndef SC_MATH

CHECK:LINE_SPACING: Please don't use multiple blank lines
#595: FILE: include/asm-i386/sc_math.h:7:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#599: FILE: include/asm-i386/sc_math.h:11:
+#define SC_32(x) ((unsigned long long)x<<32)
                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#599: FILE: include/asm-i386/sc_math.h:11:
+#define SC_32(x) ((unsigned long long)x<<32)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#600: FILE: include/asm-i386/sc_math.h:12:
+#define SC_n(n,x) (((unsigned long long)x)<<n)
               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#600: FILE: include/asm-i386/sc_math.h:12:
+#define SC_n(n,x) (((unsigned long long)x)<<n)
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#600: FILE: include/asm-i386/sc_math.h:12:
+#define SC_n(n,x) (((unsigned long long)x)<<n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: include/asm-i386/sc_math.h:23:
+      __asm__("mull %2":"=a"(a), "=d"(edx)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#611: FILE: include/asm-i386/sc_math.h:23:
+      __asm__("mull %2":"=a"(a), "=d"(edx)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: include/asm-i386/sc_math.h:24:
+      :^I"rm"(b), "0"(a));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#615: FILE: include/asm-i386/sc_math.h:27:
+}
+/*

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#622: FILE: include/asm-i386/sc_math.h:34:
+	unsigned long dum;
 	              ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#623: FILE: include/asm-i386/sc_math.h:35:
+      __asm__("divl %2":"=a"(b), "=d"(dum)
                                       ^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: include/asm-i386/sc_math.h:35:
+      __asm__("divl %2":"=a"(b), "=d"(dum)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#623: FILE: include/asm-i386/sc_math.h:35:
+      __asm__("divl %2":"=a"(b), "=d"(dum)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: include/asm-i386/sc_math.h:36:
+      :^I"r"(b), "0"(0), "1"(a));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#628: FILE: include/asm-i386/sc_math.h:40:
+}
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: include/asm-i386/sc_math.h:45:
+#define mpy_sc24(a,b) mpy_sc_n(24,a,b)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: include/asm-i386/sc_math.h:45:
+#define mpy_sc24(a,b) mpy_sc_n(24,a,b)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: include/asm-i386/sc_math.h:45:
+#define mpy_sc24(a,b) mpy_sc_n(24,a,b)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#637: FILE: include/asm-i386/sc_math.h:49:
+#define div_sc24(a,b) div_sc_n(24,a,b)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#637: FILE: include/asm-i386/sc_math.h:49:
+#define div_sc24(a,b) div_sc_n(24,a,b)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#637: FILE: include/asm-i386/sc_math.h:49:
+#define div_sc24(a,b) div_sc_n(24,a,b)
                                    ^

WARNING:TYPO_SPELLING: 'signifigant' may be misspelled - perhaps 'significant'?
#646: FILE: include/asm-i386/sc_math.h:58:
+ *     keeping more signifigant bits.
                     ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'repaced' may be misspelled - perhaps 'replaced'?
#647: FILE: include/asm-i386/sc_math.h:59:
+ * B.) Often an in line div can be repaced with a mpy
                                    ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: include/asm-i386/sc_math.h:63:
+#define mpy_sc_n(N,aa,bb) ({unsigned long edx, a=aa, b=bb; \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: include/asm-i386/sc_math.h:63:
+#define mpy_sc_n(N,aa,bb) ({unsigned long edx, a=aa, b=bb; \
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#651: FILE: include/asm-i386/sc_math.h:63:
+#define mpy_sc_n(N,aa,bb) ({unsigned long edx, a=aa, b=bb; \
                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#651: FILE: include/asm-i386/sc_math.h:63:
+#define mpy_sc_n(N,aa,bb) ({unsigned long edx, a=aa, b=bb; \
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: include/asm-i386/sc_math.h:65:
+                "shldl $(32-"MATH_STR(N)"), %0, %1"    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: include/asm-i386/sc_math.h:65:
+                "shldl $(32-"MATH_STR(N)"), %0, %1"    \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#653: FILE: include/asm-i386/sc_math.h:65:
+                "shldl $(32-"MATH_STR(N)"), %0, %1"    \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#654: FILE: include/asm-i386/sc_math.h:66:
+		:"=a" (a), "=d" (edx)\
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#655: FILE: include/asm-i386/sc_math.h:67:
+		:"rm" (b),            \
 		^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#656: FILE: include/asm-i386/sc_math.h:68:
+		 "0" (a)); edx;})
 		              ^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#658: FILE: include/asm-i386/sc_math.h:70:
+#define div_sc_n(N,aa,bb) ({unsigned long dum=aa, dum2, b=bb; \
                                           ^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: include/asm-i386/sc_math.h:70:
+#define div_sc_n(N,aa,bb) ({unsigned long dum=aa, dum2, b=bb; \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: include/asm-i386/sc_math.h:70:
+#define div_sc_n(N,aa,bb) ({unsigned long dum=aa, dum2, b=bb; \
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#658: FILE: include/asm-i386/sc_math.h:70:
+#define div_sc_n(N,aa,bb) ({unsigned long dum=aa, dum2, b=bb; \
                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#658: FILE: include/asm-i386/sc_math.h:70:
+#define div_sc_n(N,aa,bb) ({unsigned long dum=aa, dum2, b=bb; \
                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'N' - possible side-effects?
#658: FILE: include/asm-i386/sc_math.h:70:
+#define div_sc_n(N,aa,bb) ({unsigned long dum=aa, dum2, b=bb; \
+        __asm__("shrdl $(32-"MATH_STR(N)"), %4, %3\n\t"  \
+                "sarl $(32-"MATH_STR(N)"), %4\n\t"      \
+                "divl %2"              \
+                :"=a" (dum2), "=d" (dum)      \
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: include/asm-i386/sc_math.h:71:
+        __asm__("shrdl $(32-"MATH_STR(N)"), %4, %3\n\t"  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: include/asm-i386/sc_math.h:71:
+        __asm__("shrdl $(32-"MATH_STR(N)"), %4, %3\n\t"  \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#659: FILE: include/asm-i386/sc_math.h:71:
+        __asm__("shrdl $(32-"MATH_STR(N)"), %4, %3\n\t"  \

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: include/asm-i386/sc_math.h:72:
+                "sarl $(32-"MATH_STR(N)"), %4\n\t"      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: include/asm-i386/sc_math.h:72:
+                "sarl $(32-"MATH_STR(N)"), %4\n\t"      \$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#660: FILE: include/asm-i386/sc_math.h:72:
+                "sarl $(32-"MATH_STR(N)"), %4\n\t"      \

ERROR:CODE_INDENT: code indent should use tabs where possible
#661: FILE: include/asm-i386/sc_math.h:73:
+                "divl %2"              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: include/asm-i386/sc_math.h:73:
+                "divl %2"              \$

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#662: FILE: include/asm-i386/sc_math.h:74:
+                :"=a" (dum2), "=d" (dum)      \
                                     ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: include/asm-i386/sc_math.h:74:
+                :"=a" (dum2), "=d" (dum)      \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: include/asm-i386/sc_math.h:74:
+                :"=a" (dum2), "=d" (dum)      \$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#662: FILE: include/asm-i386/sc_math.h:74:
+                :"=a" (dum2), "=d" (dum)      \
                 ^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#663: FILE: include/asm-i386/sc_math.h:75:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})
                                          ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: include/asm-i386/sc_math.h:75:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: include/asm-i386/sc_math.h:75:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#663: FILE: include/asm-i386/sc_math.h:75:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})
                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#663: FILE: include/asm-i386/sc_math.h:75:
+                :"rm" (b), "0" (0), "1" (dum)); dum2;})
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: include/asm-i386/sc_math.h:89:
+      __asm__("divl %2":"=a"(dum2), "=d"(*rem)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#677: FILE: include/asm-i386/sc_math.h:89:
+      __asm__("divl %2":"=a"(dum2), "=d"(*rem)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: include/asm-i386/sc_math.h:90:
+      :^I"rm"(div), "A"(divs));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#682: FILE: include/asm-i386/sc_math.h:94:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#683: FILE: include/asm-i386/sc_math.h:95:
+}
+/*

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#689: FILE: include/asm-i386/sc_math.h:101:
+	unsigned long dum;
 	              ^^^

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#690: FILE: include/asm-i386/sc_math.h:102:
+	return div_ll_X_l_rem(divs, div, &dum);
 	                                  ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#690: FILE: include/asm-i386/sc_math.h:102:
+	unsigned long dum;
+	return div_ll_X_l_rem(divs, div, &dum);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#692: FILE: include/asm-i386/sc_math.h:104:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: include/asm-i386/sc_math.h:111:
+div_h_or_l_X_l_rem(unsigned long divh, unsigned long divl, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: include/asm-i386/sc_math.h:115:
+      __asm__("idivl %2":"=a"(dum2), "=d"(*rem)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#703: FILE: include/asm-i386/sc_math.h:115:
+      __asm__("idivl %2":"=a"(dum2), "=d"(*rem)
                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: include/asm-i386/sc_math.h:116:
+      :^I"rm"(div), "0"(divl), "1"(divh));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#708: FILE: include/asm-i386/sc_math.h:120:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#709: FILE: include/asm-i386/sc_math.h:121:
+}
+extern inline unsigned long long

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: include/asm-i386/sc_math.h:125:
+      __asm__("mull %1\n\t":"=A"(eax)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#713: FILE: include/asm-i386/sc_math.h:125:
+      __asm__("mull %1\n\t":"=A"(eax)
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: include/asm-i386/sc_math.h:126:
+      :^I"rm"(mpy2), "a"(mpy1));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#718: FILE: include/asm-i386/sc_math.h:130:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#719: FILE: include/asm-i386/sc_math.h:131:
+}
+extern inline unsigned long

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: include/asm-i386/sc_math.h:135:
+      __asm__("mull %2\n\t":"=a"(eax), "=d"(*hi)$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#723: FILE: include/asm-i386/sc_math.h:135:
+      __asm__("mull %2\n\t":"=a"(eax), "=d"(*hi)
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: include/asm-i386/sc_math.h:136:
+      :^I"rm"(mpy2), "0"(mpy1));$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#728: FILE: include/asm-i386/sc_math.h:140:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#729: FILE: include/asm-i386/sc_math.h:141:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: include/asm-i386/sc_math.h:142:
+ * mpy a unsigned long long by a unsigned long and return a unsigned long long $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: include/asm-i386/sc_math.h:144:
+extern inline unsigned long long $

WARNING:LINE_SPACING: Missing a blank line after declarations
#736: FILE: include/asm-i386/sc_math.h:148:
+	unsigned long long result = mpy_l_X_l_ll((unsigned long)mpy1, mpy2);
+	result +=  (mpy_l_X_l_ll((long)(mpy1 >> 32), mpy2) << 32);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 109 errors, 61 warnings, 61 checks, 632 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
