WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> > > dummyphp, this is the version that works. I'll rediff it soon and hope

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: drivers/pci/hotplug/Kconfig:22:
+config HOTPLUG_PCI_DUMMY
+ tristate "Dummy PCI Hotplug driver"
  depends on HOTPLUG_PCI
  help
+   Say Y here if you want to use the dummy PCI hotplug driver. It can
+   Say Y here if you want to use the dummy PCI hotplug driver. It can
+   Say Y here if you want to use the dummy PCI hotplug driver. It can
+   Say Y here if you want to use the dummy PCI hotplug driver. It can
+   be used to simulate PCI hotplug events even if your system is not
+   PCI hotplug capable.
 
    This driver will "emulate" removing PCI devices from the system.
    If the "power" file is written to with "0" then the specified PCI
+   device will be completely removed from the kernel. Writing "1" to
+   device will be completely removed from the kernel. Writing "1" to
+   the power file will bring the device back.
+
+   Be careful: it claims all PCI slots in the system with a device in it.
+   There will be side effects on other hotplug drivers, so do NOT use
+   another hotplug driver at the same time.
 
    WARNING, this does NOT turn off the power to the PCI device.
    This is a "logical" removal, not a physical or electrical
    removal.
 
+   To compile this driver as a module, choose M here: the module
+   To compile this driver as a module, choose M here: the module
+   To compile this driver as a module, choose M here: the module
+   To compile this driver as a module, choose M here: the module
+   To compile this driver as a module, choose M here: the module
+   will be called dummyphp.
 
    When in doubt, say N.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: drivers/pci/hotplug/dummyphp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/pci/hotplug/dummyphp.c:43:
+ do {       \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#168: FILE: drivers/pci/hotplug/dummyphp.c:43:
+ do {       \
+  if (debug)     \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/pci/hotplug/dummyphp.c:44:
+  if (debug)     \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#169: FILE: drivers/pci/hotplug/dummyphp.c:44:
+  if (debug)     \
+   printk(KERN_DEBUG "%s: " format, \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/pci/hotplug/dummyphp.c:45:
+   printk(KERN_DEBUG "%s: " format, \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#170: FILE: drivers/pci/hotplug/dummyphp.c:45:
+   printk(KERN_DEBUG "%s: " format, \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/pci/hotplug/dummyphp.c:46:
+    MY_NAME , ## arg);   \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#171: FILE: drivers/pci/hotplug/dummyphp.c:46:
+    MY_NAME , ## arg);   \
             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/pci/hotplug/dummyphp.c:47:
+ } while (0)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#173: FILE: drivers/pci/hotplug/dummyphp.c:48:
+#define err(format, arg...) printk(KERN_ERR "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#173: FILE: drivers/pci/hotplug/dummyphp.c:48:
+#define err(format, arg...) printk(KERN_ERR "%s: " format, MY_NAME , ## arg)
                                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#174: FILE: drivers/pci/hotplug/dummyphp.c:49:
+#define info(format, arg...) printk(KERN_INFO "%s: " format, MY_NAME , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#174: FILE: drivers/pci/hotplug/dummyphp.c:49:
+#define info(format, arg...) printk(KERN_INFO "%s: " format, MY_NAME , ## arg)
                                                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/pci/hotplug/dummyphp.c:55:
+ struct list_head node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/pci/hotplug/dummyphp.c:56:
+ struct hotplug_slot *slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/pci/hotplug/dummyphp.c:57:
+ struct pci_dev  *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/pci/hotplug/dummyphp.c:58:
+ struct pci_bus  *bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/pci/hotplug/dummyphp.c:59:
+ int   devfn;$

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#197: FILE: drivers/pci/hotplug/dummyphp.c:72:
+module_param(debug, bool, 644);
Permission bits should use 4 digit octal permissions (like 0700 or 0444).
Avoid using any other base like decimal.

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#199: FILE: drivers/pci/hotplug/dummyphp.c:74:
+module_param(showunused, bool, 644);
WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/pci/hotplug/dummyphp.c:81:
+ .owner   = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/pci/hotplug/dummyphp.c:82:
+ .enable_slot  = enable_slot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/pci/hotplug/dummyphp.c:83:
+ .disable_slot  = disable_slot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/pci/hotplug/dummyphp.c:84:
+ .get_adapter_status = get_adapter_status$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/pci/hotplug/dummyphp.c:93:
+ struct dummy_slot *dslot = slot->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/pci/hotplug/dummyphp.c:95:
+ list_del(&dslot->node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/pci/hotplug/dummyphp.c:96:
+ kfree(dslot->slot->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/pci/hotplug/dummyphp.c:97:
+ kfree(dslot->slot->info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/pci/hotplug/dummyphp.c:98:
+ kfree(dslot->slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/pci/hotplug/dummyphp.c:99:
+ if (dslot->dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#224: FILE: drivers/pci/hotplug/dummyphp.c:99:
+ if (dslot->dev)
+  pci_dev_put(dslot->dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/pci/hotplug/dummyphp.c:100:
+  pci_dev_put(dslot->dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/pci/hotplug/dummyphp.c:101:
+ kfree(dslot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/pci/hotplug/dummyphp.c:111:
+ struct dummy_slot *dslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/pci/hotplug/dummyphp.c:113:
+ dslot = slot->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/pci/hotplug/dummyphp.c:115:
+ *value = pci_scan_slot(dslot->bus, dslot->devfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/pci/hotplug/dummyphp.c:116:
+ slot->info->adapter_status = *value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/pci/hotplug/dummyphp.c:118:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/pci/hotplug/dummyphp.c:129:
+ struct dummy_slot *dslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/pci/hotplug/dummyphp.c:130:
+ struct hotplug_slot *slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/pci/hotplug/dummyphp.c:131:
+ int retval = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/pci/hotplug/dummyphp.c:133:
+ dslot = kmalloc(sizeof(*dslot), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/pci/hotplug/dummyphp.c:134:
+ if (!dslot)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#259: FILE: drivers/pci/hotplug/dummyphp.c:134:
+ if (!dslot)
+  goto error;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/pci/hotplug/dummyphp.c:135:
+  goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/pci/hotplug/dummyphp.c:137:
+ dslot->bus = dev->bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/pci/hotplug/dummyphp.c:138:
+ dslot->devfn = dev->devfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/pci/hotplug/dummyphp.c:140:
+ dslot->dev = pci_get_slot(dslot->bus, dslot->devfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/pci/hotplug/dummyphp.c:142:
+ if (showunused || dslot->dev) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#267: FILE: drivers/pci/hotplug/dummyphp.c:142:
+ if (showunused || dslot->dev) {
+  retval = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/pci/hotplug/dummyphp.c:143:
+  retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/pci/hotplug/dummyphp.c:144:
+  goto error_dslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/pci/hotplug/dummyphp.c:145:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/pci/hotplug/dummyphp.c:147:
+ slot = kmalloc(sizeof(*slot), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/pci/hotplug/dummyphp.c:148:
+ if (!slot)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#273: FILE: drivers/pci/hotplug/dummyphp.c:148:
+ if (!slot)
+  goto error_dslot;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/pci/hotplug/dummyphp.c:149:
+  goto error_dslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/pci/hotplug/dummyphp.c:151:
+ memset(slot, 0, sizeof(*slot));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/pci/hotplug/dummyphp.c:153:
+ slot->info = kmalloc(sizeof(*(slot->info)), GFP_KERNEL);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around slot->info
#278: FILE: drivers/pci/hotplug/dummyphp.c:153:
+ slot->info = kmalloc(sizeof(*(slot->info)), GFP_KERNEL);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/pci/hotplug/dummyphp.c:154:
+ if (!slot->info)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#279: FILE: drivers/pci/hotplug/dummyphp.c:154:
+ if (!slot->info)
+  goto error_slot;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/pci/hotplug/dummyphp.c:155:
+  goto error_slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/pci/hotplug/dummyphp.c:157:
+ memset(slot->info, 0, sizeof(struct hotplug_slot_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/pci/hotplug/dummyphp.c:159:
+ slot->info->max_bus_speed = PCI_SPEED_UNKNOWN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/pci/hotplug/dummyphp.c:160:
+ slot->info->cur_bus_speed = PCI_SPEED_UNKNOWN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/pci/hotplug/dummyphp.c:162:
+ slot->name = kmalloc(SLOT_NAME_SIZE, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/pci/hotplug/dummyphp.c:163:
+ if (!slot->name)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#288: FILE: drivers/pci/hotplug/dummyphp.c:163:
+ if (!slot->name)
+  goto error_info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/pci/hotplug/dummyphp.c:164:
+  goto error_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/pci/hotplug/dummyphp.c:165:
+ slot->info->power_status = (dslot->dev != NULL);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dslot->dev"
#290: FILE: drivers/pci/hotplug/dummyphp.c:165:
+ slot->info->power_status = (dslot->dev != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/pci/hotplug/dummyphp.c:166:
+ slot->info->adapter_status = slot->info->power_status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/pci/hotplug/dummyphp.c:168:
+ slot->ops = &dummy_hotplug_slot_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/pci/hotplug/dummyphp.c:169:
+ slot->release = &dummy_release;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/pci/hotplug/dummyphp.c:170:
+ slot->private = dslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/pci/hotplug/dummyphp.c:172:
+ snprintf(slot->name, SLOT_NAME_SIZE, "%04x:%02x:%02x",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/pci/hotplug/dummyphp.c:173:
+ snprintf(slot->name, SLOT_NAME_SIZE, "%04x:%02x:%02x",
+  pci_domain_nr(dev->bus), dslot->bus->number,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/pci/hotplug/dummyphp.c:173:
+  pci_domain_nr(dev->bus), dslot->bus->number,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/pci/hotplug/dummyphp.c:174:
+  PCI_SLOT(dslot->devfn));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/pci/hotplug/dummyphp.c:176:
+ retval = pci_hp_register(slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/pci/hotplug/dummyphp.c:177:
+ if (retval) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#302: FILE: drivers/pci/hotplug/dummyphp.c:177:
+ if (retval) {
+  err("pci_hp_register failed with error %d\n", retval);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/pci/hotplug/dummyphp.c:178:
+  err("pci_hp_register failed with error %d\n", retval);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/pci/hotplug/dummyphp.c:179:
+  goto error_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/pci/hotplug/dummyphp.c:180:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/pci/hotplug/dummyphp.c:182:
+ dslot->slot = slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/pci/hotplug/dummyphp.c:183:
+ list_add(&dslot->node, &slot_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/pci/hotplug/dummyphp.c:185:
+ return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/pci/hotplug/dummyphp.c:188:
+ kfree(slot->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/pci/hotplug/dummyphp.c:190:
+ kfree(slot->info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/pci/hotplug/dummyphp.c:192:
+ kfree(slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/pci/hotplug/dummyphp.c:194:
+ pci_dev_put(dslot->dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/pci/hotplug/dummyphp.c:195:
+ kfree(dslot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/pci/hotplug/dummyphp.c:197:
+ return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/pci/hotplug/dummyphp.c:207:
+ int retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/pci/hotplug/dummyphp.c:208:
+ struct pci_dev dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/pci/hotplug/dummyphp.c:210:
+ memset(&dev, 0, sizeof(dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/pci/hotplug/dummyphp.c:211:
+ dev.bus = bus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/pci/hotplug/dummyphp.c:212:
+ for (dev.devfn = 0; dev.devfn < 0x100; dev.devfn += 8) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#337: FILE: drivers/pci/hotplug/dummyphp.c:212:
+ for (dev.devfn = 0; dev.devfn < 0x100; dev.devfn += 8) {
+  retval = add_slot(&dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/pci/hotplug/dummyphp.c:213:
+  retval = add_slot(&dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/pci/hotplug/dummyphp.c:214:
+  if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#339: FILE: drivers/pci/hotplug/dummyphp.c:214:
+  if (retval)
+   break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/pci/hotplug/dummyphp.c:215:
+   break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/pci/hotplug/dummyphp.c:216:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/pci/hotplug/dummyphp.c:217:
+ return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/pci/hotplug/dummyphp.c:227:
+ int retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/pci/hotplug/dummyphp.c:228:
+ const struct list_head *l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/pci/hotplug/dummyphp.c:230:
+ list_for_each(l, list) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/pci/hotplug/dummyphp.c:231:
+  struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/pci/hotplug/dummyphp.c:232:
+  struct list_head *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/pci/hotplug/dummyphp.c:233:
+  struct pci_bus *b = pci_bus_b(l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/pci/hotplug/dummyphp.c:234:
+  int i = 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#362: FILE: drivers/pci/hotplug/dummyphp.c:237:
+   * a slot on the new bus registered */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/pci/hotplug/dummyphp.c:238:
+  list_for_each_safe(tmp, next, &slot_list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#363: FILE: drivers/pci/hotplug/dummyphp.c:238:
+  list_for_each_safe(tmp, next, &slot_list) {
+   if ((list_entry(tmp, struct dummy_slot, node))->bus == b) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: drivers/pci/hotplug/dummyphp.c:239:
+   if ((list_entry(tmp, struct dummy_slot, node))->bus == b) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#364: FILE: drivers/pci/hotplug/dummyphp.c:239:
+   if ((list_entry(tmp, struct dummy_slot, node))->bus == b) {
+    i = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/pci/hotplug/dummyphp.c:240:
+    i = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/pci/hotplug/dummyphp.c:241:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/pci/hotplug/dummyphp.c:242:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/pci/hotplug/dummyphp.c:243:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/pci/hotplug/dummyphp.c:244:
+  if (i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#369: FILE: drivers/pci/hotplug/dummyphp.c:244:
+  if (i)
+   continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/pci/hotplug/dummyphp.c:245:
+   continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/pci/hotplug/dummyphp.c:247:
+  retval = scan_pci_bus(b);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/pci/hotplug/dummyphp.c:248:
+  if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#373: FILE: drivers/pci/hotplug/dummyphp.c:248:
+  if (retval)
+   break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/pci/hotplug/dummyphp.c:249:
+   break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/pci/hotplug/dummyphp.c:250:
+  retval = pci_scan_buses(&b->children);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/pci/hotplug/dummyphp.c:251:
+  if (retval)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#376: FILE: drivers/pci/hotplug/dummyphp.c:251:
+  if (retval)
+   break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/pci/hotplug/dummyphp.c:252:
+   break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/pci/hotplug/dummyphp.c:253:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/pci/hotplug/dummyphp.c:254:
+ return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/pci/hotplug/dummyphp.c:264:
+ struct dummy_slot *dslot = hotplug_slot->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/pci/hotplug/dummyphp.c:265:
+ int num, result = -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/pci/hotplug/dummyphp.c:267:
+ dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#392: FILE: drivers/pci/hotplug/dummyphp.c:267:
+ dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/pci/hotplug/dummyphp.c:270:
+ if (dslot->dev != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#395: FILE: drivers/pci/hotplug/dummyphp.c:270:
+ if (dslot->dev != NULL)
+  return 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dslot->dev"
#395: FILE: drivers/pci/hotplug/dummyphp.c:270:
+ if (dslot->dev != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/pci/hotplug/dummyphp.c:271:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/pci/hotplug/dummyphp.c:273:
+ dslot->dev = pci_get_slot(dslot->bus, dslot->devfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/pci/hotplug/dummyphp.c:276:
+ if (dslot->dev == NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#401: FILE: drivers/pci/hotplug/dummyphp.c:276:
+ if (dslot->dev == NULL) {
+  num = pci_scan_slot(dslot->bus, dslot->devfn);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dslot->dev"
#401: FILE: drivers/pci/hotplug/dummyphp.c:276:
+ if (dslot->dev == NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/pci/hotplug/dummyphp.c:277:
+  num = pci_scan_slot(dslot->bus, dslot->devfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/pci/hotplug/dummyphp.c:278:
+  if (!num) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#403: FILE: drivers/pci/hotplug/dummyphp.c:278:
+  if (!num) {
+   dbg("INFO: enable_slot called on empty slot\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/pci/hotplug/dummyphp.c:279:
+   dbg("INFO: enable_slot called on empty slot\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enable_slot', this function's name, in a string
#404: FILE: drivers/pci/hotplug/dummyphp.c:279:
+   dbg("INFO: enable_slot called on empty slot\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/pci/hotplug/dummyphp.c:280:
+   return result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/pci/hotplug/dummyphp.c:281:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/pci/hotplug/dummyphp.c:283:
+  pci_bus_add_devices(dslot->bus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/pci/hotplug/dummyphp.c:285:
+  dslot->dev = pci_get_slot(dslot->bus, dslot->devfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/pci/hotplug/dummyphp.c:287:
+  WARN_ON(dslot->dev == NULL);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dslot->dev"
#412: FILE: drivers/pci/hotplug/dummyphp.c:287:
+  WARN_ON(dslot->dev == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/pci/hotplug/dummyphp.c:288:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/pci/hotplug/dummyphp.c:290:
+ if (dslot->dev->subordinate)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#415: FILE: drivers/pci/hotplug/dummyphp.c:290:
+ if (dslot->dev->subordinate)
+  result = pci_scan_buses(&(dslot->dev->subordinate->node));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/pci/hotplug/dummyphp.c:291:
+  result = pci_scan_buses(&(dslot->dev->subordinate->node));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dslot->dev->subordinate->node
#416: FILE: drivers/pci/hotplug/dummyphp.c:291:
+  result = pci_scan_buses(&(dslot->dev->subordinate->node));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/pci/hotplug/dummyphp.c:292:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#417: FILE: drivers/pci/hotplug/dummyphp.c:292:
+ else
+  result = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/pci/hotplug/dummyphp.c:293:
+  result = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/pci/hotplug/dummyphp.c:295:
+ return result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/pci/hotplug/dummyphp.c:305:
+ struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: drivers/pci/hotplug/dummyphp.c:306:
+ struct list_head *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/pci/hotplug/dummyphp.c:307:
+ struct dummy_slot *dslot;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dslot->dev"
#437: FILE: drivers/pci/hotplug/dummyphp.c:312:
+			if (dslot->dev != NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#440: FILE: drivers/pci/hotplug/dummyphp.c:315:
+			/* FIXME: look if this bus can be reached through a
+			   different bridge. If yes, don't disable it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#440: FILE: drivers/pci/hotplug/dummyphp.c:315:
+			   different bridge. If yes, don't disable it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#443: FILE: drivers/pci/hotplug/dummyphp.c:318:
+			/* no need to disable the devices itself, this will be
+			   done by pci_remove_bus_device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#443: FILE: drivers/pci/hotplug/dummyphp.c:318:
+			   done by pci_remove_bus_device */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#460: FILE: drivers/pci/hotplug/dummyphp.c:335:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, slot->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#468: FILE: drivers/pci/hotplug/dummyphp.c:343:
+	/* check if this is a PCI bridge and remove devices on
+	   sub-buses first */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/pci/hotplug/dummyphp.c:343:
+	   sub-buses first */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/pci/hotplug/dummyphp.c:348:
+ pci_dev_put(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/pci/hotplug/dummyphp.c:351:
+ info("Slot %s removed\n", pci_name(dev));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/pci/hotplug/dummyphp.c:353:
+ for (i = 0; i < 8; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#478: FILE: drivers/pci/hotplug/dummyphp.c:353:
+ for (i = 0; i < 8; i++) {
+  dev = pci_get_slot(dslot->bus, dslot->devfn + i);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/pci/hotplug/dummyphp.c:354:
+  dev = pci_get_slot(dslot->bus, dslot->devfn + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/pci/hotplug/dummyphp.c:355:
+  if (dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#480: FILE: drivers/pci/hotplug/dummyphp.c:355:
+  if (dev)
+   pci_remove_bus_device(dev);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/pci/hotplug/dummyphp.c:356:
+   pci_remove_bus_device(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/pci/hotplug/dummyphp.c:357:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/pci/hotplug/dummyphp.c:359:
+ slot->info->power_status = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/pci/hotplug/dummyphp.c:361:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/pci/hotplug/dummyphp.c:367:
+ info(DRIVER_DESC "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/pci/hotplug/dummyphp.c:369:
+ return pci_scan_buses(&pci_root_buses);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/pci/hotplug/dummyphp.c:375:
+ struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/pci/hotplug/dummyphp.c:376:
+ struct list_head *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/pci/hotplug/dummyphp.c:377:
+ struct dummy_slot *dslot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/pci/hotplug/dummyphp.c:379:
+ list_for_each_safe(tmp, next, &slot_list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#504: FILE: drivers/pci/hotplug/dummyphp.c:379:
+ list_for_each_safe(tmp, next, &slot_list) {
+  dslot = list_entry(tmp, struct dummy_slot, node);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/pci/hotplug/dummyphp.c:380:
+  dslot = list_entry(tmp, struct dummy_slot, node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/pci/hotplug/dummyphp.c:381:
+  pci_hp_deregister(dslot->slot);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/pci/hotplug/dummyphp.c:382:
+ }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247132.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 190 warnings, 8 checks, 433 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000247132.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
