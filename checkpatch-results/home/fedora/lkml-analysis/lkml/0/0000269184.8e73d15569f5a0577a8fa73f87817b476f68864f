WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:SPACING: space required before the open parenthesis '('
#66: FILE: video/riva/fbdev.c:73:
+#define NVTRACE          if(0) printk

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#66: FILE: video/riva/fbdev.c:73:
+#define NVTRACE          if(0) printk

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#70: FILE: video/riva/fbdev.c:76:
+#define NVTRACE_ENTER(...)  NVTRACE("%s START\n", __FUNCTION__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#71: FILE: video/riva/fbdev.c:77:
+#define NVTRACE_LEAVE(...)  NVTRACE("%s END\n", __FUNCTION__)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: video/riva/fbdev.c:364:
+    0x158,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: video/riva/fbdev.c:365:
+    0x192,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: video/riva/fbdev.c:366:
+    0x1c6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: video/riva/fbdev.c:367:
+    0x200,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: video/riva/fbdev.c:368:
+    0x234,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: video/riva/fbdev.c:369:
+    0x268,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: video/riva/fbdev.c:370:
+    0x2a2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: video/riva/fbdev.c:371:
+    0x2d6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: video/riva/fbdev.c:372:
+    0x310,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: video/riva/fbdev.c:373:
+    0x344,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: video/riva/fbdev.c:374:
+    0x378,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: video/riva/fbdev.c:375:
+    0x3b2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: video/riva/fbdev.c:376:
+    0x3e6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: video/riva/fbdev.c:377:
+    0x41a,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: video/riva/fbdev.c:378:
+    0x454,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: video/riva/fbdev.c:379:
+    0x534,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#249: FILE: video/riva/fbdev.c:1054:
+ * ------------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#257: FILE: video/riva/fbdev.c:1062:
+	tmp_pmc = par->riva.PMC[0x10F0/4] & 0x0000FFFF;
 	                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#258: FILE: video/riva/fbdev.c:1063:
+	tmp_pcrt = par->riva.PCRTC0[0x081C/4] & 0xFFFFFFFC;
 	                                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level > BACKLIGHT_OFF'
#259: FILE: video/riva/fbdev.c:1064:
+	if(on && (level > BACKLIGHT_OFF)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: video/riva/fbdev.c:1064:
+	if(on && (level > BACKLIGHT_OFF)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#262: FILE: video/riva/fbdev.c:1067:
+		tmp_pmc |= riva_backlight_levels[level-1] << 16; // level
 		                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#264: FILE: video/riva/fbdev.c:1069:
+	par->riva.PCRTC0[0x081C/4] = tmp_pcrt;
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#265: FILE: video/riva/fbdev.c:1070:
+	par->riva.PMC[0x10F0/4] = tmp_pmc;
 	                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#383: FILE: video/riva/fbdev.c:1379:
+	if ( par->FlatPanel && _machine == _MACH_Pmac) {

CHECK:CAMELCASE: Avoid CamelCase: <FlatPanel>
#383: FILE: video/riva/fbdev.c:1379:
+	if ( par->FlatPanel && _machine == _MACH_Pmac) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <_MACH_Pmac>
#383: FILE: video/riva/fbdev.c:1379:
+	if ( par->FlatPanel && _machine == _MACH_Pmac) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#383: FILE: video/riva/fbdev.c:1379:
+	if ( par->FlatPanel && _machine == _MACH_Pmac) {
+		set_backlight_enable(!blank);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#467: FILE: video/riva/fbdev.c:2065:
+	if (default_par->FlatPanel && _machine == _MACH_Pmac)
+	register_backlight_controller(&riva_backlight_controller,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: video/riva/fbdev.c:2067:
+	register_backlight_controller(&riva_backlight_controller,
+						default_par, "mnca");

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#513: FILE: video/Kconfig:449:
+config FB_RIVA_DEBUG
+	bool "Lots of debug output from Riva(nVidia) driver"
+	depends on FB_RIVA
+	default n
+	help
+	  Say Y here if you want the Riva driver to output all sorts
+	  of debugging informations to provide to the maintainer when
+	  something goes wrong.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#519: FILE: video/Kconfig:455:
+	  of debugging informations to provide to the maintainer when
 	               ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 25 warnings, 9 checks, 436 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
