WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#28: 
MIPS.  It uses kmap_coherent() to map an user page for kernel with same
                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#33: 
Atushi Nemoto did the the debugging.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#63: FILE: arch/mips/mm/init.c:42:
+#define BARRIER __asm__ __volatile__(".set noreorder\n\t" \
+				     "nop; nop; nop; nop; nop; nop;\n\t" \
+				     ".set reorder\n\t")

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#77: FILE: arch/mips/mm/init.c:56:
+#define EXIT_CRITICAL(flags) \
+	evpe(mvpflags); \
+	local_irq_restore(flags); \
+	}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:SPACING: No space is necessary after a cast
#168: FILE: arch/mips/mm/init.c:182:
+	return (void*) vaddr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#168: FILE: arch/mips/mm/init.c:182:
+	return (void*) vaddr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: arch/mips/mm/init.c:211:
+void copy_user_highpage(struct page *to, struct page *from,
+	unsigned long vaddr, struct vm_area_struct *vma)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#219: FILE: arch/mips/mm/init.c:233:
+EXPORT_SYMBOL(copy_user_highpage);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: arch/mips/mm/init.c:236:
+void copy_user_page(void *vto, void *vfrom, unsigned long vaddr,
+	struct page *to)

CHECK:BRACES: braces {} should be used on all arms of this statement
#224: FILE: arch/mips/mm/init.c:238:
+	if (cpu_has_dc_aliases) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: arch/mips/mm/init.c:240:
+		struct page *from = virt_to_page(vfrom);
+		vfrom = kmap_coherent(from, vaddr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: arch/mips/mm/init.c:243:
+	} else

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#236: FILE: arch/mips/mm/init.c:250:
+EXPORT_SYMBOL(copy_user_page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: arch/mips/mm/init.c:253:
+void copy_to_user_page(struct vm_area_struct *vma,
+	struct page *page, unsigned long vaddr, void *dst, const void *src,

CHECK:BRACES: braces {} should be used on all arms of this statement
#242: FILE: arch/mips/mm/init.c:256:
+	if (cpu_has_dc_aliases) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: arch/mips/mm/init.c:258:
+		void *vto = kmap_coherent(page, vaddr) + (vaddr & ~PAGE_MASK);
+		memcpy(vto, src, len);

CHECK:BRACES: Unbalanced braces around else statement
#246: FILE: arch/mips/mm/init.c:260:
+	} else

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#252: FILE: arch/mips/mm/init.c:266:
+EXPORT_SYMBOL(copy_to_user_page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: arch/mips/mm/init.c:269:
+void copy_from_user_page(struct vm_area_struct *vma,
+	struct page *page, unsigned long vaddr, void *dst, const void *src,

CHECK:BRACES: braces {} should be used on all arms of this statement
#258: FILE: arch/mips/mm/init.c:272:
+	if (cpu_has_dc_aliases) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#263: FILE: arch/mips/mm/init.c:277:
+	} else

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#267: FILE: arch/mips/mm/init.c:281:
+EXPORT_SYMBOL(copy_from_user_page);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: arch/mips/mm/init.c:283:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#391: FILE: include/asm-mips/cacheflush.h:58:
+extern void copy_to_user_page(struct vm_area_struct *vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: include/asm-mips/cacheflush.h:59:
+extern void copy_to_user_page(struct vm_area_struct *vma,
 	struct page *page, unsigned long vaddr, void *dst, const void *src,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: include/asm-mips/cacheflush.h:62:
+extern void copy_from_user_page(struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: include/asm-mips/cacheflush.h:63:
+extern void copy_from_user_page(struct vm_area_struct *vma,
 	struct page *page, unsigned long vaddr, void *dst, const void *src,

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#426: FILE: include/asm-mips/fixmap.h:51:
+	FIX_CMAP_END = FIX_CMAP_BEGIN + (FIX_N_COLOURS * NR_CPUS),

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(int)0xfffe0000' could be '0xfffe0000'
#445: FILE: include/asm-mips/fixmap.h:83:
+#define FIXADDR_TOP	((unsigned long)(long)(int)0xfffe0000)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#470: FILE: include/asm-mips/page.h:60:
+extern void copy_user_page(void *vto, void *vfrom, unsigned long vaddr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: include/asm-mips/page.h:61:
+extern void copy_user_page(void *vto, void *vfrom, unsigned long vaddr,
+	struct page *to);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: include/asm-mips/page.h:63:
+extern void copy_user_highpage(struct page *to, struct page *from,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: include/asm-mips/page.h:64:
+extern void copy_user_highpage(struct page *to, struct page *from,
+	unsigned long vaddr, struct vm_area_struct *vma);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000026424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 10 warnings, 20 checks, 399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000026424.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
