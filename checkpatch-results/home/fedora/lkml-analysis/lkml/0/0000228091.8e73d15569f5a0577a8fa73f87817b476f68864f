WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
support, it just insert a vma of zero page without checking overlap, so user

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: arch/ia64/ia32/binfmt_elf32.c:240:
+		if ((ret = insert_vm_struct(current->mm, mpnt))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#185: FILE: arch/s390/kernel/compat_exec.c:71:
+		if ((ret = insert_vm_struct(mm, mpnt))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: arch/x86_64/ia32/ia32_binfmt.c:371:
+		if ((ret = insert_vm_struct(mm, mpnt))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#244: FILE: fs/exec.c:436:
+		if ((ret = insert_vm_struct(mm, mpnt))) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/mm.h:678:
+extern int insert_vm_struct(struct mm_struct *, struct vm_area_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#262: FILE: include/linux/mm.h:678:
+extern int insert_vm_struct(struct mm_struct *, struct vm_area_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#262: FILE: include/linux/mm.h:678:
+extern int insert_vm_struct(struct mm_struct *, struct vm_area_struct *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: mm/mmap.c:1874:
+int insert_vm_struct(struct mm_struct * mm, struct vm_area_struct * vma)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: mm/mmap.c:1874:
+int insert_vm_struct(struct mm_struct * mm, struct vm_area_struct * vma)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228091.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 3 warnings, 1 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228091.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
