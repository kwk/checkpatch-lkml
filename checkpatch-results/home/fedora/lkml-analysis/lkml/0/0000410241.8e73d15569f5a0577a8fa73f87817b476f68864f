WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
The attached represents an initial stab at implementing topology functions (or 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#	           ChangeSet	1.934   -> 1.935  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#	include/asm-i386/voyager.h	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#	   arch/i386/Kconfig	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	 drivers/base/node.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	include/asm-i386/topology.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	include/asm-i386/numnodes.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	arch/i386/mach-voyager/voyager_cat.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	include/asm-i386/vic.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#	arch/i386/mach-voyager/Makefile	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
#	drivers/base/Makefile	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
#	               (new)	        -> 1.1     arch/i386/mach-generic/machine_topology.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
#	               (new)	        -> 1.1     arch/i386/mach-voyager/topology.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
#	               (new)	        -> 1.1     arch/i386/mach-voyager/machine_topology.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# 02/11/29	jejb@malley.(none)	1.935

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# add topology to voyager

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#84: 
--- a/arch/i386/Kconfig	Fri Nov 29 13:01:29 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: arch/i386/mach-generic/machine_topology.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/i386/mach-generic/machine_topology.h:8:
+ * All rights reserved.          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#125: FILE: arch/i386/mach-generic/machine_topology.h:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#126: FILE: arch/i386/mach-generic/machine_topology.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: arch/i386/mach-generic/machine_topology.h:40:
+/* Returns the number of the node containing Node 'node'.  This architecture is flat, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: arch/i386/mach-generic/machine_topology.h:41:
+/* Returns the number of the node containing Node 'node'.  This architecture is flat, 
+   so it is a pretty simple function! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: arch/i386/mach-generic/machine_topology.h:41:
+   so it is a pretty simple function! */

ERROR:SPACING: space required before the open parenthesis '('
#155: FILE: arch/i386/mach-generic/machine_topology.h:52:
+	for(i = 1; i < 16; i <<= 1)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#157: FILE: arch/i386/mach-generic/machine_topology.h:54:
+		if ((cpu = logical_apicid_to_cpu(logical_apicid | i)) >= 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#161: FILE: arch/i386/mach-generic/machine_topology.h:58:
+	BUG(); /* couldn't find a cpu on given node */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#174: FILE: arch/i386/mach-generic/machine_topology.h:71:
+	if (sizeof(unsigned long) * 8 < NR_CPUS)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#175: FILE: arch/i386/mach-generic/machine_topology.h:72:
+		BUG();

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: arch/i386/mach-generic/machine_topology.h:74:
+	for(i = 1; i < 16; i <<= 1)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: arch/i386/mach-generic/machine_topology.h:76:
+		if ((cpu = logical_apicid_to_cpu(logical_apicid | i)) >= 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: arch/i386/mach-generic/machine_topology.h:88:
+ * Other i386 platforms should define their own version of the $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#216: FILE: arch/i386/mach-voyager/machine_topology.h:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#222: FILE: arch/i386/mach-voyager/machine_topology.h:7:
+ * linux/arch/i386/mach-voyager/machine_topology.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: arch/i386/mach-voyager/machine_topology.h:24:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/i386/mach-voyager/machine_topology.h:24:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#257: FILE: arch/i386/mach-voyager/machine_topology.h:42:
+ * NUMA thinks of as a node */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#265: FILE: arch/i386/mach-voyager/topology.c:1:
+/* -*- mode: c; c-basic-offset: 8 -*- */

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#278: FILE: arch/i386/mach-voyager/topology.c:14:
+#include <asm/topology.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#283: FILE: arch/i386/mach-voyager/topology.c:19:
+u8 voyager_num_nodes = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/i386/mach-voyager/topology.c:28:
+	printk("VOYAGER BEGINNING TOPOLOGY INITIALISATION %d\n", MAX_NUMNODES);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#298: FILE: arch/i386/mach-voyager/topology.c:34:
+	for (i = 0; i < NR_CPUS; i++)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#299: FILE: arch/i386/mach-voyager/topology.c:35:
+		if (cpu_possible(i)) arch_register_cpu(i);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#301: FILE: arch/i386/mach-voyager/topology.c:37:
+	printk("NODES %d\n", num_online_nodes());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#302: FILE: arch/i386/mach-voyager/topology.c:38:
+	printk("CPU TO NODE: ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#303: FILE: arch/i386/mach-voyager/topology.c:39:
+	for(i=0; i<NR_CPUS; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#303: FILE: arch/i386/mach-voyager/topology.c:39:
+	for(i=0; i<NR_CPUS; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: arch/i386/mach-voyager/topology.c:39:
+	for(i=0; i<NR_CPUS; i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#303: FILE: arch/i386/mach-voyager/topology.c:39:
+	for(i=0; i<NR_CPUS; i++)

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: arch/i386/mach-voyager/topology.c:40:
+		if(cpu_possible(i))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#305: FILE: arch/i386/mach-voyager/topology.c:41:
+			printk("%d->%d ", i, voyager_cpu_to_node[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: arch/i386/mach-voyager/topology.c:42:
+	printk("\nNODE TO CPU MASK: ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#307: FILE: arch/i386/mach-voyager/topology.c:43:
+	for(i=0; i<voyager_num_nodes; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#307: FILE: arch/i386/mach-voyager/topology.c:43:
+	for(i=0; i<voyager_num_nodes; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#307: FILE: arch/i386/mach-voyager/topology.c:43:
+	for(i=0; i<voyager_num_nodes; i++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: arch/i386/mach-voyager/topology.c:44:
+		printk("%d->0x%04x ", i, voyager_node_to_cpu_mask[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: arch/i386/mach-voyager/topology.c:45:
+	printk("\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: arch/i386/mach-voyager/topology.c:47:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/topology.h> instead of <asm/topology.h>
#323: FILE: arch/i386/mach-voyager/voyager_cat.c:29:
+#include <asm/topology.h>

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#339: FILE: arch/i386/mach-voyager/voyager_cat.c:726:
+			voyager_node_to_cpu_mask[processor_cards] |= (1<<cpu);
 			                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#343: FILE: arch/i386/mach-voyager/voyager_cat.c:730:
+			voyager_node_to_cpu_mask[processor_cards] |= (1<<cpu);
 			                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#354: FILE: arch/i386/mach-voyager/voyager_cat.c:895:
+			voyager_node_to_cpu_mask[processor_cards] |= (1<<cpu);
 			                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410241.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 45 warnings, 6 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410241.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
