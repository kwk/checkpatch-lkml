WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: security/testinitsec1.c:1:
+#include <linux/config.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: security/testinitsec1.c:11:
+static int test_init_security(struct inode *inode, struct inode *dir,
+				       struct list_head *head)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct xattr_data)...)
#66: FILE: security/testinitsec1.c:19:
+	data = kmalloc(sizeof(struct xattr_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: security/testinitsec1.c:50:
+static int __init testlsm_init (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: security/testinitsec1.c:52:
+	if (mod_reg_security (MY_NAME, &testlsm_security_ops, NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#100: FILE: security/testinitsec1.c:53:
+		printk (KERN_INFO "Failure registering testlsm "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: security/testinitsec1.c:53:
+		printk (KERN_INFO "Failure registering testlsm "

WARNING:SPLIT_STRING: quoted string split across lines
#101: FILE: security/testinitsec1.c:54:
+		printk (KERN_INFO "Failure registering testlsm "
+			" module with primary security module.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#107: FILE: security/testinitsec1.c:60:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: security/testinitsec1.c:61:
+static void __exit testlsm_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: security/testinitsec1.c:63:
+	if (unregister_security (&testlsm_security_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&testlsm_security_ops'
#110: FILE: security/testinitsec1.c:63:
+	if (unregister_security (&testlsm_security_ops)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#111: FILE: security/testinitsec1.c:64:
+		printk (KERN_INFO "Failure unregistering testlsm "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: security/testinitsec1.c:64:
+		printk (KERN_INFO "Failure unregistering testlsm "

WARNING:SPLIT_STRING: quoted string split across lines
#112: FILE: security/testinitsec1.c:65:
+		printk (KERN_INFO "Failure unregistering testlsm "
+			"module with the kernel\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#114: FILE: security/testinitsec1.c:67:
+	printk (KERN_INFO "init_security test module removed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: security/testinitsec1.c:67:
+	printk (KERN_INFO "init_security test module removed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: security/testinitsec1.c:70:
+security_initcall (testlsm_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: security/testinitsec1.c:71:
+module_exit (testlsm_exit);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: security/testinitsec2.c:1:
+#include <linux/config.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: security/testinitsec2.c:11:
+static int test_init_security(struct inode *inode, struct inode *dir,
+				       struct list_head *head)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct xattr_data)...)
#146: FILE: security/testinitsec2.c:19:
+	data = kmalloc(sizeof(struct xattr_data), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: security/testinitsec2.c:50:
+static int __init testlsm_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: security/testinitsec2.c:52:
+	if (mod_reg_security (MY_NAME, &testlsm_security_ops, NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#180: FILE: security/testinitsec2.c:53:
+		printk (KERN_INFO "Failure registering testlsm "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: security/testinitsec2.c:53:
+		printk (KERN_INFO "Failure registering testlsm "

WARNING:SPLIT_STRING: quoted string split across lines
#181: FILE: security/testinitsec2.c:54:
+		printk (KERN_INFO "Failure registering testlsm "
+			" module with primary security module.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#187: FILE: security/testinitsec2.c:60:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: security/testinitsec2.c:61:
+static void __exit testlsm_exit (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: security/testinitsec2.c:63:
+	if (unregister_security (&testlsm_security_ops)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&testlsm_security_ops'
#190: FILE: security/testinitsec2.c:63:
+	if (unregister_security (&testlsm_security_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#191: FILE: security/testinitsec2.c:64:
+		printk (KERN_INFO "Failure unregistering testlsm "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: security/testinitsec2.c:64:
+		printk (KERN_INFO "Failure unregistering testlsm "

WARNING:SPLIT_STRING: quoted string split across lines
#192: FILE: security/testinitsec2.c:65:
+		printk (KERN_INFO "Failure unregistering testlsm "
+			"module with the kernel\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#194: FILE: security/testinitsec2.c:67:
+	printk (KERN_INFO "init_security test module removed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: security/testinitsec2.c:67:
+	printk (KERN_INFO "init_security test module removed\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: security/testinitsec2.c:70:
+security_initcall (testlsm_init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: security/testinitsec2.c:71:
+module_exit (testlsm_exit);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 30 warnings, 8 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000158079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
