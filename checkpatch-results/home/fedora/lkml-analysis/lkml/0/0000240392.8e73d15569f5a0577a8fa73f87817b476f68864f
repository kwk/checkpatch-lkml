WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#46: 
   Signed-off-by: Anton Altaparmakov <aia21@cantab.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#97: FILE: fs/ntfs/runlist.c:1344:
+int ntfs_rl_truncate_nolock(const ntfs_volume *vol, runlist *const runlist,
                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: fs/ntfs/runlist.c:1345:
+int ntfs_rl_truncate_nolock(const ntfs_volume *vol, runlist *const runlist,
+		const s64 new_length)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: fs/ntfs/runlist.c:1351:
+	BUG_ON(!runlist);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#105: FILE: fs/ntfs/runlist.c:1352:
+	BUG_ON(new_length < 0);

WARNING:SPLIT_STRING: quoted string split across lines
#115: FILE: fs/ntfs/runlist.c:1362:
+			ntfs_error(vol->sb, "Not enough memory to allocate "
+					"runlist element buffer.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#119: FILE: fs/ntfs/runlist.c:1366:
+		rl[1].length = rl->vcn = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#121: FILE: fs/ntfs/runlist.c:1368:
+		rl[1].vcn = rl->length = new_length;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: fs/ntfs/runlist.c:1372:
+	BUG_ON(new_length < rl->vcn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: fs/ntfs/runlist.c:1408:
+			int new_size = rl - runlist->rl + 1;
+			rl = ntfs_rl_realloc(runlist->rl, old_size, new_size);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: fs/ntfs/runlist.c:1411:
+				ntfs_warning(vol->sb, "Failed to shrink "
+						"runlist buffer.  This just "

WARNING:SPLIT_STRING: quoted string split across lines
#165: FILE: fs/ntfs/runlist.c:1412:
+						"runlist buffer.  This just "
+						"wastes a bit of memory "

WARNING:SPLIT_STRING: quoted string split across lines
#166: FILE: fs/ntfs/runlist.c:1413:
+						"wastes a bit of memory "
+						"temporarily so we ignore it "

WARNING:SPLIT_STRING: quoted string split across lines
#167: FILE: fs/ntfs/runlist.c:1414:
+						"temporarily so we ignore it "
+						"and return success.");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rl > runlist->rl'
#178: FILE: fs/ntfs/runlist.c:1425:
+		if ((rl > runlist->rl) && ((rl - 1)->lcn == LCN_HOLE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#178: FILE: fs/ntfs/runlist.c:1425:
+		if ((rl > runlist->rl) && ((rl - 1)->lcn == LCN_HOLE))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#180: FILE: fs/ntfs/runlist.c:1427:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: fs/ntfs/runlist.c:1432:
+			rl = ntfs_rl_realloc(runlist->rl, old_size,
+					old_size + 1);

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: fs/ntfs/runlist.c:1435:
+				ntfs_error(vol->sb, "Failed to expand runlist "
+						"buffer, aborting.");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: fs/ntfs/runlist.h:58:
+extern int ntfs_rl_truncate_nolock(const ntfs_volume *vol,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: fs/ntfs/runlist.h:59:
+extern int ntfs_rl_truncate_nolock(const ntfs_volume *vol,
+		runlist *const runlist, const s64 new_length);

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#221: FILE: fs/ntfs/runlist.h:59:
+		runlist *const runlist, const s64 new_length);
 		        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240392.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 11 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240392.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
