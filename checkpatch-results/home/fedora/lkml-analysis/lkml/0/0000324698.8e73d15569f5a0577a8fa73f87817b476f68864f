WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -urN -X dontdiff test9-vanilla/arch/i386/kernel/irq.c test9/arch/i386/kernel/irq.c

CHECK:SPACING: No space is necessary after a cast
#52: FILE: arch/i386/kernel/irq.c:141:
+	int i = *(int *) v, j;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#62: FILE: arch/i386/kernel/irq.c:146:
+		seq_printf(p, "           ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#63: FILE: arch/i386/kernel/irq.c:147:
+		for (j=0; j<NR_CPUS; j++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#63: FILE: arch/i386/kernel/irq.c:147:
+		for (j=0; j<NR_CPUS; j++)
 		           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#63: FILE: arch/i386/kernel/irq.c:147:
+		for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: arch/i386/kernel/irq.c:149:
+				seq_printf(p, "CPU%d       ",j);
 				                            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#85: FILE: arch/i386/kernel/irq.c:176:
+		seq_printf(p, "NMI: ");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#86: FILE: arch/i386/kernel/irq.c:177:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#96: FILE: arch/i386/kernel/irq.c:182:
+		seq_printf(p, "LOC: ");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#97: FILE: arch/i386/kernel/irq.c:183:
+		for (j = 0; j < NR_CPUS; j++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: arch/i386/kernel/irq.c:198:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: arch/i386/kernel/irq.c:200:
+
+

CHECK:SPACING: No space is necessary after a cast
#128: FILE: arch/ia64/kernel/irq.c:163:
+	int j, i = *(int *) v;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#140: FILE: arch/ia64/kernel/irq.c:170:
+		for (j=0; j<NR_CPUS; j++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#140: FILE: arch/ia64/kernel/irq.c:170:
+		for (j=0; j<NR_CPUS; j++)
 		           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#140: FILE: arch/ia64/kernel/irq.c:170:
+		for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: arch/ia64/kernel/irq.c:172:
+				seq_printf(p, "CPU%d       ",j);
 				                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#163: FILE: arch/ia64/kernel/irq.c:201:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#174: FILE: arch/ia64/kernel/irq.c:207:
+		for (j = 0; j < NR_CPUS; j++)

CHECK:SPACING: No space is necessary after a cast
#199: FILE: arch/ppc64/kernel/irq.c:326:
+	int i = *(int *) v, j;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#208: FILE: arch/ppc64/kernel/irq.c:331:
+		seq_printf(p, "           ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#209: FILE: arch/ppc64/kernel/irq.c:332:
+		for (j=0; j<NR_CPUS; j++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#209: FILE: arch/ppc64/kernel/irq.c:332:
+		for (j=0; j<NR_CPUS; j++) {
 		           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#209: FILE: arch/ppc64/kernel/irq.c:332:
+		for (j=0; j<NR_CPUS; j++) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: arch/ppc64/kernel/irq.c:334:
+				seq_printf(p, "CPU%d       ",j);
 				                            ^

CHECK:SPACING: No space is necessary after a cast
#242: FILE: arch/x86_64/kernel/irq.c:141:
+	int i = *(int *) v, j;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#252: FILE: arch/x86_64/kernel/irq.c:146:
+		seq_printf(p, "           ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#253: FILE: arch/x86_64/kernel/irq.c:147:
+		for (j=0; j<NR_CPUS; j++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#253: FILE: arch/x86_64/kernel/irq.c:147:
+		for (j=0; j<NR_CPUS; j++)
 		           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#253: FILE: arch/x86_64/kernel/irq.c:147:
+		for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: arch/x86_64/kernel/irq.c:149:
+				seq_printf(p, "CPU%d       ",j);
 				                            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#275: FILE: arch/x86_64/kernel/irq.c:176:
+		seq_printf(p, "NMI: ");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#276: FILE: arch/x86_64/kernel/irq.c:177:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#286: FILE: arch/x86_64/kernel/irq.c:182:
+		seq_printf(p, "LOC: ");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#287: FILE: arch/x86_64/kernel/irq.c:183:
+		for (j = 0; j < NR_CPUS; j++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: fs/proc/proc_misc.c:497:
+
+

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#351: FILE: fs/proc/proc_misc.c:499:
+static struct seq_operations int_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: fs/proc/proc_misc.c:505:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#358: FILE: fs/proc/proc_misc.c:506:
+int interrupts_open(struct inode *inode, struct file *filp)
                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#360: FILE: fs/proc/proc_misc.c:508:
+	return seq_open(filp, &int_seq_ops);
 	                ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000324698.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 21 warnings, 7 checks, 304 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000324698.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
