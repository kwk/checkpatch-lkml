ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: arch/ppc64/kernel/head.S:482:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: arch/ppc64/kernel/head.S:1168:
+^I$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#459: FILE: arch/ppc64/kernel/stab.c:26:
+void slb_initialize(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: arch/ppc64/mm/fault.c:96:
+	BUG_ON((trap == 0x380) || (trap == 0x480));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address >= TASK_SIZE'
#775: FILE: arch/ppc64/mm/fault.c:104:
+	if (!user_mode(regs) && (address >= TASK_SIZE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#783: FILE: arch/ppc64/mm/slb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: arch/ppc64/mm/slb.c:9:
+ * $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#800: FILE: arch/ppc64/mm/slb.c:18:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#802: FILE: arch/ppc64/mm/slb.c:20:
+#include <asm/mmu_context.h>

ERROR:SPACING: space prohibited before that close parenthesis ')'
#816: FILE: arch/ppc64/mm/slb.c:34:
+		     : "memory" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#825: FILE: arch/ppc64/mm/slb.c:43:
+	 * appropriately too */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: arch/ppc64/mm/slb.c:46:
+         * ^ISince modules end up there it gets hit very heavily.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#828: FILE: arch/ppc64/mm/slb.c:46:
+         * ^ISince modules end up there it gets hit very heavily.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: arch/ppc64/mm/slb.c:47:
+         */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#848: FILE: arch/ppc64/mm/slb.c:66:
+		int i;
+		asm volatile("isync" : : : "memory");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#863: FILE: arch/ppc64/mm/slb.c:81:
+		 * access addresses in this region. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: arch/ppc64/mm/slb.c:106:
+^I$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#890: FILE: arch/ppc64/mm/slb.c:108:
+	if ((GET_ESID(pc) == GET_ESID(unmapped_base))
+	    || (GET_ESID(stack) == GET_ESID(unmapped_base)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: arch/ppc64/mm/slb.c:126:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: arch/ppc64/mm/slb.c:132:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#923: FILE: arch/ppc64/mm/slb_low.S:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#924: FILE: arch/ppc64/mm/slb_low.S:2:
+ * arch/ppc64/mm/slb_low.S

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: arch/ppc64/mm/slb_low.S:8:
+ * Based on earlier C version:^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1161: FILE: include/asm-ppc64/mmu.h:241:
+#define SLB_VSID_KERNEL		(SLB_VSID_KP|SLB_VSID_C)
                        		            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1162: FILE: include/asm-ppc64/mmu.h:242:
+#define SLB_VSID_USER		(SLB_VSID_KP|SLB_VSID_KS)
                      		            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1168: FILE: include/asm-ppc64/mmu.h:248:
+ * never have pages hashed into it */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1182: FILE: include/asm-ppc64/mmu_context.h:139:
+extern void switch_slb(struct task_struct *tsk, struct mm_struct *mm);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1256: FILE: include/asm-ppc64/page.h:42:
+#define TASK_HPAGE_END ^IASM_CONST(0x0000018000000000)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 11 warnings, 7 checks, 903 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000264268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
