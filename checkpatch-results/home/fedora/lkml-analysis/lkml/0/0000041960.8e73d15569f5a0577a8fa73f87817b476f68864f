WARNING:REPEATED_WORD: Possible repeated word: 'then'
#41: 
  host, then then iterates over all hosts and deals with

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: fs/lockd/host.c:294:
+void nlm_host_rebooted(const struct sockaddr_in *sin,
+				const char *hostname, int hostname_len,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nlm_host_rebooted', this function's name, in a string
#179: FILE: fs/lockd/host.c:301:
+	dprintk("lockd: nlm_host_rebooted(%s, %u.%u.%u.%u)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: fs/lockd/host.c:302:
+	dprintk("lockd: nlm_host_rebooted(%s, %u.%u.%u.%u)\n",
+			hostname, NIPQUAD(sin->sin_addr));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#183: FILE: fs/lockd/host.c:305:
+	if (!(nsm = __nsm_find(sin, hostname, hostname_len, 0)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: fs/lockd/host.c:309:
+	 * we set up a new notification */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#205: FILE: fs/lockd/host.c:321:
+			if (host->h_nsmhandle == nsm
+			 && host->h_nsmstate != new_state) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: fs/lockd/host.c:330:
+					 * all the locks he held. */

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nlm_host *' should also have an identifier name
#267: FILE: include/linux/lockd/lockd.h:167:
+void		  nlmclnt_recovery(struct nlm_host *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/linux/lockd/lockd.h:182:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const char *, int, u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct sockaddr_in *' should also have an identifier name
#276: FILE: include/linux/lockd/lockd.h:182:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const char *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#276: FILE: include/linux/lockd/lockd.h:182:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const char *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#276: FILE: include/linux/lockd/lockd.h:182:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const char *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#276: FILE: include/linux/lockd/lockd.h:182:
+extern void	  nlm_host_rebooted(const struct sockaddr_in *, const char *, int, u32);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000041960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 14 warnings, 4 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000041960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
