WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#246: FILE: drivers/char/mxser_new.c:452:
+static int mxser_block_til_ready(struct tty_struct *tty, struct file *filp,
                                                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/char/mxser_new.c:453:
+static int mxser_block_til_ready(struct tty_struct *tty, struct file *filp,
+		struct mxser_port *port)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#286: FILE: drivers/char/mxser_new.c:483:
+	if (!tty_hung_up_p(filp))
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#296: FILE: drivers/char/mxser_new.c:493:
+		if (tty_hung_up_p(filp) || !(port->flags & ASYNC_INITIALIZED)) {
 		                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/char/mxser_new.c:501:
+		if (!(port->flags & ASYNC_CLOSING) &&
+				(do_clocal ||

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#315: FILE: drivers/char/mxser_new.c:512:
+	if (!tty_hung_up_p(filp))
 	                   ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#408: FILE: drivers/char/mxser_new.c:572:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: drivers/char/mxser_new.c:581:
+static int mxser_change_speed(struct mxser_port *info,
+		struct termios *old_termios)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#419: FILE: drivers/char/mxser_new.c:583:
+	unsigned cflag, cval, fcr;

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#432: FILE: drivers/char/mxser_new.c:596:
+#define B921600 (B460800 +1)
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_8250'
#466: FILE: drivers/char/mxser_new.c:630:
+	if ((info->type == PORT_8250) || (info->type == PORT_16450)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_16450'
#466: FILE: drivers/char/mxser_new.c:630:
+	if ((info->type == PORT_8250) || (info->type == PORT_16450)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#467: FILE: drivers/char/mxser_new.c:631:
+		if (info->board->chip_flag) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#471: FILE: drivers/char/mxser_new.c:635:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type == PORT_16550A'
#510: FILE: drivers/char/mxser_new.c:668:
+		if ((info->type == PORT_16550A) || (info->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->board->chip_flag'
#510: FILE: drivers/char/mxser_new.c:668:
+		if ((info->type == PORT_16550A) || (info->board->chip_flag)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#514: FILE: drivers/char/mxser_new.c:672:
+/*
+	save_flags(flags);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/char/mxser_new.c:687:
+					if (info->type != PORT_16550A &&
+							!info->board->chip_flag) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#531: FILE: drivers/char/mxser_new.c:689:
+						outb(info->IER & ~UART_IER_THRI,
+							info->ioaddr +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->type != PORT_16550A'
#542: FILE: drivers/char/mxser_new.c:700:
+					if ((info->type != PORT_16550A) &&
+							(!info->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!info->board->chip_flag'
#542: FILE: drivers/char/mxser_new.c:700:
+					if ((info->type != PORT_16550A) &&
+							(!info->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/char/mxser_new.c:701:
+					if ((info->type != PORT_16550A) &&
+							(!info->board->chip_flag)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#640: FILE: drivers/char/mxser_new.c:755:
+		if (I_IXON(info->tty)) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#645: FILE: drivers/char/mxser_new.c:760:
+		if (I_IXOFF(info->tty)) {
[...]
+		} else {
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#651: FILE: drivers/char/mxser_new.c:766:
+		/*
+		   if ( I_IXANY(info->tty) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port->type != PORT_16550A'
#721: FILE: drivers/char/mxser_new.c:810:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!port->board->chip_flag'
#721: FILE: drivers/char/mxser_new.c:810:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/char/mxser_new.c:811:
+				if ((port->type != PORT_16550A) &&
+						(!port->board->chip_flag)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: drivers/char/mxser_new.c:813:
+					outb(port->IER & ~UART_IER_THRI,
+						port->ioaddr + UART_IER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/char/mxser_new.c:825:
+				if (port->type != PORT_16550A &&
+						!port->board->chip_flag) {

CHECK:SPACING: No space is necessary after a cast
#784: FILE: drivers/char/mxser_new.c:862:
+		info->xmit_buf = (unsigned char *) page;

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#790: FILE: drivers/char/mxser_new.c:866:
+	 * (they will be reenabled in mxser_change_speed())
 	                 ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: drivers/char/mxser_new.c:874:
+		outb((UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT),
+			info->ioaddr + UART_FCR);

CHECK:BRACES: braces {} should be used on all arms of this statement
#810: FILE: drivers/char/mxser_new.c:883:
+		if (capable(CAP_SYS_ADMIN)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#814: FILE: drivers/char/mxser_new.c:887:
+		} else

CHECK:SPACING: No space is necessary after a cast
#834: FILE: drivers/char/mxser_new.c:894:
+	(void) inb(info->ioaddr + UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#835: FILE: drivers/char/mxser_new.c:895:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:SPACING: No space is necessary after a cast
#836: FILE: drivers/char/mxser_new.c:896:
+	(void) inb(info->ioaddr + UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#837: FILE: drivers/char/mxser_new.c:897:
+	(void) inb(info->ioaddr + UART_MSR);

CHECK:SPACING: No space is necessary after a cast
#926: FILE: drivers/char/mxser_new.c:921:
+	(void) inb(info->ioaddr + UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#927: FILE: drivers/char/mxser_new.c:922:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:SPACING: No space is necessary after a cast
#928: FILE: drivers/char/mxser_new.c:923:
+	(void) inb(info->ioaddr + UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#929: FILE: drivers/char/mxser_new.c:924:
+	(void) inb(info->ioaddr + UART_MSR);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#938: FILE: drivers/char/mxser_new.c:928:
+	info->xmit_cnt = info->xmit_head = info->xmit_tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#996: FILE: drivers/char/mxser_new.c:963:
+		free_page((unsigned long) info->xmit_buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1022: FILE: drivers/char/mxser_new.c:983:
+		outb(UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT,
+			info->ioaddr + UART_FCR);

CHECK:SPACING: No space is necessary after a cast
#1025: FILE: drivers/char/mxser_new.c:986:
+	(void) inb(info->ioaddr + UART_RX);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1052: FILE: drivers/char/mxser_new.c:1320:
+static int mxser_get_serial_info(struct mxser_port *info,
+		struct serial_struct __user *retinfo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1091: FILE: drivers/char/mxser_new.c:1343:
+static int mxser_set_serial_info(struct mxser_port *info,
+		struct serial_struct __user *new_info)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq != info->board->irq'
#1173: FILE: drivers/char/mxser_new.c:1354:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.port != info->ioaddr'
#1173: FILE: drivers/char/mxser_new.c:1354:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.custom_divisor != info->custom_divisor'
#1173: FILE: drivers/char/mxser_new.c:1354:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base != info->baud_base'
#1173: FILE: drivers/char/mxser_new.c:1354:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||
+			(new_serial.custom_divisor != info->custom_divisor) ||
+			(new_serial.baud_base != info->baud_base))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: drivers/char/mxser_new.c:1355:
+	if ((new_serial.irq != info->board->irq) ||
+			(new_serial.port != info->ioaddr) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base != info->baud_base'
#1212: FILE: drivers/char/mxser_new.c:1363:
+		if ((new_serial.baud_base != info->baud_base) ||
+				(new_serial.close_delay != info->close_delay) ||
+				((new_serial.flags & ~ASYNC_USR_MASK) != (info->flags & ~ASYNC_USR_MASK)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.close_delay != info->close_delay'
#1212: FILE: drivers/char/mxser_new.c:1363:
+		if ((new_serial.baud_base != info->baud_base) ||
+				(new_serial.close_delay != info->close_delay) ||
+				((new_serial.flags & ~ASYNC_USR_MASK) != (info->flags & ~ASYNC_USR_MASK)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1213: FILE: drivers/char/mxser_new.c:1364:
+		if ((new_serial.baud_base != info->baud_base) ||
+				(new_serial.close_delay != info->close_delay) ||

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1214: FILE: drivers/char/mxser_new.c:1365:
+				((new_serial.flags & ~ASYNC_USR_MASK) != (info->flags & ~ASYNC_USR_MASK)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#1288: FILE: drivers/char/mxser_new.c:1388:
+	if (info->flags & ASYNC_INITIALIZED) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1291: FILE: drivers/char/mxser_new.c:1391:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: drivers/char/mxser_new.c:1408:
+static int mxser_get_lsr_info(struct mxser_port *info,
+		unsigned int __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1342: FILE: drivers/char/mxser_new.c:1433:
+	outb(inb(info->ioaddr + UART_LCR) | UART_LCR_SBC,
+		info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1347: FILE: drivers/char/mxser_new.c:1438:
+	outb(inb(info->ioaddr + UART_LCR) & ~UART_LCR_SBC,
+		info->ioaddr + UART_LCR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1399: FILE: drivers/char/mxser_new.c:1470:
+static int mxser_tiocmset(struct tty_struct *tty, struct file *file,
+		unsigned int set, unsigned int clear)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != C168_ASIC_ID'
#1459: FILE: drivers/char/mxser_new.c:1515:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != C104_ASIC_ID'
#1459: FILE: drivers/char/mxser_new.c:1515:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != C102_ASIC_ID'
#1459: FILE: drivers/char/mxser_new.c:1515:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != CI132_ASIC_ID'
#1459: FILE: drivers/char/mxser_new.c:1515:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != CI134_ASIC_ID'
#1459: FILE: drivers/char/mxser_new.c:1515:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != CI104J_ASIC_ID'
#1459: FILE: drivers/char/mxser_new.c:1515:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&
+			(id != C102_ASIC_ID) &&
+			(id != CI132_ASIC_ID) &&
+			(id != CI134_ASIC_ID) &&
+			(id != CI104J_ASIC_ID))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1460: FILE: drivers/char/mxser_new.c:1516:
+	if ((id != C168_ASIC_ID) &&
+			(id != C104_ASIC_ID) &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#1468: FILE: drivers/char/mxser_new.c:1524:
+		if (n == 'M') {
[...]
+		} else if ((j == 1) && (n == 1)) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1473: FILE: drivers/char/mxser_new.c:1529:
+			break;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#1473: FILE: drivers/char/mxser_new.c:1529:
+		} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1501: FILE: drivers/char/mxser_new.c:1557:
+#define CHIP_SK ^I0x01^I/* Serial Data Clock  in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1502: FILE: drivers/char/mxser_new.c:1558:
+#define CHIP_DO ^I0x02^I/* Serial Data Output in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1503: FILE: drivers/char/mxser_new.c:1559:
+#define CHIP_CS ^I0x04^I/* Serial Chip Select in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1504: FILE: drivers/char/mxser_new.c:1560:
+#define CHIP_DI ^I0x08^I/* Serial Data Input  in Eprom */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1505: FILE: drivers/char/mxser_new.c:1561:
+#define EN_CCMD ^I0x000^I/* Chip's command register     */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1558: FILE: drivers/char/mxser_new.c:1769:
+static int mxser_ioctl(struct tty_struct *tty, struct file *file,
+		unsigned int cmd, unsigned long arg)

CHECK:CAMELCASE: Avoid CamelCase: <ModeMask>
#1575: FILE: drivers/char/mxser_new.c:1786:
+		static unsigned char ModeMask[] = { 0xfc, 0xf3, 0xcf, 0x3f };

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#1581: FILE: drivers/char/mxser_new.c:1792:
+			if (get_user(opmode, (int __user *) argp))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1584: FILE: drivers/char/mxser_new.c:1795:
+			if (opmode != RS232_MODE &&
+					opmode != RS485_2WIRE_MODE &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != TIOCGSERIAL'
#1605: FILE: drivers/char/mxser_new.c:1816:
+	if ((cmd != TIOCGSERIAL) && (cmd != TIOCMIWAIT) && (cmd != TIOCGICOUNT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != TIOCMIWAIT'
#1605: FILE: drivers/char/mxser_new.c:1816:
+	if ((cmd != TIOCGSERIAL) && (cmd != TIOCMIWAIT) && (cmd != TIOCGICOUNT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd != TIOCGICOUNT'
#1605: FILE: drivers/char/mxser_new.c:1816:
+	if ((cmd != TIOCGSERIAL) && (cmd != TIOCMIWAIT) && (cmd != TIOCGICOUNT)) {

CHECK:SPACING: No space is necessary after a cast
#1628: FILE: drivers/char/mxser_new.c:1839:
+		if (get_user(templ, (unsigned long __user *) argp))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1648: FILE: drivers/char/mxser_new.c:1859:
+		int ret;
+		spin_lock_irqsave(&info->slock, flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.rng != cprev.rng'
#1659: FILE: drivers/char/mxser_new.c:1870:
+			if (((arg & TIOCM_RNG) &&
+					(cnow.rng != cprev.rng)) ||
+					((arg & TIOCM_DSR) &&
+					(cnow.dsr != cprev.dsr)) ||
+					((arg & TIOCM_CD) &&
+					(cnow.dcd != cprev.dcd)) ||
+					((arg & TIOCM_CTS) &&
+					(cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dsr != cprev.dsr'
#1659: FILE: drivers/char/mxser_new.c:1870:
+			if (((arg & TIOCM_RNG) &&
+					(cnow.rng != cprev.rng)) ||
+					((arg & TIOCM_DSR) &&
+					(cnow.dsr != cprev.dsr)) ||
+					((arg & TIOCM_CD) &&
+					(cnow.dcd != cprev.dcd)) ||
+					((arg & TIOCM_CTS) &&
+					(cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.dcd != cprev.dcd'
#1659: FILE: drivers/char/mxser_new.c:1870:
+			if (((arg & TIOCM_RNG) &&
+					(cnow.rng != cprev.rng)) ||
+					((arg & TIOCM_DSR) &&
+					(cnow.dsr != cprev.dsr)) ||
+					((arg & TIOCM_CD) &&
+					(cnow.dcd != cprev.dcd)) ||
+					((arg & TIOCM_CTS) &&
+					(cnow.cts != cprev.cts))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnow.cts != cprev.cts'
#1659: FILE: drivers/char/mxser_new.c:1870:
+			if (((arg & TIOCM_RNG) &&
+					(cnow.rng != cprev.rng)) ||
+					((arg & TIOCM_DSR) &&
+					(cnow.dsr != cprev.dsr)) ||
+					((arg & TIOCM_CD) &&
+					(cnow.dcd != cprev.dcd)) ||
+					((arg & TIOCM_CTS) &&
+					(cnow.cts != cprev.cts))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1660: FILE: drivers/char/mxser_new.c:1871:
+			if (((arg & TIOCM_RNG) &&
+					(cnow.rng != cprev.rng)) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#1722: FILE: drivers/char/mxser_new.c:1933:
+		long baud;
+		if (get_user(baud, (long __user *)argp))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1772: FILE: drivers/char/mxser_new.c:1983:
+		if (copy_to_user(argp, &info->mon_data,
+				sizeof(struct mxser_mon)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1779: FILE: drivers/char/mxser_new.c:1990:
+		if (copy_to_user(argp, &info->err_shadow,
+				sizeof(unsigned char)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!brd"
#2141: FILE: drivers/char/mxser_new.c:2462:
+	if (brd == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2677: FILE: drivers/char/mxser_new.c:2508:
+					/*
+					   if ( (status & 0x02) && !(status & 0x01) ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2687: FILE: drivers/char/mxser_new.c:2518:
+						mxser_receive_chars(port,
+								&status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2704: FILE: drivers/char/mxser_new.c:2526:
+						mxser_receive_chars(port,
+								&status);

WARNING:INDENTED_LABEL: labels should not be indented
#2759: FILE: drivers/char/mxser_new.c:2549:
+      irq_stop:

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2832: FILE: drivers/char/mxser_new.c:2580:
+static int __devinit mxser_initbrd(struct mxser_board *brd)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2861: FILE: drivers/char/mxser_new.c:2586:
+	printk(KERN_INFO "max. baud rate = %d bps.\n", brd->ports[0].max_baud);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2910: FILE: drivers/char/mxser_new.c:2617:
+		outb(inb(info->ioaddr + UART_IER) & 0xf0,
+			info->ioaddr + UART_IER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2919: FILE: drivers/char/mxser_new.c:2624:
+	retval = request_irq(brd->irq, mxser_interrupt,
+			(brd->ports[0].flags & ASYNC_SHARE_IRQ) ? IRQF_SHARED :

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2922: FILE: drivers/char/mxser_new.c:2627:
+		printk(KERN_ERR "Board %s: Request irq failed, IRQ (%d) may "

WARNING:SPLIT_STRING: quoted string split across lines
#2923: FILE: drivers/char/mxser_new.c:2628:
+		printk(KERN_ERR "Board %s: Request irq failed, IRQ (%d) may "
+			"conflict with another device.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2957: FILE: drivers/char/mxser_new.c:2731:
+static int __init mxser_get_PCI_conf(int board_type, struct mxser_board *brd,
+		struct pci_dev *pdev)

CHECK:CAMELCASE: Avoid CamelCase: <CheckIsMoxaMust>
#2999: FILE: drivers/char/mxser_new.c:2758:
+	brd->chip_flag = CheckIsMoxaMust(brd->ports[0].ioaddr);

CHECK:CAMELCASE: Avoid CamelCase: <Gpci_uart_info>
#3005: FILE: drivers/char/mxser_new.c:2764:
+			if (Gpci_uart_info[j].type == brd->chip_flag) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3097: FILE: drivers/char/mxser_new.c:2815:
+	printk(KERN_INFO "MOXA Smartio/Industio family driver version %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3098: FILE: drivers/char/mxser_new.c:2816:
+	printk(KERN_INFO "MOXA Smartio/Industio family driver version %s\n",
+		MXSER_VERSION);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3109: FILE: drivers/char/mxser_new.c:2827:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3109: FILE: drivers/char/mxser_new.c:2827:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3109: FILE: drivers/char/mxser_new.c:2827:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3109: FILE: drivers/char/mxser_new.c:2827:
+	mxvar_sdriver->init_termios.c_cflag = B9600|CS8|CREAD|HUPCL|CLOCAL;
 	                                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3123: FILE: drivers/char/mxser_new.c:2841:
+		if (!(cap = mxserBoardCAP[b]))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <mxserBoardCAP>
#3123: FILE: drivers/char/mxser_new.c:2841:
+		if (!(cap = mxserBoardCAP[b]))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3130: FILE: drivers/char/mxser_new.c:2848:
+			printk(KERN_INFO "Found MOXA %s board (CAP=0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3131: FILE: drivers/char/mxser_new.c:2849:
+			printk(KERN_INFO "Found MOXA %s board (CAP=0x%x)\n",
+				mxser_brdname[brd->board_type - 1], ioaddr[b]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3135: FILE: drivers/char/mxser_new.c:2853:
+				printk(KERN_ERR "Invalid interrupt number, "

WARNING:SPLIT_STRING: quoted string split across lines
#3136: FILE: drivers/char/mxser_new.c:2854:
+				printk(KERN_ERR "Invalid interrupt number, "
+					"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3138: FILE: drivers/char/mxser_new.c:2856:
+				printk(KERN_ERR "Invalid interrupt number, "

WARNING:SPLIT_STRING: quoted string split across lines
#3139: FILE: drivers/char/mxser_new.c:2857:
+				printk(KERN_ERR "Invalid interrupt number, "
+					"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3141: FILE: drivers/char/mxser_new.c:2859:
+				printk(KERN_ERR "Invalid interrupt vector, "

WARNING:SPLIT_STRING: quoted string split across lines
#3142: FILE: drivers/char/mxser_new.c:2860:
+				printk(KERN_ERR "Invalid interrupt vector, "
+					"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3144: FILE: drivers/char/mxser_new.c:2862:
+				printk(KERN_ERR "Invalid I/O address, "

WARNING:SPLIT_STRING: quoted string split across lines
#3145: FILE: drivers/char/mxser_new.c:2863:
+				printk(KERN_ERR "Invalid I/O address, "
+					"board not configured\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3166: FILE: drivers/char/mxser_new.c:2881:
+		if (!(cap = ioaddr[b]))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3173: FILE: drivers/char/mxser_new.c:2888:
+			printk(KERN_INFO "Found MOXA %s board (CAP=0x%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3174: FILE: drivers/char/mxser_new.c:2889:
+			printk(KERN_INFO "Found MOXA %s board (CAP=0x%x)\n",
+				mxser_brdname[brd->board_type - 1], ioaddr[b]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3178: FILE: drivers/char/mxser_new.c:2893:
+				printk(KERN_ERR "Invalid interrupt number, "

WARNING:SPLIT_STRING: quoted string split across lines
#3179: FILE: drivers/char/mxser_new.c:2894:
+				printk(KERN_ERR "Invalid interrupt number, "
+					"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3181: FILE: drivers/char/mxser_new.c:2896:
+				printk(KERN_ERR "Invalid interrupt number, "

WARNING:SPLIT_STRING: quoted string split across lines
#3182: FILE: drivers/char/mxser_new.c:2897:
+				printk(KERN_ERR "Invalid interrupt number, "
+					"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3184: FILE: drivers/char/mxser_new.c:2899:
+				printk(KERN_ERR "Invalid interrupt vector, "

WARNING:SPLIT_STRING: quoted string split across lines
#3185: FILE: drivers/char/mxser_new.c:2900:
+				printk(KERN_ERR "Invalid interrupt vector, "
+					"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3187: FILE: drivers/char/mxser_new.c:2902:
+				printk(KERN_ERR "Invalid I/O address, "

WARNING:SPLIT_STRING: quoted string split across lines
#3188: FILE: drivers/char/mxser_new.c:2903:
+				printk(KERN_ERR "Invalid I/O address, "
+					"board not configured\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3206: FILE: drivers/char/mxser_new.c:2921:
+		pdev = pci_get_device(mxser_pcibrds[b].vendor,
+				mxser_pcibrds[b].device, pdev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#3207: FILE: drivers/char/mxser_new.c:2922:
+		if (pdev == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3211: FILE: drivers/char/mxser_new.c:2926:
+		printk(KERN_INFO "Found MOXA %s board(BusNo=%d,DevNo=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3212: FILE: drivers/char/mxser_new.c:2927:
+		printk(KERN_INFO "Found MOXA %s board(BusNo=%d,DevNo=%d)\n",
+			mxser_brdname[(int) (mxser_pcibrds[b].driver_data) - 1],

CHECK:SPACING: No space is necessary after a cast
#3212: FILE: drivers/char/mxser_new.c:2927:
+			mxser_brdname[(int) (mxser_pcibrds[b].driver_data) - 1],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3215: FILE: drivers/char/mxser_new.c:2930:
+			printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3217: FILE: drivers/char/mxser_new.c:2932:
+				"Too many Smartio/Industio family boards find "
+				"(maximum %d), board not configured\n",

CHECK:BRACES: Unbalanced braces around else statement
#3219: FILE: drivers/char/mxser_new.c:2934:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3221: FILE: drivers/char/mxser_new.c:2936:
+				printk(KERN_ERR "Moxa SmartI/O PCI enable "

WARNING:SPLIT_STRING: quoted string split across lines
#3222: FILE: drivers/char/mxser_new.c:2937:
+				printk(KERN_ERR "Moxa SmartI/O PCI enable "
+					"fail !\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3227: FILE: drivers/char/mxser_new.c:2942:
+			retval = mxser_get_PCI_conf(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3232: FILE: drivers/char/mxser_new.c:2947:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3234: FILE: drivers/char/mxser_new.c:2949:
+						"Invalid interrupt number, "
+						"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3236: FILE: drivers/char/mxser_new.c:2951:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3238: FILE: drivers/char/mxser_new.c:2953:
+						"Invalid interrupt number, "
+						"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3240: FILE: drivers/char/mxser_new.c:2955:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3242: FILE: drivers/char/mxser_new.c:2957:
+						"Invalid interrupt vector, "
+						"board not configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3244: FILE: drivers/char/mxser_new.c:2959:
+					printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3246: FILE: drivers/char/mxser_new.c:2961:
+						"Invalid I/O address, "
+						"board not configured\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3254: FILE: drivers/char/mxser_new.c:2969:
+			/* Keep an extra reference if we succeeded. It will
+			   be returned at unload time */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3254: FILE: drivers/char/mxser_new.c:2969:
+			   be returned at unload time */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3261: FILE: drivers/char/mxser_new.c:2976:
+		printk(KERN_ERR "Couldn't install MOXA Smartio/Industio family"

WARNING:SPLIT_STRING: quoted string split across lines
#3262: FILE: drivers/char/mxser_new.c:2977:
+		printk(KERN_ERR "Couldn't install MOXA Smartio/Industio family"
+				" driver !\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#3266: FILE: drivers/char/mxser_new.c:2981:
+			if (mxser_boards[i].board_type == -1)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3268: FILE: drivers/char/mxser_new.c:2983:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3305: FILE: drivers/char/mxser_new.c:3006:
+		printk(KERN_ERR "Couldn't unregister MOXA Smartio/Industio family serial driver\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#3310: FILE: drivers/char/mxser_new.c:3011:
+		if (mxser_boards[i].board_type == -1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3312: FILE: drivers/char/mxser_new.c:3013:
+		else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#3315: FILE: drivers/char/mxser_new.c:3016:
+			if (pdev != NULL) {	/* PCI */

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#3320: FILE: drivers/char/mxser_new.c:3021:
+				release_region(mxser_boards[i].ports[0].ioaddr, 8 * mxser_boards[i].nports);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 63 warnings, 104 checks, 3276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
