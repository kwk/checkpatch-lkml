WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# echo -n 168-168-84 > /sys/powerop/new # DPLL 168MHz, ARM 168MHz, TC 84MHz

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# echo -n 14 > /sys/powerop/168-168-84/dpllmult

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# echo -n 0 > /sys/powerop/168-168-84/dplldiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# echo -n 0 > /sys/powerop/168-168-84/armdiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# echo -n 1 > /sys/powerop/168-168-84/tcdiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# echo -n -1 > /sys/powerop/168-168-84/dspdiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# echo -n -1 > /sys/powerop/168-168-84/lowpwr

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# echo -n 60-60-60 > /sys/powerop/new # DPLL 60MHz, ARM 60MHz, TC 60MHz

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# echo -n 5 > /sys/powerop/60-60-60/dpllmult

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# echo -n 0 > /sys/powerop/60-60-60/dplldiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# echo -n 0 > /sys/powerop/60-60-60/armdiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# echo -n 0 > /sys/powerop/60-60-60/tcdiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# echo -n -1 > /sys/powerop/60-60-60/dspdiv

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# echo -n -1 > /sys/powerop/60-60-60/lowpwr

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# echo -n 60-60-60 > /sys/powerop/active

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# cat /sys/powerop/hw/dpllmult

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: arch/arm/mach-omap1/powerop.c:150:
+ssize_t lowpwr_show(struct powerop_point *op, char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: arch/arm/mach-omap1/powerop.c:152:
+	return sprintf(buf,"%d\n",op->lowpwr);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: arch/arm/mach-omap1/powerop.c:152:
+	return sprintf(buf,"%d\n",op->lowpwr);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: arch/arm/mach-omap1/powerop.c:155:
+ssize_t lowpwr_store(struct powerop_point *op, const char * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: arch/arm/mach-omap1/powerop.c:159:
+	if ((error = sscanf(buf, "%d", &op->lowpwr)) == 1)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#93: FILE: arch/arm/mach-omap1/powerop.c:159:
+	if ((error = sscanf(buf, "%d", &op->lowpwr)) == 1)
+		return count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: arch/arm/mach-omap1/powerop.c:166:
+ssize_t dpllmult_show(struct powerop_point *op, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: arch/arm/mach-omap1/powerop.c:168:
+	return sprintf(buf,"%d\n",op->dpllmult);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: arch/arm/mach-omap1/powerop.c:168:
+	return sprintf(buf,"%d\n",op->dpllmult);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: arch/arm/mach-omap1/powerop.c:171:
+ssize_t dpllmult_store(struct powerop_point *op, const char * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#109: FILE: arch/arm/mach-omap1/powerop.c:175:
+	if ((error = sscanf(buf, "%d", &op->dpllmult)) == 1)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#109: FILE: arch/arm/mach-omap1/powerop.c:175:
+	if ((error = sscanf(buf, "%d", &op->dpllmult)) == 1)
+		return count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#116: FILE: arch/arm/mach-omap1/powerop.c:182:
+ssize_t dplldiv_show(struct powerop_point *op, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: arch/arm/mach-omap1/powerop.c:184:
+	return sprintf(buf,"%d\n",op->dplldiv);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: arch/arm/mach-omap1/powerop.c:184:
+	return sprintf(buf,"%d\n",op->dplldiv);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: arch/arm/mach-omap1/powerop.c:187:
+ssize_t dplldiv_store(struct powerop_point *op, const char * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: arch/arm/mach-omap1/powerop.c:191:
+	if ((error = sscanf(buf, "%d", &op->dplldiv)) == 1)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#125: FILE: arch/arm/mach-omap1/powerop.c:191:
+	if ((error = sscanf(buf, "%d", &op->dplldiv)) == 1)
+		return count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: arch/arm/mach-omap1/powerop.c:198:
+ssize_t armdiv_show(struct powerop_point *op, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: arch/arm/mach-omap1/powerop.c:200:
+	return sprintf(buf,"%d\n",op->armdiv);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: arch/arm/mach-omap1/powerop.c:200:
+	return sprintf(buf,"%d\n",op->armdiv);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: arch/arm/mach-omap1/powerop.c:203:
+ssize_t armdiv_store(struct powerop_point *op, const char * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#141: FILE: arch/arm/mach-omap1/powerop.c:207:
+	if ((error = sscanf(buf, "%d", &op->armdiv)) == 1)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#141: FILE: arch/arm/mach-omap1/powerop.c:207:
+	if ((error = sscanf(buf, "%d", &op->armdiv)) == 1)
+		return count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: arch/arm/mach-omap1/powerop.c:214:
+ssize_t dspdiv_show(struct powerop_point *op, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: arch/arm/mach-omap1/powerop.c:216:
+	return sprintf(buf,"%d\n",op->dspdiv);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: arch/arm/mach-omap1/powerop.c:216:
+	return sprintf(buf,"%d\n",op->dspdiv);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: arch/arm/mach-omap1/powerop.c:219:
+ssize_t dspdiv_store(struct powerop_point *op, const char * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#157: FILE: arch/arm/mach-omap1/powerop.c:223:
+	if ((error = sscanf(buf, "%d", &op->dspdiv)) == 1)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#157: FILE: arch/arm/mach-omap1/powerop.c:223:
+	if ((error = sscanf(buf, "%d", &op->dspdiv)) == 1)
+		return count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: arch/arm/mach-omap1/powerop.c:230:
+ssize_t tcdiv_show(struct powerop_point *op, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#166: FILE: arch/arm/mach-omap1/powerop.c:232:
+	return sprintf(buf,"%d\n",op->tcdiv);
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#166: FILE: arch/arm/mach-omap1/powerop.c:232:
+	return sprintf(buf,"%d\n",op->tcdiv);
 	                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: arch/arm/mach-omap1/powerop.c:235:
+ssize_t tcdiv_store(struct powerop_point *op, const char * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#173: FILE: arch/arm/mach-omap1/powerop.c:239:
+	if ((error = sscanf(buf, "%d", &op->tcdiv)) == 1)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#173: FILE: arch/arm/mach-omap1/powerop.c:239:
+	if ((error = sscanf(buf, "%d", &op->tcdiv)) == 1)
+		return count;

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void powerop_omap1_sysfs_init() should probably be void powerop_omap1_sysfs_init(void)
#190: FILE: arch/arm/mach-omap1/powerop.c:256:
+static void powerop_omap1_sysfs_init()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void powerop_omap1_sysfs_exit() should probably be void powerop_omap1_sysfs_exit(void)
#195: FILE: arch/arm/mach-omap1/powerop.c:261:
+static void powerop_omap1_sysfs_exit()

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void powerop_omap1_sysfs_init() should probably be void powerop_omap1_sysfs_init(void)
#200: FILE: arch/arm/mach-omap1/powerop.c:266:
+static void powerop_omap1_sysfs_init()

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#203: FILE: arch/arm/mach-omap1/powerop.c:269:
+}
+static void powerop_omap1_sysfs_exit()

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void powerop_omap1_sysfs_exit() should probably be void powerop_omap1_sysfs_exit(void)
#203: FILE: arch/arm/mach-omap1/powerop.c:269:
+static void powerop_omap1_sysfs_exit()

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157319.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 22 warnings, 1 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000157319.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
