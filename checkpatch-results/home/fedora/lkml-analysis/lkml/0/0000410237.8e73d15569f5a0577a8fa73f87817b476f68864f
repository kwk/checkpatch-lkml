WARNING:TYPO_SPELLING: 'attatched' may be misspelled - perhaps 'attached'?
#43: 
subarch - the attatched bits seem to work & are written with the
              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
diff -purN -X /home/mbligh/.diff.exclude 11-noearlyirq-01/arch/i386/kernel/smpboot.c 21-i386_topo-11/arch/i386/kernel/smpboot.c

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#92: FILE: arch/i386/kernel/smpboot.c:507:
+volatile unsigned long node_2_cpu_mask[MAX_NR_NODES];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#94: FILE: arch/i386/kernel/smpboot.c:509:
+volatile int cpu_2_node[NR_CPUS];

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#102: FILE: arch/i386/kernel/smpboot.c:516:
MAX_NR_NODES; node++) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#105: FILE: arch/i386/kernel/smpboot.c:519:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {
+		cpu_2_node[cpu] = -1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#105: FILE: arch/i386/kernel/smpboot.c:519:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#171: FILE: include/asm-i386/smpboot.h:30:
+extern volatile unsigned long node_2_cpu_mask[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#172: FILE: include/asm-i386/smpboot.h:31:
+extern volatile int cpu_2_node[];

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: include/asm-i386/mach-numaq/mach_apic.h:1:
+#ifndef __ASM_MACH_APIC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bitmap' may be better as '(bitmap)' to avoid precedence issues
#314: FILE: include/asm-i386/mach-numaq/mach_apic.h:17:
+#define check_apicid_used(bitmap, apicid) (bitmap & (1 << apicid))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'apicid' may be better as '(apicid)' to avoid precedence issues
#314: FILE: include/asm-i386/mach-numaq/mach_apic.h:17:
+#define check_apicid_used(bitmap, apicid) (bitmap & (1 << apicid))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: include/asm-i386/mach-numaq/mach_apic.h:19:
+static inline void summit_check(char *oem, char *productid) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#322: FILE: include/asm-i386/mach-numaq/mach_apic.h:25:
+	printk("Enabling APIC mode:  %s.  Using %d I/O APICs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: include/asm-i386/mach-numaq/mach_apic.h:26:
+	printk("Enabling APIC mode:  %s.  Using %d I/O APICs\n",
+		"NUMA-Q", nr_ioapics);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#328: FILE: include/asm-i386/mach-numaq/mach_apic.h:31:
+	return ( ((mps_cpu/4)*16) + (1<<(mps_cpu%4)) );
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#328: FILE: include/asm-i386/mach-numaq/mach_apic.h:31:
+	return ( ((mps_cpu/4)*16) + (1<<(mps_cpu%4)) );
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#328: FILE: include/asm-i386/mach-numaq/mach_apic.h:31:
+	return ( ((mps_cpu/4)*16) + (1<<(mps_cpu%4)) );
 	                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#328: FILE: include/asm-i386/mach-numaq/mach_apic.h:31:
+	return ( ((mps_cpu/4)*16) + (1<<(mps_cpu%4)) );
 	                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#328: FILE: include/asm-i386/mach-numaq/mach_apic.h:31:
+	return ( ((mps_cpu/4)*16) + (1<<(mps_cpu%4)) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#328: FILE: include/asm-i386/mach-numaq/mach_apic.h:31:
+	return ( ((mps_cpu/4)*16) + (1<<(mps_cpu%4)) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: include/asm-i386/mach-default/mach_apic.h:31:
+^Ireturn (test_bit(GET_APIC_ID(apic_read(APIC_ID)), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: include/asm-i386/mach-default/mach_apic.h:32:
+	return (test_bit(GET_APIC_ID(apic_read(APIC_ID)), 
+						&phys_cpu_present_map));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#496: FILE: include/asm-i386/mach-numaq/mach_apic.h:27:
+	return (1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#536: FILE: include/asm-i386/mach-summit/mach_apic.h:39:
+	return (1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#539: FILE: include/asm-i386/mach-summit/mach_apic.h:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 10 warnings, 9 checks, 350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
