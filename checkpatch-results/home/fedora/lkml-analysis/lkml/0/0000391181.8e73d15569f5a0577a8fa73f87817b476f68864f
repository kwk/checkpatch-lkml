WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
  - Drop CONFIG_ prefix for SGI_NEWPORT_CONSOLE in drivers/video/logo/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#230: FILE: scripts/pnmtologo.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: scripts/pnmtologo.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: scripts/pnmtologo.c:30:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#265: FILE: scripts/pnmtologo.c:36:
+static const char *logo_types[LINUX_LOGO_GRAY256+1] = {
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: scripts/pnmtologo.c:37:
+    [LINUX_LOGO_MONO] = "LINUX_LOGO_MONO",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: scripts/pnmtologo.c:38:
+    [LINUX_LOGO_VGA16] = "LINUX_LOGO_VGA16",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: scripts/pnmtologo.c:39:
+    [LINUX_LOGO_CLUT224] = "LINUX_LOGO_CLUT224",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: scripts/pnmtologo.c:40:
+    [LINUX_LOGO_GRAY256] = "LINUX_LOGO_GRAY256"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: scripts/pnmtologo.c:46:
+    unsigned char red;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: scripts/pnmtologo.c:47:
+    unsigned char green;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: scripts/pnmtologo.c:48:
+    unsigned char blue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: scripts/pnmtologo.c:52:
+    { 0x00, 0x00, 0x00 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: scripts/pnmtologo.c:53:
+    { 0x00, 0x00, 0xaa },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: scripts/pnmtologo.c:54:
+    { 0x00, 0xaa, 0x00 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: scripts/pnmtologo.c:55:
+    { 0x00, 0xaa, 0xaa },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: scripts/pnmtologo.c:56:
+    { 0xaa, 0x00, 0x00 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: scripts/pnmtologo.c:57:
+    { 0xaa, 0x00, 0xaa },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: scripts/pnmtologo.c:58:
+    { 0xaa, 0x55, 0x00 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: scripts/pnmtologo.c:59:
+    { 0xaa, 0xaa, 0xaa },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: scripts/pnmtologo.c:60:
+    { 0x55, 0x55, 0x55 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: scripts/pnmtologo.c:61:
+    { 0x55, 0x55, 0xff },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: scripts/pnmtologo.c:62:
+    { 0x55, 0xff, 0x55 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: scripts/pnmtologo.c:63:
+    { 0x55, 0xff, 0xff },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: scripts/pnmtologo.c:64:
+    { 0xff, 0x55, 0x55 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: scripts/pnmtologo.c:65:
+    { 0xff, 0x55, 0xff },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: scripts/pnmtologo.c:66:
+    { 0xff, 0xff, 0x55 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: scripts/pnmtologo.c:67:
+    { 0xff, 0xff, 0xff },$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#299: FILE: scripts/pnmtologo.c:70:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#305: FILE: scripts/pnmtologo.c:76:
+static unsigned int logo_clutsize = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: scripts/pnmtologo.c:79:
+    __attribute__ ((noreturn)) __attribute ((format (printf, 1, 2)));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: scripts/pnmtologo.c:79:
+    __attribute__ ((noreturn)) __attribute ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#308: FILE: scripts/pnmtologo.c:79:
+    __attribute__ ((noreturn)) __attribute ((format (printf, 1, 2)));

CHECK:SPACING: No space is necessary after a cast
#309: FILE: scripts/pnmtologo.c:80:
+static void usage(void) __attribute ((noreturn));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: scripts/pnmtologo.c:80:
+static void usage(void) __attribute ((noreturn));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: scripts/pnmtologo.c:82:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: scripts/pnmtologo.c:85:
+    int c, val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: scripts/pnmtologo.c:88:
+    do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#319: FILE: scripts/pnmtologo.c:90:
+	if (c == EOF)
+	    die("%s: end of file\n", filename);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#321: FILE: scripts/pnmtologo.c:92:
+	if (c == '#') {
[...]
+	    do {

WARNING:TABSTOP: Statements should start on a tabstop
#323: FILE: scripts/pnmtologo.c:94:
+	    do {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#325: FILE: scripts/pnmtologo.c:96:
+		if (c == EOF)
+		    die("%s: end of file\n", filename);

WARNING:TABSTOP: Statements should start on a tabstop
#327: FILE: scripts/pnmtologo.c:98:
+	    } while (c != '\n');

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: scripts/pnmtologo.c:100:
+    } while (isspace(c));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: scripts/pnmtologo.c:103:
+    val = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: scripts/pnmtologo.c:104:
+    while (isdigit(c)) {$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#334: FILE: scripts/pnmtologo.c:105:
+	val = 10*val+c-'0';
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#334: FILE: scripts/pnmtologo.c:105:
+	val = 10*val+c-'0';
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#334: FILE: scripts/pnmtologo.c:105:
+	val = 10*val+c-'0';
 	              ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#336: FILE: scripts/pnmtologo.c:107:
+	if (c == EOF)
+	    die("%s: end of file\n", filename);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: scripts/pnmtologo.c:109:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: scripts/pnmtologo.c:110:
+    return val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: scripts/pnmtologo.c:115:
+    unsigned int val = get_number(fp);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: scripts/pnmtologo.c:116:
+    unsigned int val = get_number(fp);
+    return (255*val+maxval/2)/maxval;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: scripts/pnmtologo.c:116:
+    return (255*val+maxval/2)/maxval;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#345: FILE: scripts/pnmtologo.c:116:
+    return (255*val+maxval/2)/maxval;
                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#345: FILE: scripts/pnmtologo.c:116:
+    return (255*val+maxval/2)/maxval;
                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#345: FILE: scripts/pnmtologo.c:116:
+    return (255*val+maxval/2)/maxval;
                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#345: FILE: scripts/pnmtologo.c:116:
+    return (255*val+maxval/2)/maxval;
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: scripts/pnmtologo.c:121:
+    FILE *fp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: scripts/pnmtologo.c:122:
+    int i, j, magic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: scripts/pnmtologo.c:123:
+    unsigned int maxval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: scripts/pnmtologo.c:126:
+    fp = fopen(filename, "r");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: scripts/pnmtologo.c:127:
+    if (!fp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: scripts/pnmtologo.c:131:
+    magic = fgetc(fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: scripts/pnmtologo.c:132:
+    if (magic != 'P')$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: scripts/pnmtologo.c:134:
+    magic = fgetc(fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: scripts/pnmtologo.c:135:
+    switch (magic) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#364: FILE: scripts/pnmtologo.c:135:
+    switch (magic) {
+	case '1':
+	case '2':
+	case '3':
[...]
+	case '4':
+	case '5':
+	case '6':
[...]
+	default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#369: FILE: scripts/pnmtologo.c:140:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: scripts/pnmtologo.c:151:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: scripts/pnmtologo.c:152:
+    logo_width = get_number(fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: scripts/pnmtologo.c:153:
+    logo_height = get_number(fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: scripts/pnmtologo.c:156:
+    logo_data = (struct color **)malloc(logo_height*sizeof(struct color *));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#385: FILE: scripts/pnmtologo.c:156:
+    logo_data = (struct color **)malloc(logo_height*sizeof(struct color *));
                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: scripts/pnmtologo.c:157:
+    if (!logo_data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: scripts/pnmtologo.c:159:
+    for (i = 0; i < logo_height; i++) {$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#389: FILE: scripts/pnmtologo.c:160:
+	logo_data[i] = malloc(logo_width*sizeof(struct color));
 	                                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#390: FILE: scripts/pnmtologo.c:161:
+	if (!logo_data[i])
+	    die("%s\n", strerror(errno));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: scripts/pnmtologo.c:163:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: scripts/pnmtologo.c:166:
+    switch (magic) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#395: FILE: scripts/pnmtologo.c:166:
+    switch (magic) {
+	case '1':
[...]
+	case '2':
[...]
+	case '3':

WARNING:TABSTOP: Statements should start on a tabstop
#398: FILE: scripts/pnmtologo.c:169:
+	    for (i = 0; i < logo_height; i++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#399: FILE: scripts/pnmtologo.c:170:
+		for (j = 0; j < logo_width; j++)
+		    logo_data[i][j].red = logo_data[i][j].green =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#400: FILE: scripts/pnmtologo.c:171:
+		    logo_data[i][j].red = logo_data[i][j].green =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#401: FILE: scripts/pnmtologo.c:172:
+			logo_data[i][j].blue = 255*(1-get_number(fp));
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#401: FILE: scripts/pnmtologo.c:172:
+			logo_data[i][j].blue = 255*(1-get_number(fp));
 			                             ^

WARNING:TABSTOP: Statements should start on a tabstop
#402: FILE: scripts/pnmtologo.c:173:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#407: FILE: scripts/pnmtologo.c:178:
+	    for (i = 0; i < logo_height; i++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#408: FILE: scripts/pnmtologo.c:179:
+		for (j = 0; j < logo_width; j++)
+		    logo_data[i][j].red = logo_data[i][j].green =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#409: FILE: scripts/pnmtologo.c:180:
+		    logo_data[i][j].red = logo_data[i][j].green =

WARNING:TABSTOP: Statements should start on a tabstop
#411: FILE: scripts/pnmtologo.c:182:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#416: FILE: scripts/pnmtologo.c:187:
+	    for (i = 0; i < logo_height; i++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#417: FILE: scripts/pnmtologo.c:188:
+		for (j = 0; j < logo_width; j++) {
+		    logo_data[i][j].red = get_number255(fp, maxval);

WARNING:TABSTOP: Statements should start on a tabstop
#422: FILE: scripts/pnmtologo.c:193:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: scripts/pnmtologo.c:194:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: scripts/pnmtologo.c:197:
+    fclose(fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: scripts/pnmtologo.c:202:
+    return c.red == 0 && c.green == 0 && c.blue == 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: scripts/pnmtologo.c:207:
+    return c.red == 255 && c.green == 255 && c.blue == 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: scripts/pnmtologo.c:212:
+    return c.red == c.green && c.red == c.blue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: scripts/pnmtologo.c:217:
+    return c1.red == c2.red && c1.green == c2.green && c1.blue == c2.blue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: scripts/pnmtologo.c:223:
+    if (outputname) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#454: FILE: scripts/pnmtologo.c:225:
+	if (!out)
+	    die("Cannot create file %s: %s\n", outputname, strerror(errno));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: scripts/pnmtologo.c:227:
+    } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: scripts/pnmtologo.c:229:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: scripts/pnmtologo.c:231:
+    fputs("/*\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: scripts/pnmtologo.c:232:
+    fputs(" *  DO NOT EDIT THIS FILE!\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: scripts/pnmtologo.c:233:
+    fputs(" *\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: scripts/pnmtologo.c:234:
+    fprintf(out, " *  It was automatically generated from %s\n", filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: scripts/pnmtologo.c:235:
+    fputs(" *\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: scripts/pnmtologo.c:236:
+    fprintf(out, " *  Linux logo %s\n", logoname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: scripts/pnmtologo.c:237:
+    fputs(" */\n\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: scripts/pnmtologo.c:238:
+    fputs("#include <linux/linux_logo.h>\n\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: scripts/pnmtologo.c:239:
+    fprintf(out, "static const unsigned char %s_data[] __initdata = {\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: scripts/pnmtologo.c:245:
+    fputs("\n};\n\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: scripts/pnmtologo.c:246:
+    fprintf(out, "const struct linux_logo %s __initdata = {\n", logoname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: scripts/pnmtologo.c:247:
+    fprintf(out, "    .type\t= %s,\n", logo_types[logo_type]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: scripts/pnmtologo.c:248:
+    fprintf(out, "    .width\t= %d,\n", logo_width);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: scripts/pnmtologo.c:249:
+    fprintf(out, "    .height\t= %d,\n", logo_height);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: scripts/pnmtologo.c:250:
+    if (logo_type == LINUX_LOGO_CLUT224) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: scripts/pnmtologo.c:253:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: scripts/pnmtologo.c:254:
+    fprintf(out, "    .data\t= %s_data\n", logoname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: scripts/pnmtologo.c:255:
+    fputs("};\n\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: scripts/pnmtologo.c:258:
+    if (outputname)$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#491: FILE: scripts/pnmtologo.c:262:
+static int write_hex_cnt = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: scripts/pnmtologo.c:266:
+    if (write_hex_cnt % 12)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: scripts/pnmtologo.c:268:
+    else if (write_hex_cnt)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: scripts/pnmtologo.c:270:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: scripts/pnmtologo.c:272:
+    write_hex_cnt++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: scripts/pnmtologo.c:277:
+    int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: scripts/pnmtologo.c:278:
+    unsigned char val, bit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: scripts/pnmtologo.c:281:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#511: FILE: scripts/pnmtologo.c:282:
+	for (j = 0; j < logo_width; j++)
+	    if (!is_black(logo_data[i][j]) && !is_white(logo_data[i][j]))

WARNING:TABSTOP: Statements should start on a tabstop
#512: FILE: scripts/pnmtologo.c:283:
+	    if (!is_black(logo_data[i][j]) && !is_white(logo_data[i][j]))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: scripts/pnmtologo.c:287:
+    write_header();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: scripts/pnmtologo.c:290:
+    for (i = 0; i < logo_height; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#520: FILE: scripts/pnmtologo.c:291:
+	for (j = 0; j < logo_width;) {
+	    for (val = 0, bit = 0x80; bit && j < logo_width; j++, bit >>= 1)

WARNING:TABSTOP: Statements should start on a tabstop
#521: FILE: scripts/pnmtologo.c:292:
+	    for (val = 0, bit = 0x80; bit && j < logo_width; j++, bit >>= 1)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#522: FILE: scripts/pnmtologo.c:293:
+		if (logo_data[i][j].red)
+		    val |= bit;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: scripts/pnmtologo.c:297:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: scripts/pnmtologo.c:300:
+    write_footer();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: scripts/pnmtologo.c:305:
+    int i, j, k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: scripts/pnmtologo.c:306:
+    unsigned char val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: scripts/pnmtologo.c:309:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#539: FILE: scripts/pnmtologo.c:310:
+	for (j = 0; j < logo_width; j++) {
+	    for (k = 0; k < 16; k++)

WARNING:TABSTOP: Statements should start on a tabstop
#540: FILE: scripts/pnmtologo.c:311:
+	    for (k = 0; k < 16; k++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#541: FILE: scripts/pnmtologo.c:312:
+		if (is_equal(logo_data[i][j], clut_vga16[k]))
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#542: FILE: scripts/pnmtologo.c:313:
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#543: FILE: scripts/pnmtologo.c:314:
+	    if (k == 16)

WARNING:SPLIT_STRING: quoted string split across lines
#546: FILE: scripts/pnmtologo.c:317:
+		    "Use ppmquant(1) -map clut_vga16.ppm to reduce the number "
+		    "of colors\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: scripts/pnmtologo.c:321:
+    write_header();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: scripts/pnmtologo.c:324:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#554: FILE: scripts/pnmtologo.c:325:
+	for (j = 0; j < logo_width; j++) {
+	    for (k = 0; k < 16; k++)

WARNING:TABSTOP: Statements should start on a tabstop
#555: FILE: scripts/pnmtologo.c:326:
+	    for (k = 0; k < 16; k++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#556: FILE: scripts/pnmtologo.c:327:
+		if (is_equal(logo_data[i][j], clut_vga16[k]))
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#557: FILE: scripts/pnmtologo.c:328:
+		    break;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#558: FILE: scripts/pnmtologo.c:329:
+	    val = k<<4;
 	           ^

WARNING:TABSTOP: Statements should start on a tabstop
#559: FILE: scripts/pnmtologo.c:330:
+	    if (++j < logo_width) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#560: FILE: scripts/pnmtologo.c:331:
+		for (k = 0; k < 16; k++)
+		    if (is_equal(logo_data[i][j], clut_vga16[k]))

WARNING:TABSTOP: Statements should start on a tabstop
#561: FILE: scripts/pnmtologo.c:332:
+		    if (is_equal(logo_data[i][j], clut_vga16[k]))

WARNING:TABSTOP: Statements should start on a tabstop
#564: FILE: scripts/pnmtologo.c:335:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: scripts/pnmtologo.c:340:
+    write_footer();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: scripts/pnmtologo.c:345:
+    int i, j, k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: scripts/pnmtologo.c:348:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#578: FILE: scripts/pnmtologo.c:349:
+	for (j = 0; j < logo_width; j++) {
+	    for (k = 0; k < logo_clutsize; k++)

WARNING:TABSTOP: Statements should start on a tabstop
#579: FILE: scripts/pnmtologo.c:350:
+	    for (k = 0; k < logo_clutsize; k++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#580: FILE: scripts/pnmtologo.c:351:
+		if (is_equal(logo_data[i][j], logo_clut[k]))
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#581: FILE: scripts/pnmtologo.c:352:
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#582: FILE: scripts/pnmtologo.c:353:
+	    if (k == logo_clutsize) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#583: FILE: scripts/pnmtologo.c:354:
+		if (logo_clutsize == MAX_LINUX_LOGO_COLORS)
+		    die("Image has more than %d colors\n"

WARNING:TABSTOP: Statements should start on a tabstop
#588: FILE: scripts/pnmtologo.c:359:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: scripts/pnmtologo.c:363:
+    write_header();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: scripts/pnmtologo.c:366:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#596: FILE: scripts/pnmtologo.c:367:
+	for (j = 0; j < logo_width; j++) {
+	    for (k = 0; k < logo_clutsize; k++)

WARNING:TABSTOP: Statements should start on a tabstop
#597: FILE: scripts/pnmtologo.c:368:
+	    for (k = 0; k < logo_clutsize; k++)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#598: FILE: scripts/pnmtologo.c:369:
+		if (is_equal(logo_data[i][j], logo_clut[k]))
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#599: FILE: scripts/pnmtologo.c:370:
+		    break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#600: FILE: scripts/pnmtologo.c:371:
+	    write_hex(k+32);
 	               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: scripts/pnmtologo.c:373:
+    fputs("\n};\n\n", out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: scripts/pnmtologo.c:376:
+    fprintf(out, "static const unsigned char %s_clut[] __initdata = {\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: scripts/pnmtologo.c:378:
+    write_hex_cnt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: scripts/pnmtologo.c:379:
+    for (i = 0; i < logo_clutsize; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: scripts/pnmtologo.c:383:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: scripts/pnmtologo.c:386:
+    write_footer();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: scripts/pnmtologo.c:391:
+    int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: scripts/pnmtologo.c:394:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#624: FILE: scripts/pnmtologo.c:395:
+	for (j = 0; j < logo_width; j++)
+	    if (!is_gray(logo_data[i][j]))

WARNING:TABSTOP: Statements should start on a tabstop
#625: FILE: scripts/pnmtologo.c:396:
+	    if (!is_gray(logo_data[i][j]))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: scripts/pnmtologo.c:400:
+    write_header();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: scripts/pnmtologo.c:403:
+    for (i = 0; i < logo_height; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#633: FILE: scripts/pnmtologo.c:404:
+	for (j = 0; j < logo_width; j++)
+	    write_hex(logo_data[i][j].red);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: scripts/pnmtologo.c:408:
+    write_footer();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: scripts/pnmtologo.c:413:
+    va_list ap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: scripts/pnmtologo.c:415:
+    va_start(ap, fmt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: scripts/pnmtologo.c:416:
+    vfprintf(stderr, fmt, ap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: scripts/pnmtologo.c:417:
+    va_end(ap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: scripts/pnmtologo.c:419:
+    exit(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: scripts/pnmtologo.c:424:
+    die("\n"$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usage', this function's name, in a string
#657: FILE: scripts/pnmtologo.c:428:
+	"    -h          : display this usage information\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: scripts/pnmtologo.c:441:
+    int opt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: scripts/pnmtologo.c:443:
+    programname = argv[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: scripts/pnmtologo.c:445:
+    opterr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: scripts/pnmtologo.c:446:
+    while (1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#677: FILE: scripts/pnmtologo.c:448:
+	if (opt == -1)
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#678: FILE: scripts/pnmtologo.c:449:
+	    break;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#680: FILE: scripts/pnmtologo.c:451:
+	switch (opt) {
+	    case 'h':
[...]
+	    case 'n':
[...]
+	    case 'o':
[...]
+	    case 't':
[...]
+	    default:

WARNING:TABSTOP: Statements should start on a tabstop
#681: FILE: scripts/pnmtologo.c:452:
+	    case 'h':

WARNING:TABSTOP: Statements should start on a tabstop
#685: FILE: scripts/pnmtologo.c:456:
+	    case 'n':

WARNING:TABSTOP: Statements should start on a tabstop
#689: FILE: scripts/pnmtologo.c:460:
+	    case 'o':

WARNING:TABSTOP: Statements should start on a tabstop
#693: FILE: scripts/pnmtologo.c:464:
+	    case 't':

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#694: FILE: scripts/pnmtologo.c:465:
+		if (!strcmp(optarg, "mono"))
+		    logo_type = LINUX_LOGO_MONO;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#696: FILE: scripts/pnmtologo.c:467:
+		else if (!strcmp(optarg, "vga16"))
+		    logo_type = LINUX_LOGO_VGA16;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#698: FILE: scripts/pnmtologo.c:469:
+		else if (!strcmp(optarg, "clut224"))
+		    logo_type = LINUX_LOGO_CLUT224;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#700: FILE: scripts/pnmtologo.c:471:
+		else if (!strcmp(optarg, "gray256"))
+		    logo_type = LINUX_LOGO_GRAY256;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#702: FILE: scripts/pnmtologo.c:473:
+		else
+		    usage();

WARNING:TABSTOP: Statements should start on a tabstop
#706: FILE: scripts/pnmtologo.c:477:
+	    default:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: scripts/pnmtologo.c:481:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: scripts/pnmtologo.c:482:
+    if (optind != argc-1)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#711: FILE: scripts/pnmtologo.c:482:
+    if (optind != argc-1)
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: scripts/pnmtologo.c:485:
+    filename = argv[optind];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: scripts/pnmtologo.c:487:
+    read_image();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: scripts/pnmtologo.c:488:
+    switch (logo_type) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#717: FILE: scripts/pnmtologo.c:488:
+    switch (logo_type) {
+	case LINUX_LOGO_MONO:
[...]
+	case LINUX_LOGO_VGA16:
[...]
+	case LINUX_LOGO_CLUT224:
[...]
+	case LINUX_LOGO_GRAY256:

WARNING:TABSTOP: Statements should start on a tabstop
#720: FILE: scripts/pnmtologo.c:491:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#724: FILE: scripts/pnmtologo.c:495:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#728: FILE: scripts/pnmtologo.c:499:
+	    break;

WARNING:TABSTOP: Statements should start on a tabstop
#732: FILE: scripts/pnmtologo.c:503:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: scripts/pnmtologo.c:504:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: scripts/pnmtologo.c:505:
+    exit(0);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391181.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 201 warnings, 22 checks, 630 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000391181.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
