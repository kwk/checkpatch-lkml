WARNING:BAD_SIGN_OFF: Unexpected content after email: 'ak@muc.de; akpm@osdl.org; greg@kroah.com; jgarzik@pobox.com; ', should be: 'ak@muc.de; (akpm@osdl.org; greg@kroah.com; jgarzik@pobox.com;)'
#68: 
To: ak@muc.de; akpm@osdl.org; greg@kroah.com; jgarzik@pobox.com; 

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: Documentation/MSI-HOWTO.txt:6:
+       Revised May 24, 2004 by Tom L Nguyen $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#138: FILE: Documentation/MSI-HOWTO.txt:9:
the 

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: Documentation/MSI-HOWTO.txt:10:
+This guide describes the basics of Message Signaled Interrupts (MSI), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: Documentation/MSI-HOWTO.txt:11:
+the advantages of using MSI over traditional interrupt mechanisms, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: Documentation/MSI-HOWTO.txt:12:
+and how to enable your driver to use MSI or MSI-X. Also included is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: Documentation/MSI-HOWTO.txt:13:
+a Frequently Asked Questions. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: Documentation/MSI-HOWTO.txt:39:
+enable both. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: Documentation/MSI-HOWTO.txt:90:
+vectors, which can be configured to target different CPU's to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: Documentation/MSI-HOWTO.txt:99:
+5.1 Including MSI/MSI-X support into the kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: Documentation/MSI-HOWTO.txt:101:
+To allow MSI/MSI-X capable device drivers to selectively enable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/MSI-HOWTO.txt:102:
+MSI/MSI-X (using pci_enable_msi()/pci_enable_msix() as described $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: Documentation/MSI-HOWTO.txt:103:
+below), the VECTOR based scheme needs to be enabled by setting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: Documentation/MSI-HOWTO.txt:104:
+CONFIG_PCI_USE_VECTOR during kernel config. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: Documentation/MSI-HOWTO.txt:110:
+5.2 Configuring for MSI support $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: Documentation/MSI-HOWTO.txt:111:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: Documentation/MSI-HOWTO.txt:112:
+Due to the non-contiguous fashion in vector assignment of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: Documentation/MSI-HOWTO.txt:113:
+existing Linux kernel, this version does not support multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: Documentation/MSI-HOWTO.txt:114:
+messages regardless of a device function is capable of supporting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: Documentation/MSI-HOWTO.txt:115:
+more than one vector. To enable MSI on a device function's MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: Documentation/MSI-HOWTO.txt:116:
+capability structure requires a device driver to call the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: Documentation/MSI-HOWTO.txt:117:
+pci_enable_msi() explicitly. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: Documentation/MSI-HOWTO.txt:118:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: Documentation/MSI-HOWTO.txt:119:
+5.2.1 API pci_enable_msi $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: Documentation/MSI-HOWTO.txt:120:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: Documentation/MSI-HOWTO.txt:121:
+int pci_enable_msi(struct pci_dev *dev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: Documentation/MSI-HOWTO.txt:124:
+MSI enabled on its device function, must call this API to enable MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: Documentation/MSI-HOWTO.txt:125:
+A successful call will initialize the MSI capability structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: Documentation/MSI-HOWTO.txt:126:
+with ONE vector, regardless of whether a device function is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: Documentation/MSI-HOWTO.txt:130:
+a device driver to call this API before calling request_irq(). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: Documentation/MSI-HOWTO.txt:131:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: Documentation/MSI-HOWTO.txt:132:
+5.2.2 MSI mode vs. legacy mode diagram $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: Documentation/MSI-HOWTO.txt:143:
+Figure 1.0 MSI Mode vs. Legacy Mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: Documentation/MSI-HOWTO.txt:145:
+In Figure 1.0, a device operates by default in legacy mode. Legacy $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: Documentation/MSI-HOWTO.txt:146:
+in this context means PCI pin-irq assertion or PCI-Express INTx $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: Documentation/MSI-HOWTO.txt:147:
+emulation. A successful MSI request (using pci_enable_msi()) switches $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: Documentation/MSI-HOWTO.txt:148:
+a device's interrupt mode to MSI mode. A pre-assigned IOAPIC vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: Documentation/MSI-HOWTO.txt:149:
+stored in dev->irq will be saved by the PCI subsystem and a new $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: Documentation/MSI-HOWTO.txt:150:
+assigned MSI vector will replace dev->irq. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: Documentation/MSI-HOWTO.txt:151:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: Documentation/MSI-HOWTO.txt:152:
+To return back to its default mode, a device driver must call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: Documentation/MSI-HOWTO.txt:155:
+device's dev->irq with a pre-assigned IOAPIC vector and marks released $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: Documentation/MSI-HOWTO.txt:156:
+MSI vector as unused. Once being marked as unused, there is no $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: Documentation/MSI-HOWTO.txt:157:
+guarantee that the PCI subsystem will reserve this MSI vector for a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: Documentation/MSI-HOWTO.txt:158:
+device. Depending on the availability of current PCI vector resources $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: Documentation/MSI-HOWTO.txt:159:
+and the number of MSI/MSI-X requests from other drivers, this MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: Documentation/MSI-HOWTO.txt:160:
+may be re-assigned. For the case where the PCI subsystem re-assigned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: Documentation/MSI-HOWTO.txt:161:
+this MSI vector another driver, a request to switching back to MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: Documentation/MSI-HOWTO.txt:162:
+mode may result in being assigned a different MSI vector or a failure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: Documentation/MSI-HOWTO.txt:163:
+if no more vectors are available.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: Documentation/MSI-HOWTO.txt:167:
+Due to the ability of the system software to configure each vector of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: Documentation/MSI-HOWTO.txt:168:
+the MSI-X capability structure with an independent message address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: Documentation/MSI-HOWTO.txt:169:
+and message data, the non-contiguous fashion in vector assignment of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: Documentation/MSI-HOWTO.txt:170:
+the existing Linux kernel has no impact on supporting multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: Documentation/MSI-HOWTO.txt:171:
+messages on an MSI-X capable device functions. To enable MSI-X on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: Documentation/MSI-HOWTO.txt:172:
+a device function's MSI-X capability structure requires its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: Documentation/MSI-HOWTO.txt:173:
+driver to call the function pci_enable_msix() explicitly. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: Documentation/MSI-HOWTO.txt:174:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: Documentation/MSI-HOWTO.txt:175:
+The function pci_enable_msix(), once invoked, enables either $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: Documentation/MSI-HOWTO.txt:176:
+all or nothing, depending on the current availability of PCI vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: Documentation/MSI-HOWTO.txt:177:
+resources. If the PCI vector resources are available for the number $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: Documentation/MSI-HOWTO.txt:178:
+of vectors requested by a device driver, this function will configure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: Documentation/MSI-HOWTO.txt:179:
+the MSI-X table of the MSI-X capability structure of a device with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: Documentation/MSI-HOWTO.txt:180:
+requested messages. To emphasize this reason, for example, a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: Documentation/MSI-HOWTO.txt:181:
+may be capable for supporting the maximum of 32 vectors while its $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: Documentation/MSI-HOWTO.txt:182:
+software driver usually may request 4 vectors. It is recommended $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: Documentation/MSI-HOWTO.txt:183:
+that the device driver should call this function once during the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: Documentation/MSI-HOWTO.txt:186:
+Unlike the function pci_enable_msi(), the function pci_enable_msix() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: Documentation/MSI-HOWTO.txt:187:
+does not replace the pre-assigned IOAPIC dev->irq with a new MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: Documentation/MSI-HOWTO.txt:190:
+into the field vector of each element contained in a second argument. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: Documentation/MSI-HOWTO.txt:193:
+operates in PIN-IRQ assertion mode. In MSI-X mode, any attempt of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: Documentation/MSI-HOWTO.txt:194:
+using dev->irq by the device driver to request for interrupt service $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: Documentation/MSI-HOWTO.txt:195:
+may result unpredictabe behavior. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: Documentation/MSI-HOWTO.txt:196:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: Documentation/MSI-HOWTO.txt:197:
+For each MSI-X vector granted, a device driver is responsible to call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: Documentation/MSI-HOWTO.txt:198:
+other functions like request_irq(), enable_irq(), etc. to enable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: Documentation/MSI-HOWTO.txt:199:
+this vector with its corresponding interrupt service handler. It is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: Documentation/MSI-HOWTO.txt:200:
+a device driver's choice to assign all vectors with the same $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: Documentation/MSI-HOWTO.txt:201:
+interrupt service handler or each vector with a unique interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: Documentation/MSI-HOWTO.txt:202:
+service handler. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: Documentation/MSI-HOWTO.txt:203:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: Documentation/MSI-HOWTO.txt:204:
+5.3.1 Handling MMIO address space of MSI-X Table $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: Documentation/MSI-HOWTO.txt:205:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: Documentation/MSI-HOWTO.txt:206:
+The PCI 3.0 specification has implementation notes that MMIO address $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: Documentation/MSI-HOWTO.txt:207:
+space for a device's MSI-X structure should be isolated so that the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: Documentation/MSI-HOWTO.txt:208:
+software system can set different page for controlling accesses to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: Documentation/MSI-HOWTO.txt:209:
+the MSI-X structure. The implementation of MSI patch requires the PCI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: Documentation/MSI-HOWTO.txt:210:
+subsystem, not a device driver, to maintain full control of the MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: Documentation/MSI-HOWTO.txt:211:
+table/MSI-X PBA and MMIO address space of the MSI-X table/MSI-X PBA. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: Documentation/MSI-HOWTO.txt:212:
+A device driver is prohibited from requesting the MMIO address space $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: Documentation/MSI-HOWTO.txt:213:
+of the MSI-X table/MSI-X PBA. Otherwise, the PCI subsystem will fail $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: Documentation/MSI-HOWTO.txt:214:
+enabling MSI-X on its hardware device when it calls the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: Documentation/MSI-HOWTO.txt:215:
+pci_enable_msix(). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: Documentation/MSI-HOWTO.txt:216:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: Documentation/MSI-HOWTO.txt:217:
+5.3.2 Handling MSI-X allocation $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: Documentation/MSI-HOWTO.txt:218:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: Documentation/MSI-HOWTO.txt:219:
+Determining the number of MSI-X vectors allocated to a function is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: Documentation/MSI-HOWTO.txt:220:
+dependent on the number of MSI capable devices and MSI-X capable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: Documentation/MSI-HOWTO.txt:221:
+devices populated in the system. The policy of allocating MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: Documentation/MSI-HOWTO.txt:222:
+vectors to a function is defined as the following: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: Documentation/MSI-HOWTO.txt:223:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: Documentation/MSI-HOWTO.txt:224:
+#of MSI-X vectors allocated to a function = (x - y)/z where $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: Documentation/MSI-HOWTO.txt:225:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: Documentation/MSI-HOWTO.txt:226:
+x =    The number of available PCI vector resources by the time $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: Documentation/MSI-HOWTO.txt:227:
+       the device driver calls pci_enable_msix(). The PCI vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: Documentation/MSI-HOWTO.txt:228:
+       resources is the sum of the number of unassigned vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: Documentation/MSI-HOWTO.txt:229:
+       (new) and the number of released vectors when any MSI/MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: Documentation/MSI-HOWTO.txt:230:
+       device driver switches its hardware device back to a legacy $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: Documentation/MSI-HOWTO.txt:231:
+       mode or is hot-removed. The number of unassigned vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: Documentation/MSI-HOWTO.txt:232:
+       may exclude some vectors reserved, as defined in parameter $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: Documentation/MSI-HOWTO.txt:233:
+       NR_HP_RESERVED_VECTORS, for the case where the system is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: Documentation/MSI-HOWTO.txt:234:
+       capable of supporting hot-add/hot-remove operations. Users $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: Documentation/MSI-HOWTO.txt:235:
+       may change the value defined in NR_HR_RESERVED_VECTORS to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: Documentation/MSI-HOWTO.txt:236:
+       meet their specific needs. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: Documentation/MSI-HOWTO.txt:237:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#376: FILE: Documentation/MSI-HOWTO.txt:238:
+y =    The number of MSI capable devices populated in the system. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: Documentation/MSI-HOWTO.txt:239:
+       This policy ensures that each MSI capable device has its $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: Documentation/MSI-HOWTO.txt:240:
+       vector reserved to avoid the case where some MSI-X capable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: Documentation/MSI-HOWTO.txt:241:
+       drivers may attempt to claim all available vector resources. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: Documentation/MSI-HOWTO.txt:242:
+ $

WARNING:TYPO_SPELLING: 'pupulated' may be misspelled - perhaps 'populated'?
#381: FILE: Documentation/MSI-HOWTO.txt:243:
+z =    The number of MSI-X capable devices pupulated in the system. 
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: Documentation/MSI-HOWTO.txt:243:
+z =    The number of MSI-X capable devices pupulated in the system. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: Documentation/MSI-HOWTO.txt:244:
+       This policy ensures that maximum (x - y) is distributed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: Documentation/MSI-HOWTO.txt:245:
+       evenly among MSI-X capable devices.     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: Documentation/MSI-HOWTO.txt:246:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: Documentation/MSI-HOWTO.txt:247:
+Note that the PCI subsystem scans y and z during a bus enumeration. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: Documentation/MSI-HOWTO.txt:248:
+When the PCI subsystem completes configuring MSI/MSI-X capability $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: Documentation/MSI-HOWTO.txt:249:
+structure of a device as requested by its device driver, y/z is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: Documentation/MSI-HOWTO.txt:250:
+decremented accordingly.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: Documentation/MSI-HOWTO.txt:251:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: Documentation/MSI-HOWTO.txt:252:
+5.3.3 Handling MSI-X shortages $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: Documentation/MSI-HOWTO.txt:253:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: Documentation/MSI-HOWTO.txt:254:
+For the case where fewer MSI-X vectors are allocated to a function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: Documentation/MSI-HOWTO.txt:255:
+than requested, the function pci_enable_msix() will return the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: Documentation/MSI-HOWTO.txt:256:
+maximum number of MSI-X vectors available to the caller. A device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: Documentation/MSI-HOWTO.txt:257:
+driver may re-send its request with fewer or equal vectors indicated $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: Documentation/MSI-HOWTO.txt:258:
+in a return. For example, if a device driver requests 5 vectors, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: Documentation/MSI-HOWTO.txt:259:
+the number of available vectors is 3 vectors, a value of 3 will be a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: Documentation/MSI-HOWTO.txt:260:
+return as a result of pci_enable_msix() call. A function could be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: Documentation/MSI-HOWTO.txt:261:
+designed for its driver to use only 3 MSI-X table entries as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: Documentation/MSI-HOWTO.txt:262:
+different combinations as ABC--, A-B-C, A--CB, etc. Note that this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: Documentation/MSI-HOWTO.txt:263:
+patch does not support multiple entries with the same vector. Such $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: Documentation/MSI-HOWTO.txt:264:
+attempt by a device driver to use 5 MSI-X table entries with 3 vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: Documentation/MSI-HOWTO.txt:265:
+as ABBCC, AABCC, BCCBA, etc will result as a failure by the function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: Documentation/MSI-HOWTO.txt:266:
+pci_enable_msix(). Below are the reasons why supporting multiple $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: Documentation/MSI-HOWTO.txt:267:
+entries with the same vector is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#406: FILE: Documentation/MSI-HOWTO.txt:268:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: Documentation/MSI-HOWTO.txt:269:
+       - The PCI subsystem can not determine which entry, which $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: Documentation/MSI-HOWTO.txt:270:
+         generated the message, to mask/unmask MSI while handling $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: Documentation/MSI-HOWTO.txt:271:
+         software driver ISR. Attempting to walk through all MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#410: FILE: Documentation/MSI-HOWTO.txt:272:
+         table entries (2048 max) to mask/unmask any match vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: Documentation/MSI-HOWTO.txt:273:
+         is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: Documentation/MSI-HOWTO.txt:274:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: Documentation/MSI-HOWTO.txt:275:
+       - Walk through all MSI-X table entries (2048 max) to handle $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#414: FILE: Documentation/MSI-HOWTO.txt:276:
+         SMP affinity of any match vector is an undesirable solution. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: Documentation/MSI-HOWTO.txt:277:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: Documentation/MSI-HOWTO.txt:278:
+5.3.4 API pci_enable_msix $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: Documentation/MSI-HOWTO.txt:279:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: Documentation/MSI-HOWTO.txt:280:
+int pci_enable_msix(struct pci_dev *dev, u32 *entries, int nvec) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: Documentation/MSI-HOWTO.txt:281:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: Documentation/MSI-HOWTO.txt:282:
+This API enables a device driver to request the PCI subsystem $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#421: FILE: Documentation/MSI-HOWTO.txt:283:
+for enabling MSI-X messages on its hardware device. Depending on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: Documentation/MSI-HOWTO.txt:284:
+the availability of PCI vectors resources, the PCI subsystem enables $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: Documentation/MSI-HOWTO.txt:285:
+either all or nothing. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: Documentation/MSI-HOWTO.txt:288:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: Documentation/MSI-HOWTO.txt:289:
+Argument entries is a pointer of unsigned integer type. The number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: Documentation/MSI-HOWTO.txt:290:
+elements is indicated in argument nvec. The content of each element $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: Documentation/MSI-HOWTO.txt:291:
+will be mapped to the following struct defined in /driver/pci/msi.h. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: Documentation/MSI-HOWTO.txt:292:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: Documentation/MSI-HOWTO.txt:293:
+struct msix_entry { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: Documentation/MSI-HOWTO.txt:294:
+       __u32   vector  : 16; /* kernel uses to write alloc vector */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: Documentation/MSI-HOWTO.txt:295:
+       __u32   entry   : 16; /* driver uses to specify entry */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: Documentation/MSI-HOWTO.txt:296:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: Documentation/MSI-HOWTO.txt:297:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: Documentation/MSI-HOWTO.txt:298:
+A device driver is responsible for initializing the field entry of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: Documentation/MSI-HOWTO.txt:299:
+each element with unique entry supported by MSI-X table. Otherwise, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: Documentation/MSI-HOWTO.txt:300:
+-EINVAL will be returned as a result. A successful return of zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: Documentation/MSI-HOWTO.txt:301:
+indicates the PCI subsystem completes initializing each of requested $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: Documentation/MSI-HOWTO.txt:302:
+entries of the MSI-X table with message address and message data. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: Documentation/MSI-HOWTO.txt:303:
+Last but not least, the PCI subsystem will write the 1:1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: Documentation/MSI-HOWTO.txt:304:
+vector-to-entry mapping into the field vector of each element. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: Documentation/MSI-HOWTO.txt:305:
+device driver is responsible of keeping track of allocated MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: Documentation/MSI-HOWTO.txt:306:
+vectors in its internal data structure. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: Documentation/MSI-HOWTO.txt:307:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: Documentation/MSI-HOWTO.txt:311:
+A return of zero indicates that the number of MSI-X vectors is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: Documentation/MSI-HOWTO.txt:312:
+successfully allocated. A return of greater than zero indicates $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: Documentation/MSI-HOWTO.txt:313:
+MSI-X vector shortage. Or a return of less than zero indicates $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: Documentation/MSI-HOWTO.txt:314:
+a failure. This failure may be a result of duplicate entries $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: Documentation/MSI-HOWTO.txt:315:
+specified in second argument, or a result of no available vector, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: Documentation/MSI-HOWTO.txt:316:
+or a result of failing to initialize MSI-X table entries. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: Documentation/MSI-HOWTO.txt:317:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: Documentation/MSI-HOWTO.txt:318:
+5.3.5 MSI-X mode vs. legacy mode diagram $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: Documentation/MSI-HOWTO.txt:319:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#479: FILE: Documentation/MSI-HOWTO.txt:320:
+The below diagram shows the events, which switches the interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: Documentation/MSI-HOWTO.txt:321:
+mode on the MSI-X capable device function between MSI-X mode and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: Documentation/MSI-HOWTO.txt:322:
+PIN-IRQ assertion mode (legacy). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: Documentation/MSI-HOWTO.txt:323:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: Documentation/MSI-HOWTO.txt:324:
+        ------------   pci_enable_msix(,,n) ------------------------ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: Documentation/MSI-HOWTO.txt:325:
+       |            | <===============     |                        | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: Documentation/MSI-HOWTO.txt:326:
+       | MSI-X MODE |                      | PIN-IRQ ASSERTION MODE | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: Documentation/MSI-HOWTO.txt:327:
+       |            | ===============>     |                        | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: Documentation/MSI-HOWTO.txt:328:
+        ------------   (n)free_irq          ------------------------ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: Documentation/MSI-HOWTO.txt:329:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: Documentation/MSI-HOWTO.txt:330:
+Figure 2.0 MSI-X Mode vs. Legacy Mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: Documentation/MSI-HOWTO.txt:331:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: Documentation/MSI-HOWTO.txt:332:
+In Figure 2.0, a device operates by default in legacy mode. A $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: Documentation/MSI-HOWTO.txt:333:
+successful MSI-X request (using pci_enable_msix()) switches a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: Documentation/MSI-HOWTO.txt:334:
+device's interrupt mode to MSI-X mode. A pre-assigned IOAPIC vector $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: Documentation/MSI-HOWTO.txt:335:
+stored in dev->irq will be saved by the PCI subsystem; however, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: Documentation/MSI-HOWTO.txt:336:
+unlike MSI mode, the PCI subsystem will not replace dev->irq with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: Documentation/MSI-HOWTO.txt:337:
+assigned MSI-x vector because the PCI subsystem already writes the 1:1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: Documentation/MSI-HOWTO.txt:338:
+vector-to-entry mapping into the field vector of each element $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: Documentation/MSI-HOWTO.txt:339:
+specified in second argument. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: Documentation/MSI-HOWTO.txt:340:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: Documentation/MSI-HOWTO.txt:341:
+To return back to its default mode, a device driver requires to call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: Documentation/MSI-HOWTO.txt:342:
+free_irq() on all allocated MSI vectors. Unlike MSI mode, the PCI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: Documentation/MSI-HOWTO.txt:343:
+subsystem switches a device function back to its default legacy mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#503: FILE: Documentation/MSI-HOWTO.txt:344:
+if and only if its device driver successfully releases all allocated $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: Documentation/MSI-HOWTO.txt:345:
+MSI-X vectors (n) through (n) number of free_irq calls. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: Documentation/MSI-HOWTO.txt:346:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: Documentation/MSI-HOWTO.txt:347:
+Note that if a device still operates in MSI-X mode, its device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: Documentation/MSI-HOWTO.txt:348:
+driver can use request_irq/free_irq to any vectors in subset n. When $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: Documentation/MSI-HOWTO.txt:349:
+the PCI subsystem detects all MSI-X vectors being released by a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: Documentation/MSI-HOWTO.txt:350:
+driver, it will switches a function's interrupt mode from MSI-X mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: Documentation/MSI-HOWTO.txt:351:
+to legacy mode and mark all allocated MSI-X vectors as unused. Once $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: Documentation/MSI-HOWTO.txt:352:
+being marked as unused, there is no guarantee that the PCI subsystem $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: Documentation/MSI-HOWTO.txt:353:
+will reserve these MSI-X vectors for a device. Depending on the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: Documentation/MSI-HOWTO.txt:354:
+availability of current PCI vector resources and the number of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: Documentation/MSI-HOWTO.txt:355:
+MSI/MSI-X requests from other drivers, these MSI-X vectors may be $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: Documentation/MSI-HOWTO.txt:356:
+re-assigned. For the case where the PCI subsystem re-assigned $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: Documentation/MSI-HOWTO.txt:357:
+these MSI-X vectors to other driver, a request to switching back to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: Documentation/MSI-HOWTO.txt:358:
+MSI-X mode may result being assigned with another set of MSI-X vectors $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: Documentation/MSI-HOWTO.txt:359:
+or a failure.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: Documentation/MSI-HOWTO.txt:360:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: Documentation/MSI-HOWTO.txt:361:
+5.4 Handling function implementng both MSI and MSI-X capabilities $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: Documentation/MSI-HOWTO.txt:362:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: Documentation/MSI-HOWTO.txt:363:
+For the case where a function implements both MSI and MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: Documentation/MSI-HOWTO.txt:364:
+capabilities, the PCI subsystem enables a device to run either in MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: Documentation/MSI-HOWTO.txt:365:
+mode or MSI-X mode but not both. A device driver determines whether it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: Documentation/MSI-HOWTO.txt:366:
+wants MSI or MSI-X enabled on its hardware device. Once a device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: Documentation/MSI-HOWTO.txt:367:
+driver requests for MSI, for example, it is prohibited to request for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: Documentation/MSI-HOWTO.txt:368:
+MSI-X; in other words, a device driver is not permitted to ping-pong $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: Documentation/MSI-HOWTO.txt:369:
+between MSI mod MSI-X mode during a run-time. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: Documentation/MSI-HOWTO.txt:371:
+5.5 Hardware requirements for MSI/MSI-X support $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: Documentation/MSI-HOWTO.txt:372:
+MSI/MSI-X support requires support from both system hardware and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: Documentation/MSI-HOWTO.txt:375:
+5.5.1 System hardware support $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: Documentation/MSI-HOWTO.txt:377:
+MSI/MSI-X support in Linux kernel is dependent on whether existing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: Documentation/MSI-HOWTO.txt:383:
+MSI/MSI-X. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: Documentation/MSI-HOWTO.txt:385:
+Note that CONFIG_X86_IO_APIC setting is irrelevant because MSI/MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: Documentation/MSI-HOWTO.txt:386:
+vector is allocated new during runtime and MSI/MSI-X support does not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: Documentation/MSI-HOWTO.txt:387:
+depend on BIOS support. This key independency enables MSI/MSI-X $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: Documentation/MSI-HOWTO.txt:388:
+support on future IOxAPIC free platform. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: Documentation/MSI-HOWTO.txt:390:
+5.5.2 Device hardware support $

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#570: FILE: Documentation/MSI-HOWTO.txt:401:
+device funtion. The device function is now running on MSI/MSI-X mode. 
        ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: Documentation/MSI-HOWTO.txt:401:
+device funtion. The device function is now running on MSI/MSI-X mode. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: Documentation/MSI-HOWTO.txt:403:
+5.6 How to tell whether MSI/MSI-X is enabled on device function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: Documentation/MSI-HOWTO.txt:405:
+At the driver level, a return of zero from the function call of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: Documentation/MSI-HOWTO.txt:406:
+pci_enable_msi()/pci_enable_msix() indicates to a device driver that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: Documentation/MSI-HOWTO.txt:407:
+its device function is initialized successfully and ready to run in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: Documentation/MSI-HOWTO.txt:408:
+MSI/MSI-X mode. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: Documentation/MSI-HOWTO.txt:411:
+to display the vector allocated for a device and its interrupt $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#587: FILE: Documentation/MSI-HOWTO.txt:412:
+MSI/MSI-X mode ("PCI MSI"/"PCI MSIX"). Below shows below MSI mode is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#588: FILE: Documentation/MSI-HOWTO.txt:413:
+enabled on a SCSI Adaptec 39320D Ultra320.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: drivers/pci/msi.c:182:
+       struct msi_desc *entry; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/pci/msi.c:182:
+       struct msi_desc *entry; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: drivers/pci/msi.c:183:
+       unsigned long flags; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/pci/msi.c:183:
+       unsigned long flags; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: drivers/pci/msi.c:184:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/pci/msi.c:184:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: drivers/pci/msi.c:185:
+       spin_lock_irqsave(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/pci/msi.c:185:
+       spin_lock_irqsave(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: drivers/pci/msi.c:186:
+       entry = msi_desc[vector]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/pci/msi.c:186:
+       entry = msi_desc[vector]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: drivers/pci/msi.c:187:
+       if (!entry || !entry->dev) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/pci/msi.c:187:
+       if (!entry || !entry->dev) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#607: FILE: drivers/pci/msi.c:187:
+       if (!entry || !entry->dev) { 
+               spin_unlock_irqrestore(&msi_lock, flags); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#608: FILE: drivers/pci/msi.c:188:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: drivers/pci/msi.c:188:
+               spin_unlock_irqrestore(&msi_lock, flags); $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/pci/msi.c:188:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: drivers/pci/msi.c:189:
+               return 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: drivers/pci/msi.c:189:
+               return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/pci/msi.c:189:
+               return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/pci/msi.c:190:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/pci/msi.c:190:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: drivers/pci/msi.c:191:
+       entry->msi_attrib.state = 1;            /* Mark it active */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/pci/msi.c:191:
+       entry->msi_attrib.state = 1;            /* Mark it active */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: drivers/pci/msi.c:192:
+       spin_unlock_irqrestore(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: drivers/pci/msi.c:192:
+       spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: drivers/pci/msi.c:193:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: drivers/pci/msi.c:193:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/pci/msi.c:215:
+       .typename       = "PCI-MSI-X", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/pci/msi.c:215:
+       .typename       = "PCI-MSI-X", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: drivers/pci/msi.c:231:
+       .typename       = "PCI-MSI", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/pci/msi.c:231:
+       .typename       = "PCI-MSI", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#640: FILE: drivers/pci/msi.c:247:
+       .typename       = "PCI-MSI", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: drivers/pci/msi.c:247:
+       .typename       = "PCI-MSI", $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#649: FILE: drivers/pci/msi.c:280:
+static int msi_free_vector(struct pci_dev* dev, int vector, int

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#657: FILE: drivers/pci/msi.c:293:
        if (!new_vector_avail) { 
+               int free_vector = 0; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: drivers/pci/msi.c:294:
+               int free_vector = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#658: FILE: drivers/pci/msi.c:294:
+               int free_vector = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/pci/msi.c:294:
+               int free_vector = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: drivers/pci/msi.c:295:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: drivers/pci/msi.c:295:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/pci/msi.c:295:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: drivers/pci/msi.c:312:
+                       free_vector = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#674: FILE: drivers/pci/msi.c:312:
+                       free_vector = vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: drivers/pci/msi.c:312:
+                       free_vector = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/pci/msi.c:313:
+                       if (!msi_desc[vector]) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: drivers/pci/msi.c:313:
+                       if (!msi_desc[vector]) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/pci/msi.c:313:
+                       if (!msi_desc[vector]) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#675: FILE: drivers/pci/msi.c:313:
+                       if (!msi_desc[vector]) 
+                               break;  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: drivers/pci/msi.c:314:
+                               break;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: drivers/pci/msi.c:314:
+                               break;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/pci/msi.c:314:
+                               break;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: drivers/pci/msi.c:315:
+                       else $

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: drivers/pci/msi.c:315:
+                       else $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/pci/msi.c:315:
+                       else $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#677: FILE: drivers/pci/msi.c:315:
+                       else 
+                               continue; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: drivers/pci/msi.c:316:
+                               continue; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#678: FILE: drivers/pci/msi.c:316:
+                               continue; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: drivers/pci/msi.c:316:
+                               continue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: drivers/pci/msi.c:318:
+               if (!free_vector) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: drivers/pci/msi.c:318:
+               if (!free_vector) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: drivers/pci/msi.c:318:
+               if (!free_vector) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#680: FILE: drivers/pci/msi.c:318:
+               if (!free_vector) { 
+                       spin_unlock_irqrestore(&msi_lock, flags); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: drivers/pci/msi.c:319:
+                       spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: drivers/pci/msi.c:319:
+                       spin_unlock_irqrestore(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: drivers/pci/msi.c:319:
+                       spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: drivers/pci/msi.c:320:
+                       return -EBUSY; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: drivers/pci/msi.c:320:
+                       return -EBUSY; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/pci/msi.c:320:
+                       return -EBUSY; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/pci/msi.c:321:
+               }       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: drivers/pci/msi.c:321:
+               }       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: drivers/pci/msi.c:321:
+               }       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/pci/msi.c:322:
+               vector_irq[free_vector] = -1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#684: FILE: drivers/pci/msi.c:322:
+               vector_irq[free_vector] = -1; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/pci/msi.c:322:
+               vector_irq[free_vector] = -1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: drivers/pci/msi.c:323:
+               nr_released_vectors--; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: drivers/pci/msi.c:323:
+               nr_released_vectors--; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/pci/msi.c:323:
+               nr_released_vectors--; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/pci/msi.c:325:
+               if (msi_desc[free_vector] != NULL) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: drivers/pci/msi.c:325:
+               if (msi_desc[free_vector] != NULL) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: drivers/pci/msi.c:325:
+               if (msi_desc[free_vector] != NULL) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#688: FILE: drivers/pci/msi.c:325:
+               if (msi_desc[free_vector] != NULL) { 
+                       struct pci_dev *dev; 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msi_desc[free_vector]"
#688: FILE: drivers/pci/msi.c:325:
+               if (msi_desc[free_vector] != NULL) { 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: drivers/pci/msi.c:326:
+                       struct pci_dev *dev; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: drivers/pci/msi.c:326:
+                       struct pci_dev *dev; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: drivers/pci/msi.c:326:
+                       struct pci_dev *dev; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: drivers/pci/msi.c:327:
+                       int tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: drivers/pci/msi.c:327:
+                       int tail; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/pci/msi.c:327:
+                       int tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: drivers/pci/msi.c:328:
+                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: drivers/pci/msi.c:328:
+                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: drivers/pci/msi.c:328:
+                       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: drivers/pci/msi.c:329:
+                       /* free all linked vectors before re-assign */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: drivers/pci/msi.c:329:
+                       /* free all linked vectors before re-assign */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: drivers/pci/msi.c:330:
+                       do { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: drivers/pci/msi.c:330:
+                       do { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: drivers/pci/msi.c:330:
+                       do { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#693: FILE: drivers/pci/msi.c:330:
+                       do { 
+                               spin_lock_irqsave(&msi_lock, flags); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: drivers/pci/msi.c:331:
+                               spin_lock_irqsave(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: drivers/pci/msi.c:331:
+                               spin_lock_irqsave(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/pci/msi.c:331:
+                               spin_lock_irqsave(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: drivers/pci/msi.c:332:
+                               dev = msi_desc[free_vector]->dev; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: drivers/pci/msi.c:332:
+                               dev = msi_desc[free_vector]->dev; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: drivers/pci/msi.c:332:
+                               dev = msi_desc[free_vector]->dev; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: drivers/pci/msi.c:333:
+                               tail = msi_desc[free_vector]->link.tail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/pci/msi.c:333:
+                               tail = msi_desc[free_vector]->link.tail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: drivers/pci/msi.c:335:
+                               spin_unlock_irqrestore(&msi_lock,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/pci/msi.c:335:
+                               spin_unlock_irqrestore(&msi_lock,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: drivers/pci/msi.c:336:
+                               msi_free_vector(dev, tail, 1); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: drivers/pci/msi.c:336:
+                               msi_free_vector(dev, tail, 1); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/pci/msi.c:336:
+                               spin_unlock_irqrestore(&msi_lock,
+                               msi_free_vector(dev, tail, 1); 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/pci/msi.c:336:
+                               msi_free_vector(dev, tail, 1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: drivers/pci/msi.c:337:
+                       } while (free_vector != tail); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: drivers/pci/msi.c:337:
+                       } while (free_vector != tail); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: drivers/pci/msi.c:337:
+                       } while (free_vector != tail); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#702: FILE: drivers/pci/msi.c:338:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#702: FILE: drivers/pci/msi.c:338:
+               } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: drivers/pci/msi.c:338:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: drivers/pci/msi.c:339:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: drivers/pci/msi.c:339:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/pci/msi.c:339:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: drivers/pci/msi.c:340:
+               return free_vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: drivers/pci/msi.c:340:
+               return free_vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/pci/msi.c:340:
+               return free_vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: drivers/pci/msi.c:372:
+       last_alloc_vector = assign_irq_vector(AUTO_ASSIGN); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/pci/msi.c:372:
+       last_alloc_vector = assign_irq_vector(AUTO_ASSIGN); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#713: FILE: drivers/pci/msi.c:373:
+       if (last_alloc_vector < 0) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/pci/msi.c:373:
+       if (last_alloc_vector < 0) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#713: FILE: drivers/pci/msi.c:373:
+       if (last_alloc_vector < 0) { 
+               pci_msi_enable = 0; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: drivers/pci/msi.c:374:
+               pci_msi_enable = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: drivers/pci/msi.c:374:
+               pci_msi_enable = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: drivers/pci/msi.c:374:
+               pci_msi_enable = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: drivers/pci/msi.c:375:
+               printk(KERN_INFO "WARNING: ALL VECTORS ARE BUSY\n"); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: drivers/pci/msi.c:375:
+               printk(KERN_INFO "WARNING: ALL VECTORS ARE BUSY\n"); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: drivers/pci/msi.c:375:
+               printk(KERN_INFO "WARNING: ALL VECTORS ARE BUSY\n"); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#715: FILE: drivers/pci/msi.c:375:
+               printk(KERN_INFO "WARNING: ALL VECTORS ARE BUSY\n"); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: drivers/pci/msi.c:376:
+               status = -EBUSY; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/pci/msi.c:376:
+               status = -EBUSY; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/pci/msi.c:376:
+               status = -EBUSY; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: drivers/pci/msi.c:377:
+               return status; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/pci/msi.c:377:
+               return status; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/pci/msi.c:377:
+               return status; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#718: FILE: drivers/pci/msi.c:378:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/pci/msi.c:378:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: drivers/pci/msi.c:379:
+       vector_irq[last_alloc_vector] = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/pci/msi.c:379:
+       vector_irq[last_alloc_vector] = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: drivers/pci/msi.c:380:
+       nr_released_vectors++; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: drivers/pci/msi.c:380:
+       nr_released_vectors++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: drivers/pci/msi.c:479:
+static int msi_lookup_vector(struct pci_dev *dev, int type) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#737: FILE: drivers/pci/msi.c:487:
                if (!msi_desc[vector] || msi_desc[vector]->dev != dev ||
[...]
+                       continue;       

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: drivers/pci/msi.c:489:
+                       msi_desc[vector]->msi_attrib.type != type || $

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/pci/msi.c:489:
+                       msi_desc[vector]->msi_attrib.type != type || $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/pci/msi.c:489:
+                       msi_desc[vector]->msi_attrib.type != type || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: drivers/pci/msi.c:491:
+                       continue;       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: drivers/pci/msi.c:491:
+                       continue;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: drivers/pci/msi.c:491:
+                       continue;       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#747: FILE: drivers/pci/msi.c:493:
+               /* This pre-assigned MSI vector for this device $

ERROR:CODE_INDENT: code indent should use tabs where possible
#747: FILE: drivers/pci/msi.c:493:
+               /* This pre-assigned MSI vector for this device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: drivers/pci/msi.c:506:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: drivers/pci/msi.c:506:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#757: FILE: drivers/pci/msi.c:506:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSIX) > 0) 
                nr_msix_devices++; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#760: FILE: drivers/pci/msi.c:508:
+       else if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: drivers/pci/msi.c:508:
+       else if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#760: FILE: drivers/pci/msi.c:508:
+       else if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0) 
                nr_reserved_vectors++; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#788: FILE: drivers/pci/msi.c:540:
+       entry->link.head = vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: drivers/pci/msi.c:540:
+       entry->link.head = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: drivers/pci/msi.c:541:
+       entry->link.tail = vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: drivers/pci/msi.c:541:
+       entry->link.tail = vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: drivers/pci/msi.c:543:
+       entry->msi_attrib.state = 1;                    /* Mark it$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: drivers/pci/msi.c:547:
+       dev->irq = vector;      $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#800: FILE: drivers/pci/msi.c:547:
+       entry->msi_attrib.default_vector = dev->irq;    /* Save IOAPIC
+       dev->irq = vector;      

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#824: FILE: drivers/pci/msi.c:600:
+static int msix_capability_init(struct pci_dev *dev, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: drivers/pci/msi.c:601:
+                               struct msix_entry *entries, int nvec) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: drivers/pci/msi.c:601:
+                               struct msix_entry *entries, int nvec) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: drivers/pci/msi.c:601:
+static int msix_capability_init(struct pci_dev *dev, 
+                               struct msix_entry *entries, int nvec) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: drivers/pci/msi.c:601:
+                               struct msix_entry *entries, int nvec) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: drivers/pci/msi.c:603:
+       struct msi_desc *head = NULL, *tail = NULL, *entry = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: drivers/pci/msi.c:603:
+       struct msi_desc *head = NULL, *tail = NULL, *entry = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: drivers/pci/msi.c:606:
+       int vector, pos, i, j, nr_entries, temp = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: drivers/pci/msi.c:606:
+       int vector, pos, i, j, nr_entries, temp = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: drivers/pci/msi.c:611:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: drivers/pci/msi.c:611:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: drivers/pci/msi.c:616:
+       nr_entries = multi_msix_capable(control); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: drivers/pci/msi.c:616:
+       nr_entries = multi_msix_capable(control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#866: FILE: drivers/pci/msi.c:623:
+               nr_entries * PCI_MSIX_ENTRY_SIZE, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#866: FILE: drivers/pci/msi.c:623:
+               nr_entries * PCI_MSIX_ENTRY_SIZE, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: drivers/pci/msi.c:623:
+               nr_entries * PCI_MSIX_ENTRY_SIZE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: drivers/pci/msi.c:624:
+               "MSI-X vector table")) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: drivers/pci/msi.c:624:
+               "MSI-X vector table")) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: drivers/pci/msi.c:624:
+               "MSI-X vector table")) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: drivers/pci/msi.c:626:
+       base = ioremap_nocache(phys_addr, nr_entries *$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: drivers/pci/msi.c:627:
+       if (base == NULL) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: drivers/pci/msi.c:627:
+       if (base == NULL) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#907: FILE: drivers/pci/msi.c:627:
+       if (base == NULL) { 
+               release_mem_region(phys_addr, nr_entries *

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#907: FILE: drivers/pci/msi.c:627:
+       if (base == NULL) { 

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: drivers/pci/msi.c:628:
+               release_mem_region(phys_addr, nr_entries *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/pci/msi.c:628:
+               release_mem_region(phys_addr, nr_entries *$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: drivers/pci/msi.c:629:
+               return -ENOMEM; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: drivers/pci/msi.c:629:
+               return -ENOMEM; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/pci/msi.c:629:
+               return -ENOMEM; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: drivers/pci/msi.c:630:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: drivers/pci/msi.c:630:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: drivers/pci/msi.c:631:
+       /* MSI-X Table Initialization */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: drivers/pci/msi.c:632:
+       for (i = 0; i < nvec; i++) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/pci/msi.c:632:
+       for (i = 0; i < nvec; i++) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#913: FILE: drivers/pci/msi.c:632:
+       for (i = 0; i < nvec; i++) { 
+               entry = alloc_msi_entry(); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: drivers/pci/msi.c:633:
+               entry = alloc_msi_entry(); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: drivers/pci/msi.c:633:
+               entry = alloc_msi_entry(); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: drivers/pci/msi.c:633:
+               entry = alloc_msi_entry(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: drivers/pci/msi.c:634:
+               if (!entry) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: drivers/pci/msi.c:634:
+               if (!entry) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: drivers/pci/msi.c:634:
+               if (!entry) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#915: FILE: drivers/pci/msi.c:634:
+               if (!entry) 
+                       break;  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#916: FILE: drivers/pci/msi.c:635:
+                       break;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: drivers/pci/msi.c:635:
+                       break;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: drivers/pci/msi.c:635:
+                       break;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#917: FILE: drivers/pci/msi.c:636:
+               if ((vector = get_msi_vector(dev)) < 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/pci/msi.c:636:
+               if ((vector = get_msi_vector(dev)) < 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: drivers/pci/msi.c:636:
+               if ((vector = get_msi_vector(dev)) < 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#917: FILE: drivers/pci/msi.c:636:
+               if ((vector = get_msi_vector(dev)) < 0) 
+                       break;  

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#917: FILE: drivers/pci/msi.c:636:
+               if ((vector = get_msi_vector(dev)) < 0) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#918: FILE: drivers/pci/msi.c:637:
+                       break;  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: drivers/pci/msi.c:637:
+                       break;  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/pci/msi.c:637:
+                       break;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: drivers/pci/msi.c:638:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: drivers/pci/msi.c:638:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: drivers/pci/msi.c:639:
+               j = (entries + i)->entry; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/pci/msi.c:639:
+               j = (entries + i)->entry; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/pci/msi.c:639:
+               j = (entries + i)->entry; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: drivers/pci/msi.c:640:
+               (entries + i)->vector = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/pci/msi.c:640:
+               (entries + i)->vector = vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: drivers/pci/msi.c:640:
+               (entries + i)->vector = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#922: FILE: drivers/pci/msi.c:641:
+               entry->msi_attrib.type = PCI_CAP_ID_MSIX; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: drivers/pci/msi.c:641:
+               entry->msi_attrib.type = PCI_CAP_ID_MSIX; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/pci/msi.c:641:
+               entry->msi_attrib.type = PCI_CAP_ID_MSIX; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#923: FILE: drivers/pci/msi.c:642:
+               entry->msi_attrib.state = 1;            /* Mark it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: drivers/pci/msi.c:642:
+               entry->msi_attrib.state = 1;            /* Mark it$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: drivers/pci/msi.c:643:
+               entry->msi_attrib.entry_nr = j; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: drivers/pci/msi.c:643:
+               entry->msi_attrib.entry_nr = j; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#925: FILE: drivers/pci/msi.c:643:
+               entry->msi_attrib.state = 1;            /* Mark it
+               entry->msi_attrib.entry_nr = j; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#926: FILE: drivers/pci/msi.c:644:
+               entry->msi_attrib.maskbit = 1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: drivers/pci/msi.c:644:
+               entry->msi_attrib.maskbit = 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#927: FILE: drivers/pci/msi.c:645:
+               entry->msi_attrib.default_vector = dev->irq; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: drivers/pci/msi.c:645:
+               entry->msi_attrib.default_vector = dev->irq; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#928: FILE: drivers/pci/msi.c:646:
+               entry->dev = dev; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#928: FILE: drivers/pci/msi.c:646:
+               entry->dev = dev; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#929: FILE: drivers/pci/msi.c:647:
+               entry->mask_base = (unsigned long)base; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#929: FILE: drivers/pci/msi.c:647:
+               entry->mask_base = (unsigned long)base; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: drivers/pci/msi.c:648:
+               if (!head) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: drivers/pci/msi.c:648:
+               if (!head) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#931: FILE: drivers/pci/msi.c:649:
+                       entry->link.head = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#931: FILE: drivers/pci/msi.c:649:
+                       entry->link.head = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/pci/msi.c:650:
+                       entry->link.tail = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#932: FILE: drivers/pci/msi.c:650:
+                       entry->link.tail = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#933: FILE: drivers/pci/msi.c:651:
+                       head = entry; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: drivers/pci/msi.c:651:
+                       head = entry; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: drivers/pci/msi.c:652:
+               } else { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: drivers/pci/msi.c:652:
+               } else { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#935: FILE: drivers/pci/msi.c:653:
+                       entry->link.head = temp; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: drivers/pci/msi.c:653:
+                       entry->link.head = temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: drivers/pci/msi.c:654:
+                       entry->link.tail = tail->link.tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: drivers/pci/msi.c:654:
+                       entry->link.tail = tail->link.tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: drivers/pci/msi.c:655:
+                       tail->link.tail = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: drivers/pci/msi.c:655:
+                       tail->link.tail = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: drivers/pci/msi.c:656:
+                       head->link.head = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: drivers/pci/msi.c:656:
+                       head->link.head = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: drivers/pci/msi.c:657:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: drivers/pci/msi.c:657:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: drivers/pci/msi.c:658:
+               temp = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: drivers/pci/msi.c:658:
+               temp = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#941: FILE: drivers/pci/msi.c:659:
+               tail = entry; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: drivers/pci/msi.c:659:
+               tail = entry; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#942: FILE: drivers/pci/msi.c:660:
+               /* Replace with MSI-X handler */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: drivers/pci/msi.c:660:
+               /* Replace with MSI-X handler */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: drivers/pci/msi.c:661:
+               irq_handler_init(PCI_CAP_ID_MSIX, vector, 1); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: drivers/pci/msi.c:661:
+               irq_handler_init(PCI_CAP_ID_MSIX, vector, 1); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/pci/msi.c:661:
+               irq_handler_init(PCI_CAP_ID_MSIX, vector, 1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#944: FILE: drivers/pci/msi.c:662:
+               /* Configure MSI-X capability structure */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: drivers/pci/msi.c:662:
+               /* Configure MSI-X capability structure */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#945: FILE: drivers/pci/msi.c:663:
+               msi_address_init(&address); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: drivers/pci/msi.c:663:
+               msi_address_init(&address); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/pci/msi.c:663:
+               msi_address_init(&address); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: drivers/pci/msi.c:664:
+               msi_data_init(&data, vector); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: drivers/pci/msi.c:664:
+               msi_data_init(&data, vector); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/pci/msi.c:664:
+               msi_data_init(&data, vector); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: drivers/pci/msi.c:665:
+               entry->msi_attrib.current_cpu = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: drivers/pci/msi.c:665:
+               entry->msi_attrib.current_cpu = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: drivers/pci/msi.c:665:
+               entry->msi_attrib.current_cpu = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#948: FILE: drivers/pci/msi.c:666:
+                       ((address.lo_address.u.dest_id >> $

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: drivers/pci/msi.c:666:
+                       ((address.lo_address.u.dest_id >> $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/pci/msi.c:666:
+                       ((address.lo_address.u.dest_id >> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: drivers/pci/msi.c:667:
+                       MSI_TARGET_CPU_SHIFT) & MSI_TARGET_CPU_MASK); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: drivers/pci/msi.c:667:
+                       MSI_TARGET_CPU_SHIFT) & MSI_TARGET_CPU_MASK); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/pci/msi.c:667:
+                       MSI_TARGET_CPU_SHIFT) & MSI_TARGET_CPU_MASK); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: drivers/pci/msi.c:668:
+               writel(address.lo_address.value, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: drivers/pci/msi.c:668:
+               writel(address.lo_address.value, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/pci/msi.c:668:
+               writel(address.lo_address.value, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#951: FILE: drivers/pci/msi.c:669:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: drivers/pci/msi.c:669:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#951: FILE: drivers/pci/msi.c:669:
+               writel(address.lo_address.value, 
+                       base + j * PCI_MSIX_ENTRY_SIZE + 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: drivers/pci/msi.c:669:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#954: FILE: drivers/pci/msi.c:671:
+               writel(address.hi_address, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: drivers/pci/msi.c:671:
+               writel(address.hi_address, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/pci/msi.c:671:
+               writel(address.hi_address, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#955: FILE: drivers/pci/msi.c:672:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: drivers/pci/msi.c:672:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/pci/msi.c:672:
+               writel(address.hi_address, 
+                       base + j * PCI_MSIX_ENTRY_SIZE + 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/pci/msi.c:672:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: drivers/pci/msi.c:674:
+               writel(*(u32*)&data, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: drivers/pci/msi.c:674:
+               writel(*(u32*)&data, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: drivers/pci/msi.c:674:
+               writel(*(u32*)&data, $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#958: FILE: drivers/pci/msi.c:674:
+               writel(*(u32*)&data, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#959: FILE: drivers/pci/msi.c:675:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: drivers/pci/msi.c:675:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: drivers/pci/msi.c:675:
+               writel(*(u32*)&data, 
+                       base + j * PCI_MSIX_ENTRY_SIZE + 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/pci/msi.c:675:
+                       base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: drivers/pci/msi.c:677:
+               attach_msi_entry(entry, vector); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: drivers/pci/msi.c:677:
+               attach_msi_entry(entry, vector); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: drivers/pci/msi.c:677:
+               attach_msi_entry(entry, vector); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/pci/msi.c:679:
+       if (i != nvec) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: drivers/pci/msi.c:679:
+       if (i != nvec) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#965: FILE: drivers/pci/msi.c:679:
+       if (i != nvec) { 
+               i--; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: drivers/pci/msi.c:680:
+               i--; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: drivers/pci/msi.c:680:
+               i--; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: drivers/pci/msi.c:680:
+               i--; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: drivers/pci/msi.c:681:
+               for (; i >= 0; i--) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: drivers/pci/msi.c:681:
+               for (; i >= 0; i--) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: drivers/pci/msi.c:681:
+               for (; i >= 0; i--) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#967: FILE: drivers/pci/msi.c:681:
+               for (; i >= 0; i--) { 
+                       vector = (entries + i)->vector; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#968: FILE: drivers/pci/msi.c:682:
+                       vector = (entries + i)->vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: drivers/pci/msi.c:682:
+                       vector = (entries + i)->vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: drivers/pci/msi.c:682:
+                       vector = (entries + i)->vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#969: FILE: drivers/pci/msi.c:683:
+                       msi_free_vector(dev, vector, 0); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: drivers/pci/msi.c:683:
+                       msi_free_vector(dev, vector, 0); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: drivers/pci/msi.c:683:
+                       msi_free_vector(dev, vector, 0); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: drivers/pci/msi.c:684:
+                       (entries + i)->vector = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: drivers/pci/msi.c:684:
+                       (entries + i)->vector = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: drivers/pci/msi.c:684:
+                       (entries + i)->vector = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#971: FILE: drivers/pci/msi.c:685:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: drivers/pci/msi.c:685:
+               } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: drivers/pci/msi.c:685:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#972: FILE: drivers/pci/msi.c:686:
+               return -EBUSY; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: drivers/pci/msi.c:686:
+               return -EBUSY; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: drivers/pci/msi.c:686:
+               return -EBUSY; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: drivers/pci/msi.c:687:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: drivers/pci/msi.c:687:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: drivers/pci/msi.c:688:
+       /* Set MSI-X enabled bits */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#977: FILE: drivers/pci/msi.c:690:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: drivers/pci/msi.c:690:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: drivers/pci/msi.c:695:
+ * pci_enable_msi - configure device's MSI capability structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#996: FILE: drivers/pci/msi.c:696:
+ * @dev: pointer to the pci_dev data structure of MSI device function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: drivers/pci/msi.c:698:
+ * Setup the MSI capability structure of device function with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: drivers/pci/msi.c:699:
+ * a single MSI vector upon its software driver call to request for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1005: FILE: drivers/pci/msi.c:700:
+ * MSI mode enabled on its hardware device function. A return of zero $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1006: FILE: drivers/pci/msi.c:701:
+ * indicates the successful setup of an entry zero with the new MSI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1012: FILE: drivers/pci/msi.c:706:
+       int pos, temp = dev->irq, status = -EINVAL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: drivers/pci/msi.c:706:
+       int pos, temp = dev->irq, status = -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1013: FILE: drivers/pci/msi.c:707:
+       u32 control; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: drivers/pci/msi.c:707:
+       u32 control; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1020: FILE: drivers/pci/msi.c:712:
+       if ((status = msi_init()) < 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: drivers/pci/msi.c:712:
+       if ((status = msi_init()) < 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1020: FILE: drivers/pci/msi.c:712:
+       if ((status = msi_init()) < 0) 
+               return status; 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1020: FILE: drivers/pci/msi.c:712:
+       if ((status = msi_init()) < 0) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1021: FILE: drivers/pci/msi.c:713:
+               return status; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1021: FILE: drivers/pci/msi.c:713:
+               return status; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: drivers/pci/msi.c:713:
+               return status; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1027: FILE: drivers/pci/msi.c:715:
+       if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI))) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: drivers/pci/msi.c:715:
+       if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI))) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1027: FILE: drivers/pci/msi.c:715:
+       if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI))) 
+               return -EINVAL; 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1027: FILE: drivers/pci/msi.c:715:
+       if (!(pos = pci_find_capability(dev, PCI_CAP_ID_MSI))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: drivers/pci/msi.c:716:
+               return -EINVAL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1028: FILE: drivers/pci/msi.c:716:
+               return -EINVAL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: drivers/pci/msi.c:716:
+               return -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: drivers/pci/msi.c:717:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: drivers/pci/msi.c:717:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: drivers/pci/msi.c:718:
+       dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: drivers/pci/msi.c:718:
+       dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: drivers/pci/msi.c:719:
+               2, &control); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1031: FILE: drivers/pci/msi.c:719:
+               2, &control); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: drivers/pci/msi.c:719:
+               2, &control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1032: FILE: drivers/pci/msi.c:720:
+       if (control & PCI_MSI_FLAGS_ENABLE) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: drivers/pci/msi.c:720:
+       if (control & PCI_MSI_FLAGS_ENABLE) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1032: FILE: drivers/pci/msi.c:720:
+       if (control & PCI_MSI_FLAGS_ENABLE) 
+               return 0;                       /* Already in MSI mode

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: drivers/pci/msi.c:721:
+               return 0;                       /* Already in MSI mode$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: drivers/pci/msi.c:721:
+               return 0;                       /* Already in MSI mode$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: drivers/pci/msi.c:722:
+ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1035: FILE: drivers/pci/msi.c:722:
+               return 0;                       /* Already in MSI mode
+ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: drivers/pci/msi.c:723:
+       if (!msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1037: FILE: drivers/pci/msi.c:724:
+               /* Lookup Sucess */ 
                          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: drivers/pci/msi.c:724:
+               /* Lookup Sucess */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: drivers/pci/msi.c:724:
+               /* Lookup Sucess */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1038: FILE: drivers/pci/msi.c:725:
+               unsigned long flags; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: drivers/pci/msi.c:725:
+               unsigned long flags; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: drivers/pci/msi.c:725:
+               unsigned long flags; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1039: FILE: drivers/pci/msi.c:726:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: drivers/pci/msi.c:726:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: drivers/pci/msi.c:727:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1040: FILE: drivers/pci/msi.c:727:
+               spin_lock_irqsave(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: drivers/pci/msi.c:727:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: drivers/pci/msi.c:728:
+               if (!vector_irq[dev->irq]) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: drivers/pci/msi.c:728:
+               if (!vector_irq[dev->irq]) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1041: FILE: drivers/pci/msi.c:728:
+               if (!vector_irq[dev->irq]) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1041: FILE: drivers/pci/msi.c:728:
+               if (!vector_irq[dev->irq]) { 
+                       msi_desc[dev->irq]->msi_attrib.state = 1;       

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: drivers/pci/msi.c:729:
+                       msi_desc[dev->irq]->msi_attrib.state = 1;       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: drivers/pci/msi.c:729:
+                       msi_desc[dev->irq]->msi_attrib.state = 1;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: drivers/pci/msi.c:729:
+                       msi_desc[dev->irq]->msi_attrib.state = 1;       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: drivers/pci/msi.c:730:
+                       vector_irq[dev->irq] = -1;                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1043: FILE: drivers/pci/msi.c:730:
+                       vector_irq[dev->irq] = -1;                      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: drivers/pci/msi.c:730:
+                       vector_irq[dev->irq] = -1;                      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1044: FILE: drivers/pci/msi.c:731:
+                       nr_released_vectors--; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: drivers/pci/msi.c:731:
+                       nr_released_vectors--; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: drivers/pci/msi.c:731:
+                       nr_released_vectors--; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1045: FILE: drivers/pci/msi.c:732:
+                       spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1045: FILE: drivers/pci/msi.c:732:
+                       spin_unlock_irqrestore(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1045: FILE: drivers/pci/msi.c:732:
+                       spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: drivers/pci/msi.c:733:
+                       enable_msi_mode(dev, pos, PCI_CAP_ID_MSI); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1046: FILE: drivers/pci/msi.c:733:
+                       enable_msi_mode(dev, pos, PCI_CAP_ID_MSI); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: drivers/pci/msi.c:733:
+                       enable_msi_mode(dev, pos, PCI_CAP_ID_MSI); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1047: FILE: drivers/pci/msi.c:734:
+                       return 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: drivers/pci/msi.c:734:
+                       return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: drivers/pci/msi.c:734:
+                       return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1048: FILE: drivers/pci/msi.c:735:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1048: FILE: drivers/pci/msi.c:735:
+               } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: drivers/pci/msi.c:735:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: drivers/pci/msi.c:736:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1049: FILE: drivers/pci/msi.c:736:
+               spin_unlock_irqrestore(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: drivers/pci/msi.c:736:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: drivers/pci/msi.c:737:
+               dev->irq = temp; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1050: FILE: drivers/pci/msi.c:737:
+               dev->irq = temp; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1050: FILE: drivers/pci/msi.c:737:
+               dev->irq = temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: drivers/pci/msi.c:738:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: drivers/pci/msi.c:738:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1052: FILE: drivers/pci/msi.c:739:
+       /* Check whether driver already requested for MSI-X vectors */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: drivers/pci/msi.c:740:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: drivers/pci/msi.c:740:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 23)
#1053: FILE: drivers/pci/msi.c:740:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 
[...]
+                       printk(KERN_INFO "Can't enable MSI. Device

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1053: FILE: drivers/pci/msi.c:740:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1054: FILE: drivers/pci/msi.c:741:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1054: FILE: drivers/pci/msi.c:741:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: drivers/pci/msi.c:741:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && 
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: drivers/pci/msi.c:741:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: drivers/pci/msi.c:742:
+                       printk(KERN_INFO "Can't enable MSI. Device$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: drivers/pci/msi.c:742:
+                       printk(KERN_INFO "Can't enable MSI. Device$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1055: FILE: drivers/pci/msi.c:742:
+                       printk(KERN_INFO "Can't enable MSI. Device

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1057: FILE: drivers/pci/msi.c:743:
+                       dev->irq = temp; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: drivers/pci/msi.c:743:
+                       dev->irq = temp; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: drivers/pci/msi.c:743:
+                       dev->irq = temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1058: FILE: drivers/pci/msi.c:744:
+                       return -EINVAL; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: drivers/pci/msi.c:744:
+                       return -EINVAL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: drivers/pci/msi.c:744:
+                       return -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: drivers/pci/msi.c:745:
+       }               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: drivers/pci/msi.c:745:
+       }               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/pci/msi.c:746:
+       status = msi_capability_init(dev); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: drivers/pci/msi.c:746:
+       status = msi_capability_init(dev); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1061: FILE: drivers/pci/msi.c:747:
+       if (!status) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: drivers/pci/msi.c:747:
+       if (!status) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1062: FILE: drivers/pci/msi.c:748:
+               if (!pos) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: drivers/pci/msi.c:748:
+               if (!pos) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: drivers/pci/msi.c:748:
+               if (!pos) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1063: FILE: drivers/pci/msi.c:749:
+                       nr_reserved_vectors--;  /* Only MSI capable */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1063: FILE: drivers/pci/msi.c:749:
+                       nr_reserved_vectors--;  /* Only MSI capable */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: drivers/pci/msi.c:749:
+                       nr_reserved_vectors--;  /* Only MSI capable */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: drivers/pci/msi.c:750:
+               else if (nr_msix_devices > 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1064: FILE: drivers/pci/msi.c:750:
+               else if (nr_msix_devices > 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: drivers/pci/msi.c:750:
+               else if (nr_msix_devices > 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: drivers/pci/msi.c:751:
+                       nr_msix_devices--;      /* Both MSI and MSI-X$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: drivers/pci/msi.c:751:
+                       nr_msix_devices--;      /* Both MSI and MSI-X$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: drivers/pci/msi.c:752:
+                                                  but choose enabling$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: drivers/pci/msi.c:752:
+                                                  but choose enabling$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: drivers/pci/msi.c:753:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: drivers/pci/msi.c:753:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: drivers/pci/msi.c:760:
+       int type, default_vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: drivers/pci/msi.c:760:
+       int type, default_vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: drivers/pci/msi.c:771:
+       entry->msi_attrib.state = 0;            /* Mark it not active */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1105: FILE: drivers/pci/msi.c:775:
+       switch (type) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: drivers/pci/msi.c:775:
+       switch (type) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: drivers/pci/msi.c:776:
+       case PCI_CAP_ID_MSI: $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: drivers/pci/msi.c:776:
+       case PCI_CAP_ID_MSI: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1107: FILE: drivers/pci/msi.c:777:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: drivers/pci/msi.c:777:
+               spin_lock_irqsave(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: drivers/pci/msi.c:777:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: drivers/pci/msi.c:778:
+               vector_irq[vector] = 0;         /* Mark it free */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1108: FILE: drivers/pci/msi.c:778:
+               vector_irq[vector] = 0;         /* Mark it free */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1108: FILE: drivers/pci/msi.c:778:
+               vector_irq[vector] = 0;         /* Mark it free */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1109: FILE: drivers/pci/msi.c:779:
+               nr_released_vectors++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1109: FILE: drivers/pci/msi.c:779:
+               nr_released_vectors++; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: drivers/pci/msi.c:779:
+               nr_released_vectors++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: drivers/pci/msi.c:780:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1110: FILE: drivers/pci/msi.c:780:
+               spin_unlock_irqrestore(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: drivers/pci/msi.c:780:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: drivers/pci/msi.c:781:
+               break; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1111: FILE: drivers/pci/msi.c:781:
+               break; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: drivers/pci/msi.c:781:
+               break; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: drivers/pci/msi.c:782:
+       case PCI_CAP_ID_MSIX: $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: drivers/pci/msi.c:782:
+       case PCI_CAP_ID_MSIX: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: drivers/pci/msi.c:783:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: drivers/pci/msi.c:783:
+               spin_lock_irqsave(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: drivers/pci/msi.c:783:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: drivers/pci/msi.c:784:
+               while (vector != entry->link.tail) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1114: FILE: drivers/pci/msi.c:784:
+               while (vector != entry->link.tail) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1114: FILE: drivers/pci/msi.c:784:
+               while (vector != entry->link.tail) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1114: FILE: drivers/pci/msi.c:784:
+               while (vector != entry->link.tail) { 
+                       entry = msi_desc[entry->link.tail]; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: drivers/pci/msi.c:785:
+                       entry = msi_desc[entry->link.tail]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: drivers/pci/msi.c:785:
+                       entry = msi_desc[entry->link.tail]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: drivers/pci/msi.c:785:
+                       entry = msi_desc[entry->link.tail]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1116: FILE: drivers/pci/msi.c:786:
+                       if (!entry->msi_attrib.state) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1116: FILE: drivers/pci/msi.c:786:
+                       if (!entry->msi_attrib.state) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: drivers/pci/msi.c:786:
+                       if (!entry->msi_attrib.state) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1116: FILE: drivers/pci/msi.c:786:
+                       if (!entry->msi_attrib.state) 
+                               continue; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1117: FILE: drivers/pci/msi.c:787:
+                               continue; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: drivers/pci/msi.c:787:
+                               continue; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1117: FILE: drivers/pci/msi.c:787:
+                               continue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: drivers/pci/msi.c:789:
+                       /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: drivers/pci/msi.c:789:
+                       /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1124: FILE: drivers/pci/msi.c:790:
+                        * Device still operates in MSI-X mode. Do not $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1124: FILE: drivers/pci/msi.c:790:
+                        * Device still operates in MSI-X mode. Do not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: drivers/pci/msi.c:791:
+                        * switch interrupt mode $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1125: FILE: drivers/pci/msi.c:791:
+                        * switch interrupt mode $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/pci/msi.c:792:
+                        */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: drivers/pci/msi.c:792:
+                        */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1127: FILE: drivers/pci/msi.c:793:
+                       return; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: drivers/pci/msi.c:793:
+                       return; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: drivers/pci/msi.c:793:
+                       return; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: drivers/pci/msi.c:795:
+               entry = msi_desc[vector]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1129: FILE: drivers/pci/msi.c:795:
+               entry = msi_desc[vector]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: drivers/pci/msi.c:795:
+               entry = msi_desc[vector]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1130: FILE: drivers/pci/msi.c:796:
+               vector_irq[vector] = 0;                   /* Mark it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: drivers/pci/msi.c:796:
+               vector_irq[vector] = 0;                   /* Mark it$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: drivers/pci/msi.c:797:
+               nr_released_vectors++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: drivers/pci/msi.c:797:
+               nr_released_vectors++; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1132: FILE: drivers/pci/msi.c:797:
+               vector_irq[vector] = 0;                   /* Mark it
+               nr_released_vectors++; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1133: FILE: drivers/pci/msi.c:798:
+               while (vector != entry->link.tail) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: drivers/pci/msi.c:798:
+               while (vector != entry->link.tail) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1134: FILE: drivers/pci/msi.c:799:
+                       vector_irq[entry->link.tail] = 0; /* Mark it$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1136: FILE: drivers/pci/msi.c:800:
+                       nr_released_vectors++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1136: FILE: drivers/pci/msi.c:800:
+                       nr_released_vectors++; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1136: FILE: drivers/pci/msi.c:800:
+                       vector_irq[entry->link.tail] = 0; /* Mark it
+                       nr_released_vectors++; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1137: FILE: drivers/pci/msi.c:801:
+                       entry = msi_desc[entry->link.tail]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: drivers/pci/msi.c:801:
+                       entry = msi_desc[entry->link.tail]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: drivers/pci/msi.c:802:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: drivers/pci/msi.c:802:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1139: FILE: drivers/pci/msi.c:803:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1139: FILE: drivers/pci/msi.c:803:
+               spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1140: FILE: drivers/pci/msi.c:804:
+               break; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1140: FILE: drivers/pci/msi.c:804:
+               break; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: drivers/pci/msi.c:805:
+       default: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: drivers/pci/msi.c:806:
+               return; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1142: FILE: drivers/pci/msi.c:806:
+               return; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1144: FILE: drivers/pci/msi.c:808:
+       /* Restore dev->irq to its default pin-assertion vector */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1145: FILE: drivers/pci/msi.c:809:
+       dev->irq = default_vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: drivers/pci/msi.c:809:
+       dev->irq = default_vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: drivers/pci/msi.c:810:
+       disable_msi_mode(dev, pci_find_capability(dev, type), type); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1146: FILE: drivers/pci/msi.c:810:
+       disable_msi_mode(dev, pci_find_capability(dev, type), type); $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1150: FILE: drivers/pci/msi.c:813:
+static int msi_free_vector(struct pci_dev* dev, int vector, int

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1158: FILE: drivers/pci/msi.c:816:
+       int head, entry_nr, type; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1158: FILE: drivers/pci/msi.c:816:
+       int head, entry_nr, type; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: drivers/pci/msi.c:821:
+       entry = msi_desc[vector]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: drivers/pci/msi.c:821:
+       entry = msi_desc[vector]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1166: FILE: drivers/pci/msi.c:822:
+       if (!entry || entry->dev != dev) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1166: FILE: drivers/pci/msi.c:822:
+       if (!entry || entry->dev != dev) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1166: FILE: drivers/pci/msi.c:822:
+       if (!entry || entry->dev != dev) { 
                spin_unlock_irqrestore(&msi_lock, flags); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: drivers/pci/msi.c:826:
+       type = entry->msi_attrib.type; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: drivers/pci/msi.c:826:
+       type = entry->msi_attrib.type; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1171: FILE: drivers/pci/msi.c:827:
+       entry_nr = entry->msi_attrib.entry_nr; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1171: FILE: drivers/pci/msi.c:827:
+       entry_nr = entry->msi_attrib.entry_nr; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/pci/msi.c:828:
+       head = entry->link.head; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1172: FILE: drivers/pci/msi.c:828:
+       head = entry->link.head; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: drivers/pci/msi.c:830:
+       msi_desc[entry->link.head]->link.tail = entry->link.tail; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: drivers/pci/msi.c:830:
+       msi_desc[entry->link.head]->link.tail = entry->link.tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1185: FILE: drivers/pci/msi.c:831:
+       msi_desc[entry->link.tail]->link.head = entry->link.head; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: drivers/pci/msi.c:831:
+       msi_desc[entry->link.tail]->link.head = entry->link.head; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1186: FILE: drivers/pci/msi.c:832:
+       entry->dev = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: drivers/pci/msi.c:832:
+       entry->dev = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1187: FILE: drivers/pci/msi.c:833:
+       if (!reassign) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: drivers/pci/msi.c:833:
+       if (!reassign) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1187: FILE: drivers/pci/msi.c:833:
+       if (!reassign) { 
+               vector_irq[vector] = 0; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1188: FILE: drivers/pci/msi.c:834:
+               vector_irq[vector] = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: drivers/pci/msi.c:834:
+               vector_irq[vector] = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: drivers/pci/msi.c:834:
+               vector_irq[vector] = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1189: FILE: drivers/pci/msi.c:835:
+               nr_released_vectors++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: drivers/pci/msi.c:835:
+               nr_released_vectors++; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: drivers/pci/msi.c:835:
+               nr_released_vectors++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1193: FILE: drivers/pci/msi.c:837:
+       msi_desc[vector] = NULL; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1193: FILE: drivers/pci/msi.c:837:
+       msi_desc[vector] = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: drivers/pci/msi.c:838:
+       spin_unlock_irqrestore(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: drivers/pci/msi.c:838:
+       spin_unlock_irqrestore(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1199: FILE: drivers/pci/msi.c:840:
+       kmem_cache_free(msi_cachep, entry); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1199: FILE: drivers/pci/msi.c:840:
+       kmem_cache_free(msi_cachep, entry); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: drivers/pci/msi.c:842:
+       if (type == PCI_CAP_ID_MSIX) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: drivers/pci/msi.c:842:
+       if (type == PCI_CAP_ID_MSIX) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1204: FILE: drivers/pci/msi.c:842:
+       if (type == PCI_CAP_ID_MSIX) { 
+               if (!reassign) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: drivers/pci/msi.c:843:
+               if (!reassign) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1205: FILE: drivers/pci/msi.c:843:
+               if (!reassign) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: drivers/pci/msi.c:843:
+               if (!reassign) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1205: FILE: drivers/pci/msi.c:843:
+               if (!reassign) 
+                       writel(1, base + 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: drivers/pci/msi.c:844:
+                       writel(1, base + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1206: FILE: drivers/pci/msi.c:844:
+                       writel(1, base + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: drivers/pci/msi.c:844:
+                       writel(1, base + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: drivers/pci/msi.c:845:
+                               entry_nr * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1207: FILE: drivers/pci/msi.c:845:
+                               entry_nr * PCI_MSIX_ENTRY_SIZE + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: drivers/pci/msi.c:845:
+                               entry_nr * PCI_MSIX_ENTRY_SIZE + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1208: FILE: drivers/pci/msi.c:846:
+                               PCI_MSIX_ENTRY_VECTOR_CTRL_OFFSET); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1208: FILE: drivers/pci/msi.c:846:
+                               PCI_MSIX_ENTRY_VECTOR_CTRL_OFFSET); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1208: FILE: drivers/pci/msi.c:846:
+                               PCI_MSIX_ENTRY_VECTOR_CTRL_OFFSET); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1209: FILE: drivers/pci/msi.c:847:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1209: FILE: drivers/pci/msi.c:847:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: drivers/pci/msi.c:847:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: drivers/pci/msi.c:848:
+               if (head == vector) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1210: FILE: drivers/pci/msi.c:848:
+               if (head == vector) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: drivers/pci/msi.c:848:
+               if (head == vector) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1210: FILE: drivers/pci/msi.c:848:
+               if (head == vector) { 
[...]
+                       int pos, nr_entries; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1211: FILE: drivers/pci/msi.c:849:
+                       /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1211: FILE: drivers/pci/msi.c:849:
+                       /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: drivers/pci/msi.c:850:
+                        * Detect last MSI-X vector to be released. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1212: FILE: drivers/pci/msi.c:850:
+                        * Detect last MSI-X vector to be released. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: drivers/pci/msi.c:851:
+                        * Release the MSI-X memory-mapped table. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1213: FILE: drivers/pci/msi.c:851:
+                        * Release the MSI-X memory-mapped table. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1214: FILE: drivers/pci/msi.c:852:
+                        */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1214: FILE: drivers/pci/msi.c:852:
+                        */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/pci/msi.c:853:
+                       int pos, nr_entries; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1215: FILE: drivers/pci/msi.c:853:
+                       int pos, nr_entries; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: drivers/pci/msi.c:853:
+                       int pos, nr_entries; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1216: FILE: drivers/pci/msi.c:854:
+                       u32 phys_addr, table_offset; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1216: FILE: drivers/pci/msi.c:854:
+                       u32 phys_addr, table_offset; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: drivers/pci/msi.c:854:
+                       u32 phys_addr, table_offset; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1217: FILE: drivers/pci/msi.c:855:
+                       u32 control; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1217: FILE: drivers/pci/msi.c:855:
+                       u32 control; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: drivers/pci/msi.c:855:
+                       u32 control; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1218: FILE: drivers/pci/msi.c:856:
+                       u8 bir; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1218: FILE: drivers/pci/msi.c:856:
+                       u8 bir; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: drivers/pci/msi.c:856:
+                       u8 bir; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: drivers/pci/msi.c:857:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: drivers/pci/msi.c:857:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1220: FILE: drivers/pci/msi.c:858:
+                       pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: drivers/pci/msi.c:858:
+                       pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: drivers/pci/msi.c:860:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1222: FILE: drivers/pci/msi.c:860:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: drivers/pci/msi.c:860:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1223: FILE: drivers/pci/msi.c:861:
+                               msi_control_reg(pos), 2, &control); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1223: FILE: drivers/pci/msi.c:861:
+                               msi_control_reg(pos), 2, &control); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: drivers/pci/msi.c:861:
+                               msi_control_reg(pos), 2, &control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1224: FILE: drivers/pci/msi.c:862:
+                       nr_entries = multi_msix_capable(control); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1224: FILE: drivers/pci/msi.c:862:
+                       nr_entries = multi_msix_capable(control); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1224: FILE: drivers/pci/msi.c:862:
+                       nr_entries = multi_msix_capable(control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1225: FILE: drivers/pci/msi.c:863:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1225: FILE: drivers/pci/msi.c:863:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1225: FILE: drivers/pci/msi.c:863:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1226: FILE: drivers/pci/msi.c:864:
+                               msix_table_offset_reg(pos), 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1226: FILE: drivers/pci/msi.c:864:
+                               msix_table_offset_reg(pos), 4,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1228: FILE: drivers/pci/msi.c:865:
+                       bir = (u8)(table_offset &$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1228: FILE: drivers/pci/msi.c:865:
+                       bir = (u8)(table_offset &$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1230: FILE: drivers/pci/msi.c:866:
+                       phys_addr = pci_resource_start (dev, bir); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1230: FILE: drivers/pci/msi.c:866:
+                       phys_addr = pci_resource_start (dev, bir); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1230: FILE: drivers/pci/msi.c:866:
+                       phys_addr = pci_resource_start (dev, bir); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1230: FILE: drivers/pci/msi.c:866:
+                       phys_addr = pci_resource_start (dev, bir); 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: drivers/pci/msi.c:867:
+                       phys_addr += (u32)(table_offset & $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1231: FILE: drivers/pci/msi.c:867:
+                       phys_addr += (u32)(table_offset & $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1231: FILE: drivers/pci/msi.c:867:
+                       phys_addr += (u32)(table_offset & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: drivers/pci/msi.c:868:
+                               ~PCI_MSIX_FLAGS_BIRMASK); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1232: FILE: drivers/pci/msi.c:868:
+                               ~PCI_MSIX_FLAGS_BIRMASK); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1232: FILE: drivers/pci/msi.c:868:
+                               ~PCI_MSIX_FLAGS_BIRMASK); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1233: FILE: drivers/pci/msi.c:869:
+                       iounmap((void*)base); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1233: FILE: drivers/pci/msi.c:869:
+                       iounmap((void*)base); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1233: FILE: drivers/pci/msi.c:869:
+                       iounmap((void*)base); $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1233: FILE: drivers/pci/msi.c:869:
+                       iounmap((void*)base); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1234: FILE: drivers/pci/msi.c:870:
+                       release_mem_region(phys_addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1234: FILE: drivers/pci/msi.c:870:
+                       release_mem_region(phys_addr, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1234: FILE: drivers/pci/msi.c:870:
+                       release_mem_region(phys_addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1235: FILE: drivers/pci/msi.c:871:
+                               nr_entries * PCI_MSIX_ENTRY_SIZE); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1235: FILE: drivers/pci/msi.c:871:
+                               nr_entries * PCI_MSIX_ENTRY_SIZE); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1235: FILE: drivers/pci/msi.c:871:
+                       release_mem_region(phys_addr, 
+                               nr_entries * PCI_MSIX_ENTRY_SIZE); 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1235: FILE: drivers/pci/msi.c:871:
+                               nr_entries * PCI_MSIX_ENTRY_SIZE); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1236: FILE: drivers/pci/msi.c:872:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1236: FILE: drivers/pci/msi.c:872:
+               } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1236: FILE: drivers/pci/msi.c:872:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1263: FILE: drivers/pci/msi.c:875:
+       return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1263: FILE: drivers/pci/msi.c:875:
+       return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: drivers/pci/msi.c:880:
+       int vector = head, tail = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1272: FILE: drivers/pci/msi.c:880:
+       int vector = head, tail = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1273: FILE: drivers/pci/msi.c:881:
+       int i = 0, j = 0, nr_entries = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: drivers/pci/msi.c:881:
+       int i = 0, j = 0, nr_entries = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1277: FILE: drivers/pci/msi.c:884:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: drivers/pci/msi.c:884:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: drivers/pci/msi.c:884:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1281: FILE: drivers/pci/msi.c:886:
+       while (head != tail) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: drivers/pci/msi.c:886:
+       while (head != tail) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1281: FILE: drivers/pci/msi.c:886:
+       while (head != tail) { 
+               nr_entries++; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1282: FILE: drivers/pci/msi.c:887:
+               nr_entries++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1282: FILE: drivers/pci/msi.c:887:
+               nr_entries++; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: drivers/pci/msi.c:887:
+               nr_entries++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1283: FILE: drivers/pci/msi.c:888:
+               tail = msi_desc[vector]->link.tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: drivers/pci/msi.c:888:
+               tail = msi_desc[vector]->link.tail; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: drivers/pci/msi.c:888:
+               tail = msi_desc[vector]->link.tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: drivers/pci/msi.c:889:
+               if (entries->entry ==$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: drivers/pci/msi.c:889:
+               if (entries->entry ==$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1284: FILE: drivers/pci/msi.c:889:
+               if (entries->entry ==
[...]
+                       j = vector; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: drivers/pci/msi.c:890:
+                       j = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: drivers/pci/msi.c:890:
+                       j = vector; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: drivers/pci/msi.c:890:
+                       j = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1287: FILE: drivers/pci/msi.c:891:
+               vector = tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: drivers/pci/msi.c:891:
+               vector = tail; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/pci/msi.c:891:
+               vector = tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1288: FILE: drivers/pci/msi.c:892:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: drivers/pci/msi.c:892:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: drivers/pci/msi.c:893:
+       if (*nvec > nr_entries) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: drivers/pci/msi.c:893:
+       if (*nvec > nr_entries) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1289: FILE: drivers/pci/msi.c:893:
+       if (*nvec > nr_entries) { 
                spin_unlock_irqrestore(&msi_lock, flags); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1291: FILE: drivers/pci/msi.c:895:
+               *nvec = nr_entries; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: drivers/pci/msi.c:895:
+               *nvec = nr_entries; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: drivers/pci/msi.c:895:
+               *nvec = nr_entries; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1303: FILE: drivers/pci/msi.c:898:
+       vector = ((j > 0) ? j : head); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: drivers/pci/msi.c:898:
+       vector = ((j > 0) ? j : head); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: drivers/pci/msi.c:899:
+       for (i = 0; i < *nvec; i++) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: drivers/pci/msi.c:899:
+       for (i = 0; i < *nvec; i++) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1304: FILE: drivers/pci/msi.c:899:
+       for (i = 0; i < *nvec; i++) { 
+               j = msi_desc[vector]->msi_attrib.entry_nr; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1305: FILE: drivers/pci/msi.c:900:
+               j = msi_desc[vector]->msi_attrib.entry_nr; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1305: FILE: drivers/pci/msi.c:900:
+               j = msi_desc[vector]->msi_attrib.entry_nr; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: drivers/pci/msi.c:900:
+               j = msi_desc[vector]->msi_attrib.entry_nr; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1306: FILE: drivers/pci/msi.c:901:
+               msi_desc[vector]->msi_attrib.state = 1; /* Mark it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1306: FILE: drivers/pci/msi.c:901:
+               msi_desc[vector]->msi_attrib.state = 1; /* Mark it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1308: FILE: drivers/pci/msi.c:902:
+               vector_irq[vector] = -1;                /* Mark it busy$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1308: FILE: drivers/pci/msi.c:902:
+               msi_desc[vector]->msi_attrib.state = 1; /* Mark it
+               vector_irq[vector] = -1;                /* Mark it busy

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1310: FILE: drivers/pci/msi.c:903:
+               nr_released_vectors--; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1310: FILE: drivers/pci/msi.c:903:
+               nr_released_vectors--; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1310: FILE: drivers/pci/msi.c:903:
+               vector_irq[vector] = -1;                /* Mark it busy
+               nr_released_vectors--; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1311: FILE: drivers/pci/msi.c:904:
+               (entries + i)->vector = vector; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: drivers/pci/msi.c:904:
+               (entries + i)->vector = vector; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1312: FILE: drivers/pci/msi.c:905:
+               if (j != (entries + i)->entry) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1312: FILE: drivers/pci/msi.c:905:
+               if (j != (entries + i)->entry) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1313: FILE: drivers/pci/msi.c:906:
+                       base = msi_desc[vector]->mask_base; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1313: FILE: drivers/pci/msi.c:906:
+                       base = msi_desc[vector]->mask_base; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1314: FILE: drivers/pci/msi.c:907:
+                       msi_desc[vector]->msi_attrib.entry_nr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: drivers/pci/msi.c:907:
+                       msi_desc[vector]->msi_attrib.entry_nr = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1315: FILE: drivers/pci/msi.c:908:
+                               (entries + i)->entry; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: drivers/pci/msi.c:908:
+                               (entries + i)->entry; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1316: FILE: drivers/pci/msi.c:909:
+                       writel( readl(base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1316: FILE: drivers/pci/msi.c:909:
+                       writel( readl(base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1317: FILE: drivers/pci/msi.c:910:
+                               PCI_MSIX_ENTRY_LOWER_ADDR_OFFSET), base$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1318: FILE: drivers/pci/msi.c:911:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1319: FILE: drivers/pci/msi.c:912:
+                               (entries + i)->entry *$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1321: FILE: drivers/pci/msi.c:913:
+                               PCI_MSIX_ENTRY_LOWER_ADDR_OFFSET); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: drivers/pci/msi.c:913:
+                               PCI_MSIX_ENTRY_LOWER_ADDR_OFFSET); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1322: FILE: drivers/pci/msi.c:914:
+                       writel( readl(base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: drivers/pci/msi.c:914:
+                       writel( readl(base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/pci/msi.c:915:
+                               PCI_MSIX_ENTRY_UPPER_ADDR_OFFSET), base$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1324: FILE: drivers/pci/msi.c:916:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: drivers/pci/msi.c:917:
+                               (entries + i)->entry *$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: drivers/pci/msi.c:918:
+                               PCI_MSIX_ENTRY_UPPER_ADDR_OFFSET); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: drivers/pci/msi.c:918:
+                               PCI_MSIX_ENTRY_UPPER_ADDR_OFFSET); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1328: FILE: drivers/pci/msi.c:919:
+                       writel( (readl(base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1328: FILE: drivers/pci/msi.c:919:
+                       writel( (readl(base + j * PCI_MSIX_ENTRY_SIZE + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1329: FILE: drivers/pci/msi.c:920:
+                               PCI_MSIX_ENTRY_DATA_OFFSET) & 0xff00) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1331: FILE: drivers/pci/msi.c:921:
+                               base +$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1333: FILE: drivers/pci/msi.c:922:
+                               PCI_MSIX_ENTRY_DATA_OFFSET); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1333: FILE: drivers/pci/msi.c:922:
+                               PCI_MSIX_ENTRY_DATA_OFFSET); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: drivers/pci/msi.c:923:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: drivers/pci/msi.c:923:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1335: FILE: drivers/pci/msi.c:924:
+               vector = msi_desc[vector]->link.tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1335: FILE: drivers/pci/msi.c:924:
+               vector = msi_desc[vector]->link.tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1354: FILE: drivers/pci/msi.c:927:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: drivers/pci/msi.c:932:
+ * pci_enable_msix - configure device's MSI-X capability structure $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1364: FILE: drivers/pci/msi.c:935:
+ * @data: pointer to an array of MSI-X entries $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1374: FILE: drivers/pci/msi.c:939:
+ * of requested vectors upon its software driver call to request for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: drivers/pci/msi.c:947:
+ * its request. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1388: FILE: drivers/pci/msi.c:949:
+int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int nvec) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1388: FILE: drivers/pci/msi.c:949:
+int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int nvec) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: drivers/pci/msi.c:951:
+       struct msix_entry *entries = (struct msix_entry *)data; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: drivers/pci/msi.c:951:
+       struct msix_entry *entries = (struct msix_entry *)data; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1394: FILE: drivers/pci/msi.c:952:
+       int status, pos, nr_entries, free_vectors; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: drivers/pci/msi.c:952:
+       int status, pos, nr_entries, free_vectors; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: drivers/pci/msi.c:953:
+       int i, j, temp; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: drivers/pci/msi.c:953:
+       int i, j, temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1400: FILE: drivers/pci/msi.c:957:
+       if (!pci_msi_enable || !dev || !data) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: drivers/pci/msi.c:957:
+       if (!pci_msi_enable || !dev || !data) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1400: FILE: drivers/pci/msi.c:957:
+       if (!pci_msi_enable || !dev || !data) 
                return -EINVAL; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1403: FILE: drivers/pci/msi.c:959:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: drivers/pci/msi.c:959:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1404: FILE: drivers/pci/msi.c:960:
+       if ((status = msi_init()) < 0) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: drivers/pci/msi.c:960:
+       if ((status = msi_init()) < 0) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1404: FILE: drivers/pci/msi.c:960:
+       if ((status = msi_init()) < 0) 
+               return status; 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1404: FILE: drivers/pci/msi.c:960:
+       if ((status = msi_init()) < 0) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1405: FILE: drivers/pci/msi.c:961:
+               return status; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1405: FILE: drivers/pci/msi.c:961:
+               return status; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: drivers/pci/msi.c:961:
+               return status; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1406: FILE: drivers/pci/msi.c:962:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: drivers/pci/msi.c:962:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1424: FILE: drivers/pci/msi.c:966:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1424: FILE: drivers/pci/msi.c:966:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: drivers/pci/msi.c:966:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1425: FILE: drivers/pci/msi.c:967:
+       dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: drivers/pci/msi.c:967:
+       dev->bus->ops->read(dev->bus, dev->devfn, msi_control_reg(pos), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1426: FILE: drivers/pci/msi.c:968:
+               2, &control); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1426: FILE: drivers/pci/msi.c:968:
+               2, &control); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: drivers/pci/msi.c:968:
+               2, &control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1427: FILE: drivers/pci/msi.c:969:
+       if (control & PCI_MSIX_FLAGS_ENABLE) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1427: FILE: drivers/pci/msi.c:969:
+       if (control & PCI_MSIX_FLAGS_ENABLE) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1427: FILE: drivers/pci/msi.c:969:
+       if (control & PCI_MSIX_FLAGS_ENABLE) 
+               return -EINVAL;                 /* Already in MSI-X mode

ERROR:CODE_INDENT: code indent should use tabs where possible
#1428: FILE: drivers/pci/msi.c:970:
+               return -EINVAL;                 /* Already in MSI-X mode$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: drivers/pci/msi.c:970:
+               return -EINVAL;                 /* Already in MSI-X mode$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1430: FILE: drivers/pci/msi.c:971:
+       $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1430: FILE: drivers/pci/msi.c:971:
+               return -EINVAL;                 /* Already in MSI-X mode
+       

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1431: FILE: drivers/pci/msi.c:972:
+       nr_entries = multi_msix_capable(control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1432: FILE: drivers/pci/msi.c:973:
+       if (nvec > nr_entries) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1434: FILE: drivers/pci/msi.c:975:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1435: FILE: drivers/pci/msi.c:976:
+       /* Check for any invalid entries */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1436: FILE: drivers/pci/msi.c:977:
+       for (i = 0; i < nvec; i++) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: drivers/pci/msi.c:977:
+       for (i = 0; i < nvec; i++) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1436: FILE: drivers/pci/msi.c:977:
+       for (i = 0; i < nvec; i++) { 
+               if ((entries + i)->entry >= nr_entries) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1437: FILE: drivers/pci/msi.c:978:
+               if ((entries + i)->entry >= nr_entries) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: drivers/pci/msi.c:978:
+               if ((entries + i)->entry >= nr_entries) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: drivers/pci/msi.c:978:
+               if ((entries + i)->entry >= nr_entries) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1437: FILE: drivers/pci/msi.c:978:
+               if ((entries + i)->entry >= nr_entries) 
+                       return -EINVAL;         /* invalid entry */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1438: FILE: drivers/pci/msi.c:979:
+                       return -EINVAL;         /* invalid entry */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: drivers/pci/msi.c:979:
+                       return -EINVAL;         /* invalid entry */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: drivers/pci/msi.c:979:
+                       return -EINVAL;         /* invalid entry */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1439: FILE: drivers/pci/msi.c:980:
+               for (j = i + 1; j < nvec; j++) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1439: FILE: drivers/pci/msi.c:980:
+               for (j = i + 1; j < nvec; j++) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: drivers/pci/msi.c:980:
+               for (j = i + 1; j < nvec; j++) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1439: FILE: drivers/pci/msi.c:980:
+               for (j = i + 1; j < nvec; j++) { 
+                       if ((entries + i)->entry == (entries +

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: drivers/pci/msi.c:981:
+                       if ((entries + i)->entry == (entries +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: drivers/pci/msi.c:981:
+                       if ((entries + i)->entry == (entries +$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#1440: FILE: drivers/pci/msi.c:981:
+                       if ((entries + i)->entry == (entries +
[...]
+                               return -EINVAL; /* duplicate entry */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1442: FILE: drivers/pci/msi.c:982:
+                               return -EINVAL; /* duplicate entry */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: drivers/pci/msi.c:982:
+                               return -EINVAL; /* duplicate entry */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: drivers/pci/msi.c:982:
+                               return -EINVAL; /* duplicate entry */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1443: FILE: drivers/pci/msi.c:983:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: drivers/pci/msi.c:983:
+               } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: drivers/pci/msi.c:983:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: drivers/pci/msi.c:984:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: drivers/pci/msi.c:984:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1445: FILE: drivers/pci/msi.c:985:
+       temp = dev->irq; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: drivers/pci/msi.c:985:
+       temp = dev->irq; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1446: FILE: drivers/pci/msi.c:986:
+       if (!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: drivers/pci/msi.c:986:
+       if (!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1446: FILE: drivers/pci/msi.c:986:
+       if (!msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { 
[...]
+               nr_entries = nvec;      

WARNING:TYPO_SPELLING: 'Sucess' may be misspelled - perhaps 'Success'?
#1447: FILE: drivers/pci/msi.c:987:
+               /* Lookup Sucess */ 
                          ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1447: FILE: drivers/pci/msi.c:987:
+               /* Lookup Sucess */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1447: FILE: drivers/pci/msi.c:987:
+               /* Lookup Sucess */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1448: FILE: drivers/pci/msi.c:988:
+               nr_entries = nvec;      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: drivers/pci/msi.c:988:
+               nr_entries = nvec;      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: drivers/pci/msi.c:988:
+               nr_entries = nvec;      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1449: FILE: drivers/pci/msi.c:989:
+               /* Reroute MSI-X table */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: drivers/pci/msi.c:989:
+               /* Reroute MSI-X table */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: drivers/pci/msi.c:990:
+               if (reroute_msix_table(dev->irq, entries, &nr_entries))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: drivers/pci/msi.c:990:
+               if (reroute_msix_table(dev->irq, entries, &nr_entries))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1450: FILE: drivers/pci/msi.c:990:
+               if (reroute_msix_table(dev->irq, entries, &nr_entries))
[...]
+                       dev->irq = temp; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1452: FILE: drivers/pci/msi.c:991:
+                       /* #requested > #previous-assigned */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1452: FILE: drivers/pci/msi.c:991:
+                       /* #requested > #previous-assigned */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1453: FILE: drivers/pci/msi.c:992:
+                       dev->irq = temp; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: drivers/pci/msi.c:992:
+                       dev->irq = temp; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: drivers/pci/msi.c:992:
+                       dev->irq = temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1454: FILE: drivers/pci/msi.c:993:
+                       return nr_entries; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1454: FILE: drivers/pci/msi.c:993:
+                       return nr_entries; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: drivers/pci/msi.c:993:
+                       return nr_entries; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1455: FILE: drivers/pci/msi.c:994:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1455: FILE: drivers/pci/msi.c:994:
+               } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1455: FILE: drivers/pci/msi.c:994:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1456: FILE: drivers/pci/msi.c:995:
+               dev->irq = temp; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: drivers/pci/msi.c:995:
+               dev->irq = temp; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: drivers/pci/msi.c:995:
+               dev->irq = temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1457: FILE: drivers/pci/msi.c:996:
+               enable_msi_mode(dev, pos, PCI_CAP_ID_MSIX); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: drivers/pci/msi.c:996:
+               enable_msi_mode(dev, pos, PCI_CAP_ID_MSIX); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: drivers/pci/msi.c:996:
+               enable_msi_mode(dev, pos, PCI_CAP_ID_MSIX); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1458: FILE: drivers/pci/msi.c:997:
+               return 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1458: FILE: drivers/pci/msi.c:997:
+               return 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: drivers/pci/msi.c:997:
+               return 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: drivers/pci/msi.c:999:
+       /* Check whether driver already requested for MSI vector */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1461: FILE: drivers/pci/msi.c:1000:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: drivers/pci/msi.c:1000:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1461: FILE: drivers/pci/msi.c:1000:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 && 
[...]
+               printk(KERN_INFO "Can't enable MSI-X. Device already had

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1462: FILE: drivers/pci/msi.c:1001:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: drivers/pci/msi.c:1001:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1462: FILE: drivers/pci/msi.c:1001:
+       if (pci_find_capability(dev, PCI_CAP_ID_MSI) > 0 && 
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/pci/msi.c:1001:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1463: FILE: drivers/pci/msi.c:1002:
+               printk(KERN_INFO "Can't enable MSI-X. Device already had$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: drivers/pci/msi.c:1002:
+               printk(KERN_INFO "Can't enable MSI-X. Device already had$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1463: FILE: drivers/pci/msi.c:1002:
+               printk(KERN_INFO "Can't enable MSI-X. Device already had

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1480: FILE: drivers/pci/msi.c:1015:
+       if (nvec > free_vectors) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1481: FILE: drivers/pci/msi.c:1016:
+               if (free_vectors > 0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1481: FILE: drivers/pci/msi.c:1016:
+               if (free_vectors > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1482: FILE: drivers/pci/msi.c:1017:
+                       return free_vectors; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1482: FILE: drivers/pci/msi.c:1017:
+                       return free_vectors; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1483: FILE: drivers/pci/msi.c:1018:
+               else $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1483: FILE: drivers/pci/msi.c:1018:
+               else $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1484: FILE: drivers/pci/msi.c:1019:
+                       return -EBUSY; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1484: FILE: drivers/pci/msi.c:1019:
+                       return -EBUSY; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1485: FILE: drivers/pci/msi.c:1020:
+       }       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1508: FILE: drivers/pci/msi.c:1022:
+       status = msix_capability_init(dev, entries, nvec); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1509: FILE: drivers/pci/msi.c:1023:
+       if (!status && nr_msix_devices > 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1556: FILE: drivers/pci/msi.c:1026:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1557: FILE: drivers/pci/msi.c:1027:
+       return status; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1567: FILE: drivers/pci/msi.c:1040:
+       int state, pos, temp; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: drivers/pci/msi.c:1040:
+       int state, pos, temp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1570: FILE: drivers/pci/msi.c:1042:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/pci/msi.c:1042:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1585: FILE: drivers/pci/msi.c:1045:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: drivers/pci/msi.c:1045:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1586: FILE: drivers/pci/msi.c:1046:
+       temp = dev->irq;                /* Save IOAPIC IRQ */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: drivers/pci/msi.c:1046:
+       temp = dev->irq;                /* Save IOAPIC IRQ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1587: FILE: drivers/pci/msi.c:1047:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: drivers/pci/msi.c:1047:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1587: FILE: drivers/pci/msi.c:1047:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 && 
[...]
+               spin_lock_irqsave(&msi_lock, flags); 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1587: FILE: drivers/pci/msi.c:1047:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1588: FILE: drivers/pci/msi.c:1048:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1588: FILE: drivers/pci/msi.c:1048:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1588: FILE: drivers/pci/msi.c:1048:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSI)) > 0 && 
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: drivers/pci/msi.c:1048:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSI)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1589: FILE: drivers/pci/msi.c:1049:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1589: FILE: drivers/pci/msi.c:1049:
+               spin_lock_irqsave(&msi_lock, flags); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1589: FILE: drivers/pci/msi.c:1049:
+               spin_lock_irqsave(&msi_lock, flags); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1590: FILE: drivers/pci/msi.c:1050:
+               state = msi_desc[dev->irq]->msi_attrib.state; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1590: FILE: drivers/pci/msi.c:1050:
+               state = msi_desc[dev->irq]->msi_attrib.state; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: drivers/pci/msi.c:1050:
+               state = msi_desc[dev->irq]->msi_attrib.state; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1615: FILE: drivers/pci/msi.c:1052:
+               if (state)      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1615: FILE: drivers/pci/msi.c:1052:
+               if (state)      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1615: FILE: drivers/pci/msi.c:1052:
+               if (state)      $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1615: FILE: drivers/pci/msi.c:1052:
+               if (state)      
+                       printk("WARNING! Driver fails freeing MSI

ERROR:CODE_INDENT: code indent should use tabs where possible
#1616: FILE: drivers/pci/msi.c:1053:
+                       printk("WARNING! Driver fails freeing MSI$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1616: FILE: drivers/pci/msi.c:1053:
+                       printk("WARNING! Driver fails freeing MSI$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1616: FILE: drivers/pci/msi.c:1053:
+                       printk("WARNING! Driver fails freeing MSI

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1618: FILE: drivers/pci/msi.c:1054:
+                               dev->irq); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: drivers/pci/msi.c:1054:
+                               dev->irq); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1618: FILE: drivers/pci/msi.c:1054:
+                               dev->irq); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1619: FILE: drivers/pci/msi.c:1055:
+               else /* Release MSI vector assigned to this device */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1619: FILE: drivers/pci/msi.c:1055:
+               else /* Release MSI vector assigned to this device */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1619: FILE: drivers/pci/msi.c:1055:
+               else /* Release MSI vector assigned to this device */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1620: FILE: drivers/pci/msi.c:1056:
+                       msi_free_vector(dev, dev->irq, 0); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1620: FILE: drivers/pci/msi.c:1056:
+                       msi_free_vector(dev, dev->irq, 0); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1620: FILE: drivers/pci/msi.c:1056:
+                       msi_free_vector(dev, dev->irq, 0); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1621: FILE: drivers/pci/msi.c:1057:
+               dev->irq = temp;                /* Restore IOAPIC IRQ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1621: FILE: drivers/pci/msi.c:1057:
+               dev->irq = temp;                /* Restore IOAPIC IRQ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1623: FILE: drivers/pci/msi.c:1059:
+       } $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1623: FILE: drivers/pci/msi.c:1059:
+       } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1624: FILE: drivers/pci/msi.c:1060:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1624: FILE: drivers/pci/msi.c:1060:
+       if ((pos = pci_find_capability(dev, PCI_CAP_ID_MSIX)) > 0 && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1625: FILE: drivers/pci/msi.c:1061:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1625: FILE: drivers/pci/msi.c:1061:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1625: FILE: drivers/pci/msi.c:1061:
+               !msi_lookup_vector(dev, PCI_CAP_ID_MSIX)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1626: FILE: drivers/pci/msi.c:1062:
+               int vector, head, tail = 0, warning = 0; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1626: FILE: drivers/pci/msi.c:1062:
+               int vector, head, tail = 0, warning = 0; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1626: FILE: drivers/pci/msi.c:1062:
+               int vector, head, tail = 0, warning = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1627: FILE: drivers/pci/msi.c:1063:
+               unsigned long base = 0L; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1627: FILE: drivers/pci/msi.c:1063:
+               unsigned long base = 0L; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1627: FILE: drivers/pci/msi.c:1063:
+               unsigned long base = 0L; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1628: FILE: drivers/pci/msi.c:1064:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1628: FILE: drivers/pci/msi.c:1064:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: drivers/pci/msi.c:1064:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1629: FILE: drivers/pci/msi.c:1065:
+               vector = head = dev->irq; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1629: FILE: drivers/pci/msi.c:1065:
+               vector = head = dev->irq; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1629: FILE: drivers/pci/msi.c:1065:
+               vector = head = dev->irq; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: drivers/pci/msi.c:1066:
+               while (head != tail) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1630: FILE: drivers/pci/msi.c:1066:
+               while (head != tail) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1630: FILE: drivers/pci/msi.c:1066:
+               while (head != tail) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1637: FILE: drivers/pci/msi.c:1068:
+                       state = msi_desc[vector]->msi_attrib.state; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: drivers/pci/msi.c:1068:
+                       state = msi_desc[vector]->msi_attrib.state; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: drivers/pci/msi.c:1068:
+                       state = msi_desc[vector]->msi_attrib.state; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1638: FILE: drivers/pci/msi.c:1069:
+                       tail = msi_desc[vector]->link.tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1638: FILE: drivers/pci/msi.c:1069:
+                       tail = msi_desc[vector]->link.tail; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1638: FILE: drivers/pci/msi.c:1069:
+                       tail = msi_desc[vector]->link.tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: drivers/pci/msi.c:1070:
+                       base = msi_desc[vector]->mask_base; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1639: FILE: drivers/pci/msi.c:1070:
+                       base = msi_desc[vector]->mask_base; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1639: FILE: drivers/pci/msi.c:1070:
+                       base = msi_desc[vector]->mask_base; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1642: FILE: drivers/pci/msi.c:1072:
+                       if (state) {    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1642: FILE: drivers/pci/msi.c:1072:
+                       if (state) {    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: drivers/pci/msi.c:1072:
+                       if (state) {    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1643: FILE: drivers/pci/msi.c:1073:
+                               printk("WARNING! Driver fails freeing$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1643: FILE: drivers/pci/msi.c:1073:
+                               printk("WARNING! Driver fails freeing$

ERROR:SPACING: space required before that '!' (ctx:VxW)
#1643: FILE: drivers/pci/msi.c:1073:
+                               printk("WARNING! Driver fails freeing
                                               ^

ERROR:SPACING: space prohibited after that '!' (ctx:VxW)
#1643: FILE: drivers/pci/msi.c:1073:
+                               printk("WARNING! Driver fails freeing
                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <Driver>
#1643: FILE: drivers/pci/msi.c:1073:
+                               printk("WARNING! Driver fails freeing

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1645: FILE: drivers/pci/msi.c:1074:
+                               vector); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1645: FILE: drivers/pci/msi.c:1074:
+                               vector); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1645: FILE: drivers/pci/msi.c:1074:
+                               vector); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1646: FILE: drivers/pci/msi.c:1075:
+                               warning = 1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1646: FILE: drivers/pci/msi.c:1075:
+                               warning = 1; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1646: FILE: drivers/pci/msi.c:1075:
+                               warning = 1; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1647: FILE: drivers/pci/msi.c:1076:
+                       } else if (vector != head) /* Release MSI-X$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: drivers/pci/msi.c:1076:
+                       } else if (vector != head) /* Release MSI-X$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 0)
#1647: FILE: drivers/pci/msi.c:1076:
+                       } else if (vector != head) /* Release MSI-X
vector */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1649: FILE: drivers/pci/msi.c:1077:
+                               msi_free_vector(dev, vector, 0); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1649: FILE: drivers/pci/msi.c:1077:
+                               msi_free_vector(dev, vector, 0); $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1649: FILE: drivers/pci/msi.c:1077:
+                       } else if (vector != head) /* Release MSI-X
+                               msi_free_vector(dev, vector, 0); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1650: FILE: drivers/pci/msi.c:1078:
+                       vector = tail; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: drivers/pci/msi.c:1078:
+                       vector = tail; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1651: FILE: drivers/pci/msi.c:1079:
+               } $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1651: FILE: drivers/pci/msi.c:1079:
+               } $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1652: FILE: drivers/pci/msi.c:1080:
+               msi_free_vector(dev, vector, 0); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: drivers/pci/msi.c:1080:
+               msi_free_vector(dev, vector, 0); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1653: FILE: drivers/pci/msi.c:1081:
+               if (warning) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1653: FILE: drivers/pci/msi.c:1081:
+               if (warning) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: drivers/pci/msi.c:1082:
+                       /* Force to release the MSI-X memory-mapped$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1656: FILE: drivers/pci/msi.c:1083:
+                       u32 phys_addr, table_offset; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1656: FILE: drivers/pci/msi.c:1083:
+                       u32 phys_addr, table_offset; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1656: FILE: drivers/pci/msi.c:1083:
+                       /* Force to release the MSI-X memory-mapped
+                       u32 phys_addr, table_offset; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1657: FILE: drivers/pci/msi.c:1084:
+                       u32 control; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1657: FILE: drivers/pci/msi.c:1084:
+                       u32 control; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1658: FILE: drivers/pci/msi.c:1085:
+                       u8 bir; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1658: FILE: drivers/pci/msi.c:1085:
+                       u8 bir; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1659: FILE: drivers/pci/msi.c:1086:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1660: FILE: drivers/pci/msi.c:1087:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1660: FILE: drivers/pci/msi.c:1087:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1661: FILE: drivers/pci/msi.c:1088:
+                               msi_control_reg(pos), 2, &control); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1661: FILE: drivers/pci/msi.c:1088:
+                               msi_control_reg(pos), 2, &control); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1662: FILE: drivers/pci/msi.c:1089:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: drivers/pci/msi.c:1089:
+                       dev->bus->ops->read(dev->bus, dev->devfn, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: drivers/pci/msi.c:1090:
+                               msix_table_offset_reg(pos), 4,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1665: FILE: drivers/pci/msi.c:1091:
+                       bir = (u8)(table_offset &$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1667: FILE: drivers/pci/msi.c:1092:
+                       phys_addr = pci_resource_start (dev, bir); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1667: FILE: drivers/pci/msi.c:1092:
+                       phys_addr = pci_resource_start (dev, bir); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1668: FILE: drivers/pci/msi.c:1093:
+                       phys_addr += (u32)(table_offset & $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: drivers/pci/msi.c:1093:
+                       phys_addr += (u32)(table_offset & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1669: FILE: drivers/pci/msi.c:1094:
+                               ~PCI_MSIX_FLAGS_BIRMASK); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: drivers/pci/msi.c:1094:
+                               ~PCI_MSIX_FLAGS_BIRMASK); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1670: FILE: drivers/pci/msi.c:1095:
+                       iounmap((void*)base); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: drivers/pci/msi.c:1095:
+                       iounmap((void*)base); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1671: FILE: drivers/pci/msi.c:1096:
+                       release_mem_region(phys_addr,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1673: FILE: drivers/pci/msi.c:1097:
+                               multi_msix_capable(control)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1673: FILE: drivers/pci/msi.c:1097:
+                               multi_msix_capable(control)); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1680: FILE: drivers/pci/msi.c:1099:
+               dev->irq = temp;                /* Restore IOAPIC IRQ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1701: FILE: drivers/pci/msi.h:93:
+struct msix_entry { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1702: FILE: drivers/pci/msi.h:94:
+       __u32   vector  : 16;   /* kernel uses to write allocated vector$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1704: FILE: drivers/pci/msi.h:95:
+       __u32   vector  : 16;   /* kernel uses to write allocated vector
+       __u32   entry   : 16;   /* driver uses to specify entry, OS

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1706: FILE: drivers/pci/msi.h:96:
+}; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1706: FILE: drivers/pci/msi.h:96:
+       __u32   entry   : 16;   /* driver uses to specify entry, OS
+}; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1707: FILE: drivers/pci/msi.h:97:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1719: FILE: drivers/pci/msi.h:148:
+               __u8    state   : 1;    /* {0: free, 1: busy}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1721: FILE: drivers/pci/msi.h:149:
+               __u8    reserved: 1;    /* reserved$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1721: FILE: drivers/pci/msi.h:149:
+               __u8    state   : 1;    /* {0: free, 1: busy}
+               __u8    reserved: 1;    /* reserved

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1739: FILE: include/linux/pci.h:792:
+static inline int pci_enable_msix(struct pci_dev* dev, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1739: FILE: include/linux/pci.h:792:
+static inline int pci_enable_msix(struct pci_dev* dev, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1740: FILE: include/linux/pci.h:793:
+       unsigned int *data, int nvec) {return -1;} $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1740: FILE: include/linux/pci.h:793:
+static inline int pci_enable_msix(struct pci_dev* dev, 
+       unsigned int *data, int nvec) {return -1;} 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1740: FILE: include/linux/pci.h:793:
+       unsigned int *data, int nvec) {return -1;} $

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1740: FILE: include/linux/pci.h:793:
+       unsigned int *data, int nvec) {return -1;} 
                                                ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1745: FILE: include/linux/pci.h:798:
+extern int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1745: FILE: include/linux/pci.h:798:
+extern int pci_enable_msix(struct pci_dev* dev, unsigned int *data, int

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 928 errors, 356 warnings, 14 checks, 1555 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000272863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
