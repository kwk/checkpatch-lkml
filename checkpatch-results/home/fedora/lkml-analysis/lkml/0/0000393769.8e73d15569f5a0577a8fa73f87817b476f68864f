WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Received: by angband.namesys.com (Postfix on SuSE Linux 7.3 (i386), from userid 521)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	           ChangeSet	1.967   -> 1.968  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	 fs/reiserfs/inode.c	1.41    -> 1.42   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	fs/reiserfs/tail_conversion.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 03/02/13	green@angband.namesys.com	1.968

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# reiserfs: Fix DIRECT IO interference with tail packing

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#89: 
--- a/fs/reiserfs/inode.c	Thu Feb 13 16:22:56 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs/reiserfs/inode.c:421:
+    bh_result->b_page = NULL;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: fs/reiserfs/inode.c:433:
+    /* Possible unpacked tail. Flush the data before pages have
+       disappeared */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#104: FILE: fs/reiserfs/inode.c:433:
+       disappeared */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/reiserfs/inode.c:434:
+    if (inode->u.reiserfs_i.i_flags & i_pack_on_close_mask) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/reiserfs/inode.c:439:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#120: FILE: fs/reiserfs/inode.c:579:
+    /* If file is of such a size, that it might have a tail and tails are enabled
+    ** we should mark it as possibly needing tail packing on close

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
                                                                               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_sb'
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
+	 (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_sb'
#122: FILE: fs/reiserfs/inode.c:581:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
+	 (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: fs/reiserfs/inode.c:582:
+    if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
+	 (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: fs/reiserfs/inode.c:582:
+	 (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#123: FILE: fs/reiserfs/inode.c:582:
+	 (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#135: FILE: fs/reiserfs/inode.c:775:
+	    /* unbh->b_page == NULL in case of DIRECT_IO request, this means
+	       buffer will disappear shortly, so it should not be added to

WARNING:TABSTOP: Statements should start on a tabstop
#139: FILE: fs/reiserfs/inode.c:778:
+	    if ( unbh->b_page ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#139: FILE: fs/reiserfs/inode.c:778:
+	    if ( unbh->b_page ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: fs/reiserfs/inode.c:778:
+	    if ( unbh->b_page ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: fs/reiserfs/inode.c:779:
+^I^I/* we've converted the tail, so we must $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#141: FILE: fs/reiserfs/inode.c:780:
+		/* we've converted the tail, so we must 
+		** flush unbh before the transaction commits

WARNING:SPACING: space prohibited before semicolon
#143: FILE: fs/reiserfs/inode.c:782:
+		add_to_flushlist(inode, unbh) ;

WARNING:SPACING: space prohibited before semicolon
#152: FILE: fs/reiserfs/inode.c:787:
+		__mark_buffer_dirty(unbh) ;

WARNING:TABSTOP: Statements should start on a tabstop
#153: FILE: fs/reiserfs/inode.c:788:
+	    }

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#162: FILE: fs/reiserfs/inode.c:2086:
+	/* If the file have grown beyond the border where it
+	   can have a tail, unmark it as needing a tail

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#163: FILE: fs/reiserfs/inode.c:2087:
+	   packing */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
[...]
+	    inode->u.reiserfs_i.i_flags &= ~i_pack_on_close_mask;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
 	                                                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_sb'
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
+	     (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_sb'
#164: FILE: fs/reiserfs/inode.c:2088:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
+	     (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: fs/reiserfs/inode.c:2089:
+	if ( (have_large_tails (inode->i_sb) && inode->i_size < block_size (inode)*4) ||
+	     (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: fs/reiserfs/inode.c:2089:
+	     (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#165: FILE: fs/reiserfs/inode.c:2089:
+	     (have_small_tails (inode->i_sb) && inode->i_size < block_size(inode)) )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#182: FILE: fs/reiserfs/tail_conversion.c:111:
+	if ( !unbh->b_page || buffer_uptodate(unbh) || Page_Uptodate(unbh->b_page)) {
 	    up_to_date_bh = NULL ;

ERROR:SPACING: space prohibited after that open parenthesis '('
#182: FILE: fs/reiserfs/tail_conversion.c:111:
+	if ( !unbh->b_page || buffer_uptodate(unbh) || Page_Uptodate(unbh->b_page)) {

CHECK:CAMELCASE: Avoid CamelCase: <Page_Uptodate>
#182: FILE: fs/reiserfs/tail_conversion.c:111:
+	if ( !unbh->b_page || buffer_uptodate(unbh) || Page_Uptodate(unbh->b_page)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393769.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 38 warnings, 9 checks, 86 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393769.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
