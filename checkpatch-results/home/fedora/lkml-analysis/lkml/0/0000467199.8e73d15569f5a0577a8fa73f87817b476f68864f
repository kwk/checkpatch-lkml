ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: arch/cris/drivers/ide.c:801:
+        if (drive->type != ATA_DISK)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: arch/cris/drivers/ide.c:801:
+        if (drive->type != ATA_DISK)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#84: FILE: drivers/ide/hpt34x.c:337:
+			BUG_ON(HWGROUP(drive)->handler);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#99: FILE: drivers/ide/icside.c:447:
+		BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: drivers/ide/ide-cd.c:748:
+		BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: drivers/ide/ide-cd.c:791:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#132: FILE: drivers/ide/ide-cd.c:1010:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#143: FILE: drivers/ide/ide-cd.c:1343:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: drivers/ide/ide-cd.c:1568:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: drivers/ide/ide-disk.c:326:
+		printk("ide: Request while drive blocked?");

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/ide/ide-disk.c:545:
+        args.handler = task_no_data_intr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/ide/ide-disk.c:545:
+        args.handler = task_no_data_intr;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#272: FILE: drivers/ide/ide-disk.c:1126:
+	if (!drive)
+	    return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#273: FILE: drivers/ide/ide-disk.c:1127:
+	    return 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#286: FILE: drivers/ide/ide-dma.c:592:
+			BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#297: FILE: drivers/ide/ide-floppy.c:971:
+				BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#306: FILE: drivers/ide/ide-floppy.c:994:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:LONG_LINE_COMMENT: line length of 129 exceeds 100 columns
#307: FILE: drivers/ide/ide-floppy.c:995:
+	ide_set_handler(drive,&idefloppy_pc_intr,IDEFLOPPY_WAIT_CMD, NULL);		/* And set the interrupt handler again */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxO)
#307: FILE: drivers/ide/ide-floppy.c:995:
+	ide_set_handler(drive,&idefloppy_pc_intr,IDEFLOPPY_WAIT_CMD, NULL);		/* And set the interrupt handler again */
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#307: FILE: drivers/ide/ide-floppy.c:995:
+	ide_set_handler(drive,&idefloppy_pc_intr,IDEFLOPPY_WAIT_CMD, NULL);		/* And set the interrupt handler again */
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: drivers/ide/ide-floppy.c:995:
+	ide_set_handler(drive,&idefloppy_pc_intr,IDEFLOPPY_WAIT_CMD, NULL);		/* And set the interrupt handler again */
 	                                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#317: FILE: drivers/ide/ide-floppy.c:1021:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: drivers/ide/ide-floppy.c:1071:
+	BUG_ON(HWGROUP(drive)->handler);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: drivers/ide/ide-floppy.c:1073:
+	ide_set_handler (drive,
+	  &idefloppy_pc_intr,		/* service routine for packet command */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#355: FILE: drivers/ide/ide-floppy.c:1156:
+		BUG_ON(HWGROUP(drive)->handler);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->type == ATA_DISK'
#408: FILE: drivers/ide/ide-pmac.c:950:
+		if (ata4 && (drive->type == ATA_DISK) &&
 		    (id->field_valid & 0x0004) && (id->dma_ultra & 0x17)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: drivers/ide/ide-pmac.c:999:
+		BUG_ON(HWGROUP(drive)->handler);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#444: FILE: drivers/ide/ide-pmac.c:1071:
+		outb(0x2, base+0x160);
 		              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#469: FILE: drivers/ide/ide-tape.c:2158:
+				BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#479: FILE: drivers/ide/ide-tape.c:2185:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#480: FILE: drivers/ide/ide-tape.c:2186:
+	ide_set_handler(drive, &idetape_pc_intr, IDETAPE_WAIT_CMD, NULL);	/* And set the interrupt handler again */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#488: FILE: drivers/ide/ide-tape.c:2260:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#496: FILE: drivers/ide/ide-tape.c:2334:
+		BUG_ON(HWGROUP(drive)->handler);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#518: FILE: drivers/ide/ide-taskfile.c:36:
+#define DTF(x...) printk(x)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#560: FILE: drivers/ide/ide-taskfile.c:309:
+static ide_startstop_t task_mulout_intr (ide_drive_t *drive)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#581: FILE: drivers/ide/ide-taskfile.c:323:
+		if (stat & (ERR_STAT|DRQ_STAT)) {
 		                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#846: FILE: drivers/ide/ide.c:552:
+			BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#856: FILE: drivers/ide/ide.c:578:
+			BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#864: FILE: drivers/ide/ide.c:650:
+		BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#873: FILE: drivers/ide/ide.c:685:
+	BUG_ON(HWGROUP(drive)->handler);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#874: FILE: drivers/ide/ide.c:686:
+	ide_set_handler(drive, &reset_pollfunc, HZ/20, NULL);
 	                                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#882: FILE: drivers/ide/ide.c:938:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#910: FILE: drivers/ide/ide.c:3184:
+#if 0

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#951: FILE: drivers/ide/pdc4030.c:397:
+			BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#959: FILE: drivers/ide/pdc4030.c:480:
+			BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#967: FILE: drivers/ide/pdc4030.c:494:
+	BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#975: FILE: drivers/ide/pdc4030.c:529:
+		BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#983: FILE: drivers/ide/pdc4030.c:540:
+		BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1027: FILE: drivers/ide/pdc4030.c:607:
+				BUG_ON(HWGROUP(drive)->handler);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1055: FILE: drivers/ide/trm290.c:197:
+			BUG_ON(HWGROUP(drive)->handler);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1077: FILE: drivers/scsi/ide-scsi.c:632:
+		if (drive) {
+			MOD_DEC_USE_COUNT;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1093: FILE: include/linux/ide.h:306:
+	unsigned blocked        : 1;	/* 1=powermanagment told us not to do anything, so sleep nicely */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467199.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 42 warnings, 5 checks, 950 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467199.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
