WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
The patch below fixes the ioctl32.c file so that LVM 0.9 will work on UltraSPARC

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: arch/sparc64/kernel/ioctl32.c:1:
+/* $Id: ioctl32.c,v 1.104 2001/01/03 09:28:19 anton Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#45: FILE: arch/sparc64/kernel/ioctl32.c:1:
+/* $Id: ioctl32.c,v 1.104 2001/01/03 09:28:19 anton Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: arch/sparc64/kernel/ioctl32.c:2071:
+    ^Iuint8_t vg_uuid[UUID_LEN+1];^I/* volume group UUID */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#53: FILE: arch/sparc64/kernel/ioctl32.c:2071:
+    ^Iuint8_t vg_uuid[UUID_LEN+1];^I/* volume group UUID */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: arch/sparc64/kernel/ioctl32.c:2071:
+    ^Iuint8_t vg_uuid[UUID_LEN+1];^I/* volume group UUID */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#53: FILE: arch/sparc64/kernel/ioctl32.c:2071:
+    	uint8_t vg_uuid[UUID_LEN+1];	/* volume group UUID */
     	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#53: FILE: arch/sparc64/kernel/ioctl32.c:2071:
+    	uint8_t vg_uuid[UUID_LEN+1];	/* volume group UUID */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#61: FILE: arch/sparc64/kernel/ioctl32.c:2097:
+	uint8_t pv_uuid[UUID_LEN+1];
 	                        ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#61: FILE: arch/sparc64/kernel/ioctl32.c:2097:
+	uint8_t pv_uuid[UUID_LEN+1];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#70: FILE: arch/sparc64/kernel/ioctl32.c:2109:
+	uint16_t size;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#78: FILE: arch/sparc64/kernel/ioctl32.c:2117:
+typedef struct {

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/sparc64/kernel/ioctl32.c:2216:
+                       for (i = 0; i < l->lv_remap_end; i++, lbe++, lbe32++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/sparc64/kernel/ioctl32.c:2216:
+                       for (i = 0; i < l->lv_remap_end; i++, lbe++, lbe32++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#91: FILE: arch/sparc64/kernel/ioctl32.c:2216:
+                       for (i = 0; i < l->lv_remap_end; i++, lbe++, lbe32++) {
+                               err |= get_user(lbe->rsector_org, &lbe32->rsector_org);

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/sparc64/kernel/ioctl32.c:2217:
+                               err |= get_user(lbe->rsector_org, &lbe32->rsector_org);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/sparc64/kernel/ioctl32.c:2217:
+                               err |= get_user(lbe->rsector_org, &lbe32->rsector_org);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: arch/sparc64/kernel/ioctl32.c:2218:
+                               err |= __get_user(lbe->rdev_org, &lbe32->rdev_org);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/sparc64/kernel/ioctl32.c:2218:
+                               err |= __get_user(lbe->rdev_org, &lbe32->rdev_org);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/sparc64/kernel/ioctl32.c:2219:
+                               err |= __get_user(lbe->rsector_new, &lbe32->rsector_new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/sparc64/kernel/ioctl32.c:2219:
+                               err |= __get_user(lbe->rsector_new, &lbe32->rsector_new);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/sparc64/kernel/ioctl32.c:2220:
+                               err |= __get_user(lbe->rdev_new, &lbe32->rdev_new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/sparc64/kernel/ioctl32.c:2220:
+                               err |= __get_user(lbe->rdev_new, &lbe32->rdev_new);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: arch/sparc64/kernel/ioctl32.c:2264:
+^I        lv_status_bydev_req_t lv_bydev;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: arch/sparc64/kernel/ioctl32.c:2288:
+		if (copy_from_user(v->vg_uuid, ((vg32_t *)arg)->vg_uuid, UUID_LEN+1)) {
 		                                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: arch/sparc64/kernel/ioctl32.c:2292:
+^I^I    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#139: FILE: arch/sparc64/kernel/ioctl32.c:2306:
+				err = copy_from_user(v->pv[i], (void *)A(ptr), sizeof(pv32_t) - 8 - UUID_LEN+1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#139: FILE: arch/sparc64/kernel/ioctl32.c:2306:
+				err = copy_from_user(v->pv[i], (void *)A(ptr), sizeof(pv32_t) - 8 - UUID_LEN+1);
 				                                                                            ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#144: FILE: arch/sparc64/kernel/ioctl32.c:2311:
+				err = copy_from_user(v->pv[i]->pv_uuid, ((pv32_t *)A(ptr))->pv_uuid, UUID_LEN+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: arch/sparc64/kernel/ioctl32.c:2311:
+				err = copy_from_user(v->pv[i]->pv_uuid, ((pv32_t *)A(ptr))->pv_uuid, UUID_LEN+1);
 				                                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/sparc64/kernel/ioctl32.c:2313:
+^I^I^I^I        err = -EFAULT;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: arch/sparc64/kernel/ioctl32.c:2317:
+^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: arch/sparc64/kernel/ioctl32.c:2317:
+
+				

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/sparc64/kernel/ioctl32.c:2338:
+^I        err = copy_from_user(&u.pv_status, arg, sizeof(u.pv_status.pv_name));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: arch/sparc64/kernel/ioctl32.c:2348:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/sparc64/kernel/ioctl32.c:2356:
+^I        err = get_user(u.lv_bydev.dev, &((lv_status_bydev_req32_t *)arg)->dev);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#180: FILE: arch/sparc64/kernel/ioctl32.c:2358:
+		if (err) return err;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: arch/sparc64/kernel/ioctl32.c:2360:
+^I^Ip.pe = NULL; p.inode = NULL;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/sparc64/kernel/ioctl32.c:2361:
+^I^Ibreak;^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: arch/sparc64/kernel/ioctl32.c:2363:
+		err = copy_from_user(&p, (void *)arg, sizeof(pv32_t) - 8 - UUID_LEN+1);
 		                                                                   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#187: FILE: arch/sparc64/kernel/ioctl32.c:2364:
+		if (err) return -EFAULT;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: arch/sparc64/kernel/ioctl32.c:2365:
+		err = copy_from_user(p.pv_uuid, ((pv32_t *)arg)->pv_uuid, UUID_LEN+1);
 		                                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#207: FILE: arch/sparc64/kernel/ioctl32.c:2378:
+			err = copy_from_user(&p, (void *)A(ptr), sizeof(pv32_t) - 8 - UUID_LEN+1);
 			                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#215: FILE: arch/sparc64/kernel/ioctl32.c:2394:
+		if (copy_to_user(((vg32_t *)arg)->vg_uuid, v->vg_uuid, UUID_LEN+1)) {
 		                                                               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#215: FILE: arch/sparc64/kernel/ioctl32.c:2394:
+		if (copy_to_user(((vg32_t *)arg)->vg_uuid, v->vg_uuid, UUID_LEN+1)) {
+		        err = -EFAULT;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: arch/sparc64/kernel/ioctl32.c:2395:
+^I^I        err = -EFAULT;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#230: FILE: arch/sparc64/kernel/ioctl32.c:2422:
+			err = copy_to_user((void *)A(ptr), &p, sizeof(pv32_t) - 8 - UUID_LEN+1);
 			                                                                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#231: FILE: arch/sparc64/kernel/ioctl32.c:2423:
+			if (err) return -EFAULT;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: arch/sparc64/kernel/ioctl32.c:2425:
+			if (err) return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: arch/sparc64/kernel/ioctl32.c:2429:
+^I        if (!err) {$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#238: FILE: arch/sparc64/kernel/ioctl32.c:2430:
+			if (!err) err = copy_lv_t(ptr, u.lv_bydev.lv);

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/sparc64/kernel/ioctl32.c:2432:
+^I        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: arch/sparc64/kernel/ioctl32.c:2433:
+^I        break;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000545374.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 15 warnings, 15 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000545374.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
