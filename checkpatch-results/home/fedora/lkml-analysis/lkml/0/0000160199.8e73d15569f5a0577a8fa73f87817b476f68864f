WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#63: FILE: arch/ppc64/mm/init.c:889:
+int __devinit add_memory(u64 start, u64 size)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#82: FILE: arch/ppc64/mm/init.c:908:
+int __devinit remove_memory(u64 start, u64 size)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: arch/ppc64/mm/init.c:917:
+	printk("%s(): Attempting to remove memoy in range "

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#92: FILE: arch/ppc64/mm/init.c:918:
+			"%lx to %lx\n", __func__, start, start+size);
 			                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#92: FILE: arch/ppc64/mm/init.c:918:
+	printk("%s(): Attempting to remove memoy in range "
+			"%lx to %lx\n", __func__, start, start+size);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#98: FILE: arch/ppc64/mm/init.c:924:
+	printk("%s(): memory will be removed from "

WARNING:SPLIT_STRING: quoted string split across lines
#99: FILE: arch/ppc64/mm/init.c:925:
+	printk("%s(): memory will be removed from "
+			"the %s zone\n", __func__, zone->name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#109: FILE: arch/ppc64/mm/init.c:935:
+	if ((start < lmb.rmo_size) || ((start+size) < lmb.rmo_size)) {
 	                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start < lmb.rmo_size'
#109: FILE: arch/ppc64/mm/init.c:935:
+	if ((start < lmb.rmo_size) || ((start+size) < lmb.rmo_size)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#110: FILE: arch/ppc64/mm/init.c:936:
+		printk("%s(): range to be removed must NOT be in RMO!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/ppc64/mm/init.c:937:
+		printk("%s(): range to be removed must NOT be in RMO!\n",
+			__func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#118: FILE: arch/ppc64/mm/init.c:944:
+	printk("%s(): memory range to be removed overlaps "

WARNING:SPLIT_STRING: quoted string split across lines
#119: FILE: arch/ppc64/mm/init.c:945:
+	printk("%s(): memory range to be removed overlaps "
+		"multiple zones!!!\n", __func__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160199.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 4 checks, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160199.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
