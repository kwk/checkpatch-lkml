WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
- [DVB] add simple resource management for video dmas (borrowed from saa7134)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#58: FILE: drivers/media/common/saa7146_core.c:148:
+	if (!(pt->slist = vmalloc_to_sg(mem, pages))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/media/common/saa7146_core.c:160:
+	slen = pci_map_sg(pci,pt->slist,pages,PCI_DMA_FROMDEVICE);
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/media/common/saa7146_core.c:160:
+	slen = pci_map_sg(pci,pt->slist,pages,PCI_DMA_FROMDEVICE);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#73: FILE: drivers/media/common/saa7146_core.c:160:
+	slen = pci_map_sg(pci,pt->slist,pages,PCI_DMA_FROMDEVICE);
 	                                     ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#74: FILE: drivers/media/common/saa7146_core.c:161:
+	if (0 != saa7146_pgtable_build_single(pci, pt, pt->slist, slen)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#74: FILE: drivers/media/common/saa7146_core.c:161:
+	if (0 != saa7146_pgtable_build_single(pci, pt, pt->slist, slen)) {
 		return NULL;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#91: FILE: drivers/media/common/saa7146_core.c:174:
+	if (NULL != pt->slist) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: drivers/media/common/saa7146_fops.c:12:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: drivers/media/common/saa7146_fops.c:22:
+		DEB_D(("locked! vv->resources:0x%02x, we want:0x%02x\n",vv->resources,bit));
 		                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: drivers/media/common/saa7146_fops.c:22:
+		DEB_D(("locked! vv->resources:0x%02x, we want:0x%02x\n",vv->resources,bit));
 		                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: drivers/media/common/saa7146_fops.c:30:
+	DEB_D(("res: get %d\n",bit));
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: drivers/media/common/saa7146_fops.c:43:
+	struct saa7146_vv *vv = dev->vv_data;
+	return (vv->resources & bit);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: drivers/media/common/saa7146_fops.c:52:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: drivers/media/common/saa7146_fops.c:59:
+	DEB_D(("res: put %d\n",bits));
 	                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: drivers/media/common/saa7146_fops.c:63:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: drivers/media/common/saa7146_fops.c:284:
+		result = saa7146_vbi_uops.open(dev,file);
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: drivers/media/common/saa7146_fops.c:287:
+		result = saa7146_video_uops.open(dev,file);
 		                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/media/common/saa7146_fops.c:289:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#204: FILE: drivers/media/common/saa7146_fops.c:290:
+	if (0 != result) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#204: FILE: drivers/media/common/saa7146_fops.c:290:
+	if (0 != result) {
+		goto out;
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#208: FILE: drivers/media/common/saa7146_fops.c:294:
+	if( 0 == try_module_get(dev->ext->module)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#208: FILE: drivers/media/common/saa7146_fops.c:294:
+	if( 0 == try_module_get(dev->ext->module)) {

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: drivers/media/common/saa7146_fops.c:294:
+	if( 0 == try_module_get(dev->ext->module)) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#281: FILE: drivers/media/common/saa7146_hlp.c:500:
+	if( fh->ov.nclips == 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#281: FILE: drivers/media/common/saa7146_hlp.c:500:
+	if( fh->ov.nclips == 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#281: FILE: drivers/media/common/saa7146_hlp.c:500:
+	if( fh->ov.nclips == 0 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/media/common/saa7146_hlp.c:671:
+}^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/media/common/saa7146_hlp.c:678:
+ ^Isaa7146_disable_clipping(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: drivers/media/common/saa7146_hlp.c:678:
+ ^Isaa7146_disable_clipping(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/media/common/saa7146_hlp.c:678:
+ ^Isaa7146_disable_clipping(dev);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#358: FILE: drivers/media/common/saa7146_hlp.c:931:
+	if( (sfmt->flags & FORMAT_BYTE_SWAP) != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#358: FILE: drivers/media/common/saa7146_hlp.c:931:
+	if( (sfmt->flags & FORMAT_BYTE_SWAP) != 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: drivers/media/common/saa7146_hlp.c:931:
+	if( (sfmt->flags & FORMAT_BYTE_SWAP) != 0 ) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#401: FILE: drivers/media/common/saa7146_vbi.c:380:
+	if (0 == ret) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/media/common/saa7146_vbi.c:429:
+^Ireturn 0;^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: drivers/media/common/saa7146_video.c:17:
+^I^I.name ^I^I= "RGB-16 (5/B-6/G-5/R)",$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#464: FILE: drivers/media/common/saa7146_video.c:45:
+		.flags		= FORMAT_BYTE_SWAP|FORMAT_IS_PLANAR,
 		      		                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#471: FILE: drivers/media/common/saa7146_video.c:51:
+		.flags		= FORMAT_BYTE_SWAP|FORMAT_IS_PLANAR,
 		      		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#508: FILE: drivers/media/common/saa7146_video.c:290:
+	if (0 != (ret = saa7146_enable_overlay(fh))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: drivers/media/common/saa7146_video.c:292:
+		DEB_D(("enabling overlay failed: %d\n",ret));
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#521: FILE: drivers/media/common/saa7146_video.c:304:
+	DEB_EE(("dev:%p, fh:%p\n",dev,fh));
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#521: FILE: drivers/media/common/saa7146_video.c:304:
+	DEB_EE(("dev:%p, fh:%p\n",dev,fh));
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#562: FILE: drivers/media/common/saa7146_video.c:705:
+	fmt = format_by_fourcc(dev,fh->video_fmt.pixelformat);
 	                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#564: FILE: drivers/media/common/saa7146_video.c:707:
+	BUG_ON(NULL == fmt);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#564: FILE: drivers/media/common/saa7146_video.c:707:
+	BUG_ON(NULL == fmt);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#566: FILE: drivers/media/common/saa7146_video.c:709:
+	if (0 != (fmt->flags & FORMAT_IS_PLANAR)) {
[...]
+	} else {
[...]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#567: FILE: drivers/media/common/saa7146_video.c:710:
+		resource = RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP|RESOURCE_DMA3_BRS;
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#567: FILE: drivers/media/common/saa7146_video.c:710:
+		resource = RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP|RESOURCE_DMA3_BRS;
 		                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#573: FILE: drivers/media/common/saa7146_video.c:716:
+	if (0 == ret) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#574: FILE: drivers/media/common/saa7146_video.c:717:
+		DEB_S(("cannot get capture resource %d\n",resource));
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#596: FILE: drivers/media/common/saa7146_video.c:749:
+	fmt = format_by_fourcc(dev,fh->video_fmt.pixelformat);
 	                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#598: FILE: drivers/media/common/saa7146_video.c:751:
+	BUG_ON(NULL == fmt);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#598: FILE: drivers/media/common/saa7146_video.c:751:
+	BUG_ON(NULL == fmt);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#601: FILE: drivers/media/common/saa7146_video.c:754:
+		resource = RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP|RESOURCE_DMA3_BRS;
 		                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#601: FILE: drivers/media/common/saa7146_video.c:754:
+		resource = RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP|RESOURCE_DMA3_BRS;
 		                                              ^

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#633: FILE: drivers/media/common/saa7146_video.c:886:
+		/* planar formats are not allowed for overlay video, clipping and video dma would clash */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#634: FILE: drivers/media/common/saa7146_video.c:887:
+		if (0 != (fmt->flags & FORMAT_IS_PLANAR)) {
+			DEB_S(("planar pixelformat '%4.4s' not allowed for overlay\n",(char *)&fmt->pixelformat));
+		}

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#635: FILE: drivers/media/common/saa7146_video.c:888:
+			DEB_S(("planar pixelformat '%4.4s' not allowed for overlay\n",(char *)&fmt->pixelformat));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#635: FILE: drivers/media/common/saa7146_video.c:888:
+			DEB_S(("planar pixelformat '%4.4s' not allowed for overlay\n",(char *)&fmt->pixelformat));
 			                                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#661: FILE: drivers/media/common/saa7146_video.c:1103:
+			if (0 == saa7146_res_get(fh, RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP)) {
 			                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#661: FILE: drivers/media/common/saa7146_video.c:1103:
+			if (0 == saa7146_res_get(fh, RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: drivers/media/common/saa7146_video.c:1113:
+^I^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#674: FILE: drivers/media/common/saa7146_video.c:1115:
 				if( fh != vv->ov_data->fh) {
+				DEB_D(("overlay is active, but in another open\n"));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#684: FILE: drivers/media/common/saa7146_video.c:1124:
+		saa7146_res_free(fh, RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP);
 		                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#693: FILE: drivers/media/common/saa7146_video.c:1155:
+		if( fh == vv->streaming ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#693: FILE: drivers/media/common/saa7146_video.c:1155:
+		if( fh == vv->streaming ) {

ERROR:SPACING: space required before the open parenthesis '('
#693: FILE: drivers/media/common/saa7146_video.c:1155:
+		if( fh == vv->streaming ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#699: FILE: drivers/media/common/saa7146_video.c:1161:
+		if( 0 != err) {
 				return err;

ERROR:SPACING: space prohibited after that open parenthesis '('
#699: FILE: drivers/media/common/saa7146_video.c:1161:
+		if( 0 != err) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#699: FILE: drivers/media/common/saa7146_video.c:1161:
+		if( 0 != err) {

ERROR:SPACING: space required before the open parenthesis '('
#699: FILE: drivers/media/common/saa7146_video.c:1161:
+		if( 0 != err) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#699: FILE: drivers/media/common/saa7146_video.c:1161:
+		if( 0 != err) {
 				return err;
 			}

ERROR:SPACING: space prohibited after that open parenthesis '('
#708: FILE: drivers/media/common/saa7146_video.c:1172:
+		if( fh != vv->streaming ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#708: FILE: drivers/media/common/saa7146_video.c:1172:
+		if( fh != vv->streaming ) {

ERROR:SPACING: space required before the open parenthesis '('
#708: FILE: drivers/media/common/saa7146_video.c:1172:
+		if( fh != vv->streaming ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#739: FILE: drivers/media/common/saa7146_video.c:1458:
+	if( 0 != vv->streaming ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#739: FILE: drivers/media/common/saa7146_video.c:1458:
+	if( 0 != vv->streaming ) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#739: FILE: drivers/media/common/saa7146_video.c:1458:
+	if( 0 != vv->streaming ) {

ERROR:SPACING: space required before the open parenthesis '('
#739: FILE: drivers/media/common/saa7146_video.c:1458:
+	if( 0 != vv->streaming ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#748: FILE: drivers/media/common/saa7146_video.c:1467:
+		saa7146_res_free(ov_fh, RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP);
 		                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#755: FILE: drivers/media/common/saa7146_video.c:1472:
+	if( 0 != ret) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#755: FILE: drivers/media/common/saa7146_video.c:1472:
+	if( 0 != ret) {

ERROR:SPACING: space required before the open parenthesis '('
#755: FILE: drivers/media/common/saa7146_video.c:1472:
+	if( 0 != ret) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#755: FILE: drivers/media/common/saa7146_video.c:1472:
+	if( 0 != ret) {
+		goto out;
 	}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#769: FILE: drivers/media/common/saa7146_video.c:1482:
+		if (0 == saa7146_res_get(ov_fh, RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP)) {
 		                                                 ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#769: FILE: drivers/media/common/saa7146_video.c:1482:
+		if (0 == saa7146_res_get(ov_fh, RESOURCE_DMA1_HPS|RESOURCE_DMA2_CLP)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#771: FILE: drivers/media/common/saa7146_video.c:1484:
+			BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#789: FILE: include/media/saa7146_vv.h:34:
+^Iu32   ^Ipixelformat;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: include/media/saa7146_vv.h:180:
+        int(*open)(struct saa7146_dev *, struct file *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: include/media/saa7146_vv.h:180:
+        int(*open)(struct saa7146_dev *, struct file *);$

WARNING:SPACING: missing space after return type
#828: FILE: include/media/saa7146_vv.h:180:
+        int(*open)(struct saa7146_dev *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct saa7146_dev *' should also have an identifier name
#828: FILE: include/media/saa7146_vv.h:180:
+        int(*open)(struct saa7146_dev *, struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#828: FILE: include/media/saa7146_vv.h:180:
+        int(*open)(struct saa7146_dev *, struct file *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 37 warnings, 11 checks, 767 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000310718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
