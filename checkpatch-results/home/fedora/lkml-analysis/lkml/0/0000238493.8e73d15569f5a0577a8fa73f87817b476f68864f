WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#36: 
optional support for the workaround of U3 mpic beeing used along with
                                               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: arch/ppc64/kernel/mpic.h:1:
+#include <linux/irq.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: arch/ppc64/kernel/mpic.h:26:
+#define ^IMPIC_GREG_VENDOR_ID_STEPPING_MASK^I0x00ff0000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: arch/ppc64/kernel/mpic.h:27:
+#define ^IMPIC_GREG_VENDOR_ID_STEPPING_SHIFT^I16$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: arch/ppc64/kernel/mpic.h:28:
+#define ^IMPIC_GREG_VENDOR_ID_DEVICE_ID_MASK^I0x0000ff00$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: arch/ppc64/kernel/mpic.h:29:
+#define ^IMPIC_GREG_VENDOR_ID_DEVICE_ID_SHIFT^I8$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: arch/ppc64/kernel/mpic.h:30:
+#define ^IMPIC_GREG_VENDOR_ID_VENDOR_ID_MASK^I0x000000ff$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: arch/ppc64/kernel/mpic.h:64:
+#define ^IMPIC_CPU_TASKPRI_MASK^I^I^I0x0000000f$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: arch/ppc64/kernel/mpic.h:66:
+#define ^IMPIC_CPU_WHOAMI_MASK^I^I^I0x0000001f$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: arch/ppc64/kernel/mpic.h:77:
+#define ^IMPIC_VECPRI_MASK^I^I^I0x80000000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: arch/ppc64/kernel/mpic.h:78:
+#define ^IMPIC_VECPRI_ACTIVITY^I^I^I0x40000000^I/* Read Only */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: arch/ppc64/kernel/mpic.h:79:
+#define ^IMPIC_VECPRI_PRIORITY_MASK^I^I0x000f0000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: arch/ppc64/kernel/mpic.h:80:
+#define ^IMPIC_VECPRI_PRIORITY_SHIFT^I^I16$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#128: FILE: arch/ppc64/kernel/mpic.h:81:
+#define ^IMPIC_VECPRI_VECTOR_MASK^I^I^I0x000007ff$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: arch/ppc64/kernel/mpic.h:82:
+#define ^IMPIC_VECPRI_POLARITY_POSITIVE^I^I0x00800000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#130: FILE: arch/ppc64/kernel/mpic.h:83:
+#define ^IMPIC_VECPRI_POLARITY_NEGATIVE^I^I0x00000000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: arch/ppc64/kernel/mpic.h:84:
+#define ^IMPIC_VECPRI_POLARITY_MASK^I^I0x00800000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: arch/ppc64/kernel/mpic.h:85:
+#define ^IMPIC_VECPRI_SENSE_LEVEL^I^I^I0x00400000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: arch/ppc64/kernel/mpic.h:86:
+#define ^IMPIC_VECPRI_SENSE_EDGE^I^I^I0x00000000$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: arch/ppc64/kernel/mpic.h:87:
+#define ^IMPIC_VECPRI_SENSE_MASK^I^I^I0x00400000$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#162: FILE: arch/ppc64/kernel/mpic.h:115:
+struct mpic_irq_fixup
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: arch/ppc64/kernel/mpic.h:121:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#171: FILE: arch/ppc64/kernel/mpic.h:124:
+struct mpic
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: arch/ppc64/kernel/mpic.h:138:
+^Iunsigned int^I^Iirq_offset;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#204: FILE: arch/ppc64/kernel/mpic.h:157:
+	spinlock_t		fixup_lock;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#208: FILE: arch/ppc64/kernel/mpic.h:161:
+	volatile u32 __iomem	*gregs;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#209: FILE: arch/ppc64/kernel/mpic.h:162:
+	volatile u32 __iomem	*tmregs;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#210: FILE: arch/ppc64/kernel/mpic.h:163:
+	volatile u32 __iomem	*cpuregs[MPIC_MAX_CPUS];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#211: FILE: arch/ppc64/kernel/mpic.h:164:
+	volatile u32 __iomem	*isus[MPIC_MAX_ISU];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/ppc64/kernel/mpic.h:187:
+ * $

WARNING:TYPO_SPELLING: 'physial' may be misspelled - perhaps 'physical'?
#235: FILE: arch/ppc64/kernel/mpic.h:188:
+ * @phys_addr:	physial base address of the MPIC
               	^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: arch/ppc64/kernel/mpic.h:206:
+extern struct mpic *mpic_alloc(unsigned long phys_addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: arch/ppc64/kernel/mpic.h:222:
+extern void mpic_assign_isu(struct mpic *mpic, unsigned int isu_num,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: arch/ppc64/kernel/mpic.h:228:
+extern void mpic_init(struct mpic *mpic);

WARNING:TYPO_SPELLING: 'hanlder' may be misspelled - perhaps 'handler'?
#285: FILE: arch/ppc64/kernel/mpic.h:238:
+extern void mpic_setup_cascade(unsigned int irq_no, mpic_cascade_t hanlder,
                                                                    ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: arch/ppc64/kernel/mpic.h:238:
+extern void mpic_setup_cascade(unsigned int irq_no, mpic_cascade_t hanlder,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: arch/ppc64/kernel/mpic.h:247:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: arch/ppc64/kernel/mpic.h:252:
+extern void mpic_irq_set_priority(unsigned int irq, unsigned int pri);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: arch/ppc64/kernel/mpic.h:253:
+extern unsigned int mpic_irq_get_priority(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: arch/ppc64/kernel/mpic.h:256:
+extern void mpic_setup_this_cpu(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: arch/ppc64/kernel/mpic.h:259:
+extern void mpic_request_ipis(void);

WARNING:TYPO_SPELLING: 'offseted' may be misspelled - perhaps 'offsetted'?
#308: FILE: arch/ppc64/kernel/mpic.h:261:
+/* Send an IPI (non offseted number 0..3) */
                     ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: arch/ppc64/kernel/mpic.h:262:
+extern void mpic_send_ipi(unsigned int ipi_no, unsigned int cpu_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: arch/ppc64/kernel/mpic.h:265:
+extern int mpic_get_one_irq(struct mpic *mpic, struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: arch/ppc64/kernel/mpic.h:267:
+extern int mpic_get_irq(struct pt_regs *regs);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#320: FILE: arch/ppc64/kernel/mpic.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#321: FILE: arch/ppc64/kernel/mpic.c:2:
+ *  arch/ppc64/kernel/mpic.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#324: FILE: arch/ppc64/kernel/mpic.c:5:
+ *  common implementation beeing IBM's MPIC. This driver also can deal
                           ^^^^^^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#349: FILE: arch/ppc64/kernel/mpic.c:30:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#350: FILE: arch/ppc64/kernel/mpic.c:31:
+#include <asm/pgtable.h>

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: arch/ppc64/kernel/mpic.c:38:
+#define DBG(fmt...) printk(fmt)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: arch/ppc64/kernel/mpic.c:47:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#371: FILE: arch/ppc64/kernel/mpic.c:52:
+
+

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#372: FILE: arch/ppc64/kernel/mpic.c:53:
+static inline u32 _mpic_read(unsigned int be, volatile u32 __iomem *base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: arch/ppc64/kernel/mpic.c:54:
+static inline u32 _mpic_read(unsigned int be, volatile u32 __iomem *base,
+			    unsigned int reg)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#381: FILE: arch/ppc64/kernel/mpic.c:62:
+static inline void _mpic_write(unsigned int be, volatile u32 __iomem *base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: arch/ppc64/kernel/mpic.c:63:
+static inline void _mpic_write(unsigned int be, volatile u32 __iomem *base,
+			      unsigned int reg, u32 value)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: arch/ppc64/kernel/mpic.c:127:
+#define mpic_read(b,r)		_mpic_read(mpic->flags & MPIC_BIG_ENDIAN,(b),(r))
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: arch/ppc64/kernel/mpic.c:127:
+#define mpic_read(b,r)		_mpic_read(mpic->flags & MPIC_BIG_ENDIAN,(b),(r))
                       		                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: arch/ppc64/kernel/mpic.c:127:
+#define mpic_read(b,r)		_mpic_read(mpic->flags & MPIC_BIG_ENDIAN,(b),(r))
                       		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/ppc64/kernel/mpic.c:128:
+#define mpic_write(b,r,v)	_mpic_write(mpic->flags & MPIC_BIG_ENDIAN,(b),(r),(v))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/ppc64/kernel/mpic.c:128:
+#define mpic_write(b,r,v)	_mpic_write(mpic->flags & MPIC_BIG_ENDIAN,(b),(r),(v))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/ppc64/kernel/mpic.c:128:
+#define mpic_write(b,r,v)	_mpic_write(mpic->flags & MPIC_BIG_ENDIAN,(b),(r),(v))
                          	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/ppc64/kernel/mpic.c:128:
+#define mpic_write(b,r,v)	_mpic_write(mpic->flags & MPIC_BIG_ENDIAN,(b),(r),(v))
                          	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: arch/ppc64/kernel/mpic.c:128:
+#define mpic_write(b,r,v)	_mpic_write(mpic->flags & MPIC_BIG_ENDIAN,(b),(r),(v))
                          	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#448: FILE: arch/ppc64/kernel/mpic.c:129:
+#define mpic_ipi_read(i)	_mpic_ipi_read(mpic,(i))
                         	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: arch/ppc64/kernel/mpic.c:130:
+#define mpic_ipi_write(i,v)	_mpic_ipi_write(mpic,(i),(v))
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: arch/ppc64/kernel/mpic.c:130:
+#define mpic_ipi_write(i,v)	_mpic_ipi_write(mpic,(i),(v))
                            	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: arch/ppc64/kernel/mpic.c:130:
+#define mpic_ipi_write(i,v)	_mpic_ipi_write(mpic,(i),(v))
                            	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: arch/ppc64/kernel/mpic.c:131:
+#define mpic_cpu_read(i)	_mpic_cpu_read(mpic,(i))
                         	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: arch/ppc64/kernel/mpic.c:132:
+#define mpic_cpu_write(i,v)	_mpic_cpu_write(mpic,(i),(v))
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: arch/ppc64/kernel/mpic.c:132:
+#define mpic_cpu_write(i,v)	_mpic_cpu_write(mpic,(i),(v))
                            	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#451: FILE: arch/ppc64/kernel/mpic.c:132:
+#define mpic_cpu_write(i,v)	_mpic_cpu_write(mpic,(i),(v))
                            	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#452: FILE: arch/ppc64/kernel/mpic.c:133:
+#define mpic_irq_read(s,r)	_mpic_irq_read(mpic,(s),(r))
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#452: FILE: arch/ppc64/kernel/mpic.c:133:
+#define mpic_irq_read(s,r)	_mpic_irq_read(mpic,(s),(r))
                           	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#452: FILE: arch/ppc64/kernel/mpic.c:133:
+#define mpic_irq_read(s,r)	_mpic_irq_read(mpic,(s),(r))
                           	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/mpic.c:134:
+#define mpic_irq_write(s,r,v)	_mpic_irq_write(mpic,(s),(r),(v))
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/mpic.c:134:
+#define mpic_irq_write(s,r,v)	_mpic_irq_write(mpic,(s),(r),(v))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/mpic.c:134:
+#define mpic_irq_write(s,r,v)	_mpic_irq_write(mpic,(s),(r),(v))
                              	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/mpic.c:134:
+#define mpic_irq_write(s,r,v)	_mpic_irq_write(mpic,(s),(r),(v))
                              	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/mpic.c:134:
+#define mpic_irq_write(s,r,v)	_mpic_irq_write(mpic,(s),(r),(v))
                              	                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: arch/ppc64/kernel/mpic.c:136:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#460: FILE: arch/ppc64/kernel/mpic.c:141:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#473: FILE: arch/ppc64/kernel/mpic.c:154:
+		printk(KERN_INFO "mpic: Detected reversed IPI registers\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mpic->fixups[source_no].base"
#487: FILE: arch/ppc64/kernel/mpic.c:168:
+	return mpic->fixups[source_no].base != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: arch/ppc64/kernel/mpic.c:185:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#510: FILE: arch/ppc64/kernel/mpic.c:191:
+	printk(KERN_INFO "mpic:    - Workarounds on AMD 8111 @ %p\n", devbase);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#512: FILE: arch/ppc64/kernel/mpic.c:193:
+	for (i=0; i < 24; i++) {
 	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#513: FILE: arch/ppc64/kernel/mpic.c:194:
+		writeb(0x10 + 2*i, devbase + 0xf2);
 		               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: arch/ppc64/kernel/mpic.c:203:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/ppc64/kernel/mpic.c:203:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#528: FILE: arch/ppc64/kernel/mpic.c:209:
+	printk(KERN_INFO "mpic:    - Workarounds on AMD 8131 @ %p\n", devbase);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#530: FILE: arch/ppc64/kernel/mpic.c:211:
+	for (i=0; i < 4; i++) {
 	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#531: FILE: arch/ppc64/kernel/mpic.c:212:
+		writeb(0x10 + 2*i, devbase + 0xba);
 		               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: arch/ppc64/kernel/mpic.c:221:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: arch/ppc64/kernel/mpic.c:221:
+ $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#546: FILE: arch/ppc64/kernel/mpic.c:227:
+	printk(KERN_INFO "mpic: Setting up IO-APICs workarounds for U3\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#550: FILE: arch/ppc64/kernel/mpic.c:231:
+	BUG_ON(mpic->fixups == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic->fixups"
#550: FILE: arch/ppc64/kernel/mpic.c:231:
+	BUG_ON(mpic->fixups == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#560: FILE: arch/ppc64/kernel/mpic.c:241:
+	BUG_ON(cfgspace == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfgspace"
#560: FILE: arch/ppc64/kernel/mpic.c:241:
+	BUG_ON(cfgspace == NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#565: FILE: arch/ppc64/kernel/mpic.c:246:
+	for (devfn = 0; devfn < PCI_DEVFN(0x10,0); devfn ++) {
 	                                      ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#565: FILE: arch/ppc64/kernel/mpic.c:246:
+	for (devfn = 0; devfn < PCI_DEVFN(0x10,0); devfn ++) {
 	                                                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#591: FILE: arch/ppc64/kernel/mpic.c:272:
+	next:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#600: FILE: arch/ppc64/kernel/mpic.c:281:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#606: FILE: arch/ppc64/kernel/mpic.c:287:
+	while(mpic) {

ERROR:SPACING: spaces prohibited around that '->' (ctx:WxW)
#619: FILE: arch/ppc64/kernel/mpic.c:300:
+		mpic = mpic -> next;
 		            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#630: FILE: arch/ppc64/kernel/mpic.c:311:
+	for (i = 0; i < NR_CPUS; ++i, cpumask >>= 1)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#637: FILE: arch/ppc64/kernel/mpic.c:318:
+static inline struct mpic * mpic_from_ipi(unsigned int ipi)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#644: FILE: arch/ppc64/kernel/mpic.c:325:
+static inline struct mpic * mpic_from_irq(unsigned int irq)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#670: FILE: arch/ppc64/kernel/mpic.c:351:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#685: FILE: arch/ppc64/kernel/mpic.c:366:
+			printk(KERN_ERR "mpic_enable_irq timeout\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mpic_enable_irq', this function's name, in a string
#685: FILE: arch/ppc64/kernel/mpic.c:366:
+			printk(KERN_ERR "mpic_enable_irq timeout\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: arch/ppc64/kernel/mpic.c:369:
+^I} while(mpic_irq_read(src, MPIC_IRQ_VECTOR_PRI) & MPIC_VECPRI_MASK);^I$

ERROR:SPACING: space required before the open parenthesis '('
#688: FILE: arch/ppc64/kernel/mpic.c:369:
+	} while(mpic_irq_read(src, MPIC_IRQ_VECTOR_PRI) & MPIC_VECPRI_MASK);	

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#705: FILE: arch/ppc64/kernel/mpic.c:386:
+			printk(KERN_ERR "mpic_enable_irq timeout\n");

ERROR:SPACING: space required before the open parenthesis '('
#708: FILE: arch/ppc64/kernel/mpic.c:389:
+	} while(!(mpic_irq_read(src, MPIC_IRQ_VECTOR_PRI) & MPIC_VECPRI_MASK));

WARNING:LINE_SPACING: Missing a blank line after declarations
#725: FILE: arch/ppc64/kernel/mpic.c:406:
+		unsigned int src = irq - mpic->irq_offset;
+		if (mpic_is_ht_interrupt(mpic, src))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: arch/ppc64/kernel/mpic.c:455:
+^I^I       mpic_physmask(cpus_addr(tmp)[0]));^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#777: FILE: arch/ppc64/kernel/mpic.c:458:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#782: FILE: arch/ppc64/kernel/mpic.c:463:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic"
#799: FILE: arch/ppc64/kernel/mpic.c:480:
+	if (mpic == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#801: FILE: arch/ppc64/kernel/mpic.c:482:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#830: FILE: arch/ppc64/kernel/mpic.c:511:
+	BUG_ON(mpic->gregs == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic->gregs"
#830: FILE: arch/ppc64/kernel/mpic.c:511:
+	BUG_ON(mpic->gregs == NULL);

ERROR:SPACING: space prohibited after that open parenthesis '('
#837: FILE: arch/ppc64/kernel/mpic.c:518:
+		while( mpic_read(mpic->gregs, MPIC_GREG_GLOBAL_CONF_0)

ERROR:SPACING: space required before the open parenthesis '('
#837: FILE: arch/ppc64/kernel/mpic.c:518:
+		while( mpic_read(mpic->gregs, MPIC_GREG_GLOBAL_CONF_0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#839: FILE: arch/ppc64/kernel/mpic.c:520:
+			mb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#857: FILE: arch/ppc64/kernel/mpic.c:538:
+		BUG_ON(mpic->cpuregs[i] == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic->cpuregs[i]"
#857: FILE: arch/ppc64/kernel/mpic.c:538:
+		BUG_ON(mpic->cpuregs[i] == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#865: FILE: arch/ppc64/kernel/mpic.c:546:
+		BUG_ON(mpic->isus[0] == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic->isus[0]"
#865: FILE: arch/ppc64/kernel/mpic.c:546:
+		BUG_ON(mpic->isus[0] == NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#885: FILE: arch/ppc64/kernel/mpic.c:566:
+	printk(KERN_INFO "mpic: Setting up MPIC \"%s\" version %s at %lx, max %d CPUs\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#887: FILE: arch/ppc64/kernel/mpic.c:568:
+	printk(KERN_INFO "mpic: ISU size: %d, shift: %d, mask: %x\n", mpic->isu_size,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#902: FILE: arch/ppc64/kernel/mpic.c:583:
+	BUG_ON(isu_num >= MPIC_MAX_ISU);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#919: FILE: arch/ppc64/kernel/mpic.c:600:
+^Iif (mpic->cascade)^I       $

WARNING:MEMORY_BARRIER: memory barrier without comment
#922: FILE: arch/ppc64/kernel/mpic.c:603:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#925: FILE: arch/ppc64/kernel/mpic.c:606:
+	wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#935: FILE: arch/ppc64/kernel/mpic.c:616:
+	BUG_ON(mpic->num_sources == 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#937: FILE: arch/ppc64/kernel/mpic.c:618:
+	printk(KERN_INFO "mpic: Initializing for %d sources\n", mpic->num_sources);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#962: FILE: arch/ppc64/kernel/mpic.c:643:
+		irq_desc[mpic->ipi_offset+i].status |= IRQ_PER_CPU;
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#963: FILE: arch/ppc64/kernel/mpic.c:644:
+		irq_desc[mpic->ipi_offset+i].handler = &mpic->hc_ipi;
 		                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#964: FILE: arch/ppc64/kernel/mpic.c:645:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: arch/ppc64/kernel/mpic.c:664:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#990: FILE: arch/ppc64/kernel/mpic.c:671:
+		if (mpic->senses && i < mpic->senses_count) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#995: FILE: arch/ppc64/kernel/mpic.c:676:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1010: FILE: arch/ppc64/kernel/mpic.c:691:
+			printk(KERN_ERR "mpic: BROKEN_U3 set, but CONFIG doesn't match\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1024: FILE: arch/ppc64/kernel/mpic.c:705:
+			irq_desc[mpic->irq_offset+i].status = level ? IRQ_LEVEL : 0;
 			                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1025: FILE: arch/ppc64/kernel/mpic.c:706:
+			irq_desc[mpic->irq_offset+i].handler = &mpic->hc_irq;
 			                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: arch/ppc64/kernel/mpic.c:709:
+^I$

WARNING:TYPO_SPELLING: 'spurrious' may be misspelled - perhaps 'spurious'?
#1029: FILE: arch/ppc64/kernel/mpic.c:710:
+	/* Init spurrious vector */
 	        ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1041: FILE: arch/ppc64/kernel/mpic.c:722:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1090: FILE: arch/ppc64/kernel/mpic.c:771:
+	BUG_ON(mpic == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic"
#1090: FILE: arch/ppc64/kernel/mpic.c:771:
+	BUG_ON(mpic == NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1097: FILE: arch/ppc64/kernel/mpic.c:778:
+ ^I/* let the mpic know we want intrs. default affinity is 0xffffffff$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1097: FILE: arch/ppc64/kernel/mpic.c:778:
+ ^I/* let the mpic know we want intrs. default affinity is 0xffffffff$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: arch/ppc64/kernel/mpic.c:778:
+ ^I/* let the mpic know we want intrs. default affinity is 0xffffffff$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1101: FILE: arch/ppc64/kernel/mpic.c:782:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1101: FILE: arch/ppc64/kernel/mpic.c:782:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: arch/ppc64/kernel/mpic.c:783:
+ ^Ifor (i = 0; i < mpic->num_sources ; i++)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1102: FILE: arch/ppc64/kernel/mpic.c:783:
+ ^Ifor (i = 0; i < mpic->num_sources ; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: arch/ppc64/kernel/mpic.c:783:
+ ^Ifor (i = 0; i < mpic->num_sources ; i++)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1104: FILE: arch/ppc64/kernel/mpic.c:785:
+		mpic_irq_write(i, MPIC_IRQ_DESTINATION,
+			mpic_irq_read(i, MPIC_IRQ_DESTINATION) | msk);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1118: FILE: arch/ppc64/kernel/mpic.c:799:
+	BUG_ON(mpic == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic"
#1118: FILE: arch/ppc64/kernel/mpic.c:799:
+	BUG_ON(mpic == NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1141: FILE: arch/ppc64/kernel/mpic.c:822:
+^Iif (irq < MPIC_VEC_IPI_0) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1143: FILE: arch/ppc64/kernel/mpic.c:824:
+       ^IDBG("%s: ipi %d !\n", mpic->name, irq - MPIC_VEC_IPI_0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1143: FILE: arch/ppc64/kernel/mpic.c:824:
+       ^IDBG("%s: ipi %d !\n", mpic->name, irq - MPIC_VEC_IPI_0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1143: FILE: arch/ppc64/kernel/mpic.c:824:
+       ^IDBG("%s: ipi %d !\n", mpic->name, irq - MPIC_VEC_IPI_0);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1151: FILE: arch/ppc64/kernel/mpic.c:832:
+	BUG_ON(mpic == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic"
#1151: FILE: arch/ppc64/kernel/mpic.c:832:
+	BUG_ON(mpic == NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1156: FILE: arch/ppc64/kernel/mpic.c:837:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1162: FILE: arch/ppc64/kernel/mpic.c:843:
+	BUG_ON(mpic == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic"
#1162: FILE: arch/ppc64/kernel/mpic.c:843:
+	BUG_ON(mpic == NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1163: FILE: arch/ppc64/kernel/mpic.c:844:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1164: FILE: arch/ppc64/kernel/mpic.c:845:
+	printk("requesting IPIs ... \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1164: FILE: arch/ppc64/kernel/mpic.c:845:
+	printk("requesting IPIs ... \n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1167: FILE: arch/ppc64/kernel/mpic.c:848:
+	request_irq(mpic->ipi_offset+0, mpic_ipi_action, SA_INTERRUPT,
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1169: FILE: arch/ppc64/kernel/mpic.c:850:
+	request_irq(mpic->ipi_offset+1, mpic_ipi_action, SA_INTERRUPT,
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1170: FILE: arch/ppc64/kernel/mpic.c:851:
+	request_irq(mpic->ipi_offset+1, mpic_ipi_action, SA_INTERRUPT,
+		   "IPI1 (reschedule)", mpic);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1171: FILE: arch/ppc64/kernel/mpic.c:852:
+	request_irq(mpic->ipi_offset+2, mpic_ipi_action, SA_INTERRUPT,
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1172: FILE: arch/ppc64/kernel/mpic.c:853:
+	request_irq(mpic->ipi_offset+2, mpic_ipi_action, SA_INTERRUPT,
+		   "IPI2 (unused)", mpic);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1173: FILE: arch/ppc64/kernel/mpic.c:854:
+	request_irq(mpic->ipi_offset+3, mpic_ipi_action, SA_INTERRUPT,
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: arch/ppc64/kernel/mpic.c:855:
+	request_irq(mpic->ipi_offset+3, mpic_ipi_action, SA_INTERRUPT,
+		   "IPI3 (debugger break)", mpic);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1176: FILE: arch/ppc64/kernel/mpic.c:857:
+	printk("IPIs requested... \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1176: FILE: arch/ppc64/kernel/mpic.c:857:
+	printk("IPIs requested... \n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2814: FILE: include/asm-ppc64/smp.h:70:
+extern int smp_mpic_probe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2815: FILE: include/asm-ppc64/smp.h:71:
+extern void smp_mpic_setup_cpu(int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2816: FILE: include/asm-ppc64/smp.h:72:
+extern void smp_mpic_message_pass(int target, int msg);

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_mpic>
#2838: FILE: arch/ppc64/kernel/pSeries_pci.c:57:
+extern struct mpic *pSeries_mpic;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2838: FILE: arch/ppc64/kernel/pSeries_pci.c:57:
+extern struct mpic *pSeries_mpic;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2896: FILE: arch/ppc64/kernel/pSeries_setup.c:95:
+static volatile void __iomem * chrp_int_ack_special;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2896: FILE: arch/ppc64/kernel/pSeries_setup.c:95:
+static volatile void __iomem * chrp_int_ack_special;

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_irq_cascade>
#2907: FILE: arch/ppc64/kernel/pSeries_setup.c:127:
+static int pSeries_irq_cascade(struct pt_regs *regs, void *data)

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_init_mpic>
#2915: FILE: arch/ppc64/kernel/pSeries_setup.c:135:
+static void __init pSeries_init_mpic(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2917: FILE: arch/ppc64/kernel/pSeries_setup.c:137:
+        unsigned int *addrp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2917: FILE: arch/ppc64/kernel/pSeries_setup.c:137:
+        unsigned int *addrp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2918: FILE: arch/ppc64/kernel/pSeries_setup.c:138:
+        unsigned char* chrp_int_ack_special = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2918: FILE: arch/ppc64/kernel/pSeries_setup.c:138:
+        unsigned char* chrp_int_ack_special = NULL;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2918: FILE: arch/ppc64/kernel/pSeries_setup.c:138:
+        unsigned char* chrp_int_ack_special = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2920: FILE: arch/ppc64/kernel/pSeries_setup.c:140:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2920: FILE: arch/ppc64/kernel/pSeries_setup.c:140:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2926: FILE: arch/ppc64/kernel/pSeries_setup.c:146:
+        if (!(np = of_find_node_by_name(NULL, "pci"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2926: FILE: arch/ppc64/kernel/pSeries_setup.c:146:
+        if (!(np = of_find_node_by_name(NULL, "pci"))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2926: FILE: arch/ppc64/kernel/pSeries_setup.c:146:
+        if (!(np = of_find_node_by_name(NULL, "pci"))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2927: FILE: arch/ppc64/kernel/pSeries_setup.c:147:
+            || !(addrp = (unsigned int *)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2927: FILE: arch/ppc64/kernel/pSeries_setup.c:147:
+        if (!(np = of_find_node_by_name(NULL, "pci"))
+            || !(addrp = (unsigned int *)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2927: FILE: arch/ppc64/kernel/pSeries_setup.c:147:
+            || !(addrp = (unsigned int *)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2928: FILE: arch/ppc64/kernel/pSeries_setup.c:148:
+                 get_property(np, "8259-interrupt-acknowledge", NULL)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2928: FILE: arch/ppc64/kernel/pSeries_setup.c:148:
+                 get_property(np, "8259-interrupt-acknowledge", NULL)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2929: FILE: arch/ppc64/kernel/pSeries_setup.c:149:
+                printk(KERN_ERR "Cannot find pci to get ack address\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2929: FILE: arch/ppc64/kernel/pSeries_setup.c:149:
+                printk(KERN_ERR "Cannot find pci to get ack address\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2929: FILE: arch/ppc64/kernel/pSeries_setup.c:149:
+                printk(KERN_ERR "Cannot find pci to get ack address\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#2930: FILE: arch/ppc64/kernel/pSeries_setup.c:150:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2930: FILE: arch/ppc64/kernel/pSeries_setup.c:150:
+        else$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2931: FILE: arch/ppc64/kernel/pSeries_setup.c:151:
+^I^Ichrp_int_ack_special = (unsigned char *) $

CHECK:SPACING: No space is necessary after a cast
#2931: FILE: arch/ppc64/kernel/pSeries_setup.c:151:
+		chrp_int_ack_special = (unsigned char *) 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2932: FILE: arch/ppc64/kernel/pSeries_setup.c:152:
+			ioremap(addrp[prom_n_addr_cells(np)-1], 1);
 			                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2936: FILE: arch/ppc64/kernel/pSeries_setup.c:156:
+        for (i = 0; i < NUM_ISA_INTERRUPTS; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2936: FILE: arch/ppc64/kernel/pSeries_setup.c:156:
+        for (i = 0; i < NUM_ISA_INTERRUPTS; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2937: FILE: arch/ppc64/kernel/pSeries_setup.c:157:
+                irq_desc[i].handler = &i8259_pic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2937: FILE: arch/ppc64/kernel/pSeries_setup.c:157:
+                irq_desc[i].handler = &i8259_pic;$

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_setup_mpic>
#2944: FILE: arch/ppc64/kernel/pSeries_setup.c:164:
+static void __init pSeries_setup_mpic(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2949: FILE: arch/ppc64/kernel/pSeries_setup.c:168:
+        unsigned char senses[NR_IRQS - NUM_ISA_INTERRUPTS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2949: FILE: arch/ppc64/kernel/pSeries_setup.c:168:
+        unsigned char senses[NR_IRQS - NUM_ISA_INTERRUPTS];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2950: FILE: arch/ppc64/kernel/pSeries_setup.c:169:
+        struct device_node *root;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2950: FILE: arch/ppc64/kernel/pSeries_setup.c:169:
+        struct device_node *root;$

CHECK:SPACING: No space is necessary after a cast
#2955: FILE: arch/ppc64/kernel/pSeries_setup.c:174:
+	opprop = (unsigned int *) get_property(root, "platform-open-pic", NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2961: FILE: arch/ppc64/kernel/pSeries_setup.c:180:
+		printk(KERN_DEBUG "OpenPIC addr: %lx\n", openpic_addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2965: FILE: arch/ppc64/kernel/pSeries_setup.c:184:
+	BUG_ON(openpic_addr == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2969: FILE: arch/ppc64/kernel/pSeries_setup.c:188:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2973: FILE: arch/ppc64/kernel/pSeries_setup.c:192:
+^I^I^I^I  16, 16, irq_count, /* isu size, irq offset, irq count */ $

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_setup_arch>
#2979: FILE: arch/ppc64/kernel/pSeries_setup.c:198:
+static void __init pSeries_setup_arch(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2985: FILE: arch/ppc64/kernel/pSeries_setup.c:202:
+^I^Ippc_md.init_IRQ       = pSeries_init_mpic; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2988: FILE: arch/ppc64/kernel/pSeries_setup.c:205:
+		 * fill the ISUs */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3100: FILE: arch/ppc64/kernel/prom.c:1106:
+				senses[i-off] = np->intrs[j].sense ?
 				        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3171: FILE: arch/ppc64/kernel/pmac_setup.c:356:
+		BUG_ON(mpic1 == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic1"
#3171: FILE: arch/ppc64/kernel/pmac_setup.c:356:
+		BUG_ON(mpic1 == NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3172: FILE: arch/ppc64/kernel/pmac_setup.c:357:
+^I^Impic_init(mpic1);^I^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3195: FILE: arch/ppc64/kernel/pmac_setup.c:374:
+			BUG_ON(mpic2 == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic2"
#3195: FILE: arch/ppc64/kernel/pmac_setup.c:374:
+			BUG_ON(mpic2 == NULL);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'smp_mpic_probe', this function's name, in a string
#3281: FILE: arch/ppc64/kernel/smp.c:224:
+	DBG("smp_mpic_probe()...\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3295: FILE: arch/ppc64/kernel/smp.c:236:
+void __devinit smp_mpic_setup_cpu(int cpu)

CHECK:CAMELCASE: Avoid CamelCase: <pSeries_mpic_smp_ops>
#3309: FILE: arch/ppc64/kernel/smp.c:539:
+static struct smp_ops_t pSeries_mpic_smp_ops = {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3337: FILE: arch/ppc64/kernel/i8259.h:14:
+extern void i8259_init(int offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3338: FILE: arch/ppc64/kernel/i8259.h:15:
+extern int i8259_irq(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3338: FILE: arch/ppc64/kernel/i8259.h:15:
+extern int i8259_irq(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3374: FILE: arch/ppc64/kernel/i8259.c:166:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#3374: FILE: arch/ppc64/kernel/i8259.c:166:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3374: FILE: arch/ppc64/kernel/i8259.c:166:
+        $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3375: FILE: arch/ppc64/kernel/i8259.c:167:
+        
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000238493.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 77 errors, 99 warnings, 75 checks, 1684 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000238493.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
