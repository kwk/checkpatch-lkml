WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -Nur --exclude-from=/usr/src/.dontdiff linux-2.5.39-mm1+pre_reqs/arch/i386/kernel/cpu/common.c linux-2.5.39-mm1+pre_reqs+additions/arch/i386/kernel/cpu/common.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: drivers/base/memblk.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: drivers/base/memblk.c:9:
+static int memblk_add_device(struct device * dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: drivers/base/memblk.c:19:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#159: FILE: drivers/base/memblk.c:27:
+EXPORT_SYMBOL(memblk_devclass);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#164: FILE: drivers/base/node.c:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/base/node.c:9:
+static int node_add_device(struct device * dev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: drivers/base/node.c:19:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#190: FILE: drivers/base/node.c:27:
+EXPORT_SYMBOL(node_devclass);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#208: FILE: drivers/base/topology.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#209: FILE: drivers/base/topology.c:2:
+ * drivers/base/topology.c - Populate driverfs with topology information

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/base/topology.c:9:
+ * All rights reserved.          $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#230: FILE: drivers/base/topology.c:23:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#231: FILE: drivers/base/topology.c:24:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#242: FILE: drivers/base/topology.c:35:
+extern struct device_class cpu_devclass;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#243: FILE: drivers/base/topology.c:36:
+extern struct device_class memblk_devclass;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#252: FILE: drivers/base/topology.c:45:
+};
+static struct node node_devices[MAX_NR_NODES];

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#274: FILE: drivers/base/topology.c:67:
+	if ((parent = parent_node(num)) != num)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: drivers/base/topology.c:76:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#291: FILE: drivers/base/topology.c:84:
+};
+static struct cpu cpu_devices[NR_CPUS];

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#312: FILE: drivers/base/topology.c:105:
+	if ((node_id = cpu_to_node(num)) < 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#313: FILE: drivers/base/topology.c:106:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#323: FILE: drivers/base/topology.c:116:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#331: FILE: drivers/base/topology.c:124:
+};
+static struct memblk memblk_devices[MAX_NR_MEMBLKS];

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#350: FILE: drivers/base/topology.c:143:
+	if ((node_id = memblk_to_node(num)) < 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#351: FILE: drivers/base/topology.c:144:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#361: FILE: drivers/base/topology.c:154:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 8 checks, 271 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
