WARNING:TYPO_SPELLING: 'posession' may be misspelled - perhaps 'possession'?
#43: 
BTW, this doesn't address NUMA-Q.  I think I have posession of more than
                                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
Content-Disposition: attachment; filename=get_memcfg_numa-2.6.0-test5-0.patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#82: FILE: arch/i386/kernel/srat.c:243:
+		printk("could not finy any ACPI SRAT memory areas.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: arch/i386/kernel/srat.c:246:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: arch/i386/kernel/srat.c:368:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: arch/i386/kernel/srat.c:377:
+	printk("Begin SRAT table scan....\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/kernel/srat.c:392:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/i386/kernel/srat.c:397:
+	printk("failed to get NUMA memory information from SRAT table\n");

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmzone.h> instead of <asm/mmzone.h>
#187: FILE: arch/i386/mm/discontig.c:33:
+#include <asm/mmzone.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: arch/i386/mm/discontig.c:356:
+^I^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#224: FILE: arch/i386/mm/discontig.c:365:
+			BUG_ON(start > high);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#231: FILE: arch/i386/mm/discontig.c:372:
+				BUG_ON(max_dma > low);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: arch/i386/mm/discontig.c:373:
+				BUG_ON(low > high);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#249: FILE: include/asm-i386/mmzone.h:130:
+extern int get_memcfg_numa_flat(void );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: include/asm-i386/mmzone.h:130:
+extern int get_memcfg_numa_flat(void );

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#249: FILE: include/asm-i386/mmzone.h:130:
+extern int get_memcfg_numa_flat(void );

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#279: FILE: include/asm-i386/numaq.h:32:
+extern int get_memcfg_numaq(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: include/asm-i386/srat.h:35:
+extern int get_memcfg_from_srat(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 4 checks, 208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
