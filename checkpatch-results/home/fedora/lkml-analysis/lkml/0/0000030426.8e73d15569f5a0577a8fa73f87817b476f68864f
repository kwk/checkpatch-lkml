ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: drivers/ata/sata_nv.c:106:
+^I// size of ADMA port register space $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#214: FILE: drivers/ata/sata_nv.c:184:
+/* ADMA Command Parameter Block
+   The first 5 SG segments are stored inside the Command Parameter Block itself.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: drivers/ata/sata_nv.c:186:
+   memory area indicated by next_aprd. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/ata/sata_nv.c:192:
+ ^Iu8^I^I^Ilen;           //3 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/ata/sata_nv.c:192:
+ ^Iu8^I^I^Ilen;           //3 $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: drivers/ata/sata_nv.c:192:
+ ^Iu8^I^I^Ilen;           //3 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/ata/sata_nv.c:192:
+ ^Iu8^I^I^Ilen;           //3 $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: drivers/ata/sata_nv.c:202:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#243: FILE: drivers/ata/sata_nv.c:213:
+#define NV_ADMA_CHECK_INTR(GCTL, PORT) ((GCTL) & ( 1 << (19 + (12 * (PORT)))))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/ata/sata_nv.c:466:
+^I^I.flags^I^I= ATA_FLAG_SATA | ATA_FLAG_NO_LEGACY | $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#373: FILE: drivers/ata/sata_nv.c:496:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#373: FILE: drivers/ata/sata_nv.c:496:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/ata/sata_nv.c:515:
+^I^I^I^I^I        unsigned int port_no)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/ata/sata_nv.c:515:
+static inline void __iomem *__nv_adma_ctl_block(void __iomem *mmio,
+					        unsigned int port_no)

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: drivers/ata/sata_nv.c:548:
+		struct ata_queued_cmd *qc;
+		VPRINTK("in ATA register mode\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#427: FILE: drivers/ata/sata_nv.c:550:
+		if (qc && (!(qc->tf.flags & ATA_TFLAG_POLLING)))
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#429: FILE: drivers/ata/sata_nv.c:552:
+			return ata_host_intr(ap, qc);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#429: FILE: drivers/ata/sata_nv.c:552:
+		else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#439: FILE: drivers/ata/sata_nv.c:562:
+	if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !pp->notifier && !pp->notifier_error)

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: drivers/ata/sata_nv.c:562:
+	if( !NV_ADMA_CHECK_INTR(gen_ctl, ap->port_no) && !pp->notifier && !pp->notifier_error)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/ata/sata_nv.c:567:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#446: FILE: drivers/ata/sata_nv.c:569:
+	/* Clear status so that any CPB completions after this point in the handler will
+	   raise another interrupt */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#446: FILE: drivers/ata/sata_nv.c:569:
+	   raise another interrupt */

WARNING:PREFER_DEV_LEVEL: Prefer dev_notice(... to dev_printk(KERN_NOTICE, ...
#453: FILE: drivers/ata/sata_nv.c:576:
+		dev_printk(KERN_NOTICE, ap->dev, "Hotplug event on port %u, freezing\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/ata/sata_nv.c:577:
+		dev_printk(KERN_NOTICE, ap->dev, "Hotplug event on port %u, freezing\n",
+			ap->port_no);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: drivers/ata/sata_nv.c:581:
+^I$

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#460: FILE: drivers/ata/sata_nv.c:583:
+		dev_printk(KERN_ERR, ap->dev, "port %u notifier error, stat=0x%x, "

WARNING:SPLIT_STRING: quoted string split across lines
#461: FILE: drivers/ata/sata_nv.c:584:
+		dev_printk(KERN_ERR, ap->dev, "port %u notifier error, stat=0x%x, "
+			"notifier=0x%X, notifier_error=0x%X", ap->port_no, status, pp->notifier,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space prohibited before that close parenthesis ')'
#462: FILE: drivers/ata/sata_nv.c:585:
+			pp->notifier_error );

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#467: FILE: drivers/ata/sata_nv.c:590:
+		dev_printk(KERN_ERR, ap->dev, "port %u timeout, stat=0x%x\n", ap->port_no, status);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#471: FILE: drivers/ata/sata_nv.c:594:
+		dev_printk(KERN_ERR, ap->dev, "port %u CPB error, stat=0x%x\n", ap->port_no, status);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#471: FILE: drivers/ata/sata_nv.c:594:
+		dev_printk(KERN_ERR, ap->dev, "port %u CPB error, stat=0x%x\n", ap->port_no, status);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#474: FILE: drivers/ata/sata_nv.c:597:
+	if (status & NV_ADMA_STAT_STOPPED) {
+		VPRINTK("ADMA stopped, stat = 0x%x\n", status);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#477: FILE: drivers/ata/sata_nv.c:600:
+	if (status & NV_ADMA_STAT_CMD_COMPLETE) {
+		VPRINTK("ADMA command complete, stat = 0x%x\n", status);
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#483: FILE: drivers/ata/sata_nv.c:606:
+		int i;
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#483: FILE: drivers/ata/sata_nv.c:606:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#483: FILE: drivers/ata/sata_nv.c:606:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#483: FILE: drivers/ata/sata_nv.c:606:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#483: FILE: drivers/ata/sata_nv.c:606:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#483: FILE: drivers/ata/sata_nv.c:606:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#483: FILE: drivers/ata/sata_nv.c:606:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space prohibited after that open parenthesis '('
#484: FILE: drivers/ata/sata_nv.c:607:
+			if( ap->sactive & (1 << i ) ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#484: FILE: drivers/ata/sata_nv.c:607:
+			if( ap->sactive & (1 << i ) ||

ERROR:SPACING: space required before the open parenthesis '('
#484: FILE: drivers/ata/sata_nv.c:607:
+			if( ap->sactive & (1 << i ) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/ata/sata_nv.c:608:
+			if( ap->sactive & (1 << i ) ||
+			    ( ata_tag_valid(ap->active_tag) && ap->active_tag == i ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#485: FILE: drivers/ata/sata_nv.c:608:
+			    ( ata_tag_valid(ap->active_tag) && ap->active_tag == i ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#485: FILE: drivers/ata/sata_nv.c:608:
+			    ( ata_tag_valid(ap->active_tag) && ap->active_tag == i ) ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#488: FILE: drivers/ata/sata_nv.c:611:
+				int complete = 0, have_err = 0;
+				flags = cpb->resp_flags;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: drivers/ata/sata_nv.c:613:
+^I^I^I^I$

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#496: FILE: drivers/ata/sata_nv.c:619:
+					dev_printk(KERN_ERR, ap->dev, "port %u CPB flags ATA err, flags=0x%x\n", ap->port_no, flags);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#496: FILE: drivers/ata/sata_nv.c:619:
+					dev_printk(KERN_ERR, ap->dev, "port %u CPB flags ATA err, flags=0x%x\n", ap->port_no, flags);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#501: FILE: drivers/ata/sata_nv.c:624:
+					dev_printk(KERN_ERR, ap->dev, "port %u CPB flags CMD err, flags=0x%x\n", ap->port_no, flags);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#501: FILE: drivers/ata/sata_nv.c:624:
+					dev_printk(KERN_ERR, ap->dev, "port %u CPB flags CMD err, flags=0x%x\n", ap->port_no, flags);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#506: FILE: drivers/ata/sata_nv.c:629:
+					dev_printk(KERN_ERR, ap->dev, "port %u CPB flags CPB err, flags=0x%x\n", ap->port_no, flags);

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#506: FILE: drivers/ata/sata_nv.c:629:
+					dev_printk(KERN_ERR, ap->dev, "port %u CPB flags CPB err, flags=0x%x\n", ap->port_no, flags);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#510: FILE: drivers/ata/sata_nv.c:633:
+				if(complete || have_global_err)
+				{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: drivers/ata/sata_nv.c:633:
+				if(complete || have_global_err)

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: drivers/ata/sata_nv.c:636:
+					struct ata_queued_cmd *qc = ata_qc_from_tag(ap, i);
+					if(likely(qc)) {

ERROR:SPACING: space required before the open parenthesis '('
#513: FILE: drivers/ata/sata_nv.c:636:
+					if(likely(qc)) {

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#515: FILE: drivers/ata/sata_nv.c:638:
+						/* Only use the ATA port status for non-NCQ commands.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#516: FILE: drivers/ata/sata_nv.c:639:
+						   For NCQ commands the current status may have nothing to do with

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#516: FILE: drivers/ata/sata_nv.c:639:
+						/* Only use the ATA port status for non-NCQ commands.
+						   For NCQ commands the current status may have nothing to do with

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: drivers/ata/sata_nv.c:640:
+						   the command just completed. */

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#518: FILE: drivers/ata/sata_nv.c:641:
+						if(qc->tf.protocol != ATA_PROT_NCQ)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:SPACING: space required before the open parenthesis '('
#518: FILE: drivers/ata/sata_nv.c:641:
+						if(qc->tf.protocol != ATA_PROT_NCQ)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#519: FILE: drivers/ata/sata_nv.c:642:
+							ata_status = readb(mmio + (ATA_REG_STATUS * 4));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: drivers/ata/sata_nv.c:643:
+^I^I^I^I^I^I^I$

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#521: FILE: drivers/ata/sata_nv.c:644:
+						if(have_err || have_global_err)

ERROR:SPACING: space required before the open parenthesis '('
#521: FILE: drivers/ata/sata_nv.c:644:
+						if(have_err || have_global_err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#523: FILE: drivers/ata/sata_nv.c:646:
+^I^I^I^I^I^I$

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#525: FILE: drivers/ata/sata_nv.c:648:
+						DPRINTK("Completing qc from tag %d with err_mask %u\n",i,qc->err_mask);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: drivers/ata/sata_nv.c:648:
+						DPRINTK("Completing qc from tag %d with err_mask %u\n",i,qc->err_mask);
 						                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#525: FILE: drivers/ata/sata_nv.c:648:
+						DPRINTK("Completing qc from tag %d with err_mask %u\n",i,qc->err_mask);
 						                                                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#557: FILE: drivers/ata/sata_nv.c:680:
+	/* Clear notifiers. Yes, this does appear to have to be done at the very end,
+	   otherwise things grind to a halt quite quickly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#557: FILE: drivers/ata/sata_nv.c:680:
+	   otherwise things grind to a halt quite quickly. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#562: FILE: drivers/ata/sata_nv.c:685:
+			struct nv_adma_port_priv *pp = ap->private_data;
+			writel(pp->notifier | pp->notifier_error,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: drivers/ata/sata_nv.c:688:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: drivers/ata/sata_nv.c:700:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: drivers/ata/sata_nv.c:705:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: drivers/ata/sata_nv.c:706:
+^I/** clear legacy status */^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#628: FILE: drivers/ata/sata_nv.c:751:
+	u8 status;
+	ap->flags &= ~ATA_FLAG_MMIO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: drivers/ata/sata_nv.c:765:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: drivers/ata/sata_nv.c:811:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#689: FILE: drivers/ata/sata_nv.c:812:
+	VPRINTK("dma memory: vaddr = 0x%p, paddr = 0x%p\n", mem, (void*)mem_dma);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: drivers/ata/sata_nv.c:813:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#705: FILE: drivers/ata/sata_nv.c:828:
+	VPRINTK("cpb = 0x%p, cpb_dma = 0x%p\n", pp->cpb, (void*)pp->cpb_dma);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#707: FILE: drivers/ata/sata_nv.c:830:
+^Iwritel(mem_dma & 0xFFFFFFFF, ^Immio + NV_ADMA_CPB_BASE_LOW);$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#708: FILE: drivers/ata/sata_nv.c:831:
+	writel((mem_dma >> 16 ) >> 16,	mmio + NV_ADMA_CPB_BASE_HIGH);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#719: FILE: drivers/ata/sata_nv.c:842:
+	VPRINTK("aprd = 0x%p, aprd_dma = 0x%p\n", pp->aprd, (void*)pp->aprd_dma);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: drivers/ata/sata_nv.c:851:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#738: FILE: drivers/ata/sata_nv.c:861:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#738: FILE: drivers/ata/sata_nv.c:861:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#741: FILE: drivers/ata/sata_nv.c:864:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#741: FILE: drivers/ata/sata_nv.c:864:
+	readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#742: FILE: drivers/ata/sata_nv.c:865:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#768: FILE: drivers/ata/sata_nv.c:891:
+
+

CHECK:SPACING: No space is necessary after a cast
#778: FILE: drivers/ata/sata_nv.c:901:
+	ioport->cmd_addr	= (unsigned long) mmio;

CHECK:SPACING: No space is necessary after a cast
#779: FILE: drivers/ata/sata_nv.c:902:
+	ioport->data_addr	= (unsigned long) mmio + (ATA_REG_DATA * 4);

CHECK:SPACING: No space is necessary after a cast
#781: FILE: drivers/ata/sata_nv.c:904:
+	ioport->feature_addr	= (unsigned long) mmio + (ATA_REG_ERR * 4);

CHECK:SPACING: No space is necessary after a cast
#782: FILE: drivers/ata/sata_nv.c:905:
+	ioport->nsect_addr	= (unsigned long) mmio + (ATA_REG_NSECT * 4);

CHECK:SPACING: No space is necessary after a cast
#783: FILE: drivers/ata/sata_nv.c:906:
+	ioport->lbal_addr	= (unsigned long) mmio + (ATA_REG_LBAL * 4);

CHECK:SPACING: No space is necessary after a cast
#784: FILE: drivers/ata/sata_nv.c:907:
+	ioport->lbam_addr	= (unsigned long) mmio + (ATA_REG_LBAM * 4);

CHECK:SPACING: No space is necessary after a cast
#785: FILE: drivers/ata/sata_nv.c:908:
+	ioport->lbah_addr	= (unsigned long) mmio + (ATA_REG_LBAH * 4);

CHECK:SPACING: No space is necessary after a cast
#786: FILE: drivers/ata/sata_nv.c:909:
+	ioport->device_addr	= (unsigned long) mmio + (ATA_REG_DEVICE * 4);

CHECK:SPACING: No space is necessary after a cast
#788: FILE: drivers/ata/sata_nv.c:911:
+	ioport->command_addr	= (unsigned long) mmio + (ATA_REG_STATUS * 4);

CHECK:SPACING: No space is necessary after a cast
#790: FILE: drivers/ata/sata_nv.c:913:
+	ioport->ctl_addr	= (unsigned long) mmio + 0x20;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#809: FILE: drivers/ata/sata_nv.c:932:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#825: FILE: drivers/ata/sata_nv.c:948:
+
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#860: FILE: drivers/ata/sata_nv.c:983:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[NV_ADMA_SGTBL_LEN * qc->tag + (idx-5)];

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#860: FILE: drivers/ata/sata_nv.c:983:
+		aprd = (idx < 5) ? &cpb->aprd[idx] : &pp->aprd[NV_ADMA_SGTBL_LEN * qc->tag + (idx-5)];
 		                                                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: drivers/ata/sata_nv.c:1009:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: drivers/ata/sata_nv.c:1021:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#900: FILE: drivers/ata/sata_nv.c:1023:
+	/* Be paranoid and don't let the device see NV_CPB_CTL_CPB_VALID until we are
+	   finished filling in all of the contents */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#900: FILE: drivers/ata/sata_nv.c:1023:
+	   finished filling in all of the contents */

CHECK:BRACES: braces {} should be used on all arms of this statement
#911: FILE: drivers/ata/sata_nv.c:1034:
+	if (!(qc->flags & ATA_QCFLAG_DMAMAP)) {
[...]
+	} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#916: FILE: drivers/ata/sata_nv.c:1039:
+		return ata_qc_issue_prot(qc);
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#916: FILE: drivers/ata/sata_nv.c:1039:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: drivers/ata/sata_nv.c:1048:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#926: FILE: drivers/ata/sata_nv.c:1049:
+	DPRINTK("Issued tag %u\n",qc->tag);
 	                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#941: FILE: drivers/ata/sata_nv.c:1249:
+	struct nv_adma_port_priv *pp = ap->private_data;
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

ERROR:SPACING: space required before the open parenthesis '('
#941: FILE: drivers/ata/sata_nv.c:1249:
+	if(!(pp->flags & NV_ADMA_PORT_REGISTER_MODE)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#950: FILE: drivers/ata/sata_nv.c:1258:
+^I^I$

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#951: FILE: drivers/ata/sata_nv.c:1259:
+		dev_printk(KERN_ERR, ap->dev, "EH port %u in ADMA, notifier 0x%X "

ERROR:SPACING: space required after that ',' (ctx:VxV)
#952: FILE: drivers/ata/sata_nv.c:1260:
+			"notifier_error 0x%X gen_ctl 0x%X status 0x%X\n",ap->port_no,
 			                                                ^

WARNING:SPLIT_STRING: quoted string split across lines
#952: FILE: drivers/ata/sata_nv.c:1260:
+		dev_printk(KERN_ERR, ap->dev, "EH port %u in ADMA, notifier 0x%X "
+			"notifier_error 0x%X gen_ctl 0x%X status 0x%X\n",ap->port_no,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#955: FILE: drivers/ata/sata_nv.c:1263:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#955: FILE: drivers/ata/sata_nv.c:1263:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#955: FILE: drivers/ata/sata_nv.c:1263:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#955: FILE: drivers/ata/sata_nv.c:1263:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#955: FILE: drivers/ata/sata_nv.c:1263:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {

ERROR:SPACING: space required before the open parenthesis '('
#955: FILE: drivers/ata/sata_nv.c:1263:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#957: FILE: drivers/ata/sata_nv.c:1265:
+			struct nv_adma_cpb *cpb = &pp->cpb[i];
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space prohibited after that open parenthesis '('
#957: FILE: drivers/ata/sata_nv.c:1265:
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#957: FILE: drivers/ata/sata_nv.c:1265:
+			if( cpb->ctl_flags || cpb->resp_flags )

ERROR:SPACING: space required before the open parenthesis '('
#957: FILE: drivers/ata/sata_nv.c:1265:
+			if( cpb->ctl_flags || cpb->resp_flags )

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#958: FILE: drivers/ata/sata_nv.c:1266:
+				dev_printk(KERN_ERR, ap->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: drivers/ata/sata_nv.c:1267:
+				dev_printk(KERN_ERR, ap->dev,
+					"CPB %d: ctl_flags 0x%x, resp_flags 0x%x\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_notice(... to dev_printk(KERN_NOTICE, ...
#966: FILE: drivers/ata/sata_nv.c:1274:
+		dev_printk(KERN_NOTICE, ap->dev, "Resetting port %u\n", ap->port_no);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#969: FILE: drivers/ata/sata_nv.c:1277:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#969: FILE: drivers/ata/sata_nv.c:1277:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#969: FILE: drivers/ata/sata_nv.c:1277:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#969: FILE: drivers/ata/sata_nv.c:1277:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#969: FILE: drivers/ata/sata_nv.c:1277:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#969: FILE: drivers/ata/sata_nv.c:1277:
+		for( i=0;i<NV_ADMA_MAX_CPBS;i++)

ERROR:SPACING: space prohibited after that open parenthesis '('
#978: FILE: drivers/ata/sata_nv.c:1286:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#978: FILE: drivers/ata/sata_nv.c:1286:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited after that open parenthesis '('
#981: FILE: drivers/ata/sata_nv.c:1289:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#981: FILE: drivers/ata/sata_nv.c:1289:
+		readl( mmio + NV_ADMA_CTL );	/* flush posted write */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: drivers/ata/sata_nv.c:1317:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1005: FILE: drivers/ata/sata_nv.c:1318:
+	if(type >= CK804 && adma_enabled) {

WARNING:PREFER_DEV_LEVEL: Prefer dev_notice(... to dev_printk(KERN_NOTICE, ...
#1006: FILE: drivers/ata/sata_nv.c:1319:
+		dev_printk(KERN_NOTICE, &pdev->dev, "Using ADMA mode\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1029: FILE: drivers/ata/sata_nv.c:1343:
+	ppi[0] = ppi[1] = &nv_port_info[type];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030426.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 49 warnings, 24 checks, 996 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030426.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
