WARNING:TYPO_SPELLING: 'curent' may be misspelled - perhaps 'current'?
#39: 
> > > BTW here's my curent bigdiff. It already has some rather nice
                    ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'snaphot' may be misspelled - perhaps 'snapshot'?
#62: 
   device until snaphot memory finished, This is the problem that why only
                ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
diff -ur linux-2.6.9-peval/kernel/power/disk.c linux-2.6.9-peval-hg/kernel/power/disk.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#74: FILE: kernel/power/disk.c:32:
+extern int write_page_caches(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#75: FILE: kernel/power/disk.c:33:
+extern int read_page_caches(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#83: FILE: kernel/power/disk.c:111:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: kernel/power/disk.c:154:
+^Iif (!resume) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#112: FILE: kernel/power/disk.c:155:
+		if ((error = write_page_caches())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#113: FILE: kernel/power/disk.c:156:
+			goto Finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: kernel/power/disk.c:187:
+	if ((error = prepare(0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#132: FILE: kernel/power/disk.c:244:
+	if ((error = prepare(1)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: kernel/power/swsusp.c:307:
+^I^Ipr_debug("data_write: %p %p %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: kernel/power/swsusp.c:308:
+^I^I^I^I(void *)(pagedir_nosave+i)->address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: kernel/power/swsusp.c:308:
+		pr_debug("data_write: %p %p %u\n", 
+				(void *)(pagedir_nosave+i)->address, 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: kernel/power/swsusp.c:308:
+				(void *)(pagedir_nosave+i)->address, 
 				                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: kernel/power/swsusp.c:309:
+				(void *)(pagedir_nosave+i)->orig_address,
 				                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: kernel/power/swsusp.c:310:
+				(pagedir_nosave+i)->swap_address);
 				               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: kernel/power/swsusp.c:522:
+		struct list_head * entry = zone->inactive_list.prev;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: kernel/power/swsusp.c:523:
+		struct list_head * entry = zone->inactive_list.prev;
+		while (entry != &zone->inactive_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: kernel/power/swsusp.c:525:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: kernel/power/swsusp.c:526:
+				struct page * page = list_entry(entry, struct page, lru);
+				inactive += fun(page, p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: kernel/power/swsusp.c:527:
+^I^I^I} else { $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#178: FILE: kernel/power/swsusp.c:528:
+				inactive ++;
 				         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: kernel/power/swsusp.c:534:
+		struct list_head * entry = zone->active_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#185: FILE: kernel/power/swsusp.c:535:
+		struct list_head * entry = zone->active_list.prev;
+		while (entry != &zone->active_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: kernel/power/swsusp.c:537:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#188: FILE: kernel/power/swsusp.c:538:
+				struct page * page = list_entry(entry, struct page, lru);
+				active += fun(page, p);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#190: FILE: kernel/power/swsusp.c:540:
+				active ++;
 				       ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#211: FILE: kernel/power/swsusp.c:561:
+static int nr_copy_pcs = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: kernel/power/swsusp.c:567:
+	BUG_ON(PageReserved(page) && PageNosave(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: kernel/power/swsusp.c:569:
+		printk("not valid page\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#223: FILE: kernel/power/swsusp.c:573:
+		printk("nosave\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: kernel/power/swsusp.c:577:
+		printk("[nosave]\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#231: FILE: kernel/power/swsusp.c:581:
+		printk("slab\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#232: FILE: kernel/power/swsusp.c:582:
+		return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: kernel/power/swsusp.c:586:
+		struct pbe *p = find_pbe_by_index(nr_copy_pcs);
+		p->address = (long)page_address(page);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: kernel/power/swsusp.c:588:
+		printk("setup_pcs: cur %p, addr %p, next %p, nr%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: kernel/power/swsusp.c:589:
+		printk("setup_pcs: cur %p, addr %p, next %p, nr%d\n",
+				p, p->address, p->orig_address, nr_copy_pcs);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#241: FILE: kernel/power/swsusp.c:591:
+		nr_copy_pcs ++;
 		            ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#245: FILE: kernel/power/swsusp.c:595:
+	return (1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: kernel/power/swsusp.c:600:
+^Ireturn foreach_zone_page(zone, setup_pcs_pe, p);^I$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#253: FILE: kernel/power/swsusp.c:603:
+static suspend_pagedir_t *pagedir_cache = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: kernel/power/swsusp.c:609:
+ * unsigned long address;      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: kernel/power/swsusp.c:611:
+ * swp_entry_t swap_address;   $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: kernel/power/swsusp.c:616:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: kernel/power/swsusp.c:617:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev,
+		unsigned int nums)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#274: FILE: kernel/power/swsusp.c:624:
+	if (!pgdir) {
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#278: FILE: kernel/power/swsusp.c:628:
+	printk("pgdir: %p, %p, %d\n", pgdir, prev, sizeof(suspend_pagedir_t));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: kernel/power/swsusp.c:634:
+		if (prev == NULL) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!prev"
#284: FILE: kernel/power/swsusp.c:634:
+		if (prev == NULL) continue;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#294: FILE: kernel/power/swsusp.c:644:
+static int for_each_pgdir(susp_pgdir_t fun, void *subfun, void *arg)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#299: FILE: kernel/power/swsusp.c:649:
+	while (pgdir != NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#302: FILE: kernel/power/swsusp.c:652:
+		printk("next %p, cur %p\n", next, pgdir);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#305: FILE: kernel/power/swsusp.c:655:
+		if (error) return error;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#316: FILE: kernel/power/swsusp.c:666:
+	return (0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: kernel/power/swsusp.c:678:
+	printk("for_pbe_one_pgdir: %p, %p, %p\n", pgdir, _fun, arg);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'for_pbe_one_pgdir', this function's name, in a string
#328: FILE: kernel/power/swsusp.c:678:
+	printk("for_pbe_one_pgdir: %p, %p, %p\n", pgdir, _fun, arg);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#332: FILE: kernel/power/swsusp.c:682:
+		pgdir ++;
 		      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#333: FILE: kernel/power/swsusp.c:683:
+		if (error) return error;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#339: FILE: kernel/power/swsusp.c:689:
+static int for_each_pbe(swsup_pbe_t fun, void *p)
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: kernel/power/swsusp.c:696:
+^Iunsigned int num_pbes = PAGE_SIZE / sizeof(suspend_pagedir_t) - 1, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: kernel/power/swsusp.c:699:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#350: FILE: kernel/power/swsusp.c:700:
+	while (pgdir != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: kernel/power/swsusp.c:701:
+^I^Iif (index < nums) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: kernel/power/swsusp.c:707:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: kernel/power/swsusp.c:717:
+	BUG_ON(PAGE_SIZE % sizeof(suspend_pagedir_t));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#371: FILE: kernel/power/swsusp.c:721:
+	if (!pagedir_cache) {
+		return -ENOMEM;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#378: FILE: kernel/power/swsusp.c:728:
+		if (!cur) {
+			goto no_mem;
+		}

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#384: FILE: kernel/power/swsusp.c:734:
+	pr_debug("swsusp: nums %d, nums_pbes %d \n", nums, num_pbes);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#388: FILE: kernel/power/swsusp.c:738:
+	printk("swsusp: alloc_pages failed, %d\n", nr_copy_pcs);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#400: FILE: kernel/power/swsusp.c:750:
+		if (!is_highmem(zone)) {
+			spin_unlock_irq(&zone->lru_lock);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#411: FILE: kernel/power/swsusp.c:761:
+		if (!is_highmem(zone)) {
+			spin_lock_irq(&zone->lru_lock);
+		}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: kernel/power/swsusp.c:767:
+int bio_read_page(pgoff_t page_off, void * page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#423: FILE: kernel/power/swsusp.c:773:
+	int error = 0, i = *(int*)tmp;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#426: FILE: kernel/power/swsusp.c:776:
+	if (!(i%100))
 	       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#427: FILE: kernel/power/swsusp.c:777:
+		printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited after that open parenthesis '('
#427: FILE: kernel/power/swsusp.c:777:
+		printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#427: FILE: kernel/power/swsusp.c:777:
+		printk( "\b\b\b\b%3d%%", i / mod );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#429: FILE: kernel/power/swsusp.c:779:
+	if (i == nr_copy_pcs) return -1;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#431: FILE: kernel/power/swsusp.c:781:
+	(*(int*)tmp) ++;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#431: FILE: kernel/power/swsusp.c:781:
+	(*(int*)tmp) ++;
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#433: FILE: kernel/power/swsusp.c:783:
+^Iprintk("pagecache_read_pbe: %p %p %u\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#433: FILE: kernel/power/swsusp.c:783:
+	printk("pagecache_read_pbe: %p %p %u\n", 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagecache_read_pbe', this function's name, in a string
#433: FILE: kernel/power/swsusp.c:783:
+	printk("pagecache_read_pbe: %p %p %u\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: kernel/power/swsusp.c:784:
+^I^I^I(void *)p->address, (void *)p->orig_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: kernel/power/swsusp.c:784:
+	printk("pagecache_read_pbe: %p %p %u\n", 
+			(void *)p->address, (void *)p->orig_address, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#439: FILE: kernel/power/swsusp.c:789:
+	if (error) return error;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#445: FILE: kernel/power/swsusp.c:795:
+	return (0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: kernel/power/swsusp.c:801:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#454: FILE: kernel/power/swsusp.c:804:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#454: FILE: kernel/power/swsusp.c:804:
+	printk( "Reading PageCaches from swap (%d pages)...     ", nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#456: FILE: kernel/power/swsusp.c:806:
+	printk("\b\b\b\bdone\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#462: FILE: kernel/power/swsusp.c:812:
+	if (i == nr_copy_pcs)  return (0);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#469: FILE: kernel/power/swsusp.c:819:
+	int error = 0, i = *(int*)tmp;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#471: FILE: kernel/power/swsusp.c:821:
+	if (!(i%100))
 	       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#472: FILE: kernel/power/swsusp.c:822:
+		printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited after that open parenthesis '('
#472: FILE: kernel/power/swsusp.c:822:
+		printk( "\b\b\b\b%3d%%", i / mod );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#472: FILE: kernel/power/swsusp.c:822:
+		printk( "\b\b\b\b%3d%%", i / mod );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#474: FILE: kernel/power/swsusp.c:824:
+	if (i == nr_copy_pcs) return -1;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#476: FILE: kernel/power/swsusp.c:826:
+	(*(int*)tmp) ++;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#476: FILE: kernel/power/swsusp.c:826:
+	(*(int*)tmp) ++;
 	             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#478: FILE: kernel/power/swsusp.c:828:
+	if (error) return error;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: kernel/power/swsusp.c:831:
+^Iprintk("pagecache_write_pbe: %p, %p %p %u\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: kernel/power/swsusp.c:831:
+	printk("pagecache_write_pbe: %p, %p %p %u\n", 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pagecache_write_pbe', this function's name, in a string
#481: FILE: kernel/power/swsusp.c:831:
+	printk("pagecache_write_pbe: %p, %p %p %u\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: kernel/power/swsusp.c:832:
+	printk("pagecache_write_pbe: %p, %p %p %u\n", 
+			p, (void *)p->address, (void *)p->orig_address, p->swap_address);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: kernel/power/swsusp.c:841:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#496: FILE: kernel/power/swsusp.c:846:
+	printk( "Writing PageCaches to swap (%d pages)...     ", nr_copy_pcs);

ERROR:SPACING: space prohibited after that open parenthesis '('
#496: FILE: kernel/power/swsusp.c:846:
+	printk( "Writing PageCaches to swap (%d pages)...     ", nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#498: FILE: kernel/power/swsusp.c:848:
+	printk("\b\b\b\bdone\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#500: FILE: kernel/power/swsusp.c:850:
+	if (i == nr_copy_pcs)  return (0);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#511: FILE: kernel/power/swsusp.c:861:
+		if (!is_highmem(zone)) {
+			count_pcs(zone, 1);
+		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#528: FILE: kernel/power/swsusp.c:878:
+		ClearPagePcs(mem_map+i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#533: FILE: kernel/power/swsusp.c:883:
+		if (!is_highmem(zone)) {
+			nr_copy_pcs += count_pcs(zone, 0);
+		}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#549: FILE: kernel/power/swsusp.c:899:
+		return (0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#551: FILE: kernel/power/swsusp.c:901:
+	printk("swsusp: Need to copy %u pcs\n", nr_copy_pcs);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#553: FILE: kernel/power/swsusp.c:903:
+	if ((error = swsusp_swap_check())) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#558: FILE: kernel/power/swsusp.c:908:
+	if ((error = alloc_pagedir_cache())) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#565: FILE: kernel/power/swsusp.c:915:
+	printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: kernel/power/swsusp.c:916:
+	printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#569: FILE: kernel/power/swsusp.c:919:
+		if (recal == 0) {
+			page_cache_unlock();
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#572: FILE: kernel/power/swsusp.c:922:
+		printk("#");

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#574: FILE: kernel/power/swsusp.c:924:
+		recal ++;
 		      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#582: FILE: kernel/power/swsusp.c:932:
+		printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: kernel/power/swsusp.c:933:
+		printk("swsusp(1/2): Need to copy %u pages, %u pcs\n",
+				nr_copy_pages, nr_copy_pcs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: kernel/power/swsusp.c:935:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#588: FILE: kernel/power/swsusp.c:938:
+	printk("swsusp(2/2): Need to copy %u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: kernel/power/swsusp.c:939:
+	printk("swsusp(2/2): Need to copy %u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pcs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#593: FILE: kernel/power/swsusp.c:943:
+		printk("swsusp_alloc failed, %d\n", error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#599: FILE: kernel/power/swsusp.c:949:
+	printk("swsusp(final): Need to copy %u/%u pages, %u pcs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: kernel/power/swsusp.c:950:
+	printk("swsusp(final): Need to copy %u/%u pages, %u pcs\n",
+			nr_copy_pages, nr_copy_pages_check, nr_copy_pcs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: kernel/power/swsusp.c:955:
+^Iif (error) $

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#608: FILE: kernel/power/swsusp.c:958:
+	return (0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#619: FILE: kernel/power/swsusp.c:996:
+		BUG_ON(zone->nr_inactive == 0 && zone->nr_active == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#642: FILE: kernel/power/swsusp.c:1107:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#653: FILE: kernel/power/swsusp.c:1215:
+		printk("suspend: Allocating pagedir failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#658: FILE: kernel/power/swsusp.c:1219:
+		printk("suspend: Allocating image pages failed.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#696: FILE: kernel/power/swsusp.c:1311:
+	BUG_ON (nr_copy_pages_check != nr_copy_pages);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: kernel/power/swsusp.c:1311:
+	BUG_ON (nr_copy_pages_check != nr_copy_pages);

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#697: FILE: kernel/power/swsusp.c:1312:
+#if defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#710: FILE: kernel/power/swsusp.c:1451:
+static struct block_device * resume_bdev __nosavedata;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: kernel/power/swsusp.c:1600:
+^I^Ipr_debug("data_read: %p %p %u\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: kernel/power/swsusp.c:1601:
+^I^I^I^I(void *)p->address, (void *)p->orig_address, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: kernel/power/swsusp.c:1601:
+		pr_debug("data_read: %p %p %u\n", 
+				(void *)p->address, (void *)p->orig_address, 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 69 errors, 53 warnings, 22 checks, 643 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229070.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
