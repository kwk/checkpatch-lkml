WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#29: 
Signed-Off-By: Chandra Seetharaman <sekharan@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#31: 
Signed-Off-By: Matt Helsley <matthltc@us.ibm.com>

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self_shares == CKRM_SHARE_DONT_CARE'
#59: FILE: kernel/ckrm/ckrm_numtasks.c:175:
+	if ((self_shares == CKRM_SHARE_DONT_CARE) ||
+				(parent_shares == CKRM_SHARE_DONT_CARE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parent_shares == CKRM_SHARE_DONT_CARE'
#59: FILE: kernel/ckrm/ckrm_numtasks.c:175:
+	if ((self_shares == CKRM_SHARE_DONT_CARE) ||
+				(parent_shares == CKRM_SHARE_DONT_CARE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: kernel/ckrm/ckrm_numtasks.c:176:
+	if ((self_shares == CKRM_SHARE_DONT_CARE) ||
+				(parent_shares == CKRM_SHARE_DONT_CARE))

CHECK:SPACING: No space is necessary after a cast
#64: FILE: kernel/ckrm/ckrm_numtasks.c:180:
+	numerator = (u64) self_shares * parent_shares;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#78: FILE: kernel/ckrm/ckrm_numtasks.c:194:
+	numerator = (u64) self_unused_min_shares * self_cnt_min_shares;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: kernel/ckrm/ckrm_numtasks.c:200:
+static void recalc_self(struct ckrm_numtasks *res,
+				struct ckrm_numtasks *parres)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: kernel/ckrm/ckrm_numtasks.c:206:
+	res->cnt_min_shares = recalc_shares(self->min_shares,
+						parres->cnt_min_shares,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: kernel/ckrm/ckrm_numtasks.c:209:
+	res->cnt_max_shares = recalc_shares(self->max_shares,
+						parres->cnt_max_shares,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: kernel/ckrm/ckrm_numtasks.c:217:
+	res->cnt_unused = recalc_unused_shares(res->cnt_min_shares,
+						self->unused_min_shares,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: kernel/ckrm/ckrm_numtasks.c:221:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: kernel/ckrm/ckrm_numtasks.c:228:
+static void recalc_and_propagate(struct ckrm_numtasks *res,
+				struct ckrm_numtasks *parres)

WARNING:TYPO_SPELLING: 'childres' may be misspelled - perhaps 'children'?
#115: FILE: kernel/ckrm/ckrm_numtasks.c:231:
+	struct ckrm_numtasks *childres;
 	                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'childres' may be misspelled - perhaps 'children'?
#123: FILE: kernel/ckrm/ckrm_numtasks.c:239:
+		childres = get_class_numtasks(child);
 		^^^^^^^^

WARNING:TYPO_SPELLING: 'childres' may be misspelled - perhaps 'children'?
#124: FILE: kernel/ckrm/ckrm_numtasks.c:240:
+		BUG_ON(!childres);
 		        ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: kernel/ckrm/ckrm_numtasks.c:240:
+		BUG_ON(!childres);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'childres' may be misspelled - perhaps 'children'?
#126: FILE: kernel/ckrm/ckrm_numtasks.c:242:
+		recalc_and_propagate(childres, res);
 		                     ^^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#151: FILE: kernel/ckrm/ckrm_numtasks.c:267:
+		parres->cnt_unused = recalc_unused_shares(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: kernel/ckrm/ckrm_numtasks.c:277:
+static ssize_t numtasks_show_stats(struct ckrm_shares *my_res,
+					char *buf, size_t buf_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: kernel/ckrm/ckrm_numtasks.c:287:
+	i = snprintf(buf, buf_size, "%s: Current usage %d\n",
+					res_ctlr_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: kernel/ckrm/ckrm_numtasks.c:291:
+	i = snprintf(buf, buf_size, "%s: Number of successes %d\n",
+					res_ctlr_name, res->successes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: kernel/ckrm/ckrm_numtasks.c:294:
+	i = snprintf(buf, buf_size, "%s: Number of failures %d\n",
+					res_ctlr_name, res->failures);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 16 checks, 152 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083865.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
