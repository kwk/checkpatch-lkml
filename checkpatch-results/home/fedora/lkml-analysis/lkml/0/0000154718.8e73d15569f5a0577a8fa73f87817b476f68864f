ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#486: FILE: include/linux/topology.h:139:
+#define SD_ALLNODES_INIT (struct sched_domain) { \
+	.span = CPU_MASK_NONE, \
+	.parent = NULL, \
+	.groups = NULL, \
+	.min_interval = 64, \
+	.max_interval = 64*num_online_cpus(), \
+	.busy_factor = 128, \
+	.imbalance_pct = 133, \
+	.cache_nice_tries = 1, \
+	.busy_idx = 3, \
+	.idle_idx = 3, \
+	.newidle_idx = 0, /* unused */ \
+	.wake_idx = 0, /* unused */ \
+	.forkexec_idx = 0, /* unused */ \
+	.per_cpu_gain = 100, \
+	.flags = SD_LOAD_BALANCE, \
+	.last_balance = jiffies, \
+	.balance_interval = 64, \
+	.nr_balance_failed = 0, \
+}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#491: FILE: include/linux/topology.h:144:
+	.max_interval = 64*num_online_cpus(), \
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#528: FILE: kernel/sched.c:4805:
+static cpumask_t __devinitdata cpu_isolated_map = CPU_MASK_NONE;

WARNING:MISPLACED_INIT: __devinitdata should be placed after cpu_isolated_map
#528: FILE: kernel/sched.c:4805:
+static cpumask_t __devinitdata cpu_isolated_map = CPU_MASK_NONE;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LINE_SPACING: Missing a blank line after declarations
#619: FILE: kernel/sched.c:4934:
+		int next_node = find_next_best_node(node, used_nodes);
+		nodemask = node_to_cpumask(next_node);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#695: FILE: kernel/sched.c:5003:
+		if (num_online_cpus()
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#696: FILE: kernel/sched.c:5004:
+				> SD_NODES_PER_DOMAIN*cpus_weight(nodemask)) {
 				                     ^

CHECK:BRACES: Unbalanced braces around else statement
#703: FILE: kernel/sched.c:5011:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: kernel/sched.c:5069:
+	init_sched_build_groups(sched_group_allnodes, *cpu_map,
+					&cpu_to_allnodes_group);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sg)...) over kmalloc(sizeof(struct sched_group)...)
#750: FILE: kernel/sched.c:5086:
+		sg = kmalloc(sizeof(struct sched_group), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#754: FILE: kernel/sched.c:5090:
+			struct sched_domain *sd;
+			sd = &per_cpu(node_domains, j);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sd->groups"
#756: FILE: kernel/sched.c:5092:
+			if (sd->groups == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#762: FILE: kernel/sched.c:5098:
+			printk(KERN_WARNING

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sg)...) over kmalloc(sizeof(struct sched_group)...)
#786: FILE: kernel/sched.c:5122:
+			sg = kmalloc(sizeof(struct sched_group), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#788: FILE: kernel/sched.c:5124:
+				printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#788: FILE: kernel/sched.c:5124:
+			if (!sg) {
+				printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#813: FILE: kernel/sched.c:5157:
+				+ (cpus_weight(sd->groups->cpumask)-1) / 10;
 				                                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#824: FILE: kernel/sched.c:5168:
+		if (sg == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#836: FILE: kernel/sched.c:5180:
+				 * physical package.
+				*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#840: FILE: kernel/sched.c:5184:
+				(cpus_weight(sd->groups->cpumask)-1) / 10;
 				                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#876: FILE: kernel/sched.c:5226:
+	int i;
+	for (i = 0; i < MAX_NUMNODES; i++) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg"
#885: FILE: kernel/sched.c:5234:
+		if (sg == NULL)

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#904: +++ linux/include/asm/topology.h	2005-09-02 08:44:24.000000000 -0700

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 12 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154718.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
