WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#32: 
Signed-off-by:  Shailabh Nagar <nagar@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#33: 
Signed-off-by:  Hubertus Franke <frankeh@us.ibm.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#34: 
Signed-off-by:  Chandra Seetharaman <sekharan@us.ibm.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#35: 
Signed-off-by:  Gerrit Huizenga <gh@us.ibm.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: include/linux/ckrm_events.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: include/linux/ckrm_events.h:8:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: include/linux/ckrm_events.h:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: include/linux/ckrm_events.h:13:
+ * $

WARNING:TYPO_SPELLING: 'paramter' may be misspelled - perhaps 'parameter'?
#106: FILE: include/linux/ckrm_events.h:32:
+ *        Added callbacks_active and surrounding logic. Added task paramter
                                                                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: include/linux/ckrm_events.h:44:
+ * Data structure and function to get the list of registered $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: include/linux/ckrm_events.h:62:
+^I * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: include/linux/ckrm_events.h:104:
+ * CKRM event callback specification for the classtypes or resource controllers $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: include/linux/ckrm_events.h:105:
+ *   typically an array is specified using CKRM_EVENT_SPEC terminated with $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#197: FILE: include/linux/ckrm_events.h:123:
+#define CKRM_EVENT_SPEC(EV,FCT) { CKRM_EVENT_##EV, \
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/linux/ckrm_events.h:131:
+extern void ckrm_invoke_event_cb_chain(enum ckrm_event ev, void *arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: include/linux/ckrm_events.h:133:
+#define CKRM_DEF_CB(EV,fct)					\
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: include/linux/ckrm_events.h:136:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,NULL);      \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: include/linux/ckrm_events.h:136:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,NULL);      \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: include/linux/ckrm_events.h:136:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,NULL);      \
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: include/linux/ckrm_events.h:139:
+#define CKRM_DEF_CB_ARG(EV,fct,argtp)					\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: include/linux/ckrm_events.h:139:
+#define CKRM_DEF_CB_ARG(EV,fct,argtp)					\
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: include/linux/ckrm_events.h:142:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,(void*)arg);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: include/linux/ckrm_events.h:142:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,(void*)arg);^I\$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#216: FILE: include/linux/ckrm_events.h:142:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,(void*)arg);	\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: include/linux/ckrm_events.h:142:
+         ckrm_invoke_event_cb_chain(CKRM_EVENT_##EV,(void*)arg);	\
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: include/linux/ckrm_events.h:147:
+#define CKRM_DEF_CB(EV,fct)			\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: include/linux/ckrm_events.h:150:
+#define CKRM_DEF_CB_ARG(EV,fct,argtp)		\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: include/linux/ckrm_events.h:150:
+#define CKRM_DEF_CB_ARG(EV,fct,argtp)		\
                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: include/linux/ckrm_events.h:156:
+ *   define the CKRM event functions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: include/linux/ckrm_events.h:157:
+ *               EVENT          FCT           ARG         $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#255: FILE: include/linux/ckrm_events.h:181:
+void ckrm_cb_exit(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/linux/ckrm_events.h:187:
+extern int get_exe_path_name(struct task_struct *, char *, int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: init/Kconfig:150:
+^I  http://ckrm.sf.net. $

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#284: FILE: init/Kconfig:152:
+	  If you say Y here, enable the Resource Class File System and atleast
 	                                                               ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: init/Kconfig:153:
+^I  one of the resource controllers below. Say N if you are unsure. $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: kernel/ckrm/ckrm_events.c:1:
+/* ckrm_events.c - Class-based Kernel Resource Management (CKRM)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: kernel/ckrm/ckrm_events.c:6:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: kernel/ckrm/ckrm_events.c:7:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: kernel/ckrm/ckrm_events.c:12:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: kernel/ckrm/ckrm_events.c:24:
+ *  $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev < CKRM_LATCHABLE_EVENTS'
#339: FILE: kernel/ckrm/ckrm_events.c:43:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev >= CKRM_NONLATCHABLE_EVENTS'
#339: FILE: kernel/ckrm/ckrm_events.c:43:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cbptr"
#342: FILE: kernel/ckrm/ckrm_events.c:46:
+	while (*cbptr != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev < CKRM_LATCHABLE_EVENTS'
#352: FILE: kernel/ckrm/ckrm_events.c:56:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ev >= CKRM_NONLATCHABLE_EVENTS'
#352: FILE: kernel/ckrm/ckrm_events.c:56:
+	if ((ev < CKRM_LATCHABLE_EVENTS) || (ev >= CKRM_NONLATCHABLE_EVENTS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cbptr"
#355: FILE: kernel/ckrm/ckrm_events.c:59:
+	while ((*cbptr != NULL) && (*cbptr != cb))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cbptr"
#359: FILE: kernel/ckrm/ckrm_events.c:63:
+	return (*cbptr == NULL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#388: FILE: kernel/ckrm/ckrm_events.c:92:
+	if ((anchor = ckrm_event_callbacks[ev]) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: kernel/ckrm/Makefile:7:
+endif^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 11 warnings, 9 checks, 427 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226803.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
