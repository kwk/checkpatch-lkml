WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#59: FILE: drivers/char/ipmi/ipmi_msghandler.c:129:
+	/* My slave address.  This is initialized to IPMI_BMC_SLAVE_ADDR,
+	   but may be changed by the user. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#59: FILE: drivers/char/ipmi/ipmi_msghandler.c:129:
+	   but may be changed by the user. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#63: FILE: drivers/char/ipmi/ipmi_msghandler.c:133:
+	/* My LUN.  This should generally stay the SMS LUN, but just in
+	   case... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#63: FILE: drivers/char/ipmi/ipmi_msghandler.c:133:
+	   case... */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#228: FILE: drivers/char/ipmi/ipmi_msghandler.c:1443:
+	int        rv= 0;
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: drivers/char/ipmi/ipmi_msghandler.c:1445:
+	for (i=0; i<IPMI_MAX_CHANNELS; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#231: FILE: drivers/char/ipmi/ipmi_msghandler.c:1445:
+	for (i=0; i<IPMI_MAX_CHANNELS; i++)
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#232: FILE: drivers/char/ipmi/ipmi_msghandler.c:1446:
+		rv += sprintf(out+rv, "%x ", intf->channels[i].address);
 		                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#233: FILE: drivers/char/ipmi/ipmi_msghandler.c:1447:
+	out[rv-1] = '\n'; /* Replace the final space with a newline */
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#260: FILE: drivers/char/ipmi/ipmi_msghandler.c:1748:
+			for (j=0; j<IPMI_MAX_CHANNELS; j++) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#260: FILE: drivers/char/ipmi/ipmi_msghandler.c:1748:
+			for (j=0; j<IPMI_MAX_CHANNELS; j++) {
 			           ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#262: FILE: drivers/char/ipmi/ipmi_msghandler.c:1750:
+				new_intf->channels[j].address
+					= IPMI_BMC_SLAVE_ADDR;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#317: FILE: drivers/char/ipmi/ipmi_msghandler.c:3050:
 		    && (intf->event_receiver != 0)
+		    && (intf->event_receiver != intf->channels[0].address))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#356: FILE: include/linux/ipmi.h:301:
+   it for everyone else.  Note that each channel can have its own address. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#377: FILE: include/linux/ipmi.h:595:
+struct ipmi_channel_lun_address_set
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#381: FILE: include/linux/ipmi.h:599:
+#define IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD _IOR(IPMI_IOC_MAGIC, 24, struct ipmi_channel_lun_address_set)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#381: FILE: include/linux/ipmi.h:599:
+};
+#define IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD _IOR(IPMI_IOC_MAGIC, 24, struct ipmi_channel_lun_address_set)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#382: FILE: include/linux/ipmi.h:600:
+#define IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD _IOR(IPMI_IOC_MAGIC, 25, struct ipmi_channel_lun_address_set)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#383: FILE: include/linux/ipmi.h:601:
+#define IPMICTL_SET_MY_CHANNEL_LUN_CMD	   _IOR(IPMI_IOC_MAGIC, 26, struct ipmi_channel_lun_address_set)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#384: FILE: include/linux/ipmi.h:602:
+#define IPMICTL_GET_MY_CHANNEL_LUN_CMD	   _IOR(IPMI_IOC_MAGIC, 27, struct ipmi_channel_lun_address_set)

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#473: FILE: drivers/char/ipmi/ipmi_devintf.c:487:
+		return ipmi_set_my_address(priv->user, val.channel, val.value);
+		break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162768.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 10 warnings, 5 checks, 446 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162768.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
