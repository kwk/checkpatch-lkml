WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#128: FILE: drivers/char/tpm/tpm.c:310:
+EXPORT_SYMBOL_GPL(show_pubek);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#146: FILE: drivers/char/tpm/tpm.c:364:
+EXPORT_SYMBOL_GPL(show_caps);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/char/tpm/tpm.c:367:
+ssize_t store_cancel(struct device *dev, const char *buf,
+			    size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: drivers/char/tpm/tpm.c:370:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#152: FILE: drivers/char/tpm/tpm.c:370:
+	if (chip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#165: FILE: drivers/char/tpm/tpm.c:383:
+EXPORT_SYMBOL_GPL(store_cancel);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/char/tpm/tpm.c:561:
+^Ifor ( i = 0; i < TPM_NUM_ATTR; i++ ) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#184: FILE: drivers/char/tpm/tpm.c:561:
+	for ( i = 0; i < TPM_NUM_ATTR; i++ ) 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#184: FILE: drivers/char/tpm/tpm.c:561:
+	for ( i = 0; i < TPM_NUM_ATTR; i++ ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/char/tpm/tpm.c:684:
+^Ifor ( i = 0; i < TPM_NUM_ATTR; i++ ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#197: FILE: drivers/char/tpm/tpm.c:684:
+	for ( i = 0; i < TPM_NUM_ATTR; i++ ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#197: FILE: drivers/char/tpm/tpm.c:684:
+	for ( i = 0; i < TPM_NUM_ATTR; i++ ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/char/tpm/tpm.c:685:
+^I^Idevice_create_file(dev, &chip->vendor->attr[i]);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/char/tpm/tpm.c:686:
+^I^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: drivers/char/tpm/tpm.h:34:
+extern ssize_t show_pubek(struct device *, char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#216: FILE: drivers/char/tpm/tpm.h:34:
+extern ssize_t show_pubek(struct device *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#216: FILE: drivers/char/tpm/tpm.h:34:
+extern ssize_t show_pubek(struct device *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: drivers/char/tpm/tpm.h:35:
+extern ssize_t show_pcrs(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#217: FILE: drivers/char/tpm/tpm.h:35:
+extern ssize_t show_pcrs(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#217: FILE: drivers/char/tpm/tpm.h:35:
+extern ssize_t show_pcrs(struct device *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#218: FILE: drivers/char/tpm/tpm.h:36:
+extern ssize_t show_caps(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#218: FILE: drivers/char/tpm/tpm.h:36:
+extern ssize_t show_caps(struct device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#218: FILE: drivers/char/tpm/tpm.h:36:
+extern ssize_t show_caps(struct device *, char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: drivers/char/tpm/tpm.h:37:
+extern ssize_t store_cancel(struct device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#219: FILE: drivers/char/tpm/tpm.h:37:
+extern ssize_t store_cancel(struct device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#219: FILE: drivers/char/tpm/tpm.h:37:
+extern ssize_t store_cancel(struct device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#219: FILE: drivers/char/tpm/tpm.h:37:
+extern ssize_t store_cancel(struct device *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#222: FILE: drivers/char/tpm/tpm.h:40:
+	__ATTR(pubek, S_IRUGO, show_pubek, NULL), \

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#223: FILE: drivers/char/tpm/tpm.h:41:
+	__ATTR(pcrs, S_IRUGO, show_pcrs, NULL), \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#224: FILE: drivers/char/tpm/tpm.h:42:
+	__ATTR(caps, S_IRUGO, show_caps, NULL), \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#225: FILE: drivers/char/tpm/tpm.h:43:
+	__ATTR(cancel, S_IWUSR | S_IWGRP, NULL, store_cancel) }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207929.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 17 warnings, 6 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207929.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
