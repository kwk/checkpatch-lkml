WARNING:TYPO_SPELLING: 'challanged' may be misspelled - perhaps 'challenged'?
#33: 
> Can you please post diffs wrt. 2.6.x kernels for the bitkeeper challanged
                                                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/linux/kgdb.h:26:
+extern void breakpoint(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/linux/kgdb.h:27:
+extern void kgdb_process_breakpoint(void);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#233: FILE: include/linux/kgdb.h:28:
+extern volatile int kgdb_connected;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#245: FILE: include/linux/kgdb.h:37:
+extern volatile int kgdb_connected;

ERROR:SPACING: space required before the open parenthesis '('
#255: FILE: include/linux/kgdb.h:125:
+#define kgdb_process_breakpoint()	do {} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#306: FILE: kernel/kgdbstub.c:171:
+static volatile int procindebug[KGDB_MAX_NO_CPUS];

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: kernel/kgdbstub.c:261:
+	printk("%s : %s\n", __func__, buffer);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: kernel/kgdbstub.c:276:
+	printk("%s : %s\n", __func__, buffer);

CHECK:BRACES: Unbalanced braces around else statement
#432: FILE: kernel/kgdbstub.c:537:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#433: FILE: kernel/kgdbstub.c:538:
+			printk("Breakpoint %d is state %d and addr %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: kernel/kgdbstub.c:539:
+			printk("Breakpoint %d is state %d and addr %08lx\n",
+					i, kgdb_break[i].state,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#444: FILE: kernel/kgdbstub.c:549:
+	printk("%s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#444: FILE: kernel/kgdbstub.c:549:
+	printk("%s\n", __func__);

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#467: FILE: kernel/kgdbstub.c:683:
+	/* If kgdb is connected, then an exception has occured, and
 	                                               ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: kernel/kgdbstub.c:684:
+	 * we need to pass something back to GDB. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <remcomOutBuffer>
#482: FILE: kernel/kgdbstub.c:706:
+		putpacket(remcomOutBuffer);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: kernel/kgdbstub.c:738:
+			ptr = kgdb_mem2hex((char *)&linux_regs->PTRACE_PC, ptr,
+					4, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: kernel/kgdbstub.c:744:
+			ptr = kgdb_mem2hex(((char *)linux_regs) + SP_REGNUM * 4,
+					ptr, 4, 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#536: FILE: kernel/kgdbstub.c:836:
+		 * our breakpoints and get back to 'normal'. */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#545: FILE: kernel/kgdbstub.c:840:
+			/* fall through. */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#547: FILE: kernel/kgdbstub.c:842:
+		 * just stop debugging. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#573: FILE: kernel/kgdbstub.c:1002:
+					printk("bpt_type == bp_breakpoint");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#576: FILE: kernel/kgdbstub.c:1004:
+					printk(": %d\n", ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#578: FILE: kernel/kgdbstub.c:1006:
+					printk("bpt_type != bp_breakpoint");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#581: FILE: kernel/kgdbstub.c:1009:
+					printk(": %d\n", ret);

CHECK:CAMELCASE: Avoid CamelCase: <exVector>
#597: FILE: kernel/kgdbstub.c:1021:
+			if (kgdb_arch_handle_exception(exVector, signo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: kernel/kgdbstub.c:1022:
+			if (kgdb_arch_handle_exception(exVector, signo,
+						err_code, remcomInBuffer,

CHECK:CAMELCASE: Avoid CamelCase: <remcomInBuffer>
#598: FILE: kernel/kgdbstub.c:1022:
+						err_code, remcomInBuffer,

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#601: FILE: kernel/kgdbstub.c:1025:
+				/* An error occured. */
 				            ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#678: FILE: kernel/kgdbstub.c:1180:
+         * to avoid reentrancy issues$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#681: FILE: kernel/kgdbstub.c:1183:
+		printk("Making a break\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 20 warnings, 10 checks, 588 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
