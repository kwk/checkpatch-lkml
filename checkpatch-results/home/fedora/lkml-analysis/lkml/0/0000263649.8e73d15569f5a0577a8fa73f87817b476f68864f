WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
The patch adds the write_forcelock() methord, which has higher priority than

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#31: 
The patch gives implemention on i386, for kernel 2.6.7.
                ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#47: FILE: include/asm-i386/rwlock.h:83:
+#define __build_write_forcelock_ptr(rw) \
+    asm volatile(LOCK "subl $" RW_LOCK_BIAS_STR ",(%0)\n\t" \
+             "jnz 2f\n" \
+             "1:\n" \
+             LOCK_SECTION_START("") \
+             "2:\t" \
+             "rep;nop\n\t" \
+             "cmpl $0,(%0)\n\t" \
+             "jnz 2b\n\t" \
+             "jmp 1b\n" \
+             LOCK_SECTION_END \
+             ::"a" (rw) : "memory")

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: include/asm-i386/rwlock.h:84:
+    asm volatile(LOCK "subl $" RW_LOCK_BIAS_STR ",(%0)\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: include/asm-i386/rwlock.h:85:
+             "jnz 2f\n" \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: include/asm-i386/rwlock.h:85:
+             "jnz 2f\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: include/asm-i386/rwlock.h:86:
+             "1:\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: include/asm-i386/rwlock.h:86:
+             "1:\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: include/asm-i386/rwlock.h:87:
+             LOCK_SECTION_START("") \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: include/asm-i386/rwlock.h:87:
+             LOCK_SECTION_START("") \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: include/asm-i386/rwlock.h:88:
+             "2:\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: include/asm-i386/rwlock.h:88:
+             "2:\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: include/asm-i386/rwlock.h:89:
+             "rep;nop\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: include/asm-i386/rwlock.h:89:
+             "rep;nop\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: include/asm-i386/rwlock.h:90:
+             "cmpl $0,(%0)\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: include/asm-i386/rwlock.h:90:
+             "cmpl $0,(%0)\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: include/asm-i386/rwlock.h:91:
+             "jnz 2b\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: include/asm-i386/rwlock.h:91:
+             "jnz 2b\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: include/asm-i386/rwlock.h:92:
+             "jmp 1b\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: include/asm-i386/rwlock.h:92:
+             "jmp 1b\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: include/asm-i386/rwlock.h:93:
+             LOCK_SECTION_END \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: include/asm-i386/rwlock.h:93:
+             LOCK_SECTION_END \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: include/asm-i386/rwlock.h:94:
+             ::"a" (rw) : "memory")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: include/asm-i386/rwlock.h:94:
+             ::"a" (rw) : "memory")$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#60: FILE: include/asm-i386/rwlock.h:96:
+#define __build_write_forcelock_const(rw) \
+    asm volatile(LOCK "subl $" RW_LOCK_BIAS_STR ",%0\n\t" \
+             "jnz 2f\n" \
+             "1:\n" \
+             LOCK_SECTION_START("") \
+             "2:\t" \
+             "rep;nop\n\t" \
+             "cmpl $0,%0\n\t" \
+             "jnz 2b\n\t" \
+             "jmp 1b\n" \
+             LOCK_SECTION_END \
+             :"=m" (*(volatile int *)rw) : : "memory")

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/asm-i386/rwlock.h:97:
+    asm volatile(LOCK "subl $" RW_LOCK_BIAS_STR ",%0\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: include/asm-i386/rwlock.h:98:
+             "jnz 2f\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: include/asm-i386/rwlock.h:98:
+             "jnz 2f\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: include/asm-i386/rwlock.h:99:
+             "1:\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: include/asm-i386/rwlock.h:99:
+             "1:\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: include/asm-i386/rwlock.h:100:
+             LOCK_SECTION_START("") \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: include/asm-i386/rwlock.h:100:
+             LOCK_SECTION_START("") \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: include/asm-i386/rwlock.h:101:
+             "2:\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: include/asm-i386/rwlock.h:101:
+             "2:\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: include/asm-i386/rwlock.h:102:
+             "rep;nop\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: include/asm-i386/rwlock.h:102:
+             "rep;nop\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: include/asm-i386/rwlock.h:103:
+             "cmpl $0,%0\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/asm-i386/rwlock.h:103:
+             "cmpl $0,%0\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: include/asm-i386/rwlock.h:104:
+             "jnz 2b\n\t" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: include/asm-i386/rwlock.h:104:
+             "jnz 2b\n\t" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: include/asm-i386/rwlock.h:105:
+             "jmp 1b\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/asm-i386/rwlock.h:105:
+             "jmp 1b\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: include/asm-i386/rwlock.h:106:
+             LOCK_SECTION_END \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: include/asm-i386/rwlock.h:106:
+             LOCK_SECTION_END \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: include/asm-i386/rwlock.h:107:
+             :"=m" (*(volatile int *)rw) : : "memory")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: include/asm-i386/rwlock.h:107:
+             :"=m" (*(volatile int *)rw) : : "memory")$

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#71: FILE: include/asm-i386/rwlock.h:107:
+             :"=m" (*(volatile int *)rw) : : "memory")
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#71: FILE: include/asm-i386/rwlock.h:107:
+             :"=m" (*(volatile int *)rw) : : "memory")

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rw' - possible side-effects?
#73: FILE: include/asm-i386/rwlock.h:109:
+#define __build_write_forcelock(rw)    do { \
+                        if (__builtin_constant_p(rw)) \
+                            __build_write_forcelock_const(rw); \
+                        else \
+                            __build_write_forcelock_ptr(rw); \
+                    } while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: include/asm-i386/rwlock.h:110:
+                        if (__builtin_constant_p(rw)) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: include/asm-i386/rwlock.h:110:
+                        if (__builtin_constant_p(rw)) \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#74: FILE: include/asm-i386/rwlock.h:110:
+                        if (__builtin_constant_p(rw)) \
+                            __build_write_forcelock_const(rw); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: include/asm-i386/rwlock.h:111:
+                            __build_write_forcelock_const(rw); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: include/asm-i386/rwlock.h:111:
+                            __build_write_forcelock_const(rw); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: include/asm-i386/rwlock.h:112:
+                        else \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: include/asm-i386/rwlock.h:112:
+                        else \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#76: FILE: include/asm-i386/rwlock.h:112:
+                        else \
+                            __build_write_forcelock_ptr(rw); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: include/asm-i386/rwlock.h:113:
+                            __build_write_forcelock_ptr(rw); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: include/asm-i386/rwlock.h:113:
+                            __build_write_forcelock_ptr(rw); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: include/asm-i386/rwlock.h:114:
+                    } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: include/asm-i386/rwlock.h:114:
+                    } while (0)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: include/asm-i386/rwlock.h:115:
+                             $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: include/asm-i386/rwlock.h:115:
+                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: include/asm-i386/rwlock.h:115:
+                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/asm-i386/spinlock.h:142:
+    spinlock_t forcelock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#91: FILE: include/asm-i386/spinlock.h:142:
+    spinlock_t forcelock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#97: FILE: include/asm-i386/spinlock.h:148:
+#define RWLOCK_FORCELOCK    , {1 SPINLOCK_MAGIC_INIT}
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#97: FILE: include/asm-i386/spinlock.h:148:
+#define RWLOCK_FORCELOCK    , {1 SPINLOCK_MAGIC_INIT}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: include/asm-i386/spinlock.h:157:
+#define RW_LOCK_UNLOCKED (rwlock_t) { RW_LOCK_BIAS RWLOCK_FORCELOCK $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#106: FILE: include/asm-i386/spinlock.h:157:
+#define RW_LOCK_UNLOCKED (rwlock_t) { RW_LOCK_BIAS RWLOCK_FORCELOCK 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#107: FILE: include/asm-i386/spinlock.h:157:
RWLOCK_MAGIC_INIT }

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: include/asm-i386/spinlock.h:193:
+    BUG_ON(rw->magic != RWLOCK_MAGIC);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: include/asm-i386/spinlock.h:193:
+    BUG_ON(rw->magic != RWLOCK_MAGIC);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/asm-i386/spinlock.h:195:
+    _raw_spin_lock(&rw->forcelock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/asm-i386/spinlock.h:196:
+    __build_write_forcelock(rw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/asm-i386/spinlock.h:197:
+    _raw_spin_unlock(&rw->forcelock);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#141: FILE: include/linux/spinlock.h:235:
+do { \
+    preempt_disable(); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: include/linux/spinlock.h:236:
+    preempt_disable(); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: include/linux/spinlock.h:237:
+    _raw_write_forcelock(lock); \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#154: FILE: include/linux/spinlock.h:328:
+do { \
+    local_irq_save(flags); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/linux/spinlock.h:329:
+    local_irq_save(flags); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/spinlock.h:330:
+    preempt_disable(); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/spinlock.h:331:
+    _raw_write_forcelock(lock); \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#161: FILE: include/linux/spinlock.h:335:
+do { \
+    local_irq_disable(); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/spinlock.h:336:
+    local_irq_disable(); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: include/linux/spinlock.h:337:
+    preempt_disable(); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/spinlock.h:338:
+    _raw_write_forcelock(lock); \$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 4)
#168: FILE: include/linux/spinlock.h:342:
+do { \
+    local_bh_disable(); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/linux/spinlock.h:343:
+    local_bh_disable(); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: include/linux/spinlock.h:344:
+    preempt_disable(); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: include/linux/spinlock.h:345:
+    _raw_write_forcelock(lock); \$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263649.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 54 warnings, 2 checks, 116 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263649.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
