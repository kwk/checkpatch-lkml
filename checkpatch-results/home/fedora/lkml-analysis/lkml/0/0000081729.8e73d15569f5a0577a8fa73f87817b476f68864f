WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#31: 
Signed-Off-By: Chandra Seetharaman <sekharan@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#156: FILE: kernel/res_group/task.c:162:
+	BUG_ON(rgroup == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rgroup"
#156: FILE: kernel/res_group/task.c:162:
+	BUG_ON(rgroup == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: kernel/res_group/task.c:185:
+			list_entry(rgroup->task_list.next,
+				struct task_struct, member_list);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: include/linux/res_group.h:97:
+extern void init_task_res_group(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#200: FILE: include/linux/res_group.h:97:
+extern void init_task_res_group(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/linux/res_group.h:98:
+extern void clear_task_res_group(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#201: FILE: include/linux/res_group.h:98:
+extern void clear_task_res_group(struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: include/linux/res_group.h:99:
+extern void res_group_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: kernel/res_group/local.h:22:
+extern void move_tasks_to_parent(struct resource_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource_group *' should also have an identifier name
#217: FILE: kernel/res_group/local.h:22:
+extern void move_tasks_to_parent(struct resource_group *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 6 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
