WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	           ChangeSet	1.1122  -> 1.1123 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	drivers/ide/pci/Makefile	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	include/linux/pci_ids.h	1.66    -> 1.67   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	         MAINTAINERS	1.101   -> 1.102  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/ide/Config.in	1.34    -> 1.35   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#	Documentation/Configure.help	1.169   -> 1.170  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#	               (new)	        -> 1.1     drivers/ide/pci/sgiioc4.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#	               (new)	        -> 1.1     drivers/ide/pci/sgiioc4.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# 03/07/15	cw@taniwha.engr.sgi.com	1.1123

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# Add IDE driver for SGI's IOC4 hardware (found on Altix/SN2 systems)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#68: 
--- a/Documentation/Configure.help	Tue Jul 15 15:16:49 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#92: FILE: MAINTAINERS:895:
+P:	Aniket Malatpure
+M:	aniket@sgi.com

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#124: FILE: drivers/ide/pci/sgiioc4.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#144: FILE: drivers/ide/pci/sgiioc4.c:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#163: FILE: drivers/ide/pci/sgiioc4.c:40:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#173: FILE: drivers/ide/pci/sgiioc4.c:50:
+static u8 sgiioc4_proc = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#175: FILE: drivers/ide/pci/sgiioc4.c:52:
+static int n_sgiioc4_devs = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#177: FILE: drivers/ide/pci/sgiioc4.c:54:
+int sgiioc4_debug = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#179: FILE: drivers/ide/pci/sgiioc4.c:56:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#180: FILE: drivers/ide/pci/sgiioc4.c:57:
+extern int dma_timer_expiry(ide_drive_t * drive);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: drivers/ide/pci/sgiioc4.c:69:
+		printk(tempstr);

WARNING:RETURN_VOID: void function return statements are not generally useful
#206: FILE: drivers/ide/pci/sgiioc4.c:83:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: drivers/ide/pci/sgiioc4.c:109:
+		       sizeof (hwif->io_ports));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#243: FILE: drivers/ide/pci/sgiioc4.c:120:
+	if (dma_base) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: drivers/ide/pci/sgiioc4.c:123:
+		printk("%s: %s Bus-Master DMA disabled \n", hwif->name, name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#246: FILE: drivers/ide/pci/sgiioc4.c:123:
+		printk("%s: %s Bus-Master DMA disabled \n", hwif->name, name);

CHECK:SPACING: No space is necessary after a cast
#249: FILE: drivers/ide/pci/sgiioc4.c:126:
+	(void) ide_init_sgiioc4(hwif);

WARNING:RETURN_VOID: void function return statements are not generally useful
#251: FILE: drivers/ide/pci/sgiioc4.c:128:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: drivers/ide/pci/sgiioc4.c:157:
+sgiioc4_init_hwif_ports(hw_regs_t * hw, ide_ioreg_t data_port,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#286: FILE: drivers/ide/pci/sgiioc4.c:163:
+	for (i = IDE_DATA_OFFSET; i <= IDE_STATUS_OFFSET; i++) {
+		hw->io_ports[i] = reg + i * 4;	/* Registers are word (32 bit) aligned */
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#290: FILE: drivers/ide/pci/sgiioc4.c:167:
+	if (ctrl_port) {
+		hw->io_ports[IDE_CONTROL_OFFSET] = ctrl_port;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#294: FILE: drivers/ide/pci/sgiioc4.c:171:
+	if (irq_port) {
+		hw->io_ports[IDE_IRQ_OFFSET] = irq_port;
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#299: FILE: drivers/ide/pci/sgiioc4.c:176:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: drivers/ide/pci/sgiioc4.c:179:
+sgiioc4_resetproc(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#309: FILE: drivers/ide/pci/sgiioc4.c:186:
+sgiioc4_maskproc(ide_drive_t * drive, int mask)

WARNING:LINE_SPACING: Missing a blank line after declarations
#312: FILE: drivers/ide/pci/sgiioc4.c:189:
+	ide_hwif_t *hwif = HWIF(drive);
+	if (IDE_CONTROL_REG)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: drivers/ide/pci/sgiioc4.c:195:
+ide_init_sgiioc4(ide_hwif_t * hwif)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#333: FILE: drivers/ide/pci/sgiioc4.c:210:
+	hwif->resetproc = &sgiioc4_resetproc;	/* Reset the IOC4 DMA engine, clear interrupts etc */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:RETURN_VOID: void function return statements are not generally useful
#359: FILE: drivers/ide/pci/sgiioc4.c:236:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#362: FILE: drivers/ide/pci/sgiioc4.c:239:
+sgiioc4_ide_dma_read(ide_drive_t * drive)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#366: FILE: drivers/ide/pci/sgiioc4.c:243:
+#if 0

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#371: FILE: drivers/ide/pci/sgiioc4.c:248:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_FROMDEVICE))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#381: FILE: drivers/ide/pci/sgiioc4.c:258:
+#if 0

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#382: FILE: drivers/ide/pci/sgiioc4.c:259:
+	/* Hard Disks not supported on IOC4 as yet (05/22/2003) ... this code will be useful when Disks are supported */

WARNING:LINE_SPACING: Missing a blank line after declarations
#386: FILE: drivers/ide/pci/sgiioc4.c:263:
+		ide_task_t *args = rq->special;
+		command = args->tfRegister[IDE_COMMAND_OFFSET];

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#386: FILE: drivers/ide/pci/sgiioc4.c:263:
+		command = args->tfRegister[IDE_COMMAND_OFFSET];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#397: FILE: drivers/ide/pci/sgiioc4.c:274:
+sgiioc4_ide_dma_write(ide_drive_t * drive)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#401: FILE: drivers/ide/pci/sgiioc4.c:278:
+#if 0

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#406: FILE: drivers/ide/pci/sgiioc4.c:283:
+	if (!(count = sgiioc4_build_dma_table(drive, rq, PCI_DMA_TODEVICE))) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#417: FILE: drivers/ide/pci/sgiioc4.c:294:
+#if 0

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#418: FILE: drivers/ide/pci/sgiioc4.c:295:
+	/* Hard Disks not supported on IOC4 as yet (05/22/2003) ... this code will be useful when Disks are supported */

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: drivers/ide/pci/sgiioc4.c:299:
+		ide_task_t *args = rq->special;
+		command = args->tfRegister[IDE_COMMAND_OFFSET];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#433: FILE: drivers/ide/pci/sgiioc4.c:310:
+sgiioc4_ide_dma_begin(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#445: FILE: drivers/ide/pci/sgiioc4.c:322:
+sgiioc4_ide_dma_end(ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#449: FILE: drivers/ide/pci/sgiioc4.c:326:
+	uint64_t dma_base = hwif->dma_base;

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/ide/pci/sgiioc4.c:328:
+	unsigned long *ending_dma = (unsigned long *) hwif->dma_base2;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/ide/pci/sgiioc4.c:359:
+		printk(KERN_INFO "sgiioc4_ide_dma_end(%s) : Stale DMA \n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_ide_dma_end', this function's name, in a string
#482: FILE: drivers/ide/pci/sgiioc4.c:359:
+		printk(KERN_INFO "sgiioc4_ide_dma_end(%s) : Stale DMA \n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#482: FILE: drivers/ide/pci/sgiioc4.c:359:
+		printk(KERN_INFO "sgiioc4_ide_dma_end(%s) : Stale DMA \n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_ide_dma_end', this function's name, in a string
#492: FILE: drivers/ide/pci/sgiioc4.c:369:
+				"sgiioc4_ide_dma_end(%s) : WARNING!!! byte_count_at_dev %d != byte_count_at_mem %d\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#504: FILE: drivers/ide/pci/sgiioc4.c:381:
+sgiioc4_ide_dma_check(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#511: FILE: drivers/ide/pci/sgiioc4.c:388:
+sgiioc4_ide_dma_on(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#518: FILE: drivers/ide/pci/sgiioc4.c:395:
+sgiioc4_ide_dma_off(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#520: FILE: drivers/ide/pci/sgiioc4.c:397:
+	printk(KERN_INFO "%s: DMA disabled\n", drive->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: drivers/ide/pci/sgiioc4.c:402:
+sgiioc4_ide_dma_off_quietly(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#533: FILE: drivers/ide/pci/sgiioc4.c:410:
+sgiioc4_ide_dma_test_irq(ide_drive_t * drive)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#535: FILE: drivers/ide/pci/sgiioc4.c:412:
+	return (sgiioc4_checkirq(HWIF(drive)));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#539: FILE: drivers/ide/pci/sgiioc4.c:416:
+sgiioc4_ide_dma_host_on(ide_drive_t * drive)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#541: FILE: drivers/ide/pci/sgiioc4.c:418:
+	if (drive->using_dma) {
+		return 0;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#548: FILE: drivers/ide/pci/sgiioc4.c:425:
+sgiioc4_ide_dma_host_off(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#555: FILE: drivers/ide/pci/sgiioc4.c:432:
+sgiioc4_ide_dma_count(ide_drive_t * drive)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#561: FILE: drivers/ide/pci/sgiioc4.c:438:
+sgiioc4_ide_dma_verbose(ide_drive_t * drive)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#563: FILE: drivers/ide/pci/sgiioc4.c:440:
+	printk(", UDMA(16)");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#568: FILE: drivers/ide/pci/sgiioc4.c:445:
+sgiioc4_ide_dma_lostirq(ide_drive_t * drive)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "resetproc"
#570: FILE: drivers/ide/pci/sgiioc4.c:447:
+	if (HWIF(drive)->resetproc != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#576: FILE: drivers/ide/pci/sgiioc4.c:453:
+sgiioc4_ide_dma_timeout(ide_drive_t * drive)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#578: FILE: drivers/ide/pci/sgiioc4.c:455:
+	printk(KERN_ERR "%s: timeout waiting for DMA\n", drive->name);

CHECK:SPACING: No space is necessary after a cast
#587: FILE: drivers/ide/pci/sgiioc4.c:464:
+	u8 reg = (u8) inb(port);

CHECK:SPACING: No space is necessary after a cast
#592: FILE: drivers/ide/pci/sgiioc4.c:469:
+			unsigned int intr_reg = (u32) inl(other_ir);

CHECK:SPACING: No space is necessary after a cast
#597: FILE: drivers/ide/pci/sgiioc4.c:474:
+				intr_reg = (u32) inl(other_ir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#606: FILE: drivers/ide/pci/sgiioc4.c:483:
+ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#608: FILE: drivers/ide/pci/sgiioc4.c:485:
+	int num_ports = sizeof (ioc4_dma_regs_t);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_dma_sgiioc4', this function's name, in a string
#614: FILE: drivers/ide/pci/sgiioc4.c:491:
+			"ide_dma_sgiioc4(%s) -- Error, Port Addresses 0x%p to 0x%p ALREADY in use\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->dmatable_cpu"
#623: FILE: drivers/ide/pci/sgiioc4.c:500:
+	if (hwif->dmatable_cpu == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: drivers/ide/pci/sgiioc4.c:503:
+	hwif->sg_table = kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hwif->sg_table)...) over kmalloc(sizeof (struct scatterlist)...)
#626: FILE: drivers/ide/pci/sgiioc4.c:503:
+	hwif->sg_table = kmalloc(sizeof (struct scatterlist) * IOC4_PRD_ENTRIES,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->sg_table"
#628: FILE: drivers/ide/pci/sgiioc4.c:505:
+	if (hwif->sg_table == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: drivers/ide/pci/sgiioc4.c:512:
+
+

CHECK:SPACING: No space is necessary after a cast
#636: FILE: drivers/ide/pci/sgiioc4.c:513:
+	hwif->dma_base2 = (unsigned long) pci_alloc_consistent(hwif->pci_dev,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#638: FILE: drivers/ide/pci/sgiioc4.c:515:
+							       (dma_addr_t*)&(hwif->dma_status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hwif->dma_status
#638: FILE: drivers/ide/pci/sgiioc4.c:515:
+							       (dma_addr_t*)&(hwif->dma_status));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_dma_sgiioc4', this function's name, in a string
#641: FILE: drivers/ide/pci/sgiioc4.c:518:
+			"ide_dma_sgiioc4(%s) - Couldnot allocate map for Ending DMA \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#641: FILE: drivers/ide/pci/sgiioc4.c:518:
+			"ide_dma_sgiioc4(%s) - Couldnot allocate map for Ending DMA \n",

WARNING:INDENTED_LABEL: labels should not be indented
#647: FILE: drivers/ide/pci/sgiioc4.c:524:
+      dma_alloc_failure:

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ide_dma_sgiioc4', this function's name, in a string
#649: FILE: drivers/ide/pci/sgiioc4.c:526:
+		"ide_dma_sgiioc4() -- Error! Unable to allocate DMA tables for drive %s\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#655: FILE: drivers/ide/pci/sgiioc4.c:532:
+sgiioc4_config_drive_for_dma(ide_drive_t * drive)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#676: FILE: drivers/ide/pci/sgiioc4.c:553:
+		IDE_DBG(1, "Successfully set %s in Multimode-2 DMA mode \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#681: FILE: drivers/ide/pci/sgiioc4.c:558:
+			"Couldnot set %s in Multimode-2 DMA mode | status 0x%x | Drive %s using PIO \n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#686: FILE: drivers/ide/pci/sgiioc4.c:563:
+	return;
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#690: FILE: drivers/ide/pci/sgiioc4.c:567:
+sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#695: FILE: drivers/ide/pci/sgiioc4.c:572:
+	uint64_t dma_base = hwif->dma_base;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#720: FILE: drivers/ide/pci/sgiioc4.c:597:
+			"sgiioc4_configure_for__dma(%s) : Warning!! - DMA Error during Previous transfer | status 0x%x \n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#737: FILE: drivers/ide/pci/sgiioc4.c:614:
+		uint32_t dma_addr, ending_dma_addr;

CHECK:SPACING: No space is necessary after a cast
#745: FILE: drivers/ide/pci/sgiioc4.c:622:
+			memset((unsigned int *) hwif->dma_base2, 0,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#756: FILE: drivers/ide/pci/sgiioc4.c:633:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#759: FILE: drivers/ide/pci/sgiioc4.c:636:
+sgiioc4_dma_test_irq(ide_drive_t * drive)

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#776: FILE: drivers/ide/pci/sgiioc4.c:653:
+			stat = HWIF(drive)->INB(IDE_STATUS_REG);	/* Note: this may clear a pending IRQ!! */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: drivers/ide/pci/sgiioc4.c:663:
+sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq, int ddir)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#794: FILE: drivers/ide/pci/sgiioc4.c:671:
+		hwif->sg_nents = i = sgiioc4_ide_raw_build_sglist(hwif, rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#796: FILE: drivers/ide/pci/sgiioc4.c:673:
+		hwif->sg_nents = i = sgiioc4_ide_build_sglist(hwif, rq, ddir);

WARNING:LINE_SPACING: Missing a blank line after declarations
#804: FILE: drivers/ide/pci/sgiioc4.c:681:
+		int cur_len;
+		cur_addr = sg_dma_address(sg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#809: FILE: drivers/ide/pci/sgiioc4.c:686:
+				printk("%s: DMA table too small\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#813: FILE: drivers/ide/pci/sgiioc4.c:690:
+				uint32_t xcount, bcount =

WARNING:INDENTED_LABEL: labels should not be indented
#845: FILE: drivers/ide/pci/sgiioc4.c:722:
+      use_pio_instead:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#853: FILE: drivers/ide/pci/sgiioc4.c:730:
+sgiioc4_checkirq(ide_hwif_t * hwif)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#855: FILE: drivers/ide/pci/sgiioc4.c:732:
+	uint8_t intr_reg =

WARNING:BRACES: braces {} are not necessary for single statement blocks
#858: FILE: drivers/ide/pci/sgiioc4.c:735:
+	if (intr_reg & 0x03) {
+		return 1;
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#864: FILE: drivers/ide/pci/sgiioc4.c:741:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#867: FILE: drivers/ide/pci/sgiioc4.c:744:
+sgiioc4_clearirq(ide_drive_t * drive)

WARNING:LINE_SPACING: Missing a blank line after declarations
#880: FILE: drivers/ide/pci/sgiioc4.c:757:
+		int count = 0;
+		do {

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#882: FILE: drivers/ide/pci/sgiioc4.c:759:
+			stat = hwif->INB(IDE_STATUS_REG);	/* Removes Interrupt from IDE Device */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#887: FILE: drivers/ide/pci/sgiioc4.c:764:
+			uint32_t pci_err_addr_low, pci_err_addr_high,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_clearirq', this function's name, in a string
#897: FILE: drivers/ide/pci/sgiioc4.c:774:
+				"sgiioc4_clearirq(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#897: FILE: drivers/ide/pci/sgiioc4.c:774:
+				"sgiioc4_clearirq(%s) : PCI Bus Error when doing DMA : status-cmd reg is 0x%x \n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_clearirq', this function's name, in a string
#900: FILE: drivers/ide/pci/sgiioc4.c:777:
+				"sgiioc4_clearirq(%s) : PCI Error Address is 0x%x%x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#900: FILE: drivers/ide/pci/sgiioc4.c:777:
+				"sgiioc4_clearirq(%s) : PCI Error Address is 0x%x%x \n",

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: drivers/ide/pci/sgiioc4.c:792:
+ * ^I"Copied from drivers/ide/ide-dma.c"$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#921: FILE: drivers/ide/pci/sgiioc4.c:798:
+ *	Perform the PCI mapping magic neccessary to access the source or
   	                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#923: FILE: drivers/ide/pci/sgiioc4.c:800:
+ *	kernel provide the neccessary cache management so that we can
   	                   ^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#928: FILE: drivers/ide/pci/sgiioc4.c:805:
+sgiioc4_ide_build_sglist(ide_hwif_t * hwif, struct request *rq, int ddir)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#936: FILE: drivers/ide/pci/sgiioc4.c:813:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#946: FILE: drivers/ide/pci/sgiioc4.c:823:
+			if ((unsigned long) bh->b_data == lastdataend)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#959: FILE: drivers/ide/pci/sgiioc4.c:836:
+		memset(&sg[nents], 0, sizeof (*sg));

CHECK:SPACING: No space is necessary after a cast
#966: FILE: drivers/ide/pci/sgiioc4.c:843:
+			if ((unsigned long) bh->b_data < PAGE_SIZE)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#967: FILE: drivers/ide/pci/sgiioc4.c:844:
+				BUG();

CHECK:SPACING: No space is necessary after a cast
#970: FILE: drivers/ide/pci/sgiioc4.c:847:
+			lastdataend = (unsigned long) bh->b_data + bh->b_size;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#978: FILE: drivers/ide/pci/sgiioc4.c:855:
+		BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#985: FILE: drivers/ide/pci/sgiioc4.c:862:
+ * ^ICopied from drivers/ide/ide-dma.c$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#990: FILE: drivers/ide/pci/sgiioc4.c:867:
+ *	Perform the PCI mapping magic neccessary to access the source or
   	                              ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#992: FILE: drivers/ide/pci/sgiioc4.c:869:
+ *	of the  kernel provide the neccessary cache management so that we can
   	                           ^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#997: FILE: drivers/ide/pci/sgiioc4.c:874:
+sgiioc4_ide_raw_build_sglist(ide_hwif_t * hwif, struct request *rq)

WARNING:IF_1: Consider removing the #if 1 and its #endif
#1009: FILE: drivers/ide/pci/sgiioc4.c:886:
+#if 1

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1011: FILE: drivers/ide/pci/sgiioc4.c:888:
+		memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1018: FILE: drivers/ide/pci/sgiioc4.c:895:
+	memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1024: FILE: drivers/ide/pci/sgiioc4.c:901:
+		memset(&sg[nents], 0, sizeof (*sg));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1031: FILE: drivers/ide/pci/sgiioc4.c:908:
+	memset(&sg[nents], 0, sizeof (*sg));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1072: FILE: drivers/ide/pci/sgiioc4.c:949:
+static int __devinit

WARNING:LINE_SPACING: Missing a blank line after declarations
#1076: FILE: drivers/ide/pci/sgiioc4.c:953:
+	ide_pci_device_t *d = &sgiioc4_chipsets[id->driver_data];
+	if (dev->device != d->device) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sgiioc4_init_one', this function's name, in a string
#1077: FILE: drivers/ide/pci/sgiioc4.c:954:
+		IDE_DBG(0, "Error in sgiioc4_init_one(dev 0x%p | id 0x%p )\n",

CHECK:SPACING: No space is necessary after a cast
#1078: FILE: drivers/ide/pci/sgiioc4.c:955:
+			(void *) dev, (void *) id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1079: FILE: drivers/ide/pci/sgiioc4.c:956:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1081: FILE: drivers/ide/pci/sgiioc4.c:958:
+	printk(KERN_INFO "%s: IDE controller at PCI slot %s\n", d->name,

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1088: FILE: drivers/ide/pci/sgiioc4.c:965:
+static struct pci_device_id sgiioc4_pci_tbl[] __devinitdata = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1089: FILE: drivers/ide/pci/sgiioc4.c:966:
+static struct pci_device_id sgiioc4_pci_tbl[] __devinitdata = {
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1125: FILE: drivers/ide/pci/sgiioc4.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1145: FILE: drivers/ide/pci/sgiioc4.h:21:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hwif' - possible side-effects?
#1199: FILE: drivers/ide/pci/sgiioc4.h:75:
+#define ide_ack_intr(hwif)      ((hwif)->hw.ack_intr ? (hwif)->hw.ack_intr(hwif) : 1)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1223: FILE: drivers/ide/pci/sgiioc4.h:99:
+typedef volatile struct {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1223: FILE: drivers/ide/pci/sgiioc4.h:99:
+typedef volatile struct {

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#1238: FILE: drivers/ide/pci/sgiioc4.h:114:
+#define IOC4_PRD_ENTRIES     (PAGE_SIZE /IOC4_PRD_BYTES)
                                         ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1240: FILE: drivers/ide/pci/sgiioc4.h:116:
+typedef enum pciio_endian_e {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1245: FILE: drivers/ide/pci/sgiioc4.h:121:
+void sgiioc4_init_hwif_ports(hw_regs_t * hw, ide_ioreg_t data_port,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1247: FILE: drivers/ide/pci/sgiioc4.h:123:
+void sgiioc4_stopdma(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1249: FILE: drivers/ide/pci/sgiioc4.h:125:
+void sgiioc4_tuneproc(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1250: FILE: drivers/ide/pci/sgiioc4.h:126:
+void sgiioc4_resetproc(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1251: FILE: drivers/ide/pci/sgiioc4.h:127:
+void sgiioc4_maskproc(ide_drive_t * drive, int mask);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1252: FILE: drivers/ide/pci/sgiioc4.h:128:
+void sgiioc4_config_drive_for_dma(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1253: FILE: drivers/ide/pci/sgiioc4.h:129:
+void sgiioc4_configure_for_dma(int dma_direction, ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1254: FILE: drivers/ide/pci/sgiioc4.h:130:
+void __init ide_init_sgiioc4(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1255: FILE: drivers/ide/pci/sgiioc4.h:131:
+void __init ide_dma_sgiioc4(ide_hwif_t * hwif, unsigned long dma_base);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1256: FILE: drivers/ide/pci/sgiioc4.h:132:
+int sgiioc4_dma_test_irq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1257: FILE: drivers/ide/pci/sgiioc4.h:133:
+static int sgiioc4_checkirq(ide_hwif_t * hwif);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1258: FILE: drivers/ide/pci/sgiioc4.h:134:
+static int sgiioc4_clearirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1260: FILE: drivers/ide/pci/sgiioc4.h:136:
+static int sgiioc4_ide_dma_read(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1261: FILE: drivers/ide/pci/sgiioc4.h:137:
+static int sgiioc4_ide_dma_write(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1262: FILE: drivers/ide/pci/sgiioc4.h:138:
+static int sgiioc4_ide_dma_begin(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1263: FILE: drivers/ide/pci/sgiioc4.h:139:
+static int sgiioc4_ide_dma_end(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1264: FILE: drivers/ide/pci/sgiioc4.h:140:
+static int sgiioc4_ide_dma_check(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1265: FILE: drivers/ide/pci/sgiioc4.h:141:
+static int sgiioc4_ide_dma_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1266: FILE: drivers/ide/pci/sgiioc4.h:142:
+static int sgiioc4_ide_dma_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1267: FILE: drivers/ide/pci/sgiioc4.h:143:
+static int sgiioc4_ide_dma_off_quietly(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1268: FILE: drivers/ide/pci/sgiioc4.h:144:
+static int sgiioc4_ide_dma_test_irq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1269: FILE: drivers/ide/pci/sgiioc4.h:145:
+static int sgiioc4_ide_dma_host_on(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1270: FILE: drivers/ide/pci/sgiioc4.h:146:
+static int sgiioc4_ide_dma_host_off(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1271: FILE: drivers/ide/pci/sgiioc4.h:147:
+static int sgiioc4_ide_dma_count(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1272: FILE: drivers/ide/pci/sgiioc4.h:148:
+static int sgiioc4_ide_dma_verbose(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1273: FILE: drivers/ide/pci/sgiioc4.h:149:
+static int sgiioc4_ide_dma_lostirq(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1274: FILE: drivers/ide/pci/sgiioc4.h:150:
+static int sgiioc4_ide_dma_timeout(ide_drive_t * drive);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1275: FILE: drivers/ide/pci/sgiioc4.h:151:
+static int sgiioc4_ide_build_sglist(ide_hwif_t * hwif, struct request *rq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1277: FILE: drivers/ide/pci/sgiioc4.h:153:
+static int sgiioc4_ide_raw_build_sglist(ide_hwif_t * hwif, struct request *rq);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1282: FILE: drivers/ide/pci/sgiioc4.h:158:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1282: FILE: drivers/ide/pci/sgiioc4.h:158:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#1282: FILE: drivers/ide/pci/sgiioc4.h:158:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#1282: FILE: drivers/ide/pci/sgiioc4.h:158:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1282: FILE: drivers/ide/pci/sgiioc4.h:158:
+extern int (*sgiioc4_display_info) (char *, char **, off_t, int);	/* ide-proc.c */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1283: FILE: drivers/ide/pci/sgiioc4.h:159:
+unsigned int sgiioc4_build_dma_table(ide_drive_t * drive, struct request *rq,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1286: FILE: drivers/ide/pci/sgiioc4.h:162:
+ide_startstop_t ioc4_dma_intr(ide_drive_t * drive);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1288: FILE: drivers/ide/pci/sgiioc4.h:164:
+static ide_pci_device_t sgiioc4_chipsets[] __devinitdata = {

WARNING:TABSTOP: Statements should start on a tabstop
#1302: FILE: drivers/ide/pci/sgiioc4.h:178:
+	 }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354399.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 70 errors, 108 warnings, 31 checks, 1222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354399.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
