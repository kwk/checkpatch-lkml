WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
reseting it if enabled.  This allows more subsystems to hook into the NMI if

WARNING:TYPO_SPELLING: 'reseting' may be misspelled - perhaps 'resetting'?
#28: 
reseting it if enabled.  This allows more subsystems to hook into the NMI if
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#32: 
Signed-off-by:  Don Zickus <dzickus@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#43: FILE: arch/i386/kernel/nmi.c:783:
+int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#43: FILE: arch/i386/kernel/nmi.c:783:
+int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#43: FILE: arch/i386/kernel/nmi.c:783:
+int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#51: FILE: arch/i386/kernel/nmi.c:796:
+	int rc=0;
 	      ^

CHECK:BRACES: Unbalanced braces around else statement
#72: FILE: arch/i386/kernel/nmi.c:861:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#73: FILE: arch/i386/kernel/nmi.c:862:
+			printk(KERN_WARNING "Unknown enabled NMI hardware?!\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#89: FILE: arch/i386/kernel/traps.c:676:
+static int dummy_nmi_callback(struct pt_regs * regs, int cpu)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: arch/x86_64/kernel/nmi.c:686:
+int __kprobes nmi_watchdog_tick(struct pt_regs * regs, unsigned reason)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: arch/x86_64/kernel/nmi.c:686:
+int __kprobes nmi_watchdog_tick(struct pt_regs * regs, unsigned reason)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#154: FILE: arch/x86_64/kernel/nmi.c:692:
+	int rc=0;
 	      ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: arch/x86_64/kernel/nmi.c:753:
+^I^I} else ^Iif (nmi_watchdog == NMI_IO_APIC) {$

CHECK:BRACES: Unbalanced braces around else statement
#175: FILE: arch/x86_64/kernel/nmi.c:759:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#176: FILE: arch/x86_64/kernel/nmi.c:760:
+			printk(KERN_WARNING "Unknown enabled NMI hardware?!\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: arch/x86_64/kernel/nmi.c:781:
+int do_nmi_callback(struct pt_regs * regs, int cpu)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: arch/x86_64/kernel/traps.c:660:
+		if (nmi_watchdog_tick(regs,reason))
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: arch/x86_64/kernel/traps.c:662:
+		if (!do_nmi_callback(regs,cpu))
 		                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#236: FILE: include/asm-i386/nmi.h:40:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: include/asm-i386/nmi.h:40:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: include/asm-i386/nmi.h:40:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: include/asm-i386/nmi.h:40:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#264: FILE: include/asm-x86_64/nmi.h:79:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#264: FILE: include/asm-x86_64/nmi.h:79:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: include/asm-x86_64/nmi.h:79:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: include/asm-x86_64/nmi.h:79:
+extern int nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 13 warnings, 4 checks, 196 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
