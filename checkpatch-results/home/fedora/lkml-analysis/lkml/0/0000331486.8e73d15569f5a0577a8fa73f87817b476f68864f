CHECK:SPACING: No space is necessary after a cast
#64: FILE: fs/compat_ioctl.c:142:
+	if(get_user(val, (u32 *) compat_ptr(arg)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#64: FILE: fs/compat_ioctl.c:142:
+	if(get_user(val, (u32 *) compat_ptr(arg)))

CHECK:SPACING: No space is necessary after a cast
#70: FILE: fs/compat_ioctl.c:147:
+	if (!err && put_user(val, (u32 *) compat_ptr(arg)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: fs/compat_ioctl.c:757:
+		struct in6_rtmsg32 *ur6 = compat_ptr(arg);
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: fs/compat_ioctl.c:757:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_dst
#265: FILE: fs/compat_ioctl.c:757:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: fs/compat_ioctl.c:758:
+		ret = copy_from_user (&r6.rtmsg_dst, &(ur6->rtmsg_dst),
 			3 * sizeof(struct in6_addr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: fs/compat_ioctl.c:759:
+		ret |= __get_user (r6.rtmsg_type, &(ur6->rtmsg_type));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_type
#274: FILE: fs/compat_ioctl.c:759:
+		ret |= __get_user (r6.rtmsg_type, &(ur6->rtmsg_type));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: fs/compat_ioctl.c:760:
+		ret |= __get_user (r6.rtmsg_dst_len, &(ur6->rtmsg_dst_len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_dst_len
#275: FILE: fs/compat_ioctl.c:760:
+		ret |= __get_user (r6.rtmsg_dst_len, &(ur6->rtmsg_dst_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: fs/compat_ioctl.c:761:
+		ret |= __get_user (r6.rtmsg_src_len, &(ur6->rtmsg_src_len));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_src_len
#276: FILE: fs/compat_ioctl.c:761:
+		ret |= __get_user (r6.rtmsg_src_len, &(ur6->rtmsg_src_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: fs/compat_ioctl.c:762:
+		ret |= __get_user (r6.rtmsg_metric, &(ur6->rtmsg_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_metric
#277: FILE: fs/compat_ioctl.c:762:
+		ret |= __get_user (r6.rtmsg_metric, &(ur6->rtmsg_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: fs/compat_ioctl.c:763:
+		ret |= __get_user (r6.rtmsg_info, &(ur6->rtmsg_info));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_info
#278: FILE: fs/compat_ioctl.c:763:
+		ret |= __get_user (r6.rtmsg_info, &(ur6->rtmsg_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: fs/compat_ioctl.c:764:
+		ret |= __get_user (r6.rtmsg_flags, &(ur6->rtmsg_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_flags
#279: FILE: fs/compat_ioctl.c:764:
+		ret |= __get_user (r6.rtmsg_flags, &(ur6->rtmsg_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: fs/compat_ioctl.c:765:
+		ret |= __get_user (r6.rtmsg_ifindex, &(ur6->rtmsg_ifindex));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur6->rtmsg_ifindex
#280: FILE: fs/compat_ioctl.c:765:
+		ret |= __get_user (r6.rtmsg_ifindex, &(ur6->rtmsg_ifindex));

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: fs/compat_ioctl.c:770:
+		struct rtentry32 *ur4 = compat_ptr(arg);
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: fs/compat_ioctl.c:770:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_dst
#292: FILE: fs/compat_ioctl.c:770:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: fs/compat_ioctl.c:771:
+		ret = copy_from_user (&r4.rt_dst, &(ur4->rt_dst),
+					3 * sizeof(struct sockaddr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: fs/compat_ioctl.c:772:
+		ret |= __get_user (r4.rt_flags, &(ur4->rt_flags));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_flags
#294: FILE: fs/compat_ioctl.c:772:
+		ret |= __get_user (r4.rt_flags, &(ur4->rt_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: fs/compat_ioctl.c:773:
+		ret |= __get_user (r4.rt_metric, &(ur4->rt_metric));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_metric
#295: FILE: fs/compat_ioctl.c:773:
+		ret |= __get_user (r4.rt_metric, &(ur4->rt_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: fs/compat_ioctl.c:774:
+		ret |= __get_user (r4.rt_mtu, &(ur4->rt_mtu));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_mtu
#296: FILE: fs/compat_ioctl.c:774:
+		ret |= __get_user (r4.rt_mtu, &(ur4->rt_mtu));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: fs/compat_ioctl.c:775:
+		ret |= __get_user (r4.rt_window, &(ur4->rt_window));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_window
#297: FILE: fs/compat_ioctl.c:775:
+		ret |= __get_user (r4.rt_window, &(ur4->rt_window));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: fs/compat_ioctl.c:776:
+		ret |= __get_user (r4.rt_irtt, &(ur4->rt_irtt));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_irtt
#298: FILE: fs/compat_ioctl.c:776:
+		ret |= __get_user (r4.rt_irtt, &(ur4->rt_irtt));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: fs/compat_ioctl.c:777:
+		ret |= __get_user (rtdev, &(ur4->rt_dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ur4->rt_dev
#299: FILE: fs/compat_ioctl.c:777:
+		ret |= __get_user (rtdev, &(ur4->rt_dev));

CHECK:SPACING: No space is necessary after a cast
#308: FILE: fs/compat_ioctl.c:791:
+	ret = sys_ioctl (fd, cmd, (unsigned long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: fs/compat_ioctl.c:791:
+	ret = sys_ioctl (fd, cmd, (unsigned long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#326: FILE: fs/compat_ioctl.c:819:
+		err = copy_to_user (ugeo, &geo, 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: fs/compat_ioctl.c:820:
+		err |= __put_user (geo.start, &ugeo->start);

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: fs/compat_ioctl.c:1384:
+^I^I^I    ^I^I   + sizeof(uinfo32->debug),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: fs/compat_ioctl.c:1384:
+^I^I^I    ^I^I   + sizeof(uinfo32->debug),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: fs/compat_ioctl.c:1539:
+^I^I        8 + (unsigned long)l.lo_init - (unsigned long)&l.lo_offset);$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#639: FILE: fs/compat_ioctl.c:1664:
+static int do_kdfontop_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg, struct file *file)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: fs/compat_ioctl.c:1939:
+                if (copy_from_user(&p, up32, sizeof(struct blkpg_partition)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: fs/compat_ioctl.c:1939:
+                if (copy_from_user(&p, up32, sizeof(struct blkpg_partition)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: fs/compat_ioctl.c:1963:
+       return sys_ioctl(fd, BLKBSZGET, (unsigned long)compat_ptr(arg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: fs/compat_ioctl.c:1968:
+       return sys_ioctl(fd, BLKBSZSET, (unsigned long)compat_ptr(arg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: fs/compat_ioctl.c:1974:
+       return sys_ioctl(fd, BLKGETSIZE64, (unsigned long)compat_ptr(arg));$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#841: FILE: fs/compat_ioctl.c:2161:
+			err |= __copy_from_user(&f->max_errors, &uf->max_errors, sizeof(f->max_errors));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#844: FILE: fs/compat_ioctl.c:2164:
+			err |= __copy_from_user(f->autodetect, uf->autodetect, sizeof(f->autodetect));

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#855: FILE: fs/compat_ioctl.c:2211:
+			err |= __put_user((u64)f->name, (compat_caddr_t*)&((struct floppy_struct32 *)arg)->name);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#855: FILE: fs/compat_ioctl.c:2211:
+			err |= __put_user((u64)f->name, (compat_caddr_t*)&((struct floppy_struct32 *)arg)->name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#896: FILE: fs/compat_ioctl.c:2233:
+			err |= __copy_to_user(&uf->max_errors, &f->max_errors, sizeof(f->max_errors));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1015: FILE: fs/compat_ioctl.c:2366:
+static int vfat_ioctl32(unsigned fd, unsigned cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1015: FILE: fs/compat_ioctl.c:2366:
+static int vfat_ioctl32(unsigned fd, unsigned cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1035: FILE: fs/compat_ioctl.c:2447:
+static int raw_ioctl(unsigned fd, unsigned cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1035: FILE: fs/compat_ioctl.c:2447:
+static int raw_ioctl(unsigned fd, unsigned cmd, unsigned long arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1044: FILE: fs/compat_ioctl.c:2455:
+                struct raw32_config_request *user_req = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1044: FILE: fs/compat_ioctl.c:2455:
+                struct raw32_config_request *user_req = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: fs/compat_ioctl.c:2471:
+                ret = sys_ioctl(fd, cmd, arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: fs/compat_ioctl.c:2471:
+                ret = sys_ioctl(fd, cmd, arg);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1066: FILE: fs/compat_ioctl.c:2499:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1066: FILE: fs/compat_ioctl.c:2499:
+static int serial_struct_ioctl(unsigned fd, unsigned cmd, unsigned long arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1071: FILE: fs/compat_ioctl.c:2503:
+        struct serial_struct32 *ss32 = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: fs/compat_ioctl.c:2503:
+        struct serial_struct32 *ss32 = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1080: FILE: fs/compat_ioctl.c:2557:
+        uctrl = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: fs/compat_ioctl.c:2557:
+        uctrl = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: fs/compat_ioctl.c:2878:
+            put_user((u32)(u64)kptr, (u32 *)compat_ptr(arg)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: fs/compat_ioctl.c:2878:
+            put_user((u32)(u64)kptr, (u32 *)compat_ptr(arg)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1116: FILE: fs/compat_ioctl.c:2899:
+        udis = compat_ptr(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1116: FILE: fs/compat_ioctl.c:2899:
+        udis = compat_ptr(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: fs/compat_ioctl.c:2905:
+        kdis.context = compat_ptr(uctx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: fs/compat_ioctl.c:2905:
+        kdis.context = compat_ptr(uctx);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: include/linux/compat_ioctl.h:6:
+#define COMPATIBLE_IOCTL(cmd)  HANDLE_IOCTL((cmd),(ioctl_trans_handler_t)sys_ioctl)
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1139: FILE: include/linux/compat_ioctl.h:10:
+#define ULONG_IOCTL(cmd)  HANDLE_IOCTL((cmd),(ioctl_trans_handler_t)sys_ioctl)
                                             ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 43 warnings, 20 checks, 1311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000331486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
