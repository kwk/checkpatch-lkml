WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
diff -urN linux-2.5.67/include/asm-s390/posix_types.h linux-2.5.67-s390/include/asm-s390/posix_types.h

WARNING:NEW_TYPEDEFS: do not add new typedefs
#79: FILE: include/asm-s390/posix_types.h:32:
+typedef long long       __kernel_loff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#84: FILE: include/asm-s390/posix_types.h:37:
+typedef unsigned short  __kernel_dev_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#85: FILE: include/asm-s390/posix_types.h:38:
+typedef unsigned long   __kernel_ino_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#86: FILE: include/asm-s390/posix_types.h:39:
+typedef unsigned short  __kernel_mode_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#87: FILE: include/asm-s390/posix_types.h:40:
+typedef unsigned short  __kernel_nlink_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#88: FILE: include/asm-s390/posix_types.h:41:
+typedef unsigned short  __kernel_ipc_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#89: FILE: include/asm-s390/posix_types.h:42:
+typedef unsigned short  __kernel_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#90: FILE: include/asm-s390/posix_types.h:43:
+typedef unsigned short  __kernel_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#91: FILE: include/asm-s390/posix_types.h:44:
+typedef int             __kernel_ssize_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#92: FILE: include/asm-s390/posix_types.h:45:
+typedef int             __kernel_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#104: FILE: include/asm-s390/posix_types.h:53:
+typedef unsigned int    __kernel_dev_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#105: FILE: include/asm-s390/posix_types.h:54:
+typedef unsigned int    __kernel_ino_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#106: FILE: include/asm-s390/posix_types.h:55:
+typedef unsigned int    __kernel_mode_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#107: FILE: include/asm-s390/posix_types.h:56:
+typedef unsigned int    __kernel_nlink_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#108: FILE: include/asm-s390/posix_types.h:57:
+typedef int             __kernel_ipc_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#109: FILE: include/asm-s390/posix_types.h:58:
+typedef unsigned int    __kernel_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#110: FILE: include/asm-s390/posix_types.h:59:
+typedef unsigned int    __kernel_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#111: FILE: include/asm-s390/posix_types.h:60:
+typedef long            __kernel_ssize_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#112: FILE: include/asm-s390/posix_types.h:61:
+typedef long            __kernel_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#113: FILE: include/asm-s390/posix_types.h:62:
+typedef unsigned long   __kernel_sigset_t;      /* at least 32 bits */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#114: FILE: include/asm-s390/posix_types.h:63:
+typedef __kernel_uid_t __kernel_old_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#115: FILE: include/asm-s390/posix_types.h:64:
+typedef __kernel_gid_t __kernel_old_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#116: FILE: include/asm-s390/posix_types.h:65:
+typedef __kernel_uid_t __kernel_uid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#117: FILE: include/asm-s390/posix_types.h:66:
+typedef __kernel_gid_t __kernel_gid32_t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: include/asm-s390/processor.h:48:
+        unsigned long *pmd_quick;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/asm-s390/processor.h:48:
+        unsigned long *pmd_quick;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: include/asm-s390/processor.h:86:
+        unsigned int ar4;               /* kernel access register 4         */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: include/asm-s390/processor.h:86:
+        unsigned int ar4;               /* kernel access register 4         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: include/asm-s390/processor.h:87:
+        unsigned long ksp;              /* kernel stack pointer             */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/asm-s390/processor.h:87:
+        unsigned long ksp;              /* kernel stack pointer             */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: include/asm-s390/processor.h:88:
+        unsigned long user_seg;         /* HSTD                             */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: include/asm-s390/processor.h:88:
+        unsigned long user_seg;         /* HSTD                             */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: include/asm-s390/processor.h:89:
+        unsigned long prot_addr;        /* address of protection-excep.     */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: include/asm-s390/processor.h:89:
+        unsigned long prot_addr;        /* address of protection-excep.     */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: include/asm-s390/processor.h:90:
+        unsigned int error_code;        /* error-code of last prog-excep.   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/asm-s390/processor.h:90:
+        unsigned int error_code;        /* error-code of last prog-excep.   */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: include/asm-s390/processor.h:91:
+        unsigned int trap_no;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: include/asm-s390/processor.h:91:
+        unsigned int trap_no;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: include/asm-s390/processor.h:92:
+        per_struct per_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: include/asm-s390/processor.h:92:
+        per_struct per_info;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: include/asm-s390/processor.h:94:
+^Iunsigned long ieee_instruction_pointer; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#212: FILE: include/asm-s390/processor.h:102:
+# define __SWAPPER_PG_DIR __pa(&swapper_pg_dir[0]) + _SEGMENT_TABLE

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#214: FILE: include/asm-s390/processor.h:104:
+# define __SWAPPER_PG_DIR __pa(&swapper_pg_dir[0]) + _REGION_TABLE

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#217: FILE: include/asm-s390/processor.h:107:
+#define INIT_THREAD {{0,{{0},{0},{0},{0},{0},{0},{0},{0},{0},{0},	       \
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: include/asm-s390/processor.h:108:
+			    {0},{0},{0},{0},{0},{0}}},			       \
 			       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: include/asm-s390/processor.h:108:
+			    {0},{0},{0},{0},{0},{0}}},			       \
 			           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: include/asm-s390/processor.h:108:
+			    {0},{0},{0},{0},{0},{0}}},			       \
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: include/asm-s390/processor.h:108:
+			    {0},{0},{0},{0},{0},{0}}},			       \
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: include/asm-s390/processor.h:108:
+			    {0},{0},{0},{0},{0},{0}}},			       \
 			                       ^

CHECK:SPACING: No space is necessary after a cast
#220: FILE: include/asm-s390/processor.h:110:
+		     sizeof(init_stack) + (unsigned long) &init_stack,	       \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: include/asm-s390/processor.h:112:
+		     0,0,0,						       \
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: include/asm-s390/processor.h:112:
+		     0,0,0,						       \
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: include/asm-s390/processor.h:113:
+		     (per_struct) {{{{0,}}},0,0,0,0,{{0,}}},		       \
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: include/asm-s390/processor.h:113:
+		     (per_struct) {{{{0,}}},0,0,0,0,{{0,}}},		       \
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: include/asm-s390/processor.h:113:
+		     (per_struct) {{{{0,}}},0,0,0,0,{{0,}}},		       \
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: include/asm-s390/processor.h:113:
+		     (per_struct) {{{{0,}}},0,0,0,0,{{0,}}},		       \
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: include/asm-s390/processor.h:113:
+		     (per_struct) {{{{0,}}},0,0,0,0,{{0,}}},		       \
 		                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: include/asm-s390/processor.h:115:
+} $

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: include/asm-s390/processor.h:124:
+        regs->psw.addr  = new_psw | PSW_ADDR_AMODE;             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: include/asm-s390/processor.h:124:
+        regs->psw.addr  = new_psw | PSW_ADDR_AMODE;             \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#242: FILE: include/asm-s390/processor.h:130:
+#define start_thread(regs, new_psw, new_stackp) do {            \
+        regs->psw.mask  = PSW_USER_BITS;                        \
+        regs->psw.addr  = new_psw;                              \
+        regs->gprs[15]  = new_stackp;                           \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#242: FILE: include/asm-s390/processor.h:130:
+#define start_thread(regs, new_psw, new_stackp) do {            \
+        regs->psw.mask  = PSW_USER_BITS;                        \
+        regs->psw.addr  = new_psw;                              \
+        regs->gprs[15]  = new_stackp;                           \
+} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: include/asm-s390/processor.h:131:
+        regs->psw.mask  = PSW_USER_BITS;                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: include/asm-s390/processor.h:131:
+        regs->psw.mask  = PSW_USER_BITS;                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: include/asm-s390/processor.h:132:
+        regs->psw.addr  = new_psw;                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/asm-s390/processor.h:132:
+        regs->psw.addr  = new_psw;                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: include/asm-s390/processor.h:133:
+        regs->gprs[15]  = new_stackp;                           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: include/asm-s390/processor.h:133:
+        regs->gprs[15]  = new_stackp;                           \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#248: FILE: include/asm-s390/processor.h:136:
+#define start_thread31(regs, new_psw, new_stackp) do {          \
+	regs->psw.mask  = PSW_USER32_BITS;			\
+        regs->psw.addr  = new_psw;                              \
+        regs->gprs[15]  = new_stackp;                           \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#248: FILE: include/asm-s390/processor.h:136:
+#define start_thread31(regs, new_psw, new_stackp) do {          \
+	regs->psw.mask  = PSW_USER32_BITS;			\
+        regs->psw.addr  = new_psw;                              \
+        regs->gprs[15]  = new_stackp;                           \
+} while (0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: include/asm-s390/processor.h:138:
+        regs->psw.addr  = new_psw;                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: include/asm-s390/processor.h:138:
+        regs->psw.addr  = new_psw;                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: include/asm-s390/processor.h:139:
+        regs->gprs[15]  = new_stackp;                           \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: include/asm-s390/processor.h:139:
+        regs->gprs[15]  = new_stackp;                           \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: include/asm-s390/processor.h:167:
+        (((unsigned long) tsk->thread_info + THREAD_SIZE - sizeof(struct pt_regs)) & -8L))$

CHECK:SPACING: No space is necessary after a cast
#264: FILE: include/asm-s390/processor.h:167:
+        (((unsigned long) tsk->thread_info + THREAD_SIZE - sizeof(struct pt_regs)) & -8L))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: include/asm-s390/processor.h:167:
+        (((unsigned long) tsk->thread_info + THREAD_SIZE - sizeof(struct pt_regs)) & -8L))$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#273: FILE: include/asm-s390/processor.h:175:
+# define cpu_relax()	asm volatile ("diag 0,0,68" : : : "memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#275: FILE: include/asm-s390/processor.h:177:
+# define cpu_relax() \
+	asm volatile ("ex 0,%0" : : "i" (__LC_DIAG44_OPCODE) : "memory")

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#295: FILE: include/asm-s390/processor.h:202:
+	asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#300: FILE: include/asm-s390/processor.h:207:
+		: "=&d" (addr) : "a" (&psw) : "memory", "cc" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#318: FILE: include/asm-s390/processor.h:231:
+	asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#323: FILE: include/asm-s390/processor.h:236:
+		: "=&a" (reg) : "a" (&wait_psw) : "memory", "cc" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: include/asm-s390/processor.h:275:
+        asm volatile ("    stctg 0,0,0(%1)\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: include/asm-s390/processor.h:275:
+        asm volatile ("    stctg 0,0,0(%1)\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: include/asm-s390/processor.h:276:
+                      "    ni    4(%1),0xef\n" /* switch off protection */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: include/asm-s390/processor.h:276:
+                      "    ni    4(%1),0xef\n" /* switch off protection */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: include/asm-s390/processor.h:277:
+                      "    lctlg 0,0,0(%1)\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: include/asm-s390/processor.h:277:
+                      "    lctlg 0,0,0(%1)\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: include/asm-s390/processor.h:278:
+                      "    lghi  1,0x1000\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: include/asm-s390/processor.h:278:
+                      "    lghi  1,0x1000\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: include/asm-s390/processor.h:279:
+                      "    stpt  0x328(1)\n"      /* store timer */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: include/asm-s390/processor.h:279:
+                      "    stpt  0x328(1)\n"      /* store timer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: include/asm-s390/processor.h:280:
+                      "    stckc 0x330(1)\n"      /* store clock comparator */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: include/asm-s390/processor.h:280:
+                      "    stckc 0x330(1)\n"      /* store clock comparator */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: include/asm-s390/processor.h:281:
+                      "    stpx  0x318(1)\n"      /* store prefix register */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: include/asm-s390/processor.h:281:
+                      "    stpx  0x318(1)\n"      /* store prefix register */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: include/asm-s390/processor.h:282:
+                      "    stam  0,15,0x340(1)\n" /* store access registers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: include/asm-s390/processor.h:282:
+                      "    stam  0,15,0x340(1)\n" /* store access registers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: include/asm-s390/processor.h:283:
+                      "    stfpc 0x31c(1)\n"      /* store fpu control */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: include/asm-s390/processor.h:283:
+                      "    stfpc 0x31c(1)\n"      /* store fpu control */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: include/asm-s390/processor.h:284:
+                      "    std   0,0x200(1)\n"    /* store f0 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: include/asm-s390/processor.h:284:
+                      "    std   0,0x200(1)\n"    /* store f0 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: include/asm-s390/processor.h:285:
+                      "    std   1,0x208(1)\n"    /* store f1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: include/asm-s390/processor.h:285:
+                      "    std   1,0x208(1)\n"    /* store f1 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: include/asm-s390/processor.h:286:
+                      "    std   2,0x210(1)\n"    /* store f2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: include/asm-s390/processor.h:286:
+                      "    std   2,0x210(1)\n"    /* store f2 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: include/asm-s390/processor.h:287:
+                      "    std   3,0x218(1)\n"    /* store f3 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: include/asm-s390/processor.h:287:
+                      "    std   3,0x218(1)\n"    /* store f3 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: include/asm-s390/processor.h:288:
+                      "    std   4,0x220(1)\n"    /* store f4 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: include/asm-s390/processor.h:288:
+                      "    std   4,0x220(1)\n"    /* store f4 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: include/asm-s390/processor.h:289:
+                      "    std   5,0x228(1)\n"    /* store f5 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: include/asm-s390/processor.h:289:
+                      "    std   5,0x228(1)\n"    /* store f5 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: include/asm-s390/processor.h:290:
+                      "    std   6,0x230(1)\n"    /* store f6 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: include/asm-s390/processor.h:290:
+                      "    std   6,0x230(1)\n"    /* store f6 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: include/asm-s390/processor.h:291:
+                      "    std   7,0x238(1)\n"    /* store f7 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: include/asm-s390/processor.h:291:
+                      "    std   7,0x238(1)\n"    /* store f7 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: include/asm-s390/processor.h:292:
+                      "    std   8,0x240(1)\n"    /* store f8 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: include/asm-s390/processor.h:292:
+                      "    std   8,0x240(1)\n"    /* store f8 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: include/asm-s390/processor.h:293:
+                      "    std   9,0x248(1)\n"    /* store f9 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: include/asm-s390/processor.h:293:
+                      "    std   9,0x248(1)\n"    /* store f9 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: include/asm-s390/processor.h:294:
+                      "    std   10,0x250(1)\n"   /* store f10 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: include/asm-s390/processor.h:294:
+                      "    std   10,0x250(1)\n"   /* store f10 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: include/asm-s390/processor.h:295:
+                      "    std   11,0x258(1)\n"   /* store f11 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: include/asm-s390/processor.h:295:
+                      "    std   11,0x258(1)\n"   /* store f11 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: include/asm-s390/processor.h:296:
+                      "    std   12,0x260(1)\n"   /* store f12 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: include/asm-s390/processor.h:296:
+                      "    std   12,0x260(1)\n"   /* store f12 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: include/asm-s390/processor.h:297:
+                      "    std   13,0x268(1)\n"   /* store f13 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: include/asm-s390/processor.h:297:
+                      "    std   13,0x268(1)\n"   /* store f13 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: include/asm-s390/processor.h:298:
+                      "    std   14,0x270(1)\n"   /* store f14 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: include/asm-s390/processor.h:298:
+                      "    std   14,0x270(1)\n"   /* store f14 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: include/asm-s390/processor.h:299:
+                      "    std   15,0x278(1)\n"   /* store f15 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/asm-s390/processor.h:299:
+                      "    std   15,0x278(1)\n"   /* store f15 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: include/asm-s390/processor.h:300:
+                      "    stmg  0,15,0x280(1)\n" /* store general registers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: include/asm-s390/processor.h:300:
+                      "    stmg  0,15,0x280(1)\n" /* store general registers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: include/asm-s390/processor.h:301:
+                      "    stctg 0,15,0x380(1)\n" /* store control registers */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: include/asm-s390/processor.h:301:
+                      "    stctg 0,15,0x380(1)\n" /* store control registers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: include/asm-s390/processor.h:302:
+                      "    oi    0x384(1),0x10\n" /* fake protection bit */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: include/asm-s390/processor.h:302:
+                      "    oi    0x384(1),0x10\n" /* fake protection bit */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: include/asm-s390/processor.h:303:
+                      "    lpswe 0(%0)"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: include/asm-s390/processor.h:303:
+                      "    lpswe 0(%0)"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: include/asm-s390/processor.h:304:
+                      : : "a" (dw_psw), "a" (&ctl_buf) : "cc", "0", "1");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: include/asm-s390/processor.h:304:
+                      : : "a" (dw_psw), "a" (&ctl_buf) : "cc", "0", "1");$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#456: FILE: include/asm-s390/ptrace.h:161:
+#define PT_ENDREGS  0x1B0-1
                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#456: FILE: include/asm-s390/ptrace.h:161:
+#define PT_ENDREGS  0x1B0-1

WARNING:NEW_TYPEDEFS: do not add new typedefs
#485: FILE: include/asm-s390/ptrace.h:189:
+typedef union

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#486: FILE: include/asm-s390/ptrace.h:190:
+typedef union
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: include/asm-s390/ptrace.h:193:
+        __u64   ui;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: include/asm-s390/ptrace.h:193:
+        __u64   ui;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#491: FILE: include/asm-s390/ptrace.h:195:
+	struct
+	{

WARNING:NEW_TYPEDEFS: do not add new typedefs
#497: FILE: include/asm-s390/ptrace.h:201:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#498: FILE: include/asm-s390/ptrace.h:202:
+typedef struct
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: include/asm-s390/ptrace.h:204:
+^Ifreg_t  fprs[NUM_FPRS];              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: include/asm-s390/ptrace.h:216:
+        unsigned long mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: include/asm-s390/ptrace.h:216:
+        unsigned long mask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: include/asm-s390/ptrace.h:217:
+        unsigned long addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: include/asm-s390/ptrace.h:217:
+        unsigned long addr;$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#624: FILE: include/asm-s390/ptrace.h:305:
+} __attribute__ ((packed));

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#641: FILE: include/asm-s390/ptrace.h:320:
+	unsigned                       : 32;
 	                               ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#675: FILE: include/asm-s390/ptrace.h:354:
+	unsigned                         : 3;
 	                                 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#686: FILE: include/asm-s390/ptrace.h:363:
+	unsigned                         : 4;
 	                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: include/asm-s390/ptrace.h:454:
+^Iunsigned long ieee_instruction_pointer; $

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: include/asm-s390/setup.h:23:
+#define IPL_DEVICE        (*(unsigned long *)  (0x10400))

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: include/asm-s390/setup.h:24:
+#define INITRD_START      (*(unsigned long *)  (0x10408))

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: include/asm-s390/setup.h:25:
+#define INITRD_SIZE       (*(unsigned long *)  (0x10410))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: include/asm-s390/sigcontext.h:27:
+#define _SIGCONTEXT_NSIG_BPW^I64 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1132: FILE: include/asm-s390/signal.h:179:
+        unsigned long sa_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: include/asm-s390/signal.h:179:
+        unsigned long sa_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1133: FILE: include/asm-s390/signal.h:180:
+        void (*sa_restorer)(void);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: include/asm-s390/signal.h:180:
+        void (*sa_restorer)(void);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1165: FILE: include/asm-s390/sigp.h:96:
+signal_processor_p(unsigned long parameter,__u16 cpu_addr,
                                           ^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1204: FILE: include/asm-s390/sigp.h:138:
+		"    sgr    2,2\n"        /* clear status so it doesn't contain rubbish if not saved. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1263: FILE: include/asm-s390/spinlock.h:42:
+	volatile unsigned int lock;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1264: FILE: include/asm-s390/spinlock.h:43:
+} __attribute__ ((aligned (4))) spinlock_t;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1264: FILE: include/asm-s390/spinlock.h:43:
+} __attribute__ ((aligned (4))) spinlock_t;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: include/asm-s390/spinlock.h:64:
+        __asm__ __volatile("    bras  %1,1f\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: include/asm-s390/spinlock.h:64:
+        __asm__ __volatile("    bras  %1,1f\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1284: FILE: include/asm-s390/spinlock.h:65:
+                           "0:  " __DIAG44_INSN " 0,%4\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: include/asm-s390/spinlock.h:65:
+                           "0:  " __DIAG44_INSN " 0,%4\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1285: FILE: include/asm-s390/spinlock.h:66:
+                           "1:  slr   %0,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: include/asm-s390/spinlock.h:66:
+                           "1:  slr   %0,%0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1286: FILE: include/asm-s390/spinlock.h:67:
+                           "    cs    %0,%1,0(%3)\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: include/asm-s390/spinlock.h:67:
+                           "    cs    %0,%1,0(%3)\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: include/asm-s390/spinlock.h:68:
+                           "    jl    0b\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: include/asm-s390/spinlock.h:68:
+                           "    jl    0b\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1288: FILE: include/asm-s390/spinlock.h:69:
+                           : "=&d" (reg1), "=&d" (reg2), "+m" (lp->lock)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: include/asm-s390/spinlock.h:69:
+                           : "=&d" (reg1), "=&d" (reg2), "+m" (lp->lock)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1289: FILE: include/asm-s390/spinlock.h:70:
+                           : "a" (&lp->lock), "i" (__DIAG44_OPERAND)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: include/asm-s390/spinlock.h:70:
+                           : "a" (&lp->lock), "i" (__DIAG44_OPERAND)$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1290: FILE: include/asm-s390/spinlock.h:71:
+			   : "cc" );

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1317: FILE: include/asm-s390/spinlock.h:132:
+#define _raw_read_lock(rw)   \
+        asm volatile("   lg    2,0(%1)\n"   \
+                     "   j     1f\n"     \
+                     "0: " __DIAG44_INSN " 0,%2\n" \
+                     "1: nihh  2,0x7fff\n" /* clear high (=write) bit */ \
+                     "   la    3,1(2)\n"   /* one more reader */  \
+                     "   csg   2,3,0(%1)\n" /* try to write new value */ \
+                     "   jl    0b"       \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rw' - possible side-effects?
#1317: FILE: include/asm-s390/spinlock.h:132:
+#define _raw_read_lock(rw)   \
+        asm volatile("   lg    2,0(%1)\n"   \
+                     "   j     1f\n"     \
+                     "0: " __DIAG44_INSN " 0,%2\n" \
+                     "1: nihh  2,0x7fff\n" /* clear high (=write) bit */ \
+                     "   la    3,1(2)\n"   /* one more reader */  \
+                     "   csg   2,3,0(%1)\n" /* try to write new value */ \
+                     "   jl    0b"       \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1318: FILE: include/asm-s390/spinlock.h:133:
+        asm volatile("   lg    2,0(%1)\n"   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1318: FILE: include/asm-s390/spinlock.h:133:
+        asm volatile("   lg    2,0(%1)\n"   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1319: FILE: include/asm-s390/spinlock.h:134:
+                     "   j     1f\n"     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1319: FILE: include/asm-s390/spinlock.h:134:
+                     "   j     1f\n"     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1320: FILE: include/asm-s390/spinlock.h:135:
+                     "0: " __DIAG44_INSN " 0,%2\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1320: FILE: include/asm-s390/spinlock.h:135:
+                     "0: " __DIAG44_INSN " 0,%2\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1321: FILE: include/asm-s390/spinlock.h:136:
+                     "1: nihh  2,0x7fff\n" /* clear high (=write) bit */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1321: FILE: include/asm-s390/spinlock.h:136:
+                     "1: nihh  2,0x7fff\n" /* clear high (=write) bit */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: include/asm-s390/spinlock.h:137:
+                     "   la    3,1(2)\n"   /* one more reader */  \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: include/asm-s390/spinlock.h:137:
+                     "   la    3,1(2)\n"   /* one more reader */  \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: include/asm-s390/spinlock.h:138:
+                     "   csg   2,3,0(%1)\n" /* try to write new value */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: include/asm-s390/spinlock.h:138:
+                     "   csg   2,3,0(%1)\n" /* try to write new value */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: include/asm-s390/spinlock.h:139:
+                     "   jl    0b"       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: include/asm-s390/spinlock.h:139:
+                     "   jl    0b"       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1325: FILE: include/asm-s390/spinlock.h:140:
+                     : "+m" ((rw)->lock) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: include/asm-s390/spinlock.h:140:
+                     : "+m" ((rw)->lock) \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1327: FILE: include/asm-s390/spinlock.h:142:
+		     : "2", "3", "cc" )

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1339: FILE: include/asm-s390/spinlock.h:157:
+#define _raw_read_unlock(rw) \
+        asm volatile("   lg    2,0(%1)\n"   \
+                     "   j     1f\n"     \
+                     "0: " __DIAG44_INSN " 0,%2\n" \
+                     "1: lgr   3,2\n"    \
+                     "   bctgr 3,0\n"    /* one less reader */ \
+                     "   csg   2,3,0(%1)\n" \
+                     "   jl    0b"       \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rw' - possible side-effects?
#1339: FILE: include/asm-s390/spinlock.h:157:
+#define _raw_read_unlock(rw) \
+        asm volatile("   lg    2,0(%1)\n"   \
+                     "   j     1f\n"     \
+                     "0: " __DIAG44_INSN " 0,%2\n" \
+                     "1: lgr   3,2\n"    \
+                     "   bctgr 3,0\n"    /* one less reader */ \
+                     "   csg   2,3,0(%1)\n" \
+                     "   jl    0b"       \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1340: FILE: include/asm-s390/spinlock.h:158:
+        asm volatile("   lg    2,0(%1)\n"   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: include/asm-s390/spinlock.h:158:
+        asm volatile("   lg    2,0(%1)\n"   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1341: FILE: include/asm-s390/spinlock.h:159:
+                     "   j     1f\n"     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: include/asm-s390/spinlock.h:159:
+                     "   j     1f\n"     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1342: FILE: include/asm-s390/spinlock.h:160:
+                     "0: " __DIAG44_INSN " 0,%2\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: include/asm-s390/spinlock.h:160:
+                     "0: " __DIAG44_INSN " 0,%2\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1343: FILE: include/asm-s390/spinlock.h:161:
+                     "1: lgr   3,2\n"    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: include/asm-s390/spinlock.h:161:
+                     "1: lgr   3,2\n"    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1344: FILE: include/asm-s390/spinlock.h:162:
+                     "   bctgr 3,0\n"    /* one less reader */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: include/asm-s390/spinlock.h:162:
+                     "   bctgr 3,0\n"    /* one less reader */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: include/asm-s390/spinlock.h:163:
+                     "   csg   2,3,0(%1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: include/asm-s390/spinlock.h:163:
+                     "   csg   2,3,0(%1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: include/asm-s390/spinlock.h:164:
+                     "   jl    0b"       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: include/asm-s390/spinlock.h:164:
+                     "   jl    0b"       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: include/asm-s390/spinlock.h:165:
+                     : "+m" ((rw)->lock) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: include/asm-s390/spinlock.h:165:
+                     : "+m" ((rw)->lock) \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1349: FILE: include/asm-s390/spinlock.h:167:
+		     : "2", "3", "cc" )

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1361: FILE: include/asm-s390/spinlock.h:182:
+#define _raw_write_lock(rw) \
+        asm volatile("   llihh 3,0x8000\n" /* new lock value = 0x80...0 */ \
+                     "   j     1f\n"       \
+                     "0: " __DIAG44_INSN " 0,%2\n"   \
+                     "1: slgr  2,2\n"      /* old lock value must be 0 */ \
+                     "   csg   2,3,0(%1)\n" \
+                     "   jl    0b"         \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rw' - possible side-effects?
#1361: FILE: include/asm-s390/spinlock.h:182:
+#define _raw_write_lock(rw) \
+        asm volatile("   llihh 3,0x8000\n" /* new lock value = 0x80...0 */ \
+                     "   j     1f\n"       \
+                     "0: " __DIAG44_INSN " 0,%2\n"   \
+                     "1: slgr  2,2\n"      /* old lock value must be 0 */ \
+                     "   csg   2,3,0(%1)\n" \
+                     "   jl    0b"         \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1362: FILE: include/asm-s390/spinlock.h:183:
+        asm volatile("   llihh 3,0x8000\n" /* new lock value = 0x80...0 */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: include/asm-s390/spinlock.h:183:
+        asm volatile("   llihh 3,0x8000\n" /* new lock value = 0x80...0 */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1363: FILE: include/asm-s390/spinlock.h:184:
+                     "   j     1f\n"       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: include/asm-s390/spinlock.h:184:
+                     "   j     1f\n"       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1364: FILE: include/asm-s390/spinlock.h:185:
+                     "0: " __DIAG44_INSN " 0,%2\n"   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: include/asm-s390/spinlock.h:185:
+                     "0: " __DIAG44_INSN " 0,%2\n"   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1365: FILE: include/asm-s390/spinlock.h:186:
+                     "1: slgr  2,2\n"      /* old lock value must be 0 */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: include/asm-s390/spinlock.h:186:
+                     "1: slgr  2,2\n"      /* old lock value must be 0 */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: include/asm-s390/spinlock.h:187:
+                     "   csg   2,3,0(%1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: include/asm-s390/spinlock.h:187:
+                     "   csg   2,3,0(%1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: include/asm-s390/spinlock.h:188:
+                     "   jl    0b"         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: include/asm-s390/spinlock.h:188:
+                     "   jl    0b"         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: include/asm-s390/spinlock.h:189:
+                     : "+m" ((rw)->lock) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: include/asm-s390/spinlock.h:189:
+                     : "+m" ((rw)->lock) \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1370: FILE: include/asm-s390/spinlock.h:191:
+		     : "2", "3", "cc" )

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1382: FILE: include/asm-s390/spinlock.h:206:
+#define _raw_write_unlock(rw) \
+        asm volatile("   slgr  3,3\n"      /* new lock value = 0 */ \
+                     "   j     1f\n"       \
+                     "0: " __DIAG44_INSN " 0,%2\n"   \
+                     "1: llihh 2,0x8000\n" /* old lock value must be 0x8..0 */\
+                     "   csg   2,3,0(%1)\n"   \
+                     "   jl    0b"         \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rw' - possible side-effects?
#1382: FILE: include/asm-s390/spinlock.h:206:
+#define _raw_write_unlock(rw) \
+        asm volatile("   slgr  3,3\n"      /* new lock value = 0 */ \
+                     "   j     1f\n"       \
+                     "0: " __DIAG44_INSN " 0,%2\n"   \
+                     "1: llihh 2,0x8000\n" /* old lock value must be 0x8..0 */\
+                     "   csg   2,3,0(%1)\n"   \
+                     "   jl    0b"         \
+                     : "+m" ((rw)->lock) \
+		     : "a" (&(rw)->lock), "i" (__DIAG44_OPERAND) \
+		     : "2", "3", "cc" )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1383: FILE: include/asm-s390/spinlock.h:207:
+        asm volatile("   slgr  3,3\n"      /* new lock value = 0 */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: include/asm-s390/spinlock.h:207:
+        asm volatile("   slgr  3,3\n"      /* new lock value = 0 */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: include/asm-s390/spinlock.h:208:
+                     "   j     1f\n"       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: include/asm-s390/spinlock.h:208:
+                     "   j     1f\n"       \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: include/asm-s390/spinlock.h:209:
+                     "0: " __DIAG44_INSN " 0,%2\n"   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: include/asm-s390/spinlock.h:209:
+                     "0: " __DIAG44_INSN " 0,%2\n"   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: include/asm-s390/spinlock.h:210:
+                     "1: llihh 2,0x8000\n" /* old lock value must be 0x8..0 */\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: include/asm-s390/spinlock.h:210:
+                     "1: llihh 2,0x8000\n" /* old lock value must be 0x8..0 */\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1387: FILE: include/asm-s390/spinlock.h:211:
+                     "   csg   2,3,0(%1)\n"   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: include/asm-s390/spinlock.h:211:
+                     "   csg   2,3,0(%1)\n"   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: include/asm-s390/spinlock.h:212:
+                     "   jl    0b"         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: include/asm-s390/spinlock.h:212:
+                     "   jl    0b"         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: include/asm-s390/spinlock.h:213:
+                     : "+m" ((rw)->lock) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: include/asm-s390/spinlock.h:213:
+                     : "+m" ((rw)->lock) \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1391: FILE: include/asm-s390/spinlock.h:215:
+		     : "2", "3", "cc" )

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1399: FILE: include/asm-s390/spinlock.h:222:
+	__asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: include/asm-s390/stat.h:81:
+        unsigned long  st_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: include/asm-s390/stat.h:81:
+        unsigned long  st_dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1441: FILE: include/asm-s390/stat.h:82:
+        unsigned long  st_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1441: FILE: include/asm-s390/stat.h:82:
+        unsigned long  st_ino;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: include/asm-s390/stat.h:83:
+        unsigned long  st_nlink;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: include/asm-s390/stat.h:83:
+        unsigned long  st_nlink;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: include/asm-s390/stat.h:84:
+        unsigned int   st_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: include/asm-s390/stat.h:84:
+        unsigned int   st_mode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: include/asm-s390/stat.h:85:
+        unsigned int   st_uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: include/asm-s390/stat.h:85:
+        unsigned int   st_uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1445: FILE: include/asm-s390/stat.h:86:
+        unsigned int   st_gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: include/asm-s390/stat.h:86:
+        unsigned int   st_gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1446: FILE: include/asm-s390/stat.h:87:
+        unsigned int   __pad1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: include/asm-s390/stat.h:87:
+        unsigned int   __pad1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1447: FILE: include/asm-s390/stat.h:88:
+        unsigned long  st_rdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: include/asm-s390/stat.h:88:
+        unsigned long  st_rdev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: include/asm-s390/stat.h:89:
+        unsigned long  st_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: include/asm-s390/stat.h:89:
+        unsigned long  st_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: include/asm-s390/stat.h:90:
+        unsigned long  st_atime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: include/asm-s390/stat.h:90:
+        unsigned long  st_atime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: include/asm-s390/stat.h:92:
+        unsigned long  st_mtime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: include/asm-s390/stat.h:92:
+        unsigned long  st_mtime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1453: FILE: include/asm-s390/stat.h:94:
+        unsigned long  st_ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: include/asm-s390/stat.h:94:
+        unsigned long  st_ctime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1455: FILE: include/asm-s390/stat.h:96:
+        unsigned long  st_blksize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1455: FILE: include/asm-s390/stat.h:96:
+        unsigned long  st_blksize;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: include/asm-s390/stat.h:97:
+        long           st_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: include/asm-s390/stat.h:97:
+        long           st_blocks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1457: FILE: include/asm-s390/stat.h:98:
+        unsigned long  __unused[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: include/asm-s390/stat.h:98:
+        unsigned long  __unused[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1503: FILE: include/asm-s390/string.h:52:
+    __asm__ __volatile__ ($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1503: FILE: include/asm-s390/string.h:52:
+    __asm__ __volatile__ (

ERROR:CODE_INDENT: code indent should use tabs where possible
#1505: FILE: include/asm-s390/string.h:54:
+                          "   lr    0,%2\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: include/asm-s390/string.h:54:
+                          "   lr    0,%2\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: include/asm-s390/string.h:62:
+                          "   lgr   0,%2\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: include/asm-s390/string.h:62:
+                          "   lgr   0,%2\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: include/asm-s390/string.h:63:
+                          "   lgr   1,%1\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: include/asm-s390/string.h:63:
+                          "   lgr   1,%1\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1515: FILE: include/asm-s390/string.h:64:
+                          "   la    %0,0(%3,%1)\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: include/asm-s390/string.h:64:
+                          "   la    %0,0(%3,%1)\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1516: FILE: include/asm-s390/string.h:65:
+                          "0: srst  %0,1\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: include/asm-s390/string.h:65:
+                          "0: srst  %0,1\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1517: FILE: include/asm-s390/string.h:66:
+                          "   jo    0b\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: include/asm-s390/string.h:66:
+                          "   jo    0b\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: include/asm-s390/string.h:67:
+                          "   brc   13,1f\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: include/asm-s390/string.h:67:
+                          "   brc   13,1f\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1519: FILE: include/asm-s390/string.h:68:
+                          "   slgr  %0,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: include/asm-s390/string.h:68:
+                          "   slgr  %0,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: include/asm-s390/string.h:80:
+    __asm__ __volatile__ ($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1529: FILE: include/asm-s390/string.h:80:
+    __asm__ __volatile__ (

ERROR:CODE_INDENT: code indent should use tabs where possible
#1531: FILE: include/asm-s390/string.h:82:
+                          "   sr    0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: include/asm-s390/string.h:82:
+                          "   sr    0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1535: FILE: include/asm-s390/string.h:86:
+                          "   slgr  0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: include/asm-s390/string.h:86:
+                          "   slgr  0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1536: FILE: include/asm-s390/string.h:87:
+                          "0: mvst  %0,%1\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1536: FILE: include/asm-s390/string.h:87:
+                          "0: mvst  %0,%1\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1537: FILE: include/asm-s390/string.h:88:
+                          "   jo    0b"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1537: FILE: include/asm-s390/string.h:88:
+                          "   jo    0b"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: include/asm-s390/string.h:99:
+    __asm__ __volatile__ ($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1547: FILE: include/asm-s390/string.h:99:
+    __asm__ __volatile__ (

ERROR:CODE_INDENT: code indent should use tabs where possible
#1549: FILE: include/asm-s390/string.h:101:
+                          "   sr    0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: include/asm-s390/string.h:101:
+                          "   sr    0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1556: FILE: include/asm-s390/string.h:108:
+                          "   slgr  0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: include/asm-s390/string.h:108:
+                          "   slgr  0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1557: FILE: include/asm-s390/string.h:109:
+                          "   lgr   %0,%1\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: include/asm-s390/string.h:109:
+                          "   lgr   %0,%1\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1558: FILE: include/asm-s390/string.h:110:
+                          "0: srst  0,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: include/asm-s390/string.h:110:
+                          "0: srst  0,%0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1559: FILE: include/asm-s390/string.h:111:
+                          "   jo    0b\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: include/asm-s390/string.h:111:
+                          "   jo    0b\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1560: FILE: include/asm-s390/string.h:112:
+                          "   lgr   %0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: include/asm-s390/string.h:112:
+                          "   lgr   %0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1561: FILE: include/asm-s390/string.h:113:
+                          "   sgr   %0,%1"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1561: FILE: include/asm-s390/string.h:113:
+                          "   sgr   %0,%1"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: include/asm-s390/string.h:124:
+    __asm__ __volatile__ ($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1571: FILE: include/asm-s390/string.h:124:
+    __asm__ __volatile__ (

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: include/asm-s390/string.h:126:
+                          "   sr    0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: include/asm-s390/string.h:126:
+                          "   sr    0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1581: FILE: include/asm-s390/string.h:134:
+                          "   slgr  0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: include/asm-s390/string.h:134:
+                          "   slgr  0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1582: FILE: include/asm-s390/string.h:135:
+                          "0: srst  0,%0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: include/asm-s390/string.h:135:
+                          "0: srst  0,%0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1583: FILE: include/asm-s390/string.h:136:
+                          "   jo    0b\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: include/asm-s390/string.h:136:
+                          "   jo    0b\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1584: FILE: include/asm-s390/string.h:137:
+                          "   lgr   %0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: include/asm-s390/string.h:137:
+                          "   lgr   %0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1585: FILE: include/asm-s390/string.h:138:
+                          "   slgr  0,0\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: include/asm-s390/string.h:138:
+                          "   slgr  0,0\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1586: FILE: include/asm-s390/string.h:139:
+                          "1: mvst  %0,%1\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: include/asm-s390/string.h:139:
+                          "1: mvst  %0,%1\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1587: FILE: include/asm-s390/string.h:140:
+                          "   jo    1b"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1587: FILE: include/asm-s390/string.h:140:
+                          "   jo    1b"$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1613: FILE: include/asm-s390/system.h:28:
+extern void __misaligned_u16(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1614: FILE: include/asm-s390/system.h:29:
+extern void __misaligned_u32(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1615: FILE: include/asm-s390/system.h:30:
+extern void __misaligned_u64(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: include/asm-s390/system.h:100:
+  ((__typeof__(*(ptr)))__xchg((unsigned long)(x),(void *)(ptr),sizeof(*(ptr))))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1628: FILE: include/asm-s390/system.h:100:
+  ((__typeof__(*(ptr)))__xchg((unsigned long)(x),(void *)(ptr),sizeof(*(ptr))))
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1628: FILE: include/asm-s390/system.h:100:
+  ((__typeof__(*(ptr)))__xchg((unsigned long)(x),(void *)(ptr),sizeof(*(ptr))))
                                                               ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1638: FILE: include/asm-s390/system.h:151:
+		asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1643: FILE: include/asm-s390/system.h:156:
+			: "memory", "cc", "0" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1656: FILE: include/asm-s390/system.h:233:
+		asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1659: FILE: include/asm-s390/system.h:236:
+			: "memory", "cc" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: include/asm-s390/system.h:272:
+        unsigned long  __dummy; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: include/asm-s390/system.h:272:
+        unsigned long  __dummy; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: include/asm-s390/system.h:278:
+        unsigned long __flags; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: include/asm-s390/system.h:278:
+        unsigned long __flags; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1680: FILE: include/asm-s390/system.h:280:
+                "stnsm 0(%1),0xfc" : "=m" (__flags) : "a" (&__flags) ); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1680: FILE: include/asm-s390/system.h:280:
+                "stnsm 0(%1),0xfc" : "=m" (__flags) : "a" (&__flags) ); \$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1680: FILE: include/asm-s390/system.h:280:
+                "stnsm 0(%1),0xfc" : "=m" (__flags) : "a" (&__flags) ); \

ERROR:CODE_INDENT: code indent should use tabs where possible
#1689: FILE: include/asm-s390/system.h:294:
+        !((flags >> __FLAG_SHIFT) & 3);^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1689: FILE: include/asm-s390/system.h:294:
+        !((flags >> __FLAG_SHIFT) & 3);^I\$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1694: FILE: include/asm-s390/system.h:299:
+#define __load_psw(psw) \
+        __asm__ __volatile__("lpswe 0(%0)" : : "a" (&psw) : "cc" );

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'psw' may be better as '(psw)' to avoid precedence issues
#1694: FILE: include/asm-s390/system.h:299:
+#define __load_psw(psw) \
+        __asm__ __volatile__("lpswe 0(%0)" : : "a" (&psw) : "cc" );

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1694: FILE: include/asm-s390/system.h:299:
+#define __load_psw(psw) \
+        __asm__ __volatile__("lpswe 0(%0)" : : "a" (&psw) : "cc" );

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#1695: FILE: include/asm-s390/system.h:300:
+        __asm__ __volatile__("lpswe 0(%0)" : : "a" (&psw) : "cc" );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1695: FILE: include/asm-s390/system.h:300:
+        __asm__ __volatile__("lpswe 0(%0)" : : "a" (&psw) : "cc" );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1695: FILE: include/asm-s390/system.h:300:
+        __asm__ __volatile__("lpswe 0(%0)" : : "a" (&psw) : "cc" );

ERROR:CODE_INDENT: code indent should use tabs where possible
#1701: FILE: include/asm-s390/system.h:306:
+                "   lctlg 0,0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1701: FILE: include/asm-s390/system.h:306:
+                "   lctlg 0,0,0(1)\n" \$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1703: FILE: include/asm-s390/system.h:308:
+		: : "m" (array), "a" (((low)<<4)+(high)) : "1", "2" ); \
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1703: FILE: include/asm-s390/system.h:308:
+		: : "m" (array), "a" (((low)<<4)+(high)) : "1", "2" ); \
 		                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1703: FILE: include/asm-s390/system.h:308:
+		: : "m" (array), "a" (((low)<<4)+(high)) : "1", "2" ); \

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1712: FILE: include/asm-s390/system.h:317:
+		: "=m" (array) : "a" (((low)<<4)+(high)): "1", "2" ); \
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1712: FILE: include/asm-s390/system.h:317:
+		: "=m" (array) : "a" (((low)<<4)+(high)): "1", "2" ); \
 		                                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1712: FILE: include/asm-s390/system.h:317:
+		: "=m" (array) : "a" (((low)<<4)+(high)): "1", "2" ); \
 		                                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1712: FILE: include/asm-s390/system.h:317:
+		: "=m" (array) : "a" (((low)<<4)+(high)): "1", "2" ); \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cr' may be better as '(cr)' to avoid precedence issues
#1715: FILE: include/asm-s390/system.h:320:
+#define __ctl_set_bit(cr, bit) ({ \
+        __u8 __dummy[24]; \
+        __asm__ __volatile__ ( \
+                "    la    1,%0\n"       /* align to 8 byte */ \
+                "    aghi  1,7\n" \
+                "    nill  1,0xfff8\n" \
+                "    bras  2,0f\n"       /* skip indirect insns */ \
+                "    stctg 0,0,0(1)\n" \
+                "    lctlg 0,0,0(1)\n" \
+                "0:  ex    %1,0(2)\n"    /* execute stctl */ \
+                "    lg    0,0(1)\n" \
+                "    ogr   0,%2\n"       /* set the bit */ \
+                "    stg   0,0(1)\n" \
+                "1:  ex    %1,6(2)"      /* execute lctl */ \
+                : "=m" (__dummy) : "a" (cr*17), "a" (1L<<(bit)) \
+                : "cc", "0", "1", "2"); \
+        })

ERROR:CODE_INDENT: code indent should use tabs where possible
#1716: FILE: include/asm-s390/system.h:321:
+        __u8 __dummy[24]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1716: FILE: include/asm-s390/system.h:321:
+        __u8 __dummy[24]; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1717: FILE: include/asm-s390/system.h:322:
+        __asm__ __volatile__ ( \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1717: FILE: include/asm-s390/system.h:322:
+        __asm__ __volatile__ ( \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1718: FILE: include/asm-s390/system.h:323:
+                "    la    1,%0\n"       /* align to 8 byte */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1718: FILE: include/asm-s390/system.h:323:
+                "    la    1,%0\n"       /* align to 8 byte */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1719: FILE: include/asm-s390/system.h:324:
+                "    aghi  1,7\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1719: FILE: include/asm-s390/system.h:324:
+                "    aghi  1,7\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1720: FILE: include/asm-s390/system.h:325:
+                "    nill  1,0xfff8\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1720: FILE: include/asm-s390/system.h:325:
+                "    nill  1,0xfff8\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1721: FILE: include/asm-s390/system.h:326:
+                "    bras  2,0f\n"       /* skip indirect insns */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: include/asm-s390/system.h:326:
+                "    bras  2,0f\n"       /* skip indirect insns */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1722: FILE: include/asm-s390/system.h:327:
+                "    stctg 0,0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1722: FILE: include/asm-s390/system.h:327:
+                "    stctg 0,0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1723: FILE: include/asm-s390/system.h:328:
+                "    lctlg 0,0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1723: FILE: include/asm-s390/system.h:328:
+                "    lctlg 0,0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1724: FILE: include/asm-s390/system.h:329:
+                "0:  ex    %1,0(2)\n"    /* execute stctl */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1724: FILE: include/asm-s390/system.h:329:
+                "0:  ex    %1,0(2)\n"    /* execute stctl */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1725: FILE: include/asm-s390/system.h:330:
+                "    lg    0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1725: FILE: include/asm-s390/system.h:330:
+                "    lg    0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1726: FILE: include/asm-s390/system.h:331:
+                "    ogr   0,%2\n"       /* set the bit */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1726: FILE: include/asm-s390/system.h:331:
+                "    ogr   0,%2\n"       /* set the bit */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1727: FILE: include/asm-s390/system.h:332:
+                "    stg   0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: include/asm-s390/system.h:332:
+                "    stg   0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1728: FILE: include/asm-s390/system.h:333:
+                "1:  ex    %1,6(2)"      /* execute lctl */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1728: FILE: include/asm-s390/system.h:333:
+                "1:  ex    %1,6(2)"      /* execute lctl */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1729: FILE: include/asm-s390/system.h:334:
+                : "=m" (__dummy) : "a" (cr*17), "a" (1L<<(bit)) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1729: FILE: include/asm-s390/system.h:334:
+                : "=m" (__dummy) : "a" (cr*17), "a" (1L<<(bit)) \$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1729: FILE: include/asm-s390/system.h:334:
+                : "=m" (__dummy) : "a" (cr*17), "a" (1L<<(bit)) \
                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1729: FILE: include/asm-s390/system.h:334:
+                : "=m" (__dummy) : "a" (cr*17), "a" (1L<<(bit)) \
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1730: FILE: include/asm-s390/system.h:335:
+                : "cc", "0", "1", "2"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1730: FILE: include/asm-s390/system.h:335:
+                : "cc", "0", "1", "2"); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1731: FILE: include/asm-s390/system.h:336:
+        })$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1731: FILE: include/asm-s390/system.h:336:
+        })$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cr' may be better as '(cr)' to avoid precedence issues
#1733: FILE: include/asm-s390/system.h:338:
+#define __ctl_clear_bit(cr, bit) ({ \
+        __u8 __dummy[24]; \
+        __asm__ __volatile__ ( \
+                "    la    1,%0\n"       /* align to 8 byte */ \
+                "    aghi  1,7\n" \
+                "    nill  1,0xfff8\n" \
+                "    bras  2,0f\n"       /* skip indirect insns */ \
+                "    stctg 0,0,0(1)\n" \
+                "    lctlg 0,0,0(1)\n" \
+                "0:  ex    %1,0(2)\n"    /* execute stctl */ \
+                "    lg    0,0(1)\n" \
+                "    ngr   0,%2\n"       /* set the bit */ \
+                "    stg   0,0(1)\n" \
+                "1:  ex    %1,6(2)"      /* execute lctl */ \
+                : "=m" (__dummy) : "a" (cr*17), "a" (~(1L<<(bit))) \
+                : "cc", "0", "1", "2"); \
+        })

ERROR:CODE_INDENT: code indent should use tabs where possible
#1734: FILE: include/asm-s390/system.h:339:
+        __u8 __dummy[24]; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1734: FILE: include/asm-s390/system.h:339:
+        __u8 __dummy[24]; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1735: FILE: include/asm-s390/system.h:340:
+        __asm__ __volatile__ ( \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1735: FILE: include/asm-s390/system.h:340:
+        __asm__ __volatile__ ( \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1736: FILE: include/asm-s390/system.h:341:
+                "    la    1,%0\n"       /* align to 8 byte */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1736: FILE: include/asm-s390/system.h:341:
+                "    la    1,%0\n"       /* align to 8 byte */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1737: FILE: include/asm-s390/system.h:342:
+                "    aghi  1,7\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1737: FILE: include/asm-s390/system.h:342:
+                "    aghi  1,7\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1738: FILE: include/asm-s390/system.h:343:
+                "    nill  1,0xfff8\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1738: FILE: include/asm-s390/system.h:343:
+                "    nill  1,0xfff8\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1739: FILE: include/asm-s390/system.h:344:
+                "    bras  2,0f\n"       /* skip indirect insns */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1739: FILE: include/asm-s390/system.h:344:
+                "    bras  2,0f\n"       /* skip indirect insns */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1740: FILE: include/asm-s390/system.h:345:
+                "    stctg 0,0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1740: FILE: include/asm-s390/system.h:345:
+                "    stctg 0,0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1741: FILE: include/asm-s390/system.h:346:
+                "    lctlg 0,0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1741: FILE: include/asm-s390/system.h:346:
+                "    lctlg 0,0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1742: FILE: include/asm-s390/system.h:347:
+                "0:  ex    %1,0(2)\n"    /* execute stctl */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1742: FILE: include/asm-s390/system.h:347:
+                "0:  ex    %1,0(2)\n"    /* execute stctl */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1743: FILE: include/asm-s390/system.h:348:
+                "    lg    0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1743: FILE: include/asm-s390/system.h:348:
+                "    lg    0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1744: FILE: include/asm-s390/system.h:349:
+                "    ngr   0,%2\n"       /* set the bit */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1744: FILE: include/asm-s390/system.h:349:
+                "    ngr   0,%2\n"       /* set the bit */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1745: FILE: include/asm-s390/system.h:350:
+                "    stg   0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1745: FILE: include/asm-s390/system.h:350:
+                "    stg   0,0(1)\n" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1746: FILE: include/asm-s390/system.h:351:
+                "1:  ex    %1,6(2)"      /* execute lctl */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1746: FILE: include/asm-s390/system.h:351:
+                "1:  ex    %1,6(2)"      /* execute lctl */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1747: FILE: include/asm-s390/system.h:352:
+                : "=m" (__dummy) : "a" (cr*17), "a" (~(1L<<(bit))) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1747: FILE: include/asm-s390/system.h:352:
+                : "=m" (__dummy) : "a" (cr*17), "a" (~(1L<<(bit))) \$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1747: FILE: include/asm-s390/system.h:352:
+                : "=m" (__dummy) : "a" (cr*17), "a" (~(1L<<(bit))) \
                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1747: FILE: include/asm-s390/system.h:352:
+                : "=m" (__dummy) : "a" (cr*17), "a" (~(1L<<(bit))) \
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1748: FILE: include/asm-s390/system.h:353:
+                : "cc", "0", "1", "2"); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1748: FILE: include/asm-s390/system.h:353:
+                : "cc", "0", "1", "2"); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1749: FILE: include/asm-s390/system.h:354:
+        })$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1749: FILE: include/asm-s390/system.h:354:
+        })$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1761: FILE: include/asm-s390/system.h:365:
+                "   lctl 0,0,0(1)\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1761: FILE: include/asm-s390/system.h:365:
+                "   lctl 0,0,0(1)\n" \$

CHECK:SPACING: No space is necessary after a cast
#1806: FILE: include/asm-s390/thread_info.h:67:
+	return (struct thread_info *)((*(unsigned long *) __LC_KERNEL_STACK)-THREAD_SIZE);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1806: FILE: include/asm-s390/thread_info.h:67:
+	return (struct thread_info *)((*(unsigned long *) __LC_KERNEL_STACK)-THREAD_SIZE);
 	                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1813: FILE: include/asm-s390/thread_info.h:72:
+	__get_free_pages(GFP_KERNEL,THREAD_ORDER))
 	                           ^

CHECK:SPACING: No space is necessary after a cast
#1814: FILE: include/asm-s390/thread_info.h:73:
+#define free_thread_info(ti) free_pages((unsigned long) (ti),THREAD_ORDER)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1814: FILE: include/asm-s390/thread_info.h:73:
+#define free_thread_info(ti) free_pages((unsigned long) (ti),THREAD_ORDER)
                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1833: FILE: include/asm-s390/thread_info.h:90:
+#define TIF_31BIT^I^I18^I/* 32bit process */ $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1841: FILE: include/asm-s390/thread_info.h:99:
+#define _TIF_31BIT		(1<<TIF_31BIT)
                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1841: FILE: include/asm-s390/thread_info.h:99:
+#define _TIF_31BIT		(1<<TIF_31BIT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1903: FILE: include/asm-s390/types.h:43:
+typedef unsigned long addr_t; $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1903: FILE: include/asm-s390/types.h:43:
+typedef unsigned long addr_t; 

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1904: FILE: include/asm-s390/types.h:44:
+typedef __signed__ long saddr_t;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2150: FILE: include/asm-s390/uaccess.h:126:
+		: "m" (*(__u64*)(ptr)), "m" (x), "K" (-EFAULT)	\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2151: FILE: include/asm-s390/uaccess.h:127:
+		: "cc", "2", "4" );				\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2167: FILE: include/asm-s390/uaccess.h:143:
+		: "m" (*(__u64*)(ptr)), "d" (x), "K" (-EFAULT)	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2168: FILE: include/asm-s390/uaccess.h:144:
+		: "cc", "4" );					\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2184: FILE: include/asm-s390/uaccess.h:160:
+		: "m" (*(__u32*)(ptr)), "d" (x), "K" (-EFAULT)	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2185: FILE: include/asm-s390/uaccess.h:161:
+		: "cc", "4" );					\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2199: FILE: include/asm-s390/uaccess.h:175:
+		: "m" (*(__u16*)(ptr)), "d" (x), "K" (-EFAULT)	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2200: FILE: include/asm-s390/uaccess.h:176:
+		: "cc", "4" );					\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2214: FILE: include/asm-s390/uaccess.h:190:
+		: "m" (*(__u8*)(ptr)), "d" (x),	"K" (-EFAULT)	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2215: FILE: include/asm-s390/uaccess.h:191:
+		: "cc", "4" );					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#2218: FILE: include/asm-s390/uaccess.h:194:
+#define __put_user(x, ptr) \
+({								\
+	__typeof__(*(ptr)) __x = (x);				\
+	int __pu_err;						\
+	switch (sizeof (*(ptr))) {				\
+	case 1:							\
+		__put_user_asm_1(__x, ptr, __pu_err);		\
+		break;						\
+	case 2:							\
+		__put_user_asm_2(__x, ptr, __pu_err);		\
+		break;						\
+	case 4:							\
+		__put_user_asm_4(__x, ptr, __pu_err);		\
+		break;						\
+	case 8:							\
+		__put_user_asm_8(__x, ptr, __pu_err);		\
+		break;						\
+	default:						\
+		__pu_err = __put_user_bad();			\
+		break;						\
+	 }							\
+	__pu_err;						\
 })

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2222: FILE: include/asm-s390/uaccess.h:198:
+	switch (sizeof (*(ptr))) {				\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2385: FILE: include/asm-s390/uaccess.h:236:
+		: "m" (*(const __u64*)(ptr)),"K" (-EFAULT)	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2385: FILE: include/asm-s390/uaccess.h:236:
+		: "m" (*(const __u64*)(ptr)),"K" (-EFAULT)	\
 		                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2386: FILE: include/asm-s390/uaccess.h:237:
+		: "cc", "2", "4" );				\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2402: FILE: include/asm-s390/uaccess.h:253:
+		: "m" (*(const __u64*)(ptr)),"K" (-EFAULT)	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2402: FILE: include/asm-s390/uaccess.h:253:
+		: "m" (*(const __u64*)(ptr)),"K" (-EFAULT)	\
 		                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2403: FILE: include/asm-s390/uaccess.h:254:
+		: "cc", "4" );					\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2408: FILE: include/asm-s390/uaccess.h:259:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2420: FILE: include/asm-s390/uaccess.h:271:
+		: "m" (*(const __u32*)(ptr)),"K" (-EFAULT)	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2420: FILE: include/asm-s390/uaccess.h:271:
+		: "m" (*(const __u32*)(ptr)),"K" (-EFAULT)	\
 		                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2421: FILE: include/asm-s390/uaccess.h:272:
+		: "cc", "4" );					\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2435: FILE: include/asm-s390/uaccess.h:286:
+		: "m" (*(const __u16*)(ptr)),"K" (-EFAULT)	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2435: FILE: include/asm-s390/uaccess.h:286:
+		: "m" (*(const __u16*)(ptr)),"K" (-EFAULT)	\
 		                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2436: FILE: include/asm-s390/uaccess.h:287:
+		: "cc", "4" );					\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2451: FILE: include/asm-s390/uaccess.h:302:
+		: "m" (*(const __u8*)(ptr)),"K" (-EFAULT)	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2451: FILE: include/asm-s390/uaccess.h:302:
+		: "m" (*(const __u8*)(ptr)),"K" (-EFAULT)	\
 		                           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2452: FILE: include/asm-s390/uaccess.h:303:
+		: "cc", "4" );					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#2455: FILE: include/asm-s390/uaccess.h:306:
+#define __get_user(x, ptr)					\
+({								\
+	__typeof__(*(ptr)) __x;					\
+	int __gu_err;						\
+	switch (sizeof(*(ptr))) {				\
+	case 1:							\
+		__get_user_asm_1(__x, ptr, __gu_err);		\
+		break;						\
+	case 2:							\
+		__get_user_asm_2(__x, ptr, __gu_err);		\
+		break;						\
+	case 4:							\
+		__get_user_asm_4(__x, ptr, __gu_err);		\
+		break;						\
+	case 8:							\
+		__get_user_asm_8(__x, ptr, __gu_err);		\
+		break;						\
+	default:						\
+		__x = 0;					\
+		__gu_err = __get_user_bad();			\
+		break;						\
+	}							\
+	(x) = __x;						\
+	__gu_err;						\
 })

ERROR:CODE_INDENT: code indent should use tabs where possible
#2532: FILE: include/asm-s390/uaccess.h:389:
+        __asm__ __volatile__ ($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2532: FILE: include/asm-s390/uaccess.h:389:
+        __asm__ __volatile__ ($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2532: FILE: include/asm-s390/uaccess.h:389:
+        __asm__ __volatile__ (

ERROR:CODE_INDENT: code indent should use tabs where possible
#2535: FILE: include/asm-s390/uaccess.h:392:
+                "   lr    4,%2\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2535: FILE: include/asm-s390/uaccess.h:392:
+                "   lr    4,%2\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2536: FILE: include/asm-s390/uaccess.h:393:
+                "   slr   3,3\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2536: FILE: include/asm-s390/uaccess.h:393:
+                "   slr   3,3\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2537: FILE: include/asm-s390/uaccess.h:394:
+                "   sacf  512\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2537: FILE: include/asm-s390/uaccess.h:394:
+                "   sacf  512\n"$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2560: FILE: include/asm-s390/uaccess.h:417:
+		: "2", "3", "4", "memory", "cc" );

WARNING:LINE_SPACING: Missing a blank line after declarations
#2570: FILE: include/asm-s390/uaccess.h:427:
+	long len;
+	__asm__ __volatile__ (

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2570: FILE: include/asm-s390/uaccess.h:427:
+	__asm__ __volatile__ (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2586: FILE: include/asm-s390/uaccess.h:443:
+^I^I"   jg^I  2b\n"^I $

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#2595: FILE: include/asm-s390/uaccess.h:452:
+		: "cc", "2" ,"3", "4" );
 		            ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#2595: FILE: include/asm-s390/uaccess.h:452:
+		: "cc", "2" ,"3", "4" );
 		            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2595: FILE: include/asm-s390/uaccess.h:452:
+		: "cc", "2" ,"3", "4" );

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2611: FILE: include/asm-s390/uaccess.h:476:
+strnlen_user(const char * src, unsigned long n)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2613: FILE: include/asm-s390/uaccess.h:478:
+	__asm__ __volatile__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2637: FILE: include/asm-s390/uaccess.h:502:
+		: "cc", "0", "4" );

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2671: FILE: include/asm-s390/uaccess.h:511:
+#if 0

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2672: FILE: include/asm-s390/uaccess.h:512:
+	__asm__ __volatile__ (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2691: FILE: include/asm-s390/uaccess.h:531:
+		: "cc", "0", "4" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2693: FILE: include/asm-s390/uaccess.h:533:
+	__asm__ __volatile__ (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2705: FILE: include/asm-s390/uaccess.h:545:
+^I^I"   jg    2b\n"  $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2712: FILE: include/asm-s390/uaccess.h:552:
+		: "cc", "4" );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2755: FILE: include/asm-s390/unistd.h:264:
+/* $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2818: FILE: include/asm-s390/unistd.h:327:
+#define __NR_lchown  ^I^I198$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2819: FILE: include/asm-s390/unistd.h:328:
+#define __NR_getuid  ^I^I199$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2820: FILE: include/asm-s390/unistd.h:329:
+#define __NR_getgid  ^I^I200$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2821: FILE: include/asm-s390/unistd.h:330:
+#define __NR_geteuid  ^I^I201$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2822: FILE: include/asm-s390/unistd.h:331:
+#define __NR_getegid  ^I^I202$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2823: FILE: include/asm-s390/unistd.h:332:
+#define __NR_setreuid  ^I^I203$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2824: FILE: include/asm-s390/unistd.h:333:
+#define __NR_setregid  ^I^I204$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2825: FILE: include/asm-s390/unistd.h:334:
+#define __NR_getgroups  ^I205$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2826: FILE: include/asm-s390/unistd.h:335:
+#define __NR_setgroups  ^I206$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2827: FILE: include/asm-s390/unistd.h:336:
+#define __NR_fchown  ^I^I207$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2828: FILE: include/asm-s390/unistd.h:337:
+#define __NR_setresuid  ^I208$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2829: FILE: include/asm-s390/unistd.h:338:
+#define __NR_getresuid  ^I209$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2830: FILE: include/asm-s390/unistd.h:339:
+#define __NR_setresgid  ^I210$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2831: FILE: include/asm-s390/unistd.h:340:
+#define __NR_getresgid  ^I211$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2832: FILE: include/asm-s390/unistd.h:341:
+#define __NR_chown  ^I^I212$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2833: FILE: include/asm-s390/unistd.h:342:
+#define __NR_setuid  ^I^I213$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2834: FILE: include/asm-s390/unistd.h:343:
+#define __NR_setgid  ^I^I214$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2835: FILE: include/asm-s390/unistd.h:344:
+#define __NR_setfsuid  ^I^I215$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2836: FILE: include/asm-s390/unistd.h:345:
+#define __NR_setfsgid  ^I^I216$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 272 errors, 234 warnings, 50 checks, 2703 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
