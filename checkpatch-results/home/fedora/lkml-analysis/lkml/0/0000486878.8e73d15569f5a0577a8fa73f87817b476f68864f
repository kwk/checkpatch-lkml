WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> a) if you make struct inode a part of ext2_inode - WTF bother with pointer?

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#60: 
> ->i_count.  Or decrement it manually instead of calling iput(), etc.
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: fs/ext2/ext2_fs.h:592:
+	struct ext2_inode_info *ei = ext2_inode_entry(inode);
+	if (!ei)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: fs/ext2/ext2_fs.h:604:
+extern struct inode *ext2_alloc_inode (struct super_block *sb);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: fs/ext2/ext2_fs.h:604:
+extern struct inode *ext2_alloc_inode (struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: fs/ext2/ext2_fs.h:605:
+extern void ext2_destroy_inode (struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: fs/ext2/ext2_fs.h:605:
+extern void ext2_destroy_inode (struct inode *inode);

CHECK:SPACING: No space is necessary after a cast
#166: FILE: fs/ext2/ialloc.c:320:
+		(const struct ext2_inode_info *) ext2_inode_entry(dir);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#214: FILE: fs/ext2/inode.c:39:
+extern void inode_init_once(void *, kmem_cache_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#214: FILE: fs/ext2/inode.c:39:
+extern void inode_init_once(void *, kmem_cache_t *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_cache_t *' should also have an identifier name
#214: FILE: fs/ext2/inode.c:39:
+extern void inode_init_once(void *, kmem_cache_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#214: FILE: fs/ext2/inode.c:39:
+extern void inode_init_once(void *, kmem_cache_t *, unsigned long);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: fs/ext2/inode.c:1173:
+struct inode *ext2_alloc_inode (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#276: FILE: fs/ext2/inode.c:1188:
+void ext2_destroy_inode (struct inode *inode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#279: FILE: fs/ext2/inode.c:1191:
+	struct ext2_inode_info *ei = ext2_i(inode);
+	kmem_cache_free(ext2_ino_cache, ei);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#320: FILE: fs/ext2/super.c:162:
+	alloc_inode:	ext2_alloc_inode,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#320: FILE: fs/ext2/super.c:162:
+	alloc_inode:	ext2_alloc_inode,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#321: FILE: fs/ext2/super.c:163:
+	destroy_inode:	ext2_destroy_inode,
 	             ^

WARNING:INDENTED_LABEL: labels should not be indented
#321: FILE: fs/ext2/super.c:163:
+	destroy_inode:	ext2_destroy_inode,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000486878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 3 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000486878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
