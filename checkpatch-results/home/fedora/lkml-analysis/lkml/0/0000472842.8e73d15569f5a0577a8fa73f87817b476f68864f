WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -urN -X txt/diff-exclude linux-2.5-linus/fs/dquot.c linux-2.5/fs/dquot.c

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#36: FILE: fs/dquot.c:175:
short type)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: fs/dquot.c:176:
+static inline int const hashfn(struct super_block *sb, unsigned int id, int $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#48: FILE: fs/dquot.c:193:
+static inline struct dquot *find_dquot(unsigned int hashent, struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/dquot.c:645:
+int remove_inode_dquot_ref(struct inode *inode, int type, struct list_head $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#198: FILE: fs/inode.c:1210:
+int remove_inode_dquot_ref(struct inode *, int, struct list_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#198: FILE: fs/inode.c:1210:
+int remove_inode_dquot_ref(struct inode *, int, struct list_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#198: FILE: fs/inode.c:1210:
+int remove_inode_dquot_ref(struct inode *, int, struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#198: FILE: fs/inode.c:1210:
+int remove_inode_dquot_ref(struct inode *, int, struct list_head *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#214: FILE: include/linux/quota.h:251:
+	void (*initialize) (struct inode *, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#214: FILE: include/linux/quota.h:251:
+	void (*initialize) (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#214: FILE: include/linux/quota.h:251:
+	void (*initialize) (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: include/linux/quotaops.h:43:
+extern int sync_dquots(struct super_block *sb, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#230: FILE: include/linux/quotaops.h:45:
+extern void dquot_initialize(struct inode *inode, int type);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 2 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
