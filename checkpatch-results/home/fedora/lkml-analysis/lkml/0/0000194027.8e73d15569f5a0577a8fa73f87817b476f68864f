WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
Fix a badly-implemented debugging printk macro, and clean up the other printk()s

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#54: FILE: drivers/usb/class/audio.c:219:
+#define DPRINTK(fmt, args...) pr_debug (PFX "%s(): ", fmt, __FUNCTION__, ##args)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#54: FILE: drivers/usb/class/audio.c:219:
+#define DPRINTK(fmt, args...) pr_debug (PFX "%s(): ", fmt, __FUNCTION__, ##args)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#54: FILE: drivers/usb/class/audio.c:219:
+#define DPRINTK(fmt, args...) pr_debug (PFX "%s(): ", fmt, __FUNCTION__, ##args)

WARNING:SPLIT_STRING: quoted string split across lines
#67: FILE: drivers/usb/class/audio.c:500:
+	DPRINTK("bytepersec %d bufs %d ossfragshift %d ossmaxfrags %d "
+		"fragshift %d fragsize %d numfrag %d dmasize %d bufsize %d "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#68: FILE: drivers/usb/class/audio.c:501:
+		"fmt 0x%x srate %d\n", bytepersec, bufs,db->ossfragshift,
 		                                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#68: FILE: drivers/usb/class/audio.c:501:
+		"fragshift %d fragsize %d numfrag %d dmasize %d bufsize %d "
+		"fmt 0x%x srate %d\n", bytepersec, bufs,db->ossfragshift,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#102: FILE: drivers/usb/class/audio.c:903:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/usb/class/audio.c:904:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n",
+		__FUNCTION__, urb->status, urb->error_count, u->flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#103: FILE: drivers/usb/class/audio.c:904:
+		__FUNCTION__, urb->status, urb->error_count, u->flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#112: FILE: drivers/usb/class/audio.c:912:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#112: FILE: drivers/usb/class/audio.c:912:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#121: FILE: drivers/usb/class/audio.c:924:
+		printk(KERN_DEBUG PFX "%s(): descriptor not restarted (usb_submit_urb: %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/usb/class/audio.c:925:
+		printk(KERN_DEBUG PFX "%s(): descriptor not restarted (usb_submit_urb: %d)\n",
+			__FUNCTION__, suret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#122: FILE: drivers/usb/class/audio.c:925:
+			__FUNCTION__, suret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#140: FILE: drivers/usb/class/audio.c:971:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/usb/class/audio.c:972:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n",
+		__FUNCTION__, urb->status, urb->error_count, u->flags);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#141: FILE: drivers/usb/class/audio.c:972:
+		__FUNCTION__, urb->status, urb->error_count, u->flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#150: FILE: drivers/usb/class/audio.c:980:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#150: FILE: drivers/usb/class/audio.c:980:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#169: FILE: drivers/usb/class/audio.c:1006:
+	printk(KERN_DEBUG PFX "%s(): device %d ufmt 0x%08x dfmt 0x%08x srate %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/usb/class/audio.c:1007:
+	printk(KERN_DEBUG PFX "%s(): device %d ufmt 0x%08x dfmt 0x%08x srate %d\n",
+		__FUNCTION__, dev->devnum, u->format, u->dma.format, u->dma.srate);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#170: FILE: drivers/usb/class/audio.c:1007:
+		__FUNCTION__, dev->devnum, u->format, u->dma.format, u->dma.srate);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#179: FILE: drivers/usb/class/audio.c:1042:
+			printk(KERN_ERR PFX "cannot start playback device %d\n", dev->devnum);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: drivers/usb/class/audio.c:1266:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#197: FILE: drivers/usb/class/audio.c:1266:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/usb/class/audio.c:1267:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n", __FUNCTION__,
+		urb->status, urb->error_count, u->flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#207: FILE: drivers/usb/class/audio.c:1275:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#207: FILE: drivers/usb/class/audio.c:1275:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#236: FILE: drivers/usb/class/audio.c:1323:
+			printk(KERN_WARNING PFX "%s(): requested frequency %u (nominal %u) out of range!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/usb/class/audio.c:1324:
+			printk(KERN_WARNING PFX "%s(): requested frequency %u (nominal %u) out of range!\n",
+				__FUNCTION__, f, u->freqn);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#237: FILE: drivers/usb/class/audio.c:1324:
+				__FUNCTION__, f, u->freqn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#246: FILE: drivers/usb/class/audio.c:1341:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#246: FILE: drivers/usb/class/audio.c:1341:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/usb/class/audio.c:1342:
+	printk(KERN_DEBUG PFX "%s(): status %d errcnt %d flags 0x%x\n", __FUNCTION__,
+		urb->status, urb->error_count, u->flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#256: FILE: drivers/usb/class/audio.c:1350:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#256: FILE: drivers/usb/class/audio.c:1350:
+		printk(KERN_ERR PFX "%s(): unknown URB\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#275: FILE: drivers/usb/class/audio.c:1376:
+	printk(KERN_DEBUG PFX "%s(): device %d ufmt 0x%08x dfmt 0x%08x srate %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/usb/class/audio.c:1377:
+	printk(KERN_DEBUG PFX "%s(): device %d ufmt 0x%08x dfmt 0x%08x srate %d\n",
+		__FUNCTION__, dev->devnum, u->format, u->dma.format, u->dma.srate);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: drivers/usb/class/audio.c:1377:
+		__FUNCTION__, dev->devnum, u->format, u->dma.format, u->dma.srate);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#285: FILE: drivers/usb/class/audio.c:1412:
+			printk(KERN_ERR PFX "cannot start playback device %d\n", dev->devnum);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#294: FILE: drivers/usb/class/audio.c:1537:
+		printk(KERN_ERR PFX "%s(): failed to find desired format/speed combination\n", __FUNCTION__);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#294: FILE: drivers/usb/class/audio.c:1537:
+		printk(KERN_ERR PFX "%s(): failed to find desired format/speed combination\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#294: FILE: drivers/usb/class/audio.c:1537:
+		printk(KERN_ERR PFX "%s(): failed to find desired format/speed combination\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#303: FILE: drivers/usb/class/audio.c:1551:
+			printk(KERN_WARNING PFX "device %d interface %d altsetting %d claims adaptive in "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#316: FILE: drivers/usb/class/audio.c:1565:
+		printk(KERN_WARNING PFX "usb_set_interface failed, device %d interface %d altsetting %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#325: FILE: drivers/usb/class/audio.c:1577:
+			printk(KERN_ERR PFX "failure (error %d) to set output pitch control device %d interface %u endpoint 0x%x to %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: drivers/usb/class/audio.c:1589:
+			printk(KERN_ERR PFX "failure (error %d) to set input sampling frequency "

WARNING:SPLIT_STRING: quoted string split across lines
#336: FILE: drivers/usb/class/audio.c:1590:
+			printk(KERN_ERR PFX "failure (error %d) to set input sampling frequency "
+				"device %d interface %u endpoint 0x%x to %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#343: FILE: drivers/usb/class/audio.c:1596:
+			printk(KERN_ERR PFX "failure (error %d) to get input sampling frequency device %d interface %u endpoint 0x%x\n",

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#364: FILE: drivers/usb/class/audio.c:1627:
+		printk(KERN_ERR PFX "%s(): failed to find desired format/speed combination\n", __FORMAT__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#364: FILE: drivers/usb/class/audio.c:1627:
+		printk(KERN_ERR PFX "%s(): failed to find desired format/speed combination\n", __FORMAT__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#375: FILE: drivers/usb/class/audio.c:1638:
+		printk(KERN_DEBUG PFX "bNumEndpoints 0x%02x endpoint[1].bmAttributes 0x%02x\n"

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#376: FILE: drivers/usb/class/audio.c:1639:
+		       KERN_DEBUG PFX "endpoint[1].bSynchAddress 0x%02x endpoint[1].bEndpointAddress 0x%02x\n"

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#377: FILE: drivers/usb/class/audio.c:1640:
+		       KERN_DEBUG PFX "endpoint[0].bSynchAddress 0x%02x\n", alts->bNumEndpoints,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#386: FILE: drivers/usb/class/audio.c:1648:
+			printk(KERN_WARNING PFX "device %d interface %d altsetting %d claims asynch out "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#400: FILE: drivers/usb/class/audio.c:1662:
+		printk(KERN_WARNING PFX "usb_set_interface failed, device %d interface %d altsetting %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/usb/class/audio.c:1663:
+		printk(KERN_WARNING PFX "usb_set_interface failed, device %d interface %d altsetting %d\n",
+			dev->devnum, u->interface, fmt->altsetting);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#411: FILE: drivers/usb/class/audio.c:1674:
+			printk(KERN_ERR PFX "failure (error %d) to set output pitch control "

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: drivers/usb/class/audio.c:1675:
+			printk(KERN_ERR PFX "failure (error %d) to set output pitch control "
+				"device %d interface %u endpoint 0x%x to %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#423: FILE: drivers/usb/class/audio.c:1687:
+			printk(KERN_ERR PFX "failure (error %d) to set output sampling "

WARNING:SPLIT_STRING: quoted string split across lines
#424: FILE: drivers/usb/class/audio.c:1688:
+			printk(KERN_ERR PFX "failure (error %d) to set output sampling "
+				"frequency device %d interface %u endpoint 0x%x to %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#432: FILE: drivers/usb/class/audio.c:1694:
+			printk(KERN_ERR PFX "failure (error %d) to get output sampling "

WARNING:SPLIT_STRING: quoted string split across lines
#433: FILE: drivers/usb/class/audio.c:1695:
+			printk(KERN_ERR PFX "failure (error %d) to get output sampling "
+				"frequency device %d interface %u endpoint 0x%x\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: drivers/usb/class/audio.c:1823:
+^Iprintk(KERN_ERR PFX "mixer request device %u if %u unit %u ch %u selector %u failed\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#454: FILE: drivers/usb/class/audio.c:1823:
+	printk(KERN_ERR PFX "mixer request device %u if %u unit %u ch %u selector %u failed\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/usb/class/audio.c:1824:
+	printk(KERN_ERR PFX "mixer request device %u if %u unit %u ch %u selector %u failed\n", 
 		dev->devnum, ms->iface, ch->unitid, ch->chnum, ch->selector);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/usb/class/audio.c:1842:
+^I^I^Iprintk(KERN_ERR PFX "selector read request device %u if %u unit %u failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#463: FILE: drivers/usb/class/audio.c:1842:
+			printk(KERN_ERR PFX "selector read request device %u if %u unit %u failed\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: drivers/usb/class/audio.c:1873:
+^I^I^Iprintk(KERN_ERR PFX "selector read request device %u if %u unit %u failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#472: FILE: drivers/usb/class/audio.c:1873:
+			printk(KERN_ERR PFX "selector read request device %u if %u unit %u failed\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/usb/class/audio.c:1902:
+^I^I^I^Iprintk(KERN_ERR PFX "selector write request device %u if %u unit %u failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#481: FILE: drivers/usb/class/audio.c:1902:
+				printk(KERN_ERR PFX "selector write request device %u if %u unit %u failed\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#490: FILE: drivers/usb/class/audio.c:2145:
+			printk(KERN_DEBUG PFX "dma timed out?\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#501: FILE: drivers/usb/class/audio.c:2244:
+		printk(KERN_DEBUG PFX "%s(): count %u dma: count %u rdptr %u wrptr %u dmasize %u fragsize %u flags 0x%02x taskst 0x%lx\n",

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#502: FILE: drivers/usb/class/audio.c:2245:
+			__FUNCTION__, count, as->usbout.dma.count, as->usbout.dma.rdptr, as->usbout.dma.wrptr, as->usbout.dma.dmasize,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/usb/class/audio.c:2245:
+		printk(KERN_DEBUG PFX "%s(): count %u dma: count %u rdptr %u wrptr %u dmasize %u fragsize %u flags 0x%02x taskst 0x%lx\n",
+			__FUNCTION__, count, as->usbout.dma.count, as->usbout.dma.rdptr, as->usbout.dma.wrptr, as->usbout.dma.dmasize,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#502: FILE: drivers/usb/class/audio.c:2245:
+			__FUNCTION__, count, as->usbout.dma.count, as->usbout.dma.rdptr, as->usbout.dma.wrptr, as->usbout.dma.dmasize,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#512: FILE: drivers/usb/class/audio.c:2387:
+	printk(KERN_DEBUG PFX "%s(): cmd=%x arg=%lx *arg=%d\n", __FUNCTION__, cmd, arg, val)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#512: FILE: drivers/usb/class/audio.c:2387:
+	printk(KERN_DEBUG PFX "%s(): cmd=%x arg=%lx *arg=%d\n", __FUNCTION__, cmd, arg, val)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#531: FILE: drivers/usb/class/audio.c:2884:
+^I^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#531: FILE: drivers/usb/class/audio.c:2884:
+					printk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/usb/class/audio.c:2885:
+					printk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", 
+						dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: drivers/usb/class/audio.c:2891:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u first endpoint not isochronous in\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#540: FILE: drivers/usb/class/audio.c:2891:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u first endpoint not isochronous in\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: drivers/usb/class/audio.c:2892:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u first endpoint not isochronous in\n", 
+					dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: drivers/usb/class/audio.c:2897:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#548: FILE: drivers/usb/class/audio.c:2897:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/usb/class/audio.c:2898:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 
+					dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: drivers/usb/class/audio.c:2902:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u format not supported\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#555: FILE: drivers/usb/class/audio.c:2902:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u format not supported\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/usb/class/audio.c:2903:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u format not supported\n", 
+					dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: drivers/usb/class/audio.c:2909:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#564: FILE: drivers/usb/class/audio.c:2909:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/usb/class/audio.c:2910:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 
+					dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: drivers/usb/class/audio.c:2914:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not supported\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#571: FILE: drivers/usb/class/audio.c:2914:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not supported\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/usb/class/audio.c:2915:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not supported\n", 
+					dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: drivers/usb/class/audio.c:2919:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u unsupported channels %u framesize %u\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#578: FILE: drivers/usb/class/audio.c:2919:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u unsupported channels %u framesize %u\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/usb/class/audio.c:2920:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u unsupported channels %u framesize %u\n", 
+					dev->devnum, asifin, i, fmt[4], fmt[5]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#586: FILE: drivers/usb/class/audio.c:2925:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u no or invalid class specific endpoint descriptor\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: drivers/usb/class/audio.c:2926:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u no or invalid class specific endpoint descriptor\n",
+					dev->devnum, asifin, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: drivers/usb/class/audio.c:2951:
+^I^I^Ipr_info(PFX "device %u interface %u altsetting %u: format 0x%08x sratelo %u sratehi %u attributes 0x%02x\n", $

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#610: FILE: drivers/usb/class/audio.c:2952:
+				dev->devnum, asifin, i, fp->format, fp->sratelo, fp->sratehi, fp->attributes);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#617: FILE: drivers/usb/class/audio.c:2966:
 				if (i != 0)
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: drivers/usb/class/audio.c:2967:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#620: FILE: drivers/usb/class/audio.c:2967:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: drivers/usb/class/audio.c:2968:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u does not have an endpoint\n", 
+					dev->devnum, asifout, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: drivers/usb/class/audio.c:2973:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u first endpoint not isochronous out\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#628: FILE: drivers/usb/class/audio.c:2973:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u first endpoint not isochronous out\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/usb/class/audio.c:2974:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u first endpoint not isochronous out\n", 
+					dev->devnum, asifout, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: drivers/usb/class/audio.c:2980:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#637: FILE: drivers/usb/class/audio.c:2980:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: drivers/usb/class/audio.c:2981:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 
+					dev->devnum, asifout, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: drivers/usb/class/audio.c:2985:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u format not supported\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#644: FILE: drivers/usb/class/audio.c:2985:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u format not supported\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/usb/class/audio.c:2986:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u format not supported\n", 
+					dev->devnum, asifout, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: drivers/usb/class/audio.c:2996:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#655: FILE: drivers/usb/class/audio.c:2996:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: drivers/usb/class/audio.c:2997:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not found\n", 
+					dev->devnum, asifout, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: drivers/usb/class/audio.c:3001:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not supported\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#662: FILE: drivers/usb/class/audio.c:3001:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not supported\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: drivers/usb/class/audio.c:3002:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u FORMAT_TYPE descriptor not supported\n", 
+					dev->devnum, asifout, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#668: FILE: drivers/usb/class/audio.c:3006:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u unsupported channels %u framesize %u\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#668: FILE: drivers/usb/class/audio.c:3006:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u unsupported channels %u framesize %u\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/usb/class/audio.c:3012:
+^I^I^I^Iprintk(KERN_ERR PFX "device %u interface %u altsetting %u no or invalid class specific endpoint descriptor\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#675: FILE: drivers/usb/class/audio.c:3012:
+				printk(KERN_ERR PFX "device %u interface %u altsetting %u no or invalid class specific endpoint descriptor\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: drivers/usb/class/audio.c:3038:
+^I^I^Ipr_info(PFX "device %u interface %u altsetting %u: format 0x%08x sratelo %u sratehi %u attributes 0x%02x\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#697: FILE: drivers/usb/class/audio.c:3039:
+			pr_info(PFX "device %u interface %u altsetting %u: format 0x%08x sratelo %u sratehi %u attributes 0x%02x\n", 
 			       dev->devnum, asifout, i, fp->format, fp->sratelo, fp->sratehi, fp->attributes);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#705: FILE: drivers/usb/class/audio.c:3055:
+		printk(KERN_ERR PFX "cannot register dsp\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#723: FILE: drivers/usb/class/audio.c:3092:
+		printk(KERN_ERR PFX "invalid OSS mixer channel %u\n", nr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#728: FILE: drivers/usb/class/audio.c:3096:
+		printk(KERN_WARNING PFX "OSS mixer channel %u already in use\n", nr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#737: FILE: drivers/usb/class/audio.c:3148:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#737: FILE: drivers/usb/class/audio.c:3148:
 	if (!buf) {
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#737: FILE: drivers/usb/class/audio.c:3148:
+		printk(KERN_ERR PFX "%s(): out of memory\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: drivers/usb/class/audio.c:3268:
+^Iprintk(KERN_ERR PFX "mixer request device %u if %u unit %u ch %u selector %u failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#746: FILE: drivers/usb/class/audio.c:3268:
+	printk(KERN_ERR PFX "mixer request device %u if %u unit %u ch %u selector %u failed\n", 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#755: FILE: drivers/usb/class/audio.c:3305:
+		printk(KERN_ERR PFX "unit %u invalid MIXER_UNIT descriptor\n", mixer[3]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#760: FILE: drivers/usb/class/audio.c:3309:
+		printk(KERN_ERR PFX "mixer unit %u: too many input pins\n", mixer[3]);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#769: FILE: drivers/usb/class/audio.c:3323:
+		printk(KERN_ERR PFX "unit %u invalid MIXER_UNIT descriptor (bitmap too small)\n", mixer[3]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#769: FILE: drivers/usb/class/audio.c:3323:
+		printk(KERN_ERR PFX "unit %u invalid MIXER_UNIT descriptor (bitmap too small)\n", mixer[3]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#778: FILE: drivers/usb/class/audio.c:3373:
+		printk(KERN_ERR PFX "unit %u invalid SELECTOR_UNIT descriptor\n", selector[3]);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#795: FILE: drivers/usb/class/audio.c:3391:
+			printk(KERN_ERR PFX "selector unit %u: input pins with varying channel numbers\n", selector[3]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#795: FILE: drivers/usb/class/audio.c:3391:
+			printk(KERN_ERR PFX "selector unit %u: input pins with varying channel numbers\n", selector[3]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#804: FILE: drivers/usb/class/audio.c:3403:
+			pr_info(PFX "selector unit %u: ignoring channel %u\n", selector[3], i+1);
 			                                                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#813: FILE: drivers/usb/class/audio.c:3438:
+		printk(KERN_ERR PFX "wrong controls size in feature unit %u\n",ftr[3]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#813: FILE: drivers/usb/class/audio.c:3438:
+		printk(KERN_ERR PFX "wrong controls size in feature unit %u\n",ftr[3]);
 		                                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#819: FILE: drivers/usb/class/audio.c:3443:
+		printk(KERN_ERR PFX "feature unit %u source has no channels\n", ftr[3]);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#824: FILE: drivers/usb/class/audio.c:3447:
+		printk(KERN_WARNING PFX "feature unit %u: OSS mixer interface does not support more than 2 channels\n", ftr[3]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#824: FILE: drivers/usb/class/audio.c:3447:
+		printk(KERN_WARNING PFX "feature unit %u: OSS mixer interface does not support more than 2 channels\n", ftr[3]);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#830: FILE: drivers/usb/class/audio.c:3452:
+		printk(KERN_WARNING PFX "warning: found %d of %d logical channels\n", state->nrchannels,nr_logical_channels);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#830: FILE: drivers/usb/class/audio.c:3452:
+		printk(KERN_WARNING PFX "warning: found %d of %d logical channels\n", state->nrchannels,nr_logical_channels);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#830: FILE: drivers/usb/class/audio.c:3452:
+		printk(KERN_WARNING PFX "warning: found %d of %d logical channels\n", state->nrchannels,nr_logical_channels);
 		                                                                                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#835: FILE: drivers/usb/class/audio.c:3456:
+			pr_info(PFX "assuming the channel found is the master channel "
+				"(got a Philips camera?) - should be fine\n");

WARNING:SPLIT_STRING: quoted string split across lines
#839: FILE: drivers/usb/class/audio.c:3459:
+			pr_info(PFX "assuming that a stereo channel connected directly "
+				"to a mixer is missing in search (got Labtec headset?) "

WARNING:SPLIT_STRING: quoted string split across lines
#840: FILE: drivers/usb/class/audio.c:3460:
+				"to a mixer is missing in search (got Labtec headset?) "
+				"- should be fine\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#844: FILE: drivers/usb/class/audio.c:3463:
+			printk(KERN_WARNING PFX "no idea what's going on..., contact linux-usb-devel@lists.sourceforge.net\n");

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#853: FILE: drivers/usb/class/audio.c:3542:
+		printk(KERN_DEBUG PFX "unmuting feature unit %u interface %u\n", ftr[3], state->ctrlif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#853: FILE: drivers/usb/class/audio.c:3542:
+		printk(KERN_DEBUG PFX "unmuting feature unit %u interface %u\n", ftr[3], state->ctrlif);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#858: FILE: drivers/usb/class/audio.c:3546:
+			printk(KERN_WARNING PFX "failure to unmute feature unit %u interface %u\n", ftr[3], state->ctrlif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#858: FILE: drivers/usb/class/audio.c:3546:
+			printk(KERN_WARNING PFX "failure to unmute feature unit %u interface %u\n", ftr[3], state->ctrlif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#873: FILE: drivers/usb/class/audio.c:3562:
+		printk(KERN_ERR PFX "unit %d not found!\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#882: FILE: drivers/usb/class/audio.c:3571:
+			printk(KERN_ERR PFX "unit %u: invalid INPUT_TERMINAL descriptor\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#891: FILE: drivers/usb/class/audio.c:3581:
+			printk(KERN_ERR PFX "unit %u: invalid MIXER_UNIT descriptor\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#900: FILE: drivers/usb/class/audio.c:3589:
+			printk(KERN_ERR PFX "unit %u: invalid SELECTOR_UNIT descriptor\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#909: FILE: drivers/usb/class/audio.c:3597:
+			printk(KERN_ERR PFX "unit %u: invalid FEATURE_UNIT descriptor\n", unitid);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#918: FILE: drivers/usb/class/audio.c:3605:
+			printk(KERN_ERR PFX "unit %u: invalid PROCESSING_UNIT descriptor\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#918: FILE: drivers/usb/class/audio.c:3605:
+			printk(KERN_ERR PFX "unit %u: invalid PROCESSING_UNIT descriptor\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#927: FILE: drivers/usb/class/audio.c:3613:
+			printk(KERN_ERR PFX "unit %u: invalid EXTENSION_UNIT descriptor\n", unitid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#936: FILE: drivers/usb/class/audio.c:3629:
+		printk(KERN_ERR PFX "unit %u: unexpected type 0x%02x\n", unitid, p1[2]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: drivers/usb/class/audio.c:3635:
+static void usb_audio_constructmixer(struct usb_audio_state *s, unsigned char *buffer,
+			unsigned int buflen, unsigned int ctrlif, unsigned char *oterm)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#952: FILE: drivers/usb/class/audio.c:3648:
+	printk(KERN_DEBUG PFX "constructing mixer for Terminal %u type 0x%04x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#966: FILE: drivers/usb/class/audio.c:3663:
+		printk(KERN_ERR PFX "cannot register mixer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#980: FILE: drivers/usb/class/audio.c:3693:
+		printk(KERN_ERR PFX "device %d audiocontrol interface %u no HEADER found\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#986: FILE: drivers/usb/class/audio.c:3698:
+		printk(KERN_ERR PFX "device %d audiocontrol interface %u HEADER error\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/usb/class/audio.c:3704:
+		pr_info(PFX "device %d audiocontrol interface %u has no AudioStreaming and MidiStreaming interfaces\n",
 		       dev->devnum, ctrlif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#999: FILE: drivers/usb/class/audio.c:3709:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u interface %u does not exist\n",

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1005: FILE: drivers/usb/class/audio.c:3714:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u has only 1 altsetting.\n", dev->devnum, ctrlif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1005: FILE: drivers/usb/class/audio.c:3714:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u has only 1 altsetting.\n", dev->devnum, ctrlif);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1011: FILE: drivers/usb/class/audio.c:3719:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u interface %u has no altsetting 0\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1017: FILE: drivers/usb/class/audio.c:3724:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u interface %u is not an AudioClass interface\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1023: FILE: drivers/usb/class/audio.c:3729:
+			printk(KERN_INFO PFX "device %d audiocontrol interface %u interface %u MIDIStreaming not supported\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1029: FILE: drivers/usb/class/audio.c:3734:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u interface %u invalid AudioClass subtype\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1038: FILE: drivers/usb/class/audio.c:3742:
+					printk(KERN_ERR PFX "device %d audiocontrol interface %u endpoint %d does not have "

WARNING:SPLIT_STRING: quoted string split across lines
#1039: FILE: drivers/usb/class/audio.c:3743:
+					printk(KERN_ERR PFX "device %d audiocontrol interface %u endpoint %d does not have "
+						"0 bandwidth at alt[0]\n", dev->devnum, ctrlif, k);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1048: FILE: drivers/usb/class/audio.c:3753:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u interface %u has no altsetting 1\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1054: FILE: drivers/usb/class/audio.c:3758:
+			printk(KERN_ERR PFX "device %d audiocontrol interface %u interface %u has no endpoint\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1064: FILE: drivers/usb/class/audio.c:3777:
+	pr_info(PFX "device %d audiocontrol interface %u has %u input and %u output AudioStreaming interfaces\n",
 	       dev->devnum, ctrlif, numifin, numifout);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1072: FILE: drivers/usb/class/audio.c:3801:
+	printk(KERN_DEBUG PFX "%s(): usb_audio_state at %p\n", __FUNCTION__, s);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1072: FILE: drivers/usb/class/audio.c:3801:
+	printk(KERN_DEBUG PFX "%s(): usb_audio_state at %p\n", __FUNCTION__, s);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1081: FILE: drivers/usb/class/audio.c:3816:
+	printk(KERN_DEBUG PFX "probing if %i: IC %x, ISC %x\n", ifnum,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 135 warnings, 31 checks, 1006 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000194027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
