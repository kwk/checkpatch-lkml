WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
-----------------------------------------------------------------------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#182: 
--- a/drivers/pci/pci-driver.c	Sat Jun 15 17:59:18 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/pci/pci-driver.c:57:
+^I^Ielse $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#249: FILE: arch/i386/pci/common.c:221:
+ * We've done all the work in pcibios_assign_irq already. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: arch/i386/pci/common.c:222:
+ * We may want to change this later to activate the actual routing at this $

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#405: FILE: drivers/pci/pci.c:562:
+ *  Figure out the the routing from the IRQ pin to an actual IRQ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: drivers/pci/pci.c:562:
+ *  Figure out the the routing from the IRQ pin to an actual IRQ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/pci/pci.c:565:
+ *  Returns an IRQ number (only supposed to be use for printk() or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: drivers/pci/pci.c:588:
+ *  Returns an IRQ number (only supposed to be use for printk() or $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#450: FILE: drivers/pci/pci.c:607:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#451: FILE: drivers/pci/pci.c:608:
 static int __devinit pci_init(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#491: FILE: drivers/pci/pci.c:250:
+		printk(KERN_DEBUG "PCI: Enabling device %s (%04x -> %04x)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#505: FILE: drivers/pci/pci.c:264:
+		printk(KERN_DEBUG "PCI: Disabling device %s (%04x -> %04x)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: drivers/pci/pci.c:721:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#741: FILE: drivers/pci/pci.c:723:
 static int __devinit pci_init(void)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#748: FILE: drivers/pci/pci.c:770:
+EXPORT_SYMBOL(pci_assign_irq);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#749: FILE: drivers/pci/pci.c:771:
+EXPORT_SYMBOL(pci_assign_mmio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#750: FILE: drivers/pci/pci.c:772:
+EXPORT_SYMBOL(pci_assign_io);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#751: FILE: drivers/pci/pci.c:773:
+EXPORT_SYMBOL(pci_enable_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#752: FILE: drivers/pci/pci.c:774:
+EXPORT_SYMBOL(pci_enable_mmio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#753: FILE: drivers/pci/pci.c:775:
+EXPORT_SYMBOL(pci_enable_io);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: drivers/pci/pci.c:627:
+ *  Returns an IRQ number (only supposed to be use for printk() or $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#816: FILE: drivers/pci/pci.c:637:
+	BUG_ON(!(flags & SA_SHIRQ));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: drivers/pci/pci.c:646:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#862: FILE: drivers/pci/pci.c:780:
+	BUG_ON(nr >= PCI_ROM_RESOURCE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: drivers/pci/pci.c:783:
+^Iif ((pci_resource_flags(pdev, nr) ^ flags) & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#872: FILE: drivers/pci/pci.c:790:
+^Ires = __request_region(root, pci_resource_start(pdev, nr), $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#881: FILE: drivers/pci/pci.c:799:
+	/* Print extensive info so that drivers don't have to do it
+	   themselves */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#881: FILE: drivers/pci/pci.c:799:
+	   themselves */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#882: FILE: drivers/pci/pci.c:800:
+	printk(KERN_INFO

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: drivers/pci/pci.c:883:
+^I^I^I pci_resource_start(dev, nr), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#974: FILE: drivers/pci/pci.c:892:
+ *  Unregisters an IO region previously registered by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: drivers/pci/pci.c:899:
+^I^I^I pci_resource_start(dev, nr), $

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#985: FILE: drivers/pci/pci.c:903:
 static int __devinit pci_init(void)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#992: FILE: drivers/pci/pci.c:950:
+EXPORT_SYMBOL(pci_request_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#993: FILE: drivers/pci/pci.c:951:
+EXPORT_SYMBOL(pci_request_mmio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#994: FILE: drivers/pci/pci.c:952:
+EXPORT_SYMBOL(pci_request_io);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#995: FILE: drivers/pci/pci.c:953:
+EXPORT_SYMBOL(pci_release_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#996: FILE: drivers/pci/pci.c:954:
+EXPORT_SYMBOL(pci_release_mmio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#997: FILE: drivers/pci/pci.c:955:
+EXPORT_SYMBOL(pci_release_io);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1034: FILE: drivers/net/eepro100.c:558:
 static int __devinit eepro100_init_one (struct pci_dev *pdev,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1081: FILE: drivers/net/eepro100.c:588:
+		printk("Found Intel i82557 PCI Speedo at I/O %#lx IRQ %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1082: FILE: drivers/net/eepro100.c:589:
+		printk("Found Intel i82557 PCI Speedo at I/O %#lx IRQ %d.\n",
 			   ioaddr, irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: drivers/net/eepro100.c:591:
+^I/* Even if using MMIO, the hardware won't work $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1092: FILE: drivers/net/eepro100.c:592:
+	/* Even if using MMIO, the hardware won't work 
+	   unless IO is enabled, too */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1092: FILE: drivers/net/eepro100.c:592:
+	   unless IO is enabled, too */

CHECK:SPACING: No space is necessary after a cast
#1096: FILE: drivers/net/eepro100.c:596:
+	ioaddr = (unsigned long) pci_request_mmio(pdev, 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1102: FILE: drivers/net/eepro100.c:601:
+		printk("Found Intel i82557 PCI Speedo, MMIO at %#lx IRQ %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1103: FILE: drivers/net/eepro100.c:602:
+		printk("Found Intel i82557 PCI Speedo, MMIO at %#lx IRQ %d.\n",
 			   pci_resource_start(pdev, 0), irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1146: FILE: drivers/net/eepro100.c:917:
+		printk(KERN_DEBUG "%s: speedo_open()\n", dev->name);

CHECK:SPACING: No space is necessary after a cast
#1186: FILE: drivers/net/eepro100.c:2250:
+	pci_release_mmio(pdev, 0, (void *) dev->base_addr);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1202: FILE: sound/oss/ymfpci.c:2496:
 static int __devinit ymf_probe_one(struct pci_dev *pcidev, const struct pci_device_id *ent)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1211: FILE: sound/oss/ymfpci.c:2502:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1228: FILE: sound/oss/ymfpci.c:2522:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1260: FILE: sound/oss/ymfpci.c:2551:
+		printk(KERN_ERR "ymfpci: unable to request IRQ %d\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1276: FILE: sound/oss/ymfpci.c:2584:
+	printk(KERN_INFO "ymfpci: %s at 0x%lx IRQ %d\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449831.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 34 warnings, 6 checks, 961 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000449831.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
