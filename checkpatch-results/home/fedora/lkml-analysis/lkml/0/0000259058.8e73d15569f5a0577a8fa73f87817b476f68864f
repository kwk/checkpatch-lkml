ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#83: 
--- a/include/linux/i2o.h	(revision 111)

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#101: FILE: include/linux/i2o.h:121:
+	void (*notify)(enum i2o_driver_notify, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/i2o.h:287:
+extern u32 i2o_cntxt_list_get_ptr(struct i2o_controller *, void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2o_controller *' should also have an identifier name
#119: FILE: include/linux/i2o.h:287:
+extern u32 i2o_cntxt_list_get_ptr(struct i2o_controller *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#119: FILE: include/linux/i2o.h:287:
+extern u32 i2o_cntxt_list_get_ptr(struct i2o_controller *, void *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: include/linux/i2o.h:340:
+static inline void i2o_driver_notify(struct i2o_driver *drv,
+			enum i2o_driver_notify notify, void *data) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#146: FILE: include/linux/i2o.h:341:
+	if(drv->notify)
+			drv->notify(notify, data);

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: include/linux/i2o.h:341:
+	if(drv->notify)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/i2o.h:345:
+extern void i2o_driver_notify_all(enum i2o_driver_notify, void *);

WARNING:TYPO_SPELLING: 'succes' may be misspelled - perhaps 'success'?
#228: FILE: drivers/message/i2o/iop.c:227:
+ *	Returns context id which matches to the pointer on succes or 0 on
   	                                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: drivers/message/i2o/iop.c:230:
+u32 i2o_cntxt_list_get_ptr(struct i2o_controller * c, void *ptr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#238: FILE: drivers/message/i2o/iop.c:237:
+	list_for_each_entry(entry, &c->context_list, list)
+	    if (entry->ptr == ptr) {

WARNING:TABSTOP: Statements should start on a tabstop
#239: FILE: drivers/message/i2o/iop.c:238:
+	    if (entry->ptr == ptr) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#246: FILE: drivers/message/i2o/iop.c:245:
+		printk(KERN_WARNING "i2o: Could not find nonexistent ptr "

WARNING:SPLIT_STRING: quoted string split across lines
#247: FILE: drivers/message/i2o/iop.c:246:
+		printk(KERN_WARNING "i2o: Could not find nonexistent ptr "
+		       "%p\n", ptr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#412: FILE: drivers/message/i2o/i2o_scsi.c:516:
+			printk(KERN_ERR "scsi-osm: Could not initialize"

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/message/i2o/i2o_scsi.c:517:
+			printk(KERN_ERR "scsi-osm: Could not initialize"
+			       " SCSI host\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#419: FILE: drivers/message/i2o/i2o_scsi.c:523:
+			printk(KERN_ERR "scsi-osm: Could not add SCSI "

WARNING:SPLIT_STRING: quoted string split across lines
#420: FILE: drivers/message/i2o/i2o_scsi.c:524:
+			printk(KERN_ERR "scsi-osm: Could not add SCSI "
+			       "host\n");

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#499: FILE: drivers/message/i2o/i2o_scsi.c:772:
+	i2o_dev = SCpnt->device->hostdata;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: drivers/message/i2o/driver.c:112:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#610: FILE: drivers/message/i2o/driver.c:235:
+void i2o_driver_notify_all(enum i2o_driver_notify evt, void *data) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#614: FILE: drivers/message/i2o/driver.c:239:
+	for(i = 0; i < I2O_MAX_DRIVERS; i ++) {
 	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#614: FILE: drivers/message/i2o/driver.c:239:
+	for(i = 0; i < I2O_MAX_DRIVERS; i ++) {

ERROR:SPACING: space required before the open parenthesis '('
#617: FILE: drivers/message/i2o/driver.c:242:
+		if(drv)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 13 warnings, 4 checks, 505 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259058.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
