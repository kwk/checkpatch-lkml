WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> I obviously failed to deliver my idea :) I meant that I would like add eject

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_device *' should also have an identifier name
#84: FILE: drivers/acpi/scan.c:40:
+	ssize_t (*show)(struct acpi_device *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#84: FILE: drivers/acpi/scan.c:40:
+	ssize_t (*show)(struct acpi_device *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct acpi_device *' should also have an identifier name
#85: FILE: drivers/acpi/scan.c:41:
+	ssize_t (*store)(struct acpi_device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#85: FILE: drivers/acpi/scan.c:41:
+	ssize_t (*store)(struct acpi_device *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#85: FILE: drivers/acpi/scan.c:41:
+	ssize_t (*store)(struct acpi_device *, const char *, size_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: drivers/acpi/scan.c:48:
+static void setup_sys_fs_device_files(struct acpi_device *dev,
+		acpi_device_sysfs_files *func);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: drivers/acpi/scan.c:55:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#101: FILE: drivers/acpi/scan.c:57:
+#define to_handle_attr(n) container_of(n, struct acpi_device_attribute, attr);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/acpi/scan.c:60:
+static ssize_t acpi_device_attr_show(struct kobject *kobj,
+		struct attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: drivers/acpi/scan.c:64:
+	struct acpi_device_attribute *attribute = to_handle_attr(attr);
+	return attribute->show ? attribute->show(device, buf) : 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#110: FILE: drivers/acpi/scan.c:66:
+}
+static ssize_t acpi_device_attr_store(struct kobject *kobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: drivers/acpi/scan.c:67:
+static ssize_t acpi_device_attr_store(struct kobject *kobj,
+		struct attribute *attr, const char *buf, size_t len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#115: FILE: drivers/acpi/scan.c:71:
+	struct acpi_device_attribute *attribute = to_handle_attr(attr);
+	return attribute->store ? attribute->store(device, buf, len) : len;

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#118: FILE: drivers/acpi/scan.c:74:
+static struct sysfs_ops acpi_device_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: drivers/acpi/scan.c:340:
+   -------------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: drivers/acpi/scan.c:341:
+static ssize_t acpi_eject_store(struct acpi_device *device, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/acpi/scan.c:342:
+static ssize_t acpi_eject_store(struct acpi_device *device, 
+		const char *buf, size_t count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: drivers/acpi/scan.c:344:
+#define ACPI_DEVICE_ATTR(_name,_mode,_show,_store) \
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: drivers/acpi/scan.c:344:
+#define ACPI_DEVICE_ATTR(_name,_mode,_show,_store) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: drivers/acpi/scan.c:344:
+#define ACPI_DEVICE_ATTR(_name,_mode,_show,_store) \
                                           ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#165: FILE: drivers/acpi/scan.c:356:
+setup_sys_fs_device_files (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: drivers/acpi/scan.c:356:
+setup_sys_fs_device_files (

ERROR:SPACING: space required after that ',' (ctx:VxO)
#170: FILE: drivers/acpi/scan.c:361:
+		(*(func))(&dev->kobj,&acpi_device_attr_eject.attr);
 		                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#170: FILE: drivers/acpi/scan.c:361:
+		(*(func))(&dev->kobj,&acpi_device_attr_eject.attr);
 		                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#202: FILE: drivers/acpi/scan.c:393:
+	if (ACPI_FAILURE(status)) {
+		return(-ENODEV);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: drivers/acpi/scan.c:400:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!count'
#220: FILE: drivers/acpi/scan.c:411:
+	if ((!count) || (buf[0] != '1')) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#220: FILE: drivers/acpi/scan.c:411:
+	if ((!count) || (buf[0] != '1')) {
+		return -EINVAL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device->driver"
#225: FILE: drivers/acpi/scan.c:416:
+	if (device->driver == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited before that close parenthesis ')'
#231: FILE: drivers/acpi/scan.c:422:
+	if (ACPI_FAILURE(status) || (!device->flags.ejectable) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!device->flags.ejectable'
#231: FILE: drivers/acpi/scan.c:422:
+	if (ACPI_FAILURE(status) || (!device->flags.ejectable) ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#247: FILE: drivers/acpi/scan.c:438:
+	if (result) {
+		ret = -EBUSY;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#254: FILE: drivers/acpi/scan.c:445:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246921.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 15 warnings, 12 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246921.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
