ERROR:TRAILING_WHITESPACE: trailing whitespace
#41: FILE: kernel/power/compression.c:132:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: kernel/power/compression.c:134:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: kernel/power/compression.c:140:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: kernel/power/compression.c:150:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: kernel/power/compression.c:160:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#73: FILE: kernel/power/compression.c:164:
+		printk("Compression Driver: Argh! Nothing follows me in"

WARNING:SPLIT_STRING: quoted string split across lines
#74: FILE: kernel/power/compression.c:165:
+		printk("Compression Driver: Argh! Nothing follows me in"
+				" the pipeline!");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#78: FILE: kernel/power/compression.c:169:
+	if ((result = suspend_compress_crypto_prepare() ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: kernel/power/compression.c:172:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#82: FILE: kernel/power/compression.c:173:
+	if ((result = suspend_compress_allocate_local_buffer()))

CHECK:BRACES: braces {} should be used on all arms of this statement
#85: FILE: kernel/power/compression.c:176:
+	if (rw == READ)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#87: FILE: kernel/power/compression.c:178:
+	else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#90: FILE: kernel/power/compression.c:181:
+			bytes_in = bytes_out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: kernel/power/compression.c:182:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064311.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 2 warnings, 3 checks, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064311.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
