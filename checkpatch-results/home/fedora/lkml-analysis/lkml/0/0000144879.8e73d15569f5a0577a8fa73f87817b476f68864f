WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#77: 
--- linux-2.6.14-rc3/fs/nfsd/nfs4state.c.ctlbits	2005-10-07 11:21:41.652521000 -0400

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#104: FILE: fs/nfsd/nfsctl.c:40:
+unsigned int nfsd_portbits = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#105: FILE: fs/nfsd/nfsctl.c:41:
+unsigned int nfsd_versbits = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#165: FILE: fs/nfsd/nfsctl.c:340:
 }
+static ssize_t write_ports(struct file *file, char *buf, size_t size)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'proto'
#169: FILE: fs/nfsd/nfsctl.c:344:
+	 *   family proto proto address port

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: fs/nfsd/nfsctl.c:347:
+^Ichar *family, *udp, *tcp, *addr; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#176: FILE: fs/nfsd/nfsctl.c:351:
+	if (buf[size-1] != '\n')
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: fs/nfsd/nfsctl.c:353:
+	buf[size-1] = 0;
 	        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#182: FILE: fs/nfsd/nfsctl.c:357:
+	if (len <= 0) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: fs/nfsd/nfsctl.c:360:
+	udp = family+len+1;
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: fs/nfsd/nfsctl.c:360:
+	udp = family+len+1;
 	                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#187: FILE: fs/nfsd/nfsctl.c:362:
+	if (len <= 0) return -EINVAL;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: fs/nfsd/nfsctl.c:365:
+	tcp = udp+len+1;
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#190: FILE: fs/nfsd/nfsctl.c:365:
+	tcp = udp+len+1;
 	             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#192: FILE: fs/nfsd/nfsctl.c:367:
+	if (len <= 0) return -EINVAL;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: fs/nfsd/nfsctl.c:370:
+	addr = tcp+len+1;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: fs/nfsd/nfsctl.c:370:
+	addr = tcp+len+1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#197: FILE: fs/nfsd/nfsctl.c:372:
+	if (len <= 0) return -EINVAL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#219: FILE: fs/nfsd/nfsctl.c:394:
+}
+static ssize_t write_versions(struct file *file, char *buf, size_t size)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#230: FILE: fs/nfsd/nfsctl.c:405:
+	if (buf[size-1] != '\n')
 	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#232: FILE: fs/nfsd/nfsctl.c:407:
+	buf[size-1] = 0;
 	        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#236: FILE: fs/nfsd/nfsctl.c:411:
+	if (len <= 0) return -EINVAL;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: fs/nfsd/nfsctl.c:415:
+			num = simple_strtol((vers+1), NULL, 0);
 			                         ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#240: FILE: fs/nfsd/nfsctl.c:415:
+			num = simple_strtol((vers+1), NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#242: FILE: fs/nfsd/nfsctl.c:417:
+			num = simple_strtol(vers, NULL, 0);

ERROR:SPACING: space required before the open parenthesis '('
#243: FILE: fs/nfsd/nfsctl.c:418:
+		switch(num) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#268: FILE: fs/nfsd/nfsctl.c:501:
+		[NFSD_Ports] = {"ports", &transaction_ops, S_IWUSR|S_IRUSR},
 		                                                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUSR' are not preferred. Consider using octal permissions '0600'.
#268: FILE: fs/nfsd/nfsctl.c:501:
+		[NFSD_Ports] = {"ports", &transaction_ops, S_IWUSR|S_IRUSR},

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#269: FILE: fs/nfsd/nfsctl.c:502:
+		[NFSD_Versions] = {"versions", &transaction_ops, S_IWUSR|S_IRUSR},
 		                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUSR' are not preferred. Consider using octal permissions '0600'.
#269: FILE: fs/nfsd/nfsctl.c:502:
+		[NFSD_Versions] = {"versions", &transaction_ops, S_IWUSR|S_IRUSR},

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#287: FILE: fs/nfsd/nfssvc.c:67:
+extern struct svc_version nfsd_version2, nfsd_version3, nfsd_version4;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#289: FILE: fs/nfsd/nfssvc.c:69:
+static struct svc_version *	nfsd_version[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: fs/nfsd/nfssvc.c:79:
+#define NFSD_MINVERS    ^I2$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(nfsd_version)
#300: FILE: fs/nfsd/nfssvc.c:80:
+#define NFSD_NRVERS		(sizeof(nfsd_version)/sizeof(nfsd_version[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#300: FILE: fs/nfsd/nfssvc.c:80:
+#define NFSD_NRVERS		(sizeof(nfsd_version)/sizeof(nfsd_version[0]))
                    		                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#342: FILE: fs/nfsd/nfssvc.c:130:
+			if (NFSCTL_VERISSET(nfsd_versbits, i)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#345: FILE: fs/nfsd/nfssvc.c:133:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: fs/nfsd/nfssvc.c:134:
+^I^I^I^Infsd_program.pg_vers[i] = NULL;^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#432: FILE: include/linux/nfsd/syscall.h:57:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: support/include/nfs/nfs.h:46:
+#define NFSCTL_VERUNSET(_cltbits, _v) ((_cltbits) &= ~(1 << ((_v) - 1))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: support/include/nfs/nfs.h:47:
+#define NFSCTL_UDPUNSET(_cltbits)     ((_cltbits) &= ~(1 << (17 - 1))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#488: FILE: support/include/nfs/nfs.h:48:
+#define NFSCTL_TCPUNSET(_cltbits)     ((_cltbits) &= ~(1 << (18 - 1))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: support/include/nfs/nfs.h:50:
+#define NFSCTL_VERISSET(_cltbits, _v) ((_cltbits) & (1 << ((_v) - 1))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: support/include/nfs/nfs.h:51:
+#define NFSCTL_UDPISSET(_cltbits)     ((_cltbits) & (1 << (17 - 1))) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: support/include/nfs/nfs.h:52:
+#define NFSCTL_TCPISSET(_cltbits)     ((_cltbits) & (1 << (18 - 1))) $

WARNING:SPACING: space prohibited before semicolon
#530: FILE: support/nfs/nfssvc.c:28:
+	udp = NFSCTL_UDPISSET(ctlbits) ? "udp" : "noudp" ;

WARNING:SPACING: space prohibited before semicolon
#531: FILE: support/nfs/nfssvc.c:29:
+	tcp = NFSCTL_TCPISSET(ctlbits) ? "tcp" : "notcp" ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: support/nfs/nfssvc.c:31:
+^Isnprintf(buf, BUFSIZ,"ipv4 %s %s * %d\n", udp, tcp, port); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#533: FILE: support/nfs/nfssvc.c:31:
+	snprintf(buf, BUFSIZ,"ipv4 %s %s * %d\n", udp, tcp, port); 
 	                    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#534: FILE: support/nfs/nfssvc.c:32:
+	if (write(fd, buf, strlen(buf)) != strlen(buf)) {
+	    syslog(LOG_ERR, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: support/nfs/nfssvc.c:33:
+^I    syslog(LOG_ERR, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#536: FILE: support/nfs/nfssvc.c:34:
+^I^I"nfssvc: Setting UDP protocol failed: errno %d (%s)", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: support/nfs/nfssvc.c:34:
+	    syslog(LOG_ERR, 
+		"nfssvc: Setting UDP protocol failed: errno %d (%s)", 

WARNING:RETURN_VOID: void function return statements are not generally useful
#542: FILE: support/nfs/nfssvc.c:40:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#543: FILE: support/nfs/nfssvc.c:41:
+}
+static void

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#556: FILE: support/nfs/nfssvc.c:54:
+		if (NFSCTL_VERISSET(ctlbits, n))
+		    off += snprintf(ptr+off, BUFSIZ - off, "+%d ", n);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#557: FILE: support/nfs/nfssvc.c:55:
+		    off += snprintf(ptr+off, BUFSIZ - off, "+%d ", n);
 		                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#558: FILE: support/nfs/nfssvc.c:56:
+		else
+		    off += snprintf(ptr+off, BUFSIZ - off, "-%d ", n);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#559: FILE: support/nfs/nfssvc.c:57:
+		    off += snprintf(ptr+off, BUFSIZ - off, "-%d ", n);
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#561: FILE: support/nfs/nfssvc.c:59:
+	snprintf(ptr+off, BUFSIZ - off, "\n");
 	            ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfssvc_versbits', this function's name, in a string
#562: FILE: support/nfs/nfssvc.c:60:
+syslog(LOG_ERR, "nfssvc_versbits: %s\n", buf);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: support/nfs/nfssvc.c:62:
+^I^Isyslog(LOG_ERR, "nfssvc: Setting version failed: errno %d (%s)", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: support/nfs/nfssvc.c:63:
+		syslog(LOG_ERR, "nfssvc: Setting version failed: errno %d (%s)", 
+			errno, strerror(errno));

WARNING:RETURN_VOID: void function return statements are not generally useful
#570: FILE: support/nfs/nfssvc.c:68:
+	return;
+}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#573: FILE: support/nfs/nfssvc.c:70:
+nfssvc(int port, int nrservs, unsigned int versbits, unsigned portbits)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#592: FILE: utils/nfsd/nfsd.c:27:
+static struct option longopts[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#601: FILE: utils/nfsd/nfsd.c:36:
+};
+unsigned int portbits = NFSCTL_ALLBITS;

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: utils/nfsd/nfsd.c:64:
+			switch((c = atoi(optarg))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: utils/nfsd/nfsd.c:102:
+^I}^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#688: FILE: utils/nfsd/nfsd.c:153:
+	if ((error = nfssvc(port, count, versbits, portbits)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: utils/nfsd/nfsd.c:166:
+^I^I"%s [-p|-P|--port] [-N|no-nfs-version] [-T|--no-tcp] [-U|--no-udp] nrservs\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: utils/nfsd/nfsd.man:31:
+This option can be used to request that $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#734: FILE: utils/nfsd/nfsd.man:38:
+Disable $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: utils/nfsd/nfsd.man:39:
+.B rpc.nfsd $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 18 warnings, 26 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000144879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
