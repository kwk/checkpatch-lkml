WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Ben, can you verify my changes and check that it still works after 'fixing'?

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#95: FILE: drivers/ide/ide.c:1466:
+EXPORT_SYMBOL(generic_ide_suspend);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#119: FILE: drivers/ide/ide.c:1490:
+EXPORT_SYMBOL(generic_ide_resume);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#137: FILE: drivers/ide/ide-cd.c:3262:
+static void ide_cdrom_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: drivers/ide/ide-cd.c:3262:
+static void ide_cdrom_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#141: FILE: drivers/ide/ide-cd.c:3266:
+static ide_startstop_t ide_cdrom_start_power_step (ide_drive_t *drive, struct request *rq)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_dma_check"
#161: FILE: drivers/ide/ide-cd.c:3286:
+		if (HWIF(drive)->ide_dma_check == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: drivers/ide/ide-disk.c:1501:
+static void idedisk_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: drivers/ide/ide-disk.c:1516:
+static ide_startstop_t idedisk_start_power_step (ide_drive_t *drive, struct request *rq)

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#300: FILE: drivers/ide/ide-disk.c:1530:
+			args->tfRegister[IDE_COMMAND_OFFSET] = WIN_FLUSH_CACHE_EXT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_dma_check"
#320: FILE: drivers/ide/ide-disk.c:1550:
+		if (HWIF(drive)->ide_dma_check == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/ide/ide-io.c:149:
+static void ide_complete_pm_request (ide_drive_t *drive, struct request *rq)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#363: FILE: drivers/ide/ide-io.c:154:
+	printk("%s: completing PM request, %s\n", drive->name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#389: FILE: drivers/ide/ide-io.c:248:
+		printk("%s: complete_power_step(step: %d, stat: %x, err: %x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/ide/ide-io.c:249:
+		printk("%s: complete_power_step(step: %d, stat: %x, err: %x)\n",
+			drive->name, rq->pm->pm_step, stat, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: drivers/ide/ide-io.c:662:
+^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#419: FILE: drivers/ide/ide-io.c:672:
+		printk("%s: Wakeup request inited, waiting for !BSY...\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#423: FILE: drivers/ide/ide-io.c:676:
+			printk(KERN_WARNING "%s: bus not ready on wakeup\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#428: FILE: drivers/ide/ide-io.c:681:
+			printk(KERN_WARNING "%s: drive not ready on wakeup\n", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#440: FILE: drivers/ide/ide-io.c:696:
+			printk("%s: start_power_step(step: %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/ide/ide-io.c:697:
+			printk("%s: start_power_step(step: %d)\n",
+				drive->name, rq->pm->pm_step);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/ide/ide-io.c:924:
+^I^I * $

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#471: FILE: drivers/ide/ide-io.c:932:
+			printk("%s: a request made it's way while we are power managing...\n", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#471: FILE: drivers/ide/ide-io.c:932:
+			printk("%s: a request made it's way while we are power managing...\n", drive->name);

ERROR:SPACING: space required before the open parenthesis '('
#540: FILE: drivers/ide/ide-iops.c:1331:
+	while(timeout--) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#558: FILE: drivers/ide/ide-iops.c:1349:
+EXPORT_SYMBOL_GPL(ide_wait_not_busy);

CHECK:BIT_MACRO: Prefer using the BIT macro
#670: FILE: include/linux/blkdev.h:164:
+#define REQ_PREEMPT	(1 << __REQ_PREEMPT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#671: FILE: include/linux/blkdev.h:165:
+#define REQ_PM_SUSPEND	(1 << __REQ_PM_SUSPEND)

CHECK:BIT_MACRO: Prefer using the BIT macro
#672: FILE: include/linux/blkdev.h:166:
+#define REQ_PM_RESUME	(1 << __REQ_PM_RESUME)

CHECK:BIT_MACRO: Prefer using the BIT macro
#673: FILE: include/linux/blkdev.h:167:
+#define REQ_PM_SHUTDOWN	(1 << __REQ_PM_SHUTDOWN)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#680: FILE: include/linux/blkdev.h:174:
+struct request_pm_state
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#685: FILE: include/linux/blkdev.h:179:
+	void*	data;		/* for driver use */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#759: FILE: include/linux/ide.h:1209:
+	ide_startstop_t	(*start_power_step)(ide_drive_t *, struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#759: FILE: include/linux/ide.h:1209:
+	ide_startstop_t	(*start_power_step)(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#760: FILE: include/linux/ide.h:1210:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#760: FILE: include/linux/ide.h:1210:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#760: FILE: include/linux/ide.h:1210:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#760: FILE: include/linux/ide.h:1210:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#768: FILE: include/linux/ide.h:1219:
+extern int generic_ide_suspend(struct device *dev, u32 state, u32 level);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#769: FILE: include/linux/ide.h:1220:
+extern int generic_ide_resume(struct device *dev, u32 level);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#785: FILE: include/linux/ide.h:1573:
+extern int ide_wait_not_busy(ide_hwif_t *hwif, unsigned long timeout);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364483.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 24 warnings, 12 checks, 669 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364483.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
