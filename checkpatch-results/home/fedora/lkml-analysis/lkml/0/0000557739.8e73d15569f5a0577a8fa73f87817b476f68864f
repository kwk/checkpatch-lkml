WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#42: FILE: read_write.c:149:
+extern struct file_operations socket_file_ops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#42: FILE: read_write.c:149:
+extern struct file_operations socket_file_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: read_write.c:170:
+       if(ret < 0 && file && file->f_op == &socket_file_ops ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#51: FILE: read_write.c:170:
+       if(ret < 0 && file && file->f_op == &socket_file_ops ) {
+         switch(-ret) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#51: FILE: read_write.c:170:
+       if(ret < 0 && file && file->f_op == &socket_file_ops ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#51: FILE: read_write.c:170:
+       if(ret < 0 && file && file->f_op == &socket_file_ops ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#52: FILE: read_write.c:171:
+         switch(-ret) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: read_write.c:171:
+         switch(-ret) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#52: FILE: read_write.c:171:
+         switch(-ret) {
+               case EAGAIN: case EBADF: case EPIPE: case ENOSPC: case EIO: case ECONNRESET:
+               case EINTR: case ETIMEDOUT: case EFAULT: case EINVAL: case EMSGSIZE: case ENOMEM:
+               case ENOBUFS: case ENOTCONN: 
[...]
+               default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#52: FILE: read_write.c:171:
+         switch(-ret) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: read_write.c:172:
+               case EAGAIN: case EBADF: case EPIPE: case ENOSPC: case EIO: case ECONNRESET:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: read_write.c:172:
+               case EAGAIN: case EBADF: case EPIPE: case ENOSPC: case EIO: case ECONNRESET:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: read_write.c:173:
+               case EINTR: case ETIMEDOUT: case EFAULT: case EINVAL: case EMSGSIZE: case ENOMEM:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: read_write.c:173:
+               case EINTR: case ETIMEDOUT: case EFAULT: case EINVAL: case EMSGSIZE: case ENOMEM:$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: read_write.c:174:
+               case ENOBUFS: case ENOTCONN: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: read_write.c:174:
+               case ENOBUFS: case ENOTCONN: $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: read_write.c:174:
+               case ENOBUFS: case ENOTCONN: $

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: read_write.c:175:
+                 break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: read_write.c:175:
+                 break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: read_write.c:177:
+               default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: read_write.c:178:
+               printk(KERN_ERR "sys_write: ret is unexpectedly %d.\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: read_write.c:178:
+               printk(KERN_ERR "sys_write: ret is unexpectedly %d.\n", ret);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#59: FILE: read_write.c:178:
+               printk(KERN_ERR "sys_write: ret is unexpectedly %d.\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: read_write.c:179:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: read_write.c:179:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: read_write.c:180:
+       }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000557739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 14 warnings, 0 checks, 26 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000557739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
