WARNING:TYPO_SPELLING: 'seqences' may be misspelled - perhaps 'sequences'?
#31: 
Programs can use vt100 control seqences - smacs, rmacs and acsc  characters
                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seqences' may be misspelled - perhaps 'sequences'?
#33: 
valid - current behaviour make these seqences not working in UTF-8 mode.
                                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'seqences' may be misspelled - perhaps 'sequences'?
#35: 
Added reporting malformed UTF-8 seqences as replacement glyphs.
                                ^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#65: FILE: char/vt.c:2000:
+		} else if (vc->vc_utf && !vc->vc_disp_ctrl) {
[...]
 		    if(c > 0x7f) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#77: FILE: char/vt.c:2005:
+			if (vc->vc_utf_count) {
+			       if ((c & 0xc0) == 0x80) {

WARNING:TABSTOP: Statements should start on a tabstop
#78: FILE: char/vt.c:2006:
+			       if ((c & 0xc0) == 0x80) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#78: FILE: char/vt.c:2006:
+			       if ((c & 0xc0) == 0x80) {
+				       vc->vc_utf_char = (vc->vc_utf_char << 6) | (c & 0x3f);

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: char/vt.c:2008:
+       ^I^I^I^I       if (--vc->vc_utf_count) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: char/vt.c:2008:
+       ^I^I^I^I       if (--vc->vc_utf_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: char/vt.c:2008:
+       ^I^I^I^I       if (--vc->vc_utf_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (39, 47)
#80: FILE: char/vt.c:2008:
+       				       if (--vc->vc_utf_count) {
+					       vc->vc_npar++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: char/vt.c:2010:
+^I^I^I^I   ^I       continue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: char/vt.c:2010:
+^I^I^I^I   ^I       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: char/vt.c:2011:
+       ^I^I^I^I       }$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: char/vt.c:2011:
+       ^I^I^I^I       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: char/vt.c:2011:
+       ^I^I^I^I       }$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#84: FILE: char/vt.c:2012:
+				       tc = c = vc->vc_utf_char;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TABSTOP: Statements should start on a tabstop
#85: FILE: char/vt.c:2013:
+			       } else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#85: FILE: char/vt.c:2013:
+			       } else
+				       goto insert_replacement_glyph;

CHECK:BRACES: Unbalanced braces around else statement
#85: FILE: char/vt.c:2013:
+			       } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#86: FILE: char/vt.c:2014:
+				       goto insert_replacement_glyph;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#95: FILE: char/vt.c:2032:
 				} else
+	    			    goto insert_replacement_glyph;

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: char/vt.c:2033:
+^I    ^I^I^I    goto insert_replacement_glyph;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: char/vt.c:2033:
+^I    ^I^I^I    goto insert_replacement_glyph;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 22)
#100: FILE: char/vt.c:2036:
 		    } else {
+		      if (vc->vc_utf_count)

WARNING:TABSTOP: Statements should start on a tabstop
#101: FILE: char/vt.c:2037:
+		      if (vc->vc_utf_count)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (22, 30)
#101: FILE: char/vt.c:2037:
+		      if (vc->vc_utf_count)
+	  		      goto insert_replacement_glyph;

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: char/vt.c:2038:
+^I  ^I^I      goto insert_replacement_glyph;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: char/vt.c:2038:
+^I  ^I^I      goto insert_replacement_glyph;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 23 warnings, 2 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000103234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
