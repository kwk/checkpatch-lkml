ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#104: FILE: arch/i386/mm/extable.c:53:
+		if (ret) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/smp.h:74:
+extern int freeze_other_cpus(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/smp.h:75:
+extern void melt_other_cpus(void);

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: include/linux/smp.h:93:
+#define melt_other_cpus()			do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: kernel/module.c:364:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#243: FILE: kernel/module.c:379:
+	if ((error = get_mod_name(name_user, &name)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#260: FILE: kernel/module.c:405:
+			if(error == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: kernel/module.c:435:
+				if(freeze_other_cpus() == 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: kernel/module.c:1032:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#390: FILE: lib/freeze.c:1:
+/* Currently, those functions are only used for module unloading.  I put them

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#392: FILE: lib/freeze.c:3:
+ * unnecessary noise in module.c */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#393: FILE: lib/freeze.c:4:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#395: FILE: lib/freeze.c:6:
+#include <asm/processor.h>

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#402: FILE: lib/freeze.c:13:
+static volatile int ice_block;

WARNING:MEMORY_BARRIER: memory barrier without comment
#426: FILE: lib/freeze.c:37:
+	wmb();

ERROR:SPACING: space required before the open parenthesis '('
#433: FILE: lib/freeze.c:44:
+	while(atomic_read(&freeze_count) != smp_num_cpus - 1) {

ERROR:SPACING: space required before the open parenthesis '('
#451: FILE: lib/freeze.c:62:
+	while(atomic_read(&freeze_count) != 0); /* this is paranoia */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#451: FILE: lib/freeze.c:62:
+	while(atomic_read(&freeze_count) != 0); /* this is paranoia */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569538.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 6 warnings, 2 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000569538.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
