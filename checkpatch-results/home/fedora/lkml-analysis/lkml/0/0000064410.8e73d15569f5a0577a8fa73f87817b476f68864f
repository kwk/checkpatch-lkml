CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#54: FILE: kernel/power/atomic_copy.c:151:
+	orig_pfn = copy_pfn = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#59: FILE: kernel/power/atomic_copy.c:156:
+		if (!this_pbe ||
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: kernel/power/atomic_copy.c:157:
+^I^I    ((((unsigned long) this_pbe) & (PAGE_SIZE - 1)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#60: FILE: kernel/power/atomic_copy.c:157:
+		    ((((unsigned long) this_pbe) & (PAGE_SIZE - 1)) 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#63: FILE: kernel/power/atomic_copy.c:160:
+			this_pbe = (struct pbe *) suspend_get_nonconflicting_page();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#64: FILE: kernel/power/atomic_copy.c:161:
+			BUG_ON(!this_pbe);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#65: FILE: kernel/power/atomic_copy.c:162:
+			BUG_ON(PagePageset1(virt_to_page(this_pbe)));

CHECK:BRACES: Unbalanced braces around else statement
#66: FILE: kernel/power/atomic_copy.c:163:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: kernel/power/atomic_copy.c:172:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#82: FILE: kernel/power/atomic_copy.c:179:
+		this_pbe->orig_address = (unsigned long) page_address(pfn_to_page(orig_pfn));

CHECK:SPACING: No space is necessary after a cast
#83: FILE: kernel/power/atomic_copy.c:180:
+		this_pbe->address = (unsigned long) page_address(pfn_to_page(copy_pfn));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 2 warnings, 7 checks, 53 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
