WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
diff -rupP --exclude-from=ignore linux-2.6.4-pristine/arch/i386/kernel/ptrace.c linux-2.6.4/arch/i386/kernel/ptrace.c

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: include/linux/audit.h:80:
+#define AUDIT_ARG1      (AUDIT_ARG0+1)
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: include/linux/audit.h:81:
+#define AUDIT_ARG2      (AUDIT_ARG0+2)
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#169: FILE: include/linux/audit.h:82:
+#define AUDIT_ARG3      (AUDIT_ARG0+3)
                                    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/audit.h:147:
+extern void audit_syscall_exit(struct task_struct *task, int return_code);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/linux/audit.h:161:
+#define audit_syscall_entry(t,a,b,c,d,e) do { ; } while (0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/linux/audit.h:161:
+#define audit_syscall_entry(t,a,b,c,d,e) do { ; } while (0)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/linux/audit.h:161:
+#define audit_syscall_entry(t,a,b,c,d,e) do { ; } while (0)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/linux/audit.h:161:
+#define audit_syscall_entry(t,a,b,c,d,e) do { ; } while (0)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/linux/audit.h:161:
+#define audit_syscall_entry(t,a,b,c,d,e) do { ; } while (0)
                                      ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#193: FILE: include/linux/audit.h:161:
+#define audit_syscall_entry(t,a,b,c,d,e) do { ; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: include/linux/audit.h:162:
+#define audit_syscall_exit(t,r) do { ; } while (0)
                             ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#194: FILE: include/linux/audit.h:162:
+#define audit_syscall_exit(t,r) do { ; } while (0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: kernel/auditsc.c:238:
+^I^I   always called with audit_netlink_sem held. */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: kernel/auditsc.c:238:
+		/* The *_rcu iterators not needed here because we are
+		   always called with audit_netlink_sem held. */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#227: FILE: kernel/auditsc.c:238:
+		   always called with audit_netlink_sem held. */ 

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#328: FILE: kernel/auditsc.c:341:
+					if (MAJOR(ctx->names[j].rdev)==value) {
 					                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#346: FILE: kernel/auditsc.c:351:
+					if (MINOR(ctx->names[j].rdev)==value) {
 					                             ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#364: FILE: kernel/auditsc.c:361:
+					if (MINOR(ctx->names[j].ino)==value) {
 					                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#385: FILE: kernel/auditsc.c:378:
+				result = (ctx->argv[field-AUDIT_ARG0]==value);
 				                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#385: FILE: kernel/auditsc.c:378:
+				result = (ctx->argv[field-AUDIT_ARG0]==value);
 				                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: kernel/auditsc.c:594:
+	audit_log_format(ab,
+		  " a0=%lx a1=%lx a2=%lx a3=%lx items=%d"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 5 warnings, 6 checks, 401 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293785.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
