WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
------------------------------------------------------------------------------

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#92: FILE: net/decnet/netfilter/Kconfig:8:
+config DECNET_NF_GRABULATOR
+	tristate "Routing message grabulator (for userland routing daemon)"
+	help
+	  Enable this module if you want to use the userland DECnet routing
+	  daemon. You will also need to enable routing support for DECnet
+	  unless you just want to monitor routing messages from other nodes.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: net/decnet/netfilter/dn_rtmsg.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#143: FILE: net/decnet/netfilter/dn_rtmsg.c:30:
+static struct sock *dnrmg = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#145: FILE: net/decnet/netfilter/dn_rtmsg.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#171: FILE: net/decnet/netfilter/dn_rtmsg.c:58:
+	if (skb)
+		kfree(skb);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#174: FILE: net/decnet/netfilter/dn_rtmsg.c:61:
+		printk(KERN_ERR "dn_rtmsg: error creating netlink message\n");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#185: FILE: net/decnet/netfilter/dn_rtmsg.c:72:
+	switch(flags & DN_RT_CNTL_MSK) {
+		case DN_RT_PKT_L1RT:
[...]
+		case DN_RT_PKT_L2RT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#185: FILE: net/decnet/netfilter/dn_rtmsg.c:72:
+	switch(flags & DN_RT_CNTL_MSK) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb2"
#197: FILE: net/decnet/netfilter/dn_rtmsg.c:84:
+	if (skb2 == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: net/decnet/netfilter/dn_rtmsg.c:90:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: net/decnet/netfilter/dn_rtmsg.c:92:
+static unsigned int dnrmg_hook(unsigned int hook,
+			struct sk_buff **pskb,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: net/decnet/netfilter/dn_rtmsg.c:101:
+
+

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#215: FILE: net/decnet/netfilter/dn_rtmsg.c:102:
+#define RCV_SKB_FAIL(err) do { netlink_ack(skb, nlh, (err)); return; } while (0)

ERROR:SPACING: space required before the open parenthesis '('
#236: FILE: net/decnet/netfilter/dn_rtmsg.c:123:
+	while((skb = skb_dequeue(&sk->receive_queue)) != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dnrmg"
#254: FILE: net/decnet/netfilter/dn_rtmsg.c:141:
+	if (dnrmg == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#255: FILE: net/decnet/netfilter/dn_rtmsg.c:142:
+		printk(KERN_ERR "dn_rtmsg: Cannot create netlink socket");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#260: FILE: net/decnet/netfilter/dn_rtmsg.c:147:
+	if (rv) {
+		sock_release(dnrmg->socket);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: net/decnet/netfilter/dn_rtmsg.c:160:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 8 warnings, 7 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
