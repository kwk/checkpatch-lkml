ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/arch/i386/kernel/Makefile	Thu Oct 17 21:25:02 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#66: FILE: arch/i386/kernel/time.c:75:
+volatile unsigned long __jiffies __section_jiffies;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: arch/i386/kernel/vsyscall.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#150: FILE: arch/i386/kernel/vsyscall.c:15:
+ *  $Id: vsyscall.c,v 1.9 2002/03/21 13:42:58 ak Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#180: FILE: arch/i386/kernel/vsyscall.c:45:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: arch/i386/kernel/vsyscall.c:52:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#187: FILE: arch/i386/kernel/vsyscall.c:52:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_" #nr) over __attribute__((__section__(".vsyscall_" #nr)))
#187: FILE: arch/i386/kernel/vsyscall.c:52:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#187: FILE: arch/i386/kernel/vsyscall.c:52:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/i386/kernel/vsyscall.c:59:
+static int errno __section_vxtime_sequence; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: arch/i386/kernel/vsyscall.c:61:
+static inline _syscall2(int,gettimeofday,struct timeval *,tv,struct timezone *,tz)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: arch/i386/kernel/vsyscall.c:61:
+static inline _syscall2(int,gettimeofday,struct timeval *,tv,struct timezone *,tz)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#196: FILE: arch/i386/kernel/vsyscall.c:61:
+static inline _syscall2(int,gettimeofday,struct timeval *,tv,struct timezone *,tz)
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: arch/i386/kernel/vsyscall.c:61:
+static inline _syscall2(int,gettimeofday,struct timeval *,tv,struct timezone *,tz)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#196: FILE: arch/i386/kernel/vsyscall.c:61:
+static inline _syscall2(int,gettimeofday,struct timeval *,tv,struct timezone *,tz)
                                                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: arch/i386/kernel/vsyscall.c:66:
+static inline void do_vgettimeofday(struct timeval * tv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#210: FILE: arch/i386/kernel/vsyscall.c:75:
+		rmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/i386/kernel/vsyscall.c:76:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: arch/i386/kernel/vsyscall.c:78:
+		rdtsc(eax,edx);
 		         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: arch/i386/kernel/vsyscall.c:92:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#229: FILE: arch/i386/kernel/vsyscall.c:94:
+			:"=a" (eax), "=d" (edx)
 			^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#230: FILE: arch/i386/kernel/vsyscall.c:95:
+			:"rm" (__fast_gettimeoffset_quotient),
 			^

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#237: FILE: arch/i386/kernel/vsyscall.c:102:
+			unsigned long lost = __jiffies - __wall_jiffies;
 			                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#238: FILE: arch/i386/kernel/vsyscall.c:103:
+			unsigned long lost = __jiffies - __wall_jiffies;
+			if (lost)

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#242: FILE: arch/i386/kernel/vsyscall.c:107:
+		usec += (__xtime.tv_nsec / 1000);;

WARNING:MEMORY_BARRIER: memory barrier without comment
#244: FILE: arch/i386/kernel/vsyscall.c:109:
+		rmb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: arch/i386/kernel/vsyscall.c:116:
+static inline void do_get_tz(struct timezone * tz)

WARNING:MEMORY_BARRIER: memory barrier without comment
#257: FILE: arch/i386/kernel/vsyscall.c:122:
+		rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#261: FILE: arch/i386/kernel/vsyscall.c:126:
+		rmb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: arch/i386/kernel/vsyscall.c:131:
+static int __vsyscall(0) vgettimeofday(struct timeval * tv, struct timezone * tz)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: arch/i386/kernel/vsyscall.c:131:
+static int __vsyscall(0) vgettimeofday(struct timeval * tv, struct timezone * tz)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: arch/i386/kernel/vsyscall.c:134:
+^Ireturn gettimeofday(tv,tz); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: arch/i386/kernel/vsyscall.c:134:
+	return gettimeofday(tv,tz); 
 	                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: arch/i386/kernel/vsyscall.c:144:
+static time_t __vsyscall(1) vtime(time_t * t)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: arch/i386/kernel/vsyscall.c:146:
+^Istruct timeval tv; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: arch/i386/kernel/vsyscall.c:147:
+^Ivgettimeofday(&tv,NULL); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: arch/i386/kernel/vsyscall.c:147:
+	struct timeval tv; 
+	vgettimeofday(&tv,NULL); 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#282: FILE: arch/i386/kernel/vsyscall.c:147:
+	vgettimeofday(&tv,NULL); 
 	                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: arch/i386/kernel/vsyscall.c:149:
+^I^I*t = tv.tv_sec; $

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#290: FILE: arch/i386/kernel/vsyscall.c:155:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#295: FILE: arch/i386/kernel/vsyscall.c:160:
+	return -ENOSYS;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#297: FILE: arch/i386/kernel/vsyscall.c:162:
+}
+static void __init map_vsyscall(void)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#299: FILE: arch/i386/kernel/vsyscall.c:164:
+	extern char __vsyscall_0;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#300: FILE: arch/i386/kernel/vsyscall.c:165:
+	unsigned long physaddr_page0 = (unsigned long) &__vsyscall_0 - __START_KERNEL_map;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#301: FILE: arch/i386/kernel/vsyscall.c:166:
+	pgd_t* pd;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#302: FILE: arch/i386/kernel/vsyscall.c:167:
+	pmd_t* pm;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: arch/i386/kernel/vsyscall.c:173:
+^I * XXX HACK ALERT: this assumes non-vsyscall kernel space $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: arch/i386/kernel/vsyscall.c:178:
+	pm = pmd_offset(pd,(unsigned long)&__last_tsc_low);
 	                  ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#316: FILE: arch/i386/kernel/vsyscall.c:181:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#320: FILE: arch/i386/kernel/vsyscall.c:185:
+	printk("VSYSCALL: consistency checks...");

CHECK:SPACING: No space is necessary after a cast
#321: FILE: arch/i386/kernel/vsyscall.c:186:
+	if ((unsigned long) &vgettimeofday != VSYSCALL_ADDR(__NR_vgettimeofday))

CHECK:SPACING: No space is necessary after a cast
#323: FILE: arch/i386/kernel/vsyscall.c:188:
+	if ((unsigned long) &vtime != VSYSCALL_ADDR(__NR_vtime))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: arch/i386/kernel/vsyscall.c:193:
+	printk("passed...mapping...");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#330: FILE: arch/i386/kernel/vsyscall.c:195:
+	printk("done.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: arch/i386/kernel/vsyscall.c:196:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#332: FILE: arch/i386/kernel/vsyscall.c:197:
+	printk("VSYSCALL: fixmap virt addr: 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: arch/i386/kernel/vsyscall.c:198:
+	printk("VSYSCALL: fixmap virt addr: 0x%lx\n",
+		__fix_to_virt(VSYSCALL_FIRST_PAGE));

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#338: FILE: arch/i386/kernel/vsyscall.c:203:
+__initcall(vsyscall_init);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: arch/i386/vmlinux.lds.S:93:
+  $

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#359: FILE: arch/i386/vmlinux.lds.S:97:
+  .vsyscall_0 0xffffe000: AT ((LOADADDR(.data.cacheline_aligned) + SIZEOF(.data.cacheline_aligned) + 4095) & ~(4095)) { *(.vsyscall_0) }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#362: FILE: arch/i386/vmlinux.lds.S:100:
+  .vxtime_sequence : AT ((LOADADDR(.vsyscall_0) + SIZEOF(.vsyscall_0) + 63) & ~(63)) { *(.vxtime_sequence) }

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#366: FILE: arch/i386/vmlinux.lds.S:104:
+  .delay_at_last_interrupt : AT (LOADADDR(.last_tsc_low) + SIZEOF(.last_tsc_low)) { *(.delay_at_last_interrupt) }

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#368: FILE: arch/i386/vmlinux.lds.S:106:
+  .fast_gettimeoffset_quotient : AT (LOADADDR(.delay_at_last_interrupt) + SIZEOF(.delay_at_last_interrupt)) { *(.fast_gettimeoffset_quotient) }

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#370: FILE: arch/i386/vmlinux.lds.S:108:
+  .wall_jiffies : AT (LOADADDR(.fast_gettimeoffset_quotient) + SIZEOF(.fast_gettimeoffset_quotient)) { *(.wall_jiffies) }

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#401: FILE: include/asm-i386/fixmap.h:54:
+	VSYSCALL_FIRST_PAGE = VSYSCALL_LAST_PAGE + ((VSYSCALL_END-VSYSCALL_START) >> PAGE_SHIFT) - 1,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#401: FILE: include/asm-i386/fixmap.h:54:
+	VSYSCALL_FIRST_PAGE = VSYSCALL_LAST_PAGE + ((VSYSCALL_END-VSYSCALL_START) >> PAGE_SHIFT) - 1,
 	                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: include/asm-i386/pgtable.h:144:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#428: FILE: include/asm-i386/vsyscall.h:1:
+#ifndef _ASM_i386_VSYSCALL_H_

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#439: FILE: include/asm-i386/vsyscall.h:12:
+#define VSYSCALL_ADDR(vsyscall_nr) (VSYSCALL_START+VSYSCALL_SIZE*(vsyscall_nr))
                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#439: FILE: include/asm-i386/vsyscall.h:12:
+#define VSYSCALL_ADDR(vsyscall_nr) (VSYSCALL_START+VSYSCALL_SIZE*(vsyscall_nr))
                                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#444: FILE: include/asm-i386/vsyscall.h:17:
+#define __section_last_tsc_low	__attribute__ ((unused, __section__ (".last_tsc_low")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#444: FILE: include/asm-i386/vsyscall.h:17:
+#define __section_last_tsc_low	__attribute__ ((unused, __section__ (".last_tsc_low")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".last_tsc_low") over __attribute__((__section__(".last_tsc_low")))
#444: FILE: include/asm-i386/vsyscall.h:17:
+#define __section_last_tsc_low	__attribute__ ((unused, __section__ (".last_tsc_low")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#444: FILE: include/asm-i386/vsyscall.h:17:
+#define __section_last_tsc_low	__attribute__ ((unused, __section__ (".last_tsc_low")))

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#445: FILE: include/asm-i386/vsyscall.h:18:
+#define __section_delay_at_last_interrupt	__attribute__ ((unused, __section__ (".delay_at_last_interrupt")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: include/asm-i386/vsyscall.h:18:
+#define __section_delay_at_last_interrupt	__attribute__ ((unused, __section__ (".delay_at_last_interrupt")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#445: FILE: include/asm-i386/vsyscall.h:18:
+#define __section_delay_at_last_interrupt	__attribute__ ((unused, __section__ (".delay_at_last_interrupt")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".delay_at_last_interrupt") over __attribute__((__section__(".delay_at_last_interrupt")))
#445: FILE: include/asm-i386/vsyscall.h:18:
+#define __section_delay_at_last_interrupt	__attribute__ ((unused, __section__ (".delay_at_last_interrupt")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#445: FILE: include/asm-i386/vsyscall.h:18:
+#define __section_delay_at_last_interrupt	__attribute__ ((unused, __section__ (".delay_at_last_interrupt")))

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#446: FILE: include/asm-i386/vsyscall.h:19:
+#define __section_fast_gettimeoffset_quotient	__attribute__ ((unused, __section__ (".fast_gettimeoffset_quotient")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#446: FILE: include/asm-i386/vsyscall.h:19:
+#define __section_fast_gettimeoffset_quotient	__attribute__ ((unused, __section__ (".fast_gettimeoffset_quotient")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#446: FILE: include/asm-i386/vsyscall.h:19:
+#define __section_fast_gettimeoffset_quotient	__attribute__ ((unused, __section__ (".fast_gettimeoffset_quotient")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".fast_gettimeoffset_quotient") over __attribute__((__section__(".fast_gettimeoffset_quotient")))
#446: FILE: include/asm-i386/vsyscall.h:19:
+#define __section_fast_gettimeoffset_quotient	__attribute__ ((unused, __section__ (".fast_gettimeoffset_quotient")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#446: FILE: include/asm-i386/vsyscall.h:19:
+#define __section_fast_gettimeoffset_quotient	__attribute__ ((unused, __section__ (".fast_gettimeoffset_quotient")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: include/asm-i386/vsyscall.h:20:
+#define __section_wall_jiffies __attribute__ ((unused, __section__ (".wall_jiffies")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#447: FILE: include/asm-i386/vsyscall.h:20:
+#define __section_wall_jiffies __attribute__ ((unused, __section__ (".wall_jiffies")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".wall_jiffies") over __attribute__((__section__(".wall_jiffies")))
#447: FILE: include/asm-i386/vsyscall.h:20:
+#define __section_wall_jiffies __attribute__ ((unused, __section__ (".wall_jiffies")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#447: FILE: include/asm-i386/vsyscall.h:20:
+#define __section_wall_jiffies __attribute__ ((unused, __section__ (".wall_jiffies")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#448: FILE: include/asm-i386/vsyscall.h:21:
+#define __section_jiffies __attribute__ ((unused, __section__ (".jiffies")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#448: FILE: include/asm-i386/vsyscall.h:21:
+#define __section_jiffies __attribute__ ((unused, __section__ (".jiffies")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".jiffies") over __attribute__((__section__(".jiffies")))
#448: FILE: include/asm-i386/vsyscall.h:21:
+#define __section_jiffies __attribute__ ((unused, __section__ (".jiffies")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#448: FILE: include/asm-i386/vsyscall.h:21:
+#define __section_jiffies __attribute__ ((unused, __section__ (".jiffies")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: include/asm-i386/vsyscall.h:22:
+#define __section_sys_tz __attribute__ ((unused, __section__ (".sys_tz")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#449: FILE: include/asm-i386/vsyscall.h:22:
+#define __section_sys_tz __attribute__ ((unused, __section__ (".sys_tz")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".sys_tz") over __attribute__((__section__(".sys_tz")))
#449: FILE: include/asm-i386/vsyscall.h:22:
+#define __section_sys_tz __attribute__ ((unused, __section__ (".sys_tz")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#449: FILE: include/asm-i386/vsyscall.h:22:
+#define __section_sys_tz __attribute__ ((unused, __section__ (".sys_tz")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#450: FILE: include/asm-i386/vsyscall.h:23:
+#define __section_xtime __attribute__ ((unused, __section__ (".xtime")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#450: FILE: include/asm-i386/vsyscall.h:23:
+#define __section_xtime __attribute__ ((unused, __section__ (".xtime")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".xtime") over __attribute__((__section__(".xtime")))
#450: FILE: include/asm-i386/vsyscall.h:23:
+#define __section_xtime __attribute__ ((unused, __section__ (".xtime")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#450: FILE: include/asm-i386/vsyscall.h:23:
+#define __section_xtime __attribute__ ((unused, __section__ (".xtime")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: include/asm-i386/vsyscall.h:24:
+#define __section_vxtime_sequence __attribute__ ((unused, __section__ (".vxtime_sequence")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#451: FILE: include/asm-i386/vsyscall.h:24:
+#define __section_vxtime_sequence __attribute__ ((unused, __section__ (".vxtime_sequence")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vxtime_sequence") over __attribute__((__section__(".vxtime_sequence")))
#451: FILE: include/asm-i386/vsyscall.h:24:
+#define __section_vxtime_sequence __attribute__ ((unused, __section__ (".vxtime_sequence")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#451: FILE: include/asm-i386/vsyscall.h:24:
+#define __section_vxtime_sequence __attribute__ ((unused, __section__ (".vxtime_sequence")))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#459: FILE: include/asm-i386/vsyscall.h:32:
+extern volatile unsigned long __jiffies;

ERROR:SPACING: space required before the open parenthesis '('
#471: FILE: include/asm-i386/vsyscall.h:44:
+#define vxtime_lock() do { vxtime_sequence[0]++; wmb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#471: FILE: include/asm-i386/vsyscall.h:44:
+#define vxtime_lock() do { vxtime_sequence[0]++; wmb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#472: FILE: include/asm-i386/vsyscall.h:45:
+#define vxtime_unlock() do { wmb(); vxtime_sequence[1]++; } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422168.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 56 warnings, 11 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422168.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
