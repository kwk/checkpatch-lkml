WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
diff -urN -X dontdiff linux-2.5.59/include/linux/frlock.h linux-2.5-frlock/include/linux/frlock.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: include/linux/frlock.h:1:
+#ifndef __LINUX_FRLOCK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'consitent' may be misspelled - perhaps 'consistent'?
#50: FILE: include/linux/frlock.h:8:
+ * lock for data where the reader wants a consitent set of information
                                           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: include/linux/frlock.h:11:
+ * progress. Writers do not wait for readers. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: include/linux/frlock.h:13:
+ * Generalization on sequence variables used for gettimeofday on x86-64 $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#63: FILE: include/linux/frlock.h:21:
+ * ^Ido {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: include/linux/frlock.h:23:
+ * ^I...$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#77: FILE: include/linux/frlock.h:35:
+typedef struct {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#78: FILE: include/linux/frlock.h:36:
+	unsigned pre_sequence;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#79: FILE: include/linux/frlock.h:37:
+	unsigned post_sequence;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#80: FILE: include/linux/frlock.h:38:
+	spinlock_t lock;

CHECK:SPACING: No space is necessary after a cast
#84: FILE: include/linux/frlock.h:42:
+#define frlock_init(x)	   do { *(x) = (frlock_t) FR_LOCK_UNLOCKED; } while (0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#84: FILE: include/linux/frlock.h:42:
+#define frlock_init(x)	   do { *(x) = (frlock_t) FR_LOCK_UNLOCKED; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:MEMORY_BARRIER: memory barrier without comment
#94: FILE: include/linux/frlock.h:52:
+	wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#99: FILE: include/linux/frlock.h:57:
+	wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#101: FILE: include/linux/frlock.h:59:
+	BUG_ON(rw->post_sequence != rw->pre_sequence);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: include/linux/frlock.h:70:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: include/linux/frlock.h:72:
+static inline void fr_write_unlock(frlock_t *rw) $

WARNING:MEMORY_BARRIER: memory barrier without comment
#126: FILE: include/linux/frlock.h:84:
+		wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: include/linux/frlock.h:90:
+static inline unsigned fr_read_begin(const frlock_t *rw) $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#132: FILE: include/linux/frlock.h:90:
+static inline unsigned fr_read_begin(const frlock_t *rw) 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#134: FILE: include/linux/frlock.h:92:
+	unsigned ret;

WARNING:MEMORY_BARRIER: memory barrier without comment
#137: FILE: include/linux/frlock.h:95:
+	rmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: include/linux/frlock.h:97:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#140: FILE: include/linux/frlock.h:98:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: include/linux/frlock.h:101:
+static inline unsigned fr_read_end(const frlock_t *rw)

WARNING:MEMORY_BARRIER: memory barrier without comment
#145: FILE: include/linux/frlock.h:103:
+	rmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: include/linux/frlock.h:115:
+        do { local_bh_disable();^I fr_write_lock(lock); } while (0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/frlock.h:115:
+        do { local_bh_disable();^I fr_write_lock(lock); } while (0)$

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: include/linux/frlock.h:118:
+	do { fr_write_unlock(lock); local_irq_restore(flags); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#162: FILE: include/linux/frlock.h:120:
+	do { fr_write_unlock(lock); local_irq_enable(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: include/linux/frlock.h:122:
+	do { fr_write_unlock(lock); local_bh_enable(); } while(0)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#203: FILE: kernel/time.c:40:
+extern frlock_t xtime_lock;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tv"
#230: FILE: kernel/time.c:98:
+	if (likely(tv != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tz"
#237: FILE: kernel/time.c:104:
+	if (unlikely(tz != NULL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: kernel/time.c:411:
+        unsigned long seq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: kernel/time.c:411:
+        unsigned long seq;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: kernel/time.c:415:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: kernel/timer.c:801:
+ * The 64-bit jiffies value is not atomic $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 21 warnings, 5 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000396854.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
