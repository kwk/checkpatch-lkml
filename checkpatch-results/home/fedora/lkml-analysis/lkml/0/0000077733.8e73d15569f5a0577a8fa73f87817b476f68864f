WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#50: FILE: fs/ufs/balloc.c:42:
+void ufs_free_fragments (struct inode * inode, unsigned fragment, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#50: FILE: fs/ufs/balloc.c:42:
+void ufs_free_fragments (struct inode * inode, unsigned fragment, unsigned count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#50: FILE: fs/ufs/balloc.c:42:
+void ufs_free_fragments (struct inode * inode, unsigned fragment, unsigned count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#50: FILE: fs/ufs/balloc.c:42:
+void ufs_free_fragments (struct inode * inode, unsigned fragment, unsigned count)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#60: FILE: fs/ufs/balloc.c:138:
+void ufs_free_blocks (struct inode * inode, unsigned fragment, unsigned count)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#60: FILE: fs/ufs/balloc.c:138:
+void ufs_free_blocks (struct inode * inode, unsigned fragment, unsigned count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: fs/ufs/balloc.c:138:
+void ufs_free_blocks (struct inode * inode, unsigned fragment, unsigned count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#60: FILE: fs/ufs/balloc.c:138:
+void ufs_free_blocks (struct inode * inode, unsigned fragment, unsigned count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: fs/ufs/balloc.c:231:
+ * also we suppose that oldb...oldb+count-1 blocks $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: fs/ufs/balloc.c:234:
+static void ufs_change_blocknr(struct inode *inode, unsigned int count, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: fs/ufs/balloc.c:235:
+^I^I^I       unsigned int oldb, unsigned int newb, $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#81: FILE: fs/ufs/balloc.c:239:
+	sector_t baseblk=((inode->i_size-1)>>inode->i_blkbits)+1-count;
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#81: FILE: fs/ufs/balloc.c:239:
+	sector_t baseblk=((inode->i_size-1)>>inode->i_blkbits)+1-count;
 	                                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#81: FILE: fs/ufs/balloc.c:239:
+	sector_t baseblk=((inode->i_size-1)>>inode->i_blkbits)+1-count;
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#81: FILE: fs/ufs/balloc.c:239:
+	sector_t baseblk=((inode->i_size-1)>>inode->i_blkbits)+1-count;
 	                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#81: FILE: fs/ufs/balloc.c:239:
+	sector_t baseblk=((inode->i_size-1)>>inode->i_blkbits)+1-count;
 	                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#83: FILE: fs/ufs/balloc.c:241:
+	pgoff_t cur_index=locked_page->index;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#90: FILE: fs/ufs/balloc.c:248:
+	for (i=0; i<count; i+=blk_per_page) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#90: FILE: fs/ufs/balloc.c:248:
+	for (i=0; i<count; i+=blk_per_page) {
 	           ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#90: FILE: fs/ufs/balloc.c:248:
+	for (i=0; i<count; i+=blk_per_page) {
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#91: FILE: fs/ufs/balloc.c:249:
+		pgoff_t index = (baseblk+i) >> (PAGE_CACHE_SHIFT - inode->i_blkbits);
 		                        ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#93: FILE: fs/ufs/balloc.c:251:
+		if (likely(cur_index!=index))
 		                    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#100: FILE: fs/ufs/balloc.c:258:
+					       (filler_t*)mapping->a_ops->readpage, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#102: FILE: fs/ufs/balloc.c:260:
+				printk(KERN_ERR "ufs_change_blocknr: read_cache_page error: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ufs_change_blocknr', this function's name, in a string
#102: FILE: fs/ufs/balloc.c:260:
+				printk(KERN_ERR "ufs_change_blocknr: read_cache_page error: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#103: FILE: fs/ufs/balloc.c:261:
+				printk(KERN_ERR "ufs_change_blocknr: read_cache_page error: "
+				       "ino %lu, index: %lu\n", inode->i_ino, index);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/ufs/balloc.c:266:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#111: FILE: fs/ufs/balloc.c:269:
+				printk(KERN_ERR "ufs_change_blocknr: can not read page: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ufs_change_blocknr', this function's name, in a string
#111: FILE: fs/ufs/balloc.c:269:
+				printk(KERN_ERR "ufs_change_blocknr: can not read page: "

WARNING:SPLIT_STRING: quoted string split across lines
#112: FILE: fs/ufs/balloc.c:270:
+				printk(KERN_ERR "ufs_change_blocknr: can not read page: "
+				       "ino %lu, index: %lu\n", inode->i_ino, index);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: fs/ufs/balloc.c:273:
+^I^I  $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#122: FILE: fs/ufs/balloc.c:280:
+		j=i;
 		 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#126: FILE: fs/ufs/balloc.c:284:
+			if (likely(bh->b_blocknr==j+oldb && j<count)) {
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: fs/ufs/balloc.c:284:
+			if (likely(bh->b_blocknr==j+oldb && j<count)) {
 			                           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#126: FILE: fs/ufs/balloc.c:284:
+			if (likely(bh->b_blocknr==j+oldb && j<count)) {
 			                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: fs/ufs/balloc.c:287:
+				bh->b_blocknr = newb+j++;
 				                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: fs/ufs/balloc.c:292:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: fs/ufs/balloc.c:292:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: fs/ufs/balloc.c:295:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/ufs/balloc.c:295:
+ $

WARNING:INDENTED_LABEL: labels should not be indented
#139: FILE: fs/ufs/balloc.c:297:
+	out:

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#140: FILE: fs/ufs/balloc.c:298:
+		if (likely(cur_index!=index)) {
 		                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/ufs/balloc.c:302:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: fs/ufs/balloc.c:302:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/ufs/balloc.c:302:
+ ^I}$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: fs/ufs/balloc.c:306:
+unsigned ufs_new_fragments(struct inode * inode, __fs32 * p, unsigned fragment,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: fs/ufs/balloc.c:306:
+unsigned ufs_new_fragments(struct inode * inode, __fs32 * p, unsigned fragment,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: fs/ufs/balloc.c:306:
+unsigned ufs_new_fragments(struct inode * inode, __fs32 * p, unsigned fragment,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: fs/ufs/balloc.c:306:
+unsigned ufs_new_fragments(struct inode * inode, __fs32 * p, unsigned fragment,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: fs/ufs/balloc.c:307:
+			   unsigned goal, unsigned count, int * err, struct page *locked_page)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: fs/ufs/balloc.c:307:
+			   unsigned goal, unsigned count, int * err, struct page *locked_page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/ufs/balloc.c:307:
+			   unsigned goal, unsigned count, int * err, struct page *locked_page)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#158: FILE: fs/ufs/balloc.c:312:
+	unsigned cgno, oldcount, newcount, tmp, request, result;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: fs/ufs/inode.c:178:
+^I^I^I^I^I     unsigned int required, int *err, int metadata, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: fs/ufs/inode.c:237:
+^I^I^I^I^I^I fs32_to_cpu(sb, *p2), uspi->s_fpb - lastblockoff, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: fs/ufs/inode.c:250:
+^I^I^I^I^I goal, required + blockoff, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: fs/ufs/inode.c:258:
+^I^I^I^I^Ifs32_to_cpu(sb, *p), required +  (blockoff - lastblockoff), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: fs/ufs/inode.c:267:
+^I^Itmp = ufs_new_fragments(inode, p, fragment - blockoff, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: fs/ufs/inode.c:311:
+static struct buffer_head *ufs_block_getfrag(struct inode *inode, struct buffer_head *bh, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: fs/ufs/inode.c:312:
+^I^I^I^I^I     unsigned int fragment, unsigned int new_fragment, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: fs/ufs/inode.c:313:
+^I^I^I^I^I     unsigned int blocksize, int * err, int metadata, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: fs/ufs/inode.c:313:
+					     unsigned int blocksize, int * err, int metadata, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: fs/ufs/inode.c:359:
+^Itmp = ufs_new_fragments(inode, p, ufs_blknum(new_fragment), goal, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__fs32 *' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#301: FILE: include/linux/ufs_fs.h:879:
+extern unsigned ufs_new_fragments(struct inode *, __fs32 *, unsigned, unsigned, 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: include/linux/ufs_fs.h:880:
+				  unsigned, int *, struct page *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 33 warnings, 8 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
