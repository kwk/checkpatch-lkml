WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#32: 
The delalloc pathes have code in ext2_writepage() which recognises when
             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#58: 
iput().
^^^^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#163: FILE: fs/buffer.c:804:
+	spinlock_t *lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: fs/buffer.c:806:
+	unsigned nr_to_write;	/* livelock avoidance */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#234: FILE: include/linux/buffer_head.h:155:
+int inode_has_buffers(struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#235: FILE: include/linux/buffer_head.h:156:
+void invalidate_inode_buffers(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#236: FILE: include/linux/buffer_head.h:157:
+int fsync_buffers_list(spinlock_t *lock, struct list_head *);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#261: FILE: fs/ext2/inode.c:44:
+	if (atomic_read(&inode->i_count) < 2)	/* final iput? */
 	                                     	         ^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#291: FILE: fs/ext2/inode.c:609:
+	writeback_mapping: ext2_writeback_mapping,
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#291: FILE: fs/ext2/inode.c:609:
+	writeback_mapping: ext2_writeback_mapping,

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: fs/fs-writeback.c:166:
+^I^I^I ^I/* Not a whole-file writeback */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#373: FILE: fs/fs-writeback.c:166:
+^I^I^I ^I/* Not a whole-file writeback */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: fs/fs-writeback.c:170:
+				list_add_tail(&inode->i_list,
+						&sb->s_dirty);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: fs/fs-writeback.c:217:
+static void sync_sb_inodes(struct super_block *sb, int sync_mode,
 		int *nr_to_write, unsigned long *older_than_this)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: fs/fs-writeback.c:300:
+			sync_sb_inodes(sb, sync_mode, nr_to_write,
+					older_than_this);

WARNING:LINE_SPACING: Missing a blank line after declarations
#585: FILE: fs/fs-writeback.c:343:
+	struct super_block *sb;
+	spin_lock(&sb_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#587: FILE: fs/fs-writeback.c:345:
+	for (; sb != sb_entry(&super_blocks); sb = sb_entry(sb->s_list.prev)) {
+		sb->s_syncing = val;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#797: FILE: include/linux/writeback.h:35:
+void sync_inodes_sb(struct super_block *, int wait);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 4 checks, 668 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457754.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
