WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> > I noticed that Jens Axboe's patch to allow Mount Rainier support did not 

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#84: FILE: drivers/cdrom/cdrom.c:302:
+static const char *mrw_format_status[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#91: FILE: drivers/cdrom/cdrom.c:309:
+static const char *mrw_address_space[] = { "DMA", "GAA" };

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cdi"
#149: FILE: drivers/cdrom/cdrom.c:431:
+	if (cdi == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#173: FILE: drivers/cdrom/cdrom.c:455:
+	struct event_header *eh = (struct event_header *) buffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#214: FILE: drivers/cdrom/cdrom.c:496:
+		return 0;
+	} else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#215: FILE: drivers/cdrom/cdrom.c:497:
+		printk("cdrom: %s: unknown mrw mode page\n", cdi->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: drivers/cdrom/cdrom.c:501:
+	printk("cdrom: %s: mrw mode page %x\n", cdi->name, cdi->mrw_mode_page);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: drivers/cdrom/cdrom.c:503:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#236: FILE: drivers/cdrom/cdrom.c:518:
+	if ((ret = cdi->ops->generic_packet(cdi, &cgc)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#242: FILE: drivers/cdrom/cdrom.c:524:
+	if ((ret = cdrom_mrw_probe_pc(cdi)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: drivers/cdrom/cdrom.c:536:
+	printk("cdrom: %sstarting format\n", cont ? "Re" : "");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#284: FILE: drivers/cdrom/cdrom.c:566:
+		printk("cdrom: bgformat failed\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: drivers/cdrom/cdrom.c:610:
+		printk("cdrom: issuing MRW back ground format suspend\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#350: FILE: drivers/cdrom/cdrom.c:632:
+	if ((ret = cdrom_mode_sense(cdi, &cgc, cdi->mrw_mode_page, 0)))

CHECK:SPACING: No space is necessary after a cast
#353: FILE: drivers/cdrom/cdrom.c:635:
+	mph = (struct mode_page_header *) buffer;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#360: FILE: drivers/cdrom/cdrom.c:642:
+	if ((ret = cdrom_mode_select(cdi, &cgc)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#363: FILE: drivers/cdrom/cdrom.c:645:
+	printk("cdrom: %s: mrw address space %s selected\n", cdi->name, mrw_address_space[space]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#394: FILE: drivers/cdrom/cdrom.c:676:
+		printk("failed setting lba address space\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: drivers/cdrom/cdrom.c:684:
+		printk("cdrom not erasable\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#414: FILE: drivers/cdrom/cdrom.c:696:
+	printk("cdrom open: mrw_status '%s'\n", mrw_format_status[di.mrw_status]);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#440: FILE: drivers/cdrom/cdrom.c:722:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#457: FILE: drivers/cdrom/cdrom.c:745:
+		printk("cdrom: %s opening for WRITE\n", current->comm);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#459: FILE: drivers/cdrom/cdrom.c:747:
+			printk("bzzt\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#495: FILE: drivers/cdrom/cdrom.c:855:
+	if (CDROM_CAN(CDC_LOCK) && (cdi->options & CDO_LOCK)) {
 			cdo->lock_door(cdi, 1);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#551: FILE: drivers/cdrom/cdrom.c:2645:
+EXPORT_SYMBOL(cdrom_is_mrw);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#560: FILE: drivers/cdrom/cdrom.c:2742:
+	pos += sprintf(info+pos, "\nCan read MRW:");
 	                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW) != 0);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <topCdromPtr>
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cdi"
#561: FILE: drivers/cdrom/cdrom.c:2743:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#562: FILE: drivers/cdrom/cdrom.c:2744:
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW) != 0);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#564: FILE: drivers/cdrom/cdrom.c:2746:
+	pos += sprintf(info+pos, "\nCan write MRW:");
 	                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW_W) != 0);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)
 	                                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cdi"
#565: FILE: drivers/cdrom/cdrom.c:2747:
+	for (cdi=topCdromPtr;cdi!=NULL;cdi=cdi->next)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#566: FILE: drivers/cdrom/cdrom.c:2748:
+	    pos += sprintf(info+pos, "\t\t%d", CDROM_CAN(CDC_MRW_W) != 0);
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#594: FILE: drivers/ide/ide-cd.c:781:
+				cdrom_saw_media_change (drive);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#600: FILE: drivers/ide/ide-cd.c:784:
+				printk ("%s: tray open\n", drive->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#600: FILE: drivers/ide/ide-cd.c:784:
+				printk ("%s: tray open\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#618: FILE: drivers/ide/ide-cd.c:859:
+				printk(KERN_INFO "ide-cd: cmd 0x%x timed out\n", rq->cmd[0]);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#627: FILE: drivers/ide/ide-cd.c:907:
+		ide_execute_command(drive, WIN_PACKETCMD, handler, ATAPI_WAIT_PC, cdrom_timer_expiry);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#870: FILE: drivers/ide/ide-cd.c:2930:
+	    !strcmp(drive->id->model,"STINGRAY 8422 IDE 8X CD-ROM 7-27-95")) {
 	                            ^

CHECK:SPACING: No space is necessary after a cast
#883: FILE: drivers/ide/ide-cd.c:2943:
+	cdi->handle = (ide_drive_t *) drive;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#917: FILE: drivers/ide/ide-cd.c:3037:
+		printk(" CD-MR%s", CDROM_CONFIG_FLAGS(drive)->mrw_w ? "W" : "");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: drivers/scsi/sr.c:70:
+	 CDC_CD_R|CDC_CD_RW|CDC_DVD|CDC_DVD_R|CDC_DVD_RAM|CDC_GENERIC_PACKET| \
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: drivers/scsi/sr.c:70:
+	 CDC_CD_R|CDC_CD_RW|CDC_DVD|CDC_DVD_R|CDC_DVD_RAM|CDC_GENERIC_PACKET| \
 	                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: drivers/scsi/sr.c:70:
+	 CDC_CD_R|CDC_CD_RW|CDC_DVD|CDC_DVD_R|CDC_DVD_RAM|CDC_GENERIC_PACKET| \
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: drivers/scsi/sr.c:70:
+	 CDC_CD_R|CDC_CD_RW|CDC_DVD|CDC_DVD_R|CDC_DVD_RAM|CDC_GENERIC_PACKET| \
 	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#982: FILE: drivers/scsi/sr.c:70:
+	 CDC_CD_R|CDC_CD_RW|CDC_DVD|CDC_DVD_R|CDC_DVD_RAM|CDC_GENERIC_PACKET| \
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#982: FILE: drivers/scsi/sr.c:70:
+	 CDC_CD_R|CDC_CD_RW|CDC_DVD|CDC_DVD_R|CDC_DVD_RAM|CDC_GENERIC_PACKET| \
 	                                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#983: FILE: drivers/scsi/sr.c:71:
+	 CDC_MRW|CDC_MRW_R|CDC_RAM)
 	        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#983: FILE: drivers/scsi/sr.c:71:
+	 CDC_MRW|CDC_MRW_R|CDC_RAM)
 	                  ^

CHECK:CAMELCASE: Avoid CamelCase: <scsi_CDs>
#1001: FILE: drivers/scsi/sr.c:770:
+	if (cdrom_is_mrw(&scsi_CDs[i].cdi, &mrw_write)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1019: FILE: drivers/scsi/sr.c:801:
+	} else
 	if ((buffer[n + 3] & 0x10) == 0)

CHECK:BRACES: Unbalanced braces around else statement
#1019: FILE: drivers/scsi/sr.c:801:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1203: FILE: include/linux/cdrom.h:796:
+        __u8 reserved2^I^I^I: 2;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: include/linux/cdrom.h:796:
+        __u8 reserved2^I^I^I: 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1210: FILE: include/linux/cdrom.h:802:
+        __u8 reserved2^I^I^I: 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1210: FILE: include/linux/cdrom.h:802:
+        __u8 reserved2^I^I^I: 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1250: FILE: include/linux/cdrom.h:891:
+    ^Iint use_count;                  /* number of times device opened */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1250: FILE: include/linux/cdrom.h:891:
+    ^Iint use_count;                  /* number of times device opened */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1250: FILE: include/linux/cdrom.h:891:
+    ^Iint use_count;                  /* number of times device opened */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1251: FILE: include/linux/cdrom.h:892:
+    ^Ichar name[20];                  /* name of the device type */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1251: FILE: include/linux/cdrom.h:892:
+    ^Ichar name[20];                  /* name of the device type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1251: FILE: include/linux/cdrom.h:892:
+    ^Ichar name[20];                  /* name of the device type */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1253: FILE: include/linux/cdrom.h:894:
+        __u8 sanyo_slot^I^I: 2;^I/* Sanyo 3 CD changer support */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: include/linux/cdrom.h:894:
+        __u8 sanyo_slot^I^I: 2;^I/* Sanyo 3 CD changer support */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1254: FILE: include/linux/cdrom.h:895:
+        __u8 reserved^I^I: 6;^I/* not used yet */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1254: FILE: include/linux/cdrom.h:895:
+        __u8 reserved^I^I: 6;^I/* not used yet */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1255: FILE: include/linux/cdrom.h:896:
+	int (*exit)(struct cdrom_device_info *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1261: FILE: include/linux/cdrom.h:902:
+	int (*open) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1261: FILE: include/linux/cdrom.h:902:
+	int (*open) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1261: FILE: include/linux/cdrom.h:902:
+	int (*open) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1262: FILE: include/linux/cdrom.h:903:
+	void (*release) (struct cdrom_device_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1262: FILE: include/linux/cdrom.h:903:
+	void (*release) (struct cdrom_device_info *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1263: FILE: include/linux/cdrom.h:904:
+	int (*drive_status) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1263: FILE: include/linux/cdrom.h:904:
+	int (*drive_status) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1263: FILE: include/linux/cdrom.h:904:
+	int (*drive_status) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1264: FILE: include/linux/cdrom.h:905:
+	int (*media_changed) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1264: FILE: include/linux/cdrom.h:905:
+	int (*media_changed) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1264: FILE: include/linux/cdrom.h:905:
+	int (*media_changed) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1265: FILE: include/linux/cdrom.h:906:
+	int (*tray_move) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1265: FILE: include/linux/cdrom.h:906:
+	int (*tray_move) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1265: FILE: include/linux/cdrom.h:906:
+	int (*tray_move) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1266: FILE: include/linux/cdrom.h:907:
+	int (*lock_door) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1266: FILE: include/linux/cdrom.h:907:
+	int (*lock_door) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1266: FILE: include/linux/cdrom.h:907:
+	int (*lock_door) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1267: FILE: include/linux/cdrom.h:908:
+	int (*select_speed) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1267: FILE: include/linux/cdrom.h:908:
+	int (*select_speed) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1267: FILE: include/linux/cdrom.h:908:
+	int (*select_speed) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1268: FILE: include/linux/cdrom.h:909:
+	int (*select_disc) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1268: FILE: include/linux/cdrom.h:909:
+	int (*select_disc) (struct cdrom_device_info *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1268: FILE: include/linux/cdrom.h:909:
+	int (*select_disc) (struct cdrom_device_info *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1269: FILE: include/linux/cdrom.h:910:
+	int (*get_last_session) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1269: FILE: include/linux/cdrom.h:910:
+	int (*get_last_session) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_multisession *' should also have an identifier name
#1269: FILE: include/linux/cdrom.h:910:
+	int (*get_last_session) (struct cdrom_device_info *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1271: FILE: include/linux/cdrom.h:912:
+	int (*get_mcn) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1271: FILE: include/linux/cdrom.h:912:
+	int (*get_mcn) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_mcn *' should also have an identifier name
#1271: FILE: include/linux/cdrom.h:912:
+	int (*get_mcn) (struct cdrom_device_info *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1274: FILE: include/linux/cdrom.h:915:
+	int (*reset) (struct cdrom_device_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1274: FILE: include/linux/cdrom.h:915:
+	int (*reset) (struct cdrom_device_info *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1276: FILE: include/linux/cdrom.h:917:
+	int (*audio_ioctl) (struct cdrom_device_info *,unsigned int, void *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1276: FILE: include/linux/cdrom.h:917:
+	int (*audio_ioctl) (struct cdrom_device_info *,unsigned int, void *);
 	                                              ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1276: FILE: include/linux/cdrom.h:917:
+	int (*audio_ioctl) (struct cdrom_device_info *,unsigned int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1276: FILE: include/linux/cdrom.h:917:
+	int (*audio_ioctl) (struct cdrom_device_info *,unsigned int, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1276: FILE: include/linux/cdrom.h:917:
+	int (*audio_ioctl) (struct cdrom_device_info *,unsigned int, void *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: include/linux/cdrom.h:919:
+ ^Iint (*dev_ioctl) (struct cdrom_device_info *,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1278: FILE: include/linux/cdrom.h:919:
+ ^Iint (*dev_ioctl) (struct cdrom_device_info *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1278: FILE: include/linux/cdrom.h:919:
+ ^Iint (*dev_ioctl) (struct cdrom_device_info *,$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1278: FILE: include/linux/cdrom.h:919:
+ 	int (*dev_ioctl) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1278: FILE: include/linux/cdrom.h:919:
+ 	int (*dev_ioctl) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1278: FILE: include/linux/cdrom.h:919:
+ 	int (*dev_ioctl) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1278: FILE: include/linux/cdrom.h:919:
+ 	int (*dev_ioctl) (struct cdrom_device_info *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1284: FILE: include/linux/cdrom.h:925:
+	int (*generic_packet) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1284: FILE: include/linux/cdrom.h:925:
+	int (*generic_packet) (struct cdrom_device_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_generic_command *' should also have an identifier name
#1284: FILE: include/linux/cdrom.h:925:
+	int (*generic_packet) (struct cdrom_device_info *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1289: FILE: include/linux/cdrom.h:930:
+extern int cdrom_open(struct cdrom_device_info *, struct inode *, struct file *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1289: FILE: include/linux/cdrom.h:930:
+extern int cdrom_open(struct cdrom_device_info *, struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1289: FILE: include/linux/cdrom.h:930:
+extern int cdrom_open(struct cdrom_device_info *, struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1289: FILE: include/linux/cdrom.h:930:
+extern int cdrom_open(struct cdrom_device_info *, struct inode *, struct file *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1290: FILE: include/linux/cdrom.h:931:
+extern int cdrom_release(struct cdrom_device_info *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1290: FILE: include/linux/cdrom.h:931:
+extern int cdrom_release(struct cdrom_device_info *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1290: FILE: include/linux/cdrom.h:931:
+extern int cdrom_release(struct cdrom_device_info *, struct file *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1291: FILE: include/linux/cdrom.h:932:
+extern int cdrom_ioctl(struct cdrom_device_info *, struct inode *, unsigned, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1291: FILE: include/linux/cdrom.h:932:
+extern int cdrom_ioctl(struct cdrom_device_info *, struct inode *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1291: FILE: include/linux/cdrom.h:932:
+extern int cdrom_ioctl(struct cdrom_device_info *, struct inode *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1291: FILE: include/linux/cdrom.h:932:
+extern int cdrom_ioctl(struct cdrom_device_info *, struct inode *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#1291: FILE: include/linux/cdrom.h:932:
+extern int cdrom_ioctl(struct cdrom_device_info *, struct inode *, unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1291: FILE: include/linux/cdrom.h:932:
+extern int cdrom_ioctl(struct cdrom_device_info *, struct inode *, unsigned, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1292: FILE: include/linux/cdrom.h:933:
+extern int cdrom_media_changed(struct cdrom_device_info *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cdrom_device_info *' should also have an identifier name
#1292: FILE: include/linux/cdrom.h:933:
+extern int cdrom_media_changed(struct cdrom_device_info *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1294: FILE: include/linux/cdrom.h:935:
+extern int register_cdrom(struct cdrom_device_info *cdi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1295: FILE: include/linux/cdrom.h:936:
+extern int unregister_cdrom(struct cdrom_device_info *cdi);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1297: FILE: include/linux/cdrom.h:938:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: include/linux/cdrom.h:939:
+    int data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1299: FILE: include/linux/cdrom.h:940:
+    int audio;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1300: FILE: include/linux/cdrom.h:941:
+    int cdi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: include/linux/cdrom.h:942:
+    int xa;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: include/linux/cdrom.h:943:
+    long error;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1305: FILE: include/linux/cdrom.h:946:
+extern int cdrom_get_last_written(struct cdrom_device_info *cdi, long *last_written);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1306: FILE: include/linux/cdrom.h:947:
+extern int cdrom_number_of_slots(struct cdrom_device_info *cdi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1307: FILE: include/linux/cdrom.h:948:
+extern int cdrom_mode_select(struct cdrom_device_info *cdi,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1309: FILE: include/linux/cdrom.h:950:
+extern int cdrom_mode_sense(struct cdrom_device_info *cdi,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1312: FILE: include/linux/cdrom.h:953:
+extern void init_cdrom_command(struct cdrom_generic_command *cgc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1371: FILE: include/linux/cdrom.h:1127:
+extern int cdrom_get_media_event(struct cdrom_device_info *cdi, struct media_event_desc *med);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1372: FILE: include/linux/cdrom.h:1128:
+extern int cdrom_is_mrw(struct cdrom_device_info *cdi, int *write);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317932.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 97 warnings, 34 checks, 1261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000317932.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
