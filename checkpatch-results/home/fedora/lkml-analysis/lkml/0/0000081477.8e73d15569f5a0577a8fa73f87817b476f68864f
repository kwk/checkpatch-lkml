WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
Create a driver which lives in the acpi subsystem to handle dock events.  This 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: drivers/acpi/dock.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: drivers/acpi/dock.c:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: drivers/acpi/dock.c:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#116: FILE: drivers/acpi/dock.c:46:
+	spinlock_t dd_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#117: FILE: drivers/acpi/dock.c:47:
+	spinlock_t hp_lock;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#267: FILE: drivers/acpi/dock.c:197:
+EXPORT_SYMBOL_GPL(is_dock_device);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#361: FILE: drivers/acpi/dock.c:291:
+	printk(KERN_INFO PREFIX "%s\n", dock ? "docking" : "undocking");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#428: FILE: drivers/acpi/dock.c:358:
+EXPORT_SYMBOL_GPL(register_dock_notifier);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#439: FILE: drivers/acpi/dock.c:369:
+EXPORT_SYMBOL_GPL(unregister_dock_notifier);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#475: FILE: drivers/acpi/dock.c:405:
+EXPORT_SYMBOL_GPL(register_hotplug_dock_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#493: FILE: drivers/acpi/dock.c:423:
+EXPORT_SYMBOL_GPL(unregister_hotplug_dock_device);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: drivers/acpi/dock.c:447:
+				printk(KERN_ERR PREFIX "Unable to dock!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: drivers/acpi/dock.c:459:
+         * According to acpi spec 3.0a, if a DEVICE_CHECK notification$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: drivers/acpi/dock.c:460:
+         * is sent and _DCK is present, it is assumed to mean an$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: drivers/acpi/dock.c:461:
+         * undock request.  This notify routine will only be called$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: drivers/acpi/dock.c:462:
+         * for objects defining _DCK, so we will fall through to eject$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#532: FILE: drivers/acpi/dock.c:462:
+         * for objects defining _DCK, so we will fall through to eject

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: drivers/acpi/dock.c:463:
+         * request here.  However, we will pass an eject request through$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: drivers/acpi/dock.c:465:
+         */$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#548: FILE: drivers/acpi/dock.c:478:
+				printk(KERN_ERR PREFIX "Unable to undock!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#552: FILE: drivers/acpi/dock.c:482:
+		printk(KERN_ERR PREFIX "Unknown dock event %d\n", event);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#631: FILE: drivers/acpi/dock.c:561:
+		printk(KERN_ERR PREFIX "Error installing notify handler\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#636: FILE: drivers/acpi/dock.c:566:
+	printk(KERN_INFO PREFIX "%s \n", ACPI_DOCK_DRIVER_NAME);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#636: FILE: drivers/acpi/dock.c:566:
+	printk(KERN_INFO PREFIX "%s \n", ACPI_DOCK_DRIVER_NAME);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#658: FILE: drivers/acpi/dock.c:588:
+	list_for_each_entry_safe(dd, tmp, &dock_station->dependent_devices,
[...]
+	    kfree(dd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#667: FILE: drivers/acpi/dock.c:597:
+		printk(KERN_ERR "Error removing notify handler\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#727: FILE: drivers/acpi/Kconfig:137:
+config ACPI_DOCK
+	tristate "Dock"
+	depends on !ACPI_IBM_DOCK
+	default y
+	help
+	  This driver adds support for ACPI controlled docking stations
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#775: FILE: drivers/acpi/scan.c:728:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: include/acpi/acpi_drivers.h:114:
+                                  Dock Station$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#797: FILE: include/acpi/acpi_drivers.h:114:
+/*--------------------------------------------------------------------------
+                                  Dock Station

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#798: FILE: include/acpi/acpi_drivers.h:115:
+  -------------------------------------------------------------------------- */

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#799: FILE: include/acpi/acpi_drivers.h:116:
+#if defined(CONFIG_ACPI_DOCK) || defined(CONFIG_ACPI_DOCK_MODULE)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#800: FILE: include/acpi/acpi_drivers.h:117:
+extern int is_dock_device(acpi_handle handle);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#801: FILE: include/acpi/acpi_drivers.h:118:
+extern int register_dock_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#802: FILE: include/acpi/acpi_drivers.h:119:
+extern void unregister_dock_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#803: FILE: include/acpi/acpi_drivers.h:120:
+extern int register_hotplug_dock_device(acpi_handle handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#804: FILE: include/acpi/acpi_drivers.h:121:
+extern int register_hotplug_dock_device(acpi_handle handle,
+	acpi_notify_handler handler, void *context);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#805: FILE: include/acpi/acpi_drivers.h:122:
+extern void unregister_hotplug_dock_device(acpi_handle handle);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#808: FILE: include/acpi/acpi_drivers.h:125:
+#define register_dock_notifier(nb) ^I^I(-ENODEV)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#809: FILE: include/acpi/acpi_drivers.h:126:
+#define unregister_dock_notifier(nb)           ^Ido { } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#809: FILE: include/acpi/acpi_drivers.h:126:
+#define unregister_dock_notifier(nb)           	do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#811: FILE: include/acpi/acpi_drivers.h:128:
+#define unregister_hotplug_dock_device(h)       do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081477.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 23 warnings, 9 checks, 728 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000081477.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
