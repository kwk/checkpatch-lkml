WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
diff -Naur linux-2.6.0-test1-ac2/fs/Kconfig linux-2.6.0-test1-ac2-sfs/fs/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#65: FILE: fs/Kconfig:1117:
+config SQUASHFS
+	tristate "SquashFs file system support"
+	help
+	  Saying Y here includes support for SquashFs.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: fs/squashfs/inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#122: FILE: fs/squashfs/inode.c:21:
+#include <asm/uaccess.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#134: FILE: fs/squashfs/inode.c:33:
+#define TRACE(s, args...)				printk(KERN_NOTICE "SQUASHFS: "s, ## args)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#139: FILE: fs/squashfs/inode.c:38:
+#define ERROR(s, args...)				printk(KERN_ERR "SQUASHFS error: "s, ## args)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#139: FILE: fs/squashfs/inode.c:38:
+#define ERROR(s, args...)				printk(KERN_ERR "SQUASHFS error: "s, ## args)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#141: FILE: fs/squashfs/inode.c:40:
+#define SERROR(s, args...)				if(!silent) printk(KERN_ERR "SQUASHFS error: "s, ## args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#141: FILE: fs/squashfs/inode.c:40:
+#define SERROR(s, args...)				if(!silent) printk(KERN_ERR "SQUASHFS error: "s, ## args)

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: fs/squashfs/inode.c:40:
+#define SERROR(s, args...)				if(!silent) printk(KERN_ERR "SQUASHFS error: "s, ## args)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#141: FILE: fs/squashfs/inode.c:40:
+#define SERROR(s, args...)				if(!silent) printk(KERN_ERR "SQUASHFS error: "s, ## args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#142: FILE: fs/squashfs/inode.c:41:
+#define WARNING(s, args...)				printk(KERN_WARNING "SQUASHFS: "s, ## args)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#144: FILE: fs/squashfs/inode.c:43:
+typedef struct squashfs_inode_info {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: fs/squashfs/inode.c:64:
+static unsigned int read_data(struct super_block *s, char *buffer,
+		unsigned int index, int length, unsigned int *next_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: fs/squashfs/inode.c:66:
+static int squashfs_get_cached_block(struct super_block *s, char *buffer,
+		unsigned int block, unsigned int offset, int length,

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#190: FILE: fs/squashfs/inode.c:89:
+static struct address_space_operations squashfs_symlink_aops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#194: FILE: fs/squashfs/inode.c:93:
+static struct address_space_operations squashfs_aops = {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#198: FILE: fs/squashfs/inode.c:97:
+static struct file_operations squashfs_dir_ops = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#203: FILE: fs/squashfs/inode.c:102:
+static struct inode_operations squashfs_dir_inode_ops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: fs/squashfs/inode.c:115:
+static unsigned int read_data(struct super_block *s, char *buffer,
+		unsigned int index, int length, unsigned int *next_index)

CHECK:CAMELCASE: Avoid CamelCase: <msBlk>
#218: FILE: fs/squashfs/inode.c:117:
+	squashfs_sb_info *msBlk = s->s_fs_info;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required before the open parenthesis '('
#227: FILE: fs/squashfs/inode.c:126:
+	if(!(bh[0] = sb_bread(s, cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#227: FILE: fs/squashfs/inode.c:126:
+	if(!(bh[0] = sb_bread(s, cur_index)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#230: FILE: fs/squashfs/inode.c:129:
+	if(length)

CHECK:BRACES: braces {} should be used on all arms of this statement
#230: FILE: fs/squashfs/inode.c:129:
+	if(length)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#232: FILE: fs/squashfs/inode.c:131:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: fs/squashfs/inode.c:132:
+		if(msBlk->devblksize - offset == 1) {

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: fs/squashfs/inode.c:133:
+			if(msBlk->swap)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#235: FILE: fs/squashfs/inode.c:134:
+				((unsigned char *) &c_byte)[1] = *((unsigned char *) (bh[0]->b_data + offset));

CHECK:SPACING: No space is necessary after a cast
#235: FILE: fs/squashfs/inode.c:134:
+				((unsigned char *) &c_byte)[1] = *((unsigned char *) (bh[0]->b_data + offset));

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#237: FILE: fs/squashfs/inode.c:136:
+				((unsigned char *) &c_byte)[0] = *((unsigned char *) (bh[0]->b_data + offset));

CHECK:SPACING: No space is necessary after a cast
#237: FILE: fs/squashfs/inode.c:136:
+				((unsigned char *) &c_byte)[0] = *((unsigned char *) (bh[0]->b_data + offset));

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: fs/squashfs/inode.c:138:
+			if(!(bh[0] = sb_bread(s, ++cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#239: FILE: fs/squashfs/inode.c:138:
+			if(!(bh[0] = sb_bread(s, ++cur_index)))

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: fs/squashfs/inode.c:140:
+			if(msBlk->swap)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: fs/squashfs/inode.c:141:
+^I^I^I^I((unsigned char *) &c_byte)[0] = *((unsigned char *) bh[0]->b_data); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#242: FILE: fs/squashfs/inode.c:141:
+				((unsigned char *) &c_byte)[0] = *((unsigned char *) bh[0]->b_data); 

CHECK:SPACING: No space is necessary after a cast
#242: FILE: fs/squashfs/inode.c:141:
+				((unsigned char *) &c_byte)[0] = *((unsigned char *) bh[0]->b_data); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: fs/squashfs/inode.c:143:
+^I^I^I^I((unsigned char *) &c_byte)[1] = *((unsigned char *) bh[0]->b_data); $

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#244: FILE: fs/squashfs/inode.c:143:
+				((unsigned char *) &c_byte)[1] = *((unsigned char *) bh[0]->b_data); 

CHECK:SPACING: No space is necessary after a cast
#244: FILE: fs/squashfs/inode.c:143:
+				((unsigned char *) &c_byte)[1] = *((unsigned char *) bh[0]->b_data); 

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#247: FILE: fs/squashfs/inode.c:146:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#247: FILE: fs/squashfs/inode.c:146:
+		else {

ERROR:SPACING: space required before the open parenthesis '('
#248: FILE: fs/squashfs/inode.c:147:
+			if(msBlk->swap) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#248: FILE: fs/squashfs/inode.c:147:
+			if(msBlk->swap) {
[...]
+			} else
[...]

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#249: FILE: fs/squashfs/inode.c:148:
+				((unsigned char *) &c_byte)[1] = *((unsigned char *) (bh[0]->b_data + offset));

CHECK:SPACING: No space is necessary after a cast
#249: FILE: fs/squashfs/inode.c:148:
+				((unsigned char *) &c_byte)[1] = *((unsigned char *) (bh[0]->b_data + offset));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: fs/squashfs/inode.c:149:
+^I^I^I^I((unsigned char *) &c_byte)[0] = *((unsigned char *) (bh[0]->b_data + offset + 1)); $

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#250: FILE: fs/squashfs/inode.c:149:
+				((unsigned char *) &c_byte)[0] = *((unsigned char *) (bh[0]->b_data + offset + 1)); 

CHECK:SPACING: No space is necessary after a cast
#250: FILE: fs/squashfs/inode.c:149:
+				((unsigned char *) &c_byte)[0] = *((unsigned char *) (bh[0]->b_data + offset + 1)); 

CHECK:BRACES: Unbalanced braces around else statement
#251: FILE: fs/squashfs/inode.c:150:
+			} else

CHECK:SPACING: No space is necessary after a cast
#252: FILE: fs/squashfs/inode.c:151:
+				c_byte = *((unsigned short *) (bh[0]->b_data + offset));

ERROR:SPACING: space required before the open parenthesis '('
#255: FILE: fs/squashfs/inode.c:154:
+		if(SQUASHFS_CHECK_DATA(msBlk->sBlk.flags)) {

CHECK:CAMELCASE: Avoid CamelCase: <sBlk>
#255: FILE: fs/squashfs/inode.c:154:
+		if(SQUASHFS_CHECK_DATA(msBlk->sBlk.flags)) {

ERROR:SPACING: space required before the open parenthesis '('
#256: FILE: fs/squashfs/inode.c:155:
+			if(offset == msBlk->devblksize) {

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: fs/squashfs/inode.c:157:
+				if(!(bh[0] = sb_bread(s, ++cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#258: FILE: fs/squashfs/inode.c:157:
+				if(!(bh[0] = sb_bread(s, ++cur_index)))

CHECK:SPACING: No space is necessary after a cast
#262: FILE: fs/squashfs/inode.c:161:
+			if(*((unsigned char *) (bh[0]->b_data + offset)) != SQUASHFS_MARKER_BYTE) {

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: fs/squashfs/inode.c:161:
+			if(*((unsigned char *) (bh[0]->b_data + offset)) != SQUASHFS_MARKER_BYTE) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#267: FILE: fs/squashfs/inode.c:166:
+			offset ++;
 			       ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#275: FILE: fs/squashfs/inode.c:174:
+	TRACE("Block @ 0x%x, %scompressed size %d\n", index, compressed ? "" : "un", (unsigned int) c_byte);

CHECK:SPACING: No space is necessary after a cast
#275: FILE: fs/squashfs/inode.c:174:
+	TRACE("Block @ 0x%x, %scompressed size %d\n", index, compressed ? "" : "un", (unsigned int) c_byte);

ERROR:SPACING: space required before the open parenthesis '('
#277: FILE: fs/squashfs/inode.c:176:
+	for(b = 1; bytes < c_byte; b++) {

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: fs/squashfs/inode.c:177:
+		if(!(bh[b] = sb_bread(s, ++cur_index)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#278: FILE: fs/squashfs/inode.c:177:
+		if(!(bh[b] = sb_bread(s, ++cur_index)))

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: fs/squashfs/inode.c:182:
+	if(compressed)

ERROR:SPACING: space required before the open parenthesis '('
#286: FILE: fs/squashfs/inode.c:185:
+	for(bytes = 0, k = 0; k < b; k++) {

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#287: FILE: fs/squashfs/inode.c:186:
+		avail_bytes = (c_byte - bytes) > (msBlk->devblksize - offset) ? msBlk->devblksize - offset : c_byte - bytes;

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: fs/squashfs/inode.c:196:
+	if(compressed) {

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: fs/squashfs/inode.c:203:
+		if(((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#304: FILE: fs/squashfs/inode.c:203:
+		if(((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit>
#304: FILE: fs/squashfs/inode.c:203:
+		if(((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||

CHECK:BRACES: braces {} should be used on all arms of this statement
#304: FILE: fs/squashfs/inode.c:203:
+		if(((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: fs/squashfs/inode.c:204:
+		if(((zlib_err = zlib_inflateInit(&stream)) != Z_OK) ||
+				((zlib_err = zlib_inflate(&stream, Z_FINISH)) != Z_STREAM_END) ||

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateEnd>
#306: FILE: fs/squashfs/inode.c:205:
+				((zlib_err = zlib_inflateEnd(&stream)) != Z_OK)) {

CHECK:BRACES: Unbalanced braces around else statement
#309: FILE: fs/squashfs/inode.c:208:
+		} else

ERROR:SPACING: space required before the open parenthesis '('
#314: FILE: fs/squashfs/inode.c:213:
+	if(next_index)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#315: FILE: fs/squashfs/inode.c:214:
+		*next_index = index + c_byte + (length ? 0 : (SQUASHFS_CHECK_DATA(msBlk->sBlk.flags) ? 3 : 2));

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: fs/squashfs/inode.c:219:
+	while(--b >= 0) brelse(bh[b]);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#320: FILE: fs/squashfs/inode.c:219:
+	while(--b >= 0) brelse(bh[b]);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#327: FILE: fs/squashfs/inode.c:226:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: fs/squashfs/inode.c:228:
+static int squashfs_get_cached_block(struct super_block *s, char *buffer,
+		unsigned int block, unsigned int offset, int length,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_get_cached_block', this function's name, in a string
#336: FILE: fs/squashfs/inode.c:235:
+	TRACE("Entered squashfs_get_cached_block [%x:%x]\n", block, offset);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open parenthesis '('
#338: FILE: fs/squashfs/inode.c:237:
+	for(;;) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: fs/squashfs/inode.c:238:
+^I^Ifor(i = 0; i < SQUASHFS_CACHED_BLKS; i++) $

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: fs/squashfs/inode.c:238:
+		for(i = 0; i < SQUASHFS_CACHED_BLKS; i++) 

ERROR:SPACING: space required before the open parenthesis '('
#340: FILE: fs/squashfs/inode.c:239:
+			if(msBlk->block_cache[i].block == block)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: fs/squashfs/inode.c:240:
+^I^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: fs/squashfs/inode.c:241:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#344: FILE: fs/squashfs/inode.c:243:
+		if(i == SQUASHFS_CACHED_BLKS) {

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#346: FILE: fs/squashfs/inode.c:245:
+			for(i = msBlk->next_cache, n = SQUASHFS_CACHED_BLKS; n ; n --, i = (i + 1) % SQUASHFS_CACHED_BLKS)

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: fs/squashfs/inode.c:245:
+			for(i = msBlk->next_cache, n = SQUASHFS_CACHED_BLKS; n ; n --, i = (i + 1) % SQUASHFS_CACHED_BLKS)

ERROR:SPACING: space required before the open parenthesis '('
#347: FILE: fs/squashfs/inode.c:246:
+				if(msBlk->block_cache[i].block != SQUASHFS_USED_BLK)

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: fs/squashfs/inode.c:248:
+			if(n == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: fs/squashfs/inode.c:255:
+			if(msBlk->block_cache[i].block == SQUASHFS_INVALID_BLK) {

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: fs/squashfs/inode.c:256:
+				if(!(msBlk->block_cache[i].data = (unsigned char *)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#357: FILE: fs/squashfs/inode.c:256:
+				if(!(msBlk->block_cache[i].data = (unsigned char *)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#358: FILE: fs/squashfs/inode.c:257:
+							kmalloc(SQUASHFS_METADATA_SIZE, GFP_KERNEL))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: fs/squashfs/inode.c:263:
+^I$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#367: FILE: fs/squashfs/inode.c:266:
+			if(!(msBlk->block_cache[i].length = read_data(s, msBlk->block_cache[i].data, block, 0,

ERROR:SPACING: space required before the open parenthesis '('
#367: FILE: fs/squashfs/inode.c:266:
+			if(!(msBlk->block_cache[i].length = read_data(s, msBlk->block_cache[i].data, block, 0,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#367: FILE: fs/squashfs/inode.c:266:
+			if(!(msBlk->block_cache[i].length = read_data(s, msBlk->block_cache[i].data, block, 0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: fs/squashfs/inode.c:267:
+			if(!(msBlk->block_cache[i].length = read_data(s, msBlk->block_cache[i].data, block, 0,
+							&next_index))) {

ERROR:SPACING: space required before the open parenthesis '('
#379: FILE: fs/squashfs/inode.c:278:
+		if(msBlk->block_cache[i].block != block) {

ERROR:SPACING: space required before the open parenthesis '('
#384: FILE: fs/squashfs/inode.c:283:
+		if((bytes = msBlk->block_cache[i].length - offset) >= length) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#384: FILE: fs/squashfs/inode.c:283:
+		if((bytes = msBlk->block_cache[i].length - offset) >= length) {

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: fs/squashfs/inode.c:285:
+			if(msBlk->block_cache[i].length - offset == length) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: fs/squashfs/inode.c:292:
+^I$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#396: FILE: fs/squashfs/inode.c:295:
+			return return_length;
+		} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#407: FILE: fs/squashfs/inode.c:306:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_iget', this function's name, in a string
#419: FILE: fs/squashfs/inode.c:318:
+	TRACE("Entered squashfs_iget\n");

ERROR:SPACING: space required before the open parenthesis '('
#421: FILE: fs/squashfs/inode.c:320:
+	if(msBlk->swap) {

CHECK:SPACING: No space is necessary after a cast
#424: FILE: fs/squashfs/inode.c:323:
+		if(!squashfs_get_cached_block(s, (char *) &sinodeb, block,  offset,

ERROR:SPACING: space required before the open parenthesis '('
#424: FILE: fs/squashfs/inode.c:323:
+		if(!squashfs_get_cached_block(s, (char *) &sinodeb, block,  offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: fs/squashfs/inode.c:324:
+		if(!squashfs_get_cached_block(s, (char *) &sinodeb, block,  offset,
+					sizeof(sinodeb), &next_block, &next_offset))

CHECK:BRACES: Unbalanced braces around else statement
#428: FILE: fs/squashfs/inode.c:327:
+	} else

CHECK:SPACING: No space is necessary after a cast
#429: FILE: fs/squashfs/inode.c:328:
+		if(!squashfs_get_cached_block(s, (char *) &inodeb, block,  offset,

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: fs/squashfs/inode.c:328:
+		if(!squashfs_get_cached_block(s, (char *) &inodeb, block,  offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: fs/squashfs/inode.c:329:
+		if(!squashfs_get_cached_block(s, (char *) &inodeb, block,  offset,
+					sizeof(inodeb), &next_block, &next_offset))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#438: FILE: fs/squashfs/inode.c:337:
+	i->i_mtime.tv_nsec = i->i_atime.tv_nsec = i->i_ctime.tv_nsec = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#442: FILE: fs/squashfs/inode.c:341:
+	if(inodeb.guid == SQUASHFS_GUIDS)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#449: FILE: fs/squashfs/inode.c:348:
+	switch((inodeb.inode_type - 1) % SQUASHFS_TYPES + 1) {
[...]
+		 case SQUASHFS_BLKDEV_TYPE:
[...]
+		 default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#449: FILE: fs/squashfs/inode.c:348:
+	switch((inodeb.inode_type - 1) % SQUASHFS_TYPES + 1) {

ERROR:SPACING: space required before the open parenthesis '('
#453: FILE: fs/squashfs/inode.c:352:
+			if(msBlk->swap) {

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#456: FILE: fs/squashfs/inode.c:355:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:SPACING: No space is necessary after a cast
#456: FILE: fs/squashfs/inode.c:355:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

ERROR:SPACING: space required before the open parenthesis '('
#456: FILE: fs/squashfs/inode.c:355:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: fs/squashfs/inode.c:356:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),
+							&next_block, &next_offset))

CHECK:BRACES: Unbalanced braces around else statement
#460: FILE: fs/squashfs/inode.c:359:
+			} else

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#461: FILE: fs/squashfs/inode.c:360:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:SPACING: No space is necessary after a cast
#461: FILE: fs/squashfs/inode.c:360:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: fs/squashfs/inode.c:360:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: fs/squashfs/inode.c:361:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),
+							&next_block, &next_offset))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#473: FILE: fs/squashfs/inode.c:372:
+			i->i_mtime.tv_nsec = i->i_atime.tv_nsec =

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#479: FILE: fs/squashfs/inode.c:378:
+					SQUASHFS_INODE_BLK(inode), offset, inodep.start_block, next_block, next_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: fs/squashfs/inode.c:378:
+			TRACE("File inode %x:%x, start_block %x, block_list_start %x, offset %x\n",
+					SQUASHFS_INODE_BLK(inode), offset, inodep.start_block, next_block, next_offset);

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: fs/squashfs/inode.c:384:
+			if(msBlk->swap) {

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#488: FILE: fs/squashfs/inode.c:387:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:SPACING: No space is necessary after a cast
#488: FILE: fs/squashfs/inode.c:387:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

ERROR:SPACING: space required before the open parenthesis '('
#488: FILE: fs/squashfs/inode.c:387:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: fs/squashfs/inode.c:388:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),
+							&next_block, &next_offset))

CHECK:BRACES: Unbalanced braces around else statement
#492: FILE: fs/squashfs/inode.c:391:
+			} else

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#493: FILE: fs/squashfs/inode.c:392:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:SPACING: No space is necessary after a cast
#493: FILE: fs/squashfs/inode.c:392:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: fs/squashfs/inode.c:392:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: fs/squashfs/inode.c:393:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),
+							&next_block, &next_offset))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#504: FILE: fs/squashfs/inode.c:403:
+			i->i_mtime.tv_nsec = i->i_atime.tv_nsec =

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#508: FILE: fs/squashfs/inode.c:407:
+			TRACE("Directory inode %x:%x, start_block %x, offset %x\n", SQUASHFS_INODE_BLK(inode), offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: fs/squashfs/inode.c:408:
+			TRACE("Directory inode %x:%x, start_block %x, offset %x\n", SQUASHFS_INODE_BLK(inode), offset,
+					inodep.start_block, inodep.offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: fs/squashfs/inode.c:413:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#515: FILE: fs/squashfs/inode.c:414:
+			if(msBlk->swap) {

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#518: FILE: fs/squashfs/inode.c:417:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:SPACING: No space is necessary after a cast
#518: FILE: fs/squashfs/inode.c:417:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

ERROR:SPACING: space required before the open parenthesis '('
#518: FILE: fs/squashfs/inode.c:417:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: fs/squashfs/inode.c:418:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),
+							&next_block, &next_offset))

CHECK:BRACES: Unbalanced braces around else statement
#522: FILE: fs/squashfs/inode.c:421:
+			} else

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#523: FILE: fs/squashfs/inode.c:422:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:SPACING: No space is necessary after a cast
#523: FILE: fs/squashfs/inode.c:422:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

ERROR:SPACING: space required before the open parenthesis '('
#523: FILE: fs/squashfs/inode.c:422:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: fs/squashfs/inode.c:423:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),
+							&next_block, &next_offset))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: fs/squashfs/inode.c:433:
+			TRACE("Symbolic link inode %x:%x, start_block %x, offset %x\n",
+				SQUASHFS_INODE_BLK(inode), offset, next_block, next_offset);

WARNING:TABSTOP: Statements should start on a tabstop
#536: FILE: fs/squashfs/inode.c:435:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#537: FILE: fs/squashfs/inode.c:436:
+		 case SQUASHFS_BLKDEV_TYPE:

WARNING:TABSTOP: Statements should start on a tabstop
#538: FILE: fs/squashfs/inode.c:437:
+		 case SQUASHFS_CHRDEV_TYPE: {

ERROR:SPACING: space required before the open parenthesis '('
#541: FILE: fs/squashfs/inode.c:440:
+			if(msBlk->swap) {

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#544: FILE: fs/squashfs/inode.c:443:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:SPACING: No space is necessary after a cast
#544: FILE: fs/squashfs/inode.c:443:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

ERROR:SPACING: space required before the open parenthesis '('
#544: FILE: fs/squashfs/inode.c:443:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: fs/squashfs/inode.c:444:
+				if(!squashfs_get_cached_block(s, (char *) &sinodep, block,  offset, sizeof(sinodep),
+							&next_block, &next_offset))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: fs/squashfs/inode.c:447:
+^I^I^I} else^I$

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: fs/squashfs/inode.c:447:
+			} else	

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#549: FILE: fs/squashfs/inode.c:448:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:SPACING: No space is necessary after a cast
#549: FILE: fs/squashfs/inode.c:448:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

ERROR:SPACING: space required before the open parenthesis '('
#549: FILE: fs/squashfs/inode.c:448:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: fs/squashfs/inode.c:449:
+				if(!squashfs_get_cached_block(s, (char *) &inodep, block,  offset, sizeof(inodep),
+							&next_block, &next_offset))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#554: FILE: fs/squashfs/inode.c:453:
+			i->i_mode |= (inodeb.inode_type == SQUASHFS_CHRDEV_TYPE) ? S_IFCHR : S_IFBLK;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#556: FILE: fs/squashfs/inode.c:455:
+			TRACE("Device inode %x:%x, rdev %x\n", SQUASHFS_INODE_BLK(inode), offset, inodep.rdev);

WARNING:TABSTOP: Statements should start on a tabstop
#558: FILE: fs/squashfs/inode.c:457:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#559: FILE: fs/squashfs/inode.c:458:
+		 default:

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_iget', this function's name, in a string
#560: FILE: fs/squashfs/inode.c:459:
+			ERROR("Unknown inode type %d in squashfs_iget!\n", inodeb.inode_type);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: fs/squashfs/inode.c:462:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: fs/squashfs/inode.c:472:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_fill_super', this function's name, in a string
#581: FILE: fs/squashfs/inode.c:480:
+	TRACE("Entered squashfs_fill_super\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msBlk->sBlk
#587: FILE: fs/squashfs/inode.c:486:
+	sBlk = &(msBlk->sBlk);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: fs/squashfs/inode.c:494:
+^I$

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#598: FILE: fs/squashfs/inode.c:497:
+	if(!read_data(s, (char *) sBlk, SQUASHFS_START, sizeof(squashfs_super_block) | SQUASHFS_COMPRESSED_BIT, NULL)) {

ERROR:SPACING: space required before the open parenthesis '('
#598: FILE: fs/squashfs/inode.c:497:
+	if(!read_data(s, (char *) sBlk, SQUASHFS_START, sizeof(squashfs_super_block) | SQUASHFS_COMPRESSED_BIT, NULL)) {

ERROR:SPACING: space required before the open parenthesis '('
#605: FILE: fs/squashfs/inode.c:504:
+	if((s->s_magic = sBlk->s_magic) != SQUASHFS_MAGIC) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#605: FILE: fs/squashfs/inode.c:504:
+	if((s->s_magic = sBlk->s_magic) != SQUASHFS_MAGIC) {

ERROR:SPACING: space required before the open parenthesis '('
#606: FILE: fs/squashfs/inode.c:505:
+		if(sBlk->s_magic == SQUASHFS_MAGIC_SWAP) {

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#608: FILE: fs/squashfs/inode.c:507:
+			WARNING("Mounting a different endian SQUASHFS filesystem on %s\n", __bdevname(s->s_dev, bbuf));

WARNING:LINE_SPACING: Missing a blank line after declarations
#608: FILE: fs/squashfs/inode.c:507:
+			squashfs_super_block sblk;
+			WARNING("Mounting a different endian SQUASHFS filesystem on %s\n", __bdevname(s->s_dev, bbuf));

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#613: FILE: fs/squashfs/inode.c:512:
+			SERROR("Can't find a SQUASHFS superblock on %s\n", __bdevname(s->s_dev, bbuf));

ERROR:SPACING: space required before the open parenthesis '('
#619: FILE: fs/squashfs/inode.c:518:
+	if(sBlk->s_major != SQUASHFS_MAJOR || sBlk->s_minor > SQUASHFS_MINOR) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: fs/squashfs/inode.c:520:
+		SERROR("Major/Minor mismatch, filesystem is (%d:%d), I support (%d: <= %d)\n",
+				sBlk->s_major, sBlk->s_minor, SQUASHFS_MAJOR, SQUASHFS_MINOR);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#628: FILE: fs/squashfs/inode.c:527:
+	TRACE("Check data is %s present in the filesystem\n", SQUASHFS_CHECK_DATA(sBlk->flags) ? "" : "not");

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#642: FILE: fs/squashfs/inode.c:541:
+	if(!(msBlk->block_cache = (squashfs_cache *) kmalloc(sizeof(squashfs_cache) * SQUASHFS_CACHED_BLKS, GFP_KERNEL))) {

ERROR:SPACING: space required before the open parenthesis '('
#642: FILE: fs/squashfs/inode.c:541:
+	if(!(msBlk->block_cache = (squashfs_cache *) kmalloc(sizeof(squashfs_cache) * SQUASHFS_CACHED_BLKS, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#642: FILE: fs/squashfs/inode.c:541:
+	if(!(msBlk->block_cache = (squashfs_cache *) kmalloc(sizeof(squashfs_cache) * SQUASHFS_CACHED_BLKS, GFP_KERNEL))) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#642: FILE: fs/squashfs/inode.c:541:
+	if(!(msBlk->block_cache = (squashfs_cache *) kmalloc(sizeof(squashfs_cache) * SQUASHFS_CACHED_BLKS, GFP_KERNEL))) {

ERROR:SPACING: space required before the open parenthesis '('
#647: FILE: fs/squashfs/inode.c:546:
+	for(i = 0; i < SQUASHFS_CACHED_BLKS; i++)

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#653: FILE: fs/squashfs/inode.c:552:
+	msBlk->read_size = (sBlk->block_size < SQUASHFS_METADATA_SIZE) ? SQUASHFS_METADATA_SIZE : sBlk->block_size;

CHECK:SPACING: No space is necessary after a cast
#654: FILE: fs/squashfs/inode.c:553:
+	if(!(msBlk->read_data = (char *) kmalloc(msBlk->read_size, GFP_KERNEL))) {

ERROR:SPACING: space required before the open parenthesis '('
#654: FILE: fs/squashfs/inode.c:553:
+	if(!(msBlk->read_data = (char *) kmalloc(msBlk->read_size, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#654: FILE: fs/squashfs/inode.c:553:
+	if(!(msBlk->read_data = (char *) kmalloc(msBlk->read_size, GFP_KERNEL))) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#654: FILE: fs/squashfs/inode.c:553:
+	if(!(msBlk->read_data = (char *) kmalloc(msBlk->read_size, GFP_KERNEL))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: fs/squashfs/inode.c:559:
+^Iif(sBlk->block_size > PAGE_CACHE_SIZE && $

ERROR:SPACING: space required before the open parenthesis '('
#660: FILE: fs/squashfs/inode.c:559:
+	if(sBlk->block_size > PAGE_CACHE_SIZE && 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#660: FILE: fs/squashfs/inode.c:559:
+	if(sBlk->block_size > PAGE_CACHE_SIZE && 

CHECK:SPACING: No space is necessary after a cast
#661: FILE: fs/squashfs/inode.c:560:
+	   !(msBlk->read_page = (char *) kmalloc(sBlk->block_size, GFP_KERNEL))) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#661: FILE: fs/squashfs/inode.c:560:
+	   !(msBlk->read_page = (char *) kmalloc(sBlk->block_size, GFP_KERNEL))) {

CHECK:SPACING: No space is necessary after a cast
#667: FILE: fs/squashfs/inode.c:566:
+	if(!(msBlk->uid = (squashfs_uid *) kmalloc((sBlk->no_uids +

ERROR:SPACING: space required before the open parenthesis '('
#667: FILE: fs/squashfs/inode.c:566:
+	if(!(msBlk->uid = (squashfs_uid *) kmalloc((sBlk->no_uids +

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#667: FILE: fs/squashfs/inode.c:566:
+	if(!(msBlk->uid = (squashfs_uid *) kmalloc((sBlk->no_uids +

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#667: FILE: fs/squashfs/inode.c:566:
+	if(!(msBlk->uid = (squashfs_uid *) kmalloc((sBlk->no_uids +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: fs/squashfs/inode.c:572:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: fs/squashfs/inode.c:572:
+   $

ERROR:SPACING: space required before the open parenthesis '('
#674: FILE: fs/squashfs/inode.c:573:
+	if(msBlk->swap) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#677: FILE: fs/squashfs/inode.c:576:
+		if(!read_data(s, (char *) &suid, sBlk->uid_start, ((sBlk->no_uids + sBlk->no_guids) *

CHECK:SPACING: No space is necessary after a cast
#677: FILE: fs/squashfs/inode.c:576:
+		if(!read_data(s, (char *) &suid, sBlk->uid_start, ((sBlk->no_uids + sBlk->no_guids) *

ERROR:SPACING: space required before the open parenthesis '('
#677: FILE: fs/squashfs/inode.c:576:
+		if(!read_data(s, (char *) &suid, sBlk->uid_start, ((sBlk->no_uids + sBlk->no_guids) *

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#682: FILE: fs/squashfs/inode.c:581:
+		SQUASHFS_SWAP_DATA(msBlk->uid, suid, (sBlk->no_uids + sBlk->no_guids), (sizeof(squashfs_uid) * 8));

CHECK:BRACES: Unbalanced braces around else statement
#683: FILE: fs/squashfs/inode.c:582:
+	} else

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#684: FILE: fs/squashfs/inode.c:583:
+		if(!read_data(s, (char *) msBlk->uid, sBlk->uid_start, ((sBlk->no_uids + sBlk->no_guids) *

CHECK:SPACING: No space is necessary after a cast
#684: FILE: fs/squashfs/inode.c:583:
+		if(!read_data(s, (char *) msBlk->uid, sBlk->uid_start, ((sBlk->no_uids + sBlk->no_guids) *

ERROR:SPACING: space required before the open parenthesis '('
#684: FILE: fs/squashfs/inode.c:583:
+		if(!read_data(s, (char *) msBlk->uid, sBlk->uid_start, ((sBlk->no_uids + sBlk->no_guids) *

ERROR:SPACING: space required before the open parenthesis '('
#690: FILE: fs/squashfs/inode.c:589:
+	if(!(s->s_root = d_alloc_root(squashfs_iget(s, sBlk->root_inode)))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#690: FILE: fs/squashfs/inode.c:589:
+	if(!(s->s_root = d_alloc_root(squashfs_iget(s, sBlk->root_inode)))) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_fill_super', this function's name, in a string
#695: FILE: fs/squashfs/inode.c:594:
+	TRACE("Leaving squashfs_fill_super\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#712: FILE: fs/squashfs/inode.c:611:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#715: FILE: fs/squashfs/inode.c:614:
+	squashfs_super_block *sBlk = &((squashfs_sb_info*)(s->s_fs_info))->sBlk;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_statfs', this function's name, in a string
#717: FILE: fs/squashfs/inode.c:616:
+	TRACE("Entered squashfs_statfs\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#721: FILE: fs/squashfs/inode.c:620:
+	buf->f_bfree = buf->f_bavail = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#728: FILE: fs/squashfs/inode.c:627:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_symlink_readpage', this function's name, in a string
#737: FILE: fs/squashfs/inode.c:636:
+	TRACE("Entered squashfs_symlink_readpage, page index %d, start block %x, offset %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#738: FILE: fs/squashfs/inode.c:637:
+	TRACE("Entered squashfs_symlink_readpage, page index %d, start block %x, offset %x\n",
+		page->index, sqi->start_block, sqi->offset);

ERROR:SPACING: space required before the open parenthesis '('
#740: FILE: fs/squashfs/inode.c:639:
+	while(length < index) {

ERROR:SPACING: space required before the open parenthesis '('
#743: FILE: fs/squashfs/inode.c:642:
+		if(length += bytes = squashfs_get_cached_block(inode->i_sb, buffer, block, offset,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#743: FILE: fs/squashfs/inode.c:642:
+		if(length += bytes = squashfs_get_cached_block(inode->i_sb, buffer, block, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: fs/squashfs/inode.c:643:
+		if(length += bytes = squashfs_get_cached_block(inode->i_sb, buffer, block, offset,
+					PAGE_CACHE_SIZE, &block, &offset), !bytes) {

ERROR:SPACING: space required before the open parenthesis '('
#750: FILE: fs/squashfs/inode.c:649:
+	if(length != index) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_symlink_readpage', this function's name, in a string
#751: FILE: fs/squashfs/inode.c:650:
+		ERROR("(squashfs_symlink_readpage) length != index\n");

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#755: FILE: fs/squashfs/inode.c:654:
+	bytes = (inode->i_size - length) > PAGE_CACHE_SIZE ? PAGE_CACHE_SIZE : inode->i_size - length;

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#756: FILE: fs/squashfs/inode.c:655:
+	if(!squashfs_get_cached_block(inode->i_sb, page_address(page), block, offset, bytes, &block, &offset))

ERROR:SPACING: space required before the open parenthesis '('
#756: FILE: fs/squashfs/inode.c:655:
+	if(!squashfs_get_cached_block(inode->i_sb, page_address(page), block, offset, bytes, &block, &offset))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#768: FILE: fs/squashfs/inode.c:667:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: fs/squashfs/inode.c:684:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_readpage', this function's name, in a string
#786: FILE: fs/squashfs/inode.c:685:
+	TRACE("Entered squashfs_readpage, page index %d, start block %x\n", page->index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: fs/squashfs/inode.c:686:
+	TRACE("Entered squashfs_readpage, page index %d, start block %x\n", page->index,
+		sqi->start_block);

ERROR:SPACING: space required before the open parenthesis '('
#789: FILE: fs/squashfs/inode.c:688:
+	if(index > file_blocks)

ERROR:SPACING: space required before the open parenthesis '('
#792: FILE: fs/squashfs/inode.c:691:
+	for(;;) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#794: FILE: fs/squashfs/inode.c:693:
+		int blocks = (index + 1 - i) > (SIZE >> 1) ? SIZE >> 1 : (index + 1 - i);
+		if(msBlk->swap) {

ERROR:SPACING: space required before the open parenthesis '('
#794: FILE: fs/squashfs/inode.c:693:
+		if(msBlk->swap) {

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#796: FILE: fs/squashfs/inode.c:695:
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) sblock_list, bytes, offset, blocks << 1, &bytes, &offset)) {

CHECK:SPACING: No space is necessary after a cast
#796: FILE: fs/squashfs/inode.c:695:
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) sblock_list, bytes, offset, blocks << 1, &bytes, &offset)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#796: FILE: fs/squashfs/inode.c:695:
+			unsigned char sblock_list[SIZE];
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) sblock_list, bytes, offset, blocks << 1, &bytes, &offset)) {

ERROR:SPACING: space required before the open parenthesis '('
#796: FILE: fs/squashfs/inode.c:695:
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) sblock_list, bytes, offset, blocks << 1, &bytes, &offset)) {

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#800: FILE: fs/squashfs/inode.c:699:
+			SQUASHFS_SWAP_SHORTS(((unsigned short *)block_list), ((unsigned short *)sblock_list), blocks);

CHECK:BRACES: Unbalanced braces around else statement
#801: FILE: fs/squashfs/inode.c:700:
+		} else

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#802: FILE: fs/squashfs/inode.c:701:
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) block_list, bytes, offset, blocks << 1, &bytes, &offset)) {

CHECK:SPACING: No space is necessary after a cast
#802: FILE: fs/squashfs/inode.c:701:
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) block_list, bytes, offset, blocks << 1, &bytes, &offset)) {

ERROR:SPACING: space required before the open parenthesis '('
#802: FILE: fs/squashfs/inode.c:701:
+			if(!squashfs_get_cached_block(inode->i_sb, (char *) block_list, bytes, offset, blocks << 1, &bytes, &offset)) {

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#806: FILE: fs/squashfs/inode.c:705:
+		for(block_listp = (unsigned short *) block_list; i < index && blocks; i ++, block_listp ++, blocks --)

CHECK:SPACING: No space is necessary after a cast
#806: FILE: fs/squashfs/inode.c:705:
+		for(block_listp = (unsigned short *) block_list; i < index && blocks; i ++, block_listp ++, blocks --)

ERROR:SPACING: space prohibited before that '--' (ctx:WxB)
#806: FILE: fs/squashfs/inode.c:705:
+		for(block_listp = (unsigned short *) block_list; i < index && blocks; i ++, block_listp ++, blocks --)
 		                                                                                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#806: FILE: fs/squashfs/inode.c:705:
+		for(block_listp = (unsigned short *) block_list; i < index && blocks; i ++, block_listp ++, blocks --)

ERROR:SPACING: space required before the open parenthesis '('
#808: FILE: fs/squashfs/inode.c:707:
+		if(blocks)

ERROR:SPACING: space required before the open parenthesis '('
#812: FILE: fs/squashfs/inode.c:711:
+	if(sBlk->block_log > PAGE_CACHE_SHIFT) {

ERROR:SPACING: space required before the open parenthesis '('
#819: FILE: fs/squashfs/inode.c:718:
+		if(!(bytes = read_data(inode->i_sb, msBlk->read_page, block, *block_listp, NULL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#819: FILE: fs/squashfs/inode.c:718:
+		if(!(bytes = read_data(inode->i_sb, msBlk->read_page, block, *block_listp, NULL))) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#820: FILE: fs/squashfs/inode.c:719:
+			ERROR("Unable to read page, block %x, size %x\n", block, (int) *block_listp);

CHECK:SPACING: No space is necessary after a cast
#820: FILE: fs/squashfs/inode.c:719:
+			ERROR("Unable to read page, block %x, size %x\n", block, (int) *block_listp);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#824: FILE: fs/squashfs/inode.c:723:
+		for(i = start_index; i <= end_index && byte_offset < bytes; i++, byte_offset += PAGE_CACHE_SIZE) {

ERROR:SPACING: space required before the open parenthesis '('
#824: FILE: fs/squashfs/inode.c:723:
+		for(i = start_index; i <= end_index && byte_offset < bytes; i++, byte_offset += PAGE_CACHE_SIZE) {

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#825: FILE: fs/squashfs/inode.c:724:
+			int available_bytes = (bytes - byte_offset) > PAGE_CACHE_SIZE ? PAGE_CACHE_SIZE : bytes - byte_offset;

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#827: FILE: fs/squashfs/inode.c:726:
+			TRACE("bytes %d, i %d, byte_offset %d, available_bytes %d\n", bytes, i, byte_offset, available_bytes);

ERROR:SPACING: space required before the open parenthesis '('
#829: FILE: fs/squashfs/inode.c:728:
+			if(i == page->index)  {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#830: FILE: fs/squashfs/inode.c:729:
+				memcpy(page_address(page), msBlk->read_page + byte_offset, available_bytes);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#831: FILE: fs/squashfs/inode.c:730:
+				memset(page_address(page) + available_bytes, 0, PAGE_CACHE_SIZE - available_bytes);

ERROR:SPACING: space required before the open parenthesis '('
#838: FILE: fs/squashfs/inode.c:737:
+				if((push_page = grab_cache_page_nowait(page->mapping, i))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#838: FILE: fs/squashfs/inode.c:737:
+				if((push_page = grab_cache_page_nowait(page->mapping, i))) {

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#839: FILE: fs/squashfs/inode.c:738:
+					memcpy(page_address(push_page), msBlk->read_page + byte_offset, available_bytes);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#840: FILE: fs/squashfs/inode.c:739:
+					memset(page_address(push_page) + available_bytes, 0, PAGE_CACHE_SIZE - available_bytes);

ERROR:SPACING: space prohibited after that open parenthesis '('
#848: FILE: fs/squashfs/inode.c:747:
+		up( &msBlk->read_page_mutex);

ERROR:SPACING: space required before the open parenthesis '('
#852: FILE: fs/squashfs/inode.c:751:
+	} else if(sBlk->block_log == PAGE_CACHE_SHIFT) {

ERROR:SPACING: space required before the open parenthesis '('
#853: FILE: fs/squashfs/inode.c:752:
+		if(!(bytes = read_data(inode->i_sb, page_address(page), block, *block_listp, NULL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#853: FILE: fs/squashfs/inode.c:752:
+		if(!(bytes = read_data(inode->i_sb, page_address(page), block, *block_listp, NULL)))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#854: FILE: fs/squashfs/inode.c:753:
+			ERROR("Unable to read page, block %x, size %x\n", block, (int) *block_listp);

CHECK:SPACING: No space is necessary after a cast
#854: FILE: fs/squashfs/inode.c:753:
+			ERROR("Unable to read page, block %x, size %x\n", block, (int) *block_listp);

CHECK:SPACING: No space is necessary after a cast
#858: FILE: fs/squashfs/inode.c:757:
+		char *p = (char *) page_address(page);

ERROR:SPACING: space required before the open parenthesis '('
#861: FILE: fs/squashfs/inode.c:760:
+		if(i_end > file_blocks)

ERROR:SPACING: space required before the open parenthesis '('
#864: FILE: fs/squashfs/inode.c:763:
+		while(index < i_end) {

ERROR:SPACING: space required before the open parenthesis '('
#865: FILE: fs/squashfs/inode.c:764:
+			if(!(byte = read_data(inode->i_sb, p, block, *block_listp, NULL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#865: FILE: fs/squashfs/inode.c:764:
+			if(!(byte = read_data(inode->i_sb, p, block, *block_listp, NULL))) {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#866: FILE: fs/squashfs/inode.c:765:
+				ERROR("Unable to read page, block %x, size %x\n", block, (int) *block_listp);

CHECK:SPACING: No space is necessary after a cast
#866: FILE: fs/squashfs/inode.c:765:
+				ERROR("Unable to read page, block %x, size %x\n", block, (int) *block_listp);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#872: FILE: fs/squashfs/inode.c:771:
+			index ++;
 			      ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#873: FILE: fs/squashfs/inode.c:772:
+			block_listp ++;
 			            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#886: FILE: fs/squashfs/inode.c:785:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_readdir', this function's name, in a string
#899: FILE: fs/squashfs/inode.c:798:
+	TRACE("Entered squashfs_readdir [%x:%x]\n", next_block, next_offset);

ERROR:SPACING: space required before the open parenthesis '('
#903: FILE: fs/squashfs/inode.c:802:
+	while(length < i->i_size) {

ERROR:SPACING: space required before the open parenthesis '('
#905: FILE: fs/squashfs/inode.c:804:
+		if(msBlk->swap) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#907: FILE: fs/squashfs/inode.c:806:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block,

CHECK:SPACING: No space is necessary after a cast
#907: FILE: fs/squashfs/inode.c:806:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block,

WARNING:LINE_SPACING: Missing a blank line after declarations
#907: FILE: fs/squashfs/inode.c:806:
+			squashfs_dir_header sdirh;
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block,

ERROR:SPACING: space required before the open parenthesis '('
#907: FILE: fs/squashfs/inode.c:806:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#907: FILE: fs/squashfs/inode.c:806:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block,

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#908: FILE: fs/squashfs/inode.c:807:
+						next_offset, sizeof(sdirh), &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: fs/squashfs/inode.c:807:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block,
+						next_offset, sizeof(sdirh), &next_block, &next_offset), !bytes)

CHECK:BRACES: Unbalanced braces around else statement
#911: FILE: fs/squashfs/inode.c:810:
+		} else

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#912: FILE: fs/squashfs/inode.c:811:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block,

CHECK:SPACING: No space is necessary after a cast
#912: FILE: fs/squashfs/inode.c:811:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block,

ERROR:SPACING: space required before the open parenthesis '('
#912: FILE: fs/squashfs/inode.c:811:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#912: FILE: fs/squashfs/inode.c:811:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block,

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#913: FILE: fs/squashfs/inode.c:812:
+						next_offset, sizeof(dirh), &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: fs/squashfs/inode.c:812:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block,
+						next_offset, sizeof(dirh), &next_block, &next_offset), !bytes)

ERROR:SPACING: space required before the open parenthesis '('
#917: FILE: fs/squashfs/inode.c:816:
+		while(dir_count--) {

ERROR:SPACING: space required before the open parenthesis '('
#918: FILE: fs/squashfs/inode.c:817:
+			if(msBlk->swap) {

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#920: FILE: fs/squashfs/inode.c:819:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire, next_block,

CHECK:SPACING: No space is necessary after a cast
#920: FILE: fs/squashfs/inode.c:819:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire, next_block,

WARNING:LINE_SPACING: Missing a blank line after declarations
#920: FILE: fs/squashfs/inode.c:819:
+				squashfs_dir_entry sdire;
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire, next_block,

ERROR:SPACING: space required before the open parenthesis '('
#920: FILE: fs/squashfs/inode.c:819:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire, next_block,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#920: FILE: fs/squashfs/inode.c:819:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire, next_block,

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#921: FILE: fs/squashfs/inode.c:820:
+							next_offset, sizeof(sdire), &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#921: FILE: fs/squashfs/inode.c:820:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire, next_block,
+							next_offset, sizeof(sdire), &next_block, &next_offset), !bytes)

CHECK:BRACES: Unbalanced braces around else statement
#924: FILE: fs/squashfs/inode.c:823:
+			} else

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#925: FILE: fs/squashfs/inode.c:824:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire, next_block,

CHECK:SPACING: No space is necessary after a cast
#925: FILE: fs/squashfs/inode.c:824:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire, next_block,

ERROR:SPACING: space required before the open parenthesis '('
#925: FILE: fs/squashfs/inode.c:824:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire, next_block,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#925: FILE: fs/squashfs/inode.c:824:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire, next_block,

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#926: FILE: fs/squashfs/inode.c:825:
+							next_offset, sizeof(*dire), &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#926: FILE: fs/squashfs/inode.c:825:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire, next_block,
+							next_offset, sizeof(*dire), &next_block, &next_offset), !bytes)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#929: FILE: fs/squashfs/inode.c:828:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name, next_block,

ERROR:SPACING: space required before the open parenthesis '('
#929: FILE: fs/squashfs/inode.c:828:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name, next_block,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#929: FILE: fs/squashfs/inode.c:828:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name, next_block,

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#930: FILE: fs/squashfs/inode.c:829:
+						next_offset, dire->size + 1, &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: fs/squashfs/inode.c:829:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name, next_block,
+						next_offset, dire->size + 1, &next_block, &next_offset), !bytes)

ERROR:SPACING: space required before the open parenthesis '('
#933: FILE: fs/squashfs/inode.c:832:
+			if(file->f_pos >= length)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#939: FILE: fs/squashfs/inode.c:838:
+			TRACE("Calling filldir(%x, %s, %d, %d, %x:%x, %d)\n", dirent,
+			dire->name, dire->size + 1, (int) file->f_pos,

CHECK:SPACING: No space is necessary after a cast
#939: FILE: fs/squashfs/inode.c:838:
+			dire->name, dire->size + 1, (int) file->f_pos,

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#942: FILE: fs/squashfs/inode.c:841:
+			if(filldir(dirent, dire->name, dire->size + 1, file->f_pos, SQUASHFS_MK_VFS_INODE(dirh.start_block,

ERROR:SPACING: space required before the open parenthesis '('
#942: FILE: fs/squashfs/inode.c:841:
+			if(filldir(dirent, dire->name, dire->size + 1, file->f_pos, SQUASHFS_MK_VFS_INODE(dirh.start_block,

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#943: FILE: fs/squashfs/inode.c:842:
+							dire->offset), squashfs_filetype_table[dire->type]) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: fs/squashfs/inode.c:842:
+			if(filldir(dirent, dire->name, dire->size + 1, file->f_pos, SQUASHFS_MK_VFS_INODE(dirh.start_block,
+							dire->offset), squashfs_filetype_table[dire->type]) < 0) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#950: FILE: fs/squashfs/inode.c:849:
+			dirs_read ++;
 			          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#962: FILE: fs/squashfs/inode.c:861:
+
+

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#964: FILE: fs/squashfs/inode.c:863:
+				      struct nameidata *nd)
 				                        ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#966: FILE: fs/squashfs/inode.c:865:
+	const char *name =dentry->d_name.name;
 	                 ^

CHECK:SPACING: No space is necessary after a cast
#976: FILE: fs/squashfs/inode.c:875:
+	squashfs_dir_entry *dire = (squashfs_dir_entry *) buffer;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'squashfs_lookup', this function's name, in a string
#978: FILE: fs/squashfs/inode.c:877:
+	TRACE("Entered squashfs_lookup [%x:%x]\n", next_block, next_offset);

ERROR:SPACING: space required before the open parenthesis '('
#980: FILE: fs/squashfs/inode.c:879:
+	while(length < i->i_size) {

ERROR:SPACING: space required before the open parenthesis '('
#982: FILE: fs/squashfs/inode.c:881:
+		if(msBlk->swap) {

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#984: FILE: fs/squashfs/inode.c:883:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block, next_offset,

CHECK:SPACING: No space is necessary after a cast
#984: FILE: fs/squashfs/inode.c:883:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block, next_offset,

WARNING:LINE_SPACING: Missing a blank line after declarations
#984: FILE: fs/squashfs/inode.c:883:
+			squashfs_dir_header sdirh;
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block, next_offset,

ERROR:SPACING: space required before the open parenthesis '('
#984: FILE: fs/squashfs/inode.c:883:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block, next_offset,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#984: FILE: fs/squashfs/inode.c:883:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block, next_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#985: FILE: fs/squashfs/inode.c:884:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdirh, next_block, next_offset,
+						sizeof(sdirh), &next_block, &next_offset), !bytes)

CHECK:BRACES: Unbalanced braces around else statement
#988: FILE: fs/squashfs/inode.c:887:
+		} else

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#989: FILE: fs/squashfs/inode.c:888:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block, next_offset,

CHECK:SPACING: No space is necessary after a cast
#989: FILE: fs/squashfs/inode.c:888:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block, next_offset,

ERROR:SPACING: space required before the open parenthesis '('
#989: FILE: fs/squashfs/inode.c:888:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block, next_offset,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#989: FILE: fs/squashfs/inode.c:888:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block, next_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: fs/squashfs/inode.c:889:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &dirh, next_block, next_offset,
+						sizeof(dirh), &next_block, &next_offset), !bytes)

ERROR:SPACING: space required before the open parenthesis '('
#994: FILE: fs/squashfs/inode.c:893:
+		while(dir_count--) {

ERROR:SPACING: space required before the open parenthesis '('
#995: FILE: fs/squashfs/inode.c:894:
+			if(msBlk->swap) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#997: FILE: fs/squashfs/inode.c:896:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire,

CHECK:SPACING: No space is necessary after a cast
#997: FILE: fs/squashfs/inode.c:896:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire,

WARNING:LINE_SPACING: Missing a blank line after declarations
#997: FILE: fs/squashfs/inode.c:896:
+				squashfs_dir_entry sdire;
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire,

ERROR:SPACING: space required before the open parenthesis '('
#997: FILE: fs/squashfs/inode.c:896:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#997: FILE: fs/squashfs/inode.c:896:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire,

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#998: FILE: fs/squashfs/inode.c:897:
+							next_block,next_offset, sizeof(sdire), &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: fs/squashfs/inode.c:897:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) &sdire,
+							next_block,next_offset, sizeof(sdire), &next_block, &next_offset), !bytes)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: fs/squashfs/inode.c:897:
+							next_block,next_offset, sizeof(sdire), &next_block, &next_offset), !bytes)
 							          ^

CHECK:BRACES: Unbalanced braces around else statement
#1001: FILE: fs/squashfs/inode.c:900:
+			} else

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1002: FILE: fs/squashfs/inode.c:901:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire,

CHECK:SPACING: No space is necessary after a cast
#1002: FILE: fs/squashfs/inode.c:901:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire,

ERROR:SPACING: space required before the open parenthesis '('
#1002: FILE: fs/squashfs/inode.c:901:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1002: FILE: fs/squashfs/inode.c:901:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire,

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1003: FILE: fs/squashfs/inode.c:902:
+							next_block,next_offset, sizeof(*dire), &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: fs/squashfs/inode.c:902:
+				if(length += bytes = squashfs_get_cached_block(i->i_sb, (char *) dire,
+							next_block,next_offset, sizeof(*dire), &next_block, &next_offset), !bytes)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1003: FILE: fs/squashfs/inode.c:902:
+							next_block,next_offset, sizeof(*dire), &next_block, &next_offset), !bytes)
 							          ^

ERROR:SPACING: space required before the open parenthesis '('
#1006: FILE: fs/squashfs/inode.c:905:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1006: FILE: fs/squashfs/inode.c:905:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name,

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1007: FILE: fs/squashfs/inode.c:906:
+						next_block, next_offset, dire->size + 1, &next_block, &next_offset), !bytes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1007: FILE: fs/squashfs/inode.c:906:
+			if(length += bytes = squashfs_get_cached_block(i->i_sb, dire->name,
+						next_block, next_offset, dire->size + 1, &next_block, &next_offset), !bytes)

ERROR:SPACING: space required before the open parenthesis '('
#1010: FILE: fs/squashfs/inode.c:909:
+			if((len == dire->size + 1) && !strncmp(name, dire->name, len)) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1011: FILE: fs/squashfs/inode.c:910:
+				squashfs_inode ino = SQUASHFS_MKINODE(dirh.start_block, dire->offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: fs/squashfs/inode.c:913:
+				TRACE("calling squashfs_iget for directory entry %s, inode %x:%x\n",
+						name, dirh.start_block, dire->offset);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1032: FILE: fs/squashfs/inode.c:931:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1036: FILE: fs/squashfs/inode.c:935:
+	squashfs_sb_info *msBlk = s->s_fs_info;
+	if(msBlk->block_cache) kfree(msBlk->block_cache);

ERROR:SPACING: space required before the open parenthesis '('
#1036: FILE: fs/squashfs/inode.c:935:
+	if(msBlk->block_cache) kfree(msBlk->block_cache);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1036: FILE: fs/squashfs/inode.c:935:
+	if(msBlk->block_cache) kfree(msBlk->block_cache);

ERROR:SPACING: space required before the open parenthesis '('
#1037: FILE: fs/squashfs/inode.c:936:
+	if(msBlk->read_data) kfree(msBlk->read_data);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1037: FILE: fs/squashfs/inode.c:936:
+	if(msBlk->read_data) kfree(msBlk->read_data);

ERROR:SPACING: space required before the open parenthesis '('
#1038: FILE: fs/squashfs/inode.c:937:
+	if(msBlk->read_page) kfree(msBlk->read_page);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1038: FILE: fs/squashfs/inode.c:937:
+	if(msBlk->read_page) kfree(msBlk->read_page);

ERROR:SPACING: space required before the open parenthesis '('
#1039: FILE: fs/squashfs/inode.c:938:
+	if(msBlk->uid) kfree(msBlk->uid);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1039: FILE: fs/squashfs/inode.c:938:
+	if(msBlk->uid) kfree(msBlk->uid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: fs/squashfs/inode.c:944:
+static struct super_block *squashfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1051: FILE: fs/squashfs/inode.c:950:
+static kmem_cache_t * squashfs_inode_cachep;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1056: FILE: fs/squashfs/inode.c:955:
+	struct squashfs_inode_info *ii;
+	ii = (struct squashfs_inode_info *)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1069: FILE: fs/squashfs/inode.c:968:
+static void init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1069: FILE: fs/squashfs/inode.c:968:
+static void init_once(void * foo, kmem_cache_t * cachep, unsigned long flags)

CHECK:SPACING: No space is necessary after a cast
#1071: FILE: fs/squashfs/inode.c:970:
+	struct squashfs_inode_info *sqi = (struct squashfs_inode_info *) foo;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1073: FILE: fs/squashfs/inode.c:972:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) ==
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1084: FILE: fs/squashfs/inode.c:983:
+				  0, SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT,
 				                       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!squashfs_inode_cachep"
#1086: FILE: fs/squashfs/inode.c:985:
+	if (squashfs_inode_cachep == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1098: FILE: fs/squashfs/inode.c:997:
+{
+

CHECK:SPACING: No space is necessary after a cast
#1099: FILE: fs/squashfs/inode.c:998:
+	if(!(stream.workspace = (char *) vmalloc(zlib_inflate_workspacesize()))) {

ERROR:SPACING: space required before the open parenthesis '('
#1099: FILE: fs/squashfs/inode.c:998:
+	if(!(stream.workspace = (char *) vmalloc(zlib_inflate_workspacesize()))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1099: FILE: fs/squashfs/inode.c:998:
+	if(!(stream.workspace = (char *) vmalloc(zlib_inflate_workspacesize()))) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1099: FILE: fs/squashfs/inode.c:998:
+	if(!(stream.workspace = (char *) vmalloc(zlib_inflate_workspacesize()))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1108: FILE: fs/squashfs/inode.c:1007:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1116: FILE: fs/squashfs/inode.c:1015:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1126: FILE: include/linux/squashfs_fs.h:1:
+#ifndef SQUASHFS_FS

CHECK:SPACING: No space is necessary after a cast
#1164: FILE: include/linux/squashfs_fs.h:39:
+#define SQUASHFS_INVALID		((long long) 0xffffffffffff)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long) 0xffffffffffff' could be '0xffffffffffffLL'
#1164: FILE: include/linux/squashfs_fs.h:39:
+#define SQUASHFS_INVALID		((long long) 0xffffffffffff)

CHECK:SPACING: No space is necessary after a cast
#1165: FILE: include/linux/squashfs_fs.h:40:
+#define SQUASHFS_INVALID_BLK		((long long) 0xffffffff)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long) 0xffffffff' could be '0xffffffffLL'
#1165: FILE: include/linux/squashfs_fs.h:40:
+#define SQUASHFS_INVALID_BLK		((long long) 0xffffffff)

CHECK:SPACING: No space is necessary after a cast
#1166: FILE: include/linux/squashfs_fs.h:41:
+#define SQUASHFS_USED_BLK		((long long) 0xfffffffe)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long) 0xfffffffe' could be '0xfffffffeLL'
#1166: FILE: include/linux/squashfs_fs.h:41:
+#define SQUASHFS_USED_BLK		((long long) 0xfffffffe)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#1172: FILE: include/linux/squashfs_fs.h:47:
+#define SQUASHFS_UNCOMPRESSED_INODES(flags)	(flags & SQUASHFS_NOI)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#1173: FILE: include/linux/squashfs_fs.h:48:
+#define SQUASHFS_UNCOMPRESSED_DATA(flags)	(flags & SQUASHFS_NOD)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#1174: FILE: include/linux/squashfs_fs.h:49:
+#define SQUASHFS_CHECK_DATA(flags)		(flags & SQUASHFS_CHECK)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'noi' may be better as '(noi)' to avoid precedence issues
#1175: FILE: include/linux/squashfs_fs.h:50:
+#define SQUASHFS_MKFLAGS(noi, nod, check_data)	(noi | (nod << 1) | (check_data << 2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nod' may be better as '(nod)' to avoid precedence issues
#1175: FILE: include/linux/squashfs_fs.h:50:
+#define SQUASHFS_MKFLAGS(noi, nod, check_data)	(noi | (nod << 1) | (check_data << 2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'check_data' may be better as '(check_data)' to avoid precedence issues
#1175: FILE: include/linux/squashfs_fs.h:50:
+#define SQUASHFS_MKFLAGS(noi, nod, check_data)	(noi | (nod << 1) | (check_data << 2))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1186: FILE: include/linux/squashfs_fs.h:61:
+#define SQUASHFS_COMPRESSED_BIT		(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'B' - possible side-effects?
#1187: FILE: include/linux/squashfs_fs.h:62:
+#define SQUASHFS_COMPRESSED_SIZE(B)	(((B) & ~SQUASHFS_COMPRESSED_BIT) ? \
+					(B) & ~SQUASHFS_COMPRESSED_BIT : SQUASHFS_COMPRESSED_BIT)

CHECK:SPACING: No space is necessary after a cast
#1196: FILE: include/linux/squashfs_fs.h:71:
+#define SQUASHFS_INODE_BLK(a)		((unsigned int) ((a) >> 16))

CHECK:SPACING: No space is necessary after a cast
#1197: FILE: include/linux/squashfs_fs.h:72:
+#define SQUASHFS_INODE_OFFSET(a)	((unsigned int) ((a) & 0xffff))

CHECK:SPACING: No space is necessary after a cast
#1198: FILE: include/linux/squashfs_fs.h:73:
+#define SQUASHFS_MKINODE(A, B)		((squashfs_inode)(((squashfs_inode) (A) << 16)\

CHECK:SPACING: No space is necessary after a cast
#1202: FILE: include/linux/squashfs_fs.h:77:
+#define SQUASHFS_MK_VFS_INODE(a, b)	((unsigned int) (((a) << 8) + ((b) >> 2) + 1))

CHECK:SPACING: No space is necessary after a cast
#1211: FILE: include/linux/squashfs_fs.h:86:
+#define SQUASHFS_MAX_FILE_SIZE		((long long) 1 << SQUASHFS_MAX_FILE_SIZE_LOG - 1)

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(long long) 1' could be '1LL'
#1211: FILE: include/linux/squashfs_fs.h:86:
+#define SQUASHFS_MAX_FILE_SIZE		((long long) 1 << SQUASHFS_MAX_FILE_SIZE_LOG - 1)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1219: FILE: include/linux/squashfs_fs.h:94:
+typedef unsigned int		squashfs_block;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1220: FILE: include/linux/squashfs_fs.h:95:
+typedef long long		squashfs_inode;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1222: FILE: include/linux/squashfs_fs.h:97:
+typedef unsigned int		squashfs_uid;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1224: FILE: include/linux/squashfs_fs.h:99:
+typedef struct squashfs_super_block {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1225: FILE: include/linux/squashfs_fs.h:100:
+	unsigned int		s_magic __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1226: FILE: include/linux/squashfs_fs.h:101:
+	unsigned int		inodes __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1227: FILE: include/linux/squashfs_fs.h:102:
+	unsigned int		bytes_used __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1228: FILE: include/linux/squashfs_fs.h:103:
+	unsigned int		uid_start __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1229: FILE: include/linux/squashfs_fs.h:104:
+	unsigned int		guid_start __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1230: FILE: include/linux/squashfs_fs.h:105:
+	unsigned int		inode_table_start __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1231: FILE: include/linux/squashfs_fs.h:106:
+	unsigned int		directory_table_start __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1232: FILE: include/linux/squashfs_fs.h:107:
+	unsigned int		s_major:16 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1233: FILE: include/linux/squashfs_fs.h:108:
+	unsigned int		s_minor:16 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1234: FILE: include/linux/squashfs_fs.h:109:
+	unsigned int		block_size:16 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1235: FILE: include/linux/squashfs_fs.h:110:
+	unsigned int		block_log:16 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1236: FILE: include/linux/squashfs_fs.h:111:
+	unsigned int		flags:8 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1237: FILE: include/linux/squashfs_fs.h:112:
+	unsigned int		no_uids:8 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1238: FILE: include/linux/squashfs_fs.h:113:
+	unsigned int		no_guids:8 __attribute__ ((packed));

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1239: FILE: include/linux/squashfs_fs.h:114:
+	time_t			mkfs_time /* time of filesystem creation */ __attribute__ ((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1239: FILE: include/linux/squashfs_fs.h:114:
+	unsigned int		no_guids:8 __attribute__ ((packed));
+	time_t			mkfs_time /* time of filesystem creation */ __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1239: FILE: include/linux/squashfs_fs.h:114:
+	time_t			mkfs_time /* time of filesystem creation */ __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1240: FILE: include/linux/squashfs_fs.h:115:
+	squashfs_inode		root_inode __attribute__ ((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1243: FILE: include/linux/squashfs_fs.h:118:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1244: FILE: include/linux/squashfs_fs.h:119:
+	unsigned int		inode_type:4 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1245: FILE: include/linux/squashfs_fs.h:120:
+	unsigned int		mode:12 __attribute__ ((packed)); /* protection */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1246: FILE: include/linux/squashfs_fs.h:121:
+	unsigned int		uid:4 __attribute__ ((packed)); /* index into uid table */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1247: FILE: include/linux/squashfs_fs.h:122:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1250: FILE: include/linux/squashfs_fs.h:125:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1251: FILE: include/linux/squashfs_fs.h:126:
+	unsigned int		inode_type:4 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1252: FILE: include/linux/squashfs_fs.h:127:
+	unsigned int		mode:12 __attribute__ ((packed)); /* protection */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1253: FILE: include/linux/squashfs_fs.h:128:
+	unsigned int		uid:4 __attribute__ ((packed)); /* index into uid table */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1254: FILE: include/linux/squashfs_fs.h:129:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1255: FILE: include/linux/squashfs_fs.h:130:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */
+	unsigned short		rdev __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1255: FILE: include/linux/squashfs_fs.h:130:
+	unsigned short		rdev __attribute__ ((packed));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: include/linux/squashfs_fs.h:132:
+^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1258: FILE: include/linux/squashfs_fs.h:133:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1259: FILE: include/linux/squashfs_fs.h:134:
+	unsigned int		inode_type:4 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1260: FILE: include/linux/squashfs_fs.h:135:
+	unsigned int		mode:12 __attribute__ ((packed)); /* protection */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1261: FILE: include/linux/squashfs_fs.h:136:
+	unsigned int		uid:4 __attribute__ ((packed)); /* index into uid table */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1262: FILE: include/linux/squashfs_fs.h:137:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1263: FILE: include/linux/squashfs_fs.h:138:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */
+	unsigned short		symlink_size __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1263: FILE: include/linux/squashfs_fs.h:138:
+	unsigned short		symlink_size __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1264: FILE: include/linux/squashfs_fs.h:139:
+	char			symlink[0] __attribute__ ((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1267: FILE: include/linux/squashfs_fs.h:142:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1268: FILE: include/linux/squashfs_fs.h:143:
+	unsigned int		inode_type:4 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1269: FILE: include/linux/squashfs_fs.h:144:
+	unsigned int		mode:12 __attribute__ ((packed)); /* protection */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1270: FILE: include/linux/squashfs_fs.h:145:
+	unsigned int		uid:4 __attribute__ ((packed)); /* index into uid table */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1271: FILE: include/linux/squashfs_fs.h:146:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1272: FILE: include/linux/squashfs_fs.h:147:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */
+	time_t			mtime __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1272: FILE: include/linux/squashfs_fs.h:147:
+	time_t			mtime __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1273: FILE: include/linux/squashfs_fs.h:148:
+	squashfs_block		start_block __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1274: FILE: include/linux/squashfs_fs.h:149:
+	unsigned int		file_size:SQUASHFS_MAX_FILE_SIZE_LOG __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1275: FILE: include/linux/squashfs_fs.h:150:
+	unsigned short		block_list[0]  __attribute__ ((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1278: FILE: include/linux/squashfs_fs.h:153:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1279: FILE: include/linux/squashfs_fs.h:154:
+	unsigned int		inode_type:4 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1280: FILE: include/linux/squashfs_fs.h:155:
+	unsigned int		mode:12 __attribute__ ((packed)); /* protection */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1281: FILE: include/linux/squashfs_fs.h:156:
+	unsigned int		uid:4 __attribute__ ((packed)); /* index into uid table */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1282: FILE: include/linux/squashfs_fs.h:157:
+	unsigned int		guid:4 __attribute__ ((packed)); /* index into guid table */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1283: FILE: include/linux/squashfs_fs.h:158:
+	unsigned int		file_size:19 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1284: FILE: include/linux/squashfs_fs.h:159:
+	unsigned int		offset:13 __attribute__ ((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1285: FILE: include/linux/squashfs_fs.h:160:
+	unsigned int		offset:13 __attribute__ ((packed));
+	time_t			mtime __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1285: FILE: include/linux/squashfs_fs.h:160:
+	time_t			mtime __attribute__ ((packed));

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1286: FILE: include/linux/squashfs_fs.h:161:
+	unsigned int		start_block:24 __attribute__ ((packed));
 	            		           ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1286: FILE: include/linux/squashfs_fs.h:161:
+	unsigned int		start_block:24 __attribute__ ((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1289: FILE: include/linux/squashfs_fs.h:164:
+typedef union {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: include/linux/squashfs_fs.h:171:
+^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1297: FILE: include/linux/squashfs_fs.h:172:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1298: FILE: include/linux/squashfs_fs.h:173:
+	unsigned int		offset:13 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1299: FILE: include/linux/squashfs_fs.h:174:
+	unsigned int		type:3 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1300: FILE: include/linux/squashfs_fs.h:175:
+	unsigned int		size:8 __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1301: FILE: include/linux/squashfs_fs.h:176:
+	char			name[0] __attribute__ ((packed));

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1304: FILE: include/linux/squashfs_fs.h:179:
+typedef struct {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1305: FILE: include/linux/squashfs_fs.h:180:
+	unsigned int		count:8 __attribute__ ((packed));

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1306: FILE: include/linux/squashfs_fs.h:181:
+	unsigned int		start_block:24 __attribute__ ((packed));
 	            		           ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1306: FILE: include/linux/squashfs_fs.h:181:
+	unsigned int		start_block:24 __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1309: FILE: include/linux/squashfs_fs.h:184:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1310: FILE: include/linux/squashfs_fs.h:185:
+extern int squashfs_uncompress_block(void *d, int dstlen, void *s, int srclen);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1311: FILE: include/linux/squashfs_fs.h:186:
+extern int squashfs_uncompress_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1312: FILE: include/linux/squashfs_fs.h:187:
+extern int squashfs_uncompress_exit(void);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1321: FILE: include/linux/squashfs_fs.h:196:
+#define SQUASHFS_SWAP_SUPER_BLOCK(s, d) {\
+	SQUASHFS_MEMSET(s, d, sizeof(squashfs_super_block));\
+	SQUASHFS_SWAP((s)->s_magic, d, 0, 32);\
+	SQUASHFS_SWAP((s)->inodes, d, 32, 32);\
+	SQUASHFS_SWAP((s)->bytes_used, d, 64, 32);\
+	SQUASHFS_SWAP((s)->uid_start, d, 96, 32);\
+	SQUASHFS_SWAP((s)->guid_start, d, 128, 32);\
+	SQUASHFS_SWAP((s)->inode_table_start, d, 160, 32);\
+	SQUASHFS_SWAP((s)->directory_table_start, d, 192, 32);\
+	SQUASHFS_SWAP((s)->s_major, d, 224, 16);\
+	SQUASHFS_SWAP((s)->s_minor, d, 240, 16);\
+	SQUASHFS_SWAP((s)->block_size, d, 256, 16);\
+	SQUASHFS_SWAP((s)->block_log, d, 272, 16);\
+	SQUASHFS_SWAP((s)->flags, d, 288, 8);\
+	SQUASHFS_SWAP((s)->no_uids, d, 296, 8);\
+	SQUASHFS_SWAP((s)->no_guids, d, 304, 8);\
+	SQUASHFS_SWAP((s)->mkfs_time, d, 312, 32);\
+	SQUASHFS_SWAP((s)->root_inode, d, 344, 64);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1321: FILE: include/linux/squashfs_fs.h:196:
+#define SQUASHFS_SWAP_SUPER_BLOCK(s, d) {\
+	SQUASHFS_MEMSET(s, d, sizeof(squashfs_super_block));\
+	SQUASHFS_SWAP((s)->s_magic, d, 0, 32);\
+	SQUASHFS_SWAP((s)->inodes, d, 32, 32);\
+	SQUASHFS_SWAP((s)->bytes_used, d, 64, 32);\
+	SQUASHFS_SWAP((s)->uid_start, d, 96, 32);\
+	SQUASHFS_SWAP((s)->guid_start, d, 128, 32);\
+	SQUASHFS_SWAP((s)->inode_table_start, d, 160, 32);\
+	SQUASHFS_SWAP((s)->directory_table_start, d, 192, 32);\
+	SQUASHFS_SWAP((s)->s_major, d, 224, 16);\
+	SQUASHFS_SWAP((s)->s_minor, d, 240, 16);\
+	SQUASHFS_SWAP((s)->block_size, d, 256, 16);\
+	SQUASHFS_SWAP((s)->block_log, d, 272, 16);\
+	SQUASHFS_SWAP((s)->flags, d, 288, 8);\
+	SQUASHFS_SWAP((s)->no_uids, d, 296, 8);\
+	SQUASHFS_SWAP((s)->no_guids, d, 304, 8);\
+	SQUASHFS_SWAP((s)->mkfs_time, d, 312, 32);\
+	SQUASHFS_SWAP((s)->root_inode, d, 344, 64);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1341: FILE: include/linux/squashfs_fs.h:216:
+#define SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, n) {\
+	SQUASHFS_MEMSET(s, d, n);\
+	SQUASHFS_SWAP((s)->inode_type, d, 0, 4);\
+	SQUASHFS_SWAP((s)->mode, d, 4, 12);\
+	SQUASHFS_SWAP((s)->uid, d, 16, 4);\
+	SQUASHFS_SWAP((s)->guid, d, 20, 4);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1341: FILE: include/linux/squashfs_fs.h:216:
+#define SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, n) {\
+	SQUASHFS_MEMSET(s, d, n);\
+	SQUASHFS_SWAP((s)->inode_type, d, 0, 4);\
+	SQUASHFS_SWAP((s)->mode, d, 4, 12);\
+	SQUASHFS_SWAP((s)->uid, d, 16, 4);\
+	SQUASHFS_SWAP((s)->guid, d, 20, 4);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1349: FILE: include/linux/squashfs_fs.h:224:
+#define SQUASHFS_SWAP_DEV_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_dev_inode_header));\
+	SQUASHFS_SWAP((s)->rdev, d, 24, 16);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1349: FILE: include/linux/squashfs_fs.h:224:
+#define SQUASHFS_SWAP_DEV_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_dev_inode_header));\
+	SQUASHFS_SWAP((s)->rdev, d, 24, 16);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1354: FILE: include/linux/squashfs_fs.h:229:
+#define SQUASHFS_SWAP_SYMLINK_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_symlink_inode_header));\
+	SQUASHFS_SWAP((s)->symlink_size, d, 24, 16);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1354: FILE: include/linux/squashfs_fs.h:229:
+#define SQUASHFS_SWAP_SYMLINK_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_symlink_inode_header));\
+	SQUASHFS_SWAP((s)->symlink_size, d, 24, 16);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1359: FILE: include/linux/squashfs_fs.h:234:
+#define SQUASHFS_SWAP_REG_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_reg_inode_header));\
+	SQUASHFS_SWAP((s)->mtime, d, 24, 32);\
+	SQUASHFS_SWAP((s)->start_block, d, 56, 32);\
+	SQUASHFS_SWAP((s)->file_size, d, 88, SQUASHFS_MAX_FILE_SIZE_LOG);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1359: FILE: include/linux/squashfs_fs.h:234:
+#define SQUASHFS_SWAP_REG_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_reg_inode_header));\
+	SQUASHFS_SWAP((s)->mtime, d, 24, 32);\
+	SQUASHFS_SWAP((s)->start_block, d, 56, 32);\
+	SQUASHFS_SWAP((s)->file_size, d, 88, SQUASHFS_MAX_FILE_SIZE_LOG);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1366: FILE: include/linux/squashfs_fs.h:241:
+#define SQUASHFS_SWAP_DIR_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_dir_inode_header));\
+	SQUASHFS_SWAP((s)->file_size, d, 24, 19);\
+	SQUASHFS_SWAP((s)->offset, d, 43, 13);\
+	SQUASHFS_SWAP((s)->mtime, d, 56, 32);\
+	SQUASHFS_SWAP((s)->start_block, d, 88, 24);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1366: FILE: include/linux/squashfs_fs.h:241:
+#define SQUASHFS_SWAP_DIR_INODE_HEADER(s, d) {\
+	SQUASHFS_SWAP_BASE_INODE_HEADER(s, d, sizeof(squashfs_dir_inode_header));\
+	SQUASHFS_SWAP((s)->file_size, d, 24, 19);\
+	SQUASHFS_SWAP((s)->offset, d, 43, 13);\
+	SQUASHFS_SWAP((s)->mtime, d, 56, 32);\
+	SQUASHFS_SWAP((s)->start_block, d, 88, 24);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1374: FILE: include/linux/squashfs_fs.h:249:
+#define SQUASHFS_SWAP_DIR_HEADER(s, d) {\
+	SQUASHFS_MEMSET(s, d, sizeof(squashfs_dir_header));\
+	SQUASHFS_SWAP((s)->count, d, 0, 8);\
+	SQUASHFS_SWAP((s)->start_block, d, 8, 24);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1374: FILE: include/linux/squashfs_fs.h:249:
+#define SQUASHFS_SWAP_DIR_HEADER(s, d) {\
+	SQUASHFS_MEMSET(s, d, sizeof(squashfs_dir_header));\
+	SQUASHFS_SWAP((s)->count, d, 0, 8);\
+	SQUASHFS_SWAP((s)->start_block, d, 8, 24);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1380: FILE: include/linux/squashfs_fs.h:255:
+#define SQUASHFS_SWAP_DIR_ENTRY(s, d) {\
+	SQUASHFS_MEMSET(s, d, sizeof(squashfs_dir_entry));\
+	SQUASHFS_SWAP((s)->offset, d, 0, 13);\
+	SQUASHFS_SWAP((s)->type, d, 13, 3);\
+	SQUASHFS_SWAP((s)->size, d, 16, 8);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1380: FILE: include/linux/squashfs_fs.h:255:
+#define SQUASHFS_SWAP_DIR_ENTRY(s, d) {\
+	SQUASHFS_MEMSET(s, d, sizeof(squashfs_dir_entry));\
+	SQUASHFS_SWAP((s)->offset, d, 0, 13);\
+	SQUASHFS_SWAP((s)->type, d, 13, 3);\
+	SQUASHFS_SWAP((s)->size, d, 16, 8);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1387: FILE: include/linux/squashfs_fs.h:262:
+#define SQUASHFS_SWAP_SHORTS(s, d, n) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * 2);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += 16)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, 16);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1387: FILE: include/linux/squashfs_fs.h:262:
+#define SQUASHFS_SWAP_SHORTS(s, d, n) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * 2);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += 16)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, 16);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#1387: FILE: include/linux/squashfs_fs.h:262:
+#define SQUASHFS_SWAP_SHORTS(s, d, n) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * 2);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += 16)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, 16);\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#1387: FILE: include/linux/squashfs_fs.h:262:
+#define SQUASHFS_SWAP_SHORTS(s, d, n) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * 2);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += 16)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, 16);\
+}

ERROR:SPACING: space required before the open parenthesis '('
#1391: FILE: include/linux/squashfs_fs.h:266:
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += 16)\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#1395: FILE: include/linux/squashfs_fs.h:270:
+#define SQUASHFS_SWAP_DATA(s, d, n, bits) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * bits / 8);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, bits);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#1395: FILE: include/linux/squashfs_fs.h:270:
+#define SQUASHFS_SWAP_DATA(s, d, n, bits) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * bits / 8);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, bits);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#1395: FILE: include/linux/squashfs_fs.h:270:
+#define SQUASHFS_SWAP_DATA(s, d, n, bits) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * bits / 8);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, bits);\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#1395: FILE: include/linux/squashfs_fs.h:270:
+#define SQUASHFS_SWAP_DATA(s, d, n, bits) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * bits / 8);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, bits);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bits' - possible side-effects?
#1395: FILE: include/linux/squashfs_fs.h:270:
+#define SQUASHFS_SWAP_DATA(s, d, n, bits) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * bits / 8);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, bits);\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bits' may be better as '(bits)' to avoid precedence issues
#1395: FILE: include/linux/squashfs_fs.h:270:
+#define SQUASHFS_SWAP_DATA(s, d, n, bits) {\
+	int entry;\
+	int bit_position;\
+	SQUASHFS_MEMSET(s, d, n * bits / 8);\
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\
+		SQUASHFS_SWAP(s[entry], d, bit_position, bits);\
+}

ERROR:SPACING: space required before the open parenthesis '('
#1399: FILE: include/linux/squashfs_fs.h:274:
+	for(entry = 0, bit_position = 0; entry < n; entry++, bit_position += bits)\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1413: FILE: include/linux/squashfs_fs.h:288:
+^I/* convert from big endian to little endian */ $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tbits' - possible side-effects?
#1414: FILE: include/linux/squashfs_fs.h:289:
+#define SQUASHFS_SWAP(value, p, pos, tbits) _SQUASHFS_SWAP(value, p, pos, tbits, 64 - tbits - b_pos)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#1417: FILE: include/linux/squashfs_fs.h:292:
+#define _SQUASHFS_SWAP(value, p, pos, tbits, SHIFT) {\
+	int bits;\
+	int b_pos = pos % 8;\
+	unsigned long long val = 0;\
+	unsigned char *s = (unsigned char *)p + (pos / 8);\
+	unsigned char *d = ((unsigned char *) &val) + 7;\
+	for(bits = 0; bits < (tbits + b_pos); bits += 8) \
+		*d-- = *s++;\
+	value = val >> (SHIFT);\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#1417: FILE: include/linux/squashfs_fs.h:292:
+#define _SQUASHFS_SWAP(value, p, pos, tbits, SHIFT) {\
+	int bits;\
+	int b_pos = pos % 8;\
+	unsigned long long val = 0;\
+	unsigned char *s = (unsigned char *)p + (pos / 8);\
+	unsigned char *d = ((unsigned char *) &val) + 7;\
+	for(bits = 0; bits < (tbits + b_pos); bits += 8) \
+		*d-- = *s++;\
+	value = val >> (SHIFT);\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pos' may be better as '(pos)' to avoid precedence issues
#1417: FILE: include/linux/squashfs_fs.h:292:
+#define _SQUASHFS_SWAP(value, p, pos, tbits, SHIFT) {\
+	int bits;\
+	int b_pos = pos % 8;\
+	unsigned long long val = 0;\
+	unsigned char *s = (unsigned char *)p + (pos / 8);\
+	unsigned char *d = ((unsigned char *) &val) + 7;\
+	for(bits = 0; bits < (tbits + b_pos); bits += 8) \
+		*d-- = *s++;\
+	value = val >> (SHIFT);\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tbits' may be better as '(tbits)' to avoid precedence issues
#1417: FILE: include/linux/squashfs_fs.h:292:
+#define _SQUASHFS_SWAP(value, p, pos, tbits, SHIFT) {\
+	int bits;\
+	int b_pos = pos % 8;\
+	unsigned long long val = 0;\
+	unsigned char *s = (unsigned char *)p + (pos / 8);\
+	unsigned char *d = ((unsigned char *) &val) + 7;\
+	for(bits = 0; bits < (tbits + b_pos); bits += 8) \
+		*d-- = *s++;\
+	value = val >> (SHIFT);\
+}

CHECK:SPACING: No space is necessary after a cast
#1422: FILE: include/linux/squashfs_fs.h:297:
+	unsigned char *d = ((unsigned char *) &val) + 7;\

ERROR:SPACING: space required before the open parenthesis '('
#1423: FILE: include/linux/squashfs_fs.h:298:
+	for(bits = 0; bits < (tbits + b_pos); bits += 8) \

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1427: FILE: include/linux/squashfs_fs.h:302:
+}
+#define SQUASHFS_MEMSET(s, d, n)	memset(s, 0, n);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1427: FILE: include/linux/squashfs_fs.h:302:
+#define SQUASHFS_MEMSET(s, d, n)	memset(s, 0, n);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1434: FILE: include/linux/squashfs_fs_sb.h:1:
+#ifndef SQUASHFS_FS_SB

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1451: FILE: include/linux/squashfs_fs_sb.h:18:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1458: FILE: include/linux/squashfs_fs_sb.h:25:
+typedef struct squashfs_sb_info {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 182 errors, 197 warnings, 177 checks, 1403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000352999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
