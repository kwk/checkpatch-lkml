WARNING:TYPO_SPELLING: 'presense' may be misspelled - perhaps 'presence'?
#25: 
Handling of MS_BIND in presense of shared mounts (see
                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Ram Pai (linuxram@us.ibm.com)'
#29: 
Signed-off-by: Ram Pai (linuxram@us.ibm.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#87: FILE: fs/namespace.c:172:
+	BUG_ON(parent == mnt);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: fs/namespace.c:617:
+struct vfsmount *copy_tree(struct vfsmount *mnt, struct dentry *dentry,
 					int flag)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#147: FILE: fs/namespace.c:663:
+ *  @nd        : place the mount tree @source_mnt is attached
      ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: fs/namespace.c:667:
+ * ^I---------------------------------------------$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: fs/namespace.c:668:
+ * ^I|         BIND MOUNT OPERATION              |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: fs/namespace.c:669:
+ * ^I|********************************************$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: fs/namespace.c:670:
+ * ^I| source-->| shared        |       private  |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: fs/namespace.c:671:
+ * ^I| dest     |               |                |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/namespace.c:672:
+ * ^I|   |      |               |                |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: fs/namespace.c:673:
+ * ^I|   v      |               |                |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: fs/namespace.c:674:
+ * ^I|********************************************$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: fs/namespace.c:675:
+ * ^I|  shared  | shared (++)   |     shared (+) |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: fs/namespace.c:676:
+ * ^I|          |               |                |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: fs/namespace.c:677:
+ * ^I|non-shared| shared (+)    |      private   |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: fs/namespace.c:678:
+ * ^I*********************************************$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: fs/namespace.c:683:
+ * ^I tree of the destination mount and the cloned mount is added to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: fs/namespace.c:684:
+ * ^I the peer group of the source mount.$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#179: FILE: fs/namespace.c:695:
+				struct nameidata *nd)
 				                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#225: FILE: fs/namespace.c:743:
+		err = attach_recursive_mnt(mnt, nd);
 		                                ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: fs/pnode.c:58:
+int propagate_mnt(struct vfsmount *dest_mnt, struct dentry *dest_dentry,
+		    struct vfsmount *source_mnt, struct list_head *tree_list)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#291: FILE: fs/pnode.c:77:
+		if (!(child = copy_tree(source_mnt, source_mnt->mnt_root,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: fs/pnode.c:78:
+		if (!(child = copy_tree(source_mnt, source_mnt->mnt_root,
+						type))) {

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mnt' may be better as '(mnt)' to avoid precedence issues
#329: FILE: fs/pnode.h:15:
+#define IS_MNT_NEW(mnt)  (!mnt->mnt_namespace)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#332: FILE: fs/pnode.h:18:
+#define CL_EXPIRE    ^I^I0x01$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: fs/pnode.h:19:
+#define CL_COPY_ALL ^I^I0x04$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: fs/pnode.h:20:
+#define CL_MAKE_SHARED ^I^I0x08$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: fs/pnode.h:21:
+#define CL_PROPAGATION ^I^I0x10$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#344: FILE: fs/pnode.h:30:
+int propagate_mnt(struct vfsmount *, struct dentry *, struct vfsmount *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#344: FILE: fs/pnode.h:30:
+int propagate_mnt(struct vfsmount *, struct dentry *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#344: FILE: fs/pnode.h:30:
+int propagate_mnt(struct vfsmount *, struct dentry *, struct vfsmount *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#344: FILE: fs/pnode.h:30:
+int propagate_mnt(struct vfsmount *, struct dentry *, struct vfsmount *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: fs/pnode.h:31:
+int propagate_mnt(struct vfsmount *, struct dentry *, struct vfsmount *,
+		struct list_head *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#354: FILE: include/linux/fs.h:1254:
+extern void umount_tree(struct vfsmount *, struct list_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#354: FILE: include/linux/fs.h:1254:
+extern void umount_tree(struct vfsmount *, struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#354: FILE: include/linux/fs.h:1254:
+extern void umount_tree(struct vfsmount *, struct list_head *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: include/linux/fs.h:1255:
+extern void release_mounts(struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#355: FILE: include/linux/fs.h:1255:
+extern void release_mounts(struct list_head *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: include/linux/fs.h:1257:
+extern struct vfsmount *copy_tree(struct vfsmount *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#357: FILE: include/linux/fs.h:1257:
+extern struct vfsmount *copy_tree(struct vfsmount *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#357: FILE: include/linux/fs.h:1257:
+extern struct vfsmount *copy_tree(struct vfsmount *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#357: FILE: include/linux/fs.h:1257:
+extern struct vfsmount *copy_tree(struct vfsmount *, struct dentry *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#358: FILE: include/linux/fs.h:1258:
+extern void mnt_set_mountpoint(struct vfsmount *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#358: FILE: include/linux/fs.h:1258:
+extern void mnt_set_mountpoint(struct vfsmount *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#358: FILE: include/linux/fs.h:1258:
+extern void mnt_set_mountpoint(struct vfsmount *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#358: FILE: include/linux/fs.h:1258:
+extern void mnt_set_mountpoint(struct vfsmount *, struct dentry *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: include/linux/fs.h:1259:
+extern void mnt_set_mountpoint(struct vfsmount *, struct dentry *,
+				  struct vfsmount *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 36 warnings, 10 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
