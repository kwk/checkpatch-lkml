WARNING:TYPO_SPELLING: 'somwhere' may be misspelled - perhaps 'somewhere'?
#34: 
> (even without "-o index" mount option) my system deadlocks somwhere
                                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#69: 
PS - patch has recieved some editing to remove the other INDEX flag stuff,
               ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: fs/ext2i/dir.c:608:
+	int len = le16_to_cpu(de->rec_len);
+	if (len < EXT2_DIR_REC_LEN(0)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#99: FILE: fs/ext2i/dir.c:609:
+		printk(KERN_ERR "EXT2-fs: bad directory record length %d!\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#107: FILE: fs/ext2i/dir.c:617:
+					   unsigned reclen)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: fs/ext2i/dir.c:620:
+		unsigned nlen = EXT2_DIR_REC_LEN(de->name_len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#111: FILE: fs/ext2i/dir.c:621:
+		unsigned rlen = le16_to_cpu(de->rec_len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: fs/ext2i/dir.c:622:
+		unsigned rlen = le16_to_cpu(de->rec_len);
+		if (rlen < EXT2_DIR_REC_LEN(0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#113: FILE: fs/ext2i/dir.c:623:
+			printk(KERN_ERR

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#118: FILE: fs/ext2i/dir.c:628:
+		if ((de->inode? rlen - nlen: rlen) >= reclen)
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#118: FILE: fs/ext2i/dir.c:628:
+		if ((de->inode? rlen - nlen: rlen) >= reclen)
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#120: FILE: fs/ext2i/dir.c:630:
+		de = (ext2_dirent *) ((char *) de + rlen);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: fs/ext2i/dir.c:756:
+	unsigned blockshift = sb->s_blocksize_bits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#166: FILE: fs/ext2i/dir.c:757:
+	unsigned blocksize = sb->s_blocksize;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: fs/ext2i/dir.c:758:
+	unsigned block;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: fs/ext2i/dir.c:775:
+			bh = ext2_bread (dir, dx_get_block(frame->at), 0);

CHECK:SPACING: No space is necessary after a cast
#191: FILE: fs/ext2i/dir.c:781:
+			for (de = (ext2_dirent *) data; de < top;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: fs/ext2i/dir.c:783:
+				if (ext2_match (namelen, name, de)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: fs/ext2i/dir.c:816:
+		if (IS_ERR(bh = ext2_bread (dir, block, 0))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#207: FILE: fs/ext2i/dir.c:816:
+		if (IS_ERR(bh = ext2_bread (dir, block, 0))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#208: FILE: fs/ext2i/dir.c:817:
+			ext2_error(sb, __FUNCTION__,

CHECK:SPACING: No space is necessary after a cast
#218: FILE: fs/ext2i/dir.c:824:
+		for (de = (ext2_dirent *) data; de < top;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: fs/ext2i/dir.c:826:
+			if (ext2_match (namelen, name, de)) {

CHECK:SPACING: No space is necessary after a cast
#233: FILE: fs/ext2i/dir.c:845:
+		de = ext2_next_entry((ext2_dirent *) bh->b_data,

CHECK:SPACING: No space is necessary after a cast
#234: FILE: fs/ext2i/dir.c:846:
+				     (ext2_dirent *) bh->b_data);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#243: FILE: fs/ext2i/dir.c:898:
+	unsigned blockshift = dir->i_sb->s_blocksize_bits;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#244: FILE: fs/ext2i/dir.c:899:
+	unsigned blocksize = 1 << blockshift;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#248: FILE: fs/ext2i/dir.c:901:
+	unsigned i, blocks;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#272: FILE: fs/ext2i/dir.c:928:
+		if ((de = ext2_next_empty(de, top, reclen)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#277: FILE: fs/ext2i/dir.c:932:
+		dxtrace(printk("using %u of %u node entries\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#322: FILE: fs/ext2i/dir.c:1073:
+		if ((de = ext2_next_empty(de, top, reclen)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: fs/ext2i/dir.c:1139:
+		unsigned nlen = de->name_len;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#398: FILE: fs/ext2i/dir.c:1224:
+		ext2_dirent * de, *top;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#425: FILE: fs/ext2i/dir.c:1254:
+		ext2_warning(inode->i_sb, __FUNCTION__,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000535471.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 23 warnings, 5 checks, 328 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000535471.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
