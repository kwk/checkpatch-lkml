WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#61: FILE: include/linux/delayacct.h:23:
+int delayacct_sysctl_handler(ctl_table *table, int write, struct file *filp,
                                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#96: FILE: include/linux/sysctl.h:150:
+	KERN_DELAYACCT=74,	/* int: Per-task delay accounting on/off */
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#125: FILE: kernel/delayacct.c:53:
+	if (!tsk->delays) {
[...]
-	}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#130: FILE: kernel/delayacct.c:57:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#156: FILE: kernel/delayacct.c:84:
+	int cnt=0, i, j;
 	       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#172: FILE: kernel/delayacct.c:100:
+	delayp = kmalloc(cnt *sizeof(struct task_delay_info *), GFP_KERNEL);
 	                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#200: FILE: kernel/delayacct.c:128:
+		if (!(t->flags & (PF_EXITING | PF_DEAD))) {
+			t->delays = delayp[i--];
+		}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#238: FILE: kernel/delayacct.c:166:
+int delayacct_sysctl_handler(ctl_table *table, int write, struct file *filp,
                                                                        ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: kernel/delayacct.c:167:
+int delayacct_sysctl_handler(ctl_table *table, int write, struct file *filp,
+			void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#244: FILE: kernel/delayacct.c:172:
+	ret = proc_dointvec(table, write, filp, buffer, lenp, ppos);
 	                                  ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prev == delayacct_on'
#245: FILE: kernel/delayacct.c:173:
+	if (ret || (prev == delayacct_on))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: kernel/sysctl.c:675:
+		.maxlen		= sizeof (int),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 5 checks, 234 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
