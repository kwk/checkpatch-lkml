WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#47: FILE: ipc/msg.c:218:
+		BUG_ON(msq == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msq"
#47: FILE: ipc/msg.c:218:
+		BUG_ON(msq == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#59: FILE: ipc/sem.c:225:
+		BUG_ON(sma == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sma"
#59: FILE: ipc/sem.c:225:
+		BUG_ON(sma == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#69: FILE: ipc/sem.c:1162:
+		BUG_ON(queue.prev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "queue.prev"
#69: FILE: ipc/sem.c:1162:
+		BUG_ON(queue.prev != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: ipc/shm.c:89:
+	BUG_ON(!(shp = shm_lock(id)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#91: FILE: ipc/shm.c:139:
+	BUG_ON(!(shp = shm_lock(id)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#101: FILE: ipc/shm.c:262:
+		BUG_ON(shp == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#101: FILE: ipc/shm.c:262:
+		BUG_ON(shp == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#111: FILE: ipc/shm.c:744:
+	BUG_ON(!(shp = shm_lock(shmid)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: ipc/util.c:219:
+	BUG_ON(lid >= ids->size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#133: FILE: ipc/util.c:227:
+	BUG_ON(p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#133: FILE: ipc/util.c:227:
+	BUG_ON(p == NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255725.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 5 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255725.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
