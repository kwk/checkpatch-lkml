WARNING:TYPO_SPELLING: 'upcomming' may be misspelled - perhaps 'upcoming'?
#36: 
> > > The upcomming gcc 3.4 has a new inlining algorithm which sometimes
          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > > fails to inline some "dumb" inlines in the kernel. This sometimes leads

WARNING:TYPO_SPELLING: 'failes' may be misspelled - perhaps 'fails'?
#54: 
time function failes to be inlined.
              ^^^^^^

WARNING:TYPO_SPELLING: 'unnecesary' may be misspelled - perhaps 'unnecessary'?
#64: 
so -Winline output does not contain unnecesary complains.
                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'wathever' may be misspelled - perhaps 'whatever'?
#81: 
can't be inlined for wathever reason.  This include the case of function
                     ^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: fs/ntfs/ntfs.h:186:
+extern time_t ntfs2utc(const s64 time);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:MODIFIED_INCLUDE_ASM: do not modify files in include/asm, change architecture specific files in include/asm-<architecture>
#128: +++ ./include/asm/apic.h	2004-01-13 00:39:10.000000000 +0100

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: include/asm/apic.h:88:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: include/asm/apic.h:88:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: include/asm/apic.h:88:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#147: FILE: include/asm-i386/apic.h:88:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#147: FILE: include/asm-i386/apic.h:88:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/asm-i386/apic.h:88:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/linux/bio.h:234:
+extern int bio_phys_segments(struct request_queue *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#161: FILE: include/linux/bio.h:234:
+extern int bio_phys_segments(struct request_queue *, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#161: FILE: include/linux/bio.h:234:
+extern int bio_phys_segments(struct request_queue *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/linux/bio.h:235:
+extern int bio_hw_segments(struct request_queue *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#162: FILE: include/linux/bio.h:235:
+extern int bio_hw_segments(struct request_queue *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#162: FILE: include/linux/bio.h:235:
+extern int bio_hw_segments(struct request_queue *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/bio.h:237:
+extern void __bio_clone(struct bio *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#165: FILE: include/linux/bio.h:237:
+extern void __bio_clone(struct bio *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#165: FILE: include/linux/bio.h:237:
+extern void __bio_clone(struct bio *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: include/linux/bio.h:240:
+extern void bio_init(struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#169: FILE: include/linux/bio.h:240:
+extern void bio_init(struct bio *);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#178: FILE: include/linux/compile.h:1:
+/* This file is auto generated, version 4 */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/efi.h:300:
+extern unsigned long __init efi_get_time(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/efi.h:301:
+extern int __init efi_set_rtc_mmss(unsigned long nowtime);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/linux/elevator.h:99:
+extern int elv_rq_merge_ok(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#211: FILE: include/linux/elevator.h:99:
+extern int elv_rq_merge_ok(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#211: FILE: include/linux/elevator.h:99:
+extern int elv_rq_merge_ok(struct request *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: include/linux/elevator.h:100:
+extern int elv_try_merge(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#212: FILE: include/linux/elevator.h:100:
+extern int elv_try_merge(struct request *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#212: FILE: include/linux/elevator.h:100:
+extern int elv_try_merge(struct request *, struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: include/linux/elevator.h:101:
+extern int elv_try_last_merge(request_queue_t *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#213: FILE: include/linux/elevator.h:101:
+extern int elv_try_last_merge(request_queue_t *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#213: FILE: include/linux/elevator.h:101:
+extern int elv_try_last_merge(request_queue_t *, struct bio *);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: include/linux/ide.h:1420:
+extern u32 ide_read_24(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#225: FILE: include/linux/ide.h:1420:
+extern u32 ide_read_24(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/linux/ide.h:1422:
+extern void SELECT_DRIVE(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#231: FILE: include/linux/ide.h:1422:
+extern void SELECT_DRIVE(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/linux/ide.h:1423:
+extern void SELECT_INTERRUPT(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#232: FILE: include/linux/ide.h:1423:
+extern void SELECT_INTERRUPT(ide_drive_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: include/linux/ide.h:1424:
+extern void SELECT_MASK(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#233: FILE: include/linux/ide.h:1424:
+extern void SELECT_MASK(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#233: FILE: include/linux/ide.h:1424:
+extern void SELECT_MASK(ide_drive_t *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: include/linux/ide.h:1425:
+extern void QUIRK_LIST(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#234: FILE: include/linux/ide.h:1425:
+extern void QUIRK_LIST(ide_drive_t *);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: include/linux/reiserfs_fs.h:1783:
+extern void copy_short_key (void * to, const void * from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: include/linux/reiserfs_fs.h:1783:
+extern void copy_short_key (void * to, const void * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: include/linux/reiserfs_fs.h:1783:
+extern void copy_short_key (void * to, const void * from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/linux/reiserfs_fs.h:1783:
+extern void copy_short_key (void * to, const void * from);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: include/linux/reiserfs_fs.h:1784:
+extern void copy_item_head(struct item_head * p_v_to, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: include/linux/reiserfs_fs.h:1784:
+extern void copy_item_head(struct item_head * p_v_to, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: include/linux/reiserfs_fs.h:1784:
+extern void copy_item_head(struct item_head * p_v_to, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: include/linux/reiserfs_fs.h:1785:
+extern void copy_item_head(struct item_head * p_v_to, 
 								  const struct item_head * p_v_from);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: include/linux/reiserfs_fs.h:1788:
+extern int comp_keys (const struct key * le_key, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: include/linux/reiserfs_fs.h:1788:
+extern int comp_keys (const struct key * le_key, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: include/linux/reiserfs_fs.h:1788:
+extern int comp_keys (const struct key * le_key, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: include/linux/reiserfs_fs.h:1788:
+extern int comp_keys (const struct key * le_key, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: include/linux/reiserfs_fs.h:1789:
+		      const struct cpu_key * cpu_key);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: include/linux/reiserfs_fs.h:1790:
+extern int  comp_short_keys (const struct key * le_key, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: include/linux/reiserfs_fs.h:1790:
+extern int  comp_short_keys (const struct key * le_key, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: include/linux/reiserfs_fs.h:1790:
+extern int  comp_short_keys (const struct key * le_key, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/reiserfs_fs.h:1790:
+extern int  comp_short_keys (const struct key * le_key, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: include/linux/reiserfs_fs.h:1792:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: include/linux/reiserfs_fs.h:1792:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: include/linux/reiserfs_fs.h:1792:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/linux/reiserfs_fs.h:1792:
+extern void le_key2cpu_key (struct cpu_key * to, const struct key * from);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: include/linux/reiserfs_fs.h:1795:
+extern int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#265: FILE: include/linux/reiserfs_fs.h:1795:
+extern int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#265: FILE: include/linux/reiserfs_fs.h:1795:
+extern int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#265: FILE: include/linux/reiserfs_fs.h:1795:
+extern int comp_cpu_keys (const struct cpu_key *, const struct cpu_key *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: include/linux/reiserfs_fs.h:1796:
+extern int comp_short_cpu_keys (const struct cpu_key *, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: include/linux/reiserfs_fs.h:1796:
+extern int comp_short_cpu_keys (const struct cpu_key *, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/reiserfs_fs.h:1796:
+extern int comp_short_cpu_keys (const struct cpu_key *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#266: FILE: include/linux/reiserfs_fs.h:1796:
+extern int comp_short_cpu_keys (const struct cpu_key *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpu_key *' should also have an identifier name
#266: FILE: include/linux/reiserfs_fs.h:1796:
+extern int comp_short_cpu_keys (const struct cpu_key *, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: include/linux/reiserfs_fs.h:1797:
+extern int comp_short_cpu_keys (const struct cpu_key *, 
 				       const struct cpu_key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: include/linux/reiserfs_fs.h:1801:
+extern int comp_le_keys (const struct key *, const struct key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: include/linux/reiserfs_fs.h:1801:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#273: FILE: include/linux/reiserfs_fs.h:1801:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#273: FILE: include/linux/reiserfs_fs.h:1801:
+extern int comp_le_keys (const struct key *, const struct key *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#274: FILE: include/linux/reiserfs_fs.h:1802:
+extern int comp_short_le_keys (const struct key *, const struct key *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: include/linux/reiserfs_fs.h:1802:
+extern int comp_short_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#274: FILE: include/linux/reiserfs_fs.h:1802:
+extern int comp_short_le_keys (const struct key *, const struct key *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct key *' should also have an identifier name
#274: FILE: include/linux/reiserfs_fs.h:1802:
+extern int comp_short_le_keys (const struct key *, const struct key *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: include/linux/reiserfs_fs.h:1837:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: include/linux/reiserfs_fs.h:1837:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#283: FILE: include/linux/reiserfs_fs.h:1837:
+extern void decrement_bcount (struct buffer_head * p_s_bh);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: include/linux/reiserfs_fs.h:1919:
+void set_de_name_and_namelen (struct reiserfs_dir_entry * de);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: include/linux/reiserfs_fs.h:1919:
+void set_de_name_and_namelen (struct reiserfs_dir_entry * de);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: include/linux/reiserfs_fs.h:2040:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#302: FILE: include/linux/reiserfs_fs.h:2040:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb, 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: include/linux/reiserfs_fs.h:2040:
+void do_balance_mark_leaf_dirty (struct tree_balance * tb, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#303: FILE: include/linux/reiserfs_fs.h:2041:
+				 struct buffer_head * bh, int flag);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: include/linux/sched.h:672:
+extern void FASTCALL(__mmdrop(struct mm_struct *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#315: FILE: include/linux/sched.h:672:
+extern void FASTCALL(__mmdrop(struct mm_struct *));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: include/net/tcp.h:741:
+extern void			tcp_put_port(struct sock *sk);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 60 warnings, 31 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
