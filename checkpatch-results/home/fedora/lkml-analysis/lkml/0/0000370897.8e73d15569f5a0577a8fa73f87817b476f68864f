WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#62: 
 25-akpm/drivers/pcmcia/cs.c          |  721 +++++++++++++++++++----------------

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#79: FILE: drivers/pcmcia/cs.c:306:
+void pcmcia_unregister_socket(struct device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: drivers/pcmcia/cs.c:366:
+		BUG_ON(!s->thread);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#334: FILE: drivers/pcmcia/cs.c:556:
+	printk(KERN_ERR "PCMCIA: socket %p: %s", skt, buf);

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#346: FILE: drivers/pcmcia/cs.c:568:
+		if (!(client->Attributes & INFO_MASTER_CLIENT))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#428: FILE: drivers/pcmcia/cs.c:650:
+	if (status & SS_3VCARD)
[...]
+	else if (!(status & SS_XVCARD))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#429: FILE: drivers/pcmcia/cs.c:651:
+		skt->socket.Vcc = skt->socket.Vpp = 33;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <Vcc>
#429: FILE: drivers/pcmcia/cs.c:651:
+		skt->socket.Vcc = skt->socket.Vpp = 33;

CHECK:CAMELCASE: Avoid CamelCase: <Vpp>
#429: FILE: drivers/pcmcia/cs.c:651:
+		skt->socket.Vcc = skt->socket.Vpp = 33;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#431: FILE: drivers/pcmcia/cs.c:653:
+		skt->socket.Vcc = skt->socket.Vpp = 50;

CHECK:BRACES: Unbalanced braces around else statement
#432: FILE: drivers/pcmcia/cs.c:654:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#458: FILE: drivers/pcmcia/cs.c:680:
+	if (ret == CS_SUCCESS) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#467: FILE: drivers/pcmcia/cs.c:689:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#500: FILE: drivers/pcmcia/cs.c:722:
+	if (ret == CS_SUCCESS) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#512: FILE: drivers/pcmcia/cs.c:734:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/pcmcia/cs.c:770:
+				if ((skt->state & SOCKET_PRESENT) &&
+				     !(status & SS_DETECT))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#625: FILE: drivers/pcmcia/cs.c:816:
+void pcmcia_suspend_socket (socket_info_t *skt)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#638: FILE: drivers/pcmcia/cs.c:823:
+void pcmcia_resume_socket (socket_info_t *skt)

CHECK:CAMELCASE: Avoid CamelCase: <Socket>
#692: FILE: drivers/pcmcia/cs.c:2100:
+	DEBUG(1, "cs: resetting socket %d\n", handle->Socket);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: drivers/pcmcia/cs_internal.h:158:
+    struct semaphore^I^Iskt_sem;^I/* protects socket h/w state */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/pcmcia/cs_internal.h:160:
+    struct task_struct^I^I*thread;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/pcmcia/cs_internal.h:161:
+    struct completion^I^Ithread_done;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/pcmcia/cs_internal.h:162:
+    wait_queue_head_t^I^Ithread_wait;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/pcmcia/cs_internal.h:163:
+    spinlock_t^I^I^Ithread_lock;^I/* protects thread_events */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: drivers/pcmcia/cs_internal.h:164:
+    unsigned int^I^Ithread_events;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 13 checks, 862 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370897.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
