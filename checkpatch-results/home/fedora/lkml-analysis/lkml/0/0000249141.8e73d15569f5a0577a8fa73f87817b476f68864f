WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
diff -Nurp orig/linux-2.6.8.1/drivers/block/genhd.c linux-2.6.8.1/drivers/block/genhd.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: drivers/block/genhd.c:388:
+static ssize_t disk_driver_read(struct gendisk * disk, char *page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#79: FILE: drivers/block/genhd.c:392:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#88: FILE: drivers/block/genhd.c:414:
 };
+static struct disk_attribute disk_attr_driver = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#89: FILE: drivers/block/genhd.c:415:
+	.attr = {.name = "driver", .mode = S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/block/rcf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: drivers/block/rcf.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/block/rcf.c:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-$

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#142: FILE: drivers/block/rcf.c:24:
+#include <asm/bitops.h>

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: drivers/block/rcf.c:57:
+		if(file->f_mode & FMODE_WRITE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#176: FILE: drivers/block/rcf.c:58:
+			printk(KERN_WARNING "RCF: %s: command %02x not allowed "

WARNING:SPLIT_STRING: quoted string split across lines
#177: FILE: drivers/block/rcf.c:59:
+			printk(KERN_WARNING "RCF: %s: command %02x not allowed "
+			"in write-mode\n", file->f_dentry->d_name.name, cmd[0]);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#179: FILE: drivers/block/rcf.c:61:
+			printk(KERN_WARNING "RCF: %s: command %02x not allowed "

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: drivers/block/rcf.c:62:
+			printk(KERN_WARNING "RCF: %s: command %02x not allowed "
+			"in read-mode\n", file->f_dentry->d_name.name, cmd[0]);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#184: FILE: drivers/block/rcf.c:66:
+
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#186: FILE: drivers/block/rcf.c:68:
+EXPORT_SYMBOL(rcf_verify_command);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/block/rcf.c:76:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/block/rcf.c:77:
+^Iif (rw == READ) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: drivers/block/rcf.c:82:
+	for (x=0; x < RCF_MAX_NR_CMDS; x++)
 	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#204: FILE: drivers/block/rcf.c:86:
+			if (x < RCF_MAX_NR_CMDS-1)
 			                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/block/rcf.c:91:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/block/rcf.c:106:
+static ssize_t rcf_cmds_store(struct rawio_cmd_filter *rcf, const char *page,
+			size_t count, int rw)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#226: FILE: drivers/block/rcf.c:108:
+	ssize_t ret=0;
 	           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: drivers/block/rcf.c:113:
+	memset(&okbits, 0, sizeof (okbits));

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#233: FILE: drivers/block/rcf.c:115:
+	for (len = strlen(page); len > 0; len-=3) {
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: drivers/block/rcf.c:118:
+		ss.from = (char *)page+ret;
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: drivers/block/rcf.c:119:
+		ss.to = (char *)page+ret+2;
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: drivers/block/rcf.c:119:
+		ss.to = (char *)page+ret+2;
 		                        ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#238: FILE: drivers/block/rcf.c:120:
+		ret+=3;
 		   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: drivers/block/rcf.c:133:
+	memmove(target_okbits, okbits, sizeof (okbits));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/block/rcf.c:139:
+static ssize_t rcf_readcmds_store(struct rawio_cmd_filter *rcf,
+	const char *page, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/block/rcf.c:145:
+static ssize_t rcf_writecmds_store(struct rawio_cmd_filter *rcf,
+	const char *page, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/block/rcf.c:156:
+static ssize_t rcf_debugmode_store(struct rawio_cmd_filter *rcf,
+	const char *page, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: drivers/block/rcf.c:159:
+	u32 state;
+	state = simple_strtoul(page, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#277: FILE: drivers/block/rcf.c:159:
+	state = simple_strtoul(page, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/block/rcf.c:162:
+^Ircf->debug_mode = state;^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rawio_cmd_filter *' should also have an identifier name
#286: FILE: drivers/block/rcf.c:168:
+	ssize_t (*show)(struct rawio_cmd_filter *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#286: FILE: drivers/block/rcf.c:168:
+	ssize_t (*show)(struct rawio_cmd_filter *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rawio_cmd_filter *' should also have an identifier name
#287: FILE: drivers/block/rcf.c:169:
+	ssize_t (*store)(struct rawio_cmd_filter *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#287: FILE: drivers/block/rcf.c:169:
+	ssize_t (*store)(struct rawio_cmd_filter *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#287: FILE: drivers/block/rcf.c:169:
+	ssize_t (*store)(struct rawio_cmd_filter *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#291: FILE: drivers/block/rcf.c:173:
+	.attr = {.name = "ok_read_commands", .mode = S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#297: FILE: drivers/block/rcf.c:179:
+	.attr = {.name = "ok_write_commands", .mode = S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#303: FILE: drivers/block/rcf.c:185:
+	.attr = {.name = "rcf_debug", .mode = S_IRUGO | S_IWUSR },

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/block/rcf.c:208:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/block/rcf.c:214:
+rcf_attr_store(struct kobject *kobj, struct attribute *attr,
+			const char *page, size_t length)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: drivers/block/rcf.c:222:
+^I$

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#346: FILE: drivers/block/rcf.c:228:
+static struct sysfs_ops rcf_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/block/rcf.c:256:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: drivers/block/rcf.c:263:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: drivers/block/rcf.c:282:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: drivers/block/rcf.c:331:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#594: FILE: include/linux/blkdev.h:515:
+extern int blk_register_filter(struct gendisk *disk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#595: FILE: include/linux/blkdev.h:516:
+extern void blk_unregister_filter(struct gendisk *disk);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#608: FILE: include/linux/genhd.h:83:
+#define	RCF_CMD_LONGS	(RCF_MAX_NR_CMDS / (sizeof (unsigned long) * 8))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000249141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 23 warnings, 14 checks, 545 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000249141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
