WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: fs/unionfs/stale_inode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#61: FILE: fs/unionfs/stale_inode.c:17:
+static struct address_space_operations unionfs_stale_aops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#64: FILE: fs/unionfs/stale_inode.c:20:
+extern struct inode_operations stale_inode_ops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#64: FILE: fs/unionfs/stale_inode.c:20:
+extern struct inode_operations stale_inode_ops;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#71: FILE: fs/unionfs/stale_inode.c:27:
+static void *stale_follow_link(struct dentry *dent, struct nameidata *nd)
                                                                       ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#73: FILE: fs/unionfs/stale_inode.c:29:
+	int err = vfs_follow_link(nd, ERR_PTR(-ESTALE));
 	                          ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: fs/unionfs/stale_inode.c:30:
+	int err = vfs_follow_link(nd, ERR_PTR(-ESTALE));
+	return ERR_PTR(err);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#82: FILE: fs/unionfs/stale_inode.c:38:
+#define ESTALE_ERROR ((void *) (return_ESTALE))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#84: FILE: fs/unionfs/stale_inode.c:40:
+static struct file_operations stale_file_ops = {

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#100: FILE: fs/unionfs/stale_inode.c:56:
+struct inode_operations stale_inode_ops = {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#137: FILE: fs/unionfs/stale_inode.c:93:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 2 checks, 116 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000042079.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
