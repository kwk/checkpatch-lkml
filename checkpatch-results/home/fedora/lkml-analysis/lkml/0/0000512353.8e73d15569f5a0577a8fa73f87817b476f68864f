WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
I want to bring your attention to a Linux ARP patch we plan to use for load balancing and server

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: include/linux/inetdevice.h:20:
+    int  strict_interface_arp;$

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#91: FILE: include/linux/inetdevice.h:51:
+#define IN_DEV_STRICT_INTF_ARP(in_dev)  (ipv4_devconf.strict_interface_arp || (in_dev)->cnf.strict_interface_arp)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: include/linux/sysctl.h:330:
+    NET_IPV4_CONF_TAG=12,$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#103: FILE: include/linux/sysctl.h:330:
+    NET_IPV4_CONF_TAG=12,
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: include/linux/sysctl.h:331:
+    NET_IPV4_CONF_STRICT_INTERFACE_ARP=13$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: include/linux/sysctl.h:331:
+    NET_IPV4_CONF_STRICT_INTERFACE_ARP=13
                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: net/ipv4/arp.c:317:
+    u32 sip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: net/ipv4/arp.c:318:
+    int onlink = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: net/ipv4/arp.c:319:
+    struct in_device *in_dev = NULL;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: net/ipv4/arp.c:328:
+     * be on dev where arp request is sent - pflau 06-29-2001 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: net/ipv4/arp.c:329:
+    if (skb) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#130: FILE: net/ipv4/arp.c:329:
+    if (skb) {
+            sip = skb->nh.iph->saddr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: net/ipv4/arp.c:330:
+            sip = skb->nh.iph->saddr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: net/ipv4/arp.c:330:
+            sip = skb->nh.iph->saddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: net/ipv4/arp.c:331:
+         in_dev = in_dev_get(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: net/ipv4/arp.c:331:
+         in_dev = in_dev_get(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: net/ipv4/arp.c:333:
+                if (IN_DEV_STRICT_INTF_ARP(in_dev)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: net/ipv4/arp.c:333:
+                if (IN_DEV_STRICT_INTF_ARP(in_dev)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 14)
#134: FILE: net/ipv4/arp.c:333:
+                if (IN_DEV_STRICT_INTF_ARP(in_dev)) {
+              read_lock(&in_dev->lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#134: FILE: net/ipv4/arp.c:333:
+                if (IN_DEV_STRICT_INTF_ARP(in_dev)) {
[...]
+         } else if (inet_addr_type(skb->nh.iph->saddr) == RTN_LOCAL)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: net/ipv4/arp.c:334:
+              read_lock(&in_dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: net/ipv4/arp.c:334:
+              read_lock(&in_dev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: net/ipv4/arp.c:335:
+              for_ifa(in_dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: net/ipv4/arp.c:335:
+              for_ifa(in_dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: net/ipv4/arp.c:336:
+                   if ((onlink = !(sip ^ ifa->ifa_local)) != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: net/ipv4/arp.c:336:
+                   if ((onlink = !(sip ^ ifa->ifa_local)) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 34)
#137: FILE: net/ipv4/arp.c:336:
+                   if ((onlink = !(sip ^ ifa->ifa_local)) != 0)
+                                  break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#137: FILE: net/ipv4/arp.c:336:
+                   if ((onlink = !(sip ^ ifa->ifa_local)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: net/ipv4/arp.c:337:
+                                  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: net/ipv4/arp.c:337:
+                                  break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: net/ipv4/arp.c:338:
+              } endfor_ifa(in_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: net/ipv4/arp.c:338:
+              } endfor_ifa(in_dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: net/ipv4/arp.c:339:
+              read_unlock(&in_dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: net/ipv4/arp.c:339:
+              read_unlock(&in_dev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: net/ipv4/arp.c:340:
+         } else if (inet_addr_type(skb->nh.iph->saddr) == RTN_LOCAL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: net/ipv4/arp.c:340:
+         } else if (inet_addr_type(skb->nh.iph->saddr) == RTN_LOCAL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 14)
#141: FILE: net/ipv4/arp.c:340:
+         } else if (inet_addr_type(skb->nh.iph->saddr) == RTN_LOCAL)
+              onlink = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: net/ipv4/arp.c:341:
+              onlink = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: net/ipv4/arp.c:341:
+              onlink = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: net/ipv4/arp.c:343:
+         if (in_dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: net/ipv4/arp.c:343:
+         if (in_dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 14)
#144: FILE: net/ipv4/arp.c:343:
+         if (in_dev)
+              in_dev_put(in_dev);

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: net/ipv4/arp.c:344:
+              in_dev_put(in_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: net/ipv4/arp.c:344:
+              in_dev_put(in_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: net/ipv4/arp.c:345:
+    }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: net/ipv4/arp.c:347:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: net/ipv4/arp.c:348:
+    if (onlink) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#149: FILE: net/ipv4/arp.c:348:
+    if (onlink) {
+         saddr = skb->nh.iph->saddr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: net/ipv4/arp.c:349:
+         saddr = skb->nh.iph->saddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: net/ipv4/arp.c:349:
+         saddr = skb->nh.iph->saddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: net/ipv4/arp.c:350:
+    } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#151: FILE: net/ipv4/arp.c:350:
+    } else {
          saddr = inet_select_addr(dev, target, RT_SCOPE_LINK);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: net/ipv4/arp.c:352:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: net/ipv4/arp.c:601:
+    int onlink;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 14)
#169: FILE: net/ipv4/arp.c:755:
          if (arp->ar_op == __constant_htons(ARPOP_REQUEST) &&
[...]
+              onlink = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: net/ipv4/arp.c:756:
+             inet_addr_type(tip) == RTN_LOCAL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: net/ipv4/arp.c:756:
+             inet_addr_type(tip) == RTN_LOCAL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: net/ipv4/arp.c:757:
+              onlink = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: net/ipv4/arp.c:757:
+              onlink = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: net/ipv4/arp.c:758:
+              if (IN_DEV_STRICT_INTF_ARP(in_dev)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: net/ipv4/arp.c:758:
+              if (IN_DEV_STRICT_INTF_ARP(in_dev)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 19)
#174: FILE: net/ipv4/arp.c:758:
+              if (IN_DEV_STRICT_INTF_ARP(in_dev)) {
+                   read_lock(&in_dev->lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#174: FILE: net/ipv4/arp.c:758:
+              if (IN_DEV_STRICT_INTF_ARP(in_dev)) {
[...]
+              } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: net/ipv4/arp.c:759:
+                   read_lock(&in_dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: net/ipv4/arp.c:759:
+                   read_lock(&in_dev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: net/ipv4/arp.c:760:
+                   for_ifa(in_dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: net/ipv4/arp.c:760:
+                   for_ifa(in_dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: net/ipv4/arp.c:761:
+                        if ((onlink = !(tip ^ ifa->ifa_local)) != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: net/ipv4/arp.c:761:
+                        if ((onlink = !(tip ^ ifa->ifa_local)) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 29)
#177: FILE: net/ipv4/arp.c:761:
+                        if ((onlink = !(tip ^ ifa->ifa_local)) != 0)
+                             break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: net/ipv4/arp.c:761:
+                        if ((onlink = !(tip ^ ifa->ifa_local)) != 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: net/ipv4/arp.c:762:
+                             break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: net/ipv4/arp.c:762:
+                             break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: net/ipv4/arp.c:763:
+                   } endfor_ifa(in_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: net/ipv4/arp.c:763:
+                   } endfor_ifa(in_dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: net/ipv4/arp.c:764:
+                   read_unlock(&in_dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: net/ipv4/arp.c:764:
+                   read_unlock(&in_dev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: net/ipv4/arp.c:765:
+              } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: net/ipv4/arp.c:765:
+              } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 19)
#181: FILE: net/ipv4/arp.c:765:
+              } else
+                   onlink = 1;

CHECK:BRACES: Unbalanced braces around else statement
#181: FILE: net/ipv4/arp.c:765:
+              } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: net/ipv4/arp.c:766:
+                   onlink = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: net/ipv4/arp.c:766:
+                   onlink = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: net/ipv4/arp.c:768:
+              if (onlink)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: net/ipv4/arp.c:768:
+              if (onlink)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 19)
#184: FILE: net/ipv4/arp.c:768:
+              if (onlink)
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: net/ipv4/arp.c:769:
+                   arp_send(ARPOP_REPLY,ETH_P_ARP,tip,dev,tip,sha,dev->dev_addr,dev->dev_addr);
                                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: net/ipv4/arp.c:770:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: net/ipv4/arp.c:770:
+         }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 19)
#193: FILE: net/ipv4/arp.c:782:
               if (n) {
[...]
+                   onlink = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: net/ipv4/arp.c:783:
+                   /* if strict_interface_arp then bind arp response to the interface. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: net/ipv4/arp.c:784:
+                   /* reply only if tip is on dev where arp request is received - 2/5/2001 pflau */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: net/ipv4/arp.c:785:
+                   onlink = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: net/ipv4/arp.c:785:
+                   onlink = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: net/ipv4/arp.c:786:
+                   if (IN_DEV_STRICT_INTF_ARP(in_dev)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: net/ipv4/arp.c:786:
+                   if (IN_DEV_STRICT_INTF_ARP(in_dev)) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#198: FILE: net/ipv4/arp.c:786:
+                   if (IN_DEV_STRICT_INTF_ARP(in_dev)) {
[...]
+                   } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: net/ipv4/arp.c:787:
+                        read_lock(&in_dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: net/ipv4/arp.c:787:
+                        read_lock(&in_dev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: net/ipv4/arp.c:788:
+                        for_ifa(in_dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: net/ipv4/arp.c:788:
+                        for_ifa(in_dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: net/ipv4/arp.c:789:
+                             if ((onlink = !(tip ^ ifa->ifa_local)) != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: net/ipv4/arp.c:789:
+                             if ((onlink = !(tip ^ ifa->ifa_local)) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (29, 34)
#201: FILE: net/ipv4/arp.c:789:
+                             if ((onlink = !(tip ^ ifa->ifa_local)) != 0)
+                                  break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: net/ipv4/arp.c:789:
+                             if ((onlink = !(tip ^ ifa->ifa_local)) != 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: net/ipv4/arp.c:790:
+                                  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: net/ipv4/arp.c:790:
+                                  break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: net/ipv4/arp.c:791:
+                        } endfor_ifa(in_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: net/ipv4/arp.c:791:
+                        } endfor_ifa(in_dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: net/ipv4/arp.c:792:
+                        read_unlock(&in_dev->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: net/ipv4/arp.c:792:
+                        read_unlock(&in_dev->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: net/ipv4/arp.c:793:
+                   } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: net/ipv4/arp.c:793:
+                   } else$

CHECK:BRACES: Unbalanced braces around else statement
#205: FILE: net/ipv4/arp.c:793:
+                   } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: net/ipv4/arp.c:794:
+                        onlink = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: net/ipv4/arp.c:794:
+                        onlink = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: net/ipv4/arp.c:796:
+                   if (onlink) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: net/ipv4/arp.c:796:
+                   if (onlink) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#208: FILE: net/ipv4/arp.c:796:
+                   if (onlink) {
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
+                   }

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#209: FILE: net/ipv4/arp.c:797:
+                        arp_send(ARPOP_REPLY,ETH_P_ARP,sip,dev,tip,sha,dev->dev_addr,sha);
                                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: net/ipv4/arp.c:798:
+                   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: net/ipv4/arp.c:798:
+                   }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: net/ipv4/devinet.c:740:
+                  !IN_DEV_STRICT_INTF_ARP(in_dev) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: net/ipv4/devinet.c:740:
+                  !IN_DEV_STRICT_INTF_ARP(in_dev) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: net/ipv4/devinet.c:1020:
+    ctl_table devinet_vars[14];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: net/ipv4/devinet.c:1062:
+     &proc_dointvec},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: net/ipv4/devinet.c:1063:
+    {NET_IPV4_CONF_TAG, "strict_interface_arp",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: net/ipv4/devinet.c:1064:
+     &ipv4_devconf.strict_interface_arp, sizeof(int), 0644, NULL,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000512353.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 63 errors, 76 warnings, 6 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000512353.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
