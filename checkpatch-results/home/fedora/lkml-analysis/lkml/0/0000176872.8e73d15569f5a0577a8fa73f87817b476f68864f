WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
(it only suits the i386 kernel, I have not done this job for other platforms.)

WARNING:TYPO_SPELLING: 'garantee' may be misspelled - perhaps 'guarantee'?
#57: FILE: Documentation/bigphysarea.txt:8:
+is unable to garantee allocs of this order during a prolonged
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: Documentation/bigphysarea.txt:49:
+with 'base' set to the value returned by 'bigphysarea_alloc_pages'. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#107: FILE: Documentation/bigphysarea.txt:58:
+The first function allocates 'size' bytes physically continous
                                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#119: FILE: Makefile:7:
+EXTRAVERSION += -bigphys
 ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: Makefile:8:
+ $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#130: FILE: arch/i386/Kconfig:825:
+config BIGPHYS_AREA
+       bool "Big Physical Area"
+        ---help---
+          Enables kernel support for reserving large areas of physical
+          memory at boot-time for use by certain device drivers (such as
+          video framegrabbers, etc.) which require it. To use this
+          feature, boot the kernel with the boot-time option
+          'bigphysarea=nnn' where 'nnn' is the number of pages (a page
+          is usually 4K) to reserve.
+
+          See <file:Documentation/bigphysarea.txt> for more information.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: include/linux/bigphysarea.h:1:
+/* linux/mm/bigphysarea.h, M. Welsh (mdw@cs.cornell.edu)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: include/linux/bigphysarea.h:26:
+extern caddr_t bigphysarea_alloc(int size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/linux/bigphysarea.h:27:
+extern void    bigphysarea_free(caddr_t addr, int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/bigphysarea.h:30:
+extern caddr_t bigphysarea_alloc_pages(int count, int align, int priority);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/bigphysarea.h:31:
+extern void    bigphysarea_free_pages(caddr_t base);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#212: FILE: mm/bigphysarea.c:1:
+/* linux/mm/bigphysarea.c, M. Welsh (mdw@cs.cornell.edu)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#212: FILE: mm/bigphysarea.c:1:
+/* linux/mm/bigphysarea.c, M. Welsh (mdw@cs.cornell.edu)

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: mm/bigphysarea.c:11:
+ * This is a set of routines which allow you to reserve a large (?) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: mm/bigphysarea.c:13:
+ * by drivers. This memory is intended to be used for devices such as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: mm/bigphysarea.c:22:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#240: FILE: mm/bigphysarea.c:29:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#241: FILE: mm/bigphysarea.c:30:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#258: FILE: mm/bigphysarea.c:47:
+static int get_info(char* buf, char**, off_t, int);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#260: FILE: mm/bigphysarea.c:49:
+typedef struct range_struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: mm/bigphysarea.c:50:
+       struct range_struct *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: mm/bigphysarea.c:51:
+       caddr_t base;                   /* base of allocated block */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: mm/bigphysarea.c:52:
+       size_t  size;                   /* size in bytes */$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#271: FILE: mm/bigphysarea.c:60:
+static int     init_level = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#272: FILE: mm/bigphysarea.c:61:
+static int     bigphysarea_pages = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#273: FILE: mm/bigphysarea.c:62:
+static caddr_t bigphysarea = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#274: FILE: mm/bigphysarea.c:63:
+static range_t *free_list = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#275: FILE: mm/bigphysarea.c:64:
+static range_t *used_list = NULL;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#277: FILE: mm/bigphysarea.c:65:
IORESOURCE_MEM|IORESOURCE_BUSY };

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: mm/bigphysarea.c:70:
+       if (bigphysarea_pages == 0 || bigphysarea == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#282: FILE: mm/bigphysarea.c:70:
+       if (bigphysarea_pages == 0 || bigphysarea == 0)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: mm/bigphysarea.c:71:
+               return -EINVAL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: mm/bigphysarea.c:71:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 0)
#286: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
[...]
long)bigphysarea>>PAGE_SHIFT,bigphysarea_pages<<PAGE_SHIFT);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#286: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: mm/bigphysarea.c:75:
+               // ohoh, no way to free the allocated memory!$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: mm/bigphysarea.c:76:
+               // continue without proc support, it not fatal in itself$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: mm/bigphysarea.c:80:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: mm/bigphysarea.c:82:
+       init_level = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: mm/bigphysarea.c:84:
+       printk(KERN_INFO "bigphysarea: Allocated %d pages at 0x%p.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#297: FILE: mm/bigphysarea.c:84:
+       printk(KERN_INFO "bigphysarea: Allocated %d pages at 0x%p.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: mm/bigphysarea.c:85:
+              bigphysarea_pages, bigphysarea);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: mm/bigphysarea.c:85:
+              bigphysarea_pages, bigphysarea);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: mm/bigphysarea.c:87:
+       return 0;$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#303: FILE: mm/bigphysarea.c:90:
+__initcall(bigphysarea_init);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: mm/bigphysarea.c:102:
+       int par;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#316: FILE: mm/bigphysarea.c:103:
+       int par;
+       if (get_option(&str,&par)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#316: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {
+               bigphysarea_pages = par;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#316: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {
                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#316: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: mm/bigphysarea.c:104:
+               bigphysarea_pages = par;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: mm/bigphysarea.c:104:
+               bigphysarea_pages = par;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: mm/bigphysarea.c:105:
+               // Alloc the memory$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: mm/bigphysarea.c:106:
+               bigphysarea =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: mm/bigphysarea.c:106:
+               bigphysarea =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: mm/bigphysarea.c:107:
+               if (!bigphysarea) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: mm/bigphysarea.c:107:
+               if (!bigphysarea) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#321: FILE: mm/bigphysarea.c:107:
+               if (!bigphysarea) {
+                       printk(KERN_CRIT "bigphysarea: not enough

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: mm/bigphysarea.c:108:
+                       printk(KERN_CRIT "bigphysarea: not enough$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: mm/bigphysarea.c:108:
+                       printk(KERN_CRIT "bigphysarea: not enough$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#322: FILE: mm/bigphysarea.c:108:
+                       printk(KERN_CRIT "bigphysarea: not enough

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: mm/bigphysarea.c:109:
+                       return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: mm/bigphysarea.c:109:
+                       return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: mm/bigphysarea.c:110:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: mm/bigphysarea.c:110:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: mm/bigphysarea.c:112:
+               // register the resource for it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: mm/bigphysarea.c:112:
+               // register the resource for it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: mm/bigphysarea.c:113:
+               mem_resource.start = bigphysarea;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: mm/bigphysarea.c:113:
+               mem_resource.start = bigphysarea;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: mm/bigphysarea.c:114:
+               mem_resource.end = mem_resource.start +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: mm/bigphysarea.c:114:
+               mem_resource.end = mem_resource.start +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: mm/bigphysarea.c:115:
+               request_resource(&iomem_resource, &mem_resource);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: mm/bigphysarea.c:115:
+               request_resource(&iomem_resource, &mem_resource);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: mm/bigphysarea.c:116:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: mm/bigphysarea.c:117:
+       return 1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#336: FILE: mm/bigphysarea.c:120:
+__setup("bigphysarea=", bigphysarea_setup);
                     ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#336: FILE: mm/bigphysarea.c:120:
+__setup("bigphysarea=", bigphysarea_setup);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: mm/bigphysarea.c:123:
+ * When we have pages but don't have a freelist, put all pages in$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: mm/bigphysarea.c:124:
+ * one free list entry. Return 0 on success, 1 on error.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: mm/bigphysarea.c:125:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: mm/bigphysarea.c:129:
+       if (init_level == 1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: mm/bigphysarea.c:130:
+               free_list = kmalloc(sizeof(range_t), priority);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: mm/bigphysarea.c:130:
+               free_list = kmalloc(sizeof(range_t), priority);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: mm/bigphysarea.c:131:
+               if (free_list != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: mm/bigphysarea.c:131:
+               if (free_list != NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: mm/bigphysarea.c:132:
+                       free_list->next = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: mm/bigphysarea.c:132:
+                       free_list->next = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: mm/bigphysarea.c:133:
+                       free_list->base = bigphysarea;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: mm/bigphysarea.c:133:
+                       free_list->base = bigphysarea;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: mm/bigphysarea.c:134:
+                       free_list->size = bigphysarea_pages * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: mm/bigphysarea.c:134:
+                       free_list->size = bigphysarea_pages * PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: mm/bigphysarea.c:135:
+                       init_level = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: mm/bigphysarea.c:135:
+                       init_level = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: mm/bigphysarea.c:136:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: mm/bigphysarea.c:136:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: mm/bigphysarea.c:137:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: mm/bigphysarea.c:137:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: mm/bigphysarea.c:138:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: mm/bigphysarea.c:139:
+       return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#358: FILE: mm/bigphysarea.c:142:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: mm/bigphysarea.c:144:
+ * Allocate `count' pages from the big physical area. Pages are aligned to$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: mm/bigphysarea.c:145:
+ * a multiple of `align'. `priority' has the same meaning in kmalloc, it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: mm/bigphysarea.c:146:
+ * is needed for management information.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: mm/bigphysarea.c:147:
+ * This function may not be called from an interrupt!$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: mm/bigphysarea.c:148:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: mm/bigphysarea.c:151:
+       range_t *range, **range_ptr, *new_range, *align_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: mm/bigphysarea.c:152:
+       caddr_t aligned_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: mm/bigphysarea.c:154:
+       if (init_level < 2)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: mm/bigphysarea.c:155:
+               if (init2(priority))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: mm/bigphysarea.c:155:
+               if (init2(priority))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: mm/bigphysarea.c:156:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: mm/bigphysarea.c:156:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: mm/bigphysarea.c:157:
+       new_range   = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: mm/bigphysarea.c:158:
+       align_range = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: mm/bigphysarea.c:160:
+       if (align == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: mm/bigphysarea.c:161:
+               align = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: mm/bigphysarea.c:161:
+               align = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: mm/bigphysarea.c:162:
+       else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: mm/bigphysarea.c:163:
+               align = align * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: mm/bigphysarea.c:163:
+               align = align * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: mm/bigphysarea.c:164:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: mm/bigphysarea.c:165:
+        * Search a free block which is large enough, even with alignment.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: mm/bigphysarea.c:165:
+        * Search a free block which is large enough, even with alignment.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: mm/bigphysarea.c:166:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: mm/bigphysarea.c:166:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: mm/bigphysarea.c:167:
+       range_ptr = &free_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: mm/bigphysarea.c:168:
+       while (*range_ptr != NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: mm/bigphysarea.c:169:
+               range = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: mm/bigphysarea.c:169:
+               range = *range_ptr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: mm/bigphysarea.c:170:
+               aligned_base =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: mm/bigphysarea.c:170:
+               aligned_base =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: mm/bigphysarea.c:171:
+                 (caddr_t)((((unsigned long)range->base + align - 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: mm/bigphysarea.c:171:
+                 (caddr_t)((((unsigned long)range->base + align - 1)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: mm/bigphysarea.c:172:
+               if (aligned_base + count * PAGE_SIZE <= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: mm/bigphysarea.c:172:
+               if (aligned_base + count * PAGE_SIZE <= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: mm/bigphysarea.c:172:
+               if (aligned_base + count * PAGE_SIZE <= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: mm/bigphysarea.c:173:
+                   range->base + range->size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: mm/bigphysarea.c:173:
+                   range->base + range->size)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: mm/bigphysarea.c:174:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: mm/bigphysarea.c:174:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: mm/bigphysarea.c:175:
+            range_ptr = &range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: mm/bigphysarea.c:175:
+            range_ptr = &range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: mm/bigphysarea.c:176:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: mm/bigphysarea.c:177:
+       if (*range_ptr == NULL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: mm/bigphysarea.c:178:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: mm/bigphysarea.c:178:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: mm/bigphysarea.c:179:
+       range = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: mm/bigphysarea.c:180:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: mm/bigphysarea.c:181:
+        * When we have to align, the pages needed for alignment can$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: mm/bigphysarea.c:181:
+        * When we have to align, the pages needed for alignment can$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: mm/bigphysarea.c:182:
+        * be put back to the free pool.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: mm/bigphysarea.c:182:
+        * be put back to the free pool.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: mm/bigphysarea.c:183:
+        * We check here if we need a second range data structure later$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: mm/bigphysarea.c:183:
+        * We check here if we need a second range data structure later$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: mm/bigphysarea.c:184:
+        * and allocate it now, so that we don't have to check for a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: mm/bigphysarea.c:184:
+        * and allocate it now, so that we don't have to check for a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: mm/bigphysarea.c:185:
+        * failed kmalloc later.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: mm/bigphysarea.c:185:
+        * failed kmalloc later.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: mm/bigphysarea.c:186:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: mm/bigphysarea.c:186:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: mm/bigphysarea.c:187:
+       if (aligned_base - range->base + count * PAGE_SIZE < range->size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: mm/bigphysarea.c:188:
+               new_range = kmalloc(sizeof(range_t), priority);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: mm/bigphysarea.c:188:
+               new_range = kmalloc(sizeof(range_t), priority);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: mm/bigphysarea.c:189:
+               if (new_range == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: mm/bigphysarea.c:189:
+               if (new_range == NULL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: mm/bigphysarea.c:190:
+                       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: mm/bigphysarea.c:190:
+                       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: mm/bigphysarea.c:191:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: mm/bigphysarea.c:192:
+       if (aligned_base != range->base) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: mm/bigphysarea.c:193:
+               align_range = kmalloc(sizeof(range_t), priority);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: mm/bigphysarea.c:193:
+               align_range = kmalloc(sizeof(range_t), priority);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: mm/bigphysarea.c:194:
+               if (align_range == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: mm/bigphysarea.c:194:
+               if (align_range == NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: mm/bigphysarea.c:195:
+                       if (new_range != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: mm/bigphysarea.c:195:
+                       if (new_range != NULL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: mm/bigphysarea.c:196:
+                               kfree(new_range);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: mm/bigphysarea.c:196:
+                               kfree(new_range);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: mm/bigphysarea.c:197:
+                       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: mm/bigphysarea.c:197:
+                       return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: mm/bigphysarea.c:198:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: mm/bigphysarea.c:198:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: mm/bigphysarea.c:199:
+               align_range->base = range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: mm/bigphysarea.c:199:
+               align_range->base = range->base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: mm/bigphysarea.c:200:
+               align_range->size = aligned_base - range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: mm/bigphysarea.c:200:
+               align_range->size = aligned_base - range->base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: mm/bigphysarea.c:201:
+               range->base = aligned_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: mm/bigphysarea.c:201:
+               range->base = aligned_base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: mm/bigphysarea.c:202:
+               range->size -= align_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: mm/bigphysarea.c:202:
+               range->size -= align_range->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: mm/bigphysarea.c:203:
+               align_range->next = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: mm/bigphysarea.c:203:
+               align_range->next = range;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: mm/bigphysarea.c:204:
+               *range_ptr = align_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: mm/bigphysarea.c:204:
+               *range_ptr = align_range;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: mm/bigphysarea.c:205:
+               range_ptr = &align_range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: mm/bigphysarea.c:205:
+               range_ptr = &align_range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: mm/bigphysarea.c:206:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: mm/bigphysarea.c:207:
+       if (new_range != NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: mm/bigphysarea.c:208:
+               /*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: mm/bigphysarea.c:208:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: mm/bigphysarea.c:209:
+                * Range is larger than needed, create a new list element for$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: mm/bigphysarea.c:209:
+                * Range is larger than needed, create a new list element for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: mm/bigphysarea.c:210:
+                * the used list and shrink the element in the free list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: mm/bigphysarea.c:210:
+                * the used list and shrink the element in the free list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: mm/bigphysarea.c:211:
+                */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: mm/bigphysarea.c:211:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: mm/bigphysarea.c:212:
+               new_range->base        = range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: mm/bigphysarea.c:212:
+               new_range->base        = range->base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: mm/bigphysarea.c:213:
+               new_range->size        = count * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: mm/bigphysarea.c:213:
+               new_range->size        = count * PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: mm/bigphysarea.c:214:
+               range->base = new_range->base + new_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: mm/bigphysarea.c:214:
+               range->base = new_range->base + new_range->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: mm/bigphysarea.c:215:
+               range->size = range->size - new_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: mm/bigphysarea.c:215:
+               range->size = range->size - new_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: mm/bigphysarea.c:216:
+       } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: mm/bigphysarea.c:217:
+               /*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: mm/bigphysarea.c:217:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: mm/bigphysarea.c:218:
+                * Range fits perfectly, remove it from free list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: mm/bigphysarea.c:218:
+                * Range fits perfectly, remove it from free list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: mm/bigphysarea.c:219:
+                */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: mm/bigphysarea.c:219:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: mm/bigphysarea.c:220:
+               *range_ptr = range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: mm/bigphysarea.c:220:
+               *range_ptr = range->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: mm/bigphysarea.c:221:
+               new_range = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: mm/bigphysarea.c:221:
+               new_range = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: mm/bigphysarea.c:222:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: mm/bigphysarea.c:223:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: mm/bigphysarea.c:224:
+        * Insert block into used list$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: mm/bigphysarea.c:224:
+        * Insert block into used list$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: mm/bigphysarea.c:225:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: mm/bigphysarea.c:225:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: mm/bigphysarea.c:226:
+       new_range->next = used_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: mm/bigphysarea.c:227:
+       used_list = new_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: mm/bigphysarea.c:229:
+       return new_range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: mm/bigphysarea.c:234:
+ * Free pages allocated with `bigphysarea_alloc_pages'. `base' must be an$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: mm/bigphysarea.c:235:
+ * address returned by `bigphysarea_alloc_pages'.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: mm/bigphysarea.c:236:
+ * This function my not be called from an interrupt!$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: mm/bigphysarea.c:237:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: mm/bigphysarea.c:240:
+       range_t *prev, *next, *range, **range_ptr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: mm/bigphysarea.c:241:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: mm/bigphysarea.c:241:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: mm/bigphysarea.c:242:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: mm/bigphysarea.c:243:
+        * Search the block in the used list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: mm/bigphysarea.c:243:
+        * Search the block in the used list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: mm/bigphysarea.c:244:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: mm/bigphysarea.c:244:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: mm/bigphysarea.c:245:
+       for (range_ptr = &used_list;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: mm/bigphysarea.c:246:
+            *range_ptr != NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: mm/bigphysarea.c:246:
+            *range_ptr != NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: mm/bigphysarea.c:247:
+            range_ptr = &(*range_ptr)->next)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: mm/bigphysarea.c:247:
+            range_ptr = &(*range_ptr)->next)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: mm/bigphysarea.c:248:
+               if ((*range_ptr)->base == base)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: mm/bigphysarea.c:248:
+               if ((*range_ptr)->base == base)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: mm/bigphysarea.c:249:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: mm/bigphysarea.c:249:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: mm/bigphysarea.c:250:
+       if (*range_ptr == NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#468: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",
                                                 ^

ERROR:SPACING: space required before that '!' (ctx:VxV)
#468: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",
                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: mm/bigphysarea.c:252:
+                      (unsigned)base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: mm/bigphysarea.c:252:
+                      (unsigned)base);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: mm/bigphysarea.c:253:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: mm/bigphysarea.c:253:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: mm/bigphysarea.c:254:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: mm/bigphysarea.c:255:
+       range = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: mm/bigphysarea.c:256:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: mm/bigphysarea.c:257:
+        * Remove range from the used list:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: mm/bigphysarea.c:257:
+        * Remove range from the used list:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: mm/bigphysarea.c:258:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: mm/bigphysarea.c:258:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: mm/bigphysarea.c:259:
+       *range_ptr = (*range_ptr)->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: mm/bigphysarea.c:260:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: mm/bigphysarea.c:261:
+        * The free-list is sorted by address, search insertion point$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: mm/bigphysarea.c:261:
+        * The free-list is sorted by address, search insertion point$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: mm/bigphysarea.c:262:
+        * and insert block in free list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: mm/bigphysarea.c:262:
+        * and insert block in free list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: mm/bigphysarea.c:263:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: mm/bigphysarea.c:263:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: mm/bigphysarea.c:264:
+       for (range_ptr = &free_list, prev = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: mm/bigphysarea.c:265:
+            *range_ptr != NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: mm/bigphysarea.c:265:
+            *range_ptr != NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: mm/bigphysarea.c:266:
+            prev = *range_ptr, range_ptr = &(*range_ptr)->next)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: mm/bigphysarea.c:266:
+            prev = *range_ptr, range_ptr = &(*range_ptr)->next)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: mm/bigphysarea.c:267:
+               if ((*range_ptr)->base >= base)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: mm/bigphysarea.c:267:
+               if ((*range_ptr)->base >= base)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: mm/bigphysarea.c:268:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: mm/bigphysarea.c:268:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: mm/bigphysarea.c:269:
+       range->next  = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: mm/bigphysarea.c:270:
+       *range_ptr   = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: mm/bigphysarea.c:271:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: mm/bigphysarea.c:272:
+        * Concatenate free range with neighbors, if possible.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: mm/bigphysarea.c:272:
+        * Concatenate free range with neighbors, if possible.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: mm/bigphysarea.c:273:
+        * Try for upper neighbor (next in list) first, then$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: mm/bigphysarea.c:273:
+        * Try for upper neighbor (next in list) first, then$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: mm/bigphysarea.c:274:
+        * for lower neighbor (predecessor in list).$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: mm/bigphysarea.c:274:
+        * for lower neighbor (predecessor in list).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: mm/bigphysarea.c:275:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: mm/bigphysarea.c:275:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: mm/bigphysarea.c:276:
+       if (range->next != NULL &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: mm/bigphysarea.c:277:
+           range->base + range->size == range->next->base) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: mm/bigphysarea.c:277:
+           range->base + range->size == range->next->base) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: mm/bigphysarea.c:278:
+               next = range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: mm/bigphysarea.c:278:
+               next = range->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: mm/bigphysarea.c:279:
+               range->size += range->next->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: mm/bigphysarea.c:279:
+               range->size += range->next->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: mm/bigphysarea.c:280:
+               range->next = next->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: mm/bigphysarea.c:280:
+               range->next = next->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: mm/bigphysarea.c:281:
+               kfree(next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: mm/bigphysarea.c:281:
+               kfree(next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: mm/bigphysarea.c:282:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: mm/bigphysarea.c:283:
+       if (prev != NULL &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: mm/bigphysarea.c:284:
+           prev->base + prev->size == range->base) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: mm/bigphysarea.c:284:
+           prev->base + prev->size == range->base) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: mm/bigphysarea.c:285:
+               prev->size += prev->next->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: mm/bigphysarea.c:285:
+               prev->size += prev->next->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: mm/bigphysarea.c:286:
+               prev->next = range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: mm/bigphysarea.c:286:
+               prev->next = range->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: mm/bigphysarea.c:287:
+               kfree(range);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: mm/bigphysarea.c:287:
+               kfree(range);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: mm/bigphysarea.c:288:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: mm/bigphysarea.c:294:
+       int pages = (size + PAGE_SIZE - 1) / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: mm/bigphysarea.c:296:
+       return bigphysarea_alloc_pages(pages, 1, GFP_KERNEL);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#517: FILE: mm/bigphysarea.c:300:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: mm/bigphysarea.c:303:
+       (void)size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: mm/bigphysarea.c:304:
+       bigphysarea_free_pages(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: mm/bigphysarea.c:311:
+       char    *p = buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: mm/bigphysarea.c:312:
+       range_t *ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: mm/bigphysarea.c:313:
+       int     free_count, free_total, free_max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: mm/bigphysarea.c:314:
+       int     used_count, used_total, used_max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: mm/bigphysarea.c:316:
+       if (init_level == 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: mm/bigphysarea.c:317:
+         init2(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: mm/bigphysarea.c:317:
+         init2(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: mm/bigphysarea.c:319:
+       free_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: mm/bigphysarea.c:320:
+       free_total = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: mm/bigphysarea.c:321:
+       free_max   = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: mm/bigphysarea.c:322:
+       for (ptr = free_list; ptr != NULL; ptr = ptr->next) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: mm/bigphysarea.c:323:
+               free_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: mm/bigphysarea.c:323:
+               free_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: mm/bigphysarea.c:324:
+               free_total += ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: mm/bigphysarea.c:324:
+               free_total += ptr->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: mm/bigphysarea.c:325:
+               if (ptr->size > free_max)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: mm/bigphysarea.c:325:
+               if (ptr->size > free_max)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: mm/bigphysarea.c:326:
+                       free_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: mm/bigphysarea.c:326:
+                       free_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: mm/bigphysarea.c:327:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: mm/bigphysarea.c:329:
+       used_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: mm/bigphysarea.c:330:
+       used_total = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: mm/bigphysarea.c:331:
+       used_max   = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: mm/bigphysarea.c:332:
+       for (ptr = used_list; ptr != NULL; ptr = ptr->next) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: mm/bigphysarea.c:333:
+               used_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: mm/bigphysarea.c:333:
+               used_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: mm/bigphysarea.c:334:
+               used_total += ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: mm/bigphysarea.c:334:
+               used_total += ptr->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: mm/bigphysarea.c:335:
+               if (ptr->size > used_max)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: mm/bigphysarea.c:335:
+               if (ptr->size > used_max)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: mm/bigphysarea.c:336:
+                       used_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: mm/bigphysarea.c:336:
+                       used_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: mm/bigphysarea.c:337:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: mm/bigphysarea.c:339:
+       if (bigphysarea_pages == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");$

ERROR:SPACING: space required before that '!' (ctx:VxV)
#557: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");
                                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <No>
#557: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: mm/bigphysarea.c:341:
+               return  p - buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: mm/bigphysarea.c:341:
+               return  p - buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: mm/bigphysarea.c:342:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: mm/bigphysarea.c:343:
+         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: mm/bigphysarea.c:343:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: mm/bigphysarea.c:343:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: mm/bigphysarea.c:344:
+       p += sprintf(p, "Big physical area, size %ld kB\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#561: FILE: mm/bigphysarea.c:344:
+       p += sprintf(p, "Big physical area, size %ld kB\n",
                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Big>
#561: FILE: mm/bigphysarea.c:344:
+       p += sprintf(p, "Big physical area, size %ld kB\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: mm/bigphysarea.c:345:
+                    bigphysarea_pages * PAGE_SIZE / 1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: mm/bigphysarea.c:345:
+                    bigphysarea_pages * PAGE_SIZE / 1024);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: mm/bigphysarea.c:346:
+       p += sprintf(p, "                       free list:            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: mm/bigphysarea.c:346:
+       p += sprintf(p, "                       free list:            $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#563: FILE: mm/bigphysarea.c:346:
+       p += sprintf(p, "                       free list:            
                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: mm/bigphysarea.c:347:
+       p += sprintf(p, "number of blocks:      %8d               %8d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: mm/bigphysarea.c:348:
+                    free_count, used_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: mm/bigphysarea.c:348:
+                    free_count, used_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: mm/bigphysarea.c:349:
+       p += sprintf(p, "size of largest block: %8d kB            %8d kB\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: mm/bigphysarea.c:350:
+                    free_max / 1024, used_max / 1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: mm/bigphysarea.c:350:
+                    free_max / 1024, used_max / 1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: mm/bigphysarea.c:351:
+       p += sprintf(p, "total:                 %8d kB            %8d kB\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: mm/bigphysarea.c:352:
+                    free_total / 1024, used_total /1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: mm/bigphysarea.c:352:
+                    free_total / 1024, used_total /1024);$

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#570: FILE: mm/bigphysarea.c:352:
+                    free_total / 1024, used_total /1024);
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: mm/bigphysarea.c:354:
+       return  p - buf;$

WARNING:TYPO_SPELLING: 'garantee' may be misspelled - perhaps 'guarantee'?
#592: FILE: Documentation/bigphysarea.txt:8:
+is unable to garantee allocs of this order during a prolonged
              ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: Documentation/bigphysarea.txt:49:
+with 'base' set to the value returned by 'bigphysarea_alloc_pages'. $

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#642: FILE: Documentation/bigphysarea.txt:58:
+The first function allocates 'size' bytes physically continous
                                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#654: FILE: Makefile:7:
+EXTRAVERSION += -bigphys
 ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: Makefile:8:
+ $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#665: FILE: arch/i386/Kconfig:840:
+config BIGPHYS_AREA
+       bool "Big Physical Area"
+        ---help---
+          Enables kernel support for reserving large areas of physical
+          memory at boot-time for use by certain device drivers (such as
+          video framegrabbers, etc.) which require it. To use this
+          feature, boot the kernel with the boot-time option
+          'bigphysarea=nnn' where 'nnn' is the number of pages (a page
+          is usually 4K) to reserve.
+
+          See <file:Documentation/bigphysarea.txt> for more information.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#700: FILE: include/linux/bigphysarea.h:1:
+/* linux/mm/bigphysarea.h, M. Welsh (mdw@cs.cornell.edu)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#725: FILE: include/linux/bigphysarea.h:26:
+extern caddr_t bigphysarea_alloc(int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#726: FILE: include/linux/bigphysarea.h:27:
+extern void    bigphysarea_free(caddr_t addr, int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#729: FILE: include/linux/bigphysarea.h:30:
+extern caddr_t bigphysarea_alloc_pages(int count, int align, int priority);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#730: FILE: include/linux/bigphysarea.h:31:
+extern void    bigphysarea_free_pages(caddr_t base);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#747: FILE: mm/bigphysarea.c:1:
+/* linux/mm/bigphysarea.c, M. Welsh (mdw@cs.cornell.edu)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#747: FILE: mm/bigphysarea.c:1:
+/* linux/mm/bigphysarea.c, M. Welsh (mdw@cs.cornell.edu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: mm/bigphysarea.c:11:
+ * This is a set of routines which allow you to reserve a large (?) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#759: FILE: mm/bigphysarea.c:13:
+ * by drivers. This memory is intended to be used for devices such as $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: mm/bigphysarea.c:22:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#775: FILE: mm/bigphysarea.c:29:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#776: FILE: mm/bigphysarea.c:30:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#793: FILE: mm/bigphysarea.c:47:
+static int get_info(char* buf, char**, off_t, int);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#795: FILE: mm/bigphysarea.c:49:
+typedef struct range_struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: mm/bigphysarea.c:50:
+       struct range_struct *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: mm/bigphysarea.c:51:
+       caddr_t base;                   /* base of allocated block */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: mm/bigphysarea.c:52:
+       size_t  size;                   /* size in bytes */$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#806: FILE: mm/bigphysarea.c:60:
+static int     init_level = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#807: FILE: mm/bigphysarea.c:61:
+static int     bigphysarea_pages = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#808: FILE: mm/bigphysarea.c:62:
+static caddr_t bigphysarea = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#809: FILE: mm/bigphysarea.c:63:
+static range_t *free_list = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#810: FILE: mm/bigphysarea.c:64:
+static range_t *used_list = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: mm/bigphysarea.c:70:
+       if (bigphysarea_pages == 0 || bigphysarea == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#817: FILE: mm/bigphysarea.c:70:
+       if (bigphysarea_pages == 0 || bigphysarea == 0)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: mm/bigphysarea.c:71:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: mm/bigphysarea.c:71:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 0)
#821: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
[...]
long)bigphysarea>>PAGE_SHIFT,bigphysarea_pages<<PAGE_SHIFT);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#821: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#821: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#821: FILE: mm/bigphysarea.c:74:
+       if (!create_proc_info_entry("bigphysarea",0444,NULL,get_info)) {
                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: mm/bigphysarea.c:75:
+               // ohoh, no way to free the allocated memory!$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: mm/bigphysarea.c:76:
+               // continue without proc support, it not fatal in itself$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: mm/bigphysarea.c:80:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: mm/bigphysarea.c:82:
+       init_level = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: mm/bigphysarea.c:84:
+       printk(KERN_INFO "bigphysarea: Allocated %d pages at 0x%p.\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#832: FILE: mm/bigphysarea.c:84:
+       printk(KERN_INFO "bigphysarea: Allocated %d pages at 0x%p.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: mm/bigphysarea.c:85:
+              bigphysarea_pages, bigphysarea);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: mm/bigphysarea.c:85:
+              bigphysarea_pages, bigphysarea);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: mm/bigphysarea.c:87:
+       return 0;$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#838: FILE: mm/bigphysarea.c:90:
+__initcall(bigphysarea_init);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: mm/bigphysarea.c:102:
+       int par;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#851: FILE: mm/bigphysarea.c:103:
+       int par;
+       if (get_option(&str,&par)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#851: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {
+               bigphysarea_pages = par;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#851: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {
                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#851: FILE: mm/bigphysarea.c:103:
+       if (get_option(&str,&par)) {
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: mm/bigphysarea.c:104:
+               bigphysarea_pages = par;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: mm/bigphysarea.c:104:
+               bigphysarea_pages = par;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: mm/bigphysarea.c:105:
+               // Alloc the memory$

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: mm/bigphysarea.c:106:
+               bigphysarea =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: mm/bigphysarea.c:106:
+               bigphysarea =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: mm/bigphysarea.c:107:
+               if (!bigphysarea) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: mm/bigphysarea.c:107:
+               if (!bigphysarea) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#856: FILE: mm/bigphysarea.c:107:
+               if (!bigphysarea) {
+                       printk(KERN_CRIT "bigphysarea: not enough

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: mm/bigphysarea.c:108:
+                       printk(KERN_CRIT "bigphysarea: not enough$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: mm/bigphysarea.c:108:
+                       printk(KERN_CRIT "bigphysarea: not enough$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#857: FILE: mm/bigphysarea.c:108:
+                       printk(KERN_CRIT "bigphysarea: not enough

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: mm/bigphysarea.c:109:
+                       return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: mm/bigphysarea.c:109:
+                       return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: mm/bigphysarea.c:110:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: mm/bigphysarea.c:110:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#862: FILE: mm/bigphysarea.c:112:
+               // register the resource for it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: mm/bigphysarea.c:112:
+               // register the resource for it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: mm/bigphysarea.c:113:
+               mem_resource.start = bigphysarea;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: mm/bigphysarea.c:113:
+               mem_resource.start = bigphysarea;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#864: FILE: mm/bigphysarea.c:114:
+               mem_resource.end = mem_resource.start +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: mm/bigphysarea.c:114:
+               mem_resource.end = mem_resource.start +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#866: FILE: mm/bigphysarea.c:115:
+               request_resource(&iomem_resource, &mem_resource);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: mm/bigphysarea.c:115:
+               request_resource(&iomem_resource, &mem_resource);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: mm/bigphysarea.c:116:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: mm/bigphysarea.c:117:
+       return 1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#871: FILE: mm/bigphysarea.c:120:
+__setup("bigphysarea=", bigphysarea_setup);
                     ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#871: FILE: mm/bigphysarea.c:120:
+__setup("bigphysarea=", bigphysarea_setup);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: mm/bigphysarea.c:123:
+ * When we have pages but don't have a freelist, put all pages in$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: mm/bigphysarea.c:124:
+ * one free list entry. Return 0 on success, 1 on error.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: mm/bigphysarea.c:125:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: mm/bigphysarea.c:129:
+       if (init_level == 1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: mm/bigphysarea.c:130:
+               free_list = kmalloc(sizeof(range_t), priority);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: mm/bigphysarea.c:130:
+               free_list = kmalloc(sizeof(range_t), priority);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#882: FILE: mm/bigphysarea.c:131:
+               if (free_list != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: mm/bigphysarea.c:131:
+               if (free_list != NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#883: FILE: mm/bigphysarea.c:132:
+                       free_list->next = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: mm/bigphysarea.c:132:
+                       free_list->next = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#884: FILE: mm/bigphysarea.c:133:
+                       free_list->base = bigphysarea;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: mm/bigphysarea.c:133:
+                       free_list->base = bigphysarea;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#885: FILE: mm/bigphysarea.c:134:
+                       free_list->size = bigphysarea_pages * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: mm/bigphysarea.c:134:
+                       free_list->size = bigphysarea_pages * PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: mm/bigphysarea.c:135:
+                       init_level = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: mm/bigphysarea.c:135:
+                       init_level = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: mm/bigphysarea.c:136:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: mm/bigphysarea.c:136:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: mm/bigphysarea.c:137:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: mm/bigphysarea.c:137:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: mm/bigphysarea.c:138:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: mm/bigphysarea.c:139:
+       return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#893: FILE: mm/bigphysarea.c:142:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: mm/bigphysarea.c:144:
+ * Allocate `count' pages from the big physical area. Pages are aligned to$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: mm/bigphysarea.c:145:
+ * a multiple of `align'. `priority' has the same meaning in kmalloc, it$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: mm/bigphysarea.c:146:
+ * is needed for management information.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: mm/bigphysarea.c:147:
+ * This function may not be called from an interrupt!$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: mm/bigphysarea.c:148:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: mm/bigphysarea.c:151:
+       range_t *range, **range_ptr, *new_range, *align_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: mm/bigphysarea.c:152:
+       caddr_t aligned_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: mm/bigphysarea.c:154:
+       if (init_level < 2)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: mm/bigphysarea.c:155:
+               if (init2(priority))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: mm/bigphysarea.c:155:
+               if (init2(priority))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: mm/bigphysarea.c:156:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: mm/bigphysarea.c:156:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: mm/bigphysarea.c:157:
+       new_range   = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#909: FILE: mm/bigphysarea.c:158:
+       align_range = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: mm/bigphysarea.c:160:
+       if (align == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#912: FILE: mm/bigphysarea.c:161:
+               align = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: mm/bigphysarea.c:161:
+               align = PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: mm/bigphysarea.c:162:
+       else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: mm/bigphysarea.c:163:
+               align = align * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: mm/bigphysarea.c:163:
+               align = align * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: mm/bigphysarea.c:164:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#916: FILE: mm/bigphysarea.c:165:
+        * Search a free block which is large enough, even with alignment.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: mm/bigphysarea.c:165:
+        * Search a free block which is large enough, even with alignment.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: mm/bigphysarea.c:166:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: mm/bigphysarea.c:166:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: mm/bigphysarea.c:167:
+       range_ptr = &free_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: mm/bigphysarea.c:168:
+       while (*range_ptr != NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: mm/bigphysarea.c:169:
+               range = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: mm/bigphysarea.c:169:
+               range = *range_ptr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: mm/bigphysarea.c:170:
+               aligned_base =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: mm/bigphysarea.c:170:
+               aligned_base =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: mm/bigphysarea.c:171:
+                 (caddr_t)((((unsigned long)range->base + align - 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: mm/bigphysarea.c:171:
+                 (caddr_t)((((unsigned long)range->base + align - 1)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: mm/bigphysarea.c:172:
+               if (aligned_base + count * PAGE_SIZE <= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: mm/bigphysarea.c:172:
+               if (aligned_base + count * PAGE_SIZE <= $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: mm/bigphysarea.c:172:
+               if (aligned_base + count * PAGE_SIZE <= $

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: mm/bigphysarea.c:173:
+                   range->base + range->size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: mm/bigphysarea.c:173:
+                   range->base + range->size)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: mm/bigphysarea.c:174:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: mm/bigphysarea.c:174:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: mm/bigphysarea.c:175:
+            range_ptr = &range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: mm/bigphysarea.c:175:
+            range_ptr = &range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: mm/bigphysarea.c:176:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: mm/bigphysarea.c:177:
+       if (*range_ptr == NULL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: mm/bigphysarea.c:178:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: mm/bigphysarea.c:178:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: mm/bigphysarea.c:179:
+       range = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: mm/bigphysarea.c:180:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: mm/bigphysarea.c:181:
+        * When we have to align, the pages needed for alignment can$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: mm/bigphysarea.c:181:
+        * When we have to align, the pages needed for alignment can$

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: mm/bigphysarea.c:182:
+        * be put back to the free pool.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: mm/bigphysarea.c:182:
+        * be put back to the free pool.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: mm/bigphysarea.c:183:
+        * We check here if we need a second range data structure later$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: mm/bigphysarea.c:183:
+        * We check here if we need a second range data structure later$

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: mm/bigphysarea.c:184:
+        * and allocate it now, so that we don't have to check for a$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: mm/bigphysarea.c:184:
+        * and allocate it now, so that we don't have to check for a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: mm/bigphysarea.c:185:
+        * failed kmalloc later.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: mm/bigphysarea.c:185:
+        * failed kmalloc later.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: mm/bigphysarea.c:186:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: mm/bigphysarea.c:186:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: mm/bigphysarea.c:187:
+       if (aligned_base - range->base + count * PAGE_SIZE < range->size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: mm/bigphysarea.c:188:
+               new_range = kmalloc(sizeof(range_t), priority);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: mm/bigphysarea.c:188:
+               new_range = kmalloc(sizeof(range_t), priority);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: mm/bigphysarea.c:189:
+               if (new_range == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: mm/bigphysarea.c:189:
+               if (new_range == NULL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: mm/bigphysarea.c:190:
+                       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: mm/bigphysarea.c:190:
+                       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: mm/bigphysarea.c:191:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: mm/bigphysarea.c:192:
+       if (aligned_base != range->base) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: mm/bigphysarea.c:193:
+               align_range = kmalloc(sizeof(range_t), priority);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: mm/bigphysarea.c:193:
+               align_range = kmalloc(sizeof(range_t), priority);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: mm/bigphysarea.c:194:
+               if (align_range == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: mm/bigphysarea.c:194:
+               if (align_range == NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: mm/bigphysarea.c:195:
+                       if (new_range != NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: mm/bigphysarea.c:195:
+                       if (new_range != NULL)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: mm/bigphysarea.c:196:
+                               kfree(new_range);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: mm/bigphysarea.c:196:
+                               kfree(new_range);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: mm/bigphysarea.c:197:
+                       return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: mm/bigphysarea.c:197:
+                       return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: mm/bigphysarea.c:198:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: mm/bigphysarea.c:198:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: mm/bigphysarea.c:199:
+               align_range->base = range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: mm/bigphysarea.c:199:
+               align_range->base = range->base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: mm/bigphysarea.c:200:
+               align_range->size = aligned_base - range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: mm/bigphysarea.c:200:
+               align_range->size = aligned_base - range->base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#953: FILE: mm/bigphysarea.c:201:
+               range->base = aligned_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: mm/bigphysarea.c:201:
+               range->base = aligned_base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: mm/bigphysarea.c:202:
+               range->size -= align_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: mm/bigphysarea.c:202:
+               range->size -= align_range->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: mm/bigphysarea.c:203:
+               align_range->next = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: mm/bigphysarea.c:203:
+               align_range->next = range;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#956: FILE: mm/bigphysarea.c:204:
+               *range_ptr = align_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: mm/bigphysarea.c:204:
+               *range_ptr = align_range;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: mm/bigphysarea.c:205:
+               range_ptr = &align_range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: mm/bigphysarea.c:205:
+               range_ptr = &align_range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: mm/bigphysarea.c:206:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: mm/bigphysarea.c:207:
+       if (new_range != NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: mm/bigphysarea.c:208:
+               /*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: mm/bigphysarea.c:208:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: mm/bigphysarea.c:209:
+                * Range is larger than needed, create a new list element for$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: mm/bigphysarea.c:209:
+                * Range is larger than needed, create a new list element for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: mm/bigphysarea.c:210:
+                * the used list and shrink the element in the free list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: mm/bigphysarea.c:210:
+                * the used list and shrink the element in the free list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: mm/bigphysarea.c:211:
+                */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: mm/bigphysarea.c:211:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: mm/bigphysarea.c:212:
+               new_range->base        = range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: mm/bigphysarea.c:212:
+               new_range->base        = range->base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: mm/bigphysarea.c:213:
+               new_range->size        = count * PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: mm/bigphysarea.c:213:
+               new_range->size        = count * PAGE_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: mm/bigphysarea.c:214:
+               range->base = new_range->base + new_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: mm/bigphysarea.c:214:
+               range->base = new_range->base + new_range->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: mm/bigphysarea.c:215:
+               range->size = range->size - new_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#967: FILE: mm/bigphysarea.c:215:
+               range->size = range->size - new_range->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: mm/bigphysarea.c:216:
+       } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: mm/bigphysarea.c:217:
+               /*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: mm/bigphysarea.c:217:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: mm/bigphysarea.c:218:
+                * Range fits perfectly, remove it from free list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: mm/bigphysarea.c:218:
+                * Range fits perfectly, remove it from free list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: mm/bigphysarea.c:219:
+                */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: mm/bigphysarea.c:219:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: mm/bigphysarea.c:220:
+               *range_ptr = range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: mm/bigphysarea.c:220:
+               *range_ptr = range->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#973: FILE: mm/bigphysarea.c:221:
+               new_range = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#973: FILE: mm/bigphysarea.c:221:
+               new_range = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: mm/bigphysarea.c:222:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: mm/bigphysarea.c:223:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#976: FILE: mm/bigphysarea.c:224:
+        * Insert block into used list$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: mm/bigphysarea.c:224:
+        * Insert block into used list$

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: mm/bigphysarea.c:225:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: mm/bigphysarea.c:225:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: mm/bigphysarea.c:226:
+       new_range->next = used_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: mm/bigphysarea.c:227:
+       used_list = new_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: mm/bigphysarea.c:229:
+       return new_range->base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: mm/bigphysarea.c:234:
+ * Free pages allocated with `bigphysarea_alloc_pages'. `base' must be an$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: mm/bigphysarea.c:235:
+ * address returned by `bigphysarea_alloc_pages'.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: mm/bigphysarea.c:236:
+ * This function my not be called from an interrupt!$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: mm/bigphysarea.c:237:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: mm/bigphysarea.c:240:
+       range_t *prev, *next, *range, **range_ptr;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: mm/bigphysarea.c:241:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: mm/bigphysarea.c:241:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: mm/bigphysarea.c:242:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: mm/bigphysarea.c:243:
+        * Search the block in the used list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: mm/bigphysarea.c:243:
+        * Search the block in the used list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: mm/bigphysarea.c:244:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: mm/bigphysarea.c:244:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: mm/bigphysarea.c:245:
+       for (range_ptr = &used_list;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: mm/bigphysarea.c:246:
+            *range_ptr != NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: mm/bigphysarea.c:246:
+            *range_ptr != NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: mm/bigphysarea.c:247:
+            range_ptr = &(*range_ptr)->next)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: mm/bigphysarea.c:247:
+            range_ptr = &(*range_ptr)->next)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: mm/bigphysarea.c:248:
+               if ((*range_ptr)->base == base)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: mm/bigphysarea.c:248:
+               if ((*range_ptr)->base == base)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: mm/bigphysarea.c:249:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: mm/bigphysarea.c:249:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: mm/bigphysarea.c:250:
+       if (*range_ptr == NULL) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1003: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1003: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",
                                                 ^

ERROR:SPACING: space required before that '!' (ctx:VxV)
#1003: FILE: mm/bigphysarea.c:251:
+               printk("bigphysarea_free_pages(0x%08x), not allocated!\n",
                                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1004: FILE: mm/bigphysarea.c:252:
+                      (unsigned)base);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1004: FILE: mm/bigphysarea.c:252:
+                      (unsigned)base);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: mm/bigphysarea.c:253:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: mm/bigphysarea.c:253:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: mm/bigphysarea.c:254:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: mm/bigphysarea.c:255:
+       range = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: mm/bigphysarea.c:256:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: mm/bigphysarea.c:257:
+        * Remove range from the used list:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: mm/bigphysarea.c:257:
+        * Remove range from the used list:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1010: FILE: mm/bigphysarea.c:258:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: mm/bigphysarea.c:258:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: mm/bigphysarea.c:259:
+       *range_ptr = (*range_ptr)->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: mm/bigphysarea.c:260:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1013: FILE: mm/bigphysarea.c:261:
+        * The free-list is sorted by address, search insertion point$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: mm/bigphysarea.c:261:
+        * The free-list is sorted by address, search insertion point$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1014: FILE: mm/bigphysarea.c:262:
+        * and insert block in free list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: mm/bigphysarea.c:262:
+        * and insert block in free list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: mm/bigphysarea.c:263:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: mm/bigphysarea.c:263:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: mm/bigphysarea.c:264:
+       for (range_ptr = &free_list, prev = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1017: FILE: mm/bigphysarea.c:265:
+            *range_ptr != NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1017: FILE: mm/bigphysarea.c:265:
+            *range_ptr != NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: mm/bigphysarea.c:266:
+            prev = *range_ptr, range_ptr = &(*range_ptr)->next)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: mm/bigphysarea.c:266:
+            prev = *range_ptr, range_ptr = &(*range_ptr)->next)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1019: FILE: mm/bigphysarea.c:267:
+               if ((*range_ptr)->base >= base)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1019: FILE: mm/bigphysarea.c:267:
+               if ((*range_ptr)->base >= base)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: mm/bigphysarea.c:268:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: mm/bigphysarea.c:268:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: mm/bigphysarea.c:269:
+       range->next  = *range_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1022: FILE: mm/bigphysarea.c:270:
+       *range_ptr   = range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: mm/bigphysarea.c:271:
+       /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: mm/bigphysarea.c:272:
+        * Concatenate free range with neighbors, if possible.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: mm/bigphysarea.c:272:
+        * Concatenate free range with neighbors, if possible.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: mm/bigphysarea.c:273:
+        * Try for upper neighbor (next in list) first, then$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: mm/bigphysarea.c:273:
+        * Try for upper neighbor (next in list) first, then$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: mm/bigphysarea.c:274:
+        * for lower neighbor (predecessor in list).$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: mm/bigphysarea.c:274:
+        * for lower neighbor (predecessor in list).$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1027: FILE: mm/bigphysarea.c:275:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: mm/bigphysarea.c:275:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: mm/bigphysarea.c:276:
+       if (range->next != NULL &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1029: FILE: mm/bigphysarea.c:277:
+           range->base + range->size == range->next->base) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: mm/bigphysarea.c:277:
+           range->base + range->size == range->next->base) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1030: FILE: mm/bigphysarea.c:278:
+               next = range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: mm/bigphysarea.c:278:
+               next = range->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1031: FILE: mm/bigphysarea.c:279:
+               range->size += range->next->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: mm/bigphysarea.c:279:
+               range->size += range->next->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: mm/bigphysarea.c:280:
+               range->next = next->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: mm/bigphysarea.c:280:
+               range->next = next->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1033: FILE: mm/bigphysarea.c:281:
+               kfree(next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: mm/bigphysarea.c:281:
+               kfree(next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1034: FILE: mm/bigphysarea.c:282:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: mm/bigphysarea.c:283:
+       if (prev != NULL &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1036: FILE: mm/bigphysarea.c:284:
+           prev->base + prev->size == range->base) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: mm/bigphysarea.c:284:
+           prev->base + prev->size == range->base) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: mm/bigphysarea.c:285:
+               prev->size += prev->next->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: mm/bigphysarea.c:285:
+               prev->size += prev->next->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: mm/bigphysarea.c:286:
+               prev->next = range->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: mm/bigphysarea.c:286:
+               prev->next = range->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: mm/bigphysarea.c:287:
+               kfree(range);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: mm/bigphysarea.c:287:
+               kfree(range);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: mm/bigphysarea.c:288:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1046: FILE: mm/bigphysarea.c:294:
+       int pages = (size + PAGE_SIZE - 1) / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: mm/bigphysarea.c:296:
+       return bigphysarea_alloc_pages(pages, 1, GFP_KERNEL);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1052: FILE: mm/bigphysarea.c:300:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: mm/bigphysarea.c:303:
+       (void)size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: mm/bigphysarea.c:304:
+       bigphysarea_free_pages(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: mm/bigphysarea.c:311:
+       char    *p = buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: mm/bigphysarea.c:312:
+       range_t *ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: mm/bigphysarea.c:313:
+       int     free_count, free_total, free_max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: mm/bigphysarea.c:314:
+       int     used_count, used_total, used_max;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: mm/bigphysarea.c:316:
+       if (init_level == 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1069: FILE: mm/bigphysarea.c:317:
+         init2(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: mm/bigphysarea.c:317:
+         init2(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: mm/bigphysarea.c:319:
+       free_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: mm/bigphysarea.c:320:
+       free_total = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: mm/bigphysarea.c:321:
+       free_max   = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: mm/bigphysarea.c:322:
+       for (ptr = free_list; ptr != NULL; ptr = ptr->next) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1075: FILE: mm/bigphysarea.c:323:
+               free_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: mm/bigphysarea.c:323:
+               free_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: mm/bigphysarea.c:324:
+               free_total += ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: mm/bigphysarea.c:324:
+               free_total += ptr->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1077: FILE: mm/bigphysarea.c:325:
+               if (ptr->size > free_max)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: mm/bigphysarea.c:325:
+               if (ptr->size > free_max)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1078: FILE: mm/bigphysarea.c:326:
+                       free_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: mm/bigphysarea.c:326:
+                       free_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: mm/bigphysarea.c:327:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: mm/bigphysarea.c:329:
+       used_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1082: FILE: mm/bigphysarea.c:330:
+       used_total = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: mm/bigphysarea.c:331:
+       used_max   = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: mm/bigphysarea.c:332:
+       for (ptr = used_list; ptr != NULL; ptr = ptr->next) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1085: FILE: mm/bigphysarea.c:333:
+               used_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: mm/bigphysarea.c:333:
+               used_count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: mm/bigphysarea.c:334:
+               used_total += ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: mm/bigphysarea.c:334:
+               used_total += ptr->size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1087: FILE: mm/bigphysarea.c:335:
+               if (ptr->size > used_max)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1087: FILE: mm/bigphysarea.c:335:
+               if (ptr->size > used_max)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: mm/bigphysarea.c:336:
+                       used_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: mm/bigphysarea.c:336:
+                       used_max = ptr->size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: mm/bigphysarea.c:337:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: mm/bigphysarea.c:339:
+       if (bigphysarea_pages == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1092: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");$

ERROR:SPACING: space required before that '!' (ctx:VxV)
#1092: FILE: mm/bigphysarea.c:340:
+               p += sprintf(p, "No big physical area allocated!\n");
                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1093: FILE: mm/bigphysarea.c:341:
+               return  p - buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: mm/bigphysarea.c:341:
+               return  p - buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: mm/bigphysarea.c:342:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1095: FILE: mm/bigphysarea.c:343:
+         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1095: FILE: mm/bigphysarea.c:343:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: mm/bigphysarea.c:343:
+         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1096: FILE: mm/bigphysarea.c:344:
+       p += sprintf(p, "Big physical area, size %ld kB\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1096: FILE: mm/bigphysarea.c:344:
+       p += sprintf(p, "Big physical area, size %ld kB\n",
                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1097: FILE: mm/bigphysarea.c:345:
+                    bigphysarea_pages * PAGE_SIZE / 1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: mm/bigphysarea.c:345:
+                    bigphysarea_pages * PAGE_SIZE / 1024);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: mm/bigphysarea.c:346:
+       p += sprintf(p, "                       free list:            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1098: FILE: mm/bigphysarea.c:346:
+       p += sprintf(p, "                       free list:            $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1098: FILE: mm/bigphysarea.c:346:
+       p += sprintf(p, "                       free list:            
                                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: mm/bigphysarea.c:347:
+       p += sprintf(p, "number of blocks:      %8d               %8d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1101: FILE: mm/bigphysarea.c:348:
+                    free_count, used_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: mm/bigphysarea.c:348:
+                    free_count, used_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: mm/bigphysarea.c:349:
+       p += sprintf(p, "size of largest block: %8d kB            %8d kB\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1103: FILE: mm/bigphysarea.c:350:
+                    free_max / 1024, used_max / 1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: mm/bigphysarea.c:350:
+                    free_max / 1024, used_max / 1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: mm/bigphysarea.c:351:
+       p += sprintf(p, "total:                 %8d kB            %8d kB\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1105: FILE: mm/bigphysarea.c:352:
+                    free_total / 1024, used_total /1024);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1105: FILE: mm/bigphysarea.c:352:
+                    free_total / 1024, used_total /1024);$

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#1105: FILE: mm/bigphysarea.c:352:
+                    free_total / 1024, used_total /1024);
                                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: mm/bigphysarea.c:354:
+       return  p - buf;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 295 errors, 465 warnings, 22 checks, 988 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
