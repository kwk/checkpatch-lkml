WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#43: FILE: drivers/infiniband/hw/ipath/Kconfig:20:
+config IPATH_ETHER
+	tristate "PathScale InfiniPath ethernet driver"
+	depends on IPATH_CORE
+	---help---
+	This is an ethernet emulator layer for the PathScale InfiniPath
+	host channel adapters (HCAs).

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:44:
+#define __IPATH_DBG_WHICH(which,fmt,...) \
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#96: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:44:
+#define __IPATH_DBG_WHICH(which,fmt,...) \
                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#98: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:46:
+		if (unlikely(ipath_debug&(which))) \
 		                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#99: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:47:
+			printk(KERN_DEBUG DRV_NAME ": %s: " fmt, \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:48:
+			       __func__,##__VA_ARGS__); \
 			               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:51:
+#define ipath_eth_dbg(fmt,...) \
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:52:
+	__IPATH_DBG_WHICH(__IPATH_IPATHDBG,fmt,##__VA_ARGS__)
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:52:
+	__IPATH_DBG_WHICH(__IPATH_IPATHDBG,fmt,##__VA_ARGS__)
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:53:
+#define ipath_eth_cdbg(which,fmt,...) \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:53:
+#define ipath_eth_cdbg(which,fmt,...) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:54:
+	__IPATH_DBG_WHICH(__IPATH_##which##DBG,fmt,##__VA_ARGS__)
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:54:
+	__IPATH_DBG_WHICH(__IPATH_##which##DBG,fmt,##__VA_ARGS__)
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:55:
+#define ipath_eth_warn(fmt,...) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:56:
+	__IPATH_DBG_WHICH(__IPATH_IPATHWARN,fmt,##__VA_ARGS__)
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:56:
+	__IPATH_DBG_WHICH(__IPATH_IPATHWARN,fmt,##__VA_ARGS__)
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:57:
+#define ipath_eth_err(fmt,...) \
                          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#110: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:58:
+	__IPATH_DBG_WHICH(__IPATH_IPATHERR ,fmt,##__VA_ARGS__)
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#110: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:58:
+	__IPATH_DBG_WHICH(__IPATH_IPATHERR ,fmt,##__VA_ARGS__)
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:58:
+	__IPATH_DBG_WHICH(__IPATH_IPATHERR ,fmt,##__VA_ARGS__)
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:59:
+#define ipath_eth_table(fmt,...) \
                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#112: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:60:
+	__IPATH_DBG_WHICH(__IPATH_IPATHTABLE  ,fmt,##__VA_ARGS__)
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#112: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:60:
+	__IPATH_DBG_WHICH(__IPATH_IPATHTABLE  ,fmt,##__VA_ARGS__)
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:60:
+	__IPATH_DBG_WHICH(__IPATH_IPATHTABLE  ,fmt,##__VA_ARGS__)
 	                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:64:
+#define ipath_eth_dbg(fmt,...)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#117: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:65:
+#define ipath_eth_warn(fmt,...)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#118: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:66:
+#define ipath_eth_err(fmt,...)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#119: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:67:
+#define ipath_eth_table(fmt,...)
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mac' - possible side-effects?
#146: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:94:
+#define make_hash_key(mac) ((mac[0] + mac[1] + mac[2]) % MAX_HASH_ENTRIES)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#150: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:98:
+	spinlock_t lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#153: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:101:
+	uint16_t lid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#154: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:102:
+	uint8_t frag_num;	/* ips_message_header.unused */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#155: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:103:
+	uint8_t seq_num;	/* ips_message_header.tinylen */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#156: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:104:
+	uint32_t len;		/* ips_message_header.ack_seq_num */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#162: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:110:
+	uint16_t my_lid;	/* set in network order */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#163: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:111:
+	uint16_t my_bcast;	/* set in network order */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#164: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:112:
+	uint16_t my_mac_addr[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#175: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:123:
+	uint16_t mac[3];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#176: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:124:
+	uint16_t lid;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#198: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:146:
+static struct net_device_stats *ipath_ether_get_stats(

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#200: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:148:
+int ipath_ether_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#201: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:149:
+void ipath_ether_exit(void);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#207: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:155:
+module_param_named(fragtable_size, ipath_fragtable_size, uint, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:159:
+static int _send_lid_message(uint16_t * mac,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#211: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:159:
+static int _send_lid_message(uint16_t * mac,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#212: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:160:
+			     uint8_t cmd,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#213: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:161:
+			     uint16_t dest_lid, struct net_device *dev)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#216: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:164:
+	uint32_t total_frame_size_in_words = sizeof(protocol_header) >> 2;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:181:
+	 * masking needed; offset in low INFINIPATH_I_OFFSET_MASK  bits */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#244: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:192:
+		(uint16_t) IPS_LRH_BTH +

CHECK:SPACING: No space is necessary after a cast
#245: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:193:
+		(uint16_t) (total_frame_size_in_words + SIZE_OF_CRC) -

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:194:
+		(uint16_t) ((protocol_header.iph.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'protocol_header.iph.ver_port_tid_offset'
#247: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:195:
+		(uint16_t) ((protocol_header.iph.
+			     ver_port_tid_offset >> 16) & 0xFFFF) -

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:SPACING: No space is necessary after a cast
#248: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:196:
+		(uint16_t) (protocol_header.iph.ver_port_tid_offset &

CHECK:SPACING: No space is necessary after a cast
#250: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:198:
+		(uint16_t) protocol_header.iph.pkt_flags;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:218:
+static int _add_mac_lid(uint16_t * mac, uint16_t lid)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#270: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:218:
+static int _add_mac_lid(uint16_t * mac, uint16_t lid)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#272: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:220:
+	uint16_t hashkey = make_hash_key(mac);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hash_entry->mac[0] == mac[0]'
#290: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:238:
+		if ((hash_entry->mac[0] == mac[0]) &&
+		    (hash_entry->mac[1] == mac[1]) &&
+		    (hash_entry->mac[2] == mac[2])
+			) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hash_entry->mac[1] == mac[1]'
#290: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:238:
+		if ((hash_entry->mac[0] == mac[0]) &&
+		    (hash_entry->mac[1] == mac[1]) &&
+		    (hash_entry->mac[2] == mac[2])
+			) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hash_entry->mac[2] == mac[2]'
#290: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:238:
+		if ((hash_entry->mac[0] == mac[0]) &&
+		    (hash_entry->mac[1] == mac[1]) &&
+		    (hash_entry->mac[2] == mac[2])
+			) {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#304: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:252:
+		index = kmalloc(HASH_ALLOC_ENTRIES *
+				sizeof(struct ether_hash), GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#354: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:302:
+static uint16_t _lookup_lid(uint16_t * mac, struct net_device *dev)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#354: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:302:
+static uint16_t _lookup_lid(uint16_t * mac, struct net_device *dev)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#356: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:304:
+	uint16_t hashkey = make_hash_key(mac);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hash_entry->mac[0] == mac[0]'
#360: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:308:
+		if ((hash_entry->mac[0] == mac[0]) &&
+		    (hash_entry->mac[1] == mac[1]) &&
+		    (hash_entry->mac[2] == mac[2])
+			)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hash_entry->mac[1] == mac[1]'
#360: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:308:
+		if ((hash_entry->mac[0] == mac[0]) &&
+		    (hash_entry->mac[1] == mac[1]) &&
+		    (hash_entry->mac[2] == mac[2])
+			)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hash_entry->mac[2] == mac[2]'
#360: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:308:
+		if ((hash_entry->mac[0] == mac[0]) &&
+		    (hash_entry->mac[1] == mac[1]) &&
+		    (hash_entry->mac[2] == mac[2])
+			)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#371: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:319:
+		return hash_entry->lid;
+	} else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#385: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:333:
+	uint16_t dest_lid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#386: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:334:
+	static uint32_t jumboseq;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#389: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:337:
+	if (skb->data[0] & BROADCAST_MASK) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#410: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:358:
+		dest_lid = _lookup_lid((uint16_t *) skb->data, dev);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#422: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:370:
+		printk("Send:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#426: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:374:
+				printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#428: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:376:
+			printk("%02X ",

CHECK:SPACING: No space is necessary after a cast
#429: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:377:
+			       ((uint8_t *) skb->data)[loop_count]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#432: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:380:
+		printk("\n\n");

CHECK:SPACING: No space is necessary after a cast
#448: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:396:
+	protocol_header->first_2_bytes = *((uint16_t *) skb->data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#463: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:411:
+	 * masking needed; offset in low INFINIPATH_I_OFFSET_MASK  bits */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#503: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:451:
+			ipath_layer_set_piointbufavail_int(

CHECK:SPACING: No space is necessary after a cast
#520: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:468:
+	struct ether_header *ihdr = (struct ether_header *) hdr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->my_mac_addr[0] == ihdr->mac[0]'
#524: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:472:
+		if ((priv->my_mac_addr[0] == ihdr->mac[0]) &&
+		    (priv->my_mac_addr[1] == ihdr->mac[1]) &&
+		    (priv->my_mac_addr[2] == ihdr->mac[2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->my_mac_addr[1] == ihdr->mac[1]'
#524: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:472:
+		if ((priv->my_mac_addr[0] == ihdr->mac[0]) &&
+		    (priv->my_mac_addr[1] == ihdr->mac[1]) &&
+		    (priv->my_mac_addr[2] == ihdr->mac[2])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->my_mac_addr[2] == ihdr->mac[2]'
#524: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:472:
+		if ((priv->my_mac_addr[0] == ihdr->mac[0]) &&
+		    (priv->my_mac_addr[1] == ihdr->mac[1]) &&
+		    (priv->my_mac_addr[2] == ihdr->mac[2])) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#556: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:504:
+static inline struct ipath_frag_state *get_state(

CHECK:SPACING: No space is necessary after a cast
#577: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:525:
+	struct ether_header *ihdr = (struct ether_header *) hdr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#581: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:529:
+	uint16_t *h;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lskb"
#585: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:533:
+	if (lskb != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#589: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:537:
+		    fs->frag_num != ihdr->frag_num) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#591: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:539:
+			ipath_eth_warn("Drop %x %x, %u %u, %u %u, "
+				       "%u %u, %x\n", fs->lid,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frag_list"
#611: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:559:
+		if (skb_shinfo(lskb)->frag_list == NULL)

WARNING:INDENTED_LABEL: labels should not be indented
#619: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:567:
+	restart:

CHECK:SPACING: No space is necessary after a cast
#639: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:587:
+		h = (uint16_t *) skb_push(skb, 2);

CHECK:BRACES: braces {} should be used on all arms of this statement
#653: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:601:
+	if (fs->len == 0) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#665: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:613:
+				*((uint16_t *) (skb->data +

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#682: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:630:
+			printk("Recv:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#686: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:634:
+					printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#688: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:636:
+				printk("%02X ", skb->data[loop_count]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#691: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:639:
+			printk("\n\n");

CHECK:BRACES: Unbalanced braces around else statement
#698: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:646:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#713: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:661:
+	unsigned wakeup_needed = 0;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipath_ether_interrupt', this function's name, in a string
#716: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:664:
+	ipath_eth_cdbg(VERBOSE, "Took ipath_ether_interrupt\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#722: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:670:
+	if ((uint32_t) device > MAX_IPATH_LAYER_DEVICE ||

WARNING:SPLIT_STRING: quoted string split across lines
#725: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:673:
+		ipath_eth_warn("ipath device %u not initialized, "
+			       "ignoring interrupt\n", device);

CHECK:SPACING: No space is necessary after a cast
#761: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:709:
+			    (priv->dd, (uint8_t *) priv->my_mac_addr)) {

WARNING:SPLIT_STRING: quoted string split across lines
#763: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:711:
+				ipath_eth_warn("Fall back to default OUI, "
+					       "couldn't get MAC\n");

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#817: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:765:
+	uint32_t mtu;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipath_ether_open', this function's name, in a string
#835: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:783:
+		ipath_eth_err("ipath_ether_open timed out waiting for LID -"

WARNING:SPLIT_STRING: quoted string split across lines
#836: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:784:
+		ipath_eth_err("ipath_ether_open timed out waiting for LID -"
+			      " can't send packets\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipath_ether_open', this function's name, in a string
#845: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:793:
+		ipath_eth_err("ipath_ether_open timed out waiting for "

WARNING:SPLIT_STRING: quoted string split across lines
#846: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:794:
+		ipath_eth_err("ipath_ether_open timed out waiting for "
+			      "MLID - can't send packets\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#867: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:815:
+static struct net_device_stats *ipath_ether_get_stats(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu < 68'
#881: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:829:
+	if ((new_mtu < 68) || new_mtu > 33716 || (new_mtu & 3))

WARNING:SPLIT_STRING: quoted string split across lines
#898: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:846:
+		ipath_eth_table("Adding multicast MAC "
+				"[%02x:%02x:%02x:%02x:%02x:%02x]\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:870:
+                                    struct ethtool_cmd *ecmd)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:870:
+                                    struct ethtool_cmd *ecmd)$

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10000baseT_Full>
#924: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:872:
+	ecmd->supported = SUPPORTED_10000baseT_Full;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ADVERTISED_10000baseT_Full>
#927: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:875:
+	ecmd->advertising = ADVERTISED_10000baseT_Full;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#965: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:913:
+	uint8_t *mac_byte_ptr;

CHECK:SPACING: No space is necessary after a cast
#983: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:931:
+			mac_byte_ptr = (uint8_t *) hash_entry->mac;

WARNING:SPLIT_STRING: quoted string split across lines
#985: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:933:
+			ipath_eth_table("%4d.%02d MAC = "
+					"%02x:%02x:%02x:%02x:%02x:%02x, "

WARNING:SPLIT_STRING: quoted string split across lines
#986: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:934:
+					"%02x:%02x:%02x:%02x:%02x:%02x, "
+					"LID = %4d [0x%04x]\n",

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1001: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:949:
+static struct ethtool_ops ipath_ether_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1017: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:965:
+	switch (cmd) {
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipath_ether_ioctl', this function's name, in a string
#1042: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:990:
+		ipath_eth_dbg("got unsupported ipath_ether_ioctl with "

WARNING:SPLIT_STRING: quoted string split across lines
#1043: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:991:
+		ipath_eth_dbg("got unsupported ipath_ether_ioctl with "
+			      "cmd = %x\n", cmd);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_ipath_ether[device]"
#1077: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1025:
+	if (dev_ipath_ether[device] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!private_data[device].fstate"
#1118: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1066:
+	if (private_data[device].fstate == NULL) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1136: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1084:
+	(void)ipath_layer_get_mac(

CHECK:SPACING: No space is necessary after a cast
#1138: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1086:
+		(uint8_t *) private_data[device].my_mac_addr);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "private_data[device].fstate"
#1154: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1102:
+	if (private_data[device].fstate != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1178: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1126:
+		printk(KERN_ERR "Module error, %s loading, but ipath_core "

WARNING:SPLIT_STRING: quoted string split across lines
#1179: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1127:
+		printk(KERN_ERR "Module error, %s loading, but ipath_core "
+		       "not loaded!\n", DRV_NAME);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ipath_ether_init', this function's name, in a string
#1184: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1132:
+		ipath_eth_err("FATAL ERROR (ipath_ether_init): header size "

WARNING:SPLIT_STRING: quoted string split across lines
#1185: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1133:
+		ipath_eth_err("FATAL ERROR (ipath_ether_init): header size "
+			      "is wrong [%i<>%i]!!!\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "private_data[counter].fstate"
#1225: FILE: drivers/infiniband/hw/ipath/ipath_eth.c:1173:
+		if (private_data[counter].fstate != NULL) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096240.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 40 warnings, 69 checks, 1197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096240.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
