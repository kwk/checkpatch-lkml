WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > > I did a patch which switched loop to use the file_operations.read/write

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/block/loop.c:209:
+static int do_lo_send_aops(struct loop_device *lo, struct bio_vec *bvec,
+		int bsize, loff_t pos, struct page *page)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: drivers/block/loop.c:215:
+	unsigned offset, bv_offs;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#198: FILE: drivers/block/loop.c:225:
+		unsigned size;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/block/loop.c:236:
+		if (unlikely(aops->prepare_write(file, page, offset,
+				offset + size)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/block/loop.c:255:
+		if (unlikely(aops->commit_write(file, page, offset,
+				offset + size)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/block/loop.c:285:
+static inline int __do_lo_send_write(struct file *file,
+		u8 __user *buf, const int len, loff_t pos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#274: FILE: drivers/block/loop.c:295:
+	printk(KERN_ERR "loop: Write error at byte offset %llu, length %i.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/block/loop.c:296:
+	printk(KERN_ERR "loop: Write error at byte offset %llu, length %i.\n",
+			(unsigned long long)pos, len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/block/loop.c:311:
+static int do_lo_send_direct_write(struct loop_device *lo,
+		struct bio_vec *bvec, int bsize, loff_t pos, struct page *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: drivers/block/loop.c:335:
+static int do_lo_send_write(struct loop_device *lo, struct bio_vec *bvec,
+		int bsize, loff_t pos, struct page *page)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#322: FILE: drivers/block/loop.c:343:
+	printk(KERN_ERR "loop: Transfer error at byte offset %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: drivers/block/loop.c:344:
+	printk(KERN_ERR "loop: Transfer error at byte offset %llu, "
+			"length %i.\n", (unsigned long long)pos, bvec->bv_len);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/block/loop.c:351:
+static int lo_send(struct loop_device *lo, struct bio *bio, int bsize,
+		loff_t pos)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct loop_device *' should also have an identifier name
#332: FILE: drivers/block/loop.c:353:
+	int (*do_lo_send)(struct loop_device *, struct bio_vec *, int, loff_t,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio_vec *' should also have an identifier name
#332: FILE: drivers/block/loop.c:353:
+	int (*do_lo_send)(struct loop_device *, struct bio_vec *, int, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#332: FILE: drivers/block/loop.c:353:
+	int (*do_lo_send)(struct loop_device *, struct bio_vec *, int, loff_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#332: FILE: drivers/block/loop.c:353:
+	int (*do_lo_send)(struct loop_device *, struct bio_vec *, int, loff_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/block/loop.c:354:
+	int (*do_lo_send)(struct loop_device *, struct bio_vec *, int, loff_t,
+			struct page *page);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#363: FILE: drivers/block/loop.c:383:
+	printk(KERN_ERR "loop: Failed to allocate temporary page for write.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 9 checks, 271 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206540.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
