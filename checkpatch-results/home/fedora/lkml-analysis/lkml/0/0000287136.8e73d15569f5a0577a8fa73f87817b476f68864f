WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#33: FILE: linux/fuqueue.h:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: linux/fuqueue.h:46:
+   * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: linux/fuqueue.h:48:
+   * $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#92: FILE: linux/fuqueue.h:60:
+#if 0 || !defined(__i386__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#92: FILE: linux/fuqueue.h:60:
+#if 0 || !defined(__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#93: FILE: linux/fuqueue.h:61:
+#define __debug_printstr(a...) printk(a)	/* Dump to normal console */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#97: FILE: linux/fuqueue.h:65:
+static inline void __debug_outb (unsigned val, int port) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#97: FILE: linux/fuqueue.h:65:
+static inline void __debug_outb (unsigned val, int port) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: linux/fuqueue.h:65:
+static inline void __debug_outb (unsigned val, int port) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#98: FILE: linux/fuqueue.h:66:
+	__asm__ __volatile__ ("outb %b0,%w1" : : "a" (val), "Nd" (port));
 	                                                     ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#100: FILE: linux/fuqueue.h:68:
+}
+static inline unsigned __debug_inb (int port) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#100: FILE: linux/fuqueue.h:68:
+static inline unsigned __debug_inb (int port) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#100: FILE: linux/fuqueue.h:68:
+static inline unsigned __debug_inb (int port) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: linux/fuqueue.h:68:
+static inline unsigned __debug_inb (int port) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#101: FILE: linux/fuqueue.h:69:
+	unsigned value;

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#102: FILE: linux/fuqueue.h:70:
+	__asm__ __volatile__ ("inb %w1,%b0" : "=a" (value) : "Nd" (port));
 	                                                      ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#102: FILE: linux/fuqueue.h:70:
+	unsigned value;
+	__asm__ __volatile__ ("inb %w1,%b0" : "=a" (value) : "Nd" (port));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: linux/fuqueue.h:73:
+}
+static inline

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#106: FILE: linux/fuqueue.h:74:
+void __debug_printstr (const char *str) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: linux/fuqueue.h:74:
+void __debug_printstr (const char *str) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: linux/fuqueue.h:75:
+^Iconst int port = 0x03f8;  $

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: linux/fuqueue.h:76:
+	const int port = 0x03f8;  
+	while (*str) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: linux/fuqueue.h:77:
+		while (!(__debug_inb (port + UART_LSR) & UART_LSR_THRE));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#109: FILE: linux/fuqueue.h:77:
+		while (!(__debug_inb (port + UART_LSR) & UART_LSR_THRE));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: linux/fuqueue.h:78:
+		__debug_outb (*str++, port+UART_TX);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#110: FILE: linux/fuqueue.h:78:
+		__debug_outb (*str++, port+UART_TX);
 		                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: linux/fuqueue.h:80:
+	__debug_outb ('\r', port + UART_TX);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: linux/fuqueue.h:87:
+u64 __tsc_read (void)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#122: FILE: linux/fuqueue.h:90:
+#if defined(__i386__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: linux/fuqueue.h:92:
+#elif defined (__ia64__)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#137: FILE: linux/fuqueue.h:105:
+	unsigned __X_len;						\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: linux/fuqueue.h:107:
+	__X_len = snprintf (__X_buf, 255, "%Lu: %s:%d: %s[%d:%d] ",	\

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#139: FILE: linux/fuqueue.h:107:
+	__X_len = snprintf (__X_buf, 255, "%Lu: %s:%d: %s[%d:%d] ",	\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#140: FILE: linux/fuqueue.h:108:
+			__tsc_read(), __FILE__, __LINE__, __FUNCTION__,	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: linux/fuqueue.h:110:
+	snprintf (__X_buf + __X_len, 255 - __X_len, a);			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: linux/fuqueue.h:111:
+	spin_lock_irqsave (&__debug_lock, __X_flags);			\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: linux/fuqueue.h:112:
+	__debug_printstr (__X_buf);					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: linux/fuqueue.h:113:
+	spin_unlock_irqrestore (&__debug_lock, __X_flags);		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: linux/fuqueue.h:120:
+#define ldebug(l,a...)	 do { if (DEBUG >= l) __debug (a); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: linux/fuqueue.h:120:
+#define ldebug(l,a...)	 do { if (DEBUG >= l) __debug (a); } while (0)
                 ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#152: FILE: linux/fuqueue.h:120:
+#define ldebug(l,a...)	 do { if (DEBUG >= l) __debug (a); } while (0)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'l' may be better as '(l)' to avoid precedence issues
#152: FILE: linux/fuqueue.h:120:
+#define ldebug(l,a...)	 do { if (DEBUG >= l) __debug (a); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: linux/fuqueue.h:121:
+#define debug(a...)	 ldebug(1,a)
                    	         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: linux/fuqueue.h:122:
+#define fdebug(f, a...)	 do { if ((DEBUG >= 2) && f) __debug (a); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'f' may be better as '(f)' to avoid precedence issues
#154: FILE: linux/fuqueue.h:122:
+#define fdebug(f, a...)	 do { if ((DEBUG >= 2) && f) __debug (a); } while (0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: linux/fuqueue.h:123:
+#define __ftrace(l,a...) do { if ((l)) __debug (a); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: linux/fuqueue.h:123:
+#define __ftrace(l,a...) do { if ((l)) __debug (a); } while (0)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: linux/fuqueue.h:124:
+#define ftrace(a...)	 __ftrace((DEBUG >= 2),a)
                     	                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: linux/fuqueue.h:125:
+#define assert(c, a...)	 do { if ((DEBUG >= 0) && !(c)) BUG(); } while (0)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: linux/fuqueue.h:127:
+#define ldebug(l,a...)^I $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: linux/fuqueue.h:127:
+#define ldebug(l,a...)	 
                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: linux/fuqueue.h:128:
+#define debug(a...)^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: linux/fuqueue.h:129:
+#define fdebug(f, a...)^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: linux/fuqueue.h:130:
+#define __ftrace(l,a...) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: linux/fuqueue.h:130:
+#define __ftrace(l,a...) 
                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: linux/fuqueue.h:131:
+#define ftrace(a...)^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: linux/fuqueue.h:132:
+#define assert(c, a...)^I $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: linux/fuqueue.h:135:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: linux/fuqueue.h:137:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#179: FILE: linux/fuqueue.h:147:
+typedef struct plist wlist_t;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#195: FILE: linux/fuqueue.h:163:
+#if 0

WARNING:TYPO_SPELLING: 'decission' may be misspelled - perhaps 'decision'?
#219: FILE: linux/fuqueue.h:187:
+ *        The decission factor is that an atomic operation needs to
               ^^^^^^^^^

WARNING:SPACING: Unnecessary space before function pointer name
#227: FILE: linux/fuqueue.h:195:
+	void (* get) (struct fuqueue *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#227: FILE: linux/fuqueue.h:195:
+	void (* get) (struct fuqueue *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#227: FILE: linux/fuqueue.h:195:
+	void (* get) (struct fuqueue *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fuqueue *' should also have an identifier name
#227: FILE: linux/fuqueue.h:195:
+	void (* get) (struct fuqueue *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer name
#228: FILE: linux/fuqueue.h:196:
+	void (* put) (struct fuqueue *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#228: FILE: linux/fuqueue.h:196:
+	void (* put) (struct fuqueue *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#228: FILE: linux/fuqueue.h:196:
+	void (* put) (struct fuqueue *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fuqueue *' should also have an identifier name
#228: FILE: linux/fuqueue.h:196:
+	void (* put) (struct fuqueue *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: linux/fuqueue.h:197:
+	unsigned (* waiter_cancel) (struct fuqueue *, struct fuqueue_waiter *);

WARNING:SPACING: Unnecessary space before function pointer name
#229: FILE: linux/fuqueue.h:197:
+	unsigned (* waiter_cancel) (struct fuqueue *, struct fuqueue_waiter *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#229: FILE: linux/fuqueue.h:197:
+	unsigned (* waiter_cancel) (struct fuqueue *, struct fuqueue_waiter *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#229: FILE: linux/fuqueue.h:197:
+	unsigned (* waiter_cancel) (struct fuqueue *, struct fuqueue_waiter *);
 	          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fuqueue *' should also have an identifier name
#229: FILE: linux/fuqueue.h:197:
+	unsigned (* waiter_cancel) (struct fuqueue *, struct fuqueue_waiter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fuqueue_waiter *' should also have an identifier name
#229: FILE: linux/fuqueue.h:197:
+	unsigned (* waiter_cancel) (struct fuqueue *, struct fuqueue_waiter *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (

WARNING:SPACING: Unnecessary space before function pointer name
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (

WARNING:SPACING: Unnecessary space before function pointer arguments
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (
 	                      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fuqueue *' should also have an identifier name
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fuqueue_waiter *' should also have an identifier name
#230: FILE: linux/fuqueue.h:198:
+	struct task_struct * (* waiter_chprio) (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: linux/fuqueue.h:205:
+^Ispinlock_t lock;^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#237: FILE: linux/fuqueue.h:205:
+	spinlock_t lock;	

CHECK:LINE_SPACING: Please don't use multiple blank lines
#242: FILE: linux/fuqueue.h:210:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: linux/fuqueue.h:213:
+void __fuqueue_init (struct fuqueue *fuqueue, struct fuqueue_ops *ops)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: linux/fuqueue.h:215:
+	spin_lock_init (&fuqueue->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#248: FILE: linux/fuqueue.h:216:
+	wlist_init (&fuqueue->wlist);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ops' - possible side-effects?
#253: FILE: linux/fuqueue.h:221:
+#define __fuqueue_INIT(fuqueue, ops) {			\
+	.lock = SPIN_LOCK_UNLOCKED,			\
+	.wlist = wlist_INIT (&(fuqueue)->wlist),	\
+	.ops = (ops)					\
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: linux/fuqueue.h:223:
+	.wlist = wlist_INIT (&(fuqueue)->wlist),	\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: linux/fuqueue.h:227:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: linux/fuqueue.h:231:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: linux/fuqueue.h:234:
+void fuqueue_init (struct fuqueue *fuqueue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: linux/fuqueue.h:236:
+	__fuqueue_init (fuqueue, &fuqueue_ops);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: linux/fuqueue.h:242:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#276: FILE: linux/fuqueue.h:244:
+ * wake up code */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: linux/fuqueue.h:245:
+extern int fuqueue_wait (struct fuqueue *fuqueue, signed long timeout);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: linux/fuqueue.h:245:
+extern int fuqueue_wait (struct fuqueue *fuqueue, signed long timeout);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: linux/fuqueue.h:248:
+extern void fuqueue_waiter_cancel (struct task_struct *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#280: FILE: linux/fuqueue.h:248:
+extern void fuqueue_waiter_cancel (struct task_struct *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#280: FILE: linux/fuqueue.h:248:
+extern void fuqueue_waiter_cancel (struct task_struct *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#280: FILE: linux/fuqueue.h:248:
+extern void fuqueue_waiter_cancel (struct task_struct *, int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: linux/fuqueue.h:258:
+ * either that or disable DEBUG (force #define it to zero). */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: linux/fuqueue.h:258:
+ * either that or disable DEBUG (force #define it to zero). */ 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#291: FILE: linux/fuqueue.h:259:
+#define CHECK_IRQs() do { BUG_ON (!in_atomic()); } while (0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: linux/fuqueue.h:259:
+#define CHECK_IRQs() do { BUG_ON (!in_atomic()); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#291: FILE: linux/fuqueue.h:259:
+#define CHECK_IRQs() do { BUG_ON (!in_atomic()); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#291: FILE: linux/fuqueue.h:259:
+#define CHECK_IRQs() do { BUG_ON (!in_atomic()); } while (0)

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#296: FILE: linux/fuqueue.h:264:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: linux/fuqueue.h:269:
+ * $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#312: FILE: linux/fuqueue.h:280:
+unsigned __fuqueue_waiter_queue (struct fuqueue *fuqueue,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: linux/fuqueue.h:280:
+unsigned __fuqueue_waiter_queue (struct fuqueue *fuqueue,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: linux/fuqueue.h:283:
+	ftrace ("(%p, %p)\n", fuqueue, w);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: linux/fuqueue.h:285:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: linux/fuqueue.h:286:
+	_raw_spin_lock (&current->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: linux/fuqueue.h:289:
+	_raw_spin_unlock (&current->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: linux/fuqueue.h:292:
+	__wlist_chprio (&w->wlist_node, current->prio);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: linux/fuqueue.h:293:
+	return wlist_add (&fuqueue->wlist, &w->wlist_node);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#328: FILE: linux/fuqueue.h:296:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: linux/fuqueue.h:302:
+ * prevent issues. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: linux/fuqueue.h:307:
+void __fuqueue_waiter_unqueue (struct fuqueue_waiter *w, int result)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: linux/fuqueue.h:311:
+	ftrace ("(%p [%d], %d)\n", w, w->task->pid, result);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: linux/fuqueue.h:313:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#346: FILE: linux/fuqueue.h:314:
+	__wlist_rem (&w->wlist_node);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#347: FILE: linux/fuqueue.h:315:
+	_raw_spin_lock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: linux/fuqueue.h:319:
+	_raw_spin_unlock (&task->fuqueue_wait_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#354: FILE: linux/fuqueue.h:322:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#360: FILE: linux/fuqueue.h:328:
+ * preemtion. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#363: FILE: linux/fuqueue.h:331:
+int __fuqueue_waiter_block (struct fuqueue *fuqueue, struct fuqueue_waiter *w,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#366: FILE: linux/fuqueue.h:334:
+	ftrace ("(%p, %p, %ld)\n", fuqueue, w, timeout);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: linux/fuqueue.h:336:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: linux/fuqueue.h:337:
+	set_current_state (TASK_INTERRUPTIBLE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: linux/fuqueue.h:338:
+	_raw_spin_unlock (&fuqueue->lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: linux/fuqueue.h:341:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: linux/fuqueue.h:343:
+	timeout = schedule_timeout (timeout);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: linux/fuqueue.h:344:
+	set_current_state (TASK_RUNNING);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: linux/fuqueue.h:354:
+	if (unlikely (w->result == INT_MAX)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'w->result == INT_MAX'
#386: FILE: linux/fuqueue.h:354:
+	if (unlikely (w->result == INT_MAX)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: linux/fuqueue.h:356:
+		int result = -EINTR;
+		BUG_ON (wlist_empty (&w->wlist_node));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#388: FILE: linux/fuqueue.h:356:
+		BUG_ON (wlist_empty (&w->wlist_node));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: linux/fuqueue.h:356:
+		BUG_ON (wlist_empty (&w->wlist_node));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: linux/fuqueue.h:356:
+		BUG_ON (wlist_empty (&w->wlist_node));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: linux/fuqueue.h:360:
+			WARN_ON (!signal_pending (current));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: linux/fuqueue.h:360:
+			WARN_ON (!signal_pending (current));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#393: FILE: linux/fuqueue.h:361:
+		fuqueue_waiter_cancel (current, result);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: linux/fuqueue.h:366:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#402: FILE: linux/fuqueue.h:370:
+unsigned __fuqueue_empty (const struct fuqueue *fuqueue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: linux/fuqueue.h:370:
+unsigned __fuqueue_empty (const struct fuqueue *fuqueue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: linux/fuqueue.h:372:
+	return wlist_empty (&fuqueue->wlist);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#407: FILE: linux/fuqueue.h:375:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#410: FILE: linux/fuqueue.h:378:
+struct fuqueue_waiter * __fuqueue_first (struct fuqueue *fuqueue)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: linux/fuqueue.h:378:
+struct fuqueue_waiter * __fuqueue_first (struct fuqueue *fuqueue)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: linux/fuqueue.h:380:
+	return container_of (wlist_first (&fuqueue->wlist),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: linux/fuqueue.h:380:
+	return container_of (wlist_first (&fuqueue->wlist),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#418: FILE: linux/fuqueue.h:386:
+void __fuqueue_wake (struct fuqueue *fuqueue, size_t howmany, int code)

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: linux/fuqueue.h:390:
+        ftrace ("(%p, %zu, %d)\n", fuqueue, howmany, code);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: linux/fuqueue.h:390:
+        ftrace ("(%p, %zu, %d)\n", fuqueue, howmany, code);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#422: FILE: linux/fuqueue.h:390:
+        ftrace ("(%p, %zu, %d)\n", fuqueue, howmany, code);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: linux/fuqueue.h:391:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: linux/fuqueue.h:392:
+        while (howmany-- && !__fuqueue_empty (fuqueue)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: linux/fuqueue.h:392:
+        while (howmany-- && !__fuqueue_empty (fuqueue)) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: linux/fuqueue.h:392:
+        while (howmany-- && !__fuqueue_empty (fuqueue)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#425: FILE: linux/fuqueue.h:393:
+		w = __fuqueue_first (fuqueue);

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: linux/fuqueue.h:394:
+                __fuqueue_waiter_unqueue (w, code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: linux/fuqueue.h:394:
+                __fuqueue_waiter_unqueue (w, code);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: linux/fuqueue.h:394:
+                __fuqueue_waiter_unqueue (w, code);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#427: FILE: linux/fuqueue.h:395:
+		wake_up_process (w->task);

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: linux/fuqueue.h:397:
+        if (likely (w != NULL))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: linux/fuqueue.h:397:
+        if (likely (w != NULL))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#429: FILE: linux/fuqueue.h:397:
+        if (likely (w != NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'w != NULL'
#429: FILE: linux/fuqueue.h:397:
+        if (likely (w != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "w"
#429: FILE: linux/fuqueue.h:397:
+        if (likely (w != NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: linux/fuqueue.h:398:
+		wlist_update_prio (&fuqueue->wlist);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#433: FILE: linux/fuqueue.h:401:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: linux/fuqueue.h:403:
+ * them) @code */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: linux/fuqueue.h:405:
+int fuqueue_wake (struct fuqueue *fuqueue, size_t howmany, int code)

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: linux/fuqueue.h:409:
+        ftrace ("(%p, %zu, %d)\n", fuqueue, howmany, code);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: linux/fuqueue.h:409:
+        ftrace ("(%p, %zu, %d)\n", fuqueue, howmany, code);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#441: FILE: linux/fuqueue.h:409:
+        ftrace ("(%p, %zu, %d)\n", fuqueue, howmany, code);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: linux/fuqueue.h:410:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#443: FILE: linux/fuqueue.h:411:
+	spin_lock_irqsave (&fuqueue->lock, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#444: FILE: linux/fuqueue.h:412:
+	__fuqueue_wake (fuqueue, howmany, code);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: linux/fuqueue.h:413:
+	spin_unlock_irqrestore (&fuqueue->lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#449: FILE: linux/fuqueue.h:417:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#451: FILE: linux/fuqueue.h:419:
+extern unsigned __fuqueue_op_waiter_cancel (struct fuqueue *,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: linux/fuqueue.h:419:
+extern unsigned __fuqueue_op_waiter_cancel (struct fuqueue *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#451: FILE: linux/fuqueue.h:419:
+extern unsigned __fuqueue_op_waiter_cancel (struct fuqueue *,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#454: FILE: linux/fuqueue.h:422:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: linux/fuqueue.h:424:
+extern void __fuqueue_waiter_chprio (struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#456: FILE: linux/fuqueue.h:424:
+extern void __fuqueue_waiter_chprio (struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#456: FILE: linux/fuqueue.h:424:
+extern void __fuqueue_waiter_chprio (struct task_struct *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: linux/fuqueue.h:428:
+void fuqueue_waiter_chprio (struct task_struct *task)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#464: FILE: linux/fuqueue.h:432:
+	ftrace ("(%p [%d])\n", task, task->pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task->fuqueue_wait"
#466: FILE: linux/fuqueue.h:434:
+	if (task->fuqueue_wait == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#468: FILE: linux/fuqueue.h:436:
+	local_irq_save (flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: linux/fuqueue.h:438:
+	__fuqueue_waiter_chprio (task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#471: FILE: linux/fuqueue.h:439:
+	local_irq_restore (flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#475: FILE: linux/fuqueue.h:443:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: linux/fuqueue.h:448:
+ * This does not set the prio of the process itself! $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: linux/fuqueue.h:450:
+ * @task: waiting task to reprioritize $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: linux/fuqueue.h:454:
+ *^I     $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#491: FILE: linux/fuqueue.h:459:
+struct task_struct * __fuqueue_op_waiter_chprio (

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#491: FILE: linux/fuqueue.h:459:
+struct task_struct * __fuqueue_op_waiter_chprio (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#491: FILE: linux/fuqueue.h:459:
+struct task_struct * __fuqueue_op_waiter_chprio (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: linux/fuqueue.h:463:
+	wlist_chprio (&fuqueue->wlist, &w->wlist_node, task->prio);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#504: FILE: linux/plist.h:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#547: FILE: linux/plist.h:44:
+void plist_init (struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: linux/plist.h:46:
+	INIT_LIST_HEAD (&pl->node);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#558: FILE: linux/plist.h:55:
+struct plist * plist_first (struct plist *plist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#558: FILE: linux/plist.h:55:
+struct plist * plist_first (struct plist *plist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#560: FILE: linux/plist.h:57:
+	return list_entry (plist->node.next, struct plist, node);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#565: FILE: linux/plist.h:62:
+unsigned plist_empty (const struct plist *plist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#565: FILE: linux/plist.h:62:
+unsigned plist_empty (const struct plist *plist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: linux/plist.h:64:
+	return list_empty (&plist->node);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#577: FILE: linux/plist.h:74:
+unsigned __plist_update_prio (struct plist *plist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: linux/plist.h:74:
+unsigned __plist_update_prio (struct plist *plist)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#579: FILE: linux/plist.h:76:
+	unsigned prio = plist_first (plist)->prio;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: linux/plist.h:76:
+	unsigned prio = plist_first (plist)->prio;

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: linux/plist.h:77:
+	unsigned prio = plist_first (plist)->prio;
+	if (plist->prio == prio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#587: FILE: linux/plist.h:84:
+unsigned plist_update_prio (struct plist *plist)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#587: FILE: linux/plist.h:84:
+unsigned plist_update_prio (struct plist *plist)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#589: FILE: linux/plist.h:86:
+	unsigned old_prio = plist->prio;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: linux/plist.h:88:
+	plist->prio = plist_empty (plist)? INT_MAX : plist_first (plist)->prio;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#591: FILE: linux/plist.h:88:
+	plist->prio = plist_empty (plist)? INT_MAX : plist_first (plist)->prio;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#591: FILE: linux/plist.h:88:
+	plist->prio = plist_empty (plist)? INT_MAX : plist_first (plist)->prio;
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: linux/plist.h:100:
+void __plist_add_sorted (struct plist *plist, struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#609: FILE: linux/plist.h:106:
+		list_for_each (itr, &plist->node) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: linux/plist.h:107:
+			itr_pl = list_entry (itr, struct plist, node);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: linux/plist.h:113:
+	list_add_tail (&pl->node, itr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#624: FILE: linux/plist.h:121:
+unsigned plist_add (struct plist *plist, struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#624: FILE: linux/plist.h:121:
+unsigned plist_add (struct plist *plist, struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: linux/plist.h:123:
+	__plist_add_sorted (plist, pl);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#637: FILE: linux/plist.h:134:
+unsigned plist_prio (struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#637: FILE: linux/plist.h:134:
+unsigned plist_prio (struct plist *pl)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#644: FILE: linux/plist.h:141:
+void __plist_chprio (struct plist *pl, unsigned new_prio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#644: FILE: linux/plist.h:141:
+void __plist_chprio (struct plist *pl, unsigned new_prio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#654: FILE: linux/plist.h:151:
+unsigned plist_chprio (struct plist *plist, struct plist *pl,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#654: FILE: linux/plist.h:151:
+unsigned plist_chprio (struct plist *plist, struct plist *pl,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#655: FILE: linux/plist.h:152:
+		       unsigned new_prio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: linux/plist.h:154:
+	__plist_chprio (pl, new_prio);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#658: FILE: linux/plist.h:155:
+	list_del (&pl->node);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: linux/plist.h:156:
+	__plist_add_sorted (plist, pl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: linux/plist.h:157:
+	return __plist_update_prio (plist);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#668: FILE: linux/plist.h:165:
+void __plist_rem (struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#670: FILE: linux/plist.h:167:
+	list_del_init (&pl->node);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#672: FILE: linux/plist.h:169:
+}
+static inline

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#673: FILE: linux/plist.h:170:
+unsigned plist_rem (struct plist *plist, struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: linux/plist.h:170:
+unsigned plist_rem (struct plist *plist, struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: linux/plist.h:172:
+	__plist_rem (pl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#676: FILE: linux/plist.h:173:
+	return plist_update_prio (plist);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#680: FILE: linux/plist.h:177:
+#define plist_for_each(pos, head)					\
+for (pos = container_of ((head)->node.next, struct plist, node),	\
+       prefetch (pos->node.next);					\
+     pos != (head);							\
+     pos = container_of (pos->node.next, struct plist, node),		\
+       prefetch (pos->node.next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#680: FILE: linux/plist.h:177:
+#define plist_for_each(pos, head)					\
+for (pos = container_of ((head)->node.next, struct plist, node),	\
+       prefetch (pos->node.next);					\
+     pos != (head);							\
+     pos = container_of (pos->node.next, struct plist, node),		\
+       prefetch (pos->node.next))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#681: FILE: linux/plist.h:178:
+for (pos = container_of ((head)->node.next, struct plist, node),	\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: linux/plist.h:179:
+       prefetch (pos->node.next);^I^I^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: linux/plist.h:179:
+       prefetch (pos->node.next);					\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: linux/plist.h:180:
+     pos != (head);^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: linux/plist.h:181:
+     pos = container_of (pos->node.next, struct plist, node),^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#684: FILE: linux/plist.h:181:
+     pos = container_of (pos->node.next, struct plist, node),		\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: linux/plist.h:182:
+       prefetch (pos->node.next))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#685: FILE: linux/plist.h:182:
+       prefetch (pos->node.next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#687: FILE: linux/plist.h:184:
+#define plist_for_each_safe(pos, n, head)					\
+	for (pos = container_of ((head)->node.next, struct plist, node),	\
+	       n = container_of (pos->node.next, struct plist, node);		\
+	     pos != (head);							\
+	     pos = n,								\
+	       n = container_of (pos->node.next, struct plist, node))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#687: FILE: linux/plist.h:184:
+#define plist_for_each_safe(pos, n, head)					\
+	for (pos = container_of ((head)->node.next, struct plist, node),	\
+	       n = container_of (pos->node.next, struct plist, node);		\
+	     pos != (head);							\
+	     pos = n,								\
+	       n = container_of (pos->node.next, struct plist, node))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#687: FILE: linux/plist.h:184:
+#define plist_for_each_safe(pos, n, head)					\
+	for (pos = container_of ((head)->node.next, struct plist, node),	\
+	       n = container_of (pos->node.next, struct plist, node);		\
+	     pos != (head);							\
+	     pos = n,								\
+	       n = container_of (pos->node.next, struct plist, node))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#688: FILE: linux/plist.h:185:
+	for (pos = container_of ((head)->node.next, struct plist, node),	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#689: FILE: linux/plist.h:186:
+	       n = container_of (pos->node.next, struct plist, node);		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#692: FILE: linux/plist.h:189:
+	       n = container_of (pos->node.next, struct plist, node))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#694: FILE: linux/plist.h:191:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#698: FILE: linux/plist.h:195:
+unsigned plist_last (const struct plist *plist, const struct plist *pl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: linux/plist.h:195:
+unsigned plist_last (const struct plist *plist, const struct plist *pl)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#703: FILE: linux/plist.h:200:
+
+

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#709: FILE: fuqueue.c:1:
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#734: FILE: fuqueue.c:26:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#741: FILE: fuqueue.c:33:
+int fuqueue_wait (struct fuqueue *fuqueue, signed long timeout)

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: fuqueue.c:35:
+        struct fuqueue_waiter w;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: fuqueue.c:35:
+        struct fuqueue_waiter w;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: fuqueue.c:36:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: fuqueue.c:37:
+        ftrace ("(%p, %ld)\n", fuqueue, timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: fuqueue.c:37:
+        ftrace ("(%p, %ld)\n", fuqueue, timeout);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: fuqueue.c:37:
+        ftrace ("(%p, %ld)\n", fuqueue, timeout);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: fuqueue.c:38:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: fuqueue.c:39:
+	spin_lock_irq (&fuqueue->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: fuqueue.c:40:
+	__fuqueue_waiter_queue (fuqueue, &w);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: fuqueue.c:41:
+	return __fuqueue_waiter_block (fuqueue, &w, timeout); /* unlocks */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#752: FILE: fuqueue.c:44:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#773: FILE: fuqueue.c:65:
+void __fuqueue_waiter_chprio (struct task_struct *task)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: fuqueue.c:71:
+	ftrace ("(%p [%d])\n", task, task->pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: fuqueue.c:72:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: fuqueue.c:73:
+	get_task_struct (task);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task->fuqueue_wait"
#784: FILE: fuqueue.c:76:
+	if (task->fuqueue_wait == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#786: FILE: fuqueue.c:78:
+	_raw_spin_lock (&task->fuqueue_wait_lock);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fuqueue"
#788: FILE: fuqueue.c:80:
+	if (fuqueue == NULL)				/* Ok, not waiting */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#790: FILE: fuqueue.c:82:
+	if (!_raw_spin_trylock (&fuqueue->lock)) {      /* Spin dance... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&fuqueue->lock'
#790: FILE: fuqueue.c:82:
+	if (!_raw_spin_trylock (&fuqueue->lock)) {      /* Spin dance... */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#791: FILE: fuqueue.c:83:
+		_raw_spin_unlock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#796: FILE: fuqueue.c:88:
+		ops->get (fuqueue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: fuqueue.c:89:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#799: FILE: fuqueue.c:91:
+	_raw_spin_unlock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#800: FILE: fuqueue.c:92:
+	put_task_struct (task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#802: FILE: fuqueue.c:94:
+	task = ops->waiter_chprio (task, fuqueue, w);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task"
#803: FILE: fuqueue.c:95:
+	if (task == NULL)            /* no other task to propagate to? */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#806: FILE: fuqueue.c:98:
+	get_task_struct (task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#807: FILE: fuqueue.c:99:
+	_raw_spin_unlock (&fuqueue->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#809: FILE: fuqueue.c:101:
+		ops->put (fuqueue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#813: FILE: fuqueue.c:105:
+	_raw_spin_unlock (&fuqueue->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#815: FILE: fuqueue.c:107:
+		ops->put (fuqueue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#817: FILE: fuqueue.c:109:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#819: FILE: fuqueue.c:111:
+	_raw_spin_unlock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#821: FILE: fuqueue.c:113:
+	put_task_struct (task);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#827: FILE: fuqueue.c:119:
+unsigned __fuqueue_op_waiter_cancel (struct fuqueue *fuqueue,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#827: FILE: fuqueue.c:119:
+unsigned __fuqueue_op_waiter_cancel (struct fuqueue *fuqueue,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#830: FILE: fuqueue.c:122:
+	ftrace ("(%p, %p [%d])\n", fuqueue, w, w->task->pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: fuqueue.c:123:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#832: FILE: fuqueue.c:124:
+	return wlist_rem (&fuqueue->wlist, &w->wlist_node);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#835: FILE: fuqueue.c:127:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: fuqueue.c:132:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#846: FILE: fuqueue.c:138:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#860: FILE: fuqueue.c:152:
+void fuqueue_waiter_cancel (struct task_struct *task, int result)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#867: FILE: fuqueue.c:159:
+	ftrace ("(%p [%d], %d)\n", task, task->pid, result);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: fuqueue.c:160:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#869: FILE: fuqueue.c:161:
+	local_irq_save (flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#871: FILE: fuqueue.c:163:
+	get_task_struct (task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#874: FILE: fuqueue.c:166:
+	_raw_spin_lock (&task->fuqueue_wait_lock);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fuqueue"
#876: FILE: fuqueue.c:168:
+	if (fuqueue == NULL)				/* Ok, not waiting */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: fuqueue.c:170:
+	if (!_raw_spin_trylock (&fuqueue->lock)) {      /* Spin dance... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&fuqueue->lock'
#878: FILE: fuqueue.c:170:
+	if (!_raw_spin_trylock (&fuqueue->lock)) {      /* Spin dance... */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: fuqueue.c:171:
+		_raw_spin_unlock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#884: FILE: fuqueue.c:176:
+		ops->get (fuqueue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: fuqueue.c:180:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#890: FILE: fuqueue.c:182:
+	ops->waiter_cancel (fuqueue, w);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#893: FILE: fuqueue.c:185:
+	_raw_spin_unlock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#894: FILE: fuqueue.c:186:
+	put_task_struct (task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#895: FILE: fuqueue.c:187:
+	_raw_spin_unlock (&fuqueue->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#896: FILE: fuqueue.c:188:
+	local_irq_restore (flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#899: FILE: fuqueue.c:191:
+		ops->put (fuqueue);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#901: FILE: fuqueue.c:193:
+^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#903: FILE: fuqueue.c:195:
+	_raw_spin_unlock (&task->fuqueue_wait_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#904: FILE: fuqueue.c:196:
+	put_task_struct (task);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#905: FILE: fuqueue.c:197:
+	local_irq_restore (flags);

WARNING:RETURN_VOID: void function return statements are not generally useful
#908: FILE: fuqueue.c:200:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#910: FILE: fuqueue.c:202:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 233 warnings, 52 checks, 879 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287136.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
