WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
>Hmm. It has I365_PC_RESET set, which does indeed not look right. Could you 

WARNING:IF_1: Consider removing the #if 1 and its #endif
#497: FILE: yenta_socket.c:39:
+#if 1

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#498: FILE: yenta_socket.c:40:
+static int debugOn=1;
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <debugOn>
#498: FILE: yenta_socket.c:40:
+static int debugOn=1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: yenta_socket.c:41:
+#define debug(f,l,x,args...) do { if(debugOn) printk(KERN_DEBUG $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#499: FILE: yenta_socket.c:41:
+#define debug(f,l,x,args...) do { if(debugOn) printk(KERN_DEBUG 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: yenta_socket.c:41:
+#define debug(f,l,x,args...) do { if(debugOn) printk(KERN_DEBUG 
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: yenta_socket.c:41:
+#define debug(f,l,x,args...) do { if(debugOn) printk(KERN_DEBUG 
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: yenta_socket.c:41:
+#define debug(f,l,x,args...) do { if(debugOn) printk(KERN_DEBUG 
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: yenta_socket.c:41:
+#define debug(f,l,x,args...) do { if(debugOn) printk(KERN_DEBUG 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#500: FILE: yenta_socket.c:41:
"%20s[%4d]%14s " x,f, l,__func__,##args); } while(0)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#502: FILE: yenta_socket.c:43:
+#define debug(f,l,x,args...)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#502: FILE: yenta_socket.c:43:
+#define debug(f,l,x,args...)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#502: FILE: yenta_socket.c:43:
+#define debug(f,l,x,args...)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: yenta_socket.c:47:
+#define cb_readl(s, r)          cb_readl_(__func__,__LINE__,s,r)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: yenta_socket.c:47:
+#define cb_readl(s, r)          cb_readl_(__func__,__LINE__,s,r)
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: yenta_socket.c:47:
+#define cb_readl(s, r)          cb_readl_(__func__,__LINE__,s,r)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: yenta_socket.c:48:
+#define cb_writel(s,r,v)        cb_writel_(__func__,__LINE__,s,r,v)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: yenta_socket.c:48:
+#define cb_writel(s,r,v)        cb_writel_(__func__,__LINE__,s,r,v)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: yenta_socket.c:48:
+#define cb_writel(s,r,v)        cb_writel_(__func__,__LINE__,s,r,v)
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: yenta_socket.c:48:
+#define cb_writel(s,r,v)        cb_writel_(__func__,__LINE__,s,r,v)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: yenta_socket.c:48:
+#define cb_writel(s,r,v)        cb_writel_(__func__,__LINE__,s,r,v)
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: yenta_socket.c:48:
+#define cb_writel(s,r,v)        cb_writel_(__func__,__LINE__,s,r,v)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: yenta_socket.c:50:
+#define config_readb(s,o)       config_readb_(__func__,__LINE__,s,o)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: yenta_socket.c:50:
+#define config_readb(s,o)       config_readb_(__func__,__LINE__,s,o)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: yenta_socket.c:50:
+#define config_readb(s,o)       config_readb_(__func__,__LINE__,s,o)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: yenta_socket.c:50:
+#define config_readb(s,o)       config_readb_(__func__,__LINE__,s,o)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: yenta_socket.c:51:
+#define config_writeb(s,o,v)    config_writeb_(__func__,__LINE__,s,o,v)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: yenta_socket.c:51:
+#define config_writeb(s,o,v)    config_writeb_(__func__,__LINE__,s,o,v)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: yenta_socket.c:51:
+#define config_writeb(s,o,v)    config_writeb_(__func__,__LINE__,s,o,v)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: yenta_socket.c:51:
+#define config_writeb(s,o,v)    config_writeb_(__func__,__LINE__,s,o,v)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: yenta_socket.c:51:
+#define config_writeb(s,o,v)    config_writeb_(__func__,__LINE__,s,o,v)
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: yenta_socket.c:51:
+#define config_writeb(s,o,v)    config_writeb_(__func__,__LINE__,s,o,v)
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: yenta_socket.c:52:
+#define config_readw(s,o)       config_readw_(__func__,__LINE__,s,o)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: yenta_socket.c:52:
+#define config_readw(s,o)       config_readw_(__func__,__LINE__,s,o)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: yenta_socket.c:52:
+#define config_readw(s,o)       config_readw_(__func__,__LINE__,s,o)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: yenta_socket.c:52:
+#define config_readw(s,o)       config_readw_(__func__,__LINE__,s,o)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: yenta_socket.c:53:
+#define config_writew(s,o,v)    config_writew_(__func__,__LINE__,s,o,v)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: yenta_socket.c:53:
+#define config_writew(s,o,v)    config_writew_(__func__,__LINE__,s,o,v)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: yenta_socket.c:53:
+#define config_writew(s,o,v)    config_writew_(__func__,__LINE__,s,o,v)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: yenta_socket.c:53:
+#define config_writew(s,o,v)    config_writew_(__func__,__LINE__,s,o,v)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: yenta_socket.c:53:
+#define config_writew(s,o,v)    config_writew_(__func__,__LINE__,s,o,v)
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#512: FILE: yenta_socket.c:53:
+#define config_writew(s,o,v)    config_writew_(__func__,__LINE__,s,o,v)
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: yenta_socket.c:54:
+#define config_readl(s,o)       config_readl_(__func__,__LINE__,s,o)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: yenta_socket.c:54:
+#define config_readl(s,o)       config_readl_(__func__,__LINE__,s,o)
                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: yenta_socket.c:54:
+#define config_readl(s,o)       config_readl_(__func__,__LINE__,s,o)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#513: FILE: yenta_socket.c:54:
+#define config_readl(s,o)       config_readl_(__func__,__LINE__,s,o)
                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: yenta_socket.c:55:
+#define config_writel(s,o,v)    config_writel_(__func__,__LINE__,s,o,v)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: yenta_socket.c:55:
+#define config_writel(s,o,v)    config_writel_(__func__,__LINE__,s,o,v)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: yenta_socket.c:55:
+#define config_writel(s,o,v)    config_writel_(__func__,__LINE__,s,o,v)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: yenta_socket.c:55:
+#define config_writel(s,o,v)    config_writel_(__func__,__LINE__,s,o,v)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: yenta_socket.c:55:
+#define config_writel(s,o,v)    config_writel_(__func__,__LINE__,s,o,v)
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#514: FILE: yenta_socket.c:55:
+#define config_writel(s,o,v)    config_writel_(__func__,__LINE__,s,o,v)
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: yenta_socket.c:57:
+#define exca_readb(s,r)         exca_readb_(__func__,__LINE__,s,r)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: yenta_socket.c:57:
+#define exca_readb(s,r)         exca_readb_(__func__,__LINE__,s,r)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: yenta_socket.c:57:
+#define exca_readb(s,r)         exca_readb_(__func__,__LINE__,s,r)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#516: FILE: yenta_socket.c:57:
+#define exca_readb(s,r)         exca_readb_(__func__,__LINE__,s,r)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: yenta_socket.c:58:
+#define exca_readw(s,r)         exca_readw_(__func__,__LINE__,s,r)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: yenta_socket.c:58:
+#define exca_readw(s,r)         exca_readw_(__func__,__LINE__,s,r)
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: yenta_socket.c:58:
+#define exca_readw(s,r)         exca_readw_(__func__,__LINE__,s,r)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: yenta_socket.c:58:
+#define exca_readw(s,r)         exca_readw_(__func__,__LINE__,s,r)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: yenta_socket.c:59:
+#define exca_writeb(s,r,v)      exca_writeb_(__func__,__LINE__,s,r,v)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: yenta_socket.c:59:
+#define exca_writeb(s,r,v)      exca_writeb_(__func__,__LINE__,s,r,v)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: yenta_socket.c:59:
+#define exca_writeb(s,r,v)      exca_writeb_(__func__,__LINE__,s,r,v)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: yenta_socket.c:59:
+#define exca_writeb(s,r,v)      exca_writeb_(__func__,__LINE__,s,r,v)
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: yenta_socket.c:59:
+#define exca_writeb(s,r,v)      exca_writeb_(__func__,__LINE__,s,r,v)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: yenta_socket.c:59:
+#define exca_writeb(s,r,v)      exca_writeb_(__func__,__LINE__,s,r,v)
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: yenta_socket.c:60:
+#define exca_writew(s,r,v)      exca_writew_(__func__,__LINE__,s,r,v)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: yenta_socket.c:60:
+#define exca_writew(s,r,v)      exca_writew_(__func__,__LINE__,s,r,v)
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: yenta_socket.c:60:
+#define exca_writew(s,r,v)      exca_writew_(__func__,__LINE__,s,r,v)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: yenta_socket.c:60:
+#define exca_writew(s,r,v)      exca_writew_(__func__,__LINE__,s,r,v)
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: yenta_socket.c:60:
+#define exca_writew(s,r,v)      exca_writew_(__func__,__LINE__,s,r,v)
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: yenta_socket.c:60:
+#define exca_writew(s,r,v)      exca_writew_(__func__,__LINE__,s,r,v)
                                                                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#521: FILE: yenta_socket.c:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: yenta_socket.c:68:
+static inline u32 cb_readl_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#528: FILE: yenta_socket.c:68:
+static inline u32 cb_readl_(const char* f, int line, struct 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: yenta_socket.c:71:
+    debug(f,line, "%p %04x %08x\n", socket, reg, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#533: FILE: yenta_socket.c:71:
+    debug(f,line, "%p %04x %08x\n", socket, reg, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: yenta_socket.c:75:
+static inline void cb_writel_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#539: FILE: yenta_socket.c:75:
+static inline void cb_writel_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: yenta_socket.c:77:
+    debug(f,line, "%p %04x %08x\n", socket, reg, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#543: FILE: yenta_socket.c:77:
+    debug(f,line, "%p %04x %08x\n", socket, reg, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: yenta_socket.c:81:
+static inline u8 config_readb_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#548: FILE: yenta_socket.c:81:
+static inline u8 config_readb_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: yenta_socket.c:85:
+    debug(f,line, "%p %04x %02x\n", socket, offset, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: yenta_socket.c:85:
+    debug(f,line, "%p %04x %02x\n", socket, offset, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: yenta_socket.c:89:
+static inline u16 config_readw_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#560: FILE: yenta_socket.c:89:
+static inline u16 config_readw_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: yenta_socket.c:93:
+    debug(f,line, "%p %04x %04x\n", socket, offset, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: yenta_socket.c:93:
+    debug(f,line, "%p %04x %04x\n", socket, offset, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: yenta_socket.c:97:
+static inline u32 config_readl_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#572: FILE: yenta_socket.c:97:
+static inline u32 config_readl_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: yenta_socket.c:101:
+    debug(f,line, "%p %04x %08x\n", socket, offset, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#578: FILE: yenta_socket.c:101:
+    debug(f,line, "%p %04x %08x\n", socket, offset, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: yenta_socket.c:105:
+static inline void config_writeb_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#584: FILE: yenta_socket.c:105:
+static inline void config_writeb_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: yenta_socket.c:107:
+    debug(f,line, "%p %04x %02x\n", socket, offset, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#588: FILE: yenta_socket.c:107:
+    debug(f,line, "%p %04x %02x\n", socket, offset, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: yenta_socket.c:111:
+static inline void config_writew_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#594: FILE: yenta_socket.c:111:
+static inline void config_writew_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: yenta_socket.c:113:
+    debug(f,line, "%p %04x %04x\n", socket, offset, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#598: FILE: yenta_socket.c:113:
+    debug(f,line, "%p %04x %04x\n", socket, offset, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: yenta_socket.c:117:
+static inline void config_writel_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#604: FILE: yenta_socket.c:117:
+static inline void config_writel_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: yenta_socket.c:119:
+    debug(f,line, "%p %04x %08x\n", socket, offset, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#608: FILE: yenta_socket.c:119:
+    debug(f,line, "%p %04x %08x\n", socket, offset, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#613: FILE: yenta_socket.c:123:
+static inline u8 exca_readb_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#613: FILE: yenta_socket.c:123:
+static inline u8 exca_readb_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: yenta_socket.c:126:
+    debug(f,line, "%p %04x %02x\n", socket, reg, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: yenta_socket.c:126:
+    debug(f,line, "%p %04x %02x\n", socket, reg, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: yenta_socket.c:130:
+static inline u8 exca_readw_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#623: FILE: yenta_socket.c:130:
+static inline u8 exca_readw_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: yenta_socket.c:135:
+    debug(f,line, "%p %04x %04x\n", socket, reg, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: yenta_socket.c:135:
+    debug(f,line, "%p %04x %04x\n", socket, reg, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: yenta_socket.c:139:
+static inline void exca_writeb_(const char* f, int line, struct $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#636: FILE: yenta_socket.c:139:
+static inline void exca_writeb_(const char* f, int line, struct 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: yenta_socket.c:141:
+    debug(f,line, "%p %04x %02x\n", socket, reg, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#640: FILE: yenta_socket.c:141:
+    debug(f,line, "%p %04x %02x\n", socket, reg, val);
            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#645: FILE: yenta_socket.c:145:
+static void exca_writew_(const char* f, int line, struct yenta_socket $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#645: FILE: yenta_socket.c:145:
+static void exca_writew_(const char* f, int line, struct yenta_socket 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: yenta_socket.c:147:
+    debug(f,line, "%p %04x %04x\n", socket, reg, val);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: yenta_socket.c:147:
+    debug(f,line, "%p %04x %04x\n", socket, reg, val);
            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: yenta_socket.c:152:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: yenta_socket.c:283:
+                intr &= I365_RING_ENA | I365_INTR_ENA;               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: yenta_socket.c:283:
+                intr &= I365_RING_ENA | I365_INTR_ENA;               $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: yenta_socket.c:283:
+                intr &= I365_RING_ENA | I365_INTR_ENA;               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: yenta_socket.c:288:
+                printk("yenta: CBCARD: I365_INTCTL=%02x  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: yenta_socket.c:288:
+                printk("yenta: CBCARD: I365_INTCTL=%02x  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: yenta_socket.c:288:
+                printk("yenta: CBCARD: I365_INTCTL=%02x  $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#669: FILE: yenta_socket.c:288:
+                printk("yenta: CBCARD: I365_INTCTL=%02x  

ERROR:CODE_INDENT: code indent should use tabs where possible
#671: FILE: yenta_socket.c:289:
+                        intr, state->io_irq );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: yenta_socket.c:289:
+                        intr, state->io_irq );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: yenta_socket.c:426:
+    u32 cb_event, intctl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: yenta_socket.c:437:
+    intctl = exca_readb(socket, I365_INTCTL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: yenta_socket.c:439:
+        if (intctl & I365_PC_RESET ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: yenta_socket.c:439:
+        if (intctl & I365_PC_RESET ) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#691: FILE: yenta_socket.c:439:
+        if (intctl & I365_PC_RESET ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: yenta_socket.c:440:
+                events |= SS_READY;     /* ensure a non-zero return */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: yenta_socket.c:440:
+                events |= SS_READY;     /* ensure a non-zero return */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: yenta_socket.c:441:
+                exca_writeb(socket, I365_INTCTL, intctl & ~I365_PC_RESET);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: yenta_socket.c:441:
+                exca_writeb(socket, I365_INTCTL, intctl & ~I365_PC_RESET);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: yenta_socket.c:442:
+        }               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: yenta_socket.c:442:
+        }               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: yenta_socket.c:442:
+        }               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: yenta_socket.c:443:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: yenta_socket.c:443:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: yenta_socket.c:444:
+        if (intctl & I365_PC_IOCARD) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: yenta_socket.c:444:
+        if (intctl & I365_PC_IOCARD) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#696: FILE: yenta_socket.c:444:
+        if (intctl & I365_PC_IOCARD) {
         events |= (csc & I365_CSC_STSCHG) ? SS_STSCHG : 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: yenta_socket.c:446:
+               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: yenta_socket.c:446:
+               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: yenta_socket.c:446:
+               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#704: FILE: yenta_socket.c:452:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: yenta_socket.c:452:
+       $

WARNING:IF_1: Consider removing the #if 1 and its #endif
#706: FILE: yenta_socket.c:454:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: yenta_socket.c:455:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: yenta_socket.c:455:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: yenta_socket.c:456:
+            u32 cb_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: yenta_socket.c:456:
+            u32 cb_state;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: yenta_socket.c:457:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: yenta_socket.c:457:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: yenta_socket.c:457:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: yenta_socket.c:458:
+            static int intCount = 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: yenta_socket.c:458:
+            static int intCount = 4;$

CHECK:CAMELCASE: Avoid CamelCase: <intCount>
#710: FILE: yenta_socket.c:458:
+            static int intCount = 4;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: yenta_socket.c:459:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#711: FILE: yenta_socket.c:459:
+           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: yenta_socket.c:459:
+           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: yenta_socket.c:460:
+            if( intCount > 0 )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: yenta_socket.c:460:
+            if( intCount > 0 )$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#712: FILE: yenta_socket.c:460:
+            if( intCount > 0 )
+            {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#712: FILE: yenta_socket.c:460:
+            if( intCount > 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#712: FILE: yenta_socket.c:460:
+            if( intCount > 0 )

ERROR:SPACING: space required before the open parenthesis '('
#712: FILE: yenta_socket.c:460:
+            if( intCount > 0 )

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: yenta_socket.c:461:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: yenta_socket.c:461:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: yenta_socket.c:462:
+                --intCount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: yenta_socket.c:462:
+                --intCount;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: yenta_socket.c:463:
+                cb_state = cb_readl(socket, CB_SOCKET_STATE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: yenta_socket.c:463:
+                cb_state = cb_readl(socket, CB_SOCKET_STATE);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: yenta_socket.c:464:
+                printk("yenta: %p cb_event %08x state %08x csc %02x $

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: yenta_socket.c:464:
+                printk("yenta: %p cb_event %08x state %08x csc %02x $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: yenta_socket.c:464:
+                printk("yenta: %p cb_event %08x state %08x csc %02x $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#716: FILE: yenta_socket.c:464:
+                printk("yenta: %p cb_event %08x state %08x csc %02x 

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: yenta_socket.c:465:
+                    socket, cb_event, cb_state, csc, intctl, events );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: yenta_socket.c:465:
+                    socket, cb_event, cb_state, csc, intctl, events );$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: yenta_socket.c:466:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: yenta_socket.c:466:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: yenta_socket.c:467:
+            else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: yenta_socket.c:467:
+            else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: yenta_socket.c:468:
+                debugOn = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: yenta_socket.c:468:
+                debugOn = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: yenta_socket.c:469:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: yenta_socket.c:469:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#723: FILE: yenta_socket.c:470:
+#endif       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: yenta_socket.c:471:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: yenta_socket.c:471:
+       $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 145 errors, 48 warnings, 4 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216173.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
