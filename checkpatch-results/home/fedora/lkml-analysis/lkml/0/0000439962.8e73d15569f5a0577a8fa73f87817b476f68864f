ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#87: FILE: drivers/pcmcia/yenta.c:749:
 	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#87: FILE: drivers/pcmcia/yenta.c:749:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#88: FILE: drivers/pcmcia/yenta.c:750:
+		align = size = 4*1024*1024;
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#88: FILE: drivers/pcmcia/yenta.c:750:
+		align = size = 4*1024*1024;
 		                     ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#88: FILE: drivers/pcmcia/yenta.c:750:
+		align = size = 4*1024*1024;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: drivers/pcmcia/yenta.c:755:
 		
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: drivers/pcmcia/yenta.c:757:
+	/* We check if we are behind an Intel 82801BAM/CAM PCI bridge
+	   which is a transparent bridge for us. We just allocate

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#97: FILE: drivers/pcmcia/yenta.c:758:
+	   resources from its parent.  */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "parent"
#99: FILE: drivers/pcmcia/yenta.c:760:
+	if (parent != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bridge"
#101: FILE: drivers/pcmcia/yenta.c:762:
+		if (bridge != NULL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#102: FILE: drivers/pcmcia/yenta.c:763:
+		if (bridge != NULL
+		    && (bridge->class >> 8) == PCI_CLASS_BRIDGE_PCI

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#103: FILE: drivers/pcmcia/yenta.c:764:
+		    && (bridge->class >> 8) == PCI_CLASS_BRIDGE_PCI
+		    && bridge->vendor == PCI_VENDOR_ID_INTEL

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#104: FILE: drivers/pcmcia/yenta.c:765:
+		    && bridge->vendor == PCI_VENDOR_ID_INTEL
+		    && bridge->device >= PCI_DEVICE_ID_INTEL_82801BA_0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#105: FILE: drivers/pcmcia/yenta.c:766:
+		    && bridge->device >= PCI_DEVICE_ID_INTEL_82801BA_0
+		    && bridge->device <= PCI_DEVICE_ID_INTEL_82801BA_11) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#112: FILE: drivers/pcmcia/yenta.c:773:
+		printk (KERN_NOTICE "PCI: CardBus bridge (%04x:%04x, %04x:%04x): Failed to allocate %s resource: %d bytes!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: drivers/pcmcia/yenta.c:773:
+		printk (KERN_NOTICE "PCI: CardBus bridge (%04x:%04x, %04x:%04x): Failed to allocate %s resource: %d bytes!\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 11 checks, 55 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000439962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
