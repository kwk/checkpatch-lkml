WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
diff -Nru a/Documentation/sound/alsa/serial-u16550.txt b/Documentation/sound/alsa/serial-u16550.txt

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#69: 
--- a/Documentation/sound/alsa/serial-u16550.txt	Sun Sep 29 20:22:50 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:TYPO_SPELLING: 'Avance' may be misspelled - perhaps 'Advance'?
#96: FILE: include/sound/sb.h:39:
+	SB_HW_DT019X,		/* Diamond Tech. DT-019X / Avance Logic ALS-007 */
 	             		                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#152: FILE: sound/core/pcm.c:756:
+	memset((void*)runtime->status, 0, size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#158: FILE: sound/core/pcm.c:761:
+		snd_free_pages((void*)runtime->status, PAGE_ALIGN(sizeof(snd_pcm_mmap_status_t)));

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#268: FILE: sound/core/timer.c:889:
+			snd_iprintf(buffer, " %lu.%03luus (%lu ticks)", timer->hw.resolution / 1000, timer->hw.resolution % 1000, timer->hw.ticks);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#353: FILE: sound/drivers/serial-u16550.c:112:
+#define TX_BUFF_SIZE		(1<<15)		/* Must be 2^n */
                     		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#353: FILE: sound/drivers/serial-u16550.c:112:
+#define TX_BUFF_SIZE		(1<<15)		/* Must be 2^n */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#394: FILE: sound/drivers/serial-u16550.c:221:
+		if (c & 0x80) {
+			uart->rstatus = c;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#404: FILE: sound/drivers/serial-u16550.c:231:
+					uart->rstatus = 0; /* prevent future bytes from being interpreted as streams */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#406: FILE: sound/drivers/serial-u16550.c:233:
+			else if ((uart->filemode & SERIAL_MODE_INPUT_OPEN) && (uart->midi_input[substream] != NULL)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#406: FILE: sound/drivers/serial-u16550.c:233:
+			}
+			else if ((uart->filemode & SERIAL_MODE_INPUT_OPEN) && (uart->midi_input[substream] != NULL)) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "uart->midi_input[substream]"
#406: FILE: sound/drivers/serial-u16550.c:233:
+			else if ((uart->filemode & SERIAL_MODE_INPUT_OPEN) && (uart->midi_input[substream] != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#409: FILE: sound/drivers/serial-u16550.c:236:
+		} else if ((uart->filemode & SERIAL_MODE_INPUT_OPEN) && (uart->midi_input[substream] != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "uart->midi_input[substream]"
#409: FILE: sound/drivers/serial-u16550.c:236:
+		} else if ((uart->filemode & SERIAL_MODE_INPUT_OPEN) && (uart->midi_input[substream] != NULL)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#429: FILE: sound/drivers/serial-u16550.c:255:
+	if (uart->adaptor == SNDRV_SERIAL_MS124W_SA
+	   || uart->adaptor == SNDRV_SERIAL_GENERIC) {

WARNING:TYPO_SPELLING: 'interupt' may be misspelled - perhaps 'interrupt'?
#440: FILE: sound/drivers/serial-u16550.c:438:
+		    | UART_IER_THRI	/* Enable Transmitter holding register empty interupt */
 		                   	                                             ^^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#468: FILE: sound/drivers/serial-u16550.c:588:
 	if (uart->buff_in_count == 0                            /* Buffer empty? */
+	    && ((uart->adaptor != SNDRV_SERIAL_MS124W_SA &&

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#477: FILE: sound/drivers/serial-u16550.c:623:
+	static unsigned long lasttime=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#477: FILE: sound/drivers/serial-u16550.c:623:
+	static unsigned long lasttime=0;
 	                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: sound/drivers/serial-u16550.c:663:
+			if (first == 0 && (uart->adaptor == SNDRV_SERIAL_SOUNDCANVAS ||
+				uart->adaptor == SNDRV_SERIAL_GENERIC) &&

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#495: FILE: sound/drivers/serial-u16550.c:664:
+			   (uart->prev_out != substream->number || jiffies-lasttime > 3*HZ)) {
 			                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#495: FILE: sound/drivers/serial-u16550.c:664:
+			   (uart->prev_out != substream->number || jiffies-lasttime > 3*HZ)) {
 			                                                               ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#496: FILE: sound/drivers/serial-u16550.c:665:
+			   (uart->prev_out != substream->number || jiffies-lasttime > 3*HZ)) {
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#509: FILE: sound/drivers/serial-u16550.c:679:
+				if ((midi_byte < 0x80) && (uart->adaptor == SNDRV_SERIAL_SOUNDCANVAS))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'midi_byte < 0x80'
#509: FILE: sound/drivers/serial-u16550.c:679:
+				if ((midi_byte < 0x80) && (uart->adaptor == SNDRV_SERIAL_SOUNDCANVAS))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'uart->adaptor == SNDRV_SERIAL_SOUNDCANVAS'
#509: FILE: sound/drivers/serial-u16550.c:679:
+				if ((midi_byte < 0x80) && (uart->adaptor == SNDRV_SERIAL_SOUNDCANVAS))

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#541: FILE: sound/drivers/serial-u16550.c:820:
+static int __init snd_uart16550_rmidi(snd_uart16550_t *uart, int device, int outs, int ins, snd_rawmidi_t **rmidi)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#547: FILE: sound/drivers/serial-u16550.c:825:
+	if ((err = snd_rawmidi_new(uart->card, "UART Serial MIDI", device, outs, ins, &rrawmidi)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#547: FILE: sound/drivers/serial-u16550.c:825:
+	if ((err = snd_rawmidi_new(uart->card, "UART Serial MIDI", device, outs, ins, &rrawmidi)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#588: FILE: sound/drivers/serial-u16550.c:905:
+	if ((err = snd_uart16550_rmidi(uart, 0, snd_outs[dev], snd_ins[dev], &uart->rmidi)) < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: sound/drivers/serial-u16550.c:964:
+ ^I^I^I snd_ins,snd_adaptor */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: sound/drivers/serial-u16550.c:964:
+ ^I^I^I snd_ins,snd_adaptor */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#611: FILE: sound/drivers/serial-u16550.c:964:
+ 			 snd_ins,snd_adaptor */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxO)
#619: FILE: sound/drivers/serial-u16550.c:980:
+	       get_option(&str,&snd_ins[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#619: FILE: sound/drivers/serial-u16550.c:980:
+	       get_option(&str,&snd_ins[nr_dev]) == 2 &&
 	                       ^

WARNING:TYPO_SPELLING: 'Avance' may be misspelled - perhaps 'Advance'?
#635: FILE: sound/isa/Config.help:93:
+  Avance Logic ALS-007 soundcards.
   ^^^^^^

WARNING:TYPO_SPELLING: 'Avance' may be misspelled - perhaps 'Advance'?
#647: FILE: sound/isa/Config.in:32:
+dep_tristate 'Diamond Technologies DT-019X, Avance Logic ALS-007' CONFIG_SND_DT019X $CONFIG_SND $CONFIG_ISAPNP
                                             ^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1071: FILE: sound/isa/dt019x.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1073: FILE: sound/isa/dt019x.c:3:
+/*
+    dt019x.c - driver for Diamond Technologies DT-0197H based soundcards.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1076: FILE: sound/isa/dt019x.c:6:
+    Generalised for soundcards based on DT-0196 and ALS-007 chips $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1090: FILE: sound/isa/dt019x.c:20:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1091: FILE: sound/isa/dt019x.c:21:
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:TYPO_SPELLING: 'Avance' may be misspelled - perhaps 'Advance'?
#1115: FILE: sound/isa/dt019x.c:45:
+MODULE_DESCRIPTION("Diamond Technologies DT-019X / Avance Logic ALS-007");
                                                    ^^^^^^

WARNING:TYPO_SPELLING: 'Avance' may be misspelled - perhaps 'Advance'?
#1119: FILE: sound/isa/dt019x.c:49:
+	       "{Avance Logic ALS-007}}");
 	         ^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1119: FILE: sound/isa/dt019x.c:49:
+MODULE_DEVICES("{{Diamond Technologies DT-019X},"
+	       "{Avance Logic ALS-007}}");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1170: FILE: sound/isa/dt019x.c:100:
+static struct isapnp_card *snd_dt019x_isapnp_cards[SNDRV_CARDS] __devinitdata = SNDRV_DEFAULT_PTR;

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1171: FILE: sound/isa/dt019x.c:101:
+static const struct isapnp_card_id *snd_dt019x_isapnp_id[SNDRV_CARDS] __devinitdata = SNDRV_DEFAULT_PTR;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1171: FILE: sound/isa/dt019x.c:101:
+static const struct isapnp_card_id *snd_dt019x_isapnp_id[SNDRV_CARDS] __devinitdata = SNDRV_DEFAULT_PTR;

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#1171: FILE: sound/isa/dt019x.c:101:
+static const struct isapnp_card_id *snd_dt019x_isapnp_id[SNDRV_CARDS] __devinitdata = SNDRV_DEFAULT_PTR;

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1173: FILE: sound/isa/dt019x.c:103:
+static struct isapnp_card_id snd_dt019x_pnpids[] __devinitdata = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1176: FILE: sound/isa/dt019x.c:106:
+		ISAPNP_CARD_ID('R','W','B',0x1688),
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1176: FILE: sound/isa/dt019x.c:106:
+		ISAPNP_CARD_ID('R','W','B',0x1688),
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1176: FILE: sound/isa/dt019x.c:106:
+		ISAPNP_CARD_ID('R','W','B',0x1688),
 		                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1177: FILE: sound/isa/dt019x.c:107:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1177: FILE: sound/isa/dt019x.c:107:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1177: FILE: sound/isa/dt019x.c:107:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1177: FILE: sound/isa/dt019x.c:107:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		                                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1177: FILE: sound/isa/dt019x.c:107:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: sound/isa/dt019x.c:108:
+			ISAPNP_DEVICE_ID('@','X','@',0x0001),
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: sound/isa/dt019x.c:108:
+			ISAPNP_DEVICE_ID('@','X','@',0x0001),
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1178: FILE: sound/isa/dt019x.c:108:
+			ISAPNP_DEVICE_ID('@','X','@',0x0001),
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1179: FILE: sound/isa/dt019x.c:109:
+			ISAPNP_DEVICE_ID('@','H','@',0x0001) }
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1179: FILE: sound/isa/dt019x.c:109:
+			ISAPNP_DEVICE_ID('@','H','@',0x0001) }
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1179: FILE: sound/isa/dt019x.c:109:
+			ISAPNP_DEVICE_ID('@','H','@',0x0001) }
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1183: FILE: sound/isa/dt019x.c:113:
+		ISAPNP_CARD_ID('A','L','S',0x0007),
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1183: FILE: sound/isa/dt019x.c:113:
+		ISAPNP_CARD_ID('A','L','S',0x0007),
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1183: FILE: sound/isa/dt019x.c:113:
+		ISAPNP_CARD_ID('A','L','S',0x0007),
 		                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1184: FILE: sound/isa/dt019x.c:114:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1184: FILE: sound/isa/dt019x.c:114:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1184: FILE: sound/isa/dt019x.c:114:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1184: FILE: sound/isa/dt019x.c:114:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),
 		                                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1184: FILE: sound/isa/dt019x.c:114:
+		devs: { ISAPNP_DEVICE_ID('@','@','@',0x0001),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: sound/isa/dt019x.c:115:
+			ISAPNP_DEVICE_ID('@','X','@',0x0001),
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: sound/isa/dt019x.c:115:
+			ISAPNP_DEVICE_ID('@','X','@',0x0001),
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1185: FILE: sound/isa/dt019x.c:115:
+			ISAPNP_DEVICE_ID('@','X','@',0x0001),
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: sound/isa/dt019x.c:116:
+			ISAPNP_DEVICE_ID('@','H','@',0x0001) }
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: sound/isa/dt019x.c:116:
+			ISAPNP_DEVICE_ID('@','H','@',0x0001) }
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1186: FILE: sound/isa/dt019x.c:116:
+			ISAPNP_DEVICE_ID('@','H','@',0x0001) }
 			                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1197: FILE: sound/isa/dt019x.c:127:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1212: FILE: sound/isa/dt019x.c:142:
+		acard->dev = acard->devmpu = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1217: FILE: sound/isa/dt019x.c:147:
+		acard->dev = acard->devmpu = acard->devopl = NULL;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1222: FILE: sound/isa/dt019x.c:152:
+	if (!pdev || pdev->prepare(pdev)<0)
 	                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: sound/isa/dt019x.c:159:
+		isapnp_resource_change(&pdev->dma_resource[0], snd_dma8[dev],
+			1);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1233: FILE: sound/isa/dt019x.c:163:
+	if (pdev->activate(pdev)<0) {
 	                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1234: FILE: sound/isa/dt019x.c:164:
+		printk(KERN_ERR PFX "DT-019X AUDIO isapnp configure failure\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1241: FILE: sound/isa/dt019x.c:171:
+	snd_printdd("dt019x: found audio interface: port=0x%lx, irq=0x%lx, dma=0x%lx\n",
+			snd_port[dev],snd_irq[dev],smd_dma8[dev]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1241: FILE: sound/isa/dt019x.c:171:
+			snd_port[dev],snd_irq[dev],smd_dma8[dev]);
 			             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1241: FILE: sound/isa/dt019x.c:171:
+			snd_port[dev],snd_irq[dev],smd_dma8[dev]);
 			                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1244: FILE: sound/isa/dt019x.c:174:
+^Iif (!pdev || pdev->prepare(pdev)<0) $

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1244: FILE: sound/isa/dt019x.c:174:
+	if (!pdev || pdev->prepare(pdev)<0) 
 	                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: sound/isa/dt019x.c:179:
+		isapnp_resource_change(&pdev->resource[0], snd_mpu_port[dev],
+			2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: sound/isa/dt019x.c:182:
+		isapnp_resource_change(&pdev->irq_resource[0], snd_mpu_irq[dev],
+			1);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1254: FILE: sound/isa/dt019x.c:184:
+	if (pdev->activate(pdev)<0) {
 	                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1255: FILE: sound/isa/dt019x.c:185:
+		printk(KERN_ERR PFX "DT-019X MPU-401 isapnp configure failure\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1262: FILE: sound/isa/dt019x.c:192:
+^I^I^I ^Isnd_mpu_port[dev],snd_mpu_irq[dev]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1262: FILE: sound/isa/dt019x.c:192:
+^I^I^I ^Isnd_mpu_port[dev],snd_mpu_irq[dev]);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: sound/isa/dt019x.c:192:
+		snd_printdd("dt019x: found MPU-401: port=0x%lx, irq=0x%lx\n",
+			 	snd_mpu_port[dev],snd_mpu_irq[dev]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1262: FILE: sound/isa/dt019x.c:192:
+			 	snd_mpu_port[dev],snd_mpu_irq[dev]);
 			 	                 ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1266: FILE: sound/isa/dt019x.c:196:
+	if (!pdev || pdev->prepare(pdev)<0)
 	                                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1272: FILE: sound/isa/dt019x.c:202:
+	if (pdev->activate(pdev)<0) {
 	                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1273: FILE: sound/isa/dt019x.c:203:
+		printk(KERN_ERR PFX "DT-019X OPL3 isapnp configure failure\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1278: FILE: sound/isa/dt019x.c:208:
+		snd_printdd("dt019x: found OPL3 synth: port=0x%lx\n",snd_fm_port[dev]);
 		                                                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "acard"
#1305: FILE: sound/isa/dt019x.c:235:
+	if (acard != NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1320: FILE: sound/isa/dt019x.c:250:
+	if ((card = snd_card_new(snd_index[dev], snd_id[dev], THIS_MODULE,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1327: FILE: sound/isa/dt019x.c:257:
+	if ((error = snd_card_dt019x_isapnp(dev, acard))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1332: FILE: sound/isa/dt019x.c:262:
+	printk(KERN_ERR PFX "you have to enable PnP support ...\n");

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1334: FILE: sound/isa/dt019x.c:264:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1337: FILE: sound/isa/dt019x.c:267:
+	if ((error = snd_sbdsp_create(card, snd_port[dev],

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1348: FILE: sound/isa/dt019x.c:278:
+	if ((error = snd_sb16dsp_pcm(chip, 0, NULL)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1352: FILE: sound/isa/dt019x.c:282:
+	if ((error = snd_sbmixer_new(chip)) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1359: FILE: sound/isa/dt019x.c:289:
+		if (snd_mpu401_uart_new(card, 0,
+/*					MPU401_HW_SB,*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1365: FILE: sound/isa/dt019x.c:295:
+			printk(KERN_ERR PFX "no MPU-401 device at 0x%lx ?\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: sound/isa/dt019x.c:296:
+			printk(KERN_ERR PFX "no MPU-401 device at 0x%lx ?\n",
+				snd_mpu_port[dev]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1374: FILE: sound/isa/dt019x.c:304:
+			printk(KERN_ERR PFX "no OPL device at 0x%lx-0x%lx ?\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1375: FILE: sound/isa/dt019x.c:305:
+			printk(KERN_ERR PFX "no OPL device at 0x%lx-0x%lx ?\n",
+				snd_fm_port[dev], snd_fm_port[dev] + 2);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1377: FILE: sound/isa/dt019x.c:307:
+			if ((error = snd_opl3_timer_new(opl3, 0, 1)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1381: FILE: sound/isa/dt019x.c:311:
+			if ((error = snd_opl3_hwdep_new(opl3, 0, 1, NULL)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1393: FILE: sound/isa/dt019x.c:323:
+	if ((error = snd_card_register(card)) < 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1403: FILE: sound/isa/dt019x.c:333:
+static int __init snd_dt019x_isapnp_detect(struct isapnp_card *card,
+					    const struct isapnp_card_id *id)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1418: FILE: sound/isa/dt019x.c:348:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: sound/isa/dt019x.c:348:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1419: FILE: sound/isa/dt019x.c:349:
+        return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: sound/isa/dt019x.c:349:
+        return -ENODEV;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1430: FILE: sound/isa/dt019x.c:360:
+	printk(KERN_ERR PFX "you have to enable ISA PnP support.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1434: FILE: sound/isa/dt019x.c:364:
+		printk(KERN_ERR "no DT-019X / ALS-007 based soundcards found\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1453: FILE: sound/isa/dt019x.c:383:
+/* format is: snd-dt019x=snd_enable,snd_index,snd_id,snd_isapnp,
+			  snd_port,snd_mpu_port,snd_fm_port,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1454: FILE: sound/isa/dt019x.c:384:
+			  snd_irq,snd_mpu_irq,snd_dma8,snd_dma8_size */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1458: FILE: sound/isa/dt019x.c:388:
+	static unsigned __initdata nr_dev = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after nr_dev
#1458: FILE: sound/isa/dt019x.c:388:
+	static unsigned __initdata nr_dev = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1462: FILE: sound/isa/dt019x.c:392:
+	(void)(get_option(&str,&snd_enable[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1462: FILE: sound/isa/dt019x.c:392:
+	(void)(get_option(&str,&snd_enable[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1463: FILE: sound/isa/dt019x.c:393:
+	       get_option(&str,&snd_index[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1463: FILE: sound/isa/dt019x.c:393:
+	       get_option(&str,&snd_index[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1464: FILE: sound/isa/dt019x.c:394:
+	       get_id(&str,&snd_id[nr_dev]) == 2 &&
 	                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1464: FILE: sound/isa/dt019x.c:394:
+	       get_id(&str,&snd_id[nr_dev]) == 2 &&
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1465: FILE: sound/isa/dt019x.c:395:
+	       get_option(&str,(int *)&snd_port[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1466: FILE: sound/isa/dt019x.c:396:
+	       get_option(&str,(int *)&snd_mpu_port[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1467: FILE: sound/isa/dt019x.c:397:
+	       get_option(&str,(int *)&snd_fm_port[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1468: FILE: sound/isa/dt019x.c:398:
+	       get_option(&str,&snd_irq[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1468: FILE: sound/isa/dt019x.c:398:
+	       get_option(&str,&snd_irq[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1469: FILE: sound/isa/dt019x.c:399:
+	       get_option(&str,&snd_mpu_irq[nr_dev]) == 2 &&
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1469: FILE: sound/isa/dt019x.c:399:
+	       get_option(&str,&snd_mpu_irq[nr_dev]) == 2 &&
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1470: FILE: sound/isa/dt019x.c:400:
+	       get_option(&str,&snd_dma8[nr_dev]) == 2);
 	                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1470: FILE: sound/isa/dt019x.c:400:
+	       get_option(&str,&snd_dma8[nr_dev]) == 2);
 	                       ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1475: FILE: sound/isa/dt019x.c:405:
+__setup("snd-dt019x=", alsa_card_dt019x_setup);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1490: FILE: sound/isa/opti9xx/opti92x-ad1848.c:334:
+^Ichip->mc_base_size = opti9xx_mc_size[hardware];  $

CHECK:CAMELCASE: Avoid CamelCase: <OPTi9XX_MC_REG>
#1500: FILE: sound/isa/opti9xx/opti92x-ad1848.c:607:
+	snd_opti9xx_write(chip, OPTi9XX_MC_REG(3), (irq_bits << 3 | dma_bits));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1533: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1264:
+	if (chip->irq >= 0) {
+	  free_irq(chip->irq, chip);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1533: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1264:
+	if (chip->irq >= 0) {
+	  free_irq(chip->irq, chip);
+	}

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1543: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1320:
+	if (request_irq(chip->irq, snd_opti93x_interrupt, SA_INTERRUPT, DRIVER_NAME" - WSS", codec)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1543: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1320:
+	if (request_irq(chip->irq, snd_opti93x_interrupt, SA_INTERRUPT, DRIVER_NAME" - WSS", codec)) {
+	  snd_opti93x_free(codec);

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1543: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1320:
+	if (request_irq(chip->irq, snd_opti93x_interrupt, SA_INTERRUPT, DRIVER_NAME" - WSS", codec)) {

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:TABSTOP: Statements should start on a tabstop
#1545: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1322:
+	  return -EBUSY;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1556: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1341:
+	if ((error = snd_device_new(card, SNDRV_DEV_LOWLEVEL, codec, &ops)) < 0) {

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_MIXOUT_LEFT>
#1566: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1452:
+	snd_opti93x_out_image(chip, OPTi93X_MIXOUT_LEFT, left);

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_MIXOUT_RIGHT>
#1567: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1453:
+	snd_opti93x_out_image(chip, OPTi93X_MIXOUT_RIGHT, right);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1596: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1599:
+OPTi93X_DOUBLE("Master Playback Volume", 0, OPTi93X_OUT_LEFT, OPTi93X_OUT_RIGHT, 1, 1, 31, 1), $

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_DOUBLE>
#1596: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1599:
+OPTi93X_DOUBLE("Master Playback Volume", 0, OPTi93X_OUT_LEFT, OPTi93X_OUT_RIGHT, 1, 1, 31, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_OUT_LEFT>
#1596: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1599:
+OPTi93X_DOUBLE("Master Playback Volume", 0, OPTi93X_OUT_LEFT, OPTi93X_OUT_RIGHT, 1, 1, 31, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_OUT_RIGHT>
#1596: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1599:
+OPTi93X_DOUBLE("Master Playback Volume", 0, OPTi93X_OUT_LEFT, OPTi93X_OUT_RIGHT, 1, 1, 31, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_DAC_LEFT>
#1599: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1601:
+OPTi93X_DOUBLE("PCM Playback Volume", 0, OPTi93X_DAC_LEFT, OPTi93X_DAC_RIGHT, 0, 0, 31, 1),

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_DAC_RIGHT>
#1599: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1601:
+OPTi93X_DOUBLE("PCM Playback Volume", 0, OPTi93X_DAC_LEFT, OPTi93X_DAC_RIGHT, 0, 0, 31, 1),

CHECK:CAMELCASE: Avoid CamelCase: <OPTi931_FM_LEFT_INPUT>
#1602: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1603:
+OPTi93X_DOUBLE("FM Playback Volume", 0, OPTi931_FM_LEFT_INPUT, OPTi931_FM_RIGHT_INPUT, 1, 1, 15, 1),

CHECK:CAMELCASE: Avoid CamelCase: <OPTi931_FM_RIGHT_INPUT>
#1602: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1603:
+OPTi93X_DOUBLE("FM Playback Volume", 0, OPTi931_FM_LEFT_INPUT, OPTi931_FM_RIGHT_INPUT, 1, 1, 15, 1),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1605: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1605:
+OPTi93X_DOUBLE("Line Playback Volume", 0, OPTi93X_LINE_LEFT_INPUT, OPTi93X_LINE_RIGHT_INPUT, 1, 1, 15, 1), $

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1605: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1605:
+OPTi93X_DOUBLE("Line Playback Volume", 0, OPTi93X_LINE_LEFT_INPUT, OPTi93X_LINE_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_LINE_LEFT_INPUT>
#1605: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1605:
+OPTi93X_DOUBLE("Line Playback Volume", 0, OPTi93X_LINE_LEFT_INPUT, OPTi93X_LINE_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_LINE_RIGHT_INPUT>
#1605: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1605:
+OPTi93X_DOUBLE("Line Playback Volume", 0, OPTi93X_LINE_LEFT_INPUT, OPTi93X_LINE_RIGHT_INPUT, 1, 1, 15, 1), 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1608: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1607:
+OPTi93X_DOUBLE("Mic Playback Volume", 0, OPTi93X_MIC_LEFT_INPUT, OPTi93X_MIC_RIGHT_INPUT, 1, 1, 15, 1), $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1608: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1607:
+OPTi93X_DOUBLE("Mic Playback Volume", 0, OPTi93X_MIC_LEFT_INPUT, OPTi93X_MIC_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_MIC_LEFT_INPUT>
#1608: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1607:
+OPTi93X_DOUBLE("Mic Playback Volume", 0, OPTi93X_MIC_LEFT_INPUT, OPTi93X_MIC_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_MIC_RIGHT_INPUT>
#1608: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1607:
+OPTi93X_DOUBLE("Mic Playback Volume", 0, OPTi93X_MIC_LEFT_INPUT, OPTi93X_MIC_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_CD_LEFT_INPUT>
#1612: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1610:
+OPTi93X_DOUBLE("CD Playback Volume", 0, OPTi93X_CD_LEFT_INPUT, OPTi93X_CD_RIGHT_INPUT, 1, 1, 15, 1),

CHECK:CAMELCASE: Avoid CamelCase: <OPTi93X_CD_RIGHT_INPUT>
#1612: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1610:
+OPTi93X_DOUBLE("CD Playback Volume", 0, OPTi93X_CD_LEFT_INPUT, OPTi93X_CD_RIGHT_INPUT, 1, 1, 15, 1),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1615: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1612:
+OPTi93X_DOUBLE("Aux Playback Volume", 0, OPTi931_AUX_LEFT_INPUT, OPTi931_AUX_RIGHT_INPUT, 1, 1, 15, 1), $

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1615: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1612:
+OPTi93X_DOUBLE("Aux Playback Volume", 0, OPTi931_AUX_LEFT_INPUT, OPTi931_AUX_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi931_AUX_LEFT_INPUT>
#1615: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1612:
+OPTi93X_DOUBLE("Aux Playback Volume", 0, OPTi931_AUX_LEFT_INPUT, OPTi931_AUX_RIGHT_INPUT, 1, 1, 15, 1), 

CHECK:CAMELCASE: Avoid CamelCase: <OPTi931_AUX_RIGHT_INPUT>
#1615: FILE: sound/isa/opti9xx/opti92x-ad1848.c:1612:
+OPTi93X_DOUBLE("Aux Playback Volume", 0, OPTi931_AUX_LEFT_INPUT, OPTi931_AUX_RIGHT_INPUT, 1, 1, 15, 1), 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: sound/isa/sb/sb16.c:223:
+	ISAPNP_SBAWE('C','T','L',0x0046,0x0031,0x0021),
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: sound/isa/sb/sb16.c:223:
+	ISAPNP_SBAWE('C','T','L',0x0046,0x0031,0x0021),
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: sound/isa/sb/sb16.c:223:
+	ISAPNP_SBAWE('C','T','L',0x0046,0x0031,0x0021),
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: sound/isa/sb/sb16.c:223:
+	ISAPNP_SBAWE('C','T','L',0x0046,0x0031,0x0021),
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1673: FILE: sound/isa/sb/sb16.c:223:
+	ISAPNP_SBAWE('C','T','L',0x0046,0x0031,0x0021),
 	                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1701: FILE: sound/isa/sb/sb_mixer.c:201:
+static int snd_dt019x_input_sw_info(snd_kcontrol_t *kcontrol, snd_ctl_elem_info_t * uinfo)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1716: FILE: sound/isa/sb/sb_mixer.c:216:
+static int snd_dt019x_input_sw_get(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1716: FILE: sound/isa/sb/sb_mixer.c:216:
+static int snd_dt019x_input_sw_get(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1721: FILE: sound/isa/sb/sb_mixer.c:221:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1752: FILE: sound/isa/sb/sb_mixer.c:252:
+static int snd_dt019x_input_sw_put(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1752: FILE: sound/isa/sb/sb_mixer.c:252:
+static int snd_dt019x_input_sw_put(snd_kcontrol_t * kcontrol, snd_ctl_elem_value_t * ucontrol)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1758: FILE: sound/isa/sb/sb_mixer.c:258:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1797: FILE: sound/isa/sb/sb_mixer.c:517:
+#define DT019X_CONTROLS (sizeof(snd_dt019x_controls)/sizeof(snd_kcontrol_new_t))
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1800: FILE: sound/isa/sb/sb_mixer.c:520:
+SB_DOUBLE("Master Playback Volume", SB_DT019X_MASTER_DEV, SB_DT019X_MASTER_DEV, 4,0, 15),
                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1801: FILE: sound/isa/sb/sb_mixer.c:521:
+SB_DOUBLE("PCM Playback Volume", SB_DT019X_PCM_DEV, SB_DT019X_PCM_DEV, 4,0, 15),
                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1802: FILE: sound/isa/sb/sb_mixer.c:522:
+SB_DOUBLE("Synth Playback Volume", SB_DT019X_SYNTH_DEV, SB_DT019X_SYNTH_DEV, 4,0, 15),
                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1803: FILE: sound/isa/sb/sb_mixer.c:523:
+SB_DOUBLE("CD Playback Volume", SB_DT019X_CD_DEV, SB_DT019X_CD_DEV, 4,0, 15),
                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1806: FILE: sound/isa/sb/sb_mixer.c:526:
+SB_DOUBLE("Line Playback Volume", SB_DT019X_LINE_DEV, SB_DT019X_LINE_DEV, 4,0, 15),
                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1808: FILE: sound/isa/sb/sb_mixer.c:528:
+SB_DOUBLE("CD Playback Switch", SB_DT019X_OUTPUT_SW1, SB_DT019X_OUTPUT_SW1, 2,1, 1),
                                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1809: FILE: sound/isa/sb/sb_mixer.c:529:
+SB_DOUBLE("Line Playback Switch", SB_DT019X_OUTPUT_SW1, SB_DT019X_OUTPUT_SW1, 4,3, 1),
                                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1810: FILE: sound/isa/sb/sb_mixer.c:530:
+SB_DOUBLE("PCM Playback Switch", SB_DT019X_OUTPUT_SW2, SB_DT019X_OUTPUT_SW2, 2,1, 1),
                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1811: FILE: sound/isa/sb/sb_mixer.c:531:
+SB_DOUBLE("Synth Playback Switch", SB_DT019X_OUTPUT_SW2, SB_DT019X_OUTPUT_SW2, 4,3, 1),
                                                                                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#1813: FILE: sound/isa/sb/sb_mixer.c:533:
+	iface: SNDRV_CTL_ELEM_IFACE_MIXER,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1814: FILE: sound/isa/sb/sb_mixer.c:534:
+	name: "Capture Source",
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1814: FILE: sound/isa/sb/sb_mixer.c:534:
+	name: "Capture Source",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1815: FILE: sound/isa/sb/sb_mixer.c:535:
+	info: snd_dt019x_input_sw_info,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1815: FILE: sound/isa/sb/sb_mixer.c:535:
+	info: snd_dt019x_input_sw_info,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1816: FILE: sound/isa/sb/sb_mixer.c:536:
+	get: snd_dt019x_input_sw_get,
 	   ^

WARNING:INDENTED_LABEL: labels should not be indented
#1816: FILE: sound/isa/sb/sb_mixer.c:536:
+	get: snd_dt019x_input_sw_get,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1817: FILE: sound/isa/sb/sb_mixer.c:537:
+	put: snd_dt019x_input_sw_put,
 	   ^

WARNING:INDENTED_LABEL: labels should not be indented
#1817: FILE: sound/isa/sb/sb_mixer.c:537:
+	put: snd_dt019x_input_sw_put,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1821: FILE: sound/isa/sb/sb_mixer.c:541:
+#define DT019X_INIT_VALUES (sizeof(snd_dt019x_init_values)/sizeof(unsigned char)/2)
                                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1821: FILE: sound/isa/sb/sb_mixer.c:541:
+#define DT019X_INIT_VALUES (sizeof(snd_dt019x_init_values)/sizeof(unsigned char)/2)
                                                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1824: FILE: sound/isa/sb/sb_mixer.c:544:
+        { SB_DT019X_MASTER_DEV, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1824: FILE: sound/isa/sb/sb_mixer.c:544:
+        { SB_DT019X_MASTER_DEV, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1825: FILE: sound/isa/sb/sb_mixer.c:545:
+        { SB_DT019X_PCM_DEV, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1825: FILE: sound/isa/sb/sb_mixer.c:545:
+        { SB_DT019X_PCM_DEV, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1826: FILE: sound/isa/sb/sb_mixer.c:546:
+        { SB_DT019X_SYNTH_DEV, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1826: FILE: sound/isa/sb/sb_mixer.c:546:
+        { SB_DT019X_SYNTH_DEV, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1827: FILE: sound/isa/sb/sb_mixer.c:547:
+        { SB_DT019X_CD_DEV, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1827: FILE: sound/isa/sb/sb_mixer.c:547:
+        { SB_DT019X_CD_DEV, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1828: FILE: sound/isa/sb/sb_mixer.c:548:
+        { SB_DT019X_MIC_DEV, 0 },^I/* Includes PC-speaker in high nibble */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1828: FILE: sound/isa/sb/sb_mixer.c:548:
+        { SB_DT019X_MIC_DEV, 0 },^I/* Includes PC-speaker in high nibble */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1829: FILE: sound/isa/sb/sb_mixer.c:549:
+        { SB_DT019X_LINE_DEV, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1829: FILE: sound/isa/sb/sb_mixer.c:549:
+        { SB_DT019X_LINE_DEV, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1830: FILE: sound/isa/sb/sb_mixer.c:550:
+        { SB_DT019X_OUTPUT_SW1, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1830: FILE: sound/isa/sb/sb_mixer.c:550:
+        { SB_DT019X_OUTPUT_SW1, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1831: FILE: sound/isa/sb/sb_mixer.c:551:
+        { SB_DT019X_OUTPUT_SW2, 0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: sound/isa/sb/sb_mixer.c:551:
+        { SB_DT019X_OUTPUT_SW2, 0 },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1832: FILE: sound/isa/sb/sb_mixer.c:552:
+        { SB_DT019X_CAPTURE_SW, 0x06 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: sound/isa/sb/sb_mixer.c:552:
+        { SB_DT019X_CAPTURE_SW, 0x06 },$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1844: FILE: sound/isa/sb/sb_mixer.c:624:
+		if ((err = snd_sbmixer_init(chip,
[...]
 		break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1844: FILE: sound/isa/sb/sb_mixer.c:624:
+		if ((err = snd_sbmixer_init(chip,

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1865: FILE: sound/pci/via686.c:172:
+		snd_free_pci_pages(pci, PAGE_ALIGN(dev->tbl_entries * 8), dev->table, dev->table_addr);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1875: FILE: sound/pci/via686.c:189:
+	dev->table = (u32*)snd_malloc_pci_pages(pci, PAGE_ALIGN(dev->tbl_entries * 8), &dev->table_addr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1875: FILE: sound/pci/via686.c:189:
+	dev->table = (u32*)snd_malloc_pci_pages(pci, PAGE_ALIGN(dev->tbl_entries * 8), &dev->table_addr);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1884: FILE: sound/pci/via686.c:215:
+		snd_free_pci_pages(pci, PAGE_ALIGN(dev->tbl_entries * 8), dev->table, dev->table_addr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 121 errors, 67 warnings, 48 checks, 1298 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
