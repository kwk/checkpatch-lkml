WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: fireflier_debug.c:1:
+#include <linux/debugfs.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#54: FILE: fireflier_debug.c:5:
+static struct dentry* fireflier_debugfs=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#54: FILE: fireflier_debug.c:5:
+static struct dentry* fireflier_debugfs=0;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#54: FILE: fireflier_debug.c:5:
+static struct dentry* fireflier_debugfs=0;
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#55: FILE: fireflier_debug.c:6:
+static struct dentry* sidmap_debugfs=0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#55: FILE: fireflier_debug.c:6:
+static struct dentry* sidmap_debugfs=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#55: FILE: fireflier_debug.c:6:
+static struct dentry* sidmap_debugfs=0;
                                     ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#56: FILE: fireflier_debug.c:7:
+static struct dentry* pidmap_debugfs=0;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#56: FILE: fireflier_debug.c:7:
+static struct dentry* pidmap_debugfs=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#56: FILE: fireflier_debug.c:7:
+static struct dentry* pidmap_debugfs=0;
                                     ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#58: FILE: fireflier_debug.c:9:
+extern int ff_debug;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#62: FILE: fireflier_debug.c:13:
+	seq_printf(s,"%s\n",(char*)s->private);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: fireflier_debug.c:13:
+	seq_printf(s,"%s\n",(char*)s->private);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: fireflier_debug.c:13:
+	seq_printf(s,"%s\n",(char*)s->private);
 	                   ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#66: FILE: fireflier_debug.c:17:
+static int debug_string_open(struct inode* inode, struct file* file)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#66: FILE: fireflier_debug.c:17:
+static int debug_string_open(struct inode* inode, struct file* file)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#68: FILE: fireflier_debug.c:19:
+	return single_open(file,debug_show,inode->u.generic_ip);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#68: FILE: fireflier_debug.c:19:
+	return single_open(file,debug_show,inode->u.generic_ip);
 	                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#71: FILE: fireflier_debug.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#72: FILE: fireflier_debug.c:23:
+static struct file_operations fops_string = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: fireflier_debug.c:30:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: fireflier_debug.c:32:
+static inline struct dentry* debugfs_create_readonly_string(const char* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#81: FILE: fireflier_debug.c:32:
+static inline struct dentry* debugfs_create_readonly_string(const char* 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#82: FILE: fireflier_debug.c:32:
name,mode_t mode,struct dentry* parent,char* value)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: fireflier_debug.c:34:
+	return debugfs_create_file(name,mode,parent,value,&fops_string);
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: fireflier_debug.c:34:
+	return debugfs_create_file(name,mode,parent,value,&fops_string);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: fireflier_debug.c:34:
+	return debugfs_create_file(name,mode,parent,value,&fops_string);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#84: FILE: fireflier_debug.c:34:
+	return debugfs_create_file(name,mode,parent,value,&fops_string);
 	                                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#84: FILE: fireflier_debug.c:34:
+	return debugfs_create_file(name,mode,parent,value,&fops_string);
 	                                                  ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#89: FILE: fireflier_debug.c:39:
+	u32* sid_d = kmalloc(sizeof(u32),GFP_ATOMIC);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: fireflier_debug.c:39:
+	u32* sid_d = kmalloc(sizeof(u32),GFP_ATOMIC);
 	                                ^

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: fireflier_debug.c:42:
+	if(unlikely(!ff_debug))

ERROR:SPACING: space required before the open parenthesis '('
#95: FILE: fireflier_debug.c:45:
+	if(unlikely(!sid_d)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#96: FILE: fireflier_debug.c:46:
+		printk(KERN_DEBUG "fireflier::ff_debug_map_pidsid: OOM\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ff_debug_map_pidsid', this function's name, in a string
#96: FILE: fireflier_debug.c:46:
+		printk(KERN_DEBUG "fireflier::ff_debug_map_pidsid: OOM\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: fireflier_debug.c:50:
+	snprintf(pid_s,16,"%d",current->pid);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: fireflier_debug.c:50:
+	snprintf(pid_s,16,"%d",current->pid);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#100: FILE: fireflier_debug.c:50:
+	snprintf(pid_s,16,"%d",current->pid);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: fireflier_debug.c:52:
+	debugfs_create_u32(pid_s,0,pidmap_debugfs,sid_d);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: fireflier_debug.c:52:
+	debugfs_create_u32(pid_s,0,pidmap_debugfs,sid_d);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#102: FILE: fireflier_debug.c:52:
+	debugfs_create_u32(pid_s,0,pidmap_debugfs,sid_d);
 	                                         ^

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#102: FILE: fireflier_debug.c:52:
+	debugfs_create_u32(pid_s,0,pidmap_debugfs,sid_d);
Permission bits should use 4 digit octal permissions (like 0700 or 0444).
Avoid using any other base like decimal.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#105: FILE: fireflier_debug.c:55:
+void ff_debug_dump_sid(const struct context* context,u32 sid)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: fireflier_debug.c:55:
+void ff_debug_dump_sid(const struct context* context,u32 sid)
                                                     ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#108: FILE: fireflier_debug.c:58:
+	struct
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#109: FILE: fireflier_debug.c:59:
+	{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#114: FILE: fireflier_debug.c:64:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: fireflier_debug.c:65:
+^I* sid_debug = kmalloc( sizeof(*sid_debug)+strlen(context->mnt_devname)+1, $

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#115: FILE: fireflier_debug.c:65:
+	* sid_debug = kmalloc( sizeof(*sid_debug)+strlen(context->mnt_devname)+1, 
 	^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: fireflier_debug.c:65:
+	* sid_debug = kmalloc( sizeof(*sid_debug)+strlen(context->mnt_devname)+1, 
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: fireflier_debug.c:65:
+	* sid_debug = kmalloc( sizeof(*sid_debug)+strlen(context->mnt_devname)+1, 
 	                                                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#115: FILE: fireflier_debug.c:65:
+	* sid_debug = kmalloc( sizeof(*sid_debug)+strlen(context->mnt_devname)+1, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: fireflier_debug.c:66:
+	* sid_debug = kmalloc( sizeof(*sid_debug)+strlen(context->mnt_devname)+1, 
+	//	u32* inode_d = kmalloc(sizeof(u32),GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#119: FILE: fireflier_debug.c:68:
+	struct dentry* sid_dentry=NULL;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: fireflier_debug.c:68:
+	struct dentry* sid_dentry=NULL;
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: fireflier_debug.c:72:
+	if(unlikely(!ff_debug))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: fireflier_debug.c:75:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: fireflier_debug.c:75:
+
+	

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#128: FILE: fireflier_debug.c:76:
+	sid_debug->inode=context->inode;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#129: FILE: fireflier_debug.c:77:
+	sid_debug->unsafe=context->unsafe;
 	                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#132: FILE: fireflier_debug.c:80:
+	/*	if(unlikely(!inode_d)) {
+		printk(KERN_DEBUG "fireflier::ff_debug_dump_sid: OOM\n");

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#135: FILE: fireflier_debug.c:83:
+		*inode_d=inode;*/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: fireflier_debug.c:84:
+	snprintf(sid_s,16,"%d",sid);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: fireflier_debug.c:84:
+	snprintf(sid_s,16,"%d",sid);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: fireflier_debug.c:84:
+	snprintf(sid_s,16,"%d",sid);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#138: FILE: fireflier_debug.c:86:
+	sid_dentry = debugfs_create_dir(sid_s,sidmap_debugfs);
 	                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: fireflier_debug.c:87:
+	if(!sid_dentry) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: fireflier_debug.c:92:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: fireflier_debug.c:93:
+	debugfs_create_u32("inode",0,sid_dentry,&sid_debug->inode);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: fireflier_debug.c:93:
+	debugfs_create_u32("inode",0,sid_dentry,&sid_debug->inode);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#145: FILE: fireflier_debug.c:93:
+	debugfs_create_u32("inode",0,sid_dentry,&sid_debug->inode);
 	                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#145: FILE: fireflier_debug.c:93:
+	debugfs_create_u32("inode",0,sid_dentry,&sid_debug->inode);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: fireflier_debug.c:94:
+	debugfs_create_u8("unsafe",0,sid_dentry,&sid_debug->unsafe);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: fireflier_debug.c:94:
+	debugfs_create_u8("unsafe",0,sid_dentry,&sid_debug->unsafe);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#146: FILE: fireflier_debug.c:94:
+	debugfs_create_u8("unsafe",0,sid_dentry,&sid_debug->unsafe);
 	                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#146: FILE: fireflier_debug.c:94:
+	debugfs_create_u8("unsafe",0,sid_dentry,&sid_debug->unsafe);
 	                                        ^

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#146: FILE: fireflier_debug.c:94:
+	debugfs_create_u8("unsafe",0,sid_dentry,&sid_debug->unsafe);
ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: fireflier_debug.c:95:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#149: FILE: fireflier_debug.c:96:
+	if(context->groupmembers>0)
+	{

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#149: FILE: fireflier_debug.c:96:
+	if(context->groupmembers>0)
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: fireflier_debug.c:96:
+	if(context->groupmembers>0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: fireflier_debug.c:99:
+		int i;
+		for(i=0;i<context->groupmembers;i++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#152: FILE: fireflier_debug.c:99:
+		for(i=0;i<context->groupmembers;i++)
+		{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: fireflier_debug.c:99:
+		for(i=0;i<context->groupmembers;i++)
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#152: FILE: fireflier_debug.c:99:
+		for(i=0;i<context->groupmembers;i++)
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#152: FILE: fireflier_debug.c:99:
+		for(i=0;i<context->groupmembers;i++)
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#152: FILE: fireflier_debug.c:99:
+		for(i=0;i<context->groupmembers;i++)
 		                               ^

ERROR:SPACING: space required before the open parenthesis '('
#152: FILE: fireflier_debug.c:99:
+		for(i=0;i<context->groupmembers;i++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: fireflier_debug.c:101:
+			snprintf(sid_s,16,"%d",context->sids[i]);
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: fireflier_debug.c:101:
+			snprintf(sid_s,16,"%d",context->sids[i]);
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: fireflier_debug.c:101:
+			snprintf(sid_s,16,"%d",context->sids[i]);
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: fireflier_debug.c:102:
+			debugfs_create_u8(sid_s,0,sid_dentry,&sid_debug->unsafe);
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: fireflier_debug.c:102:
+			debugfs_create_u8(sid_s,0,sid_dentry,&sid_debug->unsafe);
 			                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#155: FILE: fireflier_debug.c:102:
+			debugfs_create_u8(sid_s,0,sid_dentry,&sid_debug->unsafe);
 			                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#155: FILE: fireflier_debug.c:102:
+			debugfs_create_u8(sid_s,0,sid_dentry,&sid_debug->unsafe);
 			                                     ^

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#155: FILE: fireflier_debug.c:102:
+			debugfs_create_u8(sid_s,0,sid_dentry,&sid_debug->unsafe);
CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: fireflier_debug.c:107:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: fireflier_debug.c:111:
+	if(!ff_debug)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#166: FILE: fireflier_debug.c:113:
+	ff_debug=0;
 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: fireflier_debug.c:114:
+	fireflier_debugfs = debugfs_create_dir("fireflier",NULL);
 	                                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: fireflier_debug.c:115:
+	if(!fireflier_debugfs)  {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#169: FILE: fireflier_debug.c:116:
+		printk(KERN_DEBUG "fireflier: failed to create debug root fs!\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: fireflier_debug.c:120:
+	sidmap_debugfs = debugfs_create_dir("sidmap",fireflier_debugfs);
 	                                            ^

ERROR:SPACING: space required before the open parenthesis '('
#174: FILE: fireflier_debug.c:121:
+	if(!sidmap_debugfs) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#175: FILE: fireflier_debug.c:122:
+		printk(KERN_DEBUG "fireflier: failed to create debug sidmap fs!\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: fireflier_debug.c:126:
+	pidmap_debugfs = debugfs_create_dir("pidmap",fireflier_debugfs);
 	                                            ^

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: fireflier_debug.c:127:
+	if(!pidmap_debugfs) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#181: FILE: fireflier_debug.c:128:
+		printk(KERN_DEBUG "fireflier: failed to create debug sidmap fs!\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: fireflier_debug.c:132:
+	ff_debug=1;
 	        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#186: FILE: fireflier_debug.c:133:
+	printk(KERN_DEBUG "fireflier: debugging enabled\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#192: FILE: fireflier_debug.h:1:
+#ifndef _FIREFLIER_DEBUG_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: fireflier_debug.h:9:
+static inline void ff_debug_dump_sid(const struct context* context,u32 sid) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#200: FILE: fireflier_debug.h:9:
+static inline void ff_debug_dump_sid(const struct context* context,u32 sid) 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: fireflier_debug.h:9:
+static inline void ff_debug_dump_sid(const struct context* context,u32 sid) 
                                                                   ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#205: FILE: fireflier_debug.h:13:
+void ff_debug_dump_sid(const struct context* context,u32 sid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: fireflier_debug.h:13:
+void ff_debug_dump_sid(const struct context* context,u32 sid);
                                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086994.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 93 errors, 13 warnings, 10 checks, 157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086994.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
