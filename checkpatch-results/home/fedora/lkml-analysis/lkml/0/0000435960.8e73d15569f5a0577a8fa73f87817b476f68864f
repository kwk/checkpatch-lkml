WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -u --recursive --new-file -X /linux/dontdiff a/drivers/usb/storage/protocol.c b/drivers/usb/storage/protocol.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#55: 
--- a/drivers/usb/storage/protocol.c	Sun Jun  9 07:26:30 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#62: FILE: drivers/usb/storage/protocol.c:57:
+static void *
+find_data_location(Scsi_Cmnd *srb) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#63: FILE: drivers/usb/storage/protocol.c:58:
+find_data_location(Scsi_Cmnd *srb) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#72: FILE: drivers/usb/storage/protocol.c:67:
+		sg = (struct scatterlist *) srb->request_buffer;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#73: FILE: drivers/usb/storage/protocol.c:68:
+		return (void *) page_address(sg[0].page) + sg[0].offset;

CHECK:BRACES: Unbalanced braces around else statement
#74: FILE: drivers/usb/storage/protocol.c:69:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#75: FILE: drivers/usb/storage/protocol.c:70:
+		return (void *) srb->request_buffer;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: drivers/usb/storage/protocol.c:74:
+ * Fix-up the return data from an INQUIRY command to show $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#129: FILE: drivers/usb/storage/protocol.c:112:
+	capacity = (dp[0]<<24) + (dp[1]<<16) + (dp[2]<<8) + (dp[3]);
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#129: FILE: drivers/usb/storage/protocol.c:112:
+	capacity = (dp[0]<<24) + (dp[1]<<16) + (dp[2]<<8) + (dp[3]);
 	                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#129: FILE: drivers/usb/storage/protocol.c:112:
+	capacity = (dp[0]<<24) + (dp[1]<<16) + (dp[2]<<8) + (dp[3]);
 	                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/usb/storage/protocol.c:114:
+	US_DEBUGP("US: Fixing capacity: from %ld to %ld\n",
+	       capacity+1, capacity);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#131: FILE: drivers/usb/storage/protocol.c:114:
+	       capacity+1, capacity);
 	               ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#164: FILE: drivers/usb/storage/unusual_devs.h:511:
+UNUSUAL_DEV( 0x090c, 0x1132, 0x0000, 0xffff,

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: drivers/usb/storage/unusual_devs.h:512:
+^I        "Feiya",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/usb/storage/unusual_devs.h:512:
+UNUSUAL_DEV( 0x090c, 0x1132, 0x0000, 0xffff,
+	        "Feiya",

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: drivers/usb/storage/unusual_devs.h:513:
+^I        "5-in-1 Card Reader",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: drivers/usb/storage/unusual_devs.h:514:
+^I        US_SC_SCSI, US_PR_BULK, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: drivers/usb/storage/unusual_devs.h:515:
+^I        US_FL_FIX_CAPACITY ),$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#168: FILE: drivers/usb/storage/unusual_devs.h:515:
+	        US_FL_FIX_CAPACITY ),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000435960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 1 warnings, 11 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000435960.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
