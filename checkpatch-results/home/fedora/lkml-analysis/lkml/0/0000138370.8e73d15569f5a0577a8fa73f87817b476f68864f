WARNING:LINE_SPACING: Missing a blank line after declarations
#44: FILE: arch/powerpc/platforms/pseries/eeh.c:490:
+			struct pci_dev *dev = PCI_DN(dn)->pcidev;
+			if (dev && dev->driver)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 2'
#65: FILE: arch/powerpc/platforms/pseries/eeh.c:658:
+	if ((rets[0] == 2) || (rets[0] == 4))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 4'
#65: FILE: arch/powerpc/platforms/pseries/eeh.c:658:
+	if ((rets[0] == 2) || (rets[0] == 4))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#69: FILE: arch/powerpc/platforms/pseries/eeh.c:662:
+	eeh_send_failure_event (dn, dev, state, rets[2]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#78: FILE: arch/powerpc/platforms/pseries/eeh.c:967:
+#if 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:20:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:37:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:38:
+static inline const char * pcid_name (struct pci_dev *pdev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:38:
+static inline const char * pcid_name (struct pci_dev *pdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#137: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:48:
+static struct device_node * find_device_pe(struct device_node *dn)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:51:
+	while ((dn->parent) && PCI_DN(dn->parent) &&
+	      (PCI_DN(dn->parent)->eeh_mode & EEH_MODE_SUPPORTED)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#146: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:57:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:59:
+static void print_device_node_tree (struct pci_dn *pdn, int dent)

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:62:
+	int i;
+	if (!pdn) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#151: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:62:
+	if (!pdn) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:63:
+	for (i=0;i<dent; i++)
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#152: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:63:
+	for (i=0;i<dent; i++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#152: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:63:
+	for (i=0;i<dent; i++)
 	          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:64:
+		printk(" ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:65:
+	printk("dn=%s mode=%x \tcfg_addr=%x pe_addr=%x \tfull=%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:66:
+	printk("dn=%s mode=%x \tcfg_addr=%x pe_addr=%x \tfull=%s\n",
+		pdn->node->name, pdn->eeh_mode, pdn->eeh_config_addr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:70:
+	struct device_node *pc = pdn->node->child;
+	while (pc) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:77:
+/** $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:78:
+ * irq_in_use - return true if this irq is being used $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:84:
+   struct irq_desc *desc = irq_desc + irq;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:108:
+	if (irq_in_use (dev->irq)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->irq'
#197: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:108:
+	if (irq_in_use (dev->irq)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#199: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:110:
+		struct device_node *dn = pci_device_to_OF_node(dev);
+		PCI_DN(dn)->eeh_mode |= EEH_MODE_IRQ_DISABLED;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:118:
+	rc = driver->err_handler->error_detected (dev, pci_channel_io_frozen);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#208: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:119:
+	if (*res == PCIERR_RESULT_NONE) *res = rc;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#209: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:120:
+	if (*res == PCIERR_RESULT_NEED_RESET) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#210: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:121:
+	if (*res == PCIERR_RESULT_DISCONNECT &&
+	     rc == PCIERR_RESULT_NEED_RESET) *res = rc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:122:
+	if (*res == PCIERR_RESULT_DISCONNECT &&
+	     rc == PCIERR_RESULT_NEED_RESET) *res = rc;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:174:
+	if (irq_in_use (dev->irq)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->irq'
#263: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:174:
+	if (irq_in_use (dev->irq)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:176:
+		struct device_node *dn = pci_device_to_OF_node(dev);
+		PCI_DN(dn)->eeh_mode |= EEH_MODE_IRQ_DISABLED;

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#281: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:192:
+ * occuring to wild addresses (which usually happen due to
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:216:
+static void eeh_reset_device (struct pci_dn *pe_dn, struct pci_bus *bus)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#311: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:222:
+	 * Reconfigure bridges and devices */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:230:
+^I * hotplug shutdown scripts, e.g. ifdown for ethernet.  Yes, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:231:
+^I * this is a hack, but if we don't do this, and try to bring $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:232:
+^I * the device up before the scripts have taken it down, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:236:
+		ssleep (5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:246:
+void handle_eeh_events (struct eeh_event *event)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#346: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:257:
+		printk(KERN_ERR "EEH: Error: Cannot find partition endpoint for %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:258:
+^I^I        pci_name(event->dev));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:258:
+		printk(KERN_ERR "EEH: Error: Cannot find partition endpoint for %s\n",
+		        pci_name(event->dev));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#356: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:267:
+	 * two-step is needed to find the pci bus.. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:269:
+		frozen_bus = pcibios_find_pci_bus (frozen_dn->parent);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:272:
+		printk(KERN_ERR "EEH: Cannot find PCI bus for %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:273:
+^I^I        frozen_dn->full_name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:273:
+		printk(KERN_ERR "EEH: Cannot find PCI bus for %s\n",
+		        frozen_dn->full_name);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#366: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:277:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#368: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:279:
+	 * These are false alarms. Empty slots have no child dn. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->state == pci_channel_io_perm_failure'
#369: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:280:
+	if ((event->state == pci_channel_io_perm_failure) && (frozen_device == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frozen_device == NULL'
#369: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:280:
+	if ((event->state == pci_channel_io_perm_failure) && (frozen_device == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frozen_device"
#369: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:280:
+	if ((event->state == pci_channel_io_perm_failure) && (frozen_device == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:286:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#382: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:293:
+	if ((event->state == pci_channel_io_perm_failure) &&
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->state == pci_channel_io_perm_failure'
#382: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:293:
+	if ((event->state == pci_channel_io_perm_failure) &&
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->time_unavail <= 0'
#382: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:293:
+	if ((event->state == pci_channel_io_perm_failure) &&
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#384: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:295:
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000)))
 	                                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#396: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:307:
+		printk(KERN_ERR

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#397: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:308:
+		   "EEH: PCI device %s - %s has failed %d times \n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:311:
+^I^I^Ipci_name (frozen_pdn->pcidev), $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:311:
+			pci_name (frozen_pdn->pcidev), 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:312:
+^I^I^Ipcid_name(frozen_pdn->pcidev), $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#415: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:326:
+	printk(KERN_WARNING

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:329:
+^I^Ipci_name (frozen_pdn->pcidev), $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#418: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:329:
+		pci_name (frozen_pdn->pcidev), 

WARNING:LINE_SPACING: Missing a blank line after declarations
#428: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:339:
+	enum pcierr_result result = PCIERR_RESULT_NONE;
+	pci_walk_bus(frozen_bus, eeh_report_error, &result);

WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#432: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:343:
+	 * go down willingly, without panicing the system.
 	                              ^^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#434: FILE: arch/powerpc/platforms/pseries/eeh_driver.c:345:
+	if (result == PCIERR_RESULT_NONE) {
+		eeh_reset_device(frozen_pdn, frozen_bus);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: arch/powerpc/platforms/pseries/eeh_event.c:67:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: arch/powerpc/platforms/pseries/eeh_event.c:110:
+                            enum pci_channel_state state,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/powerpc/platforms/pseries/eeh_event.c:110:
+                            enum pci_channel_state state,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: include/asm-powerpc/eeh_event.h:49:
+                            enum pci_channel_state state,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: include/asm-powerpc/eeh_event.h:49:
+                            enum pci_channel_state state,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: include/asm-powerpc/eeh_event.h:53:
+void handle_eeh_events (struct eeh_event *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct eeh_event *' should also have an identifier name
#561: FILE: include/asm-powerpc/eeh_event.h:53:
+void handle_eeh_events (struct eeh_event *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#585: FILE: include/asm-powerpc/ppc-pci.h:60:
+ * Obtains the the EEH error details from the RTAS subsystem,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#588: FILE: include/asm-powerpc/ppc-pci.h:63:
+void eeh_slot_error_detail (struct pci_dn *pdn, int severity);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#605: FILE: include/asm-ppc64/eeh.h:34:
+#define EEH_MODE_SUPPORTED     (1<<0)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#605: FILE: include/asm-ppc64/eeh.h:34:
+#define EEH_MODE_SUPPORTED     (1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#606: FILE: include/asm-ppc64/eeh.h:35:
+#define EEH_MODE_NOCHECK       (1<<1)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#606: FILE: include/asm-ppc64/eeh.h:35:
+#define EEH_MODE_NOCHECK       (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#607: FILE: include/asm-ppc64/eeh.h:36:
+#define EEH_MODE_ISOLATED      (1<<2)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#607: FILE: include/asm-ppc64/eeh.h:36:
+#define EEH_MODE_ISOLATED      (1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#608: FILE: include/asm-ppc64/eeh.h:37:
+#define EEH_MODE_RECOVERING    (1<<3)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#608: FILE: include/asm-ppc64/eeh.h:37:
+#define EEH_MODE_RECOVERING    (1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#609: FILE: include/asm-ppc64/eeh.h:38:
+#define EEH_MODE_IRQ_DISABLED  (1<<4)
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#609: FILE: include/asm-ppc64/eeh.h:38:
+#define EEH_MODE_IRQ_DISABLED  (1<<4)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 41 warnings, 27 checks, 536 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
