WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
diff -dupr linux-2.6.7/arch/ia64/mm/discontig.c linux-2.6.7-mhp/arch/ia64/mm/discontig.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: arch/ia64/mm/discontig.c:262:
+                  int node)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: arch/ia64/mm/discontig.c:262:
+static int find_pernode_space(unsigned long start, unsigned long len,
+                  int node)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/ia64/mm/discontig.c:262:
+                  int node)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/ia64/mm/discontig.c:350:
+                 int node)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: arch/ia64/mm/discontig.c:350:
+static int free_node_bootmem(unsigned long start, unsigned long len,
+                 int node)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/ia64/mm/discontig.c:350:
+                 int node)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/ia64/mm/discontig.c:363:
+    unsigned long base, size, pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/ia64/mm/discontig.c:364:
+    struct bootmem_data *bdp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/ia64/mm/discontig.c:365:
+    pg_data_t *pdp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/ia64/mm/discontig.c:367:
+    pdp = mem_data[node].pgdat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/ia64/mm/discontig.c:368:
+    bdp = pdp->bdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/ia64/mm/discontig.c:371:
+    pages = bdp->node_low_pfn - (bdp->node_boot_start>>PAGE_SHIFT);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#142: FILE: arch/ia64/mm/discontig.c:371:
+    pages = bdp->node_low_pfn - (bdp->node_boot_start>>PAGE_SHIFT);
                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/ia64/mm/discontig.c:372:
+    size = bootmem_bootmap_pages(pages) << PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/ia64/mm/discontig.c:373:
+    base = __pa(bdp->node_bootmem_map);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/ia64/mm/discontig.c:374:
+    reserve_bootmem_node(pdp, base, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/ia64/mm/discontig.c:377:
+    size = mem_data[node].pernode_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/ia64/mm/discontig.c:378:
+    base = __pa(mem_data[node].pernode_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/ia64/mm/discontig.c:379:
+    reserve_bootmem_node(pdp, base, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/ia64/mm/discontig.c:393:
+    for (node = 0; node < numnodes; node++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/ia64/mm/discontig.c:394:
+        reserve_pernode_space_core(node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/ia64/mm/discontig.c:394:
+        reserve_pernode_space_core(node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/ia64/mm/discontig.c:705:
+    unsigned long max_dma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/ia64/mm/discontig.c:706:
+    unsigned long zones_size[MAX_NR_ZONES];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/ia64/mm/discontig.c:707:
+    unsigned long zholes_size[MAX_NR_ZONES];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/ia64/mm/discontig.c:708:
+    unsigned long max_gap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/ia64/mm/discontig.c:709:
+    unsigned long vstart, vend;$

CHECK:SPACING: No space is necessary after a cast
#201: FILE: arch/ia64/mm/discontig.c:711:
+    max_dma = virt_to_phys((void *) MAX_DMA_ADDRESS) >> PAGE_SHIFT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/ia64/mm/discontig.c:711:
+    max_dma = virt_to_phys((void *) MAX_DMA_ADDRESS) >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/ia64/mm/discontig.c:712:
+    max_gap = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/ia64/mm/discontig.c:714:
+    mem_data[nid].min_pfn = ~0UL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/ia64/mm/discontig.c:716:
+    count_node_pages(start, len, nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/ia64/mm/discontig.c:718:
+    memset(zones_size, 0, sizeof(zones_size));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/ia64/mm/discontig.c:719:
+    memset(zholes_size, 0, sizeof(zholes_size));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/ia64/mm/discontig.c:721:
+    num_physpages += mem_data[nid].num_physpages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/ia64/mm/discontig.c:723:
+    zones_size[ZONE_NORMAL] = mem_data[nid].max_pfn -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/ia64/mm/discontig.c:724:
+        mem_data[nid].min_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/ia64/mm/discontig.c:724:
+        mem_data[nid].min_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/ia64/mm/discontig.c:725:
+    zholes_size[ZONE_NORMAL] = mem_data[nid].max_pfn -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: arch/ia64/mm/discontig.c:726:
+        mem_data[nid].min_pfn -$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/ia64/mm/discontig.c:726:
+        mem_data[nid].min_pfn -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/ia64/mm/discontig.c:727:
+        mem_data[nid].num_physpages;  /* <- Is this valid? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/ia64/mm/discontig.c:727:
+        mem_data[nid].num_physpages;  /* <- Is this valid? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/ia64/mm/discontig.c:729:
+    vstart = PAGE_ALIGN(PAGE_OFFSET + start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/ia64/mm/discontig.c:730:
+    vend = (vstart + len) & PAGE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/ia64/mm/discontig.c:731:
+    create_mem_map_page_table(vstart, vend, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/ia64/mm/discontig.c:733:
+    free_area_init_node(nid, NODE_DATA(nid),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/ia64/mm/discontig.c:734:
+                vmem_map + mem_data[nid].min_pfn,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: arch/ia64/mm/discontig.c:734:
+    free_area_init_node(nid, NODE_DATA(nid),
+                vmem_map + mem_data[nid].min_pfn,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/ia64/mm/discontig.c:734:
+                vmem_map + mem_data[nid].min_pfn,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/ia64/mm/discontig.c:735:
+                zones_size, mem_data[nid].min_pfn, zholes_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/ia64/mm/discontig.c:735:
+                zones_size, mem_data[nid].min_pfn, zholes_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/ia64/mm/discontig.c:742:
+    *start = mem_data[nid].min_pfn << PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/ia64/mm/discontig.c:743:
+    *end = mem_data[nid].max_pfn << PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/ia64/mm/discontig.c:744:
+    printk("%s: start = %016lx, end = %016lx\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: arch/ia64/mm/discontig.c:744:
+    printk("%s: start = %016lx, end = %016lx\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/ia64/mm/discontig.c:745:
+        __FUNCTION__, *start, *end);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: arch/ia64/mm/discontig.c:745:
+    printk("%s: start = %016lx, end = %016lx\n",
+        __FUNCTION__, *start, *end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/ia64/mm/discontig.c:745:
+        __FUNCTION__, *start, *end);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#235: FILE: arch/ia64/mm/discontig.c:745:
+        __FUNCTION__, *start, *end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/ia64/mm/discontig.c:751:
+    int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/ia64/mm/discontig.c:752:
+    int cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/ia64/mm/discontig.c:753:
+    unsigned long start, end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/ia64/mm/discontig.c:754:
+    unsigned long prev_min_low_pfn, prev_max_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/ia64/mm/discontig.c:755:
+    unsigned long pernode, pernodesize, map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/ia64/mm/discontig.c:756:
+    struct bootmem_data *bdp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/ia64/mm/discontig.c:757:
+    pg_data_t **pgdat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/ia64/mm/discontig.c:761:
+    prev_min_low_pfn = min_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/ia64/mm/discontig.c:762:
+    prev_max_low_pfn = max_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/ia64/mm/discontig.c:765:
+    get_new_node_memory_info(nid, &start, &end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/ia64/mm/discontig.c:767:
+    memset(&mem_data[nid], 0, sizeof(struct early_node_data));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/ia64/mm/discontig.c:769:
+    build_node_maps(start, end - start, nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/ia64/mm/discontig.c:770:
+    find_pernode_space(start, end - start, nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/ia64/mm/discontig.c:772:
+    bdp = &mem_data[nid].bootmem_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/ia64/mm/discontig.c:773:
+    pernode = mem_data[nid].pernode_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/ia64/mm/discontig.c:774:
+    pernodesize = mem_data[nid].pernode_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/ia64/mm/discontig.c:775:
+    map = pernode + pernodesize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/ia64/mm/discontig.c:777:
+    if (!pernode) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: arch/ia64/mm/discontig.c:778:
+        printk("space for the new node %d could not be allocated!",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/ia64/mm/discontig.c:778:
+        printk("space for the new node %d could not be allocated!",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: arch/ia64/mm/discontig.c:778:
+        printk("space for the new node %d could not be allocated!",

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/ia64/mm/discontig.c:779:
+            nid);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: arch/ia64/mm/discontig.c:779:
+        printk("space for the new node %d could not be allocated!",
+            nid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/ia64/mm/discontig.c:779:
+            nid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: arch/ia64/mm/discontig.c:780:
+        min_low_pfn = prev_min_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/ia64/mm/discontig.c:780:
+        min_low_pfn = prev_min_low_pfn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/ia64/mm/discontig.c:781:
+        max_low_pfn = prev_max_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/ia64/mm/discontig.c:781:
+        max_low_pfn = prev_max_low_pfn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/ia64/mm/discontig.c:782:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/ia64/mm/discontig.c:782:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/ia64/mm/discontig.c:783:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/ia64/mm/discontig.c:785:
+    init_bootmem_node(mem_data[nid].pgdat,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/ia64/mm/discontig.c:786:
+            map>>PAGE_SHIFT,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: arch/ia64/mm/discontig.c:786:
+    init_bootmem_node(mem_data[nid].pgdat,
+            map>>PAGE_SHIFT,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/ia64/mm/discontig.c:786:
+            map>>PAGE_SHIFT,$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#277: FILE: arch/ia64/mm/discontig.c:786:
+            map>>PAGE_SHIFT,
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/ia64/mm/discontig.c:787:
+            bdp->node_boot_start>>PAGE_SHIFT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/ia64/mm/discontig.c:787:
+            bdp->node_boot_start>>PAGE_SHIFT,$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#278: FILE: arch/ia64/mm/discontig.c:787:
+            bdp->node_boot_start>>PAGE_SHIFT,
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/ia64/mm/discontig.c:788:
+            bdp->node_low_pfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/ia64/mm/discontig.c:788:
+            bdp->node_low_pfn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: arch/ia64/mm/discontig.c:790:
+            free_node_bootmem(start, end - start, nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/ia64/mm/discontig.c:790:
+            free_node_bootmem(start, end - start, nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/ia64/mm/discontig.c:792:
+    reserve_pernode_space_core(nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: arch/ia64/mm/discontig.c:795:
+    for(cpu = 0; cpu < NR_CPUS; cpu++) {$

ERROR:SPACING: space required before the open parenthesis '('
#286: FILE: arch/ia64/mm/discontig.c:795:
+    for(cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#286: FILE: arch/ia64/mm/discontig.c:795:
+    for(cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: arch/ia64/mm/discontig.c:796:
+        per_cpu(cpu_info, cpu).node_data->pg_data_ptrs[nid]$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: arch/ia64/mm/discontig.c:796:
+        per_cpu(cpu_info, cpu).node_data->pg_data_ptrs[nid]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/ia64/mm/discontig.c:797:
+            = mem_data[nid].pgdat;$

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#288: FILE: arch/ia64/mm/discontig.c:797:
+        per_cpu(cpu_info, cpu).node_data->pg_data_ptrs[nid]
+            = mem_data[nid].pgdat;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/ia64/mm/discontig.c:797:
+            = mem_data[nid].pgdat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: arch/ia64/mm/discontig.c:798:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: arch/ia64/mm/discontig.c:800:
+    max_pfn = max_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/ia64/mm/discontig.c:802:
+    paging_init_for_new_node(start, end - start, nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: arch/ia64/mm/discontig.c:804:
+    NODE_DATA(nid)->removable = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/ia64/mm/discontig.c:806:
+    for(pgdat = &pgdat_list; *pgdat; pgdat = &(*pgdat)->pgdat_next)$

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: arch/ia64/mm/discontig.c:806:
+    for(pgdat = &pgdat_list; *pgdat; pgdat = &(*pgdat)->pgdat_next)

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: arch/ia64/mm/discontig.c:807:
+        if ((*pgdat)->node_id > nid) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/ia64/mm/discontig.c:807:
+        if ((*pgdat)->node_id > nid) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#298: FILE: arch/ia64/mm/discontig.c:807:
+        if ((*pgdat)->node_id > nid) {
+            NODE_DATA(nid)->pgdat_next = *pgdat;

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/ia64/mm/discontig.c:808:
+            NODE_DATA(nid)->pgdat_next = *pgdat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/ia64/mm/discontig.c:808:
+            NODE_DATA(nid)->pgdat_next = *pgdat;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/ia64/mm/discontig.c:809:
+            *pgdat = NODE_DATA(nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/ia64/mm/discontig.c:809:
+            *pgdat = NODE_DATA(nid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/ia64/mm/discontig.c:810:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/ia64/mm/discontig.c:810:
+            break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: arch/ia64/mm/discontig.c:811:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/ia64/mm/discontig.c:811:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/ia64/mm/discontig.c:813:
+    if (*pgdat == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pgdat"
#304: FILE: arch/ia64/mm/discontig.c:813:
+    if (*pgdat == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/ia64/mm/discontig.c:814:
+        *pgdat = NODE_DATA(nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/ia64/mm/discontig.c:814:
+        *pgdat = NODE_DATA(nid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/ia64/mm/discontig.c:815:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/ia64/mm/discontig.c:816:
+        struct zone *z;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: arch/ia64/mm/discontig.c:816:
+        struct zone *z;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/ia64/mm/discontig.c:817:
+        int lim=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/ia64/mm/discontig.c:817:
+        int lim=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#308: FILE: arch/ia64/mm/discontig.c:817:
+        int lim=0;
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/ia64/mm/discontig.c:818:
+        printk("%s: zone = ", __FUNCTION__);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: arch/ia64/mm/discontig.c:818:
+        int lim=0;
+        printk("%s: zone = ", __FUNCTION__);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/ia64/mm/discontig.c:818:
+        printk("%s: zone = ", __FUNCTION__);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#309: FILE: arch/ia64/mm/discontig.c:818:
+        printk("%s: zone = ", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#309: FILE: arch/ia64/mm/discontig.c:818:
+        printk("%s: zone = ", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/ia64/mm/discontig.c:819:
+        for_each_zone (z) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/ia64/mm/discontig.c:819:
+        for_each_zone (z) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#310: FILE: arch/ia64/mm/discontig.c:819:
+        for_each_zone (z) {
+            printk("%p ", z);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#310: FILE: arch/ia64/mm/discontig.c:819:
+        for_each_zone (z) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/ia64/mm/discontig.c:820:
+            printk("%p ", z);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/ia64/mm/discontig.c:820:
+            printk("%p ", z);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#311: FILE: arch/ia64/mm/discontig.c:820:
+            printk("%p ", z);

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/ia64/mm/discontig.c:821:
+            if(lim++ > 10)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/ia64/mm/discontig.c:821:
+            if(lim++ > 10)$

ERROR:SPACING: space required before the open parenthesis '('
#312: FILE: arch/ia64/mm/discontig.c:821:
+            if(lim++ > 10)

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/ia64/mm/discontig.c:822:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/ia64/mm/discontig.c:822:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: arch/ia64/mm/discontig.c:823:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: arch/ia64/mm/discontig.c:823:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: arch/ia64/mm/discontig.c:824:
+        printk("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/ia64/mm/discontig.c:824:
+        printk("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: arch/ia64/mm/discontig.c:824:
+        printk("\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/ia64/mm/discontig.c:825:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: arch/ia64/mm/discontig.c:827:
+    for (i = 0; i < MAX_NR_ZONES; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/ia64/mm/discontig.c:828:
+        struct zone *z;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/ia64/mm/discontig.c:828:
+        struct zone *z;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/ia64/mm/discontig.c:829:
+        struct page *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/ia64/mm/discontig.c:829:
+        struct page *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/ia64/mm/discontig.c:831:
+        z = &NODE_DATA(nid)->node_zones[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/ia64/mm/discontig.c:831:
+        z = &NODE_DATA(nid)->node_zones[i];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/ia64/mm/discontig.c:833:
+        for (j = 0; j < z->spanned_pages; j++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/ia64/mm/discontig.c:833:
+        for (j = 0; j < z->spanned_pages; j++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#324: FILE: arch/ia64/mm/discontig.c:833:
+        for (j = 0; j < z->spanned_pages; j++) {
+            p = &z->zone_mem_map[j];

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: arch/ia64/mm/discontig.c:834:
+            p = &z->zone_mem_map[j];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/ia64/mm/discontig.c:834:
+            p = &z->zone_mem_map[j];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/ia64/mm/discontig.c:835:
+            ClearPageReserved(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/ia64/mm/discontig.c:835:
+            ClearPageReserved(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: arch/ia64/mm/discontig.c:836:
+            set_page_count(p, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: arch/ia64/mm/discontig.c:836:
+            set_page_count(p, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: arch/ia64/mm/discontig.c:837:
+            __free_page(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/ia64/mm/discontig.c:837:
+            __free_page(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: arch/ia64/mm/discontig.c:838:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/ia64/mm/discontig.c:838:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/ia64/mm/discontig.c:839:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/ia64/mm/discontig.c:840:
+    kswapd_start_one(NODE_DATA(nid));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/ia64/mm/discontig.c:841:
+    setup_per_zone_pages_min();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/ia64/mm/init.c:450:
+        if(system_state == SYSTEM_RUNNING) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/ia64/mm/init.c:450:
+        if(system_state == SYSTEM_RUNNING) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#346: FILE: arch/ia64/mm/init.c:450:
+        if(system_state == SYSTEM_RUNNING) {
+            unsigned long pstart, pend;

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: arch/ia64/mm/init.c:450:
+        if(system_state == SYSTEM_RUNNING) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/ia64/mm/init.c:451:
+            unsigned long pstart, pend;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/ia64/mm/init.c:451:
+            unsigned long pstart, pend;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/ia64/mm/init.c:452:
+            get_new_node_memory_info(nid, &pstart, &pend);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: arch/ia64/mm/init.c:452:
+            unsigned long pstart, pend;
+            get_new_node_memory_info(nid, &pstart, &pend);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/ia64/mm/init.c:452:
+            get_new_node_memory_info(nid, &pstart, &pend);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/ia64/mm/init.c:453:
+            pstart = PAGE_ALIGN(pstart + PAGE_OFFSET);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/ia64/mm/init.c:453:
+            pstart = PAGE_ALIGN(pstart + PAGE_OFFSET);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/ia64/mm/init.c:454:
+            pend = (pend + PAGE_OFFSET) & PAGE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/ia64/mm/init.c:454:
+            pend = (pend + PAGE_OFFSET) & PAGE_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/ia64/mm/init.c:455:
+            virtual_memmap_init(pstart, pend, &args);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/ia64/mm/init.c:455:
+            virtual_memmap_init(pstart, pend, &args);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/ia64/mm/init.c:456:
+        } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/ia64/mm/init.c:456:
+        } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 9)
#352: FILE: arch/ia64/mm/init.c:456:
+        } else
[...]
          efi_memmap_walk(virtual_memmap_init, &args);

CHECK:BRACES: Unbalanced braces around else statement
#352: FILE: arch/ia64/mm/init.c:456:
+        } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: include/linux/bootmem.h:42:
+extern unsigned long bootmem_bootmap_pages (unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: include/linux/bootmem.h:42:
+extern unsigned long bootmem_bootmap_pages (unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#383: FILE: include/linux/bootmem.h:66:
+extern unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long freepfn, unsigned long startpfn, unsigned long endpfn);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#383: FILE: include/linux/bootmem.h:66:
+extern unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long freepfn, unsigned long startpfn, unsigned long endpfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: include/linux/bootmem.h:66:
+extern unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long freepfn, unsigned long startpfn, unsigned long endpfn);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: include/linux/bootmem.h:67:
+extern void reserve_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: include/linux/bootmem.h:67:
+extern void reserve_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, unsigned long size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: include/linux/bootmem.h:68:
+extern void free_bootmem_node (pg_data_t *pgdat, unsigned long addr, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: include/linux/bootmem.h:68:
+extern void free_bootmem_node (pg_data_t *pgdat, unsigned long addr, unsigned long size);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#386: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#386: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: include/linux/bootmem.h:69:
+extern void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: include/linux/bootmem.h:71:
+extern unsigned long __init free_all_bootmem_node (pg_data_t *pgdat);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/bootmem.h:71:
+extern unsigned long __init free_all_bootmem_node (pg_data_t *pgdat);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#400: FILE: mm/bootmem.c:32:
+unsigned long bootmem_bootmap_pages (unsigned long pages)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#412: FILE: mm/bootmem.c:50:
+static unsigned long init_bootmem_core (pg_data_t *pgdat,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: mm/bootmem.c:51:
+static unsigned long init_bootmem_core (pg_data_t *pgdat,
+    unsigned long mapstart, unsigned long start, unsigned long end)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: mm/bootmem.c:51:
+    unsigned long mapstart, unsigned long start, unsigned long end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: mm/bootmem.c:61:
+    if (system_state != SYSTEM_RUNNING) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: mm/bootmem.c:63:
+        pgdat->pgdat_next = pgdat_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: mm/bootmem.c:63:
+        pgdat->pgdat_next = pgdat_list;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: mm/bootmem.c:64:
+        pgdat_list = pgdat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: mm/bootmem.c:64:
+        pgdat_list = pgdat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: mm/bootmem.c:66:
+    } else$

CHECK:BRACES: Unbalanced braces around else statement
#430: FILE: mm/bootmem.c:66:
+    } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: mm/bootmem.c:67:
+        pgdat->pgdat_next = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: mm/bootmem.c:67:
+        pgdat->pgdat_next = NULL;$

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#477: FILE: mm/bootmem.c:331:
+unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long freepfn, unsigned long startpfn, unsigned long endpfn)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: mm/bootmem.c:331:
+unsigned long init_bootmem_node (pg_data_t *pgdat, unsigned long freepfn, unsigned long startpfn, unsigned long endpfn)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#486: FILE: mm/bootmem.c:340:
+void reserve_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, unsigned long size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: mm/bootmem.c:349:
+void free_bootmem_node (pg_data_t *pgdat, unsigned long physaddr, unsigned long size)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#507: FILE: mm/bootmem.c:407:
+void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: mm/bootmem.c:407:
+void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: mm/bootmem.c:407:
+void * __alloc_bootmem_node (pg_data_t *pgdat, unsigned long size, unsigned long align, unsigned long goal)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 158 warnings, 21 checks, 424 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265724.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
