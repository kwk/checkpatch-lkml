WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
It reveals various read-ahead activities/events, and is vital to the testing.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# cat /debugfs/readahead

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'contexta' may be misspelled - perhaps 'context'?
#95: FILE: mm/readahead.c:102:
+	"contexta",
 	 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: mm/readahead.c:127:
+static unsigned long ra_event_count[RA_CLASS_END+1][RA_EVENT_END][2];
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: mm/readahead.c:130:
+static inline void ra_account(struct file_ra_state *ra,
+				enum ra_event e, int pages)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#134: FILE: mm/readahead.c:141:
+	BUG_ON(c > RA_CLASS_END);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#145: FILE: mm/readahead.c:152:
+	static char event_fmt[] = "%-16s";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#146: FILE: mm/readahead.c:153:
+	static char class_fmt[] = "%11s";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#147: FILE: mm/readahead.c:154:
+	static char item_fmt[] = "%11lu";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#148: FILE: mm/readahead.c:155:
+	static char percent_format[] = "%10lu%%";

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#149: FILE: mm/readahead.c:156:
+	static char *table_name[] = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: mm/readahead.c:181:
+				seq_printf(s, item_fmt,
+						ra_event_count[c][e][i]);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#185: FILE: mm/readahead.c:192:
+	seq_printf(s, event_fmt, "random_rate");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: mm/readahead.c:195:
+		seq_printf(s, percent_format,
+			(ra_event_count[c][RA_EVENT_READRANDOM][0] * 100) /

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#193: FILE: mm/readahead.c:200:
+	seq_printf(s, event_fmt, "ra_hit_rate");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: mm/readahead.c:203:
+		seq_printf(s, percent_format,
+			(ra_event_count[c][RA_EVENT_READAHEAD_HIT][1] * 100) /

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#200: FILE: mm/readahead.c:207:
+	seq_printf(s, event_fmt, "la_hit_rate");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: mm/readahead.c:210:
+		seq_printf(s, percent_format,
+			(ra_event_count[c][RA_EVENT_LOOKAHEAD_HIT][0] * 100) /

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#207: FILE: mm/readahead.c:214:
+	seq_printf(s, event_fmt, "avg_ra_size");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: mm/readahead.c:217:
+		seq_printf(s, item_fmt,
+			(ra_event_count[c][RA_EVENT_READAHEAD][1] +

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#215: FILE: mm/readahead.c:222:
+	seq_printf(s, event_fmt, "avg_la_size");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: mm/readahead.c:225:
+		seq_printf(s, item_fmt,
+			(ra_event_count[c][RA_EVENT_LOOKAHEAD][1] +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: mm/readahead.c:241:
+static ssize_t ra_debug_write(struct file *file, const char __user *buf,
+				size_t size, loff_t *offset)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#241: FILE: mm/readahead.c:248:
+static struct file_operations ra_debug_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: mm/readahead.c:260:
+	readahead_dentry = debugfs_create_file("readahead",
+					0644, NULL, NULL, &ra_debug_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: mm/readahead.c:274:
+static inline void ra_account(struct file_ra_state *ra,
+				enum ra_event e, int pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: mm/readahead.c:1816:
+			ra_account(ra, RA_EVENT_IO_CONGESTION,
+							end_index - index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: mm/readahead.c:1911:
+			ra_account(ra, RA_EVENT_IO_BLOCK,
+					ra->readahead_index - page->index);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 15 warnings, 13 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136422.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
