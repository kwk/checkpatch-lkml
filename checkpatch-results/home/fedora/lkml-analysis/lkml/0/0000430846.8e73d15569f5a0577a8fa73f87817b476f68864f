WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#73: 
diff -urNp 2.5.37-node-affine/kernel/sched.c 2.5.37-node-affine-mon/kernel/sched.c

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#87: FILE: kernel/sched.c:687:
+};
+/* load balancing history ring */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: kernel/sched.c:702:
+};
+/* initial load balancing history ring */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#113: FILE: kernel/sched.c:713:
+	int next=(lb_ring[cpu].curr + 1 ) % HISTORY_RING_SIZE;
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#113: FILE: kernel/sched.c:713:
+	int next=(lb_ring[cpu].curr + 1 ) % HISTORY_RING_SIZE;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: kernel/sched.c:724:
+	int i, next=(ilb_ring[cpu].curr + 1 ) % HISTORY_RING_SIZE;
 	           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#124: FILE: kernel/sched.c:724:
+	int i, next=(ilb_ring[cpu].curr + 1 ) % HISTORY_RING_SIZE;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#129: FILE: kernel/sched.c:729:
+	for (i=0; i<numpools; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#129: FILE: kernel/sched.c:729:
+	for (i=0; i<numpools; i++)
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: kernel/sched.c:735:
+int lb_ring_read_proc(char *page, char **start, off_t off, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: kernel/sched.c:736:
+int lb_ring_read_proc(char *page, char **start, off_t off, 
+			int count, int *eof, void *data)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#139: FILE: kernel/sched.c:739:
+	char *buff=page;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#140: FILE: kernel/sched.c:740:
+	int cpu=(int)data;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: kernel/sched.c:742:
+	buff += sprintf(buff,"     tick      pid  from_cpu\n");
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#144: FILE: kernel/sched.c:744:
+	for (i=0; i<HISTORY_RING_SIZE; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#144: FILE: kernel/sched.c:744:
+	for (i=0; i<HISTORY_RING_SIZE; i++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: kernel/sched.c:746:
+		buff += sprintf(buff,"%12ld %6d %2d\n",
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#151: FILE: kernel/sched.c:751:
+	len = buff-page;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: kernel/sched.c:752:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#152: FILE: kernel/sched.c:752:
+	if (len <= off+count) *eof = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#154: FILE: kernel/sched.c:754:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#154: FILE: kernel/sched.c:754:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#155: FILE: kernel/sched.c:755:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#155: FILE: kernel/sched.c:755:
+	if (len<0) len = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: kernel/sched.c:760:
+int ilb_ring_read_proc(char *page, char **start, off_t off, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: kernel/sched.c:761:
+int ilb_ring_read_proc(char *page, char **start, off_t off, 
+			int count, int *eof, void *data)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: kernel/sched.c:764:
+	char *buff=page;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#165: FILE: kernel/sched.c:765:
+	int cpu=(int)data;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: kernel/sched.c:767:
+	buff += sprintf(buff,"     tick      pid node node_loads\n");
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: kernel/sched.c:769:
+	for (i=0; i<HISTORY_RING_SIZE; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#169: FILE: kernel/sched.c:769:
+	for (i=0; i<HISTORY_RING_SIZE; i++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#171: FILE: kernel/sched.c:771:
+		buff += sprintf(buff,"%12ld %6d %2d",
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#175: FILE: kernel/sched.c:775:
+		for (j=0; j<numpools; j++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#175: FILE: kernel/sched.c:775:
+		for (j=0; j<numpools; j++)
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: kernel/sched.c:776:
+			buff += sprintf(buff," %3d",
 			                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: kernel/sched.c:778:
+		buff += sprintf(buff,"\n");
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#180: FILE: kernel/sched.c:780:
+	len = buff-page;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#181: FILE: kernel/sched.c:781:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#181: FILE: kernel/sched.c:781:
+	if (len <= off+count) *eof = 1;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#183: FILE: kernel/sched.c:783:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#183: FILE: kernel/sched.c:783:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#184: FILE: kernel/sched.c:784:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#184: FILE: kernel/sched.c:784:
+	if (len<0) len = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: kernel/sched.c:789:
+int rq_load_read_proc(char *page, char **start, off_t off, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: kernel/sched.c:790:
+int rq_load_read_proc(char *page, char **start, off_t off, 
+			int count, int *eof, void *data)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#194: FILE: kernel/sched.c:794:
+	char *buff=page;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#195: FILE: kernel/sched.c:795:
+	int cpu=(int)data;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#197: FILE: kernel/sched.c:797:
+	rq=cpu_rq(cpu);
 	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: kernel/sched.c:798:
+	buff += sprintf(buff,"cpu %d : ",cpu);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: kernel/sched.c:798:
+	buff += sprintf(buff,"cpu %d : ",cpu);
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: kernel/sched.c:799:
+	buff += sprintf(buff,"curr: %d %s\n",rq->curr->pid,rq->curr->comm);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: kernel/sched.c:799:
+	buff += sprintf(buff,"curr: %d %s\n",rq->curr->pid,rq->curr->comm);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: kernel/sched.c:799:
+	buff += sprintf(buff,"curr: %d %s\n",rq->curr->pid,rq->curr->comm);
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: kernel/sched.c:800:
+	buff += sprintf(buff,"running uninter nr_homenode\n");
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: kernel/sched.c:801:
+	buff += sprintf(buff,"%7d %7d",rq->nr_running,rq->nr_uninterruptible);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: kernel/sched.c:801:
+	buff += sprintf(buff,"%7d %7d",rq->nr_running,rq->nr_uninterruptible);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: kernel/sched.c:801:
+	buff += sprintf(buff,"%7d %7d",rq->nr_running,rq->nr_uninterruptible);
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#202: FILE: kernel/sched.c:802:
+	for (i=0; i<numpools; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#202: FILE: kernel/sched.c:802:
+	for (i=0; i<numpools; i++)
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: kernel/sched.c:803:
+		buff += sprintf(buff," %4d",rq->nr_homenode[i]);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: kernel/sched.c:803:
+		buff += sprintf(buff," %4d",rq->nr_homenode[i]);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#204: FILE: kernel/sched.c:804:
+	buff += sprintf(buff,"\n");
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#206: FILE: kernel/sched.c:806:
+	len = buff-page;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#207: FILE: kernel/sched.c:807:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#207: FILE: kernel/sched.c:807:
+	if (len <= off+count) *eof = 1;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#209: FILE: kernel/sched.c:809:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#209: FILE: kernel/sched.c:809:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#210: FILE: kernel/sched.c:810:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#210: FILE: kernel/sched.c:810:
+	if (len<0) len = 0;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#222: FILE: kernel/sched.c:822:
+	sched = proc_mkdir("sched",&proc_root);
 	                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#222: FILE: kernel/sched.c:822:
+	sched = proc_mkdir("sched",&proc_root);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#223: FILE: kernel/sched.c:823:
+	hist = proc_mkdir("history",sched);
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#224: FILE: kernel/sched.c:824:
+	for (i=0; i<smp_num_cpus; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#224: FILE: kernel/sched.c:824:
+	for (i=0; i<smp_num_cpus; i++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#225: FILE: kernel/sched.c:825:
+		sprintf(name,"lb%02d",i);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#225: FILE: kernel/sched.c:825:
+		sprintf(name,"lb%02d",i);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: kernel/sched.c:826:
+		p = create_proc_entry(name,S_IRUGO,hist);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: kernel/sched.c:826:
+		p = create_proc_entry(name,S_IRUGO,hist);
 		                                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#226: FILE: kernel/sched.c:826:
+		p = create_proc_entry(name,S_IRUGO,hist);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: kernel/sched.c:831:
+		sprintf(name,"ilb%02d",i);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: kernel/sched.c:831:
+		sprintf(name,"ilb%02d",i);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: kernel/sched.c:832:
+		p = create_proc_entry(name,S_IRUGO,hist);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: kernel/sched.c:832:
+		p = create_proc_entry(name,S_IRUGO,hist);
 		                                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#232: FILE: kernel/sched.c:832:
+		p = create_proc_entry(name,S_IRUGO,hist);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: kernel/sched.c:838:
+	load = proc_mkdir("load",sched);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#239: FILE: kernel/sched.c:839:
+	for (i=0; i<smp_num_cpus; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#239: FILE: kernel/sched.c:839:
+	for (i=0; i<smp_num_cpus; i++) {
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: kernel/sched.c:840:
+		sprintf(name,"rq%02d",i);
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: kernel/sched.c:840:
+		sprintf(name,"rq%02d",i);
 		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: kernel/sched.c:841:
+		p = create_proc_entry(name,S_IRUGO,load);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: kernel/sched.c:841:
+		p = create_proc_entry(name,S_IRUGO,load);
 		                                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#241: FILE: kernel/sched.c:841:
+		p = create_proc_entry(name,S_IRUGO,load);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#265: FILE: kernel/sched.c:2224:
+	int n, best_node=0, min_load, min_pool=p->node;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#265: FILE: kernel/sched.c:2224:
+	int n, best_node=0, min_load, min_pool=p->node;
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#276: FILE: kernel/sched.c:2252:
+		load[pool] = (100*load[pool])/pool_nr_cpus[pool];
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#276: FILE: kernel/sched.c:2252:
+		load[pool] = (100*load[pool])/pool_nr_cpus[pool];
 		                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'load[pool] < min_load'
#277: FILE: kernel/sched.c:2253:
+		if ((load[pool] < min_load) && (pool_mask[pool] & mask)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 4 warnings, 14 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430846.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
