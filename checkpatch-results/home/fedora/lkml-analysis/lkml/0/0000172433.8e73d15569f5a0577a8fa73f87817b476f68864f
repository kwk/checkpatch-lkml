WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#84: FILE: arch/i386/kernel/acpi/boot.c:189:
+		printk(KERN_ERR PREFIX "MMCONFIG has no entries\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#92: FILE: arch/i386/kernel/acpi/boot.c:196:
+		printk(KERN_WARNING PREFIX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#100: FILE: arch/i386/kernel/acpi/boot.c:204:
+			printk(KERN_ERR PREFIX

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config_num == 0'
#155: FILE: arch/i386/pci/mmconfig.c:104:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].base_address == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config == NULL'
#155: FILE: arch/i386/pci/mmconfig.c:104:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].base_address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config[0].base_address == 0'
#155: FILE: arch/i386/pci/mmconfig.c:104:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].base_address == 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_mmcfg_config"
#156: FILE: arch/i386/pci/mmconfig.c:105:
+	    (pci_mmcfg_config == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config_num == 0'
#189: FILE: arch/x86_64/pci/mmconfig.c:80:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].base_address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config == NULL'
#189: FILE: arch/x86_64/pci/mmconfig.c:80:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].base_address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config[0].base_address == 0'
#189: FILE: arch/x86_64/pci/mmconfig.c:80:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].base_address == 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_mmcfg_config"
#190: FILE: arch/x86_64/pci/mmconfig.c:81:
+	    (pci_mmcfg_config == NULL) ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#207: FILE: arch/x86_64/pci/mmconfig.c:99:
+	printk(KERN_INFO "PCI: Using MMCONFIG at %x\n", pci_mmcfg_config[0].base_address);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#226: FILE: include/linux/acpi.h:353:
+} __attribute__ ((packed));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: include/linux/acpi.h:402:
+int acpi_parse_mcfg (unsigned long phys_addr, unsigned long size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 8 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
