WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> > I haven't had time to read and think about everything you guys discussed,

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#112: 
--- a/drivers/block/ll_rw_blk.c	Wed Jul  2 16:57:17 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: drivers/block/ll_rw_blk.c:184:
+		printk("blk_cleanup_queue: leaked sectors (%d)\n", atomic_read(&q->nr_sectors));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/block/ll_rw_blk.c:230:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/block/ll_rw_blk.c:230:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: drivers/block/ll_rw_blk.c:231:
+void blk_queue_throttle_sectors(request_queue_t * q, int active)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#160: FILE: drivers/block/ll_rw_blk.c:383:
+		if (!list_empty(&q->queue_head)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/block/ll_rw_blk.c:384:
+^I^I^I/* we don't want merges later on to come in $

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: drivers/block/ll_rw_blk.c:393:
+				struct request *rq;
+				rq = blkdev_entry_prev_request(&q->queue_head),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#170: FILE: drivers/block/ll_rw_blk.c:393:
+				rq = blkdev_entry_prev_request(&q->queue_head),
+				rq->elevator_sequence = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/block/ll_rw_blk.c:441:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: drivers/block/ll_rw_blk.c:441:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/block/ll_rw_blk.c:441:
+ ^I^Ilist_add(&rq->queue, &q->rq.free);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/block/ll_rw_blk.c:442:
+ ^I^Iq->rq.count++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: drivers/block/ll_rw_blk.c:442:
+ ^I^Iq->rq.count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/block/ll_rw_blk.c:442:
+ ^I^Iq->rq.count++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: drivers/block/ll_rw_blk.c:447:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: drivers/block/ll_rw_blk.c:447:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/block/ll_rw_blk.c:447:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/block/ll_rw_blk.c:448:
+ ^I * Wakeup waiters after both one quarter of the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: drivers/block/ll_rw_blk.c:448:
+ ^I * Wakeup waiters after both one quarter of the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: drivers/block/ll_rw_blk.c:449:
+ ^I * max-in-fligh queue and one quarter of the requests$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: drivers/block/ll_rw_blk.c:449:
+ ^I * max-in-fligh queue and one quarter of the requests$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/block/ll_rw_blk.c:450:
+ ^I * are available again.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: drivers/block/ll_rw_blk.c:450:
+ ^I * are available again.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/block/ll_rw_blk.c:451:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: drivers/block/ll_rw_blk.c:451:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/block/ll_rw_blk.c:456:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#216: FILE: drivers/block/ll_rw_blk.c:456:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/block/ll_rw_blk.c:456:
+ ^Iq->batch_sectors = max_queue_sectors / 4;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/block/ll_rw_blk.c:457:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/block/ll_rw_blk.c:457:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/block/ll_rw_blk.c:458:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: drivers/block/ll_rw_blk.c:458:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/block/ll_rw_blk.c:458:
+ ^Iq->max_queue_sectors = max_queue_sectors;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: drivers/block/ll_rw_blk.c:459:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/block/ll_rw_blk.c:459:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/block/ll_rw_blk.c:460:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: drivers/block/ll_rw_blk.c:460:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/block/ll_rw_blk.c:460:
+ ^IBUG_ON(!q->batch_sectors);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#220: FILE: drivers/block/ll_rw_blk.c:460:
+ 	BUG_ON(!q->batch_sectors);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: drivers/block/ll_rw_blk.c:461:
+ ^Iatomic_set(&q->nr_sectors, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: drivers/block/ll_rw_blk.c:461:
+ ^Iatomic_set(&q->nr_sectors, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/block/ll_rw_blk.c:461:
+ ^Iatomic_set(&q->nr_sectors, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/block/ll_rw_blk.c:471:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: drivers/block/ll_rw_blk.c:471:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/block/ll_rw_blk.c:471:
+ ^Iint nr_requests, max_queue_sectors = MAX_QUEUE_SECTORS;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: drivers/block/ll_rw_blk.c:472:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/block/ll_rw_blk.c:472:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/block/ll_rw_blk.c:473:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: drivers/block/ll_rw_blk.c:473:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/block/ll_rw_blk.c:473:
+ ^IINIT_LIST_HEAD(&q->rq.free);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/block/ll_rw_blk.c:479:
+ ^Inr_requests = MAX_NR_REQUESTS;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/block/ll_rw_blk.c:479:
+ ^Inr_requests = MAX_NR_REQUESTS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/block/ll_rw_blk.c:479:
+ ^Inr_requests = MAX_NR_REQUESTS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/block/ll_rw_blk.c:480:
+ ^Iif (megs < 30) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#249: FILE: drivers/block/ll_rw_blk.c:480:
+ ^Iif (megs < 30) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/block/ll_rw_blk.c:480:
+ ^Iif (megs < 30) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: drivers/block/ll_rw_blk.c:481:
+  ^I^Inr_requests /= 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: drivers/block/ll_rw_blk.c:481:
+  ^I^Inr_requests /= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/block/ll_rw_blk.c:481:
+  ^I^Inr_requests /= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/block/ll_rw_blk.c:482:
+ ^I^Imax_queue_sectors /= 2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/block/ll_rw_blk.c:482:
+ ^I^Imax_queue_sectors /= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/block/ll_rw_blk.c:482:
+ ^I^Imax_queue_sectors /= 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/block/ll_rw_blk.c:483:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: drivers/block/ll_rw_blk.c:483:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/block/ll_rw_blk.c:483:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/block/ll_rw_blk.c:484:
+ ^I/* notice early if anybody screwed the defaults */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/block/ll_rw_blk.c:484:
+ ^I/* notice early if anybody screwed the defaults */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/block/ll_rw_blk.c:484:
+ ^I/* notice early if anybody screwed the defaults */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/block/ll_rw_blk.c:485:
+ ^IBUG_ON(!nr_requests);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/block/ll_rw_blk.c:485:
+ ^IBUG_ON(!nr_requests);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/block/ll_rw_blk.c:485:
+ ^IBUG_ON(!nr_requests);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#254: FILE: drivers/block/ll_rw_blk.c:485:
+ 	BUG_ON(!nr_requests);

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/block/ll_rw_blk.c:486:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: drivers/block/ll_rw_blk.c:486:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/block/ll_rw_blk.c:486:
+ ^IBUG_ON(!max_queue_sectors);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: drivers/block/ll_rw_blk.c:486:
+ 	BUG_ON(!max_queue_sectors);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/block/ll_rw_blk.c:487:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/block/ll_rw_blk.c:487:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/block/ll_rw_blk.c:488:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: drivers/block/ll_rw_blk.c:488:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/block/ll_rw_blk.c:488:
+ ^Iblk_grow_request_list(q, nr_requests, max_queue_sectors);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/block/ll_rw_blk.c:490:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: drivers/block/ll_rw_blk.c:490:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/block/ll_rw_blk.c:490:
+ ^Iinit_waitqueue_head(&q->wait_for_requests);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/block/ll_rw_blk.c:594:
+/* $

WARNING:MEMORY_BARRIER: memory barrier without comment
#323: FILE: drivers/block/ll_rw_blk.c:601:
+	mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#324: FILE: drivers/block/ll_rw_blk.c:602:
+	if (waitqueue_active(&q->wait_for_requests))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/block/ll_rw_blk.c:616:
+ * number of requests once it has woken up.  But, there's no way to $

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#432: FILE: drivers/block/ll_rw_blk.c:675:
+	if (!waitqueue_active(&q->wait_for_requests))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/block/ll_rw_blk.c:687:
+^I */^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#474: FILE: drivers/block/ll_rw_blk.c:921:
+			smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#475: FILE: drivers/block/ll_rw_blk.c:922:
+			if (waitqueue_active(&q->wait_for_requests))

WARNING:TYPO_SPELLING: 'suprious' may be misspelled - perhaps 'spurious'?
#642: FILE: fs/buffer.c:167:
+		 * don't do a suprious unplug if we get a racy
 		              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: include/linux/blkdev.h:144:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: include/linux/blkdev.h:148:
+^I * and blk_finished_io.  It enables the throttling code to $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#794: FILE: include/linux/blkdev.h:250:
+extern void blk_print_stats(kdev_t dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#800: FILE: include/linux/blkdev.h:255:
+extern int blk_grow_request_list(request_queue_t *q, int nr_requests, int max_queue_sectors);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#804: FILE: include/linux/blkdev.h:259:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#804: FILE: include/linux/blkdev.h:259:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#804: FILE: include/linux/blkdev.h:259:
+extern void blk_queue_throttle_sectors(request_queue_t *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#821: FILE: include/linux/blkdev.h:305:
+static inline int blk_oversized_queue(request_queue_t * q)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#828: FILE: include/linux/blkdev.h:312:
+static inline int blk_oversized_queue_batch(request_queue_t * q)

WARNING:LINE_SPACING: Missing a blank line after declarations
#839: FILE: include/linux/blkdev.h:323:
+	request_queue_t *q = rq->q;
+	if (q && q->can_throttle) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#842: FILE: include/linux/blkdev.h:326:
+			printk("nr_sectors is %d\n", atomic_read(&q->nr_sectors));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#843: FILE: include/linux/blkdev.h:327:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#851: FILE: include/linux/blkdev.h:335:
+	request_queue_t *q = rq->q;
+	if (q && q->can_throttle) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#853: FILE: include/linux/blkdev.h:337:
+^I^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#854: FILE: include/linux/blkdev.h:338:
+		smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#856: FILE: include/linux/blkdev.h:340:
+			if (waitqueue_active(&q->wait_for_requests))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#860: FILE: include/linux/blkdev.h:344:
+			printk("nr_sectors is %d\n", atomic_read(&q->nr_sectors));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#861: FILE: include/linux/blkdev.h:345:
+			BUG();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#898: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#898: FILE: include/linux/pagemap.h:100:
+extern void FASTCALL(wakeup_page_waiters(struct page * page));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#926: FILE: mm/filemap.c:820:
+void wakeup_page_waiters(struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#928: FILE: mm/filemap.c:822:
+	wait_queue_head_t * head;

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#931: FILE: mm/filemap.c:825:
+	if (waitqueue_active(head))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 71 warnings, 5 checks, 749 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
