ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#84: FILE: fs/9p/debug.h:42:
+		format , __FUNCTION__, task_pid(current) , ## arg); \
 		       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#84: FILE: fs/9p/debug.h:42:
+		format , __FUNCTION__, task_pid(current) , ## arg); \
 		                                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#84: FILE: fs/9p/debug.h:42:
+		format , __FUNCTION__, task_pid(current) , ## arg); \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#91: FILE: fs/9p/debug.h:48:
+		format , __FUNCTION__, task_pid(current) , ## arg); \
 		       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#91: FILE: fs/9p/debug.h:48:
+		format , __FUNCTION__, task_pid(current) , ## arg); \
 		                                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#91: FILE: fs/9p/debug.h:48:
+		format , __FUNCTION__, task_pid(current) , ## arg); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: fs/afs/cmservice.c:121:
+	printk("kAFS: Started kafscmd %d\n", task_pid(current));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#140: FILE: fs/afs/kafsasyncd.c:95:
+	printk("kAFS: Started kafsasyncd %d\n", task_pid(current));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: fs/afs/kafstimod.c:72:
+	printk("kAFS: Started kafstimod %d\n", task_pid(current));

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)
                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)
                                                                             ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)
                                                                                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)
                                                                                                                ^

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#179: FILE: fs/autofs4/autofs_i.h:36:
+#define DPRINTK(fmt,args...) do { printk(KERN_DEBUG "pid %d: %s: " fmt "\n" , task_pid(current) , __FUNCTION__ , ##args); } while(0)

CHECK:SPACING: No space is necessary after a cast
#244: FILE: fs/binfmt_flat.c:98:
+			current->comm, task_pid(current), (int) signr);

CHECK:CAMELCASE: Avoid CamelCase: <pSMB>
#257: FILE: fs/cifs/cifssmb.c:1277:
+		pSMB->Locks[0].Pid = cpu_to_le16(task_tgid(current));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Locks>
#257: FILE: fs/cifs/cifssmb.c:1277:
+		pSMB->Locks[0].Pid = cpu_to_le16(task_tgid(current));

CHECK:CAMELCASE: Avoid CamelCase: <Pid>
#257: FILE: fs/cifs/cifssmb.c:1277:
+		pSMB->Locks[0].Pid = cpu_to_le16(task_tgid(current));

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#270: FILE: fs/cifs/connect.c:348:
+	cFYI(1, ("Demultiplex PID: %d", task_pid(current)));

CHECK:CAMELCASE: Avoid CamelCase: <pCifsFile>
#283: FILE: fs/cifs/dir.c:265:
+			pCifsFile->pid = task_tgid(current);

CHECK:CAMELCASE: Avoid CamelCase: <PidHigh>
#320: FILE: fs/cifs/misc.c:312:
+	buffer->PidHigh = cpu_to_le16((__u16)(task_tgid(current) >> 16));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#385: FILE: fs/dnotify.c:95:
+	error = f_setown(filp, task_pid(current), 0);
 	                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#399: FILE: fs/exec.c:678:
+		BUG_ON(task_tgid(leader) != task_tgid(current));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#400: FILE: fs/exec.c:679:
+		BUG_ON(task_pid(current) == task_tgid(current));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#483: FILE: fs/jffs2/background.c:63:
+		D1(printk(KERN_DEBUG "jffs2: Killing GC task %d\n", c->gc_task_pid(task)));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#585: FILE: fs/locks.c:1444:
+	error = f_setown(filp, task_pid(current), 0);
 	                 ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: fs/proc/array.c:177:
+^I       ^Itask_tgid(p),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#718: FILE: fs/proc/array.c:177:
+^I       ^Itask_tgid(p),$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114625.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 15 warnings, 7 checks, 621 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114625.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
