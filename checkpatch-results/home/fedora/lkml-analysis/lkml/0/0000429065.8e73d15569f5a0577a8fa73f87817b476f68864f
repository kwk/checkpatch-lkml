WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
diff -ruN linux-2539original/include/linux/cpufreq.h linux/include/linux/cpufreq.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#32: FILE: include/linux/cpufreq.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#33: FILE: include/linux/cpufreq.h:2:
+ *  linux/include/linux/cpufreq.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: include/linux/cpufreq.h:6:
+ *            $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#39: FILE: include/linux/cpufreq.h:8:
+ * $Id: cpufreq.h,v 1.26 2002/09/21 09:05:29 db Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#52: FILE: include/linux/cpufreq.h:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#65: FILE: include/linux/cpufreq.h:34:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#73: FILE: include/linux/cpufreq.h:42:
+ * mille means. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: include/linux/cpufreq.h:47:
+        unsigned int            policy; /* see above */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: include/linux/cpufreq.h:47:
+        unsigned int            policy; /* see above */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#86: FILE: include/linux/cpufreq.h:55:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#98: FILE: include/linux/cpufreq.h:67:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: include/linux/cpufreq.h:74:
+ * Needed for loops_per_jiffy and similar calculations.  We do it $

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: include/linux/cpufreq.h:87:
+        val   = (old / div) * mult;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: include/linux/cpufreq.h:87:
+        val   = (old / div) * mult;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: include/linux/cpufreq.h:88:
+        carry = old % div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/linux/cpufreq.h:88:
+        carry = old % div;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: include/linux/cpufreq.h:94:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#133: FILE: include/linux/cpufreq.h:102:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: include/linux/cpufreq.h:129:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: include/linux/cpufreq.h:130:
+static inline void cpufreq_verify_within_limits(struct cpufreq_policy *policy, unsigned int min, unsigned int max) $

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#161: FILE: include/linux/cpufreq.h:130:
+static inline void cpufreq_verify_within_limits(struct cpufreq_policy *policy, unsigned int min, unsigned int max) 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:RETURN_VOID: void function return statements are not generally useful
#174: FILE: include/linux/cpufreq.h:143:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: include/linux/cpufreq.h:157:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: kernel/cpufreq.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#215: FILE: kernel/cpufreq.c:2:
+ *  linux/kernel/cpufreq.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#220: FILE: kernel/cpufreq.c:7:
+ *  $Id: cpufreq.c,v 1.43 2002/09/21 09:05:29 db Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#238: FILE: kernel/cpufreq.c:25:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#244: FILE: kernel/cpufreq.c:31:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: kernel/cpufreq.c:35:
+ * level driver of CPUFreq support, and its locking mutex. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: kernel/cpufreq.c:38:
+static struct cpufreq_driver   ^I*cpufreq_driver;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: kernel/cpufreq.c:39:
+static DECLARE_MUTEX            (cpufreq_driver_sem);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#254: FILE: kernel/cpufreq.c:41:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: kernel/cpufreq.c:43:
+ * Two notifier lists: the "policy" list is involved in the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: kernel/cpufreq.c:44:
+ * validation process for a new CPU frequency policy; the $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: kernel/cpufreq.c:53:
+static DECLARE_MUTEX            (cpufreq_notifier_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: kernel/cpufreq.c:55:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#280: FILE: kernel/cpufreq.c:67:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: kernel/cpufreq.c:101:
+^Iif (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) == 4) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#314: FILE: kernel/cpufreq.c:101:
+	if (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) == 4) 
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#322: FILE: kernel/cpufreq.c:109:
+	if (sscanf(input_string, "%d%%%d%%%d%%%s", &cpu, &min, &max, policy_string) == 4)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: kernel/cpufreq.c:120:
+^Iif (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) == 3) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#333: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) == 3) 
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#341: FILE: kernel/cpufreq.c:128:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) == 3)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#355: FILE: kernel/cpufreq.c:142:
+	for (i=0;i<sizeof(policy_string);i++){
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#355: FILE: kernel/cpufreq.c:142:
+	for (i=0;i<sizeof(policy_string);i++){
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#355: FILE: kernel/cpufreq.c:142:
+	for (i=0;i<sizeof(policy_string);i++){
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#355: FILE: kernel/cpufreq.c:142:
+	for (i=0;i<sizeof(policy_string);i++){
 	                                ^

ERROR:SPACING: space required before the open brace '{'
#355: FILE: kernel/cpufreq.c:142:
+	for (i=0;i<sizeof(policy_string);i++){

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#356: FILE: kernel/cpufreq.c:143:
+		if (policy_string[i]=='\0')
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: kernel/cpufreq.c:148:
+^Iif (!strncmp(policy_string, "powersave", 6) ||  $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#361: FILE: kernel/cpufreq.c:148:
+	if (!strncmp(policy_string, "powersave", 6) ||  
+            !strncmp(policy_string, "eco", 3) ||       
+	    !strncmp(policy_string, "batter", 6) ||
+	    !strncmp(policy_string, "low", 3)) 
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: kernel/cpufreq.c:149:
+            !strncmp(policy_string, "eco", 3) ||       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: kernel/cpufreq.c:149:
+            !strncmp(policy_string, "eco", 3) ||       $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: kernel/cpufreq.c:149:
+	if (!strncmp(policy_string, "powersave", 6) ||  
+            !strncmp(policy_string, "eco", 3) ||       

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: kernel/cpufreq.c:149:
+            !strncmp(policy_string, "eco", 3) ||       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: kernel/cpufreq.c:151:
+^I    !strncmp(policy_string, "low", 3)) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#369: FILE: kernel/cpufreq.c:156:
+	else if (!strncmp(policy_string, "performance",6) ||
+	    !strncmp(policy_string, "high",4) ||
+	    !strncmp(policy_string, "full",4))
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: kernel/cpufreq.c:156:
+	else if (!strncmp(policy_string, "performance",6) ||
 	                                              ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#369: FILE: kernel/cpufreq.c:156:
+	}
+	else if (!strncmp(policy_string, "performance",6) ||

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: kernel/cpufreq.c:157:
+	else if (!strncmp(policy_string, "performance",6) ||
+	    !strncmp(policy_string, "high",4) ||

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: kernel/cpufreq.c:157:
+	    !strncmp(policy_string, "high",4) ||
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: kernel/cpufreq.c:158:
+	    !strncmp(policy_string, "full",4))
 	                                  ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#376: FILE: kernel/cpufreq.c:163:
+	else if (!cpufreq_get_policy(&current_policy, policy->cpu))
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#376: FILE: kernel/cpufreq.c:163:
+	}
+	else if (!cpufreq_get_policy(&current_policy, policy->cpu))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#380: FILE: kernel/cpufreq.c:167:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#380: FILE: kernel/cpufreq.c:167:
+	}
+	else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#388: FILE: kernel/cpufreq.c:175:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: kernel/cpufreq.c:178:
+ *  cpufreq=1000000:2000000:PERFORMANCE   $

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#400: FILE: kernel/cpufreq.c:187:
+__setup("cpufreq=", cpufreq_setup);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#402: FILE: kernel/cpufreq.c:189:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#411: FILE: kernel/cpufreq.c:198:
+static int cpufreq_proc_read (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: kernel/cpufreq.c:198:
+static int cpufreq_proc_read (

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#415: FILE: kernel/cpufreq.c:202:
+^Iint ^I^I^Icount,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: kernel/cpufreq.c:203:
+^Iint ^I^I^I*eof,$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#430: FILE: kernel/cpufreq.c:217:
+	for (i=0;i<NR_CPUS;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#430: FILE: kernel/cpufreq.c:217:
+	for (i=0;i<NR_CPUS;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#430: FILE: kernel/cpufreq.c:217:
+	for (i=0;i<NR_CPUS;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#430: FILE: kernel/cpufreq.c:217:
+	for (i=0;i<NR_CPUS;i++) {
 	                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#430: FILE: kernel/cpufreq.c:217:
+	for (i=0;i<NR_CPUS;i++) {

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#439: FILE: kernel/cpufreq.c:226:
+			     i , policy.min, min_pctg, policy.max, max_pctg);
 			       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: kernel/cpufreq.c:241:
+^Iif (len <= off+count) $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#454: FILE: kernel/cpufreq.c:241:
+	if (len <= off+count) 
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: kernel/cpufreq.c:245:
+^Iif (len>count) $

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#458: FILE: kernel/cpufreq.c:245:
+	if (len>count) 
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: kernel/cpufreq.c:247:
+^Iif (len<0) $

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#460: FILE: kernel/cpufreq.c:247:
+	if (len<0) 
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#466: FILE: kernel/cpufreq.c:253:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#473: FILE: kernel/cpufreq.c:260:
+static int cpufreq_proc_write (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#473: FILE: kernel/cpufreq.c:260:
+static int cpufreq_proc_write (

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: kernel/cpufreq.c:261:
+        struct file^I^I*file,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/cpufreq.c:261:
+        struct file^I^I*file,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: kernel/cpufreq.c:262:
+        const char^I^I*buffer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: kernel/cpufreq.c:262:
+        const char^I^I*buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: kernel/cpufreq.c:263:
+        unsigned long^I^Icount,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: kernel/cpufreq.c:263:
+        unsigned long^I^Icount,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: kernel/cpufreq.c:264:
+        void^I^I^I*data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: kernel/cpufreq.c:264:
+        void^I^I^I*data)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: kernel/cpufreq.c:270:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#486: FILE: kernel/cpufreq.c:273:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: kernel/cpufreq.c:276:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#501: FILE: kernel/cpufreq.c:288:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: kernel/cpufreq.c:294:
+static unsigned int cpufreq_proc_init (void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: kernel/cpufreq.c:298:
+        /* are these acceptable values? */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: kernel/cpufreq.c:299:
+^Ientry = create_proc_entry("cpufreq", S_IFREG|S_IRUGO|S_IWUSR, $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#512: FILE: kernel/cpufreq.c:299:
+	entry = create_proc_entry("cpufreq", S_IFREG|S_IRUGO|S_IWUSR, 
 	                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#512: FILE: kernel/cpufreq.c:299:
+	entry = create_proc_entry("cpufreq", S_IFREG|S_IRUGO|S_IWUSR, 
 	                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#512: FILE: kernel/cpufreq.c:299:
+	entry = create_proc_entry("cpufreq", S_IFREG|S_IRUGO|S_IWUSR, 

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#516: FILE: kernel/cpufreq.c:303:
+		printk(KERN_ERR "unable to create /proc/cpufreq entry\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#518: FILE: kernel/cpufreq.c:305:
+		return -EIO;
+	} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#526: FILE: kernel/cpufreq.c:313:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: kernel/cpufreq.c:319:
+static void cpufreq_proc_exit (void)

WARNING:RETURN_VOID: void function return statements are not generally useful
#536: FILE: kernel/cpufreq.c:323:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#540: FILE: kernel/cpufreq.c:327:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: kernel/cpufreq.c:338:
+ *^IAdd a driver to one of two lists: either a list of drivers that $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#580: FILE: kernel/cpufreq.c:367:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#612: FILE: kernel/cpufreq.c:399:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: kernel/cpufreq.c:414:
+^Iif (!cpufreq_driver  || !policy || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu >= NR_CPUS'
#627: FILE: kernel/cpufreq.c:414:
+	if (!cpufreq_driver  || !policy || 
+	    (cpu >= NR_CPUS) || (!cpu_online(cpu))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#628: FILE: kernel/cpufreq.c:415:
+	    (cpu >= NR_CPUS) || (!cpu_online(cpu))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: kernel/cpufreq.c:419:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#644: FILE: kernel/cpufreq.c:431:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: kernel/cpufreq.c:443:
+^Iif (!cpufreq_driver || !cpufreq_driver->verify || $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy->cpu > NR_CPUS'
#656: FILE: kernel/cpufreq.c:443:
+	if (!cpufreq_driver || !cpufreq_driver->verify || 
+	    !cpufreq_driver->setpolicy || !policy ||
+	    (policy->cpu > NR_CPUS)) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#658: FILE: kernel/cpufreq.c:445:
+	    (policy->cpu > NR_CPUS)) {

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#670: FILE: kernel/cpufreq.c:457:
+	/* adjust if neccessary - all reasons */
 	             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#674: FILE: kernel/cpufreq.c:461:
+	/* adjust if neccessary - hardware incompatibility*/
 	             ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#679: FILE: kernel/cpufreq.c:466:
+	/* verify the cpu speed can be set within this limit,
+	   which might be different to the first one */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#679: FILE: kernel/cpufreq.c:466:
+	   which might be different to the first one */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#689: FILE: kernel/cpufreq.c:476:
+		for (i=0;i<NR_CPUS;i++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#689: FILE: kernel/cpufreq.c:476:
+		for (i=0;i<NR_CPUS;i++) {
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#689: FILE: kernel/cpufreq.c:476:
+		for (i=0;i<NR_CPUS;i++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#689: FILE: kernel/cpufreq.c:476:
+		for (i=0;i<NR_CPUS;i++) {
 		                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#689: FILE: kernel/cpufreq.c:476:
+		for (i=0;i<NR_CPUS;i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: kernel/cpufreq.c:480:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: kernel/cpufreq.c:486:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: kernel/cpufreq.c:488:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#708: FILE: kernel/cpufreq.c:495:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#717: FILE: kernel/cpufreq.c:504:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#729: FILE: kernel/cpufreq.c:516:
+ * values which are provided by various architectures. $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: kernel/cpufreq.c:526:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#744: FILE: kernel/cpufreq.c:531:
+ * twice on all CPU frequency changes that have external effects. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: kernel/cpufreq.c:539:
+^I^Iadjust_jiffies(CPUFREQ_PRECHANGE, freqs);^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#763: FILE: kernel/cpufreq.c:550:
+
+

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#771: FILE: kernel/cpufreq.c:558:
+ * @driver_data: A struct cpufreq_driver containing the values submitted by the CPU Frequency driver.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: kernel/cpufreq.c:560:
+ *   Registers a CPU Frequency driver to this core code. This code $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: kernel/cpufreq.c:562:
+ * (and isn't unregistered in the meantime). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#784: FILE: kernel/cpufreq.c:571:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: kernel/cpufreq.c:572:
+^Iif (!driver_data || !driver_data->verify || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: kernel/cpufreq.c:578:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#818: FILE: kernel/cpufreq.c:605:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#822: FILE: kernel/cpufreq.c:609:
+ *    Unregister the current CPUFreq driver. Only call this if you have $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#848: FILE: kernel/cpufreq.c:635:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cpufreq_restore', this function's name, in a string
#862: FILE: kernel/cpufreq.c:649:
+		panic("cpufreq_restore() called from interrupt context!");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#864: FILE: kernel/cpufreq.c:651:
+	for (i=0;i<NR_CPUS;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#864: FILE: kernel/cpufreq.c:651:
+	for (i=0;i<NR_CPUS;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#864: FILE: kernel/cpufreq.c:651:
+	for (i=0;i<NR_CPUS;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#864: FILE: kernel/cpufreq.c:651:
+	for (i=0;i<NR_CPUS;i++) {
 	                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#864: FILE: kernel/cpufreq.c:651:
+	for (i=0;i<NR_CPUS;i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: kernel/cpufreq.c:660:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 43 warnings, 38 checks, 851 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000429065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
