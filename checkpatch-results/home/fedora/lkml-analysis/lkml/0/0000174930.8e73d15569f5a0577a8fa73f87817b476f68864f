WARNING:TYPO_SPELLING: 'attribues' may be misspelled - perhaps 'attributes'?
#30: 
  attribues are saved in the persistent sysfs_dirent structure as a pointer
  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
  to struct iattr. The struct iattr is allocated only for those sysfs_dirent's

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#69: FILE: fs/sysfs/inode.c:29:
+static struct inode_operations sysfs_inode_operations ={
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#69: FILE: fs/sysfs/inode.c:29:
+static struct inode_operations sysfs_inode_operations ={

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: fs/sysfs/inode.c:33:
+int sysfs_setattr(struct dentry * dentry, struct iattr * iattr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: fs/sysfs/inode.c:33:
+int sysfs_setattr(struct dentry * dentry, struct iattr * iattr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: fs/sysfs/inode.c:35:
+	struct inode * inode = dentry->d_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: fs/sysfs/inode.c:36:
+	struct sysfs_dirent * sd = dentry->d_fsdata;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: fs/sysfs/inode.c:37:
+	struct iattr * sd_iattr;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sd_iattr)...) over kmalloc(sizeof(struct iattr)...)
#96: FILE: fs/sysfs/inode.c:56:
+		sd_iattr = kmalloc(sizeof(struct iattr), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#104: FILE: fs/sysfs/inode.c:64:
+		sd_iattr->ia_atime = sd_iattr->ia_mtime = sd_iattr->ia_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'atleast' may be misspelled - perhaps 'at least'?
#108: FILE: fs/sysfs/inode.c:68:
+	/* attributes were changed atleast once in past */
 	                           ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: fs/sysfs/inode.c:76:
+		sd_iattr->ia_atime = timespec_trunc(iattr->ia_atime,
+						inode->i_sb->s_time_gran);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: fs/sysfs/inode.c:79:
+		sd_iattr->ia_mtime = timespec_trunc(iattr->ia_mtime,
+						inode->i_sb->s_time_gran);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: fs/sysfs/inode.c:82:
+		sd_iattr->ia_ctime = timespec_trunc(iattr->ia_ctime,
+						inode->i_sb->s_time_gran);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: fs/sysfs/sysfs.h:20:
+extern int sysfs_setattr(struct dentry *dentry, struct iattr *iattr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo		* bar" should be "foo		*bar"
#163: FILE: include/linux/sysfs.h:76:
+	struct iattr		* s_iattr;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 4 warnings, 6 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000174930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
