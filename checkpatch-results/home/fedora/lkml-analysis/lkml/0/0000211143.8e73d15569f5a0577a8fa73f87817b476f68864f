WARNING:TYPO_SPELLING: 'carbus' may be misspelled - perhaps 'cardbus'?
#57: 
be a problem for carbus (yenta) bridges.
                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#67: 
--- a/drivers/base/bus.c	2005-01-20 17:37:46.000000000 -0500

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/base/bus.c:307:
+ *^I^I^I^I       given match level priority $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: drivers/base/bus.c:313:
+static int driver_probe_device_priority(struct device_driver * drv,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: drivers/base/bus.c:314:
+					struct device * dev, int priority)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#99: FILE: drivers/base/bus.c:321:
+	if (drv->match) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#101: FILE: drivers/base/bus.c:323:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: drivers/base/bus.c:332:
+		int error = drv->probe(dev);
+		if (error) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/base/bus.c:363:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#174: FILE: include/linux/device.h:118:
+	int	(*match)	(struct device * dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#174: FILE: include/linux/device.h:118:
+	int	(*match)	(struct device * dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211143.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 1 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211143.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
