WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: drivers/serial/serial98.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#40: FILE: drivers/serial/serial98.c:2:
+ *  linux/drivers/serial/serial98.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#45: FILE: drivers/serial/serial98.c:7:
+ *      $Id: 8250.c,v 1.90 2002/07/28 10:03:27 rmk Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#77: FILE: drivers/serial/serial98.c:39:
+#include <asm/io.h>

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#104: FILE: drivers/serial/serial98.c:66:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: drivers/serial/serial98.c:67:
+#define DEBUG_AUTOCONF(fmt...)	printk(fmt)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#110: FILE: drivers/serial/serial98.c:72:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#111: FILE: drivers/serial/serial98.c:73:
+#define DEBUG_INTR(fmt...)	printk(fmt)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#186: FILE: drivers/serial/serial98.c:148:
+	spinlock_t		lock;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: drivers/serial/serial98.c:157:
+static const struct serial_uart_config uart_config[PORT_MAX_8250+1] = {
                                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: drivers/serial/serial98.c:163:
+^I{ "Cirrus",^I1, ^I0 },$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#214: FILE: drivers/serial/serial98.c:176:
+#if 0

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#218: FILE: drivers/serial/serial98.c:180:
+static int div_table_8251_5[]={
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/serial/serial98.c:181:
+    0, 3072, 2048, 0, 0, 1024, 768, 512, 256, 128,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/serial/serial98.c:182:
+    0, 64, 32, 16, 8, 4, 0, 0, 0, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/serial/serial98.c:183:
+    0$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#223: FILE: drivers/serial/serial98.c:185:
+};
+static int div_table_8251_8[]={

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#223: FILE: drivers/serial/serial98.c:185:
+static int div_table_8251_8[]={
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/serial/serial98.c:186:
+    0, 2496, 1664, 0, 0, 832, 624, 416, 208, 104,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/serial/serial98.c:187:
+    0, 52, 26, 13, 6, 3, 0, 0, 0, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/serial/serial98.c:188:
+    0$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#239: FILE: drivers/serial/serial98.c:201:
+static int speed_pc98 = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#240: FILE: drivers/serial/serial98.c:202:
+static int lcr_pc98 = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#241: FILE: drivers/serial/serial98.c:203:
+static int mcr_pc98 = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#242: FILE: drivers/serial/serial98.c:204:
+static int scr_pc98 = 0;

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#245: FILE: drivers/serial/serial98.c:207:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,3,11)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: drivers/serial/serial98.c:207:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,3,11)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: drivers/serial/serial98.c:207:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,3,11)
                                             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#245: FILE: drivers/serial/serial98.c:207:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,3,11)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: drivers/serial/serial98.c:214:
+/*#define COM1_EXTENT1 -3
+  #define COM1_EXTENT2 -4*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#252: FILE: drivers/serial/serial98.c:214:
+  #define COM1_EXTENT2 -4*/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#260: FILE: drivers/serial/serial98.c:222:
+#define system_clock (*(unsigned char*)(__va(PC9800SCA_BIOS_FLAG)) & 0x80)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#270: FILE: drivers/serial/serial98.c:232:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#287: FILE: drivers/serial/serial98.c:249:
+		case +0:	/* RX/TX/DLL/TRG */
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#292: FILE: drivers/serial/serial98.c:254:
+		case +1:	/* DLM/IER/FCTR */
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#298: FILE: drivers/serial/serial98.c:260:
+		case +2:	/* IIR/FCR/EFR */
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#300: FILE: drivers/serial/serial98.c:262:
+		case +3:	/* LCR */
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#302: FILE: drivers/serial/serial98.c:264:
+		case +4:	/* MCR */
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#304: FILE: drivers/serial/serial98.c:266:
+		case +5:	/* LSR */
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#309: FILE: drivers/serial/serial98.c:271:
+		case +6:
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#311: FILE: drivers/serial/serial98.c:273:
+		case +7:
 		     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#314: FILE: drivers/serial/serial98.c:276:
+		printk(KERN_WARNING

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#347: FILE: drivers/serial/serial98.c:309:
+		case +0:
 		     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#348: FILE: drivers/serial/serial98.c:310:
+			if (lcr_pc98 & UART_LCR_DLAB) {
[...]
+			else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: drivers/serial/serial98.c:315:
+						outb(value | VFAST_ENABLE,
+						      VFAST_8251F);

CHECK:CAMELCASE: Avoid CamelCase: <PC9800_8MHz_P>
#358: FILE: drivers/serial/serial98.c:320:
+				if (PC9800_8MHz_P())

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#371: FILE: drivers/serial/serial98.c:333:
+			}
+			else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#374: FILE: drivers/serial/serial98.c:336:
+		case +1:
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: drivers/serial/serial98.c:344:
+				outb((tmp8 & 0xe7) | ((value & 0x0c) << 1),
+				      IER2_8251F);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: drivers/serial/serial98.c:346:
+				outb(((value & 0x02) >> 1) | 0x04,
+				      IER1_8251F_COUT);

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#389: FILE: drivers/serial/serial98.c:351:
+		case +2:
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/serial/serial98.c:356:
+			outb((inb(FCR_8251F) & 0x18) | (value & 0xe7) | 0x01,
+			      FCR_8251F);

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#398: FILE: drivers/serial/serial98.c:360:
+		case +3:
 		     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: drivers/serial/serial98.c:365:
+				FIFO_OFF_8251F ();

CHECK:BRACES: braces {} should be used on all arms of this statement
#422: FILE: drivers/serial/serial98.c:384:
+				if (value & 4) {
[...]
+				else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#427: FILE: drivers/serial/serial98.c:389:
+				}
+				else

WARNING:INDENTED_LABEL: labels should not be indented
#440: FILE: drivers/serial/serial98.c:402:
+			modify_command:

WARNING:INDENTED_LABEL: labels should not be indented
#443: FILE: drivers/serial/serial98.c:405:
+			command_write:

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#454: FILE: drivers/serial/serial98.c:416:
+		case +4:
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#473: FILE: drivers/serial/serial98.c:435:
+		case +7:
 		     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#477: FILE: drivers/serial/serial98.c:439:
+		printk(KERN_WARNING

CHECK:LINE_SPACING: Please don't use multiple blank lines
#496: FILE: drivers/serial/serial98.c:458:
+
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#503: FILE: drivers/serial/serial98.c:465:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#505: FILE: drivers/serial/serial98.c:467:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#507: FILE: drivers/serial/serial98.c:469:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#509: FILE: drivers/serial/serial98.c:471:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#511: FILE: drivers/serial/serial98.c:473:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#513: FILE: drivers/serial/serial98.c:475:
+	udelay(100);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#528: FILE: drivers/serial/serial98.c:490:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#529: FILE: drivers/serial/serial98.c:491:
+	printk("8251cmd(0x%x) 8255MCR(0x%x)\n", up->cmd8251, up->mcr);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#545: FILE: drivers/serial/serial98.c:507:
+	udelay(1000);

ERROR:SPACING: space required before the open parenthesis '('
#546: FILE: drivers/serial/serial98.c:508:
+	if(!(inb_p(up->port.iobase + PORT_8251_STS) & STAT_8251_TXRDY))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: drivers/serial/serial98.c:514:
+^Ioutb((tmp | 0x2), IER1_8251F);   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#553: FILE: drivers/serial/serial98.c:515:
+	outb(tmp , IER1_8251F);
 	         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: drivers/serial/serial98.c:556:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#602: FILE: drivers/serial/serial98.c:564:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#603: FILE: drivers/serial/serial98.c:565:
+		printk("IER  changed(0x%x.8255IER)!\n",up->ier);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#603: FILE: drivers/serial/serial98.c:565:
+		printk("IER  changed(0x%x.8255IER)!\n",up->ier);
 		                                      ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#605: FILE: drivers/serial/serial98.c:567:
+		if (up->ier & (UART_IER_RLSI | UART_IER_RDI)) {
[...]
+		} else {
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: drivers/serial/serial98.c:585:
+static void change_speed_8251(struct uart_port *port, unsigned int cflag,
+				unsigned int iflag, unsigned int quot)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#633: FILE: drivers/serial/serial98.c:595:
+	case CS5: mval = 0x00; bits = 7; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#634: FILE: drivers/serial/serial98.c:596:
+	case CS6: mval = 0x04; bits = 8; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#635: FILE: drivers/serial/serial98.c:597:
+	case CS7: mval = 0x08; bits = 9; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#636: FILE: drivers/serial/serial98.c:598:
+	case CS8: mval = 0x0c; bits = 10; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#638: FILE: drivers/serial/serial98.c:600:
+	default:  mval = 0x00; bits = 7; break;

ERROR:SPACING: spaces required around that '|=' (ctx:VxW)
#651: FILE: drivers/serial/serial98.c:613:
+	mval|= 2;
 	    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#655: FILE: drivers/serial/serial98.c:617:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#656: FILE: drivers/serial/serial98.c:618:
+	printk("change_speed_8251(): base_baud8251=%d baud=%d quot8251=%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'change_speed_8251', this function's name, in a string
#656: FILE: drivers/serial/serial98.c:618:
+	printk("change_speed_8251(): base_baud8251=%d baud=%d quot8251=%d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: drivers/serial/serial98.c:619:
+	printk("change_speed_8251(): base_baud8251=%d baud=%d quot8251=%d\n",
+		base_baud8251, BASE_BAUD / quot, quot8251);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: drivers/serial/serial98.c:646:
+^I^I * If we're ignore parity and break indicators, ignore $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#713: FILE: drivers/serial/serial98.c:675:
+static void receive_chars_8251(struct uart_8250_port *up, int *status,
+				struct pt_regs *regs)

CHECK:BRACES: braces {} should be used on all arms of this statement
#731: FILE: drivers/serial/serial98.c:693:
+			if (*status & STAT_8251_BRK) {
[...]
+			} else if (*status & STAT_8251_PER)
[...]
+			else if (*status & STAT_8251_FER)
[...]

WARNING:INDENTED_LABEL: labels should not be indented
#776: FILE: drivers/serial/serial98.c:738:
+	ignore_char:

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#812: FILE: drivers/serial/serial98.c:774:
+	DEBUG_INTR("THRE...");
 	            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited before semicolon
#859: FILE: drivers/serial/serial98.c:821:
+		return ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1019: FILE: drivers/serial/serial98.c:981:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: drivers/serial/serial98.c:1012:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/serial/serial98.c:1022:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1123: FILE: drivers/serial/serial98.c:1085:
+	DEBUG_AUTOCONF("Testing ttyS%d (0x%04x, 0x%08lx)...\n",
+			up->port.line, up->port.iobase, up->port.membase);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1132: FILE: drivers/serial/serial98.c:1094:
+			(*(unsigned char*)__va(PC9821SCA_RSFLAGS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1136: FILE: drivers/serial/serial98.c:1098:
+		if (((t1 & 0x40) != (t2 & 0x40)) &&
+		   (!((t1 & 0x20) | (t2 & 0x20)))) {

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1138: FILE: drivers/serial/serial98.c:1100:
+				printk(KERN_INFO "COM1: V.Fast/FIFO Mode (System clock is %dMHz).\n",(system_clock ? 8 : 5));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1138: FILE: drivers/serial/serial98.c:1100:
+				printk(KERN_INFO "COM1: V.Fast/FIFO Mode (System clock is %dMHz).\n",(system_clock ? 8 : 5));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1138: FILE: drivers/serial/serial98.c:1100:
+				printk(KERN_INFO "COM1: V.Fast/FIFO Mode (System clock is %dMHz).\n",(system_clock ? 8 : 5));
 				                                                                    ^

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1141: FILE: drivers/serial/serial98.c:1103:
+				printk(KERN_INFO "COM1: FIFO Mode (System clock is %dMHz).\n",(system_clock ? 8 : 5));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1141: FILE: drivers/serial/serial98.c:1103:
+				printk(KERN_INFO "COM1: FIFO Mode (System clock is %dMHz).\n",(system_clock ? 8 : 5));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1141: FILE: drivers/serial/serial98.c:1103:
+				printk(KERN_INFO "COM1: FIFO Mode (System clock is %dMHz).\n",(system_clock ? 8 : 5));
 				                                                             ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1146: FILE: drivers/serial/serial98.c:1108:
+			printk(KERN_INFO "COM1: Normal Mode (System clock %dMHz)\n",(system_clock ? 8 : 5));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1146: FILE: drivers/serial/serial98.c:1108:
+			printk(KERN_INFO "COM1: Normal Mode (System clock %dMHz)\n",(system_clock ? 8 : 5));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1146: FILE: drivers/serial/serial98.c:1108:
+			printk(KERN_INFO "COM1: Normal Mode (System clock %dMHz)\n",(system_clock ? 8 : 5));
 			                                                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1152: FILE: drivers/serial/serial98.c:1114:
+		printk("autoconfig8251 finished(type=%d).\n", up->port.type);

WARNING:SPACING: space prohibited before semicolon
#1153: FILE: drivers/serial/serial98.c:1115:
+		return ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: drivers/serial/serial98.c:1129:
+^I^I * $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1179: FILE: drivers/serial/serial98.c:1141:
+		else
[...]
+		outb(0xff, 0x05f);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'autoconfig', this function's name, in a string
#1191: FILE: drivers/serial/serial98.c:1153:
+			DEBUG_AUTOCONF("serial: ttyS%d: simple autoconfig "

WARNING:SPLIT_STRING: quoted string split across lines
#1192: FILE: drivers/serial/serial98.c:1154:
+			DEBUG_AUTOCONF("serial: ttyS%d: simple autoconfig "
+				       "failed (%02x, %02x)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1201: FILE: drivers/serial/serial98.c:1163:
+^I/* $

WARNING:SPLIT_STRING: quoted string split across lines
#1216: FILE: drivers/serial/serial98.c:1178:
+			DEBUG_AUTOCONF("serial: ttyS%d: no UART loopback "
+				       "failed\n", up->port.line);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1226: FILE: drivers/serial/serial98.c:1188:
+	if (!up->port.type)
+	switch (scratch) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1227: FILE: drivers/serial/serial98.c:1189:
+	switch (scratch) {
+		case 0:
[...]
+		case 1:
[...]
+		case 2:
[...]
+		case 3:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: drivers/serial/serial98.c:1209:
+^I^I^Ibreak;          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1250: FILE: drivers/serial/serial98.c:1212:
+^I^I^Ibreak;          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: drivers/serial/serial98.c:1215:
+^I^I^Ibreak;          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1293: FILE: drivers/serial/serial98.c:1255:
+ ^I^I^Iserial_outp(up, UART_FCR, UART_FCR_ENABLE_FIFO);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1293: FILE: drivers/serial/serial98.c:1255:
+ ^I^I^Iserial_outp(up, UART_FCR, UART_FCR_ENABLE_FIFO);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: drivers/serial/serial98.c:1255:
+ ^I^I^Iserial_outp(up, UART_FCR, UART_FCR_ENABLE_FIFO);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'probe_rsa[i] != up->port.iobase'
#1313: FILE: drivers/serial/serial98.c:1275:
+			if (((probe_rsa[i] != up->port.iobase) ||
+			     check_region(up->port.iobase + UART_RSA_BASE, 16)) &&
+			    (force_rsa[i] != up->port.iobase))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'force_rsa[i] != up->port.iobase'
#1313: FILE: drivers/serial/serial98.c:1275:
+			if (((probe_rsa[i] != up->port.iobase) ||
+			     check_region(up->port.iobase + UART_RSA_BASE, 16)) &&
+			    (force_rsa[i] != up->port.iobase))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status1 != 0xa5'
#1333: FILE: drivers/serial/serial98.c:1295:
+		if ((status1 != 0xa5) || (status2 != 0x5a))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status2 != 0x5a'
#1333: FILE: drivers/serial/serial98.c:1295:
+		if ((status1 != 0xa5) || (status2 != 0x5a))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1357: FILE: drivers/serial/serial98.c:1319:
+ out:^I$

CHECK:SPACING: No space is necessary after a cast
#1381: FILE: drivers/serial/serial98.c:1343:
+		(void) inb_p(ICP);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1389: FILE: drivers/serial/serial98.c:1351:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1392: FILE: drivers/serial/serial98.c:1354:
+	udelay (10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1392: FILE: drivers/serial/serial98.c:1354:
+	udelay (10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1406: FILE: drivers/serial/serial98.c:1368:
+	udelay (20);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1406: FILE: drivers/serial/serial98.c:1368:
+	udelay (20);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1501: FILE: drivers/serial/serial98.c:1463:
+			if (*status & UART_LSR_BI) {
[...]
+			} else if (*status & UART_LSR_PE)
[...]
+			else if (*status & UART_LSR_FE)
[...]

WARNING:TYPO_SPELLING: 'ingored' may be misspelled - perhaps 'ignored'?
#1520: FILE: drivers/serial/serial98.c:1482:
+			 * Mask off conditions which should be ingored.
 			                                       ^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1531: FILE: drivers/serial/serial98.c:1493:
+			if (*status & UART_LSR_BI) {
[...]
+			} else if (*status & UART_LSR_PE)
[...]
+			else if (*status & UART_LSR_FE)
[...]

WARNING:INDENTED_LABEL: labels should not be indented
#1558: FILE: drivers/serial/serial98.c:1520:
+	ignore_char:

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#1592: FILE: drivers/serial/serial98.c:1554:
+	DEBUG_INTR("THRE...");
 	            ^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs_interrupt_8251', this function's name, in a string
#1628: FILE: drivers/serial/serial98.c:1590:
+	DEBUG_INTR("rs_interrupt_8251(%d)...", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1655: FILE: drivers/serial/serial98.c:1617:
+			printk(KERN_ERR "serial8251: too much work for "

WARNING:SPLIT_STRING: quoted string split across lines
#1656: FILE: drivers/serial/serial98.c:1618:
+			printk(KERN_ERR "serial8251: too much work for "
+				"irq%d\n", irq);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'serial8250_interrupt', this function's name, in a string
#1703: FILE: drivers/serial/serial98.c:1665:
+	DEBUG_INTR("serial8250_interrupt(%d)...", irq);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1715: FILE: drivers/serial/serial98.c:1677:
+		if (!(iir & UART_IIR_NO_INT)) {
[...]
+		} else if (end == NULL)
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!end"
#1721: FILE: drivers/serial/serial98.c:1683:
+		} else if (end == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1728: FILE: drivers/serial/serial98.c:1690:
+			printk(KERN_ERR "serial8250: too much work for "

WARNING:SPLIT_STRING: quoted string split across lines
#1729: FILE: drivers/serial/serial98.c:1691:
+			printk(KERN_ERR "serial8250: too much work for "
+				"irq%d\n", irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1765: FILE: drivers/serial/serial98.c:1727:
+^I^I^I^I  ^I^Iirq_flags, "serial", i);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1765: FILE: drivers/serial/serial98.c:1727:
+^I^I^I^I  ^I^Iirq_flags, "serial", i);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1765: FILE: drivers/serial/serial98.c:1727:
+			ret = request_irq(up->port.irq, rs_interrupt_8251,
+				  		irq_flags, "serial", i);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1778: FILE: drivers/serial/serial98.c:1740:
+	BUG_ON(i->head == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!i->head"
#1778: FILE: drivers/serial/serial98.c:1740:
+	BUG_ON(i->head == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1790: FILE: drivers/serial/serial98.c:1752:
+		BUG_ON(i->head != &up->list);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1804: FILE: drivers/serial/serial98.c:1766:
+	printk("starting up ttys%d (irq %d)...", up->port.line, up->port.irq);

CHECK:SPACING: No space is necessary after a cast
#1818: FILE: drivers/serial/serial98.c:1780:
+	(void) inb(0x30);

CHECK:SPACING: No space is necessary after a cast
#1819: FILE: drivers/serial/serial98.c:1781:
+	(void) inb(0x32);  /* 0x32 */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1827: FILE: drivers/serial/serial98.c:1789:
+^I * Now, initialize the UART $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1841: FILE: drivers/serial/serial98.c:1803:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1935: FILE: drivers/serial/serial98.c:1897:
+	if (up->port.line == 0 && mode_com1 == MODE_COM1_NORMAL) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1938: FILE: drivers/serial/serial98.c:1900:
+	} else

CHECK:SPACING: No space is necessary after a cast
#2009: FILE: drivers/serial/serial98.c:1971:
+	(void) serial_inp(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#2010: FILE: drivers/serial/serial98.c:1972:
+	(void) serial_inp(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#2011: FILE: drivers/serial/serial98.c:1973:
+	(void) serial_inp(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#2012: FILE: drivers/serial/serial98.c:1974:
+	(void) serial_inp(up, UART_MSR);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2021: FILE: drivers/serial/serial98.c:1983:
+		printk("ttyS%d: LSR safety check engaged!\n", up->port.line);

CHECK:BRACES: Unbalanced braces around else statement
#2052: FILE: drivers/serial/serial98.c:2014:
+	} else

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#2064: FILE: drivers/serial/serial98.c:2026:
+	 * are set via change_speed(), which will be occuring imminently
 	                                             ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2077: FILE: drivers/serial/serial98.c:2039:
+		(void) inb_p(icp);

CHECK:SPACING: No space is necessary after a cast
#2083: FILE: drivers/serial/serial98.c:2045:
+	(void) serial_inp(up, UART_LSR);

CHECK:SPACING: No space is necessary after a cast
#2084: FILE: drivers/serial/serial98.c:2046:
+	(void) serial_inp(up, UART_RX);

CHECK:SPACING: No space is necessary after a cast
#2085: FILE: drivers/serial/serial98.c:2047:
+	(void) serial_inp(up, UART_IIR);

CHECK:SPACING: No space is necessary after a cast
#2086: FILE: drivers/serial/serial98.c:2048:
+	(void) serial_inp(up, UART_MSR);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2106: FILE: drivers/serial/serial98.c:2068:
+	if (up->port.flags & ASYNC_FOURPORT) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2110: FILE: drivers/serial/serial98.c:2072:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#2119: FILE: drivers/serial/serial98.c:2081:
+	if (up->port.line == 0 && mode_com1 == MODE_COM1_NORMAL)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2121: FILE: drivers/serial/serial98.c:2083:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2123: FILE: drivers/serial/serial98.c:2085:
+		serial_out(up, UART_LCR,
+				serial_inp(up, UART_LCR) & ~UART_LCR_SBC);

CHECK:SPACING: No space is necessary after a cast
#2140: FILE: drivers/serial/serial98.c:2102:
+		(void) serial_in(up, UART_RX);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#2195: FILE: drivers/serial/serial98.c:2157:
+		quot ++;
 		     ^

WARNING:TYPO_SPELLING: 'Characteres' may be misspelled - perhaps 'Characters'?
#2219: FILE: drivers/serial/serial98.c:2181:
+	 * Characteres to ignore
 	   ^^^^^^^^^^^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#2257: FILE: drivers/serial/serial98.c:2219:
+		serial_outp(up, UART_EFR, cflag & CRTSCTS ? UART_EFR_CTS :0);
 		                                                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2281: FILE: drivers/serial/serial98.c:2243:
+	struct uart_8250_port *up = (struct uart_8250_port *)port;
+	if (state) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2372: FILE: drivers/serial/serial98.c:2334:
+			if (!(*res = request_region(up->port.iobase,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2373: FILE: drivers/serial/serial98.c:2335:
+			if (!(*res = request_region(up->port.iobase,
+						COM1_EXTENT1,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2381: FILE: drivers/serial/serial98.c:2343:
+			if (!(*res = request_region(up->port.iobase + 0x100,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2382: FILE: drivers/serial/serial98.c:2344:
+			if (!(*res = request_region(up->port.iobase + 0x100,
+							COM1_EXTENT3,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2387: FILE: drivers/serial/serial98.c:2349:
+		} else
[...]
+		if ((up->port.iobase & 0xf0) == 0xd0) {

CHECK:BRACES: Unbalanced braces around else statement
#2387: FILE: drivers/serial/serial98.c:2349:
+		} else

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2391: FILE: drivers/serial/serial98.c:2353:
+				if (!(*res = request_region(up->port.iobase + i * 0x100, 1, "serial(MC16550)"))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2391: FILE: drivers/serial/serial98.c:2353:
+				if (!(*res = request_region(up->port.iobase + i * 0x100, 1, "serial(MC16550)"))) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#2397: FILE: drivers/serial/serial98.c:2359:
+		} else
[...]
+		*res = request_region(up->port.iobase, size, "serial");

CHECK:BRACES: Unbalanced braces around else statement
#2397: FILE: drivers/serial/serial98.c:2359:
+		} else

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#2580: FILE: drivers/serial/serial98.c:2542:
+serial8250_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                      ^^^

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#2600: FILE: drivers/serial/serial98.c:2562:
+static struct uart_ops serial8250_pops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2786: FILE: drivers/serial/serial98.c:2748:
+#define SERIAL8250_CONSOLE	&serial8250_console

CHECK:SPACING: No space is necessary after a cast
#2825: FILE: drivers/serial/serial98.c:2787:
+		port.iobase |= (long) req->port_high << HIGH_BITS_OFFSET;

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#2845: FILE: drivers/serial/serial98.c:2807:
+ *	The port is then probed and if neccessary the IRQ is autodetected
   	                               ^^^^^^^^^^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2891: FILE: drivers/serial/serial98.c:2853:
+	printk(KERN_INFO "Serial: PC-9801 driver $Revision: 0.01 $ "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2891: FILE: drivers/serial/serial98.c:2853:
+	printk(KERN_INFO "Serial: PC-9801 driver $Revision: 0.01 $ "

WARNING:SPLIT_STRING: quoted string split across lines
#2892: FILE: drivers/serial/serial98.c:2854:
+	printk(KERN_INFO "Serial: PC-9801 driver $Revision: 0.01 $ "
+		"IRQ sharing %sabled\n", share_irqs ? "en" : "dis");

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2918: FILE: drivers/serial/serial98.c:2880:
+EXPORT_SYMBOL(register_serial);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2919: FILE: drivers/serial/serial98.c:2881:
+EXPORT_SYMBOL(unregister_serial);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2920: FILE: drivers/serial/serial98.c:2882:
+EXPORT_SYMBOL(serial8250_get_irq_map);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2923: FILE: drivers/serial/serial98.c:2885:
+MODULE_DESCRIPTION("NEC PC-9801 serial driver $Revision: 0.01 $");

WARNING:SPLIT_STRING: quoted string split across lines
#2927: FILE: drivers/serial/serial98.c:2889:
+MODULE_PARM_DESC(share_irqs, "Share IRQs with other non-8250/16x50 devices"
+	" (unsafe)");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422453.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 84 warnings, 77 checks, 2896 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422453.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
