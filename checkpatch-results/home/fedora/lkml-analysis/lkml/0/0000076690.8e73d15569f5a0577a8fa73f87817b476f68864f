WARNING:TYPO_SPELLING: 'overwritting' may be misspelled - perhaps 'overwriting'?
#39: 
> check_set has TTL turned on.  This means that the overwritting was fine,
                                                    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: net/ipv4/netfilter/ipt_recent.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: net/ipv4/netfilter/ipt_recent.c:47:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#180: FILE: net/ipv4/netfilter/ipt_recent.c:51:
+	u_int32_t		addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#181: FILE: net/ipv4/netfilter/ipt_recent.c:52:
+	u_int8_t		ttl;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#251: FILE: net/ipv4/netfilter/ipt_recent.c:75:
+static struct file_operations	recent_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#256: FILE: net/ipv4/netfilter/ipt_recent.c:78:
+static u_int32_t hash_rnd;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e"
#407: FILE: net/ipv4/netfilter/ipt_recent.c:122:
+	if (e == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#588: FILE: net/ipv4/netfilter/ipt_recent.c:174:
+	u_int32_t addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#589: FILE: net/ipv4/netfilter/ipt_recent.c:175:
+	u_int8_t ttl;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e"
#637: FILE: net/ipv4/netfilter/ipt_recent.c:192:
+	if (e == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e"
#641: FILE: net/ipv4/netfilter/ipt_recent.c:196:
+		if (e == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#860: FILE: net/ipv4/netfilter/ipt_recent.c:202:
+	if (info->check_set & IPT_RECENT_SET)
[...]
+	else if (info->check_set & IPT_RECENT_REMOVE) {
[...]
+	} else if (info->check_set & (IPT_RECENT_CHECK | IPT_RECENT_UPDATE)) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#937: FILE: net/ipv4/netfilter/ipt_recent.c:238:
+	unsigned i;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "t"
#971: FILE: net/ipv4/netfilter/ipt_recent.c:254:
+	if (t != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t"
#988: FILE: net/ipv4/netfilter/ipt_recent.c:262:
+	if (t == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t->proc"
#996: FILE: net/ipv4/netfilter/ipt_recent.c:270:
+	if (t->proc == NULL) {

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1234: FILE: net/ipv4/netfilter/ipt_recent.c:359:
+	seq_printf(seq, "\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#1239: FILE: net/ipv4/netfilter/ipt_recent.c:363:
+static struct seq_operations recent_seq_ops = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st"
#1256: FILE: net/ipv4/netfilter/ipt_recent.c:378:
+	if (st == NULL)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1282: FILE: net/ipv4/netfilter/ipt_recent.c:396:
+	u_int32_t addr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e"
#1335: FILE: net/ipv4/netfilter/ipt_recent.c:431:
+	if (e == NULL) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1363: FILE: net/ipv4/netfilter/ipt_recent.c:444:
+static struct file_operations recent_fops = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_dir"
#1437: FILE: net/ipv4/netfilter/ipt_recent.c:475:
+	if (proc_dir == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1449: FILE: net/ipv4/netfilter/ipt_recent.c:485:
+	BUG_ON(!list_empty(&tables));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076690.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 17 checks, 1384 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076690.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
