WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
writes to PCI ioremap space not done via writel, removes a chunk of code that

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: drivers/message/i2o/i2o_block.c:1135:
+^I^I^I^I^I   explode on 65536 bytes or higher $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#48: FILE: drivers/message/i2o/i2o_block.c:1136:
+					   as they don't know how to map them to scsi */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: drivers/message/i2o/i2o_core.c:357:
+		u32 *preserved_msg = (u32*)i2o_send_to_virt(c, msg[7]);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: drivers/message/i2o/i2o_core.c:1286:
+ *^Iso we simply have to shift the offset. This function does not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/message/i2o/i2o_core.c:1290:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/message/i2o/i2o_core.c:1290:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: drivers/message/i2o/i2o_core.c:1293:
+	if(msg < c->page_frame_map || msg >= c->page_frame_map + MSG_POOL_SIZE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: drivers/message/i2o/i2o_core.c:1294:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#149: FILE: drivers/message/i2o/i2o_core.c:1299:
+EXPORT_SYMBOL_GPL(i2o_receive_to_virt);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/message/i2o/i2o_core.c:1308:
+ *^Iso we simply have to shift the offset. This function does not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/message/i2o/i2o_core.c:1312:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/message/i2o/i2o_core.c:1312:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: drivers/message/i2o/i2o_core.c:1315:
+	if(msg < 0 || msg >= MSG_POOL_SIZE)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#166: FILE: drivers/message/i2o/i2o_core.c:1316:
+		BUG();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#170: FILE: drivers/message/i2o/i2o_core.c:1320:
+EXPORT_SYMBOL_GPL(i2o_send_to_virt);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#193: FILE: drivers/message/i2o/i2o_core.c:1373:
+		if((mv=I2O_REPLY_READ32(c))==0xFFFFFFFFUL)
 		      ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#193: FILE: drivers/message/i2o/i2o_core.c:1373:
+		if((mv=I2O_REPLY_READ32(c))==0xFFFFFFFFUL)
 		                           ^

ERROR:SPACING: space required before the open parenthesis '('
#193: FILE: drivers/message/i2o/i2o_core.c:1373:
+		if((mv=I2O_REPLY_READ32(c))==0xFFFFFFFFUL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: drivers/message/i2o/i2o_core.c:1373:
+		if((mv=I2O_REPLY_READ32(c))==0xFFFFFFFFUL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: drivers/message/i2o/i2o_core.c:1834:
+		if(!iop->dpt && !iop->promise)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/message/i2o/i2o_core.c:1839:
+^Iif(m==0xFFFFFFFFUL)^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#216: FILE: drivers/message/i2o/i2o_core.c:1839:
+	if(m==0xFFFFFFFFUL)	
 	    ^

ERROR:SPACING: space required before the open parenthesis '('
#216: FILE: drivers/message/i2o/i2o_core.c:1839:
+	if(m==0xFFFFFFFFUL)	

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#239: FILE: drivers/message/i2o/i2o_core.c:1850:
+	i2o_raw_writel(EIGHT_WORD_MSG_SIZE|SGL_OFFSET_0, msg);
 	                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: drivers/message/i2o/i2o_core.c:1851:
+	i2o_raw_writel(I2O_CMD_ADAPTER_RESET<<24|HOST_TID<<12|ADAPTER_TID, msg+4);
 	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#240: FILE: drivers/message/i2o/i2o_core.c:1851:
+	i2o_raw_writel(I2O_CMD_ADAPTER_RESET<<24|HOST_TID<<12|ADAPTER_TID, msg+4);
 	                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#240: FILE: drivers/message/i2o/i2o_core.c:1851:
+	i2o_raw_writel(I2O_CMD_ADAPTER_RESET<<24|HOST_TID<<12|ADAPTER_TID, msg+4);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#240: FILE: drivers/message/i2o/i2o_core.c:1851:
+	i2o_raw_writel(I2O_CMD_ADAPTER_RESET<<24|HOST_TID<<12|ADAPTER_TID, msg+4);
 	                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: drivers/message/i2o/i2o_core.c:1851:
+	i2o_raw_writel(I2O_CMD_ADAPTER_RESET<<24|HOST_TID<<12|ADAPTER_TID, msg+4);
 	                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#241: FILE: drivers/message/i2o/i2o_core.c:1852:
+	i2o_raw_writel(core_context, msg+8);
 	                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#255: FILE: drivers/message/i2o/i2o_core.c:1866:
+			printk(KERN_ERR "i2o: IOP reset timeout.\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#261: FILE: drivers/message/i2o/i2o_core.c:1872:
+		if( status[1] != 0)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#261: FILE: drivers/message/i2o/i2o_core.c:1872:
+		if( status[1] != 0)

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: drivers/message/i2o/i2o_core.c:1872:
+		if( status[1] != 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#263: FILE: drivers/message/i2o/i2o_core.c:1874:
+			printk(KERN_WARNING "i2o: IOP wrote wrong status word.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#297: FILE: drivers/message/i2o/i2o_core.c:1975:
+	msg=(void *)(c->msg_virt + m);
 	   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#308: FILE: drivers/message/i2o/i2o_core.c:1977:
+	i2o_raw_writel(NINE_WORD_MSG_SIZE|SGL_OFFSET_0, msg);
 	                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#309: FILE: drivers/message/i2o/i2o_core.c:1978:
+	i2o_raw_writel(I2O_CMD_STATUS_GET<<24|HOST_TID<<12|ADAPTER_TID, msg + 4);
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: drivers/message/i2o/i2o_core.c:1978:
+	i2o_raw_writel(I2O_CMD_STATUS_GET<<24|HOST_TID<<12|ADAPTER_TID, msg + 4);
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#309: FILE: drivers/message/i2o/i2o_core.c:1978:
+	i2o_raw_writel(I2O_CMD_STATUS_GET<<24|HOST_TID<<12|ADAPTER_TID, msg + 4);
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#309: FILE: drivers/message/i2o/i2o_core.c:1978:
+	i2o_raw_writel(I2O_CMD_STATUS_GET<<24|HOST_TID<<12|ADAPTER_TID, msg + 4);
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: drivers/message/i2o/i2o_core.c:2320:
+ *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/message/i2o/i2o_core.c:2324:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/message/i2o/i2o_core.c:2324:
+ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: drivers/message/i2o/i2o_core.c:2329:
+	void *msg;
+	if(m == 0xFFFFFFFFUL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#335: FILE: drivers/message/i2o/i2o_core.c:2329:
+	if(m == 0xFFFFFFFFUL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: drivers/message/i2o/i2o_core.c:2332:
+^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#339: FILE: drivers/message/i2o/i2o_core.c:2333:
+	i2o_raw_writel(THREE_WORD_MSG_SIZE|SGL_OFFSET_0, msg);
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#340: FILE: drivers/message/i2o/i2o_core.c:2334:
+	i2o_raw_writel(I2O_CMD_UTIL_NOP| HOST_TID << 12 | 0  , msg+4);
 	                               ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#340: FILE: drivers/message/i2o/i2o_core.c:2334:
+	i2o_raw_writel(I2O_CMD_UTIL_NOP| HOST_TID << 12 | 0  , msg+4);
 	                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#340: FILE: drivers/message/i2o/i2o_core.c:2334:
+	i2o_raw_writel(I2O_CMD_UTIL_NOP| HOST_TID << 12 | 0  , msg+4);
 	                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#341: FILE: drivers/message/i2o/i2o_core.c:2335:
+	i2o_raw_writel(0, msg+8);
 	                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: drivers/message/i2o/i2o_core.c:2336:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: drivers/message/i2o/i2o_core.c:2347:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/message/i2o/i2o_core.c:2347:
+ $

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#358: FILE: drivers/message/i2o/i2o_core.c:2352:
+	struct pci_dev *i960 = pci_find_slot(iop->pdev->bus->number, PCI_DEVFN(PCI_SLOT(iop->pdev->devfn), 0));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#359: FILE: drivers/message/i2o/i2o_core.c:2353:
+	struct pci_dev *i960 = pci_find_slot(iop->pdev->bus->number, PCI_DEVFN(PCI_SLOT(iop->pdev->devfn), 0));
+	if(i960)

ERROR:SPACING: space required before the open parenthesis '('
#359: FILE: drivers/message/i2o/i2o_core.c:2353:
+	if(i960)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: drivers/message/i2o/i2o_core.c:2355:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#363: FILE: drivers/message/i2o/i2o_core.c:2357:
+	/* Follow this sequence precisely or the controller
+	   ceases to perform useful functions until reboot */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: drivers/message/i2o/i2o_core.c:2357:
+	   ceases to perform useful functions until reboot */

ERROR:SPACING: space required before the open parenthesis '('
#365: FILE: drivers/message/i2o/i2o_core.c:2359:
+	if(i2o_reset_controller(iop) < 0 ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/message/i2o/i2o_core.c:2360:
+	if(i2o_reset_controller(iop) < 0 ||
+	  (i2o_status_get(iop) < 0) ||

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: drivers/message/i2o/i2o_core.c:2363:
+^I  ^Iret = -1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#369: FILE: drivers/message/i2o/i2o_core.c:2363:
+^I  ^Iret = -1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/message/i2o/i2o_core.c:2364:
+^I  ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: drivers/message/i2o/i2o_core.c:2364:
+^I  ^I$

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: drivers/message/i2o/i2o_core.c:2367:
+	if(i2o_status_get(iop) < 0)

WARNING:SPACING: space prohibited before semicolon
#374: FILE: drivers/message/i2o/i2o_core.c:2368:
+		ret = -1 ;

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: drivers/message/i2o/i2o_core.c:2369:
+	if(i960)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: drivers/message/i2o/i2o_core.c:2374:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#389: FILE: drivers/message/i2o/i2o_core.c:2387:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#390: FILE: drivers/message/i2o/i2o_core.c:2388:
+	if(iop->promise)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/message/i2o/i2o_core.c:2390:
+^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#418: FILE: drivers/message/i2o/i2o_core.c:2456:
+	msg=(void *)(c->msg_virt+m);
 	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#418: FILE: drivers/message/i2o/i2o_core.c:2456:
+	msg=(void *)(c->msg_virt+m);
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#435: FILE: drivers/message/i2o/i2o_core.c:2466:
+	i2o_raw_writel(EIGHT_WORD_MSG_SIZE| TRL_OFFSET_6, msg);
 	                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#436: FILE: drivers/message/i2o/i2o_core.c:2467:
+	i2o_raw_writel(I2O_CMD_OUTBOUND_INIT<<24 | HOST_TID<<12 | ADAPTER_TID, msg + 4);;
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#436: FILE: drivers/message/i2o/i2o_core.c:2467:
+	i2o_raw_writel(I2O_CMD_OUTBOUND_INIT<<24 | HOST_TID<<12 | ADAPTER_TID, msg + 4);;
 	                                                   ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#436: FILE: drivers/message/i2o/i2o_core.c:2467:
+	i2o_raw_writel(I2O_CMD_OUTBOUND_INIT<<24 | HOST_TID<<12 | ADAPTER_TID, msg + 4);;

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#441: FILE: drivers/message/i2o/i2o_core.c:2472:
+	i2o_raw_writel(MSG_FRAME_SIZE << 16|0x80, msg + 20);	/* Outbound msg frame size in words and Initcode */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#441: FILE: drivers/message/i2o/i2o_core.c:2472:
+	i2o_raw_writel(MSG_FRAME_SIZE << 16|0x80, msg + 20);	/* Outbound msg frame size in words and Initcode */
 	                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#451: FILE: drivers/message/i2o/i2o_core.c:2545:
+		if(c->promise)		/* May be overkill - check later */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: drivers/message/i2o/i2o_core.c:3785:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#480: FILE: drivers/message/i2o/i2o_core.c:3793:
+		printk(KERN_INFO "I2O: Promise vaguely I2O mode activated.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#513: FILE: drivers/message/i2o/i2o_core.c:3967:
+			printk(KERN_INFO "i2o: Promise SuperTrak SX6000 series controller on bus %d at %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/message/i2o/i2o_core.c:3968:
+			printk(KERN_INFO "i2o: Promise SuperTrak SX6000 series controller on bus %d at %d.\n",
+				dev->bus->number, dev->devfn);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#516: FILE: drivers/message/i2o/i2o_core.c:3970:
+		else if(dev->vendor == PCI_VENDOR_ID_DPT &&
+			dev->device == 0xA511)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#516: FILE: drivers/message/i2o/i2o_core.c:3970:
+		else if(dev->vendor == PCI_VENDOR_ID_DPT &&

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#516: FILE: drivers/message/i2o/i2o_core.c:3970:
 		}
+		else if(dev->vendor == PCI_VENDOR_ID_DPT &&

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#519: FILE: drivers/message/i2o/i2o_core.c:3973:
+			printk(KERN_INFO "i2o: DPT controller on bus %d at %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/message/i2o/i2o_core.c:3974:
+			printk(KERN_INFO "i2o: DPT controller on bus %d at %d.\n",
+				dev->bus->number, dev->devfn);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#522: FILE: drivers/message/i2o/i2o_core.c:3976:
+		else if (dev->class >> 8 == PCI_CLASS_INTELLIGENT_I2O)
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#522: FILE: drivers/message/i2o/i2o_core.c:3976:
+		}
+		else if (dev->class >> 8 == PCI_CLASS_INTELLIGENT_I2O)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#524: FILE: drivers/message/i2o/i2o_core.c:3978:
+			if((dev->class & 0xFF) > 1)
+			{

ERROR:SPACING: space required before the open parenthesis '('
#524: FILE: drivers/message/i2o/i2o_core.c:3978:
+			if((dev->class & 0xFF) > 1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#526: FILE: drivers/message/i2o/i2o_core.c:3980:
+				printk(KERN_INFO "i2o: I2O Controller found but does not support I2O 1.5 (skipping).\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#529: FILE: drivers/message/i2o/i2o_core.c:3983:
+			printk(KERN_INFO "i2o: I2O controller on bus %d at %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/message/i2o/i2o_core.c:3984:
+			printk(KERN_INFO "i2o: I2O controller on bus %d at %d.\n",
+				dev->bus->number, dev->devfn);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#532: FILE: drivers/message/i2o/i2o_core.c:3986:
+		}
+		else	/* Not I2O */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: drivers/message/i2o/i2o_core.c:3988:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#633: FILE: drivers/message/i2o/i2o_scsi.c:169:
+		printk("Failing message is %p.\n", mr);

ERROR:SPACING: space required before the open parenthesis '('
#658: FILE: drivers/message/i2o/i2o_scsi.c:174:
+		if(!current_command)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#664: FILE: drivers/message/i2o/i2o_scsi.c:178:
+		printk(KERN_WARNING "%s: Command %ld: controller busy.\n", c->name, current_command->serial_number);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#664: FILE: drivers/message/i2o/i2o_scsi.c:178:
+		printk(KERN_WARNING "%s: Command %ld: controller busy.\n", c->name, current_command->serial_number);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: drivers/message/i2o/i2o_scsi.c:185:
+^I^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#683: FILE: drivers/message/i2o/i2o_scsi.c:187:
+		i2o_raw_writel((readl(mr) & 0x00FFFFFF) | (I2O_CMD_UTIL_NOP)<<24, mr);
 		                                                            ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#701: FILE: drivers/message/i2o/i2o_scsi.c:428:
+		printk(KERN_INFO "i2o_scsi: Unable to alloc %Zd byte SG chain buffer pool.\n", SG_CHAIN_POOL_SZ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#701: FILE: drivers/message/i2o/i2o_scsi.c:428:
+		printk(KERN_INFO "i2o_scsi: Unable to alloc %Zd byte SG chain buffer pool.\n", SG_CHAIN_POOL_SZ);

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#701: FILE: drivers/message/i2o/i2o_scsi.c:428:
+		printk(KERN_INFO "i2o_scsi: Unable to alloc %Zd byte SG chain buffer pool.\n", SG_CHAIN_POOL_SZ);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#709: FILE: drivers/message/i2o/i2o_scsi.c:434:
+		printk(KERN_INFO "  chain_pool: %Zd bytes @ %p\n", SG_CHAIN_POOL_SZ, sg_chain_pool);

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#709: FILE: drivers/message/i2o/i2o_scsi.c:434:
+		printk(KERN_INFO "  chain_pool: %Zd bytes @ %p\n", SG_CHAIN_POOL_SZ, sg_chain_pool);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#710: FILE: drivers/message/i2o/i2o_scsi.c:435:
+		printk(KERN_INFO "  (%Zd byte buffers X %d can_queue X %d i2o controllers)\n",

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#710: FILE: drivers/message/i2o/i2o_scsi.c:435:
+		printk(KERN_INFO "  (%Zd byte buffers X %d can_queue X %d i2o controllers)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/message/i2o/i2o_scsi.c:436:
+		printk(KERN_INFO "  (%Zd byte buffers X %d can_queue X %d i2o controllers)\n",
 				SG_CHAIN_BUF_SZ, I2O_SCSI_CAN_QUEUE, i2o_num_controllers);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#764: FILE: drivers/message/i2o/i2o_scsi.c:721:
+			/* FIXME: we need to map this but its shared across all devices
+			   so the proper fix is non-trivial */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#764: FILE: drivers/message/i2o/i2o_scsi.c:721:
+			   so the proper fix is non-trivial */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#773: FILE: drivers/message/i2o/i2o_scsi.c:921:
+	i2o_raw_writel(c->unit << 16 | tid, msg+12);
 	                                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#784: FILE: include/linux/i2o.h:344:
+extern void *i2o_send_to_virt(struct i2o_controller *, u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2o_controller *' should also have an identifier name
#784: FILE: include/linux/i2o.h:344:
+extern void *i2o_send_to_virt(struct i2o_controller *, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#784: FILE: include/linux/i2o.h:344:
+extern void *i2o_send_to_virt(struct i2o_controller *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#785: FILE: include/linux/i2o.h:345:
+extern void *i2o_receive_to_virt(struct i2o_controller *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2o_controller *' should also have an identifier name
#785: FILE: include/linux/i2o.h:345:
+extern void *i2o_receive_to_virt(struct i2o_controller *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#785: FILE: include/linux/i2o.h:345:
+extern void *i2o_receive_to_virt(struct i2o_controller *, u32);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253978.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 50 errors, 43 warnings, 32 checks, 713 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000253978.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
