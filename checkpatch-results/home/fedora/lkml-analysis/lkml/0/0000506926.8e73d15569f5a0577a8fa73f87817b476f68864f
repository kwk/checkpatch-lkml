WARNING:TYPO_SPELLING: 'accidently' may be misspelled - perhaps 'accidentally'?
#59: 
headers so we don't accidently reuse it's value. open_exec becomes
                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
diff -uNrX linux-ignore-files linux-2.4.12/Documentation/Changes linux-2.4.12.eb2/Documentation/Changes

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/cris/kernel/sys_cris.c:55:
+        flags &= ~(MAP_EXECUTABLE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/cris/kernel/sys_cris.c:55:
+        flags &= ~(MAP_EXECUTABLE);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#199: FILE: arch/mips/kernel/irixelf.c:300:
 	  if(eppnt->p_type == PT_LOAD) {
+	    int elf_type = MAP_PRIVATE;

WARNING:TABSTOP: Statements should start on a tabstop
#201: FILE: arch/mips/kernel/irixelf.c:301:
+	    int elf_type = MAP_PRIVATE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: arch/mips64/kernel/syscall.c:66:
+        flags &= ~(MAP_EXECUTABLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/mips64/kernel/syscall.c:66:
+        flags &= ~(MAP_EXECUTABLE);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#529: FILE: fs/binfmt_elf.c:290:
 	  if (eppnt->p_type == PT_LOAD) {
+	    int elf_type = MAP_PRIVATE;

WARNING:TABSTOP: Statements should start on a tabstop
#531: FILE: fs/binfmt_elf.c:291:
+	    int elf_type = MAP_PRIVATE;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#540: FILE: fs/binfmt_elf.c:645:
+		elf_flags = MAP_PRIVATE|MAP_EXECUTABLE;
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: fs/namei.c:216:
+ * the following values: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#737: FILE: fs/namei.c:1079:
+		if (nd.mnt->mnt_flags & MNT_NOEXEC)
 		    ^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXUGO' are not preferred. Consider using octal permissions '0111'.
#741: FILE: fs/namei.c:1083:
+		if (!(inode->i_mode & S_IXUGO))

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: fs/open.c:647:
+^Iif (flags & O_EXEC) $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 10 warnings, 1 checks, 648 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000506926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
