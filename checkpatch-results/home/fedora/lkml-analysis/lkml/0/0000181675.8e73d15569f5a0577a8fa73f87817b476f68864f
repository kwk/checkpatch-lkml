WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: fs/9p/mux.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#42: FILE: fs/9p/mux.c:2:
+ * linux/fs/9p/mux.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: fs/9p/mux.c:20:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: fs/9p/mux.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: fs/9p/mux.c:42:
+ * @req: RPC request structure $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#90: FILE: fs/9p/mux.c:50:
+		req->rcall);
 		     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: fs/9p/mux.c:68:
+	int readnum = 0;
+	while (rd < sz) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xread', this function's name, in a string
#113: FILE: fs/9p/mux.c:73:
+				"xread on ses %p, at try %d: want %ld, got %d, errno %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#126: FILE: fs/9p/mux.c:86:
+ * @rcall: fcall structure to read into
     ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#133: FILE: fs/9p/mux.c:93:
+	     struct v9fs_fcall *rcall, int rcalllen)
 	                        ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: fs/9p/mux.c:138:
+^I/* we now have an in-memory string that is the reply. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: fs/9p/mux.c:140:
+^I * save for v9fs_alloc errors. $

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#183: FILE: fs/9p/mux.c:143:
+				     rcall, rcalllen);
 				     ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Connected>
#206: FILE: fs/9p/mux.c:166:
+				       ((v9ses->transport->status != Connected)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#207: FILE: fs/9p/mux.c:167:
+					|| (req->rcall != 0)
 					         ^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#207: FILE: fs/9p/mux.c:167:
+				       ((v9ses->transport->status != Connected)
+					|| (req->rcall != 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#208: FILE: fs/9p/mux.c:168:
+					|| (req->rcall != 0)
+					|| dprintcond(v9ses, req)));

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#210: FILE: fs/9p/mux.c:170:
+	dprintk(DEBUG_MUX, "got it: rcall %p\n", req->rcall);
 	                            ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#210: FILE: fs/9p/mux.c:170:
+	dprintk(DEBUG_MUX, "got it: rcall %p\n", req->rcall);
 	                                              ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Disconnected>
#211: FILE: fs/9p/mux.c:171:
+	if (v9ses->transport->status == Disconnected)

CHECK:BRACES: braces {} should be used on all arms of this statement
#253: FILE: fs/9p/mux.c:213:
+	if (ret != tcall->size) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#256: FILE: fs/9p/mux.c:216:
+		if (req->rcall)
 		         ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#257: FILE: fs/9p/mux.c:217:
+			safe_cache_free(v9ses->slab, req->rcall);
 			                                  ^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#262: FILE: fs/9p/mux.c:222:
+	} else

WARNING:INDENTED_LABEL: labels should not be indented
#265: FILE: fs/9p/mux.c:225:
+      free_data:

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#274: FILE: fs/9p/mux.c:234:
+ * @rcall: buffer to place response into
     ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#280: FILE: fs/9p/mux.c:240:
+	     struct v9fs_fcall **rcall)
 	                         ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#287: FILE: fs/9p/mux.c:247:
+	if (rcall)
 	    ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#288: FILE: fs/9p/mux.c:248:
+		*rcall = NULL;
 		 ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#300: FILE: fs/9p/mux.c:260:
+	req->rcall = NULL;
 	     ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#312: FILE: fs/9p/mux.c:272:
+	fcall = req->rcall;
 	             ^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#317: FILE: fs/9p/mux.c:277:
+		if (v9ses->transport->status != Disconnected
+		    && tcall->id != TFLUSH) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#334: FILE: fs/9p/mux.c:294:
+	if (!fcall)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#336: FILE: fs/9p/mux.c:296:
+	else {

WARNING:INDENTED_LABEL: labels should not be indented
#353: FILE: fs/9p/mux.c:313:
+      release_req:

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#355: FILE: fs/9p/mux.c:315:
+	if (rcall)
 	    ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#356: FILE: fs/9p/mux.c:316:
+		*rcall = fcall;
 		 ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#373: FILE: fs/9p/mux.c:333:
+	struct v9fs_fcall *rcall = NULL;
 	                   ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#383: FILE: fs/9p/mux.c:343:
+		rcall = kmem_cache_alloc(v9ses->slab, GFP_KERNEL);
 		^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#385: FILE: fs/9p/mux.c:345:
+		err = read_message(v9ses, rcall, v9ses->slab_size);
 		                          ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#387: FILE: fs/9p/mux.c:347:
+			safe_cache_free(v9ses->slab, rcall);
 			                             ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#398: FILE: fs/9p/mux.c:358:
+				req->rcall = rcall;
 				     ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#398: FILE: fs/9p/mux.c:358:
+				req->rcall = rcall;
 				             ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req->tcall->id == TFLUSH'
#403: FILE: fs/9p/mux.c:363:
+		if (req && (req->tcall->id == TFLUSH)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#411: FILE: fs/9p/mux.c:371:
+					if (treq->rcall)
 					          ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#413: FILE: fs/9p/mux.c:373:
+								treq->rcall);
 								      ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#426: FILE: fs/9p/mux.c:386:
+			safe_cache_free(v9ses->slab, rcall);
 			                             ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: fs/9p/mux.c:409:
+ * $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#486: FILE: fs/9p/mux.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#487: FILE: fs/9p/mux.h:2:
+ * linux/fs/9p/mux.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#504: FILE: fs/9p/mux.h:19:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#505: FILE: fs/9p/mux.h:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#513: FILE: fs/9p/mux.h:28:
+	struct v9fs_fcall *rcall;
 	                   ^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#522: FILE: fs/9p/mux.h:37:
+		  struct v9fs_fcall *tcall, struct v9fs_fcall **rcall);
 		                                                ^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#528: FILE: fs/9p/trans_sock.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#548: FILE: fs/9p/trans_sock.c:21:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#549: FILE: fs/9p/trans_sock.c:22:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#560: FILE: fs/9p/trans_sock.c:33:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: fs/9p/trans_sock.c:49:
+ * @v9ses: session information $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: fs/9p/trans_sock.c:96:
+ * @v9ses: session information $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ts)...) over kmalloc(sizeof(struct v9fs_trans_sock)...)
#686: FILE: fs/9p/trans_sock.c:159:
+	ts = kmalloc(sizeof(struct v9fs_trans_sock), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ts->s'
#780: FILE: fs/9p/trans_sock.c:253:
+	if ((ts) && (ts->s)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#809: FILE: fs/9p/transport.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#810: FILE: fs/9p/transport.h:2:
+ * linux/fs/9p/transport.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#827: FILE: fs/9p/transport.h:19:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#828: FILE: fs/9p/transport.h:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPACING: Unnecessary space before function pointer arguments
#843: FILE: fs/9p/transport.h:35:
+	int (*init) (struct v9fs_session_info *, const char *, char *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_session_info *' should also have an identifier name
#843: FILE: fs/9p/transport.h:35:
+	int (*init) (struct v9fs_session_info *, const char *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#843: FILE: fs/9p/transport.h:35:
+	int (*init) (struct v9fs_session_info *, const char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#843: FILE: fs/9p/transport.h:35:
+	int (*init) (struct v9fs_session_info *, const char *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#844: FILE: fs/9p/transport.h:36:
+	int (*write) (struct v9fs_transport *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_transport *' should also have an identifier name
#844: FILE: fs/9p/transport.h:36:
+	int (*write) (struct v9fs_transport *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#844: FILE: fs/9p/transport.h:36:
+	int (*write) (struct v9fs_transport *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#844: FILE: fs/9p/transport.h:36:
+	int (*write) (struct v9fs_transport *, void *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#845: FILE: fs/9p/transport.h:37:
+	int (*read) (struct v9fs_transport *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_transport *' should also have an identifier name
#845: FILE: fs/9p/transport.h:37:
+	int (*read) (struct v9fs_transport *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#845: FILE: fs/9p/transport.h:37:
+	int (*read) (struct v9fs_transport *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#845: FILE: fs/9p/transport.h:37:
+	int (*read) (struct v9fs_transport *, void *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#846: FILE: fs/9p/transport.h:38:
+	void (*close) (struct v9fs_transport *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct v9fs_transport *' should also have an identifier name
#846: FILE: fs/9p/transport.h:38:
+	void (*close) (struct v9fs_transport *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 54 warnings, 12 checks, 795 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181675.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
