ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: include/linux/sysctl.h:11:
+ **  is unstable and deprecated and will be removed in the future. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: kernel/sysctl.c:110:
+static int parse_table_name(char *name, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: kernel/sysctl.c:841:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: kernel/sysctl.c:843:
+^I    tmp.name[1] != KERN_VERSION) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: kernel/sysctl.c:845:
+^I^Iprintk(KERN_INFO "%s: numerical sysctl ", current->comm); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: kernel/sysctl.c:845:
+		int i;
+		printk(KERN_INFO "%s: numerical sysctl ", current->comm); 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#128: FILE: kernel/sysctl.c:845:
+		printk(KERN_INFO "%s: numerical sysctl ", current->comm); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: kernel/sysctl.c:846:
+^I^Ifor (i = 0; i < tmp.nlen; i++) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: kernel/sysctl.c:847:
+^I^I^Iprintk("%d ", tmp.name[i]); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: kernel/sysctl.c:847:
+			printk("%d ", tmp.name[i]); 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: kernel/sysctl.c:848:
+		printk("is obsolete.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: kernel/sysctl.c:849:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: kernel/sysctl.c:858:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: kernel/sysctl.c:867:
+^Istruct list_head *node; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: kernel/sysctl.c:870:
+	int err = PTR_ERR(name);
+	if (IS_ERR(name))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: kernel/sysctl.c:873:
+^Inode = &root_table_header.ctl_entry; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: kernel/sysctl.c:874:
+^Ido { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: kernel/sysctl.c:875:
+^I^Istruct ctl_table_header *tbl = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: kernel/sysctl.c:876:
+^I^I^Ilist_entry(node, struct ctl_table_header, ctl_entry);^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: kernel/sysctl.c:878:
+		void *context = NULL;
+		err = parse_table_name(name, oldval, oldlenp, newval, newlen,

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#164: FILE: kernel/sysctl.c:881:
+		if (context)
+			kfree(context);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: kernel/sysctl.c:882:
+^I^Iif (err != -ENOTDIR) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: kernel/sysctl.c:883:
+^I^I^Ibreak;^I $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: kernel/sysctl.c:886:
+^Iunlock_kernel(); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: kernel/sysctl.c:887:
+^Iputname(name); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: kernel/sysctl.c:893:
+asmlinkage long compat_sysctl_name(char __user *username,
+				void __user *coldval, compat_size_t *coldlenp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: kernel/sysctl.c:896:
+^Iunsigned long oldlen; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: kernel/sysctl.c:899:
+^Ivoid *newval, *oldval; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: kernel/sysctl.c:905:
+^Ioldval = compat_alloc_user_space(oldlen + newlen); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: kernel/sysctl.c:906:
+^Inewval = oldval + oldlen; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: kernel/sysctl.c:908:
+^I^Ireturn -EFAULT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: kernel/sysctl.c:916:
+^Iset_fs(KERNEL_DS); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: kernel/sysctl.c:917:
+^Ierr = sys_sysctl_name(name, oldval, &oldlen, newval, newlen); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: kernel/sysctl.c:918:
+^Iset_fs(oldfs); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: kernel/sysctl.c:919:
+^Iputname(name); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/sysctl.c:922:
+^Iif (copy_in_user(coldval, oldval, oldlen)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: kernel/sysctl.c:923:
+^I^Ireturn -EFAULT; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: kernel/sysctl.c:924:
+^Ireturn put_user(oldlen, coldlenp); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: kernel/sysctl.c:992:
+static int parse_table_name(char *name, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: kernel/sysctl.c:993:
+static int parse_table_name(char *name, 
+		       void __user *oldval, size_t __user *oldlenp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: kernel/sysctl.c:1000:
+^Is = strsep(&name, "./"); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: kernel/sysctl.c:1003:
+^I^I^Icontinue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: kernel/sysctl.c:1008:
+^I^I^I^I/* We don't bother passing name down. None of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: kernel/sysctl.c:1009:
+^I^I^I^I   existing strategy functions use it. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#235: FILE: kernel/sysctl.c:1009:
+				/* We don't bother passing name down. None of the 
+				   existing strategy functions use it. */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: kernel/sysctl.c:1009:
+				   existing strategy functions use it. */ 

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#236: FILE: kernel/sysctl.c:1010:
+				error = table->strategy(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: kernel/sysctl.c:1015:
+^I^I^I^I^Ireturn error; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: kernel/sysctl.c:1020:
+^I^Ierror = do_sysctl_strategy(table, NULL, 0, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: arch/i386/kernel/entry.S:881:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355996.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 9 warnings, 3 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000355996.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
