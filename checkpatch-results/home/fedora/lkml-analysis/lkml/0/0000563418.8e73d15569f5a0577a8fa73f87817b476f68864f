ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: Documentation/Configure.help:13435:
+  Pentium III, Pentium 4, Xeon etc. You will obviously need the actual $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: arch/i386/kernel/microcode.c:7:
+ *^Ibelonging to IA-32 family - PentiumPro, Pentium II, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/i386/kernel/microcode.c:10:
+ *^IReference: Section 8.10 of Volume III, Intel Pentium 4 Manual, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: arch/i386/kernel/microcode.c:64:
+#define MICROCODE_VERSION ^I"1.08"$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#177: FILE: arch/i386/kernel/microcode.c:73:
+#define Dprintk(x...) printk(##x)

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#177: FILE: arch/i386/kernel/microcode.c:73:
+#define Dprintk(x...) printk(##x)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: arch/i386/kernel/microcode.c:128:
+^Iprintk(KERN_INFO $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#211: FILE: arch/i386/kernel/microcode.c:128:
+	printk(KERN_INFO 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: arch/i386/kernel/microcode.c:129:
+^I^I"IA-32 Microcode Update Driver: v%s <tigran@veritas.com>\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/i386/kernel/microcode.c:142:
+^Iprintk(KERN_INFO "IA-32 Microcode Update Driver v%s unregistered\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#225: FILE: arch/i386/kernel/microcode.c:142:
+	printk(KERN_INFO "IA-32 Microcode Update Driver v%s unregistered\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/i386/kernel/microcode.c:143:
+	printk(KERN_INFO "IA-32 Microcode Update Driver v%s unregistered\n", 
 			MICROCODE_VERSION);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: arch/i386/kernel/microcode.c:196:
+	if (c->x86_vendor != X86_VENDOR_INTEL || c->x86 < 6 ||
+		test_bit(X86_FEATURE_IA64, &c->x86_capability)){

ERROR:SPACING: space required before the open brace '{'
#243: FILE: arch/i386/kernel/microcode.c:196:
+		test_bit(X86_FEATURE_IA64, &c->x86_capability)){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#244: FILE: arch/i386/kernel/microcode.c:197:
+		printk(KERN_ERR "microcode: CPU%d not a capable Intel processor\n", cpu_num);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86_model >= 5'
#253: FILE: arch/i386/kernel/microcode.c:203:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->x86 > 6'
#253: FILE: arch/i386/kernel/microcode.c:203:
+	if ((c->x86_model >= 5) || (c->x86 > 6)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#266: FILE: arch/i386/kernel/microcode.c:216:
+			Dprintk("   Header Revision %d\n",microcode[i].hdrver);
 			                                 ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#268: FILE: arch/i386/kernel/microcode.c:218:
+				((microcode[i].date >> 24 ) & 0xff),

ERROR:SPACING: space prohibited before that close parenthesis ')'
#269: FILE: arch/i386/kernel/microcode.c:219:
+				((microcode[i].date >> 16 ) & 0xff),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: arch/i386/kernel/microcode.c:226:
+			Dprintk("   Checksum %x\n",microcode[i].cksum);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: arch/i386/kernel/microcode.c:227:
+			Dprintk("   Loader Revision %x\n",microcode[i].ldrver);
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: arch/i386/kernel/microcode.c:228:
+			Dprintk("   Processor Flags %x\n\n",microcode[i].pf);
 			                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#313: FILE: arch/i386/kernel/microcode.c:311:
+			printk(KERN_ERR "microcode: out of memory for saved microcode\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: include/asm-i386/processor.h:468:
+#define MICROCODE_IOCFREE	_IO('6',0)
                          	       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563418.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 6 warnings, 5 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563418.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
