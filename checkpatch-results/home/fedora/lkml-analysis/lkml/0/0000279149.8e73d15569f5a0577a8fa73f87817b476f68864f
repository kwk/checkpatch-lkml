WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -Nur linux-2.6.6.org/drivers/scsi/Kconfig linux-2.6.6/drivers/scsi/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#40: FILE: drivers/scsi/Kconfig:58:
+config SCSI_DUMP
+	tristate "SCSI dump support"
+	depends on DISKDUMP && SCSI
+	help
+	   SCSI dump support
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#68: FILE: drivers/scsi/scsi.c:694:
+#if defined(CONFIG_SCSI_DUMP) || defined(CONFIG_SCSI_DUMP_MODULE)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/scsi/scsi_dump.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#80: FILE: drivers/scsi/scsi_dump.c:2:
+ *  linux/drivers/scsi/scsi_dump.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: drivers/scsi/scsi_dump.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#100: FILE: drivers/scsi/scsi_dump.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#131: FILE: drivers/scsi/scsi_dump.c:53:
+# define Dbg(x, ...) printk(KERN_INFO "scsi_dump:" x "\n", ## __VA_ARGS__)

CHECK:CAMELCASE: Avoid CamelCase: <Dbg>
#131: FILE: drivers/scsi/scsi_dump.c:53:
+# define Dbg(x, ...) printk(KERN_INFO "scsi_dump:" x "\n", ## __VA_ARGS__)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#136: FILE: drivers/scsi/scsi_dump.c:58:
+#define Err(x, ...)	printk(KERN_ERR "scsi_dump: " x "\n", ## __VA_ARGS__);

CHECK:CAMELCASE: Avoid CamelCase: <Err>
#136: FILE: drivers/scsi/scsi_dump.c:58:
+#define Err(x, ...)	printk(KERN_ERR "scsi_dump: " x "\n", ## __VA_ARGS__);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#136: FILE: drivers/scsi/scsi_dump.c:58:
+#define Err(x, ...)	printk(KERN_ERR "scsi_dump: " x "\n", ## __VA_ARGS__);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#137: FILE: drivers/scsi/scsi_dump.c:59:
+#define Warn(x, ...)	printk(KERN_WARNING "scsi_dump: " x "\n", ## __VA_ARGS__)

CHECK:CAMELCASE: Avoid CamelCase: <Warn>
#137: FILE: drivers/scsi/scsi_dump.c:59:
+#define Warn(x, ...)	printk(KERN_WARNING "scsi_dump: " x "\n", ## __VA_ARGS__)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#138: FILE: drivers/scsi/scsi_dump.c:60:
+#define Info(x, ...)	printk(x "\n", ## __VA_ARGS__)

CHECK:CAMELCASE: Avoid CamelCase: <Info>
#138: FILE: drivers/scsi/scsi_dump.c:60:
+#define Info(x, ...)	printk(x "\n", ## __VA_ARGS__)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#143: FILE: drivers/scsi/scsi_dump.c:65:
+static int quiesce_ok = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#144: FILE: drivers/scsi/scsi_dump.c:66:
+static Scsi_Cmnd scsi_dump_cmnd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#146: FILE: drivers/scsi/scsi_dump.c:68:
+static uint32_t module_crc;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: drivers/scsi/scsi_dump.c:70:
+static void rw_intr(Scsi_Cmnd * scmd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#156: FILE: drivers/scsi/scsi_dump.c:78:
+static void init_scsi_command(Scsi_Device *sdev, Scsi_Cmnd *scmd, void *buf, int len, unsigned char direction, int set_lun)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#156: FILE: drivers/scsi/scsi_dump.c:78:
+static void init_scsi_command(Scsi_Device *sdev, Scsi_Cmnd *scmd, void *buf, int len, unsigned char direction, int set_lun)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#162: FILE: drivers/scsi/scsi_dump.c:84:
+	scmd->buffer	= scmd->request_buffer = buf;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#163: FILE: drivers/scsi/scsi_dump.c:85:
+	scmd->bufflen	= scmd->request_bufflen = len;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: drivers/scsi/scsi_dump.c:87:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#172: FILE: drivers/scsi/scsi_dump.c:94:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: drivers/scsi/scsi_dump.c:134:
+static void init_sync_command(Scsi_Device *sdev, Scsi_Cmnd * scmd)

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#229: FILE: drivers/scsi/scsi_dump.c:151:
+static int init_rw_command(struct disk_dump_partition *dump_part, Scsi_Device *sdev, Scsi_Cmnd * scmd, int rw, int block, void *buf, unsigned int len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: drivers/scsi/scsi_dump.c:151:
+static int init_rw_command(struct disk_dump_partition *dump_part, Scsi_Device *sdev, Scsi_Cmnd * scmd, int rw, int block, void *buf, unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/scsi/scsi_dump.c:159:
+		Err("block number %d is larger than %lu",
+				block + this_count, dump_part->nr_sects);

CHECK:SPACING: No space is necessary after a cast
#285: FILE: drivers/scsi/scsi_dump.c:207:
+	scmd->cmnd[2] = (unsigned char) (block >> 24) & 0xff;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#286: FILE: drivers/scsi/scsi_dump.c:208:
+	scmd->cmnd[3] = (unsigned char) (block >> 16) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#287: FILE: drivers/scsi/scsi_dump.c:209:
+	scmd->cmnd[4] = (unsigned char) (block >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#288: FILE: drivers/scsi/scsi_dump.c:210:
+	scmd->cmnd[5] = (unsigned char) block & 0xff;

CHECK:SPACING: No space is necessary after a cast
#289: FILE: drivers/scsi/scsi_dump.c:211:
+	scmd->cmnd[7] = (unsigned char) (this_count >> 8) & 0xff;

CHECK:SPACING: No space is necessary after a cast
#290: FILE: drivers/scsi/scsi_dump.c:212:
+	scmd->cmnd[8] = (unsigned char) this_count & 0xff;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/scsi/scsi_dump.c:215:
+	init_scsi_command(sdev, scmd, buf, len,
+			(rw == WRITE ? SCSI_DATA_WRITE : SCSI_DATA_READ), 1);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: drivers/scsi/scsi_dump.c:224:
+ * ^I> 0: should retry$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: drivers/scsi/scsi_dump.c:225:
+ * ^I= 0: success$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: drivers/scsi/scsi_dump.c:226:
+ * ^I< 0: fail$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#323: FILE: drivers/scsi/scsi_dump.c:245:
+		if (status == GOOD || status == INTERMEDIATE_GOOD
+				   || status == INTERMEDIATE_C_GOOD)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#339: FILE: drivers/scsi/scsi_dump.c:261:
+	struct Scsi_Host *host = scmd->device->host;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scmd->done"
#357: FILE: drivers/scsi/scsi_dump.c:279:
+		while (scmd->done != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#359: FILE: drivers/scsi/scsi_dump.c:281:
+			udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#385: FILE: drivers/scsi/scsi_dump.c:307:
+	if ((ret = send_command(&scsi_dump_cmnd)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#401: FILE: drivers/scsi/scsi_dump.c:323:
+	if ((ret = send_command(&scsi_dump_cmnd)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#405: FILE: drivers/scsi/scsi_dump.c:327:
+		if ((ret = send_command(&scsi_dump_cmnd)) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#405: FILE: drivers/scsi/scsi_dump.c:327:
+		if ((ret = send_command(&scsi_dump_cmnd)) < 0) {
+			Err("sense failed");
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#415: FILE: drivers/scsi/scsi_dump.c:337:
+ * ^I0:^Ithe device is ok$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: drivers/scsi/scsi_dump.c:338:
+ * ^I< 0:^Ithe device is not ok$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#417: FILE: drivers/scsi/scsi_dump.c:339:
+ * ^I> 0:^ICannot determine$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/scsi/scsi_dump.c:359:
+		Warn("device not online: host %d channel %d id %d lun %d",
+				host->host_no, sdev->channel, sdev->id, sdev->lun);

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#441: FILE: drivers/scsi/scsi_dump.c:363:
+		Err("SCSI disk has been changed. Prohibiting further I/O: host %d channel %d id %d lun %d",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/scsi/scsi_dump.c:364:
+		Err("SCSI disk has been changed. Prohibiting further I/O: host %d channel %d id %d lun %d",
+			host->host_no, sdev->channel, sdev->id, sdev->lun);

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#454: FILE: drivers/scsi/scsi_dump.c:376:
+	if (!spin_is_locked(host->host_lock)) {

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/scsi/scsi_dump.c:380:
+		Warn("host_lock is held: host %d channel %d id %d lun %d",
+				host->host_no, sdev->channel, sdev->id, sdev->lun);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host_Template>
#474: FILE: drivers/scsi/scsi_dump.c:396:
+	Scsi_Host_Template *hostt = host->hostt;

CHECK:BRACES: braces {} should be used on all arms of this statement
#480: FILE: drivers/scsi/scsi_dump.c:402:
+	if (hostt->eh_host_reset_handler) {
[...]
+	} else if (hostt->eh_bus_reset_handler) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#486: FILE: drivers/scsi/scsi_dump.c:408:
+	} else

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#502: FILE: drivers/scsi/scsi_dump.c:424:
+	if ((ret = send_command(&scsi_dump_cmnd)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#523: FILE: drivers/scsi/scsi_dump.c:445:
+	if ((ret = scsi_dump_reset(sdev)) < 0)

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#533: FILE: drivers/scsi/scsi_dump.c:455:
+static int scsi_dump_rw_block(struct disk_dump_partition *dump_part, int rw, unsigned long dump_block_nr, void *buf, int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/scsi/scsi_dump.c:468:
+	ret = init_rw_command(dump_part, sdev, &scsi_dump_cmnd, rw,
+					block_nr, buf, DUMP_BLOCK_SIZE * len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sdev"
#576: FILE: drivers/scsi/scsi_dump.c:498:
+	if (sdev == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#584: FILE: drivers/scsi/scsi_dump.c:506:
+
+

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#598: FILE: drivers/scsi/scsi_dump.c:520:
+		return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#603: FILE: drivers/scsi/scsi_dump.c:525:
+	if (sdev->host->max_sectors) {
+		dump_device->max_blocks = (sdev->sector_size * sdev->host->max_sectors) >> DUMP_BLOCK_SHIFT;
+	}

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#604: FILE: drivers/scsi/scsi_dump.c:526:
+		dump_device->max_blocks = (sdev->sector_size * sdev->host->max_sectors) >> DUMP_BLOCK_SHIFT;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#627: FILE: drivers/scsi/scsi_dump.c:549:
+	if ((ret = register_disk_dump_type(&scsi_dump_type)) < 0) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#648: FILE: drivers/scsi/scsi_dump.h:1:
+#ifndef _SCSI_DUMP_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#652: FILE: drivers/scsi/scsi_dump.h:5:
+ *  linux/drivers/scsi/scsi_dump.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#670: FILE: drivers/scsi/scsi_dump.h:23:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#671: FILE: drivers/scsi/scsi_dump.h:24:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Scsi_Device *' should also have an identifier name
#676: FILE: drivers/scsi/scsi_dump.h:29:
+	int (*sanity_check)(Scsi_Device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Scsi_Device *' should also have an identifier name
#677: FILE: drivers/scsi/scsi_dump.h:30:
+	int (*quiesce)(Scsi_Device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Scsi_Device *' should also have an identifier name
#678: FILE: drivers/scsi/scsi_dump.h:31:
+	int (*shutdown)(Scsi_Device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'Scsi_Device *' should also have an identifier name
#679: FILE: drivers/scsi/scsi_dump.h:32:
+	void (*poll)(Scsi_Device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#683: FILE: drivers/scsi/scsi_dump.h:36:
+extern Scsi_Device *sd_find_scsi_device(dev_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#683: FILE: drivers/scsi/scsi_dump.h:36:
+extern Scsi_Device *sd_find_scsi_device(dev_t);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#693: FILE: drivers/scsi/scsi_error.c:405:
+#if defined(CONFIG_SCSI_DUMP) || defined(CONFIG_SCSI_DUMP_MODULE)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#716: FILE: drivers/scsi/scsi_syms.c:112:
+EXPORT_SYMBOL(scsi_decide_disposition);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#724: FILE: drivers/scsi/sd.c:195:
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#729: FILE: drivers/scsi/sd.c:200:
+	int part;
+	disk = get_gendisk(dev, &part);

ERROR:SPACING: space required before the open parenthesis '('
#730: FILE: drivers/scsi/sd.c:201:
+	if(disk && disk->private_data)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#736: FILE: drivers/scsi/sd.c:207:
+EXPORT_SYMBOL(sd_find_scsi_device);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 37 warnings, 33 checks, 687 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000279149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
