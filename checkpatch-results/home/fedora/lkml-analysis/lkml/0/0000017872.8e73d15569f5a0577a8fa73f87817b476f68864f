WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# cat /sys/block/sda/read_request_histo

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#52: 
Signed-off-by:	Edward A. Falk <efalk@google.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#119: FILE: block/genhd.c:424:
+	.attr = {.name = "read_request_histo", .mode = S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#122: FILE: block/genhd.c:427:
+};
+static struct disk_attribute disk_attr_read_dma_histo = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#123: FILE: block/genhd.c:428:
+	.attr = {.name = "read_dma_histo", .mode = S_IRUGO },

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#126: FILE: block/genhd.c:431:
+};
+static struct disk_attribute disk_attr_write_request_histo = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#127: FILE: block/genhd.c:432:
+	.attr = {.name = "write_request_histo", .mode = S_IRUGO },

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#130: FILE: block/genhd.c:435:
+};
+static struct disk_attribute disk_attr_write_dma_histo = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#131: FILE: block/genhd.c:436:
+	.attr = {.name = "write_dma_histo", .mode = S_IRUGO },

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: block/genhd.c:744:
+
+

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#171: FILE: block/genhd.c:758:
+ *  from when the request is transfered from the queue to the device.
                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#174: FILE: block/genhd.c:761:
+ *  request was transfered to the device.  block_histogram_completion()
                 ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: block/genhd.c:765:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: block/genhd.c:773:
+static inline void block_histogram_init2(struct disk_stats *stats,
+			int cmd, int type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: block/genhd.c:778:
+			memset(&stats->read_req_histo, 0,
+			  sizeof(stats->read_req_histo));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: block/genhd.c:781:
+			memset(&stats->write_req_histo, 0,
+			  sizeof(stats->write_req_histo));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#196: FILE: block/genhd.c:783:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#196: FILE: block/genhd.c:783:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: block/genhd.c:786:
+			memset(&stats->read_dma_histo, 0,
+			  sizeof(stats->read_dma_histo));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: block/genhd.c:789:
+			memset(&stats->write_dma_histo, 0,
+			  sizeof(stats->write_dma_histo));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: block/genhd.c:793:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: block/genhd.c:802:
+	for (i=0; i < NR_CPUS; ++i)
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#215: FILE: block/genhd.c:802:
+	for (i=0; i < NR_CPUS; ++i)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: block/genhd.c:805:
+			block_histogram_init2(per_cpu_ptr(disk->dkstats, i),
+			  cmd, type);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#224: FILE: block/genhd.c:811:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: block/genhd.c:824:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: block/genhd.c:833:
+	int	i;
+	sectors /= BASE_HISTO_SIZE;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#247: FILE: block/genhd.c:834:
+	if (sectors >= (1<<(CONFIG_HISTO_SIZE_BUCKETS-2)))
 	                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#247: FILE: block/genhd.c:834:
+	if (sectors >= (1<<(CONFIG_HISTO_SIZE_BUCKETS-2)))
 	                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#250: FILE: block/genhd.c:837:
+	for (i = 0; sectors > 0; ++i, sectors /= 2);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#254: FILE: block/genhd.c:841:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#262: FILE: block/genhd.c:849:
+	int	ms = jiffies * ( 1000 / HZ);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#265: FILE: block/genhd.c:852:
+	for (i = 0;; t *= 10) {
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t) return i - 1;

WARNING:TABSTOP: Statements should start on a tabstop
#266: FILE: block/genhd.c:853:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t) return i - 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: block/genhd.c:853:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t) return i - 1;

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: block/genhd.c:854:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t*2) return i - 1;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#267: FILE: block/genhd.c:854:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t*2) return i - 1;
 	                                                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#267: FILE: block/genhd.c:854:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t*2) return i - 1;

WARNING:TABSTOP: Statements should start on a tabstop
#268: FILE: block/genhd.c:855:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t*5) return i - 1;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#268: FILE: block/genhd.c:855:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t*5) return i - 1;
 	                                                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#268: FILE: block/genhd.c:855:
+	  if (++i >= CONFIG_HISTO_TIME_BUCKETS || ms <= t*5) return i - 1;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: block/genhd.c:859:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: block/genhd.c:883:
+		__disk_stat_add(disk,
+			read_req_histo[size_idx][req_time_idx], 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: block/genhd.c:886:
+		__disk_stat_add(disk,
+			write_req_histo[size_idx][req_time_idx], 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: block/genhd.c:888:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: block/genhd.c:888:
+  $

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: block/genhd.c:891:
+		int dma_time_idx = stats_time_bucket(jiffies_dma);
+		if (!(flags & REQ_RW)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: block/genhd.c:893:
+			__disk_stat_add(disk,
+				read_dma_histo[size_idx][dma_time_idx], 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: block/genhd.c:896:
+			__disk_stat_add(disk,
+				write_dma_histo[size_idx][dma_time_idx], 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#315: FILE: block/genhd.c:902:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#329: FILE: block/genhd.c:916:
+			if( count > 0 ) {
+			    printk( KERN_NOTICE

ERROR:SPACING: space prohibited after that open parenthesis '('
#329: FILE: block/genhd.c:916:
+			if( count > 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#329: FILE: block/genhd.c:916:
+			if( count > 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#329: FILE: block/genhd.c:916:
+			if( count > 0 ) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#330: FILE: block/genhd.c:917:
+			    printk( KERN_NOTICE

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#330: FILE: block/genhd.c:917:
+			    printk( KERN_NOTICE

ERROR:SPACING: space prohibited after that open parenthesis '('
#330: FILE: block/genhd.c:917:
+			    printk( KERN_NOTICE

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: block/genhd.c:935:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: block/genhd.c:944:
+	int	i;
+	va_start(ap, fmt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: block/genhd.c:951:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#369: FILE: block/genhd.c:956:
+static int dump_histo (int cmd, int type, struct gendisk *disk, char* page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: block/genhd.c:956:
+static int dump_histo (int cmd, int type, struct gendisk *disk, char* page)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: block/genhd.c:964:
+	static const int mults[3] = {1,2,5};
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: block/genhd.c:964:
+	static const int mults[3] = {1,2,5};
 	                                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#386: FILE: block/genhd.c:973:
+	for (j = 0, ms = BASE_HISTO_TIME; j < CONFIG_HISTO_TIME_BUCKETS; ms *= 10)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#388: FILE: block/genhd.c:975:
+		for(k=0; k < 3 && j < CONFIG_HISTO_TIME_BUCKETS; ++k, ++j) {
 		     ^

ERROR:SPACING: space required before the open parenthesis '('
#388: FILE: block/genhd.c:975:
+		for(k=0; k < 3 && j < CONFIG_HISTO_TIME_BUCKETS; ++k, ++j) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: block/genhd.c:981:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: block/genhd.c:981:
+  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#416: FILE: block/genhd.c:1003:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: block/genhd.c:1007:
+static ssize_t disk_read_request_histo_read(struct gendisk * disk, char *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: block/genhd.c:1012:
+static ssize_t disk_read_dma_histo_read(struct gendisk * disk, char *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#430: FILE: block/genhd.c:1017:
+static ssize_t disk_write_request_histo_read(struct gendisk * disk, char *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#435: FILE: block/genhd.c:1022:
+static ssize_t disk_write_dma_histo_read(struct gendisk * disk, char *page)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#483: FILE: include/linux/blkdev.h:847:
+inline static void block_histogram_start_time(struct request *req)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#511: FILE: include/linux/genhd.h:97:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#533: FILE: include/linux/genhd.h:246:
+extern void block_histogram_init(struct gendisk *disk);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: include/linux/genhd.h:247:
+extern void block_histogram_completion(struct gendisk *disk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: include/linux/genhd.h:248:
+extern void block_histogram_completion(struct gendisk *disk,
+					unsigned long flags,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#539: FILE: include/linux/genhd.h:252:
+extern void block_histogram_req_cmplt(struct gendisk *disk, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#539: FILE: include/linux/genhd.h:252:
+extern void block_histogram_req_cmplt(struct gendisk *disk, struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#546: FILE: include/linux/genhd.h:259:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 24 warnings, 35 checks, 458 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000017872.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
