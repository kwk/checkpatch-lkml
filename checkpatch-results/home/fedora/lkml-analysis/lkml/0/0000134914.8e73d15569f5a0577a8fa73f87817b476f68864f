WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#56: 
Signed-off-By: Andrey Volkov <avolkov@varma-el.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: drivers/i2c/chips/Kconfig:114:
+config SENSORS_M41T85
+	tristate "ST M41T85 RTC chip"
+	depends on I2C
+	help
+	  If you say yes here you get support for the ST M41T85 RTC chip.
+
+	  This driver can also be built as a module.  If so, the module
+	  will be called m41t85.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#82: FILE: drivers/i2c/chips/Kconfig:123:
+config SENSORS_M41T85_SQW_FRQ_ENABLE
+	depends on SENSORS_M41T85
+	bool "Square Wave Output"
+	help
+	  If you say yes here, then m41t85 will generate clocks on it 
+	  SQW pin at frequency which you are select below.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/i2c/chips/Kconfig:127:
+^I  If you say yes here, then m41t85 will generate clocks on it $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/i2c/chips/Kconfig:130:
+choice $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#89: FILE: drivers/i2c/chips/Kconfig:130:
+choice 
+	prompt "SQW frequincy"
+	depends on SENSORS_M41T85_SQW_FRQ_ENABLE
+	default SENSORS_M41T85_SQW_FRQ_32KHZ
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#94: FILE: drivers/i2c/chips/Kconfig:135:
+config SENSORS_M41T85_SQW_FRQ_32KHZ
+	bool "32.768 kHz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#97: FILE: drivers/i2c/chips/Kconfig:138:
+config SENSORS_M41T85_SQW_FRQ_8KHZ
+	bool "8 kHz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#100: FILE: drivers/i2c/chips/Kconfig:141:
+config SENSORS_M41T85_SQW_FRQ_4KHZ
+	bool "4 kHz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#103: FILE: drivers/i2c/chips/Kconfig:144:
+config SENSORS_M41T85_SQW_FRQ_2KHZ
+	bool "2 kHz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#106: FILE: drivers/i2c/chips/Kconfig:147:
+config SENSORS_M41T85_SQW_FRQ_1KHZ
+	bool "1 kHz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: drivers/i2c/chips/Kconfig:150:
+config SENSORS_M41T85_SQW_FRQ_512HZ
+	bool "512 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#112: FILE: drivers/i2c/chips/Kconfig:153:
+config SENSORS_M41T85_SQW_FRQ_256HZ
+	bool "256 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#115: FILE: drivers/i2c/chips/Kconfig:156:
+config SENSORS_M41T85_SQW_FRQ_128HZ
+	bool "128 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#118: FILE: drivers/i2c/chips/Kconfig:159:
+config SENSORS_M41T85_SQW_FRQ_64HZ
+	bool "64 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#121: FILE: drivers/i2c/chips/Kconfig:162:
+config SENSORS_M41T85_SQW_FRQ_32HZ
+	bool "32 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#124: FILE: drivers/i2c/chips/Kconfig:165:
+config SENSORS_M41T85_SQW_FRQ_16HZ
+	bool "16 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#127: FILE: drivers/i2c/chips/Kconfig:168:
+config SENSORS_M41T85_SQW_FRQ_8HZ
+	bool "8 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#130: FILE: drivers/i2c/chips/Kconfig:171:
+config SENSORS_M41T85_SQW_FRQ_4HZ
+	bool "4 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#133: FILE: drivers/i2c/chips/Kconfig:174:
+config SENSORS_M41T85_SQW_FRQ_2HZ
+	bool "2 Hz"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#136: FILE: drivers/i2c/chips/Kconfig:177:
+config SENSORS_M41T85_SQW_FRQ_1HZ
+	bool "1 Hz"
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#177: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#182: FILE: drivers/i2c/chips/m41t85.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#183: FILE: drivers/i2c/chips/m41t85.c:2:
+ * drivers/i2c/chips/m41t85.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: drivers/i2c/chips/m41t85.c:10:
+ * COPYRIGHT: $

WARNING:TYPO_SPELLING: 'recommened' may be misspelled - perhaps 'recommended'?
#210: FILE: drivers/i2c/chips/m41t85.c:29:
+ * recommened in .../Documentation/i2c/writing-clients section
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: drivers/i2c/chips/m41t85.c:47:
+#define RTC_SEC_ADDR ^I^I^I0x01$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: drivers/i2c/chips/m41t85.c:48:
+#define RTC_MIN_ADDR ^I^I^I0x02$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: drivers/i2c/chips/m41t85.c:51:
+#define RTC_DAY_ADDR  ^I^I^I0x05$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#245: FILE: drivers/i2c/chips/m41t85.c:64:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#267: FILE: drivers/i2c/chips/m41t85.c:86:
+	sec = min = hour = day = mon = year = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#268: FILE: drivers/i2c/chips/m41t85.c:87:
+	sec1 = min1 = hour1 = day1 = mon1 = year1 = 0;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#272: FILE: drivers/i2c/chips/m41t85.c:91:
+	do {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
[...]
+				break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sec == sec1'
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'min == min1'
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hour == hour1'
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'day == day1'
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mon == mon1'
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'year == year1'
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#273: FILE: drivers/i2c/chips/m41t85.c:92:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#274: FILE: drivers/i2c/chips/m41t85.c:93:
+		if (((sec = i2c_smbus_read_byte_data(save_client, RTC_SEC_ADDR)) >= 0)
+			&& ((min = i2c_smbus_read_byte_data(save_client, RTC_MIN_ADDR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#276: FILE: drivers/i2c/chips/m41t85.c:95:
+				>= 0)
+			&& ((hour = i2c_smbus_read_byte_data(save_client, RTC_HOUR_ADDR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#278: FILE: drivers/i2c/chips/m41t85.c:97:
+				>= 0)
+			&& ((day = i2c_smbus_read_byte_data(save_client, RTC_DAY_ADDR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#280: FILE: drivers/i2c/chips/m41t85.c:99:
+				>= 0)
+			&& ((mon = i2c_smbus_read_byte_data(save_client, RTC_MONTH_ADDR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#282: FILE: drivers/i2c/chips/m41t85.c:101:
+				>= 0)
+			&& ((year = i2c_smbus_read_byte_data(save_client, RTC_YEARS_ADDR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#284: FILE: drivers/i2c/chips/m41t85.c:103:
+				>= 0)
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#285: FILE: drivers/i2c/chips/m41t85.c:104:
+			&& ((sec == sec1) && (min == min1) && (hour == hour1)
+				&& (day == day1) && (mon == mon1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#286: FILE: drivers/i2c/chips/m41t85.c:105:
+				&& (day == day1) && (mon == mon1)
+				&& (year == year1)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/i2c/chips/m41t85.c:120:
+		dev_warn(&save_client->dev,
+			"m41t85: can't read rtc chip\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#302: FILE: drivers/i2c/chips/m41t85.c:121:
+		sec = min = hour = day = mon = year = 0;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#337: FILE: drivers/i2c/chips/m41t85.c:156:
+	if ((i2c_smbus_write_byte_data(save_client, RTC_SEC_ADDR, tm.tm_sec & 0x7f) < 0)
+		|| (i2c_smbus_write_byte_data(save_client, RTC_MIN_ADDR, tm.tm_min & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#339: FILE: drivers/i2c/chips/m41t85.c:158:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, RTC_HOUR_ADDR, tm.tm_hour & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#341: FILE: drivers/i2c/chips/m41t85.c:160:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, RTC_DAY_ADDR, tm.tm_mday & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#343: FILE: drivers/i2c/chips/m41t85.c:162:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, RTC_MONTH_ADDR, tm.tm_mon & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#345: FILE: drivers/i2c/chips/m41t85.c:164:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, RTC_YEARS_ADDR, tm.tm_year & 0x7f)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#348: FILE: drivers/i2c/chips/m41t85.c:167:
+		dev_warn(&save_client->dev,"m41t85: can't write to rtc chip\n");
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#352: FILE: drivers/i2c/chips/m41t85.c:171:
+	return;
+}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#385: FILE: drivers/i2c/chips/m41t85.c:204:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#394: FILE: drivers/i2c/chips/m41t85.c:213:
+	if ((ret = i2c_attach_client(client)) != 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: drivers/i2c/chips/m41t85.c:218:
+	#if defined (CONFIG_SENSORS_M41T85_SQW_FRQ)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/i2c/chips/m41t85.c:220:
+^Iif (reg >=0 && (reg & 0x40) == 0) { $

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#401: FILE: drivers/i2c/chips/m41t85.c:220:
+	if (reg >=0 && (reg & 0x40) == 0) { 
 	        ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#402: FILE: drivers/i2c/chips/m41t85.c:221:
+		ret = i2c_smbus_write_byte_data(client, RTC_SQW_ADDR, CONFIG_SENSORS_M41T85_SQW_FRQ);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#403: FILE: drivers/i2c/chips/m41t85.c:222:
+		if(ret == 0)

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#409: FILE: drivers/i2c/chips/m41t85.c:228:
+	if (reg >=0 && (reg & 0x80) != 0)
 	        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#414: FILE: drivers/i2c/chips/m41t85.c:233:
+	if (reg >=0 && (reg & 0x40) != 0)
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#432: FILE: drivers/i2c/chips/m41t85.c:251:
+	if ((rc = i2c_detach_client(client)) == 0) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#459: FILE: drivers/i2c/chips/m41t85.c:278:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134914.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 31 warnings, 26 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134914.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
