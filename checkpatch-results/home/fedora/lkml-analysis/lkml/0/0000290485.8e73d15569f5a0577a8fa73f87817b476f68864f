WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#59: FILE: kernel/power/swsusp.c:2:
+ * linux/kernel/power/swsusp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: kernel/power/swsusp.c:142:
+# define PRINTK(f, a...)	printk(f, ## a)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: kernel/power/swsusp.c:144:
+# define PRINTK(f, a...)       ^Ido { } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#109: FILE: kernel/power/swsusp.c:144:
+# define PRINTK(f, a...)       	do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: kernel/power/swsusp.c:150:
+#define MDELAY(a) do { } while(0)

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#147: FILE: kernel/power/swsusp.c:353:
+		BUG();		/* Not a BUG_ON(): we want fill_suspend_header to be called, always */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: kernel/power/swsusp.c:353:
+		BUG();		/* Not a BUG_ON(): we want fill_suspend_header to be called, always */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#174: FILE: kernel/power/swsusp.c:375:
+struct highmem_page *highmem_copy = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#179: FILE: kernel/power/swsusp.c:380:
+	unsigned long zone_pfn;
+	for (zone_pfn = 0; zone_pfn < zone->spanned_pages; ++zone_pfn) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#186: FILE: kernel/power/swsusp.c:387:
+		if (!(pfn%200))
 		         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: kernel/power/swsusp.c:388:
+			printk(".");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#200: FILE: kernel/power/swsusp.c:399:
+			printk("highmem reserved page?!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: kernel/power/swsusp.c:400:
+			BUG();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#203: FILE: kernel/power/swsusp.c:402:
+		if ((chunk_size = is_head_of_free_region(page))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*save)...) over kmalloc(sizeof(struct highmem_page)...)
#208: FILE: kernel/power/swsusp.c:407:
+		save = kmalloc(sizeof(struct highmem_page), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#210: FILE: kernel/power/swsusp.c:409:
+		if (!save)
+			panic("Not enough memory");

CHECK:SPACING: No space is necessary after a cast
#213: FILE: kernel/power/swsusp.c:412:
+		save->data = (void *) get_zeroed_page(GFP_ATOMIC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: kernel/power/swsusp.c:425:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: kernel/power/swsusp.c:436:
+		void *kaddr;
+		highmem_copy = save->next;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: kernel/power/swsusp.c:437:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#263: FILE: kernel/power/swsusp.c:441:
+		free_page((long) save->data);

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: kernel/power/swsusp.c:451:
+	unsigned long nosave_end_pfn = PAGE_ALIGN(__pa(&__nosave_end)) >> PAGE_SHIFT;
+	return (pfn >= nosave_begin_pfn) && (pfn < nosave_end_pfn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: kernel/power/swsusp.c:459:
+	struct pbe *pbe = *pagedir_p;
+	for (zone_pfn = 0; zone_pfn < zone->spanned_pages; ++zone_pfn) {

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#290: FILE: kernel/power/swsusp.c:463:
+		if (!(pfn%200))
 		         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#291: FILE: kernel/power/swsusp.c:464:
+			printk(".");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#295: FILE: kernel/power/swsusp.c:468:
+		BUG_ON(PageReserved(page) && PageNosave(page));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#302: FILE: kernel/power/swsusp.c:475:
+		if ((chunk_size = is_head_of_free_region(page))) {

CHECK:SPACING: No space is necessary after a cast
#310: FILE: kernel/power/swsusp.c:483:
+		pbe->orig_address = (long) page_address(page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#327: FILE: kernel/power/swsusp.c:495:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: kernel/power/swsusp.c:505:
+	unsigned long zone_pfn, pagedir_end, pagedir_pfn, pagedir_end_pfn;
+	pagedir_end = pagedir + (PAGE_SIZE << pagedir_order);

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: kernel/power/swsusp.c:511:
+		unsigned long pfn = zone_pfn + zone->zone_start_pfn;
+		if (!pfn_valid(pfn))

WARNING:LINE_SPACING: Missing a blank line after declarations
#362: FILE: kernel/power/swsusp.c:525:
+	struct zone *zone;
+	for_each_zone(zone) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#385: FILE: kernel/power/swsusp.c:592:
+	printk( "/critical section: Handling highmem" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#385: FILE: kernel/power/swsusp.c:592:
+	printk( "/critical section: Handling highmem" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#385: FILE: kernel/power/swsusp.c:592:
+	printk( "/critical section: Handling highmem" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#388: FILE: kernel/power/swsusp.c:595:
+	printk(", counting pages to copy" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#388: FILE: kernel/power/swsusp.c:595:
+	printk(", counting pages to copy" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#398: FILE: kernel/power/swsusp.c:705:
+	printk( "Restoring highmem\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#398: FILE: kernel/power/swsusp.c:705:
+	printk( "Restoring highmem\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#398: FILE: kernel/power/swsusp.c:705:
+	printk( "Restoring highmem\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#400: FILE: kernel/power/swsusp.c:707:
+	printk("done, devices\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290485.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 24 warnings, 6 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290485.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
