WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
since it's not yet in the kernel and I diff-ed against the original source, 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#64: FILE: via-rhine.c:11:
Ethernet

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: via-rhine.c:12:
+       This driver is designed for the VIA VT86C100A Rhine-I.$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#66: FILE: via-rhine.c:12:
+       This driver is designed for the VIA VT86C100A Rhine-I.
                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <This>
#66: FILE: via-rhine.c:12:
+       This driver is designed for the VIA VT86C100A Rhine-I.

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Rhine>
#66: FILE: via-rhine.c:12:
+       This driver is designed for the VIA VT86C100A Rhine-I.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: via-rhine.c:13:
+       It also works with the 6102 Rhine-II, and 6105/6105M Rhine-III.$

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'I.It'
#67: FILE: via-rhine.c:13:
+       This driver is designed for the VIA VT86C100A Rhine-I.
+       It also works with the 6102 Rhine-II, and 6105/6105M Rhine-III.

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#67: FILE: via-rhine.c:13:
+       It also works with the 6102 Rhine-II, and 6105/6105M Rhine-III.
                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#67: FILE: via-rhine.c:13:
+       It also works with the 6102 Rhine-II, and 6105/6105M Rhine-III.
                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#67: FILE: via-rhine.c:13:
+       It also works with the 6102 Rhine-II, and 6105/6105M Rhine-III.
                                                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <It>
#67: FILE: via-rhine.c:13:
+       It also works with the 6102 Rhine-II, and 6105/6105M Rhine-III.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: via-rhine.c:317:
+       VT6105,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: via-rhine.c:318:
+       VT6105M$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#93: FILE: via-rhine.c:340:
 static struct via_rhine_chip_info via_rhine_chip_info[] __devinitdata =

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: via-rhine.c:343:
+         CanHaveMII | ReqTxAlign | HasDavicomPhy },$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: via-rhine.c:343:
+         CanHaveMII | ReqTxAlign | HasDavicomPhy },$

CHECK:CAMELCASE: Avoid CamelCase: <CanHaveMII>
#97: FILE: via-rhine.c:343:
+         CanHaveMII | ReqTxAlign | HasDavicomPhy },

CHECK:CAMELCASE: Avoid CamelCase: <ReqTxAlign>
#97: FILE: via-rhine.c:343:
+         CanHaveMII | ReqTxAlign | HasDavicomPhy },

CHECK:CAMELCASE: Avoid CamelCase: <HasDavicomPhy>
#97: FILE: via-rhine.c:343:
+         CanHaveMII | ReqTxAlign | HasDavicomPhy },

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: via-rhine.c:346:
+       { "VIA VT6105 Rhine-III", RHINE_IOTYPE, 256,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: via-rhine.c:347:
+         CanHaveMII | HasWOL },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: via-rhine.c:347:
+         CanHaveMII | HasWOL },$

CHECK:CAMELCASE: Avoid CamelCase: <HasWOL>
#103: FILE: via-rhine.c:347:
+         CanHaveMII | HasWOL },

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: via-rhine.c:348:
+       { "VIA VT6105M Rhine-III", RHINE_IOTYPE, 256,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: via-rhine.c:349:
+         CanHaveMII | HasWOL },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: via-rhine.c:349:
+         CanHaveMII | HasWOL },$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#108: FILE: via-rhine.c:352:
 static struct pci_device_id via_rhine_pci_tbl[] __devinitdata =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: via-rhine.c:354:
+       {0x1106, 0x3043, PCI_ANY_ID, PCI_ANY_ID, 0, 0, VT86C100A},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: via-rhine.c:356:
+       {0x1106, 0x3106, PCI_ANY_ID, PCI_ANY_ID, 0, 0, VT6105},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: via-rhine.c:357:
+       {0x1106, 0x3053, PCI_ANY_ID, PCI_ANY_ID, 0, 0, VT6105M},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: via-rhine.c:512:
+       if (chip_id == VT86C100A)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#134: FILE: via-rhine.c:512:
+       if (chip_id == VT86C100A)
                udelay(100);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#139: FILE: via-rhine.c:530:
 static void __devinit enable_mmio(long ioaddr, int chip_id)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: via-rhine.c:533:
+       if (chip_id == VT86C100A) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#143: FILE: via-rhine.c:533:
+       if (chip_id == VT86C100A) {
[...]
                n = inb(ioaddr + ConfigA) | 0x20;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: via-rhine.c:661:
+       wait_for_reset(dev, chip_id, shortname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|$

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|
                                                                           ^

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxEarly>
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxNoBuf>
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxWakeUp>
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxAborted>
#162: FILE: via-rhine.c:982:
+                  IntrRxEarly | IntrRxNoBuf | IntrRxWakeUp | IntrTxAborted|

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: via-rhine.c:983:
+                  IntrTxDone | IntrTxAbort | IntrTxUnderrun |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: via-rhine.c:983:
+                  IntrTxDone | IntrTxAbort | IntrTxUnderrun |$

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxDone>
#163: FILE: via-rhine.c:983:
+                  IntrTxDone | IntrTxAbort | IntrTxUnderrun |

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxAbort>
#163: FILE: via-rhine.c:983:
+                  IntrTxDone | IntrTxAbort | IntrTxUnderrun |

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxUnderrun>
#163: FILE: via-rhine.c:983:
+                  IntrTxDone | IntrTxAbort | IntrTxUnderrun |

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: via-rhine.c:1073:
+       wait_for_reset(dev, np->chip_id, dev->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: via-rhine.c:1180:
+       wait_for_reset(dev, np->chip_id, dev->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: via-rhine.c:1250:
+                          dev->name, np->cur_tx-1, entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: via-rhine.c:1250:
+                          dev->name, np->cur_tx-1, entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: via-rhine.c:1501:
+       if (intr_status & IntrPCIErr) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",
                                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",
                                           ^

ERROR:SPACING: space required before that '!' (ctx:VxW)
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",
                                                      ^

ERROR:SPACING: space prohibited after that '!' (ctx:VxW)
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",
                                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",
                                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <Error>
#208: FILE: via-rhine.c:1503:
+                       printk(KERN_ERR "%s: PCI Error! %4.4x.\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: via-rhine.c:1505:
+               /* Recovery for PCI Error. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: via-rhine.c:1505:
+               /* Recovery for PCI Error. */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463044.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 30 warnings, 22 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463044.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
