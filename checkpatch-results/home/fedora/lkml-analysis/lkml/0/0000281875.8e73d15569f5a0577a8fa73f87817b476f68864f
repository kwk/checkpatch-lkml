WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -ruN linux-2.6.6-mm2/drivers/Makefile linux-2.6.6-mm2.perfctr-2.7.2.core/drivers/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: drivers/perfctr/cpumask.h:1:
+/* $Id: cpumask.h,v 1.7 2004/05/12 19:59:01 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#143: FILE: drivers/perfctr/cpumask.h:1:
+/* $Id: cpumask.h,v 1.7 2004/05/12 19:59:01 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: drivers/perfctr/cpumask.h:17:
+/* `perfctr_cpus_forbidden_mask' used to be defined in <asm/perfctr.h>,
+   but cpumask_t compatibility issues forced it to be moved here. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: drivers/perfctr/cpumask.h:17:
+   but cpumask_t compatibility issues forced it to be moved here. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: drivers/perfctr/init.c:1:
+/* $Id: init.c,v 1.71 2004/05/13 23:32:49 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#171: FILE: drivers/perfctr/init.c:1:
+/* $Id: init.c,v 1.71 2004/05/13 23:32:49 mikpe Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#183: FILE: drivers/perfctr/init.c:13:
+#include <asm/uaccess.h>

ERROR:SPACING: space prohibited after that open parenthesis '('
#200: FILE: drivers/perfctr/init.c:30:
+	if( put_user(PERFCTR_ABI_VERSION, argp) )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#200: FILE: drivers/perfctr/init.c:30:
+	if( put_user(PERFCTR_ABI_VERSION, argp) )

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: drivers/perfctr/init.c:30:
+	if( put_user(PERFCTR_ABI_VERSION, argp) )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#212: FILE: drivers/perfctr/init.c:42:
+	const unsigned int k_nrwords = PERFCTR_CPUMASK_NRLONGS*(sizeof(long)/sizeof(int));
 	                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#212: FILE: drivers/perfctr/init.c:42:
+	const unsigned int k_nrwords = PERFCTR_CPUMASK_NRLONGS*(sizeof(long)/sizeof(int));
 	                                                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#216: FILE: drivers/perfctr/init.c:46:
+	if( get_user(u_nrwords, &argp->nrwords) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#216: FILE: drivers/perfctr/init.c:46:
+	if( get_user(u_nrwords, &argp->nrwords) )

ERROR:SPACING: space required before the open parenthesis '('
#216: FILE: drivers/perfctr/init.c:46:
+	if( get_user(u_nrwords, &argp->nrwords) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#218: FILE: drivers/perfctr/init.c:48:
+	if( put_user(k_nrwords, &argp->nrwords) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#218: FILE: drivers/perfctr/init.c:48:
+	if( put_user(k_nrwords, &argp->nrwords) )

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: drivers/perfctr/init.c:48:
+	if( put_user(k_nrwords, &argp->nrwords) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#220: FILE: drivers/perfctr/init.c:50:
+	if( u_nrwords < k_nrwords )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#220: FILE: drivers/perfctr/init.c:50:
+	if( u_nrwords < k_nrwords )

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: drivers/perfctr/init.c:50:
+	if( u_nrwords < k_nrwords )

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: drivers/perfctr/init.c:52:
+	for(ui = 0, ki = 0; ki < PERFCTR_CPUMASK_NRLONGS; ++ki) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: drivers/perfctr/init.c:54:
+		unsigned long mask = cpus_addr(*cpus)[ki];
+		for(j = 0; j < sizeof(long)/sizeof(int); ++j) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#224: FILE: drivers/perfctr/init.c:54:
+		for(j = 0; j < sizeof(long)/sizeof(int); ++j) {
 		                           ^

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: drivers/perfctr/init.c:54:
+		for(j = 0; j < sizeof(long)/sizeof(int); ++j) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#225: FILE: drivers/perfctr/init.c:55:
+			if( put_user((unsigned int)mask, &argp->mask[ui]) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#225: FILE: drivers/perfctr/init.c:55:
+			if( put_user((unsigned int)mask, &argp->mask[ui]) )

ERROR:SPACING: space required before the open parenthesis '('
#225: FILE: drivers/perfctr/init.c:55:
+			if( put_user((unsigned int)mask, &argp->mask[ui]) )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#228: FILE: drivers/perfctr/init.c:58:
+			mask = (mask >> (8*sizeof(int)-1)) >> 1;
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#228: FILE: drivers/perfctr/init.c:58:
+			mask = (mask >> (8*sizeof(int)-1)) >> 1;
 			                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: drivers/perfctr/init.c:67:
+	cpumask_t cpus = cpu_online_map;
+	return cpus_copy_to_user(&cpus, argp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: drivers/perfctr/init.c:73:
+	cpumask_t cpus = perfctr_cpus_forbidden_mask;
+	return cpus_copy_to_user(&cpus, argp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#250: FILE: drivers/perfctr/init.c:80:
+	if( !init_done )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#250: FILE: drivers/perfctr/init.c:80:
+	if( !init_done )

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: drivers/perfctr/init.c:80:
+	if( !init_done )

ERROR:SPACING: space prohibited after that open parenthesis '('
#252: FILE: drivers/perfctr/init.c:82:
+	if( cmd >= GPERFCTR_CONTROL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#252: FILE: drivers/perfctr/init.c:82:
+	if( cmd >= GPERFCTR_CONTROL )

ERROR:SPACING: space required before the open parenthesis '('
#252: FILE: drivers/perfctr/init.c:82:
+	if( cmd >= GPERFCTR_CONTROL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#254: FILE: drivers/perfctr/init.c:84:
+	if( cmd >= VPERFCTR_READ_SUM )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#254: FILE: drivers/perfctr/init.c:84:
+	if( cmd >= VPERFCTR_READ_SUM )

ERROR:SPACING: space required before the open parenthesis '('
#254: FILE: drivers/perfctr/init.c:84:
+	if( cmd >= VPERFCTR_READ_SUM )

ERROR:SPACING: space prohibited after that open parenthesis '('
#256: FILE: drivers/perfctr/init.c:86:
+	switch( cmd ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#256: FILE: drivers/perfctr/init.c:86:
+	switch( cmd ) {

ERROR:SPACING: space required before the open parenthesis '('
#256: FILE: drivers/perfctr/init.c:86:
+	switch( cmd ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#258: FILE: drivers/perfctr/init.c:88:
+		return sys_perfctr_abi((unsigned int*)arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#260: FILE: drivers/perfctr/init.c:90:
+		return sys_perfctr_info((struct perfctr_struct_buf*)arg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#262: FILE: drivers/perfctr/init.c:92:
+		return sys_perfctr_cpus((struct perfctr_cpu_mask*)arg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#264: FILE: drivers/perfctr/init.c:94:
+		return sys_perfctr_cpus_forbidden((struct perfctr_cpu_mask*)arg);

ERROR:SPACING: space prohibited after that open parenthesis '('
#278: FILE: drivers/perfctr/init.c:108:
+	if( err ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#278: FILE: drivers/perfctr/init.c:108:
+	if( err ) {

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: drivers/perfctr/init.c:108:
+	if( err ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#279: FILE: drivers/perfctr/init.c:109:
+		printk(KERN_INFO "perfctr: not supported by this processor\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#283: FILE: drivers/perfctr/init.c:113:
+	if( err )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#283: FILE: drivers/perfctr/init.c:113:
+	if( err )

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: drivers/perfctr/init.c:113:
+	if( err )

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#286: FILE: drivers/perfctr/init.c:116:
+	printk(KERN_INFO "perfctr: driver %s, cpu type %s at %u kHz\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#306: FILE: drivers/perfctr/marshal.c:1:
+/* $Id: marshal.c,v 1.8 2004/05/13 17:48:59 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#306: FILE: drivers/perfctr/marshal.c:1:
+/* $Id: marshal.c,v 1.8 2004/05/13 17:48:59 mikpe Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#319: FILE: drivers/perfctr/marshal.c:14:
+#include <asm/uaccess.h>

ERROR:SPACING: space prohibited after that open parenthesis '('
#330: FILE: drivers/perfctr/marshal.c:25:
+	if( get_user(stream.size, &argp->rdsize) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#330: FILE: drivers/perfctr/marshal.c:25:
+	if( get_user(stream.size, &argp->rdsize) )

ERROR:SPACING: space required before the open parenthesis '('
#330: FILE: drivers/perfctr/marshal.c:25:
+	if( get_user(stream.size, &argp->rdsize) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#345: FILE: drivers/perfctr/marshal.c:40:
+	if( get_user(stream.size, &argp->wrsize) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#345: FILE: drivers/perfctr/marshal.c:40:
+	if( get_user(stream.size, &argp->wrsize) )

ERROR:SPACING: space required before the open parenthesis '('
#345: FILE: drivers/perfctr/marshal.c:40:
+	if( get_user(stream.size, &argp->wrsize) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#351: FILE: drivers/perfctr/marshal.c:46:
+	if( stream.error )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#351: FILE: drivers/perfctr/marshal.c:46:
+	if( stream.error )

ERROR:SPACING: space required before the open parenthesis '('
#351: FILE: drivers/perfctr/marshal.c:46:
+	if( stream.error )

ERROR:SPACING: space prohibited after that open parenthesis '('
#353: FILE: drivers/perfctr/marshal.c:48:
+	if( put_user(stream.pos, &argp->rdsize) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#353: FILE: drivers/perfctr/marshal.c:48:
+	if( put_user(stream.pos, &argp->rdsize) )

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: drivers/perfctr/marshal.c:48:
+	if( put_user(stream.pos, &argp->rdsize) )

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#361: FILE: drivers/perfctr/marshal.h:1:
+/* $Id: marshal.h,v 1.2 2004/05/13 17:48:59 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#361: FILE: drivers/perfctr/marshal.h:1:
+/* $Id: marshal.h,v 1.2 2004/05/13 17:48:59 mikpe Exp $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#381: FILE: drivers/perfctr/marshal_core.c:1:
+/* $Id: marshal_core.c,v 1.1 2004/05/13 17:48:59 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#381: FILE: drivers/perfctr/marshal_core.c:1:
+/* $Id: marshal_core.c,v 1.1 2004/05/13 17:48:59 mikpe Exp $

ERROR:SPACING: space prohibited after that open parenthesis '('
#396: FILE: drivers/perfctr/marshal_core.c:16:
+	if( !stream->error ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#396: FILE: drivers/perfctr/marshal_core.c:16:
+	if( !stream->error ) {

ERROR:SPACING: space required before the open parenthesis '('
#396: FILE: drivers/perfctr/marshal_core.c:16:
+	if( !stream->error ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#397: FILE: drivers/perfctr/marshal_core.c:17:
+		if( stream->pos >= stream->size )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#397: FILE: drivers/perfctr/marshal_core.c:17:
+		if( stream->pos >= stream->size )

ERROR:SPACING: space required before the open parenthesis '('
#397: FILE: drivers/perfctr/marshal_core.c:17:
+		if( stream->pos >= stream->size )

ERROR:SPACING: space prohibited after that open parenthesis '('
#399: FILE: drivers/perfctr/marshal_core.c:19:
+		else if( put_user(word, &stream->buffer[stream->pos]) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#399: FILE: drivers/perfctr/marshal_core.c:19:
+		else if( put_user(word, &stream->buffer[stream->pos]) )

ERROR:SPACING: space required before the open parenthesis '('
#399: FILE: drivers/perfctr/marshal_core.c:19:
+		else if( put_user(word, &stream->buffer[stream->pos]) )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#412: FILE: drivers/perfctr/marshal_core.c:32:
+	const char *pointer = (const char*)address + field->offset;

ERROR:SPACING: space prohibited after that open parenthesis '('
#421: FILE: drivers/perfctr/marshal_core.c:41:
+		if( base_type == PERFCTR_TYPE_UINT64 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#421: FILE: drivers/perfctr/marshal_core.c:41:
+		if( base_type == PERFCTR_TYPE_UINT64 ) {

ERROR:SPACING: space required before the open parenthesis '('
#421: FILE: drivers/perfctr/marshal_core.c:41:
+		if( base_type == PERFCTR_TYPE_UINT64 ) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#422: FILE: drivers/perfctr/marshal_core.c:42:
+			uint64_val.ull = *(unsigned long long*)pointer;

ERROR:SPACING: space prohibited after that open parenthesis '('
#424: FILE: drivers/perfctr/marshal_core.c:44:
+			if( !uint64_val.ull )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#424: FILE: drivers/perfctr/marshal_core.c:44:
+			if( !uint64_val.ull )

ERROR:SPACING: space required before the open parenthesis '('
#424: FILE: drivers/perfctr/marshal_core.c:44:
+			if( !uint64_val.ull )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: drivers/perfctr/marshal_core.c:51:
+^I^I^Ipointer += sizeof(int);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#432: FILE: drivers/perfctr/marshal_core.c:52:
+			if( !uint32_val )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#432: FILE: drivers/perfctr/marshal_core.c:52:
+			if( !uint32_val )

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: drivers/perfctr/marshal_core.c:52:
+			if( !uint32_val )

ERROR:SPACING: space prohibited after that open parenthesis '('
#437: FILE: drivers/perfctr/marshal_core.c:57:
+	} while( ++i < nr_items );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#437: FILE: drivers/perfctr/marshal_core.c:57:
+	} while( ++i < nr_items );

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: drivers/perfctr/marshal_core.c:57:
+	} while( ++i < nr_items );

ERROR:SPACING: space required before the open parenthesis '('
#446: FILE: drivers/perfctr/marshal_core.c:66:
+	for(i = 0; i < sdesc->nrfields; ++i)

ERROR:SPACING: space required before the open parenthesis '('
#448: FILE: drivers/perfctr/marshal_core.c:68:
+	for(i = 0; i < sdesc->nrsubs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: drivers/perfctr/marshal_core.c:70:
+		const struct perfctr_sub_struct_desc *sub = &sdesc->subs[i];
+		perfctr_encode_struct((char*)address + sub->offset, sub->sdesc, stream);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#450: FILE: drivers/perfctr/marshal_core.c:70:
+		perfctr_encode_struct((char*)address + sub->offset, sub->sdesc, stream);

ERROR:SPACING: space prohibited after that open parenthesis '('
#462: FILE: drivers/perfctr/marshal_core.c:82:
+	if( stream->pos >= stream->size )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#462: FILE: drivers/perfctr/marshal_core.c:82:
+	if( stream->pos >= stream->size )

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: drivers/perfctr/marshal_core.c:82:
+	if( stream->pos >= stream->size )

ERROR:SPACING: space prohibited after that open parenthesis '('
#464: FILE: drivers/perfctr/marshal_core.c:84:
+	if( get_user(*word, &stream->buffer[stream->pos]) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#464: FILE: drivers/perfctr/marshal_core.c:84:
+	if( get_user(*word, &stream->buffer[stream->pos]) )

ERROR:SPACING: space required before the open parenthesis '('
#464: FILE: drivers/perfctr/marshal_core.c:84:
+	if( get_user(*word, &stream->buffer[stream->pos]) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#481: FILE: drivers/perfctr/marshal_core.c:101:
+	while( low < high ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#481: FILE: drivers/perfctr/marshal_core.c:101:
+	while( low < high ) {

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: drivers/perfctr/marshal_core.c:101:
+	while( low < high ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#484: FILE: drivers/perfctr/marshal_core.c:104:
+		if( field->tag == tag )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#484: FILE: drivers/perfctr/marshal_core.c:104:
+		if( field->tag == tag )

ERROR:SPACING: space required before the open parenthesis '('
#484: FILE: drivers/perfctr/marshal_core.c:104:
+		if( field->tag == tag )

ERROR:SPACING: space prohibited after that open parenthesis '('
#486: FILE: drivers/perfctr/marshal_core.c:106:
+		if( field->tag < tag )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#486: FILE: drivers/perfctr/marshal_core.c:106:
+		if( field->tag < tag )

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: drivers/perfctr/marshal_core.c:106:
+		if( field->tag < tag )

ERROR:SPACING: space required before the open parenthesis '('
#491: FILE: drivers/perfctr/marshal_core.c:111:
+	for(i = 0; i < sdesc->nrsubs; ++i) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#494: FILE: drivers/perfctr/marshal_core.c:114:
+		if( field ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#494: FILE: drivers/perfctr/marshal_core.c:114:
+		if( field ) {

ERROR:SPACING: space required before the open parenthesis '('
#494: FILE: drivers/perfctr/marshal_core.c:114:
+		if( field ) {

ERROR:SPACING: space required before the open parenthesis '('
#517: FILE: drivers/perfctr/marshal_core.c:137:
+	for(;;) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#519: FILE: drivers/perfctr/marshal_core.c:139:
+		if( err <= 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#519: FILE: drivers/perfctr/marshal_core.c:139:
+		if( err <= 0 )

ERROR:SPACING: space required before the open parenthesis '('
#519: FILE: drivers/perfctr/marshal_core.c:139:
+		if( err <= 0 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#523: FILE: drivers/perfctr/marshal_core.c:143:
+		if( !field )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#523: FILE: drivers/perfctr/marshal_core.c:143:
+		if( !field )

ERROR:SPACING: space required before the open parenthesis '('
#523: FILE: drivers/perfctr/marshal_core.c:143:
+		if( !field )

ERROR:SPACING: space prohibited after that open parenthesis '('
#526: FILE: drivers/perfctr/marshal_core.c:146:
+		if( PERFCTR_HEADER_TYPE(header) != PERFCTR_HEADER_UINT32 &&

ERROR:SPACING: space required before the open parenthesis '('
#526: FILE: drivers/perfctr/marshal_core.c:146:
+		if( PERFCTR_HEADER_TYPE(header) != PERFCTR_HEADER_UINT32 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/perfctr/marshal_core.c:147:
+		if( PERFCTR_HEADER_TYPE(header) != PERFCTR_HEADER_UINT32 &&
+		    PERFCTR_TYPE_BASE(field->type) != PERFCTR_TYPE_UINT64 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#527: FILE: drivers/perfctr/marshal_core.c:147:
+		    PERFCTR_TYPE_BASE(field->type) != PERFCTR_TYPE_UINT64 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#530: FILE: drivers/perfctr/marshal_core.c:150:
+		if( err <= 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#530: FILE: drivers/perfctr/marshal_core.c:150:
+		if( err <= 0 )

ERROR:SPACING: space required before the open parenthesis '('
#530: FILE: drivers/perfctr/marshal_core.c:150:
+		if( err <= 0 )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#532: FILE: drivers/perfctr/marshal_core.c:152:
+		target = (char*)address + struct_offset + field->offset;

ERROR:SPACING: space prohibited after that open parenthesis '('
#534: FILE: drivers/perfctr/marshal_core.c:154:
+		if( itemnr >= PERFCTR_TYPE_NRITEMS(field->type) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#534: FILE: drivers/perfctr/marshal_core.c:154:
+		if( itemnr >= PERFCTR_TYPE_NRITEMS(field->type) )

ERROR:SPACING: space required before the open parenthesis '('
#534: FILE: drivers/perfctr/marshal_core.c:154:
+		if( itemnr >= PERFCTR_TYPE_NRITEMS(field->type) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#536: FILE: drivers/perfctr/marshal_core.c:156:
+		if( PERFCTR_TYPE_BASE(field->type) == PERFCTR_TYPE_UINT64 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#536: FILE: drivers/perfctr/marshal_core.c:156:
+		if( PERFCTR_TYPE_BASE(field->type) == PERFCTR_TYPE_UINT64 ) {

ERROR:SPACING: space required before the open parenthesis '('
#536: FILE: drivers/perfctr/marshal_core.c:156:
+		if( PERFCTR_TYPE_BASE(field->type) == PERFCTR_TYPE_UINT64 ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#536: FILE: drivers/perfctr/marshal_core.c:156:
+		if( PERFCTR_TYPE_BASE(field->type) == PERFCTR_TYPE_UINT64 ) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#538: FILE: drivers/perfctr/marshal_core.c:158:
+			if( PERFCTR_HEADER_TYPE(header) == PERFCTR_HEADER_UINT32 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#538: FILE: drivers/perfctr/marshal_core.c:158:
+			if( PERFCTR_HEADER_TYPE(header) == PERFCTR_HEADER_UINT32 )

ERROR:SPACING: space required before the open parenthesis '('
#538: FILE: drivers/perfctr/marshal_core.c:158:
+			if( PERFCTR_HEADER_TYPE(header) == PERFCTR_HEADER_UINT32 )

ERROR:SPACING: space prohibited after that open parenthesis '('
#541: FILE: drivers/perfctr/marshal_core.c:161:
+			if( err <= 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#541: FILE: drivers/perfctr/marshal_core.c:161:
+			if( err <= 0 )

ERROR:SPACING: space required before the open parenthesis '('
#541: FILE: drivers/perfctr/marshal_core.c:161:
+			if( err <= 0 )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#543: FILE: drivers/perfctr/marshal_core.c:163:
+			((unsigned long long*)target)[itemnr] = val.ull;

CHECK:BRACES: Unbalanced braces around else statement
#544: FILE: drivers/perfctr/marshal_core.c:164:
+		} else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#545: FILE: drivers/perfctr/marshal_core.c:165:
+			memcpy(&((unsigned int*)target)[itemnr], &val.ui[0], sizeof(int));

ERROR:SPACING: space prohibited after that open parenthesis '('
#548: FILE: drivers/perfctr/marshal_core.c:168:
+	if( err )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#548: FILE: drivers/perfctr/marshal_core.c:168:
+	if( err )

ERROR:SPACING: space required before the open parenthesis '('
#548: FILE: drivers/perfctr/marshal_core.c:168:
+	if( err )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxB)
#561: FILE: drivers/perfctr/marshal_core.c:181:
+#define STRUCT_ARRAY_SIZE(TYPE, MEMBER) ARRAY_SIZE(((TYPE*)0)->MEMBER)
                                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'MEMBER' may be better as '(MEMBER)' to avoid precedence issues
#561: FILE: drivers/perfctr/marshal_core.c:181:
+#define STRUCT_ARRAY_SIZE(TYPE, MEMBER) ARRAY_SIZE(((TYPE*)0)->MEMBER)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#563: FILE: drivers/perfctr/marshal_core.c:183:
+#if defined(__i386__) || defined(__x86_64__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LONG_LINE: line length of 213 exceeds 100 columns
#578: FILE: drivers/perfctr/marshal_core.c:198:
+#define PERFCTR_CPU_CONTROL_NRFIELDS_0	(7 + STRUCT_ARRAY_SIZE(struct perfctr_cpu_control, pmc_map) + STRUCT_ARRAY_SIZE(struct perfctr_cpu_control, evntsel) + STRUCT_ARRAY_SIZE(struct perfctr_cpu_control, ireset))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#584: FILE: drivers/perfctr/marshal_core.c:204:
+#define PERFCTR_CPU_CONTROL_NRFIELDS	(PERFCTR_CPU_CONTROL_NRFIELDS_0 + PERFCTR_CPU_CONTROL_NRFIELDS_1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#596: FILE: drivers/perfctr/marshal_core.c:216:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_sum_ctrs,pmc),
 	                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: drivers/perfctr/marshal_core.c:239:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,pmc_map),
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#623: FILE: drivers/perfctr/marshal_core.c:243:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,evntsel),
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#627: FILE: drivers/perfctr/marshal_core.c:247:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,ireset),
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#632: FILE: drivers/perfctr/marshal_core.c:252:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,p4.escr),
 	                                                                         ^

WARNING:LONG_LINE: line length of 213 exceeds 100 columns
#679: FILE: drivers/perfctr/marshal_core.c:299:
+#define PERFCTR_CPU_CONTROL_NRFIELDS_0	(7 + STRUCT_ARRAY_SIZE(struct perfctr_cpu_control, pmc_map) + STRUCT_ARRAY_SIZE(struct perfctr_cpu_control, evntsel) + STRUCT_ARRAY_SIZE(struct perfctr_cpu_control, ireset))

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#683: FILE: drivers/perfctr/marshal_core.c:303:
+#define PERFCTR_CPU_CONTROL_NRFIELDS	(PERFCTR_CPU_CONTROL_NRFIELDS_0 + PERFCTR_CPU_CONTROL_NRFIELDS_1)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#695: FILE: drivers/perfctr/marshal_core.c:315:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_sum_ctrs,pmc),
 	                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#718: FILE: drivers/perfctr/marshal_core.c:338:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,pmc_map),
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#722: FILE: drivers/perfctr/marshal_core.c:342:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,evntsel),
 	                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#726: FILE: drivers/perfctr/marshal_core.c:346:
+	  .type = PERFCTR_TYPE_ARRAY(STRUCT_ARRAY_SIZE(struct perfctr_cpu_control,ireset),
 	                                                                         ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#768: FILE: drivers/perfctr/marshal_core.c:388:
+#define PERFCTR_INFO_NRFIELDS	(8 + sizeof(((struct perfctr_info*)0)->driver_version)/sizeof(int))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#768: FILE: drivers/perfctr/marshal_core.c:388:
+#define PERFCTR_INFO_NRFIELDS	(8 + sizeof(((struct perfctr_info*)0)->driver_version)/sizeof(int))
                              	                                                      ^

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#791: FILE: drivers/perfctr/marshal_core.c:411:
+#define GPERFCTR_CPU_STATE_NRFIELDS	(GPERFCTR_CPU_STATE_ONLY_CPU_NRFIELDS + PERFCTR_CPU_CONTROL_NRFIELDS + PERFCTR_SUM_CTRS_NRFIELDS)

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#799: FILE: drivers/perfctr/marshal_core.c:419:
+	  .type = PERFCTR_TYPE_ARRAY(sizeof(((struct perfctr_info*)0)->driver_version)/sizeof(int), PERFCTR_TYPE_BYTES4) },

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#799: FILE: drivers/perfctr/marshal_core.c:419:
+	  .type = PERFCTR_TYPE_ARRAY(sizeof(((struct perfctr_info*)0)->driver_version)/sizeof(int), PERFCTR_TYPE_BYTES4) },

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#799: FILE: drivers/perfctr/marshal_core.c:419:
+	  .type = PERFCTR_TYPE_ARRAY(sizeof(((struct perfctr_info*)0)->driver_version)/sizeof(int), PERFCTR_TYPE_BYTES4) },
 	                                                                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#945: FILE: drivers/perfctr/marshal_core.h:1:
+/* $Id: marshal_core.h,v 1.1 2004/05/13 17:48:59 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#945: FILE: drivers/perfctr/marshal_core.h:1:
+/* $Id: marshal_core.h,v 1.1 2004/05/13 17:48:59 mikpe Exp $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: drivers/perfctr/marshal_core.h:24:
+#define PERFCTR_HEADER(TYPE,TAG,ITEMNR) (((TAG)<<16)|((ITEMNR)<<1)|(TYPE))
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: drivers/perfctr/marshal_core.h:24:
+#define PERFCTR_HEADER(TYPE,TAG,ITEMNR) (((TAG)<<16)|((ITEMNR)<<1)|(TYPE))
                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#968: FILE: drivers/perfctr/marshal_core.h:24:
+#define PERFCTR_HEADER(TYPE,TAG,ITEMNR) (((TAG)<<16)|((ITEMNR)<<1)|(TYPE))
                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#968: FILE: drivers/perfctr/marshal_core.h:24:
+#define PERFCTR_HEADER(TYPE,TAG,ITEMNR) (((TAG)<<16)|((ITEMNR)<<1)|(TYPE))
                                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#968: FILE: drivers/perfctr/marshal_core.h:24:
+#define PERFCTR_HEADER(TYPE,TAG,ITEMNR) (((TAG)<<16)|((ITEMNR)<<1)|(TYPE))
                                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#968: FILE: drivers/perfctr/marshal_core.h:24:
+#define PERFCTR_HEADER(TYPE,TAG,ITEMNR) (((TAG)<<16)|((ITEMNR)<<1)|(TYPE))
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#990: FILE: drivers/perfctr/marshal_core.h:46:
+#define PERFCTR_TYPE_ARRAY(N,T)	((((N) - 1) << 1) | (T))
                             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1028: FILE: drivers/perfctr/version.h:1:
+#define VERSION "2.7.2"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1033: FILE: include/linux/perfctr.h:1:
+/* $Id: perfctr.h,v 1.72 2004/05/13 23:32:50 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1033: FILE: include/linux/perfctr.h:1:
+/* $Id: perfctr.h,v 1.72 2004/05/13 23:32:50 mikpe Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1063: FILE: include/linux/perfctr.h:31:
+/* abi_version values: Lower 16 bits contain the CPU data version, upper
+   16 bits contain the API version. Each half has a major version in its

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1064: FILE: include/linux/perfctr.h:32:
+   upper 8 bits, and a minor version in its lower 8 bits. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1066: FILE: include/linux/perfctr.h:34:
+#define PERFCTR_ABI_VERSION	((PERFCTR_API_VERSION<<16)|PERFCTR_CPU_VERSION)
                            	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1066: FILE: include/linux/perfctr.h:34:
+#define PERFCTR_ABI_VERSION	((PERFCTR_API_VERSION<<16)|PERFCTR_CPU_VERSION)
                            	                          ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1173: FILE: include/linux/perfctr.h:141:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1173: FILE: include/linux/perfctr.h:141:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#1173: FILE: include/linux/perfctr.h:141:
+extern struct vperfctr *__vperfctr_copy(struct vperfctr*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1174: FILE: include/linux/perfctr.h:142:
+extern void __vperfctr_exit(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1174: FILE: include/linux/perfctr.h:142:
+extern void __vperfctr_exit(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#1174: FILE: include/linux/perfctr.h:142:
+extern void __vperfctr_exit(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1175: FILE: include/linux/perfctr.h:143:
+extern void __vperfctr_suspend(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1175: FILE: include/linux/perfctr.h:143:
+extern void __vperfctr_suspend(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#1175: FILE: include/linux/perfctr.h:143:
+extern void __vperfctr_suspend(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1176: FILE: include/linux/perfctr.h:144:
+extern void __vperfctr_resume(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1176: FILE: include/linux/perfctr.h:144:
+extern void __vperfctr_resume(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#1176: FILE: include/linux/perfctr.h:144:
+extern void __vperfctr_resume(struct vperfctr*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1177: FILE: include/linux/perfctr.h:145:
+extern void __vperfctr_sample(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1177: FILE: include/linux/perfctr.h:145:
+extern void __vperfctr_sample(struct vperfctr*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#1177: FILE: include/linux/perfctr.h:145:
+extern void __vperfctr_sample(struct vperfctr*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1178: FILE: include/linux/perfctr.h:146:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#1178: FILE: include/linux/perfctr.h:146:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vperfctr*' should also have an identifier name
#1178: FILE: include/linux/perfctr.h:146:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cpumask_t' should also have an identifier name
#1178: FILE: include/linux/perfctr.h:146:
+extern void __vperfctr_set_cpus_allowed(struct task_struct*, struct vperfctr*, cpumask_t);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1188: FILE: include/linux/perfctr.h:156:
+	struct vperfctr *perfctr;
+	perfctr = thread->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1189: FILE: include/linux/perfctr.h:157:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1189: FILE: include/linux/perfctr.h:157:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#1189: FILE: include/linux/perfctr.h:157:
+	if( perfctr )

WARNING:LINE_SPACING: Missing a blank line after declarations
#1196: FILE: include/linux/perfctr.h:164:
+	struct vperfctr *perfctr;
+	perfctr = prev->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1197: FILE: include/linux/perfctr.h:165:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1197: FILE: include/linux/perfctr.h:165:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#1197: FILE: include/linux/perfctr.h:165:
+	if( perfctr )

WARNING:LINE_SPACING: Missing a blank line after declarations
#1204: FILE: include/linux/perfctr.h:172:
+	struct vperfctr *perfctr;
+	perfctr = next->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1205: FILE: include/linux/perfctr.h:173:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1205: FILE: include/linux/perfctr.h:173:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#1205: FILE: include/linux/perfctr.h:173:
+	if( perfctr )

WARNING:LINE_SPACING: Missing a blank line after declarations
#1212: FILE: include/linux/perfctr.h:180:
+	struct vperfctr *perfctr;
+	perfctr = thread->perfctr;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1213: FILE: include/linux/perfctr.h:181:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1213: FILE: include/linux/perfctr.h:181:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#1213: FILE: include/linux/perfctr.h:181:
+	if( perfctr )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1224: FILE: include/linux/perfctr.h:192:
+	if( perfctr )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1224: FILE: include/linux/perfctr.h:192:
+	if( perfctr )

ERROR:SPACING: space required before the open parenthesis '('
#1224: FILE: include/linux/perfctr.h:192:
+	if( perfctr )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 162 errors, 46 warnings, 25 checks, 1195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000281875.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
