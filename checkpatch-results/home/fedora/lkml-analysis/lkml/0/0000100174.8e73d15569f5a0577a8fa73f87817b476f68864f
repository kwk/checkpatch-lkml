WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/isdn/gigaset/i4l.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <driverID>
#90: FILE: drivers/isdn/gigaset/i4l.c:36:
+static int writebuf_from_LL(int driverID, int channel, int ack,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#95: FILE: drivers/isdn/gigaset/i4l.c:41:
+	unsigned len;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#96: FILE: drivers/isdn/gigaset/i4l.c:42:
+	unsigned skblen;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#98: FILE: drivers/isdn/gigaset/i4l.c:44:
+	if (!(cs = gigaset_get_cs_by_id(driverID))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#132: FILE: drivers/isdn/gigaset/i4l.c:78:
+		len, skblen, (unsigned) skb->head[0], (unsigned) skb->head[1]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#132: FILE: drivers/isdn/gigaset/i4l.c:78:
+		len, skblen, (unsigned) skb->head[0], (unsigned) skb->head[1]);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#132: FILE: drivers/isdn/gigaset/i4l.c:78:
+		len, skblen, (unsigned) skb->head[0], (unsigned) skb->head[1]);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#140: FILE: drivers/isdn/gigaset/i4l.c:86:
+	unsigned len;

CHECK:SPACING: No space is necessary after a cast
#149: FILE: drivers/isdn/gigaset/i4l.c:95:
+	len = (unsigned char) skb->head[0] |

CHECK:SPACING: No space is necessary after a cast
#150: FILE: drivers/isdn/gigaset/i4l.c:96:
+	      (unsigned) (unsigned char) skb->head[1] << 8;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: drivers/isdn/gigaset/i4l.c:96:
+	      (unsigned) (unsigned char) skb->head[1] << 8;

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#158: FILE: drivers/isdn/gigaset/i4l.c:104:
+		response.parm.length = len;
 		         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#159: FILE: drivers/isdn/gigaset/i4l.c:105:
+		bcs->cs->iif.statcallb(&response);
 		         ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#197: FILE: drivers/isdn/gigaset/i4l.c:143:
+			"ISDN_CMD_DIAL (driver: %d, ch: %ld, "
+			"phone: %s, ownmsn: %s, si1: %d, si2: %d)",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#199: FILE: drivers/isdn/gigaset/i4l.c:145:
+			cntrl->parm.setup.phone, cntrl->parm.setup.eazmsn,
 			       ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#199: FILE: drivers/isdn/gigaset/i4l.c:145:
+			cntrl->parm.setup.phone, cntrl->parm.setup.eazmsn,
 			                                ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#200: FILE: drivers/isdn/gigaset/i4l.c:146:
+			cntrl->parm.setup.si1, cntrl->parm.setup.si2);
 			       ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#200: FILE: drivers/isdn/gigaset/i4l.c:146:
+			cntrl->parm.setup.si1, cntrl->parm.setup.si2);
 			                              ^^^^

CHECK:SPACING: No space is necessary after a cast
#204: FILE: drivers/isdn/gigaset/i4l.c:150:
+			    (int) cntrl->arg);

WARNING:SIZEOF_PARENTHESIS: sizeof *sp should be sizeof(*sp)
#215: FILE: drivers/isdn/gigaset/i4l.c:161:
+		sp = kmalloc(sizeof *sp, GFP_ATOMIC);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#221: FILE: drivers/isdn/gigaset/i4l.c:167:
+		*sp = cntrl->parm.setup;
 		             ^^^^

CHECK:SPACING: No space is necessary after a cast
#240: FILE: drivers/isdn/gigaset/i4l.c:186:
+			    (int) cntrl->arg);

CHECK:SPACING: No space is necessary after a cast
#259: FILE: drivers/isdn/gigaset/i4l.c:205:
+			(int) cntrl->arg);

CHECK:SPACING: No space is necessary after a cast
#263: FILE: drivers/isdn/gigaset/i4l.c:209:
+			    (unsigned) cntrl->arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: drivers/isdn/gigaset/i4l.c:209:
+			    (unsigned) cntrl->arg);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#278: FILE: drivers/isdn/gigaset/i4l.c:224:
+	case ISDN_CMD_CLREAZ: /* Do not signal incoming signals */ //FIXME
+		gig_dbg(DEBUG_ANY, "ISDN_CMD_CLREAZ");

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#281: FILE: drivers/isdn/gigaset/i4l.c:227:
+	case ISDN_CMD_SETEAZ: /* Signal incoming calls for given MSN */ //FIXME
+		gig_dbg(DEBUG_ANY,

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#283: FILE: drivers/isdn/gigaset/i4l.c:229:
+			cntrl->driver, cntrl->arg, cntrl->parm.num);
 			                                  ^^^^

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/isdn/gigaset/i4l.c:237:
+			    (unsigned) cntrl->arg & 0xff);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: drivers/isdn/gigaset/i4l.c:237:
+			    (unsigned) cntrl->arg & 0xff);

CHECK:SPACING: No space is necessary after a cast
#311: FILE: drivers/isdn/gigaset/i4l.c:257:
+			    (unsigned) cntrl->arg & 0xff);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: drivers/isdn/gigaset/i4l.c:257:
+			    (unsigned) cntrl->arg & 0xff);

CHECK:SPACING: No space is necessary after a cast
#329: FILE: drivers/isdn/gigaset/i4l.c:275:
+			    (int) cntrl->arg);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#375: FILE: drivers/isdn/gigaset/i4l.c:321:
+	cs->iif.statcallb(&command);
 	    ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#385: FILE: drivers/isdn/gigaset/i4l.c:331:
+	bcs->cs->iif.statcallb(&command);
 	         ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#391: FILE: drivers/isdn/gigaset/i4l.c:337:
+	unsigned proto;

ERROR:SPACING: space prohibited before that close square bracket ']'
#421: FILE: drivers/isdn/gigaset/i4l.c:367:
+	length[AT_DIAL ] = 1 + strlen(sp->phone) + 1 + 1;

ERROR:SPACING: space prohibited before that close square bracket ']'
#423: FILE: drivers/isdn/gigaset/i4l.c:369:
+	length[AT_MSN  ] = l ? 6 + l + 1 + 1 : 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#424: FILE: drivers/isdn/gigaset/i4l.c:370:
+	length[AT_BC   ] = 5 + strlen(bc) + 1 + 1;

ERROR:SPACING: space prohibited before that close square bracket ']'
#426: FILE: drivers/isdn/gigaset/i4l.c:372:
+	length[AT_ISO  ] = 6 + 1 + 1 + 1; /* channel: 1 character */

ERROR:SPACING: space prohibited before that close square bracket ']'
#427: FILE: drivers/isdn/gigaset/i4l.c:373:
+	length[AT_TYPE ] = 6 + 1 + 1 + 1; /* call type: 1 character */

ERROR:SPACING: space prohibited before that close square bracket ']'
#428: FILE: drivers/isdn/gigaset/i4l.c:374:
+	length[AT_HLC  ] = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#433: FILE: drivers/isdn/gigaset/i4l.c:379:
+		if (length[i] &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#444: FILE: drivers/isdn/gigaset/i4l.c:390:
+			 "D%s\r", sp->phone+2);
 			                   ^

ERROR:SPACING: space prohibited before that close square bracket ']'
#455: FILE: drivers/isdn/gigaset/i4l.c:401:
+	snprintf(bcs->commands[AT_BC   ], length[AT_BC   ],

ERROR:SPACING: space prohibited before that close square bracket ']'
#459: FILE: drivers/isdn/gigaset/i4l.c:405:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ],

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#460: FILE: drivers/isdn/gigaset/i4l.c:406:
+		 "^SISO=%u\r", (unsigned)bcs->channel + 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#467: FILE: drivers/isdn/gigaset/i4l.c:413:
+	unsigned proto;

ERROR:SPACING: space prohibited before that close square bracket ']'
#485: FILE: drivers/isdn/gigaset/i4l.c:431:
+	length[AT_DIAL ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#486: FILE: drivers/isdn/gigaset/i4l.c:432:
+	length[AT_MSN  ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#487: FILE: drivers/isdn/gigaset/i4l.c:433:
+	length[AT_BC   ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#489: FILE: drivers/isdn/gigaset/i4l.c:435:
+	length[AT_ISO  ] = 6 + 1 + 1 + 1; /* channel: 1 character */

ERROR:SPACING: space prohibited before that close square bracket ']'
#490: FILE: drivers/isdn/gigaset/i4l.c:436:
+	length[AT_TYPE ] = 0;

ERROR:SPACING: space prohibited before that close square bracket ']'
#491: FILE: drivers/isdn/gigaset/i4l.c:437:
+	length[AT_HLC  ] = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#496: FILE: drivers/isdn/gigaset/i4l.c:442:
+		if (length[i] &&

ERROR:SPACING: space prohibited before that close square bracket ']'
#505: FILE: drivers/isdn/gigaset/i4l.c:451:
+	snprintf(bcs->commands[AT_ISO  ], length[AT_ISO  ],

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/isdn/gigaset/i4l.c:452:
+		 "^SISO=%u\r", (unsigned) bcs->channel + 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#506: FILE: drivers/isdn/gigaset/i4l.c:452:
+		 "^SISO=%u\r", (unsigned) bcs->channel + 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#519: FILE: drivers/isdn/gigaset/i4l.c:465:
+	response.parm.setup.si1 = 0;	/* default: unknown */
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#520: FILE: drivers/isdn/gigaset/i4l.c:466:
+	response.parm.setup.si2 = 0;
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#521: FILE: drivers/isdn/gigaset/i4l.c:467:
+	response.parm.setup.screen = 0;	//FIXME how to set these?
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#522: FILE: drivers/isdn/gigaset/i4l.c:468:
+	response.parm.setup.plan = 0;
 	         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#525: FILE: drivers/isdn/gigaset/i4l.c:471:
+		response.parm.setup.si1 = 1;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#528: FILE: drivers/isdn/gigaset/i4l.c:474:
+		response.parm.setup.si1 = 7;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#531: FILE: drivers/isdn/gigaset/i4l.c:477:
+		response.parm.setup.si1 = 1;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#534: FILE: drivers/isdn/gigaset/i4l.c:480:
+		response.parm.setup.si1 = 1;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#535: FILE: drivers/isdn/gigaset/i4l.c:481:
+		response.parm.setup.si2 = 2;
 		         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/isdn/gigaset/i4l.c:484:
+		dev_warn(cs->dev, "RING ignored - unsupported BC %s\n",
+		     at_state->str_var[STR_ZBC]);

CHECK:BRACES: braces {} should be used on all arms of this statement
#541: FILE: drivers/isdn/gigaset/i4l.c:487:
+	if (at_state->str_var[STR_NMBR]) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#542: FILE: drivers/isdn/gigaset/i4l.c:488:
+		strncpy(response.parm.setup.phone, at_state->str_var[STR_NMBR],
 		                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#543: FILE: drivers/isdn/gigaset/i4l.c:489:
+			sizeof response.parm.setup.phone - 1);
 			                ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.phone should be sizeof(response.parm.setup.phone)
#543: FILE: drivers/isdn/gigaset/i4l.c:489:
+			sizeof response.parm.setup.phone - 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#544: FILE: drivers/isdn/gigaset/i4l.c:490:
+		response.parm.setup.phone[sizeof response.parm.setup.phone - 1] = 0;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#544: FILE: drivers/isdn/gigaset/i4l.c:490:
+		response.parm.setup.phone[sizeof response.parm.setup.phone - 1] = 0;
 		                                          ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.phone should be sizeof(response.parm.setup.phone)
#544: FILE: drivers/isdn/gigaset/i4l.c:490:
+		response.parm.setup.phone[sizeof response.parm.setup.phone - 1] = 0;

CHECK:BRACES: Unbalanced braces around else statement
#545: FILE: drivers/isdn/gigaset/i4l.c:491:
+	} else

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#546: FILE: drivers/isdn/gigaset/i4l.c:492:
+		response.parm.setup.phone[0] = 0;
 		         ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#547: FILE: drivers/isdn/gigaset/i4l.c:493:
+	if (at_state->str_var[STR_ZCPN]) {
[...]
+	} else
[...]

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#548: FILE: drivers/isdn/gigaset/i4l.c:494:
+		strncpy(response.parm.setup.eazmsn, at_state->str_var[STR_ZCPN],
 		                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#549: FILE: drivers/isdn/gigaset/i4l.c:495:
+			sizeof response.parm.setup.eazmsn - 1);
 			                ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.eazmsn should be sizeof(response.parm.setup.eazmsn)
#549: FILE: drivers/isdn/gigaset/i4l.c:495:
+			sizeof response.parm.setup.eazmsn - 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#550: FILE: drivers/isdn/gigaset/i4l.c:496:
+		response.parm.setup.eazmsn[sizeof response.parm.setup.eazmsn - 1] = 0;
 		         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#550: FILE: drivers/isdn/gigaset/i4l.c:496:
+		response.parm.setup.eazmsn[sizeof response.parm.setup.eazmsn - 1] = 0;
 		                                           ^^^^

WARNING:SIZEOF_PARENTHESIS: sizeof response.parm.setup.eazmsn should be sizeof(response.parm.setup.eazmsn)
#550: FILE: drivers/isdn/gigaset/i4l.c:496:
+		response.parm.setup.eazmsn[sizeof response.parm.setup.eazmsn - 1] = 0;

CHECK:BRACES: Unbalanced braces around else statement
#551: FILE: drivers/isdn/gigaset/i4l.c:497:
+	} else

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#552: FILE: drivers/isdn/gigaset/i4l.c:498:
+		response.parm.setup.eazmsn[0] = 0;
 		         ^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#564: FILE: drivers/isdn/gigaset/i4l.c:510:
+	retval = cs->iif.statcallb(&response);
 	             ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: drivers/isdn/gigaset/i4l.c:522:
+		dev_warn(cs->dev,
+		       "LL requested unsupported feature: Incomplete Number\n");

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#596: FILE: drivers/isdn/gigaset/i4l.c:542:
+	isdn_if *iif = &cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#596: FILE: drivers/isdn/gigaset/i4l.c:542:
+	isdn_if *iif = &cs->iif;
 	                    ^^^

WARNING:SIZEOF_PARENTHESIS: sizeof iif->id should be sizeof(iif->id)
#602: FILE: drivers/isdn/gigaset/i4l.c:548:
+	if (snprintf(iif->id, sizeof iif->id, "%s_%u", isdnid, cs->minor_index)

WARNING:SIZEOF_PARENTHESIS: sizeof iif->id should be sizeof(iif->id)
#603: FILE: drivers/isdn/gigaset/i4l.c:549:
+	    >= sizeof iif->id)

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#624: FILE: drivers/isdn/gigaset/i4l.c:570:
+	if (!register_isdn(iif))
 	                   ^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#633: FILE: include/linux/gigaset_dev.h:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#644: FILE: include/linux/gigaset_dev.h:12:
+ * Version: $Id: gigaset_dev.h,v 1.4.4.4 2005/11/21 22:28:09 hjlipp Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: include/linux/gigaset_dev.h:27:
+#define GIGASET_REDIR    _IOWR (GIGASET_IOCTL, 0, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#659: FILE: include/linux/gigaset_dev.h:27:
+#define GIGASET_REDIR    _IOWR (GIGASET_IOCTL, 0, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: include/linux/gigaset_dev.h:28:
+#define GIGASET_CONFIG   _IOWR (GIGASET_IOCTL, 1, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#660: FILE: include/linux/gigaset_dev.h:28:
+#define GIGASET_CONFIG   _IOWR (GIGASET_IOCTL, 1, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: include/linux/gigaset_dev.h:29:
+#define GIGASET_BRKCHARS _IOW  (GIGASET_IOCTL, 2, unsigned char[6]) //FIXME [6] okay?

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#661: FILE: include/linux/gigaset_dev.h:29:
+#define GIGASET_BRKCHARS _IOW  (GIGASET_IOCTL, 2, unsigned char[6]) //FIXME [6] okay?

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#662: FILE: include/linux/gigaset_dev.h:30:
+#define GIGASET_VERSION  _IOWR (GIGASET_IOCTL, 3, unsigned[4])

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: include/linux/gigaset_dev.h:30:
+#define GIGASET_VERSION  _IOWR (GIGASET_IOCTL, 3, unsigned[4])

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#662: FILE: include/linux/gigaset_dev.h:30:
+#define GIGASET_VERSION  _IOWR (GIGASET_IOCTL, 3, unsigned[4])

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#668: FILE: drivers/isdn/gigaset/interface.c:1:
+/*

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'if_lock', this function's name, in a string
#692: FILE: drivers/isdn/gigaset/interface.c:25:
+	gig_dbg(DEBUG_IF, "%u: if_lock (%d)", cs->minor_index, cmd);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#703: FILE: drivers/isdn/gigaset/interface.c:36:
+	if (!cmd && atomic_read(&cs->mstate) == MS_LOCKED
+	    && atomic_read(&cs->connected)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#704: FILE: drivers/isdn/gigaset/interface.c:37:
+		cs->ops->set_modem_ctrl(cs, 0, TIOCM_DTR|TIOCM_RTS);
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#707: FILE: drivers/isdn/gigaset/interface.c:40:
+		cs->control_state = TIOCM_DTR|TIOCM_RTS;
 		                             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#730: FILE: drivers/isdn/gigaset/interface.c:63:
+static int if_version(struct cardstate *cs, unsigned arg[4])

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#732: FILE: drivers/isdn/gigaset/interface.c:65:
+	static const unsigned version[4] = GIG_VERSION;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#733: FILE: drivers/isdn/gigaset/interface.c:66:
+	static const unsigned compat[4] = GIG_COMPAT;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#734: FILE: drivers/isdn/gigaset/interface.c:67:
+	unsigned cmd = arg[0];

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'if_version', this function's name, in a string
#736: FILE: drivers/isdn/gigaset/interface.c:69:
+	gig_dbg(DEBUG_IF, "%u: if_version (%d)", cs->minor_index, cmd);

WARNING:SIZEOF_PARENTHESIS: sizeof version should be sizeof(version)
#740: FILE: drivers/isdn/gigaset/interface.c:73:
+		memcpy(arg, version, sizeof version);

WARNING:SIZEOF_PARENTHESIS: sizeof compat should be sizeof(compat)
#743: FILE: drivers/isdn/gigaset/interface.c:76:
+		memcpy(arg, compat, sizeof compat);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'if_config', this function's name, in a string
#769: FILE: drivers/isdn/gigaset/interface.c:102:
+	gig_dbg(DEBUG_IF, "%u: if_config (%d)", cs->minor_index, *arg);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#784: FILE: drivers/isdn/gigaset/interface.c:117:
+static int  if_open(struct tty_struct *tty, struct file *filp);
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#785: FILE: drivers/isdn/gigaset/interface.c:118:
+static void if_close(struct tty_struct *tty, struct file *filp);
                                                           ^^^^

WARNING:CONST_STRUCT: struct tty_operations should normally be const
#799: FILE: drivers/isdn/gigaset/interface.c:132:
+static struct tty_operations if_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#809: FILE: drivers/isdn/gigaset/interface.c:142:
+#if 0

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#816: FILE: drivers/isdn/gigaset/interface.c:149:
+static int if_open(struct tty_struct *tty, struct file *filp)
                                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#847: FILE: drivers/isdn/gigaset/interface.c:180:
+static void if_close(struct tty_struct *tty, struct file *filp)
                                                           ^^^^

CHECK:SPACING: No space is necessary after a cast
#852: FILE: drivers/isdn/gigaset/interface.c:185:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#862: FILE: drivers/isdn/gigaset/interface.c:195:
+	if (!cs->open_count)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#864: FILE: drivers/isdn/gigaset/interface.c:197:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#882: FILE: drivers/isdn/gigaset/interface.c:215:
+	unsigned version[4];

CHECK:SPACING: No space is necessary after a cast
#884: FILE: drivers/isdn/gigaset/interface.c:217:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#895: FILE: drivers/isdn/gigaset/interface.c:228:
+	if (!cs->open_count)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#897: FILE: drivers/isdn/gigaset/interface.c:230:
+	else {

CHECK:SPACING: No space is necessary after a cast
#901: FILE: drivers/isdn/gigaset/interface.c:234:
+			retval = get_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#905: FILE: drivers/isdn/gigaset/interface.c:238:
+				retval = put_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#908: FILE: drivers/isdn/gigaset/interface.c:241:
+			retval = get_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#912: FILE: drivers/isdn/gigaset/interface.c:245:
+				retval = put_user(int_arg, (int __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#917: FILE: drivers/isdn/gigaset/interface.c:250:
+					   6, (const unsigned char *) arg, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: drivers/isdn/gigaset/interface.c:253:
+				gig_dbg(DEBUG_ANY,
+				    "can't communicate with unplugged device");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: drivers/isdn/gigaset/interface.c:258:
+			retval = copy_from_user(&buf,
+					(const unsigned char __user *) arg, 6)

CHECK:SPACING: No space is necessary after a cast
#925: FILE: drivers/isdn/gigaset/interface.c:258:
+					(const unsigned char __user *) arg, 6)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#932: FILE: drivers/isdn/gigaset/interface.c:265:
+			retval = copy_from_user(version,
+					(unsigned __user *) arg, sizeof version)

CHECK:SPACING: No space is necessary after a cast
#932: FILE: drivers/isdn/gigaset/interface.c:265:
+					(unsigned __user *) arg, sizeof version)

WARNING:SIZEOF_PARENTHESIS: sizeof version should be sizeof(version)
#932: FILE: drivers/isdn/gigaset/interface.c:265:
+					(unsigned __user *) arg, sizeof version)

CHECK:SPACING: No space is necessary after a cast
#937: FILE: drivers/isdn/gigaset/interface.c:270:
+				retval = copy_to_user((unsigned __user *) arg,

WARNING:SIZEOF_PARENTHESIS: sizeof version should be sizeof(version)
#938: FILE: drivers/isdn/gigaset/interface.c:271:
+						      version, sizeof version)

CHECK:SPACING: No space is necessary after a cast
#958: FILE: drivers/isdn/gigaset/interface.c:291:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#970: FILE: drivers/isdn/gigaset/interface.c:303:
+	retval = cs->control_state & (TIOCM_RTS|TIOCM_DTR);
 	                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#982: FILE: drivers/isdn/gigaset/interface.c:315:
+	unsigned mc;

CHECK:SPACING: No space is necessary after a cast
#984: FILE: drivers/isdn/gigaset/interface.c:317:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1000: FILE: drivers/isdn/gigaset/interface.c:333:
+		mc = (cs->control_state | set) & ~clear & (TIOCM_RTS|TIOCM_DTR);
 		                                                    ^

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: drivers/isdn/gigaset/interface.c:348:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1026: FILE: drivers/isdn/gigaset/interface.c:359:
+	if (!cs->open_count)
[...]
+	else if (atomic_read(&cs->mstate) != MS_LOCKED) {
[...]
+	} else if (!atomic_read(&cs->connected)) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#1049: FILE: drivers/isdn/gigaset/interface.c:382:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1060: FILE: drivers/isdn/gigaset/interface.c:393:
+	if (!cs->open_count)
[...]
+	else if (atomic_read(&cs->mstate) != MS_LOCKED) {
[...]
+	} else if (!atomic_read(&cs->connected)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1068: FILE: drivers/isdn/gigaset/interface.c:401:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1081: FILE: drivers/isdn/gigaset/interface.c:414:
+	cs = (struct cardstate *) tty->driver_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1092: FILE: drivers/isdn/gigaset/interface.c:425:
+	if (!cs->open_count)
[...]
+	else if (atomic_read(&cs->mstate) != MS_LOCKED) {
[...]
+	} else if (!atomic_read(&cs->connected)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1100: FILE: drivers/isdn/gigaset/interface.c:433:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1112: FILE: drivers/isdn/gigaset/interface.c:445:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1122: FILE: drivers/isdn/gigaset/interface.c:455:
+	if (!cs->open_count)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1124: FILE: drivers/isdn/gigaset/interface.c:457:
+	else {

CHECK:SPACING: No space is necessary after a cast
#1135: FILE: drivers/isdn/gigaset/interface.c:468:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1145: FILE: drivers/isdn/gigaset/interface.c:478:
+	if (!cs->open_count)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1147: FILE: drivers/isdn/gigaset/interface.c:480:
+	else {

CHECK:SPACING: No space is necessary after a cast
#1162: FILE: drivers/isdn/gigaset/interface.c:495:
+	cs = (struct cardstate *) tty->driver_data;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1228: FILE: drivers/isdn/gigaset/interface.c:561:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1258: FILE: drivers/isdn/gigaset/interface.c:591:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1262: FILE: drivers/isdn/gigaset/interface.c:595:
+	struct cardstate *cs = (struct cardstate *) data;

CHECK:SPACING: No space is necessary after a cast
#1288: FILE: drivers/isdn/gigaset/interface.c:621:
+	tasklet_init(&cs->if_wake_tasklet, &if_wake, (unsigned long) cs);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1312: FILE: drivers/isdn/gigaset/interface.c:645:
+	if ((tty = cs->tty) == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1312: FILE: drivers/isdn/gigaset/interface.c:645:
+	if ((tty = cs->tty) == NULL)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1314: FILE: drivers/isdn/gigaset/interface.c:647:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1334: FILE: drivers/isdn/gigaset/interface.c:667:
+	unsigned minors = drv->minors;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1340: FILE: drivers/isdn/gigaset/interface.c:673:
+	if ((drv->tty = alloc_tty_driver(minors)) == NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1390: FILE: drivers/isdn/gigaset/proc.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#1413: FILE: drivers/isdn/gigaset/proc.c:24:
+	struct cardstate *cs = usb_get_intfdata(intf);
+	return sprintf(buf, "%d\n", atomic_read(&cs->cidmode));

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#1421: FILE: drivers/isdn/gigaset/proc.c:32:
+	long int value;

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1424: FILE: drivers/isdn/gigaset/proc.c:35:
+	value = simple_strtol(buf, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1428: FILE: drivers/isdn/gigaset/proc.c:39:
+	if (value < 0 || value > 1)
+			return -EINVAL;

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_cidmode' to 'cidmode_show' 'set_cidmode' to 'cidmode_store'
#1450: FILE: drivers/isdn/gigaset/proc.c:61:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1452: FILE: drivers/isdn/gigaset/proc.c:63:
+static DEVICE_ATTR(cidmode, S_IRUGO|S_IWUSR, show_cidmode, set_cidmode);
                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1452: FILE: drivers/isdn/gigaset/proc.c:63:
+static DEVICE_ATTR(cidmode, S_IRUGO|S_IWUSR, show_cidmode, set_cidmode);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 95 warnings, 62 checks, 1403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
