WARNING:TYPO_SPELLING: 'Thats' may be misspelled - perhaps 'That's'?
#32: 
   Thats a bug in the base 2.4.18pre7
   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -u --recursive --new-file --exclude=CVS --exclude=.cvsignore ../vanilla/2.4/linux/include/linux/netfilter_ipv4/ipt_ULOG.h linux/include/linux/netfilter_ipv4/ipt_ULOG.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: include/linux/netfilter_ipv4/ipt_ULOG.h:1:
+/* Header file for IP tables userspace logging, Version 1.8

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: include/linux/netfilter_ipv4/ipt_ULOG.h:4:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#51: FILE: include/linux/netfilter_ipv4/ipt_ULOG.h:5:
+ * Distributed under the terms of GNU GPL */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#57: FILE: include/linux/netfilter_ipv4/ipt_ULOG.h:11:
+#define NETLINK_NFLOG ^I5$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#67: FILE: include/linux/netfilter_ipv4/ipt_ULOG.h:21:
+ * to 80... but even 50 seems to be big enough. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#78: FILE: include/linux/netfilter_ipv4/ipt_ULOG.h:32:
+typedef struct ulog_packet_msg {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: include/linux/netfilter_ipv4/ipt_ah.h:1:
+#ifndef _IPT_AH_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#101: FILE: include/linux/netfilter_ipv4/ipt_ah.h:5:
+struct ipt_ah
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#102: FILE: include/linux/netfilter_ipv4/ipt_ah.h:6:
+	u_int32_t spis[2];			/* Security Parameter Index */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#103: FILE: include/linux/netfilter_ipv4/ipt_ah.h:7:
+	u_int8_t  invflags;			/* Inverse flags */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: include/linux/netfilter_ipv4/ipt_ah.h:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: include/linux/netfilter_ipv4/ipt_esp.h:1:
+#ifndef _IPT_ESP_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#121: FILE: include/linux/netfilter_ipv4/ipt_esp.h:5:
+struct ipt_esp
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#122: FILE: include/linux/netfilter_ipv4/ipt_esp.h:6:
+	u_int32_t spis[2];			/* Security Parameter Index */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#123: FILE: include/linux/netfilter_ipv4/ipt_esp.h:7:
+	u_int8_t  invflags;			/* Inverse flags */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#126: FILE: include/linux/netfilter_ipv4/ipt_esp.h:10:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: include/linux/netfilter_ipv4.h:76:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: include/linux/netfilter_ipv4.h:77:
+/* route_me_harder function, used by iptable_nat, iptable_mangle + ip_queue $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: include/linux/netfilter_ipv4.h:80:
+ * module for just one function doesn't make sense. -HW */

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#158: FILE: include/linux/netfilter_ipv4.h:94:
+			      src:iph->saddr,
 			         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#158: FILE: include/linux/netfilter_ipv4.h:94:
+			      src:iph->saddr,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#159: FILE: include/linux/netfilter_ipv4.h:95:
+			      oif:(*pskb)->sk ? (*pskb)->sk->bound_dev_if : 0,
 			         ^

WARNING:INDENTED_LABEL: labels should not be indented
#159: FILE: include/linux/netfilter_ipv4.h:95:
+			      oif:(*pskb)->sk ? (*pskb)->sk->bound_dev_if : 0,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#160: FILE: include/linux/netfilter_ipv4.h:96:
+			      tos:RT_TOS(iph->tos)|RTO_CONN,
 			         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#160: FILE: include/linux/netfilter_ipv4.h:96:
+			      tos:RT_TOS(iph->tos)|RTO_CONN,
 			                          ^

WARNING:INDENTED_LABEL: labels should not be indented
#160: FILE: include/linux/netfilter_ipv4.h:96:
+			      tos:RT_TOS(iph->tos)|RTO_CONN,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#162: FILE: include/linux/netfilter_ipv4.h:98:
+			      fwmark:(*pskb)->nfmark
 			            ^

WARNING:INDENTED_LABEL: labels should not be indented
#162: FILE: include/linux/netfilter_ipv4.h:98:
+			      fwmark:(*pskb)->nfmark

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#168: FILE: include/linux/netfilter_ipv4.h:104:
+	/* accomodate ip_route_output_slow(), which expects the key src to be
 	   ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#169: FILE: include/linux/netfilter_ipv4.h:105:
+	/* accomodate ip_route_output_slow(), which expects the key src to be
+	   0 or a local address; however some non-standard hacks like

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: include/linux/netfilter_ipv4.h:107:
+           saddr to be appear on the NF_IP_LOCAL_OUT hook -MB */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: include/linux/netfilter_ipv4.h:107:
+           saddr to be appear on the NF_IP_LOCAL_OUT hook -MB */

ERROR:SPACING: space required before the open parenthesis '('
#172: FILE: include/linux/netfilter_ipv4.h:108:
+	if(key.src && !(dev_src = ip_dev_find(key.src)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#172: FILE: include/linux/netfilter_ipv4.h:108:
+	if(key.src && !(dev_src = ip_dev_find(key.src)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#175: FILE: include/linux/netfilter_ipv4.h:111:
+	if ((err=ip_route_output_key(&rt, &key)) != 0) {
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#175: FILE: include/linux/netfilter_ipv4.h:111:
+	if ((err=ip_route_output_key(&rt, &key)) != 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#176: FILE: include/linux/netfilter_ipv4.h:112:
+		printk("route_me_harder: ip_route_output_key(dst=%u.%u.%u.%u, src=%u.%u.%u.%u, oif=%d, tos=0x%x, fwmark=0x%lx) error %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'route_me_harder', this function's name, in a string
#176: FILE: include/linux/netfilter_ipv4.h:112:
+		printk("route_me_harder: ip_route_output_key(dst=%u.%u.%u.%u, src=%u.%u.%u.%u, oif=%d, tos=0x%x, fwmark=0x%lx) error %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: include/linux/netfilter_ipv4.h:113:
+		printk("route_me_harder: ip_route_output_key(dst=%u.%u.%u.%u, src=%u.%u.%u.%u, oif=%d, tos=0x%x, fwmark=0x%lx) error %d\n",
+			NIPQUAD(iph->daddr), NIPQUAD(iph->saddr),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#179: FILE: include/linux/netfilter_ipv4.h:115:
+			RT_TOS(iph->tos)|RTO_CONN,
 			                ^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#321: FILE: net/ipv4/netfilter/ipfwadm_core.c:23:
+ *	$Id: ipfwadm_core.c,v 1.9.2.2 2002/01/24 15:50:42 davem Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#365: FILE: net/ipv4/netfilter/ipt_ULOG.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: net/ipv4/netfilter/ipt_ULOG.c:7:
+ * 2001/01/04 in-kernel queue as proposed by Sebastian Zander $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#372: FILE: net/ipv4/netfilter/ipt_ULOG.c:8:
+ * ^I^I^I^I^I^I<zander@fokus.gmd.de>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: net/ipv4/netfilter/ipt_ULOG.c:9:
+ * 2001/01/30 per-rule nlgroup conflicts with global queue. $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#376: FILE: net/ipv4/netfilter/ipt_ULOG.c:12:
+ * ^I      module loadtime -HW$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: net/ipv4/netfilter/ipt_ULOG.c:16:
+ * This module accepts two parameters: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#381: FILE: net/ipv4/netfilter/ipt_ULOG.c:17:
+ * $

WARNING:TYPO_SPELLING: 'numer' may be misspelled - perhaps 'number'?
#419: FILE: net/ipv4/netfilter/ipt_ULOG.c:55:
+#define ULOG_MAXNLGROUPS	32		/* numer of nlgroups */
                         	  		   ^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#421: FILE: net/ipv4/netfilter/ipt_ULOG.c:57:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#422: FILE: net/ipv4/netfilter/ipt_ULOG.c:58:
+#define DEBUGP(format, args...)	printk(__FILE__ ":" __FUNCTION__ ":" \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#422: FILE: net/ipv4/netfilter/ipt_ULOG.c:58:
+#define DEBUGP(format, args...)	printk(__FILE__ ":" __FUNCTION__ ":" \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#428: FILE: net/ipv4/netfilter/ipt_ULOG.c:64:
+#define PRINTR(format, args...) do { if (net_ratelimit()) printk(format, ## args); } while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#428: FILE: net/ipv4/netfilter/ipt_ULOG.c:64:
+#define PRINTR(format, args...) do { if (net_ratelimit()) printk(format, ## args); } while (0);

do {} while(0) macros should not have a trailing semicolon.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#433: FILE: net/ipv4/netfilter/ipt_ULOG.c:69:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#444: FILE: net/ipv4/netfilter/ipt_ULOG.c:80:
+typedef struct {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ulog_send', this function's name, in a string
#463: FILE: net/ipv4/netfilter/ipt_ULOG.c:99:
+		DEBUGP("ipt_ULOG: ulog_send: timer was pending, deleting\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: net/ipv4/netfilter/ipt_ULOG.c:109:
+	DEBUGP("ipt_ULOG: throwing %d packets to netlink mask %u\n",
+		ub->qlen, nlgroup);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#480: FILE: net/ipv4/netfilter/ipt_ULOG.c:116:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#482: FILE: net/ipv4/netfilter/ipt_ULOG.c:118:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#489: FILE: net/ipv4/netfilter/ipt_ULOG.c:125:
+	 * from ipt_ulog_target at the same time */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#497: FILE: net/ipv4/netfilter/ipt_ULOG.c:133:
+	printk("ipt_ULOG:nflog_rcv() did receive netlink message ?!?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nflog_rcv', this function's name, in a string
#497: FILE: net/ipv4/netfilter/ipt_ULOG.c:133:
+	printk("ipt_ULOG:nflog_rcv() did receive netlink message ?!?\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#506: FILE: net/ipv4/netfilter/ipt_ULOG.c:142:
+	 * due to slab allocator restrictions */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: net/ipv4/netfilter/ipt_ULOG.c:147:
+		PRINTR("ipt_ULOG: can't alloc whole buffer %ub!\n",
+			nlbufsiz);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: net/ipv4/netfilter/ipt_ULOG.c:149:
+^I^I/* try to allocate only as much as we need for $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: net/ipv4/netfilter/ipt_ULOG.c:150:
+		 * current packet */

CHECK:SPACING: No space is necessary after a cast
#534: FILE: net/ipv4/netfilter/ipt_ULOG.c:170:
+	struct ipt_ulog_info *loginfo = (struct ipt_ulog_info *) targinfo;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'loginfo->copy_range == 0'
#537: FILE: net/ipv4/netfilter/ipt_ULOG.c:173:
+	if ((loginfo->copy_range == 0) ||
+	    (loginfo->copy_range > (*pskb)->len)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: net/ipv4/netfilter/ipt_ULOG.c:183:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#551: FILE: net/ipv4/netfilter/ipt_ULOG.c:187:
+		if (!(ub->skb = ulog_alloc_skb(size)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: net/ipv4/netfilter/ipt_ULOG.c:191:
+^I^I/* either the queue len is too high or we don't have $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#556: FILE: net/ipv4/netfilter/ipt_ULOG.c:192:
+		 * enough room in nlskb left. send it to userspace. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#560: FILE: net/ipv4/netfilter/ipt_ULOG.c:196:
+		if (!(ub->skb = ulog_alloc_skb(size)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: net/ipv4/netfilter/ipt_ULOG.c:200:
+^IDEBUGP("ipt_ULOG: qlen %d, qthreshold %d\n", ub->qlen, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: net/ipv4/netfilter/ipt_ULOG.c:201:
+	DEBUGP("ipt_ULOG: qlen %d, qthreshold %d\n", ub->qlen, 
+		loginfo->qthreshold);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: net/ipv4/netfilter/ipt_ULOG.c:204:
+^Inlh = NLMSG_PUT(ub->skb, 0, ub->qlen, ULOG_NL_EVENT, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pm->prefix
#583: FILE: net/ipv4/netfilter/ipt_ULOG.c:219:
+		*(pm->prefix) = '\0';

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#586: FILE: net/ipv4/netfilter/ipt_ULOG.c:222:
+	if (in && in->hard_header_len > 0
+	    && (*pskb)->mac.raw != (void *) (*pskb)->nh.iph

CHECK:SPACING: No space is necessary after a cast
#586: FILE: net/ipv4/netfilter/ipt_ULOG.c:222:
+	    && (*pskb)->mac.raw != (void *) (*pskb)->nh.iph

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#587: FILE: net/ipv4/netfilter/ipt_ULOG.c:223:
+	    && (*pskb)->mac.raw != (void *) (*pskb)->nh.iph
+	    && in->hard_header_len <= ULOG_MAC_LEN) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: net/ipv4/netfilter/ipt_ULOG.c:240:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#606: FILE: net/ipv4/netfilter/ipt_ULOG.c:242:
+	if (ub->qlen > 1) {
+		ub->lastnlh->nlmsg_flags |= NLM_F_MULTI;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#628: FILE: net/ipv4/netfilter/ipt_ULOG.c:264:
+
+

CHECK:SPACING: No space is necessary after a cast
#646: FILE: net/ipv4/netfilter/ipt_ULOG.c:282:
+	struct ipt_ulog_info *loginfo = (struct ipt_ulog_info *) targinfo;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: net/ipv4/netfilter/ipt_ULOG.c:297:
+		DEBUGP("ipt_ULOG: queue threshold %i > MAX_QLEN\n",
+			loginfo->qthreshold);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: net/ipv4/netfilter/ipt_ULOG.c:305:
+    { {NULL, NULL}, "ULOG", ipt_ulog_target, ipt_ulog_checkentry, NULL,$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#669: FILE: net/ipv4/netfilter/ipt_ULOG.c:305:
+static struct ipt_target ipt_ulog_reg =
+    { {NULL, NULL}, "ULOG", ipt_ulog_target, ipt_ulog_checkentry, NULL,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init', this function's name, in a string
#677: FILE: net/ipv4/netfilter/ipt_ULOG.c:313:
+	DEBUGP("ipt_ULOG: init module\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#679: FILE: net/ipv4/netfilter/ipt_ULOG.c:315:
+	if (nlbufsiz >= 128*1024) {
 	                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#680: FILE: net/ipv4/netfilter/ipt_ULOG.c:316:
+		printk("Netlink buffer has to be <= 128kB\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#718: FILE: net/ipv4/netfilter/ipt_ah.c:1:
+/* Kernel module to match AH parameters. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#729: FILE: net/ipv4/netfilter/ipt_ah.c:12:
+#define duprintf(format, args...) printk(format , ## args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#729: FILE: net/ipv4/netfilter/ipt_ah.c:12:
+#define duprintf(format, args...) printk(format , ## args)
                                                 ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#740: FILE: net/ipv4/netfilter/ipt_ah.c:23:
+spi_match(u_int32_t min, u_int32_t max, u_int32_t spi, int invert)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#742: FILE: net/ipv4/netfilter/ipt_ah.c:25:
+	int r=0;
 	     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: net/ipv4/netfilter/ipt_ah.c:26:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: net/ipv4/netfilter/ipt_ah.c:26:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: net/ipv4/netfilter/ipt_ah.c:26:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
                                                        ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#743: FILE: net/ipv4/netfilter/ipt_ah.c:26:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
                                                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#743: FILE: net/ipv4/netfilter/ipt_ah.c:26:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
                                                                    ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spi_match', this function's name, in a string
#743: FILE: net/ipv4/netfilter/ipt_ah.c:26:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: net/ipv4/netfilter/ipt_ah.c:27:
+        ^Imin,spi,max);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#744: FILE: net/ipv4/netfilter/ipt_ah.c:27:
+        ^Imin,spi,max);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: net/ipv4/netfilter/ipt_ah.c:27:
+        duprintf("ah spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
+        	min,spi,max);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: net/ipv4/netfilter/ipt_ah.c:27:
+        ^Imin,spi,max);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: net/ipv4/netfilter/ipt_ah.c:27:
+        	min,spi,max);
         	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#744: FILE: net/ipv4/netfilter/ipt_ah.c:27:
+        	min,spi,max);
         	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#745: FILE: net/ipv4/netfilter/ipt_ah.c:28:
+	r=(spi >= min && spi <= max) ^ invert;
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#746: FILE: net/ipv4/netfilter/ipt_ah.c:29:
+	duprintf(" result %s\n",r? "PASS" : "FAILED");
 	                       ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#746: FILE: net/ipv4/netfilter/ipt_ah.c:29:
+	duprintf(" result %s\n",r? "PASS" : "FAILED");
 	                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: net/ipv4/netfilter/ipt_ah.c:35:
+      const struct net_device *in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: net/ipv4/netfilter/ipt_ah.c:36:
+      const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: net/ipv4/netfilter/ipt_ah.c:37:
+      const void *matchinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: net/ipv4/netfilter/ipt_ah.c:38:
+      int offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#756: FILE: net/ipv4/netfilter/ipt_ah.c:39:
+      const void *hdr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#757: FILE: net/ipv4/netfilter/ipt_ah.c:40:
+      u_int16_t datalen,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#757: FILE: net/ipv4/netfilter/ipt_ah.c:40:
+      u_int16_t datalen,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: net/ipv4/netfilter/ipt_ah.c:41:
+      int *hotdrop)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#765: FILE: net/ipv4/netfilter/ipt_ah.c:48:
+		/* We've been asked to examine this packet, and we
+		   can't.  Hence, no choice but to drop. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#765: FILE: net/ipv4/netfilter/ipt_ah.c:48:
+		   can't.  Hence, no choice but to drop. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#773: FILE: net/ipv4/netfilter/ipt_ah.c:56:
+	return !offset
+		&& spi_match(ahinfo->spis[0], ahinfo->spis[1],

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#827: FILE: net/ipv4/netfilter/ipt_esp.c:1:
+/* Kernel module to match ESP parameters. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#838: FILE: net/ipv4/netfilter/ipt_esp.c:12:
+#define duprintf(format, args...) printk(format , ## args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#838: FILE: net/ipv4/netfilter/ipt_esp.c:12:
+#define duprintf(format, args...) printk(format , ## args)
                                                 ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#849: FILE: net/ipv4/netfilter/ipt_esp.c:23:
+spi_match(u_int32_t min, u_int32_t max, u_int32_t spi, int invert)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#851: FILE: net/ipv4/netfilter/ipt_esp.c:25:
+	int r=0;
 	     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: net/ipv4/netfilter/ipt_esp.c:26:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: net/ipv4/netfilter/ipt_esp.c:26:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#852: FILE: net/ipv4/netfilter/ipt_esp.c:26:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
                                                         ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#852: FILE: net/ipv4/netfilter/ipt_esp.c:26:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
                                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#852: FILE: net/ipv4/netfilter/ipt_esp.c:26:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
                                                                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spi_match', this function's name, in a string
#852: FILE: net/ipv4/netfilter/ipt_esp.c:26:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',

ERROR:CODE_INDENT: code indent should use tabs where possible
#853: FILE: net/ipv4/netfilter/ipt_esp.c:27:
+        ^Imin,spi,max);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#853: FILE: net/ipv4/netfilter/ipt_esp.c:27:
+        ^Imin,spi,max);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: net/ipv4/netfilter/ipt_esp.c:27:
+        duprintf("esp spi_match:%c 0x%x <= 0x%x <= 0x%x",invert? '!':' ',
+        	min,spi,max);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: net/ipv4/netfilter/ipt_esp.c:27:
+        ^Imin,spi,max);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#853: FILE: net/ipv4/netfilter/ipt_esp.c:27:
+        	min,spi,max);
         	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#853: FILE: net/ipv4/netfilter/ipt_esp.c:27:
+        	min,spi,max);
         	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#854: FILE: net/ipv4/netfilter/ipt_esp.c:28:
+	r=(spi >= min && spi <= max) ^ invert;
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#855: FILE: net/ipv4/netfilter/ipt_esp.c:29:
+	duprintf(" result %s\n",r? "PASS" : "FAILED");
 	                       ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#855: FILE: net/ipv4/netfilter/ipt_esp.c:29:
+	duprintf(" result %s\n",r? "PASS" : "FAILED");
 	                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: net/ipv4/netfilter/ipt_esp.c:35:
+      const struct net_device *in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: net/ipv4/netfilter/ipt_esp.c:36:
+      const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: net/ipv4/netfilter/ipt_esp.c:37:
+      const void *matchinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: net/ipv4/netfilter/ipt_esp.c:38:
+      int offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: net/ipv4/netfilter/ipt_esp.c:39:
+      const void *hdr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: net/ipv4/netfilter/ipt_esp.c:40:
+      u_int16_t datalen,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#866: FILE: net/ipv4/netfilter/ipt_esp.c:40:
+      u_int16_t datalen,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: net/ipv4/netfilter/ipt_esp.c:41:
+      int *hotdrop)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#874: FILE: net/ipv4/netfilter/ipt_esp.c:48:
+		/* We've been asked to examine this packet, and we
+		   can't.  Hence, no choice but to drop. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#874: FILE: net/ipv4/netfilter/ipt_esp.c:48:
+		   can't.  Hence, no choice but to drop. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#882: FILE: net/ipv4/netfilter/ipt_esp.c:56:
+	return !offset
+		&& spi_match(espinfo->spis[0], espinfo->spis[1],

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#983: FILE: net/ipv6/netfilter/ip6_queue.c:1:
+/*

WARNING:TYPO_SPELLING: 'usign' may be misspelled - perhaps 'using'?
#1018: FILE: net/ipv6/netfilter/ip6_queue.c:36:
+/* We're still usign the following structs. No need to change them: */
                ^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1032: FILE: net/ipv6/netfilter/ip6_queue.c:50:
+typedef struct ip6q_rt_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1037: FILE: net/ipv6/netfilter/ip6_queue.c:55:
+typedef struct ip6q_queue_element {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1047: FILE: net/ipv6/netfilter/ip6_queue.c:65:
+typedef struct ip6q_peer {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1055: FILE: net/ipv6/netfilter/ip6_queue.c:73:
+typedef struct ip6q_queue {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: net/ipv6/netfilter/ip6_queue.c:74:
+ ^Iint len;^I^I^I/* Current queue len */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1056: FILE: net/ipv6/netfilter/ip6_queue.c:74:
+ ^Iint len;^I^I^I/* Current queue len */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: net/ipv6/netfilter/ip6_queue.c:74:
+ ^Iint len;^I^I^I/* Current queue len */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: net/ipv6/netfilter/ip6_queue.c:75:
+ ^Iint *maxlen;^I^I^I/* Maximum queue len, via sysctl */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1057: FILE: net/ipv6/netfilter/ip6_queue.c:75:
+ ^Iint *maxlen;^I^I^I/* Maximum queue len, via sysctl */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: net/ipv6/netfilter/ip6_queue.c:75:
+ ^Iint *maxlen;^I^I^I/* Maximum queue len, via sysctl */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: net/ipv6/netfilter/ip6_queue.c:76:
+ ^Iunsigned char flushing;^I^I/* If queue is being flushed */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1058: FILE: net/ipv6/netfilter/ip6_queue.c:76:
+ ^Iunsigned char flushing;^I^I/* If queue is being flushed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: net/ipv6/netfilter/ip6_queue.c:76:
+ ^Iunsigned char flushing;^I^I/* If queue is being flushed */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: net/ipv6/netfilter/ip6_queue.c:77:
+ ^Iunsigned char terminate;^I/* If the queue is being terminated */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1059: FILE: net/ipv6/netfilter/ip6_queue.c:77:
+ ^Iunsigned char terminate;^I/* If the queue is being terminated */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: net/ipv6/netfilter/ip6_queue.c:77:
+ ^Iunsigned char terminate;^I/* If the queue is being terminated */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1060: FILE: net/ipv6/netfilter/ip6_queue.c:78:
+ ^Istruct list_head list;^I^I/* Head of packet queue */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1060: FILE: net/ipv6/netfilter/ip6_queue.c:78:
+ ^Istruct list_head list;^I^I/* Head of packet queue */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: net/ipv6/netfilter/ip6_queue.c:78:
+ ^Istruct list_head list;^I^I/* Head of packet queue */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: net/ipv6/netfilter/ip6_queue.c:79:
+ ^Ispinlock_t lock;^I^I/* Queue spinlock */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1061: FILE: net/ipv6/netfilter/ip6_queue.c:79:
+ ^Ispinlock_t lock;^I^I/* Queue spinlock */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: net/ipv6/netfilter/ip6_queue.c:79:
+ ^Ispinlock_t lock;^I^I/* Queue spinlock */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: net/ipv6/netfilter/ip6_queue.c:80:
+ ^Iip6q_peer_t peer;^I^I/* Userland peer */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1062: FILE: net/ipv6/netfilter/ip6_queue.c:80:
+ ^Iip6q_peer_t peer;^I^I/* Userland peer */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: net/ipv6/netfilter/ip6_queue.c:80:
+ ^Iip6q_peer_t peer;^I^I/* Userland peer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: net/ipv6/netfilter/ip6_queue.c:91:
+            int (*cmp)(ip6q_queue_element_t *, unsigned long),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: net/ipv6/netfilter/ip6_queue.c:91:
+ip6q_dequeue(ip6q_queue_t *q,
+            int (*cmp)(ip6q_queue_element_t *, unsigned long),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: net/ipv6/netfilter/ip6_queue.c:91:
+            int (*cmp)(ip6q_queue_element_t *, unsigned long),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: net/ipv6/netfilter/ip6_queue.c:92:
+            unsigned long data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: net/ipv6/netfilter/ip6_queue.c:92:
+            unsigned long data)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1081: FILE: net/ipv6/netfilter/ip6_queue.c:99:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: net/ipv6/netfilter/ip6_queue.c:115:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: net/ipv6/netfilter/ip6_queue.c:130:
+                                     ip6q_send_cb_t send_cb,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: net/ipv6/netfilter/ip6_queue.c:130:
+static ip6q_queue_t *ip6q_create_queue(nf_queue_outfn_t outfn,
+                                     ip6q_send_cb_t send_cb,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: net/ipv6/netfilter/ip6_queue.c:130:
+                                     ip6q_send_cb_t send_cb,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: net/ipv6/netfilter/ip6_queue.c:131:
+                                     int *errp, int *sysctl_qmax)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: net/ipv6/netfilter/ip6_queue.c:131:
+                                     int *errp, int *sysctl_qmax)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!q"
#1120: FILE: net/ipv6/netfilter/ip6_queue.c:138:
+	if (q == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#1145: FILE: net/ipv6/netfilter/ip6_queue.c:163:
+                       struct sk_buff *skb, struct nf_info *info)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: net/ipv6/netfilter/ip6_queue.c:163:
+static int ip6q_enqueue(ip6q_queue_t *q,
+                       struct sk_buff *skb, struct nf_info *info)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: net/ipv6/netfilter/ip6_queue.c:163:
+                       struct sk_buff *skb, struct nf_info *info)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1149: FILE: net/ipv6/netfilter/ip6_queue.c:167:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e"
#1151: FILE: net/ipv6/netfilter/ip6_queue.c:169:
+	if (e == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1152: FILE: net/ipv6/netfilter/ip6_queue.c:170:
+		printk(KERN_ERR "ip6_queue: OOM in enqueue\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1152: FILE: net/ipv6/netfilter/ip6_queue.c:170:
+	if (e == NULL) {
+		printk(KERN_ERR "ip6_queue: OOM in enqueue\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: net/ipv6/netfilter/ip6_queue.c:188:
+^I^Iif (net_ratelimit()) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1171: FILE: net/ipv6/netfilter/ip6_queue.c:189:
+			printk(KERN_WARNING "ip6_queue: full at %d entries, "

WARNING:SPLIT_STRING: quoted string split across lines
#1172: FILE: net/ipv6/netfilter/ip6_queue.c:190:
+			printk(KERN_WARNING "ip6_queue: full at %d entries, "
+			       "dropping packet(s).\n", q->len);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1176: FILE: net/ipv6/netfilter/ip6_queue.c:194:
+	if (q->flushing || q->peer.copy_mode == IPQ_COPY_NONE
+	    || q->peer.pid == 0 || q->peer.died || q->terminate) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1189: FILE: net/ipv6/netfilter/ip6_queue.c:207:
+		printk(KERN_INFO "ip6_queue: peer %d died, "

WARNING:SPLIT_STRING: quoted string split across lines
#1190: FILE: net/ipv6/netfilter/ip6_queue.c:208:
+		printk(KERN_INFO "ip6_queue: peer %d died, "
+		       "resetting state and flushing queue\n", q->peer.pid);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1213: FILE: net/ipv6/netfilter/ip6_queue.c:231:
+/*
+ * Taken from net/ipv6/ip6_output.c

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1239: FILE: net/ipv6/netfilter/ip6_queue.c:257:
+			printk(KERN_DEBUG "route6_me_harder: No more route.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'route6_me_harder', this function's name, in a string
#1239: FILE: net/ipv6/netfilter/ip6_queue.c:257:
+			printk(KERN_DEBUG "route6_me_harder: No more route.\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1249: FILE: net/ipv6/netfilter/ip6_queue.c:267:
+}
+static int ip6q_mangle_ipv6(ipq_verdict_msg_t *v, ip6q_queue_element_t *e)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1257: FILE: net/ipv6/netfilter/ip6_queue.c:275:
+	if (diff < 0)
[...]
+	else if (diff > 0) {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1264: FILE: net/ipv6/netfilter/ip6_queue.c:282:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1266: FILE: net/ipv6/netfilter/ip6_queue.c:284:
+^I^I^I                         skb_headroom(e->skb),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1267: FILE: net/ipv6/netfilter/ip6_queue.c:285:
+^I^I^I                         diff,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1268: FILE: net/ipv6/netfilter/ip6_queue.c:286:
+^I^I^I                         GFP_ATOMIC);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!newskb"
#1269: FILE: net/ipv6/netfilter/ip6_queue.c:287:
+			if (newskb == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1270: FILE: net/ipv6/netfilter/ip6_queue.c:288:
+				printk(KERN_WARNING "ip6_queue: OOM "

WARNING:SPLIT_STRING: quoted string split across lines
#1271: FILE: net/ipv6/netfilter/ip6_queue.c:289:
+				printk(KERN_WARNING "ip6_queue: OOM "
+				      "in mangle, dropping packet\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1285: FILE: net/ipv6/netfilter/ip6_queue.c:303:
+	/*
+	 * Extra routing may needed on local out, as the QUEUE target never

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: net/ipv6/netfilter/ip6_queue.c:305:
+         * Not a nice way to cmp, but works$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1291: FILE: net/ipv6/netfilter/ip6_queue.c:309:
+		struct ipv6hdr *iph = e->skb->nh.ipv6h;
+		if (!(   iph->daddr.in6_u.u6_addr32[0] == e->rt_info.daddr.in6_u.u6_addr32[0]

ERROR:SPACING: space prohibited after that open parenthesis '('
#1291: FILE: net/ipv6/netfilter/ip6_queue.c:309:
+		if (!(   iph->daddr.in6_u.u6_addr32[0] == e->rt_info.daddr.in6_u.u6_addr32[0]

ERROR:CODE_INDENT: code indent should use tabs where possible
#1292: FILE: net/ipv6/netfilter/ip6_queue.c:310:
+                      && iph->daddr.in6_u.u6_addr32[1] == e->rt_info.daddr.in6_u.u6_addr32[1]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1292: FILE: net/ipv6/netfilter/ip6_queue.c:310:
+		if (!(   iph->daddr.in6_u.u6_addr32[0] == e->rt_info.daddr.in6_u.u6_addr32[0]
+                      && iph->daddr.in6_u.u6_addr32[1] == e->rt_info.daddr.in6_u.u6_addr32[1]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: net/ipv6/netfilter/ip6_queue.c:310:
+                      && iph->daddr.in6_u.u6_addr32[1] == e->rt_info.daddr.in6_u.u6_addr32[1]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1293: FILE: net/ipv6/netfilter/ip6_queue.c:311:
+                      && iph->daddr.in6_u.u6_addr32[2] == e->rt_info.daddr.in6_u.u6_addr32[2]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1293: FILE: net/ipv6/netfilter/ip6_queue.c:311:
+                      && iph->daddr.in6_u.u6_addr32[1] == e->rt_info.daddr.in6_u.u6_addr32[1]
+                      && iph->daddr.in6_u.u6_addr32[2] == e->rt_info.daddr.in6_u.u6_addr32[2]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: net/ipv6/netfilter/ip6_queue.c:311:
+                      && iph->daddr.in6_u.u6_addr32[2] == e->rt_info.daddr.in6_u.u6_addr32[2]$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1294: FILE: net/ipv6/netfilter/ip6_queue.c:312:
+                      && iph->daddr.in6_u.u6_addr32[3] == e->rt_info.daddr.in6_u.u6_addr32[3]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1294: FILE: net/ipv6/netfilter/ip6_queue.c:312:
+                      && iph->daddr.in6_u.u6_addr32[2] == e->rt_info.daddr.in6_u.u6_addr32[2]
+                      && iph->daddr.in6_u.u6_addr32[3] == e->rt_info.daddr.in6_u.u6_addr32[3]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: net/ipv6/netfilter/ip6_queue.c:312:
+                      && iph->daddr.in6_u.u6_addr32[3] == e->rt_info.daddr.in6_u.u6_addr32[3]$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1295: FILE: net/ipv6/netfilter/ip6_queue.c:313:
+                      && iph->daddr.in6_u.u6_addr32[3] == e->rt_info.daddr.in6_u.u6_addr32[3]
+		      && iph->saddr.in6_u.u6_addr32[0] == e->rt_info.saddr.in6_u.u6_addr32[0]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1296: FILE: net/ipv6/netfilter/ip6_queue.c:314:
+		      && iph->saddr.in6_u.u6_addr32[0] == e->rt_info.saddr.in6_u.u6_addr32[0]
+		      && iph->saddr.in6_u.u6_addr32[1] == e->rt_info.saddr.in6_u.u6_addr32[1]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1297: FILE: net/ipv6/netfilter/ip6_queue.c:315:
+		      && iph->saddr.in6_u.u6_addr32[1] == e->rt_info.saddr.in6_u.u6_addr32[1]
+		      && iph->saddr.in6_u.u6_addr32[2] == e->rt_info.saddr.in6_u.u6_addr32[2]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1298: FILE: net/ipv6/netfilter/ip6_queue.c:316:
+		      && iph->saddr.in6_u.u6_addr32[2] == e->rt_info.saddr.in6_u.u6_addr32[2]
+		      && iph->saddr.in6_u.u6_addr32[3] == e->rt_info.saddr.in6_u.u6_addr32[3]))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1306: FILE: net/ipv6/netfilter/ip6_queue.c:324:
+	return (id == (unsigned long )e);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1310: FILE: net/ipv6/netfilter/ip6_queue.c:328:
+                           ipq_verdict_msg_t *v, unsigned int len)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: net/ipv6/netfilter/ip6_queue.c:328:
+static int ip6q_set_verdict(ip6q_queue_t *q,
+                           ipq_verdict_msg_t *v, unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1310: FILE: net/ipv6/netfilter/ip6_queue.c:328:
+                           ipq_verdict_msg_t *v, unsigned int len)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1317: FILE: net/ipv6/netfilter/ip6_queue.c:335:
+	if (e == NULL)
[...]
+	else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!e"
#1317: FILE: net/ipv6/netfilter/ip6_queue.c:335:
+	if (e == NULL)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1319: FILE: net/ipv6/netfilter/ip6_queue.c:337:
+		return -ENOENT;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1319: FILE: net/ipv6/netfilter/ip6_queue.c:337:
+	else {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1330: FILE: net/ipv6/netfilter/ip6_queue.c:348:
+static int ip6q_receive_peer(ip6q_queue_t* q, ipq_peer_msg_t *m,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1331: FILE: net/ipv6/netfilter/ip6_queue.c:349:
+                            unsigned char type, unsigned int len)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1331: FILE: net/ipv6/netfilter/ip6_queue.c:349:
+static int ip6q_receive_peer(ip6q_queue_t* q, ipq_peer_msg_t *m,
+                            unsigned char type, unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1331: FILE: net/ipv6/netfilter/ip6_queue.c:349:
+                            unsigned char type, unsigned int len)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1333: FILE: net/ipv6/netfilter/ip6_queue.c:351:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1336: FILE: net/ipv6/netfilter/ip6_queue.c:354:
+^I^I$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1344: FILE: net/ipv6/netfilter/ip6_queue.c:362:
+	switch (type) {
+		case IPQM_MODE:
[...]
+		case IPQM_VERDICT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1346: FILE: net/ipv6/netfilter/ip6_queue.c:364:
+			switch (m->msg.mode.value) {
+				case IPQ_COPY_META:
[...]
+				case IPQ_COPY_PACKET:
[...]
+				default:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: net/ipv6/netfilter/ip6_queue.c:384:
+^I^I^I^I                         &m->msg.verdict,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: net/ipv6/netfilter/ip6_queue.c:384:
+				status = ip6q_set_verdict(q,
+				                         &m->msg.verdict,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: net/ipv6/netfilter/ip6_queue.c:385:
+^I^I^I^I                         len - sizeof(*m));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1390: FILE: net/ipv6/netfilter/ip6_queue.c:408:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1405: FILE: net/ipv6/netfilter/ip6_queue.c:423:
+/*
+ * Packets arrive here from netfilter for queuing to userspace.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1409: FILE: net/ipv6/netfilter/ip6_queue.c:427:
+                             struct nf_info *info, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1409: FILE: net/ipv6/netfilter/ip6_queue.c:427:
+static int netfilter6_receive(struct sk_buff *skb,
+                             struct nf_info *info, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: net/ipv6/netfilter/ip6_queue.c:427:
+                             struct nf_info *info, void *data)$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1420: FILE: net/ipv6/netfilter/ip6_queue.c:438:
+static struct sock *nfnl = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#1422: FILE: net/ipv6/netfilter/ip6_queue.c:440:
+ip6q_queue_t *nlq6 = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1433: FILE: net/ipv6/netfilter/ip6_queue.c:451:
+	switch (nlq6->peer.copy_mode) {
[...]
+		case IPQ_COPY_META:
[...]
+		case IPQ_COPY_PACKET:
[...]
+		case IPQ_COPY_NONE:
+		default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1447: FILE: net/ipv6/netfilter/ip6_queue.c:465:
+^I^I^I$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1461: FILE: net/ipv6/netfilter/ip6_queue.c:479:
+	pm->packet_id = (unsigned long )e;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1467: FILE: net/ipv6/netfilter/ip6_queue.c:485:
+	if (e->info->indev) strcpy(pm->indev_name, e->info->indev->name);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1468: FILE: net/ipv6/netfilter/ip6_queue.c:486:
+	else pm->indev_name[0] = '\0';

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1469: FILE: net/ipv6/netfilter/ip6_queue.c:487:
+	if (e->info->outdev) strcpy(pm->outdev_name, e->info->outdev->name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1470: FILE: net/ipv6/netfilter/ip6_queue.c:488:
+	else pm->outdev_name[0] = '\0';

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: net/ipv6/netfilter/ip6_queue.c:495:
+^I^I^I^I                               pm->hw_addr);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1488: FILE: net/ipv6/netfilter/ip6_queue.c:506:
+	printk(KERN_ERR "ip6_queue: error creating netlink message\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1498: FILE: net/ipv6/netfilter/ip6_queue.c:516:
+	if (skb == NULL)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1503: FILE: net/ipv6/netfilter/ip6_queue.c:521:
+#define RCV_SKB_FAIL(err) do { netlink_ack(skb, nlh, (err)); return; } while (0);

WARNING:DO_WHILE_MACRO_WITH_TRAILING_SEMICOLON: do {} while (0) macros should not be semicolon terminated
#1503: FILE: net/ipv6/netfilter/ip6_queue.c:521:
+#define RCV_SKB_FAIL(err) do { netlink_ack(skb, nlh, (err)); return; } while (0);

WARNING:INLINE: plain inline is preferred over __inline__
#1505: FILE: net/ipv6/netfilter/ip6_queue.c:523:
+static __inline__ void netlink_receive_user_skb(struct sk_buff *skb)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1515: FILE: net/ipv6/netfilter/ip6_queue.c:533:
+	if (nlh->nlmsg_len < sizeof(struct nlmsghdr)
+	    || skb->len < nlh->nlmsg_len)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1516: FILE: net/ipv6/netfilter/ip6_queue.c:534:
+^I    ^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1516: FILE: net/ipv6/netfilter/ip6_queue.c:534:
+^I    ^Ireturn;$

ERROR:SPACING: space required before the open parenthesis '('
#1518: FILE: net/ipv6/netfilter/ip6_queue.c:536:
+	if(nlh->nlmsg_pid <= 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1519: FILE: net/ipv6/netfilter/ip6_queue.c:537:
+	if(nlh->nlmsg_pid <= 0
+	    || !(nlh->nlmsg_flags & NLM_F_REQUEST)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1520: FILE: net/ipv6/netfilter/ip6_queue.c:538:
+	    || !(nlh->nlmsg_flags & NLM_F_REQUEST)
+	    || nlh->nlmsg_flags & NLM_F_MULTI)

ERROR:SPACING: space required before the open parenthesis '('
#1529: FILE: net/ipv6/netfilter/ip6_queue.c:547:
+	if(!cap_raised(NETLINK_CB(skb).eff_cap, CAP_NET_ADMIN))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nlq6->peer.pid != nlh->nlmsg_pid'
#1531: FILE: net/ipv6/netfilter/ip6_queue.c:549:
+	if (nlq6->peer.pid && !nlq6->peer.died
+	    && (nlq6->peer.pid != nlh->nlmsg_pid)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1532: FILE: net/ipv6/netfilter/ip6_queue.c:550:
+	if (nlq6->peer.pid && !nlq6->peer.died
+	    && (nlq6->peer.pid != nlh->nlmsg_pid)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1533: FILE: net/ipv6/netfilter/ip6_queue.c:551:
+^I    ^Iprintk(KERN_WARNING "ip6_queue: peer pid changed from %d to "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1533: FILE: net/ipv6/netfilter/ip6_queue.c:551:
+^I    ^Iprintk(KERN_WARNING "ip6_queue: peer pid changed from %d to "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1533: FILE: net/ipv6/netfilter/ip6_queue.c:551:
+	    	printk(KERN_WARNING "ip6_queue: peer pid changed from %d to "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1534: FILE: net/ipv6/netfilter/ip6_queue.c:552:
+^I    ^I      "%d, flushing queue\n", nlq6->peer.pid, nlh->nlmsg_pid);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1534: FILE: net/ipv6/netfilter/ip6_queue.c:552:
+^I    ^I      "%d, flushing queue\n", nlq6->peer.pid, nlh->nlmsg_pid);$

WARNING:SPLIT_STRING: quoted string split across lines
#1534: FILE: net/ipv6/netfilter/ip6_queue.c:552:
+	    	printk(KERN_WARNING "ip6_queue: peer pid changed from %d to "
+	    	      "%d, flushing queue\n", nlq6->peer.pid, nlh->nlmsg_pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1536: FILE: net/ipv6/netfilter/ip6_queue.c:554:
+^I}^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1540: FILE: net/ipv6/netfilter/ip6_queue.c:558:
+^I                          type, skb->len - NLMSG_LENGTH(0));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1540: FILE: net/ipv6/netfilter/ip6_queue.c:558:
+	status = ip6q_receive_peer(nlq6, NLMSG_DATA(nlh),
+	                          type, skb->len - NLMSG_LENGTH(0));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1545: FILE: net/ipv6/netfilter/ip6_queue.c:563:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: net/ipv6/netfilter/ip6_queue.c:563:
+        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1571: FILE: net/ipv6/netfilter/ip6_queue.c:589:
+                         unsigned long event, void *ptr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: net/ipv6/netfilter/ip6_queue.c:589:
+                         unsigned long event, void *ptr)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1600: FILE: net/ipv6/netfilter/ip6_queue.c:618:
+ ^I{ 0 }$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1600: FILE: net/ipv6/netfilter/ip6_queue.c:618:
+ ^I{ 0 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: net/ipv6/netfilter/ip6_queue.c:618:
+ ^I{ 0 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1625: FILE: net/ipv6/netfilter/ip6_queue.c:643:
+^I              "Peer pid            : %d\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1626: FILE: net/ipv6/netfilter/ip6_queue.c:644:
+^I              "Peer died           : %d\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1627: FILE: net/ipv6/netfilter/ip6_queue.c:645:
+^I              "Peer copy mode      : %d\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1628: FILE: net/ipv6/netfilter/ip6_queue.c:646:
+^I              "Peer copy range     : %Zu\n"$

WARNING:PRINTF_Z: %Zu is non-standard C, use %zu
#1628: FILE: net/ipv6/netfilter/ip6_queue.c:646:
+	              "Peer copy range     : %Zu\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#1629: FILE: net/ipv6/netfilter/ip6_queue.c:647:
+^I              "Queue length        : %d\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1630: FILE: net/ipv6/netfilter/ip6_queue.c:648:
+^I              "Queue max. length   : %d\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1631: FILE: net/ipv6/netfilter/ip6_queue.c:649:
+^I              "Queue flushing      : %d\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1632: FILE: net/ipv6/netfilter/ip6_queue.c:650:
+^I              "Queue terminate     : %d\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1633: FILE: net/ipv6/netfilter/ip6_queue.c:651:
+^I              nlq6->peer.pid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1634: FILE: net/ipv6/netfilter/ip6_queue.c:652:
+^I              nlq6->peer.died,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: net/ipv6/netfilter/ip6_queue.c:653:
+^I              nlq6->peer.copy_mode,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1636: FILE: net/ipv6/netfilter/ip6_queue.c:654:
+^I              nlq6->peer.copy_range,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1637: FILE: net/ipv6/netfilter/ip6_queue.c:655:
+^I              nlq6->len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1638: FILE: net/ipv6/netfilter/ip6_queue.c:656:
+^I              *nlq6->maxlen,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1639: FILE: net/ipv6/netfilter/ip6_queue.c:657:
+^I              nlq6->flushing,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1640: FILE: net/ipv6/netfilter/ip6_queue.c:658:
+^I              nlq6->terminate);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1661: FILE: net/ipv6/netfilter/ip6_queue.c:679:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: net/ipv6/netfilter/ip6_queue.c:680:
+        /* We must create the NETLINK_IP6_FW protocol service */$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nfnl"
#1664: FILE: net/ipv6/netfilter/ip6_queue.c:682:
+	if (nfnl == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1665: FILE: net/ipv6/netfilter/ip6_queue.c:683:
+		printk(KERN_ERR "ip6_queue: initialisation failed: unable to "

WARNING:SPLIT_STRING: quoted string split across lines
#1666: FILE: net/ipv6/netfilter/ip6_queue.c:684:
+		printk(KERN_ERR "ip6_queue: initialisation failed: unable to "
+		       "create kernel netlink socket\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: net/ipv6/netfilter/ip6_queue.c:688:
+^I                       netlink_send_peer, &status, &sysctl_maxlen);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1670: FILE: net/ipv6/netfilter/ip6_queue.c:688:
+	nlq6 = ip6q_create_queue(netfilter6_receive,
+	                       netlink_send_peer, &status, &sysctl_maxlen);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nlq6"
#1671: FILE: net/ipv6/netfilter/ip6_queue.c:689:
+	if (nlq6 == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1672: FILE: net/ipv6/netfilter/ip6_queue.c:690:
+		printk(KERN_ERR "ip6_queue: initialisation failed: unable to "

WARNING:SPLIT_STRING: quoted string split across lines
#1673: FILE: net/ipv6/netfilter/ip6_queue.c:691:
+		printk(KERN_ERR "ip6_queue: initialisation failed: unable to "
+		       "create queue\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: net/ipv6/netfilter/ip6_queue.c:695:
+        /* The file will be /proc/net/ip6_queue */$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1679: FILE: net/ipv6/netfilter/ip6_queue.c:697:
+	if (proc) proc->owner = THIS_MODULE;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1679: FILE: net/ipv6/netfilter/ip6_queue.c:697:
+	if (proc) proc->owner = THIS_MODULE;
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1680: FILE: net/ipv6/netfilter/ip6_queue.c:698:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480836.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 121 errors, 135 warnings, 76 checks, 1607 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000480836.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
