ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#34: FILE: src/uname.c:51:
+void __sysinfo_processor_type(char*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#34: FILE: src/uname.c:51:
+void __sysinfo_processor_type(char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#34: FILE: src/uname.c:51:
+void __sysinfo_processor_type(char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: src/uname.c:122:
+  char processor[BUFSIZ];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: src/uname.c:187:
+  __sysinfo_processor_type(processor);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#66: FILE: src/uname.c:213:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#68: FILE: src/uname.c:215:
+/* Carlos E. Gorges
+return vendor_id from proc cpuinfo

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#71: FILE: src/uname.c:218:
+void
+__sysinfo_processor_type (char* proc_info) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#72: FILE: src/uname.c:219:
+__sysinfo_processor_type (char* proc_info) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: src/uname.c:219:
+__sysinfo_processor_type (char* proc_info) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: src/uname.c:221:
+	char temp_string[BUFSIZ],final_string[BUFSIZ]="unknown";
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#74: FILE: src/uname.c:221:
+	char temp_string[BUFSIZ],final_string[BUFSIZ]="unknown";
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: src/uname.c:222:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#76: FILE: src/uname.c:223:
+	if ((ffd=fopen("/proc/cpuinfo", "r") )!=NULL) {
 	        ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#76: FILE: src/uname.c:223:
+	if ((ffd=fopen("/proc/cpuinfo", "r") )!=NULL) {
 	                                      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: src/uname.c:223:
+	if ((ffd=fopen("/proc/cpuinfo", "r") )!=NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#76: FILE: src/uname.c:223:
+	if ((ffd=fopen("/proc/cpuinfo", "r") )!=NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#77: FILE: src/uname.c:224:
+		while ( fscanf(ffd, "%s :", temp_string) != EOF)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#78: FILE: src/uname.c:225:
+			if (!(strcmp(temp_string, "vendor_id"))) {
+					fscanf(ffd, "%s", final_string);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: src/uname.c:231:
+	strncpy(proc_info,final_string,BUFSIZ);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: src/uname.c:231:
+	strncpy(proc_info,final_string,BUFSIZ);
 	                              ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470386.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 7 warnings, 1 checks, 53 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470386.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
