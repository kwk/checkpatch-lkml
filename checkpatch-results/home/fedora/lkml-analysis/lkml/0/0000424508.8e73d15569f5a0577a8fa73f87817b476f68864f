WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -Naur linux-2.5.41/include/linux/evms.h linux-2.5.41-evms/include/linux/evms.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: include/linux/evms.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: include/linux/evms.h:6:
+ *   the Free Software Foundation; either version 2 of the License, or $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: include/linux/evms.h:8:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: include/linux/evms.h:15:
+ *   along with this program;  if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: include/linux/evms.h:15:
+ *   along with this program;  if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: include/linux/evms.h:16:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: include/linux/evms.h:29:
+ * version info $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: include/linux/evms.h:52:
+ * kernel logging levels defines $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#114: FILE: include/linux/evms.h:73:
+#define evmsLOG(info_level,prspec) { if (evms_info_level >= info_level) printk prspec; }
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <evmsLOG>
#114: FILE: include/linux/evms.h:73:
+#define evmsLOG(info_level,prspec) { if (evms_info_level >= info_level) printk prspec; }

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'info_level' may be better as '(info_level)' to avoid precedence issues
#114: FILE: include/linux/evms.h:73:
+#define evmsLOG(info_level,prspec) { if (evms_info_level >= info_level) printk prspec; }

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: include/linux/evms.h:74:
+#define evmsLOG2(info_level,statement) { if (evms_info_level >= info_level) statement; }
                            ^

CHECK:CAMELCASE: Avoid CamelCase: <evmsLOG2>
#115: FILE: include/linux/evms.h:74:
+#define evmsLOG2(info_level,statement) { if (evms_info_level >= info_level) statement; }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'info_level' may be better as '(info_level)' to avoid precedence issues
#115: FILE: include/linux/evms.h:74:
+#define evmsLOG2(info_level,statement) { if (evms_info_level >= info_level) statement; }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: include/linux/evms.h:77:
+ * LOG MACROS to make evms log messages $

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#122: FILE: include/linux/evms.h:81:
+#define LOG_CRITICAL(msg, args...)	evmsLOG(EVMS_INFO_CRITICAL,   (KERN_CRIT    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#123: FILE: include/linux/evms.h:82:
+#define LOG_SERIOUS(msg, args...)	evmsLOG(EVMS_INFO_SERIOUS,    (KERN_ERR     EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#124: FILE: include/linux/evms.h:83:
+#define LOG_ERROR(msg, args...)		evmsLOG(EVMS_INFO_ERROR,      (KERN_ERR     EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#125: FILE: include/linux/evms.h:84:
+#define LOG_WARNING(msg, args...)	evmsLOG(EVMS_INFO_WARNING,    (KERN_WARNING EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#126: FILE: include/linux/evms.h:85:
+#define LOG_DEFAULT(msg, args...)	evmsLOG(EVMS_INFO_DEFAULT,    (KERN_INFO    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#127: FILE: include/linux/evms.h:86:
+#define LOG_DETAILS(msg, args...)	evmsLOG(EVMS_INFO_DETAILS,    (KERN_INFO    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#128: FILE: include/linux/evms.h:87:
+#define LOG_DEBUG(msg, args...)		evmsLOG(EVMS_INFO_DEBUG,      (KERN_INFO    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#129: FILE: include/linux/evms.h:88:
+#define LOG_EXTRA(msg, args...)		evmsLOG(EVMS_INFO_EXTRA,      (KERN_INFO    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#130: FILE: include/linux/evms.h:89:
+#define LOG_ENTRY_EXIT(msg, args...)	evmsLOG(EVMS_INFO_ENTRY_EXIT, (KERN_INFO    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#131: FILE: include/linux/evms.h:90:
+#define LOG_EVERYTHING(msg, args...)	evmsLOG(EVMS_INFO_EVERYTHING, (KERN_INFO    EVMS_LOG_PREFIX LOG_PREFIX msg, ## args))

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#142: FILE: include/linux/evms.h:101:
+#define PFD64 "%Ld"

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#143: FILE: include/linux/evms.h:102:
+#define PFU64 "%Lu"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#144: FILE: include/linux/evms.h:103:
+#define PFX64 "%Lx"

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#151: FILE: include/linux/evms.h:110:
+#define PROCPRINT(msg, args...) (sz += sprintf(page + sz, msg, ## args));\
+			if (sz < off)\
+				off -= sz, sz = 0;\
+			else if (sz >= off + count)\
+				goto out

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#151: FILE: include/linux/evms.h:110:
+#define PROCPRINT(msg, args...) (sz += sprintf(page + sz, msg, ## args));\
+			if (sz < off)\
+				off -= sz, sz = 0;\
+			else if (sz >= off + count)\
+				goto out

CHECK:CAMELCASE: Avoid CamelCase: <SetPluginID>
#166: FILE: include/linux/evms.h:125:
+#define SetPluginID(oem, type, id) ((oem << 16) | (type << 12) | id)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'oem' may be better as '(oem)' to avoid precedence issues
#166: FILE: include/linux/evms.h:125:
+#define SetPluginID(oem, type, id) ((oem << 16) | (type << 12) | id)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'id' may be better as '(id)' to avoid precedence issues
#166: FILE: include/linux/evms.h:125:
+#define SetPluginID(oem, type, id) ((oem << 16) | (type << 12) | id)

CHECK:CAMELCASE: Avoid CamelCase: <GetPluginOEM>
#167: FILE: include/linux/evms.h:126:
+#define GetPluginOEM(pluginid) (pluginid >> 16)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pluginid' may be better as '(pluginid)' to avoid precedence issues
#167: FILE: include/linux/evms.h:126:
+#define GetPluginOEM(pluginid) (pluginid >> 16)

CHECK:CAMELCASE: Avoid CamelCase: <GetPluginType>
#168: FILE: include/linux/evms.h:127:
+#define GetPluginType(pluginid) ((pluginid >> 12) & 0xf)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pluginid' may be better as '(pluginid)' to avoid precedence issues
#168: FILE: include/linux/evms.h:127:
+#define GetPluginType(pluginid) ((pluginid >> 12) & 0xf)

CHECK:CAMELCASE: Avoid CamelCase: <GetPluginID>
#169: FILE: include/linux/evms.h:128:
+#define GetPluginID(pluginid) (pluginid & 0xfff)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pluginid' may be better as '(pluginid)' to avoid precedence issues
#169: FILE: include/linux/evms.h:128:
+#define GetPluginID(pluginid) (pluginid & 0xfff)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: include/linux/evms.h:146:
+ * struct evms_version - $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: include/linux/evms.h:161:
+ * @id: ^I^I^Iplugin id$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: include/linux/evms.h:162:
+ * @version: ^I^I^Iplugin version$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#204: FILE: include/linux/evms.h:163:
+ * @required_services_version: ^Irequired common services version$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: include/linux/evms.h:164:
+ * @fops: ^I^I^Itable of function operations$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: include/linux/evms.h:178:
+ * @signature: ^I^I^Iunique magic number$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: include/linux/evms.h:179:
+ * @crc: ^I^I^Istructure's crc$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: include/linux/evms.h:180:
+ * @version: ^I^I^Ifeature header version$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: include/linux/evms.h:181:
+ * @engine_version: ^I^Icreated by this evms engine version$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: include/linux/evms.h:182:
+ * @flags: ^I^I^Ifeature characteristics, bit definitions below.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: include/linux/evms.h:183:
+ * @feature_id: ^I^Iindicates which feature this header is describing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: include/linux/evms.h:184:
+ * @sequence_number: ^I^Idescribes most recent copy of redundant metadata$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: include/linux/evms.h:185:
+ * @alignment_padding: ^I^Iused when objects are moved between different sized devices$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: include/linux/evms.h:186:
+ * @feature_data1_start_lsn: ^Iobject relative start of 1st copy feature data$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: include/linux/evms.h:187:
+ * @feature_data1_size: ^Isize of 1st copy of feature data$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: include/linux/evms.h:188:
+ * @feature_data2_start_lsn: ^Iobject relative start of 2nd copy feature data$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: include/linux/evms.h:189:
+ * @feature_data2_size: ^Isize of 2nd copy of feature data$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: include/linux/evms.h:190:
+ * @volume_serial_number: ^Iunique/persistent volume identifier$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: include/linux/evms.h:191:
+ * @volume_system_id: ^I^Iunique/persistent minor number$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: include/linux/evms.h:192:
+ * @object_depth: ^I^Idepth of object in volume tree$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: include/linux/evms.h:193:
+ * @object_name: ^I^Iobject's name$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: include/linux/evms.h:194:
+ * @volume_name: ^I^Ivolume name object is a part of$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: include/linux/evms.h:195:
+ * @pad: ^I^I^Ipadding to make structure be 512 byte aligned$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#269: FILE: include/linux/evms.h:228:
+#define EVMS_FEATURE_ACTIVE                     (1<<0)
                                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#269: FILE: include/linux/evms.h:228:
+#define EVMS_FEATURE_ACTIVE                     (1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#270: FILE: include/linux/evms.h:229:
+#define EVMS_FEATURE_VOLUME_COMPLETE            (1<<1)
                                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#270: FILE: include/linux/evms.h:229:
+#define EVMS_FEATURE_VOLUME_COMPLETE            (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#271: FILE: include/linux/evms.h:230:
+#define EVMS_VOLUME_DATA_OBJECT			(1<<16)
                                			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#271: FILE: include/linux/evms.h:230:
+#define EVMS_VOLUME_DATA_OBJECT			(1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#272: FILE: include/linux/evms.h:231:
+#define EVMS_VOLUME_DATA_STOP			(1<<17)
                              			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#272: FILE: include/linux/evms.h:231:
+#define EVMS_VOLUME_DATA_STOP			(1<<17)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: include/linux/evms.h:240:
+ * EVMS specific error codes $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: include/linux/evms.h:248:
+ * @volume_sn: ^I^Iunique volume identifier$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: include/linux/evms.h:249:
+ * @volume_minor: ^Ipersistent device minor assigned to this volume$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#291: FILE: include/linux/evms.h:250:
+ * @volume_name: ^Ipersistent name assigned to this volume$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: include/linux/evms.h:262:
+ * @total_vsectors: ^I  0 size of this object in 512 byte units$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#304: FILE: include/linux/evms.h:263:
+ * @plugin: ^I^I  8 plugin that created/owns/manages this storage object$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: include/linux/evms.h:264:
+ * @private: ^I^I 12 location for owner to store private info$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: include/linux/evms.h:265:
+ * @flags: ^I^I 16 storage object characteristics (set/used by plugins)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: include/linux/evms.h:266:
+ *^I   ^I^I    bit definitions located in evms_common.h$

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#308: FILE: include/linux/evms.h:267:
+ * @iflags: 		 20 internal flags (used exclusively by the framework, not for plugins to use/set)

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#308: FILE: include/linux/evms.h:267:
+ * @iflags: ^I^I 20 internal flags (used exclusively by the framework, not for plugins to use/set)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#309: FILE: include/linux/evms.h:268:
+ *^I    ^I^I    bit definitions below.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#310: FILE: include/linux/evms.h:269:
+ * @hardsector_size: ^I 24 assumed physical sector size of underlying device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#311: FILE: include/linux/evms.h:270:
+ * @block_size: ^I 28 default block size for this object$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#312: FILE: include/linux/evms.h:271:
+ * @system_id: ^I^I 32 system indicator (set by the segment manager)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: include/linux/evms.h:272:
+ * @volume_info: ^I 36 persistent volume info, used only by EVMS volumes$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: include/linux/evms.h:273:
+ * @feature_header: ^I 40 generic on-disk metadata describing any EVMS feature$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#315: FILE: include/linux/evms.h:274:
+ * @next: ^I^I 44 linked list field$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: include/linux/evms.h:280:
+ * @name: ^I^I 88 storage object name$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: include/linux/evms.h:309:
+#define EVMS_FLAGS_WIDTH                   ^I32$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#351: FILE: include/linux/evms.h:310:
+#define EVMS_VOLUME_FLAG                        (1<<0)
                                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#351: FILE: include/linux/evms.h:310:
+#define EVMS_VOLUME_FLAG                        (1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#352: FILE: include/linux/evms.h:311:
+#define EVMS_VOLUME_PARTIAL_FLAG                (1<<1)
                                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#352: FILE: include/linux/evms.h:311:
+#define EVMS_VOLUME_PARTIAL_FLAG                (1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#353: FILE: include/linux/evms.h:312:
+#define EVMS_VOLUME_PARTIAL			(1<<1)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#353: FILE: include/linux/evms.h:312:
+#define EVMS_VOLUME_PARTIAL			(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#354: FILE: include/linux/evms.h:313:
+#define EVMS_VOLUME_SET_READ_ONLY               (1<<2)
                                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#354: FILE: include/linux/evms.h:313:
+#define EVMS_VOLUME_SET_READ_ONLY               (1<<2)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: include/linux/evms.h:314:
+#define EVMS_VOLUME_READ_ONLY               ^I(1<<2)$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#355: FILE: include/linux/evms.h:314:
+#define EVMS_VOLUME_READ_ONLY               	(1<<2)
                                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#355: FILE: include/linux/evms.h:314:
+#define EVMS_VOLUME_READ_ONLY               	(1<<2)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: include/linux/evms.h:316:
+ * these bits define volume status $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#359: FILE: include/linux/evms.h:318:
+#define EVMS_MEDIA_CHANGED			(1<<20)
                           			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#359: FILE: include/linux/evms.h:318:
+#define EVMS_MEDIA_CHANGED			(1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#360: FILE: include/linux/evms.h:319:
+#define EVMS_DEVICE_UNPLUGGED			(1<<21)
                              			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#360: FILE: include/linux/evms.h:319:
+#define EVMS_DEVICE_UNPLUGGED			(1<<21)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: include/linux/evms.h:321:
+ * these bits used for removable status $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#364: FILE: include/linux/evms.h:323:
+#define EVMS_DEVICE_MEDIA_PRESENT		(1<<24)
                                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#364: FILE: include/linux/evms.h:323:
+#define EVMS_DEVICE_MEDIA_PRESENT		(1<<24)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#365: FILE: include/linux/evms.h:324:
+#define EVMS_DEVICE_PRESENT			(1<<25)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#365: FILE: include/linux/evms.h:324:
+#define EVMS_DEVICE_PRESENT			(1<<25)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#366: FILE: include/linux/evms.h:325:
+#define EVMS_DEVICE_LOCKABLE			(1<<26)
                             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#366: FILE: include/linux/evms.h:325:
+#define EVMS_DEVICE_LOCKABLE			(1<<26)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#367: FILE: include/linux/evms.h:326:
+#define EVMS_DEVICE_REMOVABLE			(1<<27)
                              			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#367: FILE: include/linux/evms.h:326:
+#define EVMS_DEVICE_REMOVABLE			(1<<27)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#372: FILE: include/linux/evms.h:331:
+#define EVMS_FEATURE_BOTTOM			(1<<0)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#372: FILE: include/linux/evms.h:331:
+#define EVMS_FEATURE_BOTTOM			(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#373: FILE: include/linux/evms.h:332:
+#define EVMS_TOP_SEGMENT			(1<<1)
                         			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#373: FILE: include/linux/evms.h:332:
+#define EVMS_TOP_SEGMENT			(1<<1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#378: FILE: include/linux/evms.h:337:
+#define EVMS_GET_NODE_NAME(node) ^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#378: FILE: include/linux/evms.h:337:
+#define EVMS_GET_NODE_NAME(node) 				\
+	((node->flags & EVMS_VOLUME_FLAG) ?			\
+		node->volume_info->volume_name :		\
+		node->name)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'node' may be better as '(node)' to avoid precedence issues
#378: FILE: include/linux/evms.h:337:
+#define EVMS_GET_NODE_NAME(node) 				\
+	((node->flags & EVMS_VOLUME_FLAG) ?			\
+		node->volume_info->volume_name :		\
+		node->name)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#387: FILE: include/linux/evms.h:346:
+#define DEV_HANDLE_TO_NODE(handle) ((struct evms_logical_node *)(unsigned long)((handle) ^ EVMS_HANDLE_KEY))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: include/linux/evms.h:351:
+ * @name: ^I^I^Ilogical volume name$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#393: FILE: include/linux/evms.h:352:
+ * @node: ^I^I^Ilogical volume storage object$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: include/linux/evms.h:354:
+ * @flags: ^I^I^Icharacteristics of logical volume$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#396: FILE: include/linux/evms.h:355:
+ * @quiesced: ^I^I^Iquiesce state info$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#397: FILE: include/linux/evms.h:356:
+ * @vfs_quiesced: ^I^Ivfs quiesce state info$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#399: FILE: include/linux/evms.h:358:
+ * @requests_in_progress: ^Icount of in-flight I/Os$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#403: FILE: include/linux/evms.h:362:
+ * @request_queue: ^I^Iunique request queue$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#404: FILE: include/linux/evms.h:363:
+ * @request_lock: ^I^Iunique request queue lock$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#422: FILE: include/linux/evms.h:381:
+	spinlock_t request_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: include/linux/evms.h:386:
+ * field evms_logical_volume.flags defines $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: include/linux/evms.h:389:
+ * queued flags bits $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#432: FILE: include/linux/evms.h:391:
+#define EVMS_REQUESTED_DELETE			(1<<5)
                              			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#432: FILE: include/linux/evms.h:391:
+#define EVMS_REQUESTED_DELETE			(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: include/linux/evms.h:392:
+#define EVMS_REQUESTED_QUIESCE			(1<<6)
                               			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#433: FILE: include/linux/evms.h:392:
+#define EVMS_REQUESTED_QUIESCE			(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#434: FILE: include/linux/evms.h:393:
+#define EVMS_REQUESTED_VFS_QUIESCE		(1<<7)
                                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#434: FILE: include/linux/evms.h:393:
+#define EVMS_REQUESTED_VFS_QUIESCE		(1<<7)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#436: FILE: include/linux/evms.h:395:
+ * this bit indicates corruption $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#438: FILE: include/linux/evms.h:397:
+#define EVMS_VOLUME_CORRUPT			(1<<8)
                            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#438: FILE: include/linux/evms.h:397:
+#define EVMS_VOLUME_CORRUPT			(1<<8)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: include/linux/evms.h:399:
+ * these bits define the source of the corruption $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: include/linux/evms.h:401:
+#define EVMS_VOLUME_SOFT_DELETED               ^I(1<<9)$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#442: FILE: include/linux/evms.h:401:
+#define EVMS_VOLUME_SOFT_DELETED               	(1<<9)
                                                	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#442: FILE: include/linux/evms.h:401:
+#define EVMS_VOLUME_SOFT_DELETED               	(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#443: FILE: include/linux/evms.h:402:
+#define EVMS_DEVICE_UNAVAILABLE			(1<<10)
                                			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#443: FILE: include/linux/evms.h:402:
+#define EVMS_DEVICE_UNAVAILABLE			(1<<10)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#450: FILE: include/linux/evms.h:409:
+ * @discover: ^I^Ivolume discovery entry point$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#451: FILE: include/linux/evms.h:410:
+ * @end_discover: ^Ifinal discovery entry point$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#452: FILE: include/linux/evms.h:411:
+ * @delete: ^I^Idelete volume entry point$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#454: FILE: include/linux/evms.h:413:
+ * @sync_io: ^I^Isynchronous io entry point$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: include/linux/evms.h:414:
+ * @ioctl: ^I^Igeneric ioctl entry point$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: include/linux/evms.h:415:
+ * @direct_ioctl: ^Inon-generic ioctl entry point$

WARNING:SPACING: Unnecessary space before function pointer arguments
#461: FILE: include/linux/evms.h:420:
+	int (*discover) (struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#461: FILE: include/linux/evms.h:420:
+	int (*discover) (struct list_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#462: FILE: include/linux/evms.h:421:
+	int (*end_discover) (struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#462: FILE: include/linux/evms.h:421:
+	int (*end_discover) (struct list_head *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#463: FILE: include/linux/evms.h:422:
+	int (*delete) (struct evms_logical_node *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#463: FILE: include/linux/evms.h:422:
+	int (*delete) (struct evms_logical_node *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#464: FILE: include/linux/evms.h:423:
+	void (*submit_io) (struct evms_logical_node *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#464: FILE: include/linux/evms.h:423:
+	void (*submit_io) (struct evms_logical_node *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#464: FILE: include/linux/evms.h:423:
+	void (*submit_io) (struct evms_logical_node *, struct bio *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#465: FILE: include/linux/evms.h:424:
+	int (*sync_io) (struct evms_logical_node *, int, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#465: FILE: include/linux/evms.h:424:
+	int (*sync_io) (struct evms_logical_node *, int, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#465: FILE: include/linux/evms.h:424:
+	int (*sync_io) (struct evms_logical_node *, int, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#465: FILE: include/linux/evms.h:424:
+	int (*sync_io) (struct evms_logical_node *, int, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#465: FILE: include/linux/evms.h:424:
+	int (*sync_io) (struct evms_logical_node *, int, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#465: FILE: include/linux/evms.h:424:
+	int (*sync_io) (struct evms_logical_node *, int, u64,

WARNING:SPACING: Unnecessary space before function pointer arguments
#467: FILE: include/linux/evms.h:426:
+	int (*ioctl) (struct evms_logical_node *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#467: FILE: include/linux/evms.h:426:
+	int (*ioctl) (struct evms_logical_node *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#467: FILE: include/linux/evms.h:426:
+	int (*ioctl) (struct evms_logical_node *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#467: FILE: include/linux/evms.h:426:
+	int (*ioctl) (struct evms_logical_node *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#467: FILE: include/linux/evms.h:426:
+	int (*ioctl) (struct evms_logical_node *, struct inode *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#467: FILE: include/linux/evms.h:426:
+	int (*ioctl) (struct evms_logical_node *, struct inode *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#469: FILE: include/linux/evms.h:428:
+	int (*direct_ioctl) (struct inode *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#469: FILE: include/linux/evms.h:428:
+	int (*direct_ioctl) (struct inode *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#469: FILE: include/linux/evms.h:428:
+	int (*direct_ioctl) (struct inode *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#469: FILE: include/linux/evms.h:428:
+	int (*direct_ioctl) (struct inode *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#469: FILE: include/linux/evms.h:428:
+	int (*direct_ioctl) (struct inode *, struct file *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#471: FILE: include/linux/evms.h:430:
+	int (*open) (struct evms_logical_node *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#471: FILE: include/linux/evms.h:430:
+	int (*open) (struct evms_logical_node *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#471: FILE: include/linux/evms.h:430:
+	int (*open) (struct evms_logical_node *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#471: FILE: include/linux/evms.h:430:
+	int (*open) (struct evms_logical_node *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#473: FILE: include/linux/evms.h:432:
+	int (*release) (struct evms_logical_node *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#473: FILE: include/linux/evms.h:432:
+	int (*release) (struct evms_logical_node *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#473: FILE: include/linux/evms.h:432:
+	int (*release) (struct evms_logical_node *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#473: FILE: include/linux/evms.h:432:
+	int (*release) (struct evms_logical_node *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: include/linux/evms.h:433:
+	int (*release) (struct evms_logical_node *,
+		      struct inode *, struct file *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#475: FILE: include/linux/evms.h:434:
+	int (*check_media_change) (struct evms_logical_node *, kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#475: FILE: include/linux/evms.h:434:
+	int (*check_media_change) (struct evms_logical_node *, kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#475: FILE: include/linux/evms.h:434:
+	int (*check_media_change) (struct evms_logical_node *, kdev_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#476: FILE: include/linux/evms.h:435:
+	int (*revalidate) (struct evms_logical_node *, kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#476: FILE: include/linux/evms.h:435:
+	int (*revalidate) (struct evms_logical_node *, kdev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#476: FILE: include/linux/evms.h:435:
+	int (*revalidate) (struct evms_logical_node *, kdev_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#477: FILE: include/linux/evms.h:436:
+	int (*quiesce) (struct evms_logical_node *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#477: FILE: include/linux/evms.h:436:
+	int (*quiesce) (struct evms_logical_node *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#477: FILE: include/linux/evms.h:436:
+	int (*quiesce) (struct evms_logical_node *, int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: include/linux/evms.h:437:
+^Iint (*get_geo) (struct evms_logical_node *, u64 *, $

WARNING:SPACING: Unnecessary space before function pointer arguments
#478: FILE: include/linux/evms.h:437:
+	int (*get_geo) (struct evms_logical_node *, u64 *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#478: FILE: include/linux/evms.h:437:
+	int (*get_geo) (struct evms_logical_node *, u64 *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#478: FILE: include/linux/evms.h:437:
+	int (*get_geo) (struct evms_logical_node *, u64 *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint *' should also have an identifier name
#478: FILE: include/linux/evms.h:437:
+	int (*get_geo) (struct evms_logical_node *, u64 *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uint *' should also have an identifier name
#478: FILE: include/linux/evms.h:437:
+	int (*get_geo) (struct evms_logical_node *, u64 *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#478: FILE: include/linux/evms.h:437:
+	int (*get_geo) (struct evms_logical_node *, u64 *, 

WARNING:SPACING: Unnecessary space before function pointer arguments
#480: FILE: include/linux/evms.h:439:
+	int (*device_list) (struct evms_logical_node *, struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#480: FILE: include/linux/evms.h:439:
+	int (*device_list) (struct evms_logical_node *, struct list_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#480: FILE: include/linux/evms.h:439:
+	int (*device_list) (struct evms_logical_node *, struct list_head *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#481: FILE: include/linux/evms.h:440:
+	int (*device_status) (struct evms_logical_node *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#481: FILE: include/linux/evms.h:440:
+	int (*device_status) (struct evms_logical_node *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#481: FILE: include/linux/evms.h:440:
+	int (*device_status) (struct evms_logical_node *, int *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: include/linux/evms.h:444:
+ * convenience macros to use plugin's fops entry points  $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#489: FILE: include/linux/evms.h:448:
+#define DELETE(node) ((node)->plugin->fops->delete(node))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#490: FILE: include/linux/evms.h:449:
+#define SUBMIT_IO(node, bio) ((node)->plugin->fops->submit_io(node, bio))

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#491: FILE: include/linux/evms.h:450:
+#define INIT_IO(node, rw_flag, start_sec, num_secs, buf_addr) ((node)->plugin->fops->sync_io(node, rw_flag, start_sec, num_secs, buf_addr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#491: FILE: include/linux/evms.h:450:
+#define INIT_IO(node, rw_flag, start_sec, num_secs, buf_addr) ((node)->plugin->fops->sync_io(node, rw_flag, start_sec, num_secs, buf_addr))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#492: FILE: include/linux/evms.h:451:
+#define IOCTL(node, inode, file, cmd, arg) ((node)->plugin->fops->ioctl(node, inode, file, cmd, arg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#492: FILE: include/linux/evms.h:451:
+#define IOCTL(node, inode, file, cmd, arg) ((node)->plugin->fops->ioctl(node, inode, file, cmd, arg))

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#493: FILE: include/linux/evms.h:452:
+#define DIRECT_IOCTL(plugin, inode, file, cmd, arg)   ((plugin)->fops->direct_ioctl(inode, file, cmd, arg))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#494: FILE: include/linux/evms.h:453:
+#define OPEN(node, inode, file) ((node)->plugin->fops->open(node, inode, file))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#495: FILE: include/linux/evms.h:454:
+#define CLOSE(node, inode, file) ((node)->plugin->fops->release(node, inode, file))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#496: FILE: include/linux/evms.h:455:
+#define CHECK_MEDIA_CHANGE(node, dev) ((node)->plugin->fops->check_media_change(node, dev))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#497: FILE: include/linux/evms.h:456:
+#define REVALIDATE(node, dev) ((node)->plugin->fops->revalidate(node, dev))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#498: FILE: include/linux/evms.h:457:
+#define QUIESCE(node, cmd) ((node)->plugin->fops->quiesce(node, cmd))

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#499: FILE: include/linux/evms.h:458:
+#define GET_GEO(node, cyls, heads, sects, start) ((node)->plugin->fops->get_geo(node, cyls, heads, sects, start))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#499: FILE: include/linux/evms.h:458:
+#define GET_GEO(node, cyls, heads, sects, start) ((node)->plugin->fops->get_geo(node, cyls, heads, sects, start))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#500: FILE: include/linux/evms.h:459:
+#define DEVICE_LIST(node, list_head) ((node)->plugin->fops->device_list(node, list_head))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'node' - possible side-effects?
#501: FILE: include/linux/evms.h:460:
+#define DEVICE_STATUS(node, status) ((node)->plugin->fops->device_status(node, status))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: include/linux/evms.h:463:
+ * Notes:  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: include/linux/evms.h:470:
+ * @run:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: include/linux/evms.h:471:
+ * @data:^I$

WARNING:SPACING: Unnecessary space before function pointer arguments
#522: FILE: include/linux/evms.h:481:
+	void (*run) (void *data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: include/linux/evms.h:510:
+ * EVMS (common services) exported functions prototypes $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_version *' should also have an identifier name
#561: FILE: include/linux/evms.h:520:
+int evms_cs_check_version(struct evms_version *, struct evms_version *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_version *' should also have an identifier name
#561: FILE: include/linux/evms.h:520:
+int evms_cs_check_version(struct evms_version *, struct evms_version *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node **' should also have an identifier name
#562: FILE: include/linux/evms.h:521:
+int evms_cs_allocate_logical_node(struct evms_logical_node **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#563: FILE: include/linux/evms.h:522:
+void evms_cs_deallocate_volume_info(struct evms_logical_node *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#564: FILE: include/linux/evms.h:523:
+void evms_cs_deallocate_logical_node(struct evms_logical_node *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_plugin_header *' should also have an identifier name
#565: FILE: include/linux/evms.h:524:
+int evms_cs_register_plugin(struct evms_plugin_header *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_plugin_header *' should also have an identifier name
#566: FILE: include/linux/evms.h:525:
+int evms_cs_unregister_plugin(struct evms_plugin_header *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct evms_logical_node *' should also have an identifier name
#567: FILE: include/linux/evms.h:526:
+int evms_cs_kernel_ioctl(struct evms_logical_node *, u32, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#567: FILE: include/linux/evms.h:526:
+int evms_cs_kernel_ioctl(struct evms_logical_node *, u32, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#567: FILE: include/linux/evms.h:526:
+int evms_cs_kernel_ioctl(struct evms_logical_node *, u32, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#570: FILE: include/linux/evms.h:529:
+u32 evms_cs_calculate_crc(u32, void *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#570: FILE: include/linux/evms.h:529:
+u32 evms_cs_calculate_crc(u32, void *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#570: FILE: include/linux/evms.h:529:
+u32 evms_cs_calculate_crc(u32, void *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#571: FILE: include/linux/evms.h:530:
+int evms_cs_register_for_end_io_notification(void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#571: FILE: include/linux/evms.h:530:
+int evms_cs_register_for_end_io_notification(void *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#574: FILE: include/linux/evms.h:533:
+void evms_cs_signal_event(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kdev_t' should also have an identifier name
#581: FILE: include/linux/evms.h:540:
+int evms_cs_volume_request_in_progress(kdev_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#581: FILE: include/linux/evms.h:540:
+int evms_cs_volume_request_in_progress(kdev_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#581: FILE: include/linux/evms.h:540:
+int evms_cs_volume_request_in_progress(kdev_t, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#583: FILE: include/linux/evms.h:542:
+int evms_cs_split_bio(struct bio *, u64, struct bio **, struct bio **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#583: FILE: include/linux/evms.h:542:
+int evms_cs_split_bio(struct bio *, u64, struct bio **, struct bio **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio **' should also have an identifier name
#583: FILE: include/linux/evms.h:542:
+int evms_cs_split_bio(struct bio *, u64, struct bio **, struct bio **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio **' should also have an identifier name
#583: FILE: include/linux/evms.h:542:
+int evms_cs_split_bio(struct bio *, u64, struct bio **, struct bio **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mempool_t *' should also have an identifier name
#583: FILE: include/linux/evms.h:542:
+int evms_cs_split_bio(struct bio *, u64, struct bio **, struct bio **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mempool_t *' should also have an identifier name
#583: FILE: include/linux/evms.h:542:
+int evms_cs_split_bio(struct bio *, u64, struct bio **, struct bio **,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424508.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 160 warnings, 75 checks, 551 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424508.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
