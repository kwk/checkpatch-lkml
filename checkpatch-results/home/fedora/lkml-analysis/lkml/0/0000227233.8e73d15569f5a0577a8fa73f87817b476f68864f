WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
Here is a patch make swsusp1 follow above safe LRU saving, :), Most code merge from 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#79: FILE: kernel/power/disk.c:33:
+extern int swsusp_prepare_suspend(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#80: FILE: kernel/power/disk.c:34:
+extern int swsusp_post_resume(void);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: kernel/power/disk.c:120:
+		if ((error = swsusp_prepare_suspend())) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#179: FILE: kernel/power/disk.c:120:
+		if ((error = swsusp_prepare_suspend())) {
+			goto Finish;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Finish>
#180: FILE: kernel/power/disk.c:121:
+			goto Finish;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#190: FILE: kernel/power/disk.c:148:
+	if ((error = prepare(0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#199: FILE: kernel/power/disk.c:205:
+	if ((error = prepare(1)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: kernel/power/swsusp.c:172:
+int swsusp_swap_check(struct partial_device_tree *suspend_device_tree) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#274: FILE: kernel/power/swsusp.c:196:
+					device_switch_trees((swap_info[i].bdev)->bd_disk->driverfs_dev, suspend_device_tree);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: kernel/power/swsusp.c:224:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#283: FILE: kernel/power/swsusp.c:225:
+#define ONE_PAGE_PBE_NUM	(PAGE_SIZE/sizeof(struct pbe))
                         	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#284: FILE: kernel/power/swsusp.c:226:
+#define PBE_IS_PAGE_END(x)  \
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#285: FILE: kernel/power/swsusp.c:227:
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#285: FILE: kernel/power/swsusp.c:227:
+	( PAGE_SIZE - sizeof(struct pbe) == ((x) - ((~(PAGE_SIZE - 1)) & (x))) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#287: FILE: kernel/power/swsusp.c:229:
+#define pgdir_for_each_safe(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+		pos != NULL; \
+		pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#287: FILE: kernel/power/swsusp.c:229:
+#define pgdir_for_each_safe(pos, n, head) \
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \
+		pos != NULL; \
+		pos = n, n = pos ? (suspend_pagedir_t *)pos->dummy.val : NULL)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#288: FILE: kernel/power/swsusp.c:230:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#288: FILE: kernel/power/swsusp.c:230:
+	for(pos = head, n = pos ? (suspend_pagedir_t*)pos->dummy.val : NULL; \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#289: FILE: kernel/power/swsusp.c:231:
+		pos != NULL; \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#292: FILE: kernel/power/swsusp.c:234:
+#define pbe_for_each_safe(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#292: FILE: kernel/power/swsusp.c:234:
+#define pbe_for_each_safe(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'index' - possible side-effects?
#292: FILE: kernel/power/swsusp.c:234:
+#define pbe_for_each_safe(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max' may be better as '(max)' to avoid precedence issues
#292: FILE: kernel/power/swsusp.c:234:
+#define pbe_for_each_safe(pos, n, index, max, head) \
+	for(pos = head, index = 0, \
+			n = pos ? (struct pbe *)pos->dummy.val : NULL; \
+		(pos != NULL) && (index < max); \
+		pos = (PBE_IS_PAGE_END((unsigned long)pos)) ? n : \
+			((struct pbe *)((unsigned long)pos + sizeof(struct pbe))), \
+			index ++, \
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: kernel/power/swsusp.c:235:
+	for(pos = head, index = 0, \

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pos"
#295: FILE: kernel/power/swsusp.c:237:
+		(pos != NULL) && (index < max); \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: kernel/power/swsusp.c:241:
+			n = pos ? (struct pbe*)pos->dummy.val : NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: kernel/power/swsusp.c:247:
+	suspend_pagedir_t *next, *cur;
+	pgdir_for_each_safe(cur, next, head) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: kernel/power/swsusp.c:252:
+/* for_each_pbe_copy_back $

WARNING:TYPO_SPELLING: 'usefuly' may be misspelled - perhaps 'usefully'?
#312: FILE: kernel/power/swsusp.c:254:
+ * That usefuly for help us writing the code in assemble code.
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#317: FILE: kernel/power/swsusp.c:259:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: kernel/power/swsusp.c:260:
+#define GET_ADDRESS(x) __pa(x) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#322: FILE: kernel/power/swsusp.c:264:
+asmlinkage void for_each_pbe_copy_back(void)
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#327: FILE: kernel/power/swsusp.c:269:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: kernel/power/swsusp.c:271:
+		unsigned long nums, i;
+		pgdir = (struct pbe *)GET_ADDRESS(pgdir);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#330: FILE: kernel/power/swsusp.c:272:
+		next = (struct pbe*)pgdir->dummy.val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: kernel/power/swsusp.c:275:
+			register unsigned long *orig, *copy;
+			orig = (unsigned long *)pgdir->orig_address;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#334: FILE: kernel/power/swsusp.c:276:
+			if (orig == 0) goto end;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#337: FILE: kernel/power/swsusp.c:279:
+#if 0

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#340: FILE: kernel/power/swsusp.c:282:
+			for (i = 0; i < PAGE_SIZE / sizeof(unsigned long); i+=4) {
 			                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: kernel/power/swsusp.c:284:
+				*(orig + i+1) = *(copy + i+1);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#342: FILE: kernel/power/swsusp.c:284:
+				*(orig + i+1) = *(copy + i+1);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#343: FILE: kernel/power/swsusp.c:285:
+				*(orig + i+2) = *(copy + i+2);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#343: FILE: kernel/power/swsusp.c:285:
+				*(orig + i+2) = *(copy + i+2);
 				                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#344: FILE: kernel/power/swsusp.c:286:
+				*(orig + i+3) = *(copy + i+3);
 				          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#344: FILE: kernel/power/swsusp.c:286:
+				*(orig + i+3) = *(copy + i+3);
 				                          ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#347: FILE: kernel/power/swsusp.c:289:
+			pgdir ++;
 			      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: kernel/power/swsusp.c:299:
+ * find_pbe_by_index - $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: kernel/power/swsusp.c:300:
+ * @pgdir: the pgdir head $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: kernel/power/swsusp.c:301:
+ * @index: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: kernel/power/swsusp.c:303:
+ * @return: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: kernel/power/swsusp.c:310:
+^Ipr_debug("find_pbe_by_index: %p, 0x%03x", pgdir, index); $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'find_pbe_by_index', this function's name, in a string
#368: FILE: kernel/power/swsusp.c:310:
+	pr_debug("find_pbe_by_index: %p, 0x%03x", pgdir, index); 

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: kernel/power/swsusp.c:313:
+^I^I^Ipbe = (struct pbe *)((unsigned long)pbe + $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: kernel/power/swsusp.c:316:
+			pr_debug(" %p, o{%p} c{%p}\n",
+					pbe, (void*)pbe->orig_address, (void*)pbe->address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#374: FILE: kernel/power/swsusp.c:316:
+					pbe, (void*)pbe->orig_address, (void*)pbe->address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#374: FILE: kernel/power/swsusp.c:316:
+					pbe, (void*)pbe->orig_address, (void*)pbe->address);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#377: FILE: kernel/power/swsusp.c:319:
+		p ++;
 		  ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#418: FILE: kernel/power/swsusp.c:380:
+static void inline mod_printk_progress(int i)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#420: FILE: kernel/power/swsusp.c:382:
+	if (mod_progress == 0) mod_progress = 1;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#421: FILE: kernel/power/swsusp.c:383:
+	if (!(i%100))
 	       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#422: FILE: kernel/power/swsusp.c:384:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited after that open parenthesis '('
#422: FILE: kernel/power/swsusp.c:384:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#422: FILE: kernel/power/swsusp.c:384:
+		printk( "\b\b\b\b%3d%%", i / mod_progress );

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'write_one_pbe', this function's name, in a string
#431: FILE: kernel/power/swsusp.c:393:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %d ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: kernel/power/swsusp.c:394:
+	pr_debug("write_one_pbe: %p, o{%p} c{%p} %d ",
+			p, (void *)p->orig_address, (void *)p->address, cur);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#434: FILE: kernel/power/swsusp.c:396:
+	if (error) return error;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#441: FILE: kernel/power/swsusp.c:403:
+static int bio_read_page(pgoff_t page_off, void * page);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pbe', this function's name, in a string
#449: FILE: kernel/power/swsusp.c:411:
+	pr_debug("read_one_pbe: %p, o{%p} c{%p} %lu\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: kernel/power/swsusp.c:412:
+^I^I^Ip, (void *)p->orig_address, data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: kernel/power/swsusp.c:412:
+	pr_debug("read_one_pbe: %p, o{%p} c{%p} %lu\n",
+			p, (void *)p->orig_address, data, 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#454: FILE: kernel/power/swsusp.c:416:
+	if (error) return error;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: kernel/power/swsusp.c:430:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#484: FILE: kernel/power/swsusp.c:433:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages);

ERROR:SPACING: space prohibited after that open parenthesis '('
#484: FILE: kernel/power/swsusp.c:433:
+	printk( "Writing data to swap (%d pages)...     ", nr_copy_pages);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#486: FILE: kernel/power/swsusp.c:435:
+		BUG_ON(pos->orig_address == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#487: FILE: kernel/power/swsusp.c:436:
+		error = write_one_pbe(pos, (void*)pos->address, index);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#488: FILE: kernel/power/swsusp.c:437:
+		if (error) break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: kernel/power/swsusp.c:512:
+^I^Iif (error) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#517: FILE: kernel/power/swsusp.c:512:
+		if (error) { 
+			break;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#521: FILE: kernel/power/swsusp.c:516:
+^I} $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#542: FILE: kernel/power/swsusp.c:642:
 }
+struct partial_device_tree *swsusp_dev_tree = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#542: FILE: kernel/power/swsusp.c:642:
+struct partial_device_tree *swsusp_dev_tree = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: kernel/power/swsusp.c:656:
+	struct class * class = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: kernel/power/swsusp.c:663:
+^I/* Now check for graphics class devices, so we can $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#564: FILE: kernel/power/swsusp.c:664:
+	 * keep the display on while suspending */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#567: FILE: kernel/power/swsusp.c:667:
+		struct class_device * class_dev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#568: FILE: kernel/power/swsusp.c:668:
+		struct class_device * class_dev;
+		list_for_each_entry(class_dev, &class->children, node)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: kernel/power/swsusp.c:682:
+^Ispin_lock_irq(&zone->lru_lock); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: kernel/power/swsusp.c:684:
+		struct list_head * entry = zone->inactive_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#585: FILE: kernel/power/swsusp.c:685:
+		struct list_head * entry = zone->inactive_list.prev;
+		while (entry != &zone->inactive_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#587: FILE: kernel/power/swsusp.c:687:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#588: FILE: kernel/power/swsusp.c:688:
+				struct page * page = list_entry(entry, struct page, lru);
+				inactive += fun(page, p);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: kernel/power/swsusp.c:689:
+^I^I^I} else { $

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#590: FILE: kernel/power/swsusp.c:690:
+				inactive ++;
 				         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#596: FILE: kernel/power/swsusp.c:696:
+		struct list_head * entry = zone->active_list.prev;

WARNING:LINE_SPACING: Missing a blank line after declarations
#597: FILE: kernel/power/swsusp.c:697:
+		struct list_head * entry = zone->active_list.prev;
+		while (entry != &zone->active_list) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#599: FILE: kernel/power/swsusp.c:699:
+				struct page * page = list_entry(entry, struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#600: FILE: kernel/power/swsusp.c:700:
+				struct page * page = list_entry(entry, struct page, lru);
+				active += fun(page, p);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#602: FILE: kernel/power/swsusp.c:702:
+				active ++;
 				       ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#613: FILE: kernel/power/swsusp.c:713:
+int swsusp_pagecache = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#622: FILE: kernel/power/swsusp.c:722:
+static suspend_pagedir_t *pagedir_cache = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#623: FILE: kernel/power/swsusp.c:723:
+static int nr_copy_page_caches = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#629: FILE: kernel/power/swsusp.c:729:
+	BUG_ON(PageReserved(page) && PageNosave(page));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#631: FILE: kernel/power/swsusp.c:731:
+		printk("not valid page\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#635: FILE: kernel/power/swsusp.c:735:
+		printk("nosave\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#639: FILE: kernel/power/swsusp.c:739:
+		printk("[nosave]\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#643: FILE: kernel/power/swsusp.c:743:
+		printk("slab\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#648: FILE: kernel/power/swsusp.c:748:
+		struct pbe *p = find_pbe_by_index(pagedir_cache, nr_copy_page_caches);
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#648: FILE: kernel/power/swsusp.c:748:
+		BUG_ON(p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#648: FILE: kernel/power/swsusp.c:748:
+		BUG_ON(p == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#650: FILE: kernel/power/swsusp.c:750:
+		BUG_ON(p->address == 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#652: FILE: kernel/power/swsusp.c:752:
+		/*pr_debug("setup_page_caches: cur %p, o{%p}, d{%p}, nr %u\n",
+				(void*)p, (void*)p->orig_address,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#653: FILE: kernel/power/swsusp.c:753:
+				(void*)p->address, nr_copy_page_caches);*/

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#654: FILE: kernel/power/swsusp.c:754:
+		nr_copy_page_caches ++;
 		                    ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#658: FILE: kernel/power/swsusp.c:758:
+	return (1);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#668: FILE: kernel/power/swsusp.c:768:
+#define pointer2num(x)  ((x - 0xc0000000) >> 12)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#669: FILE: kernel/power/swsusp.c:769:
+#define num2pointer(x)  ((x << 12) + 0xc0000000)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#671: FILE: kernel/power/swsusp.c:771:
+static inline void collide_set_bit(unsigned char *bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: kernel/power/swsusp.c:772:
+static inline void collide_set_bit(unsigned char *bitmap, 
+		unsigned long bitnum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#674: FILE: kernel/power/swsusp.c:774:
+^Ibitnum = pointer2num(bitnum); $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#675: FILE: kernel/power/swsusp.c:775:
+	bitmap[bitnum / 8] |= (1 << (bitnum%8));
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#678: FILE: kernel/power/swsusp.c:778:
+static inline int collide_is_bit_set(unsigned char *bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: kernel/power/swsusp.c:779:
+static inline int collide_is_bit_set(unsigned char *bitmap, 
+		unsigned long bitnum)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: kernel/power/swsusp.c:780:
+{               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: kernel/power/swsusp.c:781:
+^Ibitnum = pointer2num(bitnum); $

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#682: FILE: kernel/power/swsusp.c:782:
+	return !!(bitmap[bitnum / 8] & (1 << (bitnum%8)));
 	                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: kernel/power/swsusp.c:790:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: kernel/power/swsusp.c:791:
+ * four pages are enough for bitmap $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: kernel/power/swsusp.c:796:
+^Iunsigned char *bitmap = $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#700: FILE: kernel/power/swsusp.c:800:
+	if (bitmap == NULL) {
+		return NULL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap"
#700: FILE: kernel/power/swsusp.c:800:
+	if (bitmap == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#706: FILE: kernel/power/swsusp.c:806:
+	BUG_ON(collide_is_bit_set(bitmap, (unsigned long)bitmap) == 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#708: FILE: kernel/power/swsusp.c:808:
+	BUG_ON(collide_is_bit_set(bitmap, (unsigned long)bitmap) == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: kernel/power/swsusp.c:809:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pgdir"
#710: FILE: kernel/power/swsusp.c:810:
+	while (pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#712: FILE: kernel/power/swsusp.c:812:
+		unsigned long nums;
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#712: FILE: kernel/power/swsusp.c:812:
+		next = (struct pbe*)pgdir->dummy.val;

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#716: FILE: kernel/power/swsusp.c:816:
+			pgdir ++;
 			      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#723: FILE: kernel/power/swsusp.c:823:
+}
+static void **eaten_memory = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#723: FILE: kernel/power/swsusp.c:823:
+static void **eaten_memory = NULL;

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#732: FILE: kernel/power/swsusp.c:832:
+			eaten_memory = (void**)addr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#736: FILE: kernel/power/swsusp.c:836:
+		addr = (void*)__get_free_pages(GFP_ATOMIC | __GFP_COLD, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#737: FILE: kernel/power/swsusp.c:837:
+^I^Iif (!addr) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#743: FILE: kernel/power/swsusp.c:843:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#754: FILE: kernel/power/swsusp.c:854:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#754: FILE: kernel/power/swsusp.c:854:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#755: FILE: kernel/power/swsusp.c:855:
+static suspend_pagedir_t * alloc_one_pagedir(suspend_pagedir_t *prev, 
+		unsigned char *collide)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: kernel/power/swsusp.c:862:
+^I/*pr_debug("pgdir: %p, %p, %d\n", $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#763: FILE: kernel/power/swsusp.c:863:
+	/*pr_debug("pgdir: %p, %p, %d\n", 
+			pgdir, prev, sizeof(suspend_pagedir_t)); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#763: FILE: kernel/power/swsusp.c:863:
+			pgdir, prev, sizeof(suspend_pagedir_t)); */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#769: FILE: kernel/power/swsusp.c:869:
+			prev[i].dummy.val= (unsigned long)pgdir;
 			                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#779: FILE: kernel/power/swsusp.c:879:
+	int diff = 0, ret = 0;
+	do {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#789: FILE: kernel/power/swsusp.c:889:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: kernel/power/swsusp.c:890:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: kernel/power/swsusp.c:891:
+ * alloc_pagedir $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: kernel/power/swsusp.c:899:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: kernel/power/swsusp.c:900:
+static int alloc_pagedir(struct pbe **pbe, int pbe_nums, 
+		unsigned char *collide, int page_nums)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: kernel/power/swsusp.c:908:
+^Ielse $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#811: FILE: kernel/power/swsusp.c:911:
+	pr_debug("alloc_pagedir: %d, %d\n", pbe_nums, after_alloc);

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#832: FILE: kernel/power/swsusp.c:932:
+static char *page_cache_buf = NULL;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#842: FILE: kernel/power/swsusp.c:942:
+}
+static int free_pagecache_buf(void)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#856: FILE: kernel/power/swsusp.c:956:
+	if (swsusp_pagecache == 0) {
+		goto end;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: kernel/power/swsusp.c:959:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: kernel/power/swsusp.c:967:
+^Iprintk( "Reading PageCaches from swap (%d pages)...     ", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#867: FILE: kernel/power/swsusp.c:967:
+	printk( "Reading PageCaches from swap (%d pages)...     ", 

ERROR:SPACING: space prohibited after that open parenthesis '('
#867: FILE: kernel/power/swsusp.c:967:
+	printk( "Reading PageCaches from swap (%d pages)...     ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: kernel/power/swsusp.c:968:
+	printk( "Reading PageCaches from swap (%d pages)...     ", 
+			nr_copy_page_caches);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#869: FILE: kernel/power/swsusp.c:969:
+^Ipbe_for_each_safe(pos, next, index, nr_copy_page_caches, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: kernel/power/swsusp.c:970:
+	pbe_for_each_safe(pos, next, index, nr_copy_page_caches, 
+			pagedir_cache) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#874: FILE: kernel/power/swsusp.c:974:
+		if (error) break;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#875: FILE: kernel/power/swsusp.c:975:
+		memcpy((void*)pos->address, page_cache_buf, PAGE_SIZE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#880: FILE: kernel/power/swsusp.c:980:
+	printk("\b\b\b\bdone\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: kernel/power/swsusp.c:998:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#901: FILE: kernel/power/swsusp.c:1001:
+^Iprintk( "Writing PageCaches to swap (%d pages)...     ", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#901: FILE: kernel/power/swsusp.c:1001:
+	printk( "Writing PageCaches to swap (%d pages)...     ", 

ERROR:SPACING: space prohibited after that open parenthesis '('
#901: FILE: kernel/power/swsusp.c:1001:
+	printk( "Writing PageCaches to swap (%d pages)...     ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: kernel/power/swsusp.c:1002:
+	printk( "Writing PageCaches to swap (%d pages)...     ", 
+			nr_copy_page_caches);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#904: FILE: kernel/power/swsusp.c:1004:
+	pbe_for_each_safe(pos, next, index, nr_copy_page_caches,
+			pagedir_cache) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#905: FILE: kernel/power/swsusp.c:1005:
+		memcpy(page_cache_buf, (void*)pos->address, PAGE_SIZE);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#907: FILE: kernel/power/swsusp.c:1007:
+		if (error) break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#909: FILE: kernel/power/swsusp.c:1009:
+	printk("\b\b\b\bdone\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#920: FILE: kernel/power/swsusp.c:1020:
+		if (!is_highmem(zone)) {
+			count_page_caches(zone, 1);
+		}

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#936: FILE: kernel/power/swsusp.c:1036:
+	if (swsusp_pagecache == 0 || resume == 1) return 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#939: FILE: kernel/power/swsusp.c:1039:
+		ClearPagePcs(mem_map+i);
 		                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#944: FILE: kernel/power/swsusp.c:1044:
+		if (!is_highmem(zone)) {
+			nr_copy_page_caches += count_page_caches(zone, 0);
+		}

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#953: FILE: kernel/power/swsusp.c:1053:
+static int inline swsusp_need_pages(int resume)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#962: FILE: kernel/power/swsusp.c:1062:
+	if (!resume) {
+		count_data_pages();
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: kernel/power/swsusp.c:1066:
+^Iprintk("swsusp: need %d pages, freed %d pages, shrinking         ", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#966: FILE: kernel/power/swsusp.c:1066:
+	printk("swsusp: need %d pages, freed %d pages, shrinking         ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: kernel/power/swsusp.c:1067:
+	printk("swsusp: need %d pages, freed %d pages, shrinking         ", 
+			swsusp_need_pages(resume), nr_free_pages());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#969: FILE: kernel/power/swsusp.c:1069:
+		printk(" done\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: kernel/power/swsusp.c:1075:
+^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#976: FILE: kernel/power/swsusp.c:1076:
+		if (diff < 0) break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#977: FILE: kernel/power/swsusp.c:1077:
+		if (shrink_all_memory(diff * 2) == 0) {
+			retry --;
+		}

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#978: FILE: kernel/power/swsusp.c:1078:
+			retry --;
 			      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#981: FILE: kernel/power/swsusp.c:1081:
+		schedule_timeout(HZ/5);
 		                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#986: FILE: kernel/power/swsusp.c:1086:
+		printk("\b\b\b\b\b%5d", diff);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#989: FILE: kernel/power/swsusp.c:1089:
+^Iprintk("\nswsusp: need %d pages, freed %d pages ... ", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#989: FILE: kernel/power/swsusp.c:1089:
+	printk("\nswsusp: need %d pages, freed %d pages ... ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#990: FILE: kernel/power/swsusp.c:1090:
+	printk("\nswsusp: need %d pages, freed %d pages ... ", 
+			swsusp_need_pages(resume), nr_free_pages());

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#993: FILE: kernel/power/swsusp.c:1093:
+		printk("  failed\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: kernel/power/swsusp.c:1095:
+^I} $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#996: FILE: kernel/power/swsusp.c:1096:
+	printk("   done\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1005: FILE: kernel/power/swsusp.c:1105:
+	if ((error = setup_suspend_device_tree())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1005: FILE: kernel/power/swsusp.c:1105:
+	if ((error = setup_suspend_device_tree())) {
+		return error;
+	}

WARNING:TYPO_SPELLING: 'exept' may be misspelled - perhaps 'except'?
#1012: FILE: kernel/power/swsusp.c:1112:
+	/* exept swap device and parent from the tree */
 	   ^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1013: FILE: kernel/power/swsusp.c:1113:
+	if ((error = swsusp_swap_check(swsusp_dev_tree))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1019: FILE: kernel/power/swsusp.c:1119:
+	BUG_ON(irqs_disabled());

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1026: FILE: kernel/power/swsusp.c:1126:
+		if ((error = alloc_pagecache_buf())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1026: FILE: kernel/power/swsusp.c:1126:
+		if ((error = alloc_pagecache_buf())) {
+			swsusp_pagecache = 0;
+		}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1039: FILE: kernel/power/swsusp.c:1139:
+		printk("swsusp_alloc failed, %d\n", error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1046: FILE: kernel/power/swsusp.c:1146:
+	printk("swsusp: need to copy %u pages, %u page_caches\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1047: FILE: kernel/power/swsusp.c:1147:
+	printk("swsusp: need to copy %u pages, %u page_caches\n",
+			nr_copy_pages, nr_copy_page_caches);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1051: FILE: kernel/power/swsusp.c:1151:
+		pr_debug("after setup_pagedir_pbe \n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1071: FILE: kernel/power/swsusp.c:1198:
+		BUG_ON(zone->nr_inactive == 0 && zone->nr_active == 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: kernel/power/swsusp.c:1233:
+^I^I^I^Istruct pbe * pbe = find_pbe_by_index(pagedir_nosave, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1094: FILE: kernel/power/swsusp.c:1233:
+				struct pbe * pbe = find_pbe_by_index(pagedir_nosave, 

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1096: FILE: kernel/power/swsusp.c:1235:
+				BUG_ON(pbe == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pbe"
#1096: FILE: kernel/power/swsusp.c:1235:
+				BUG_ON(pbe == NULL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1097: FILE: kernel/power/swsusp.c:1236:
+^I^I^I^Iif (pbe->address == 0) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'copy_data_pages', this function's name, in a string
#1098: FILE: kernel/power/swsusp.c:1237:
+					panic("copy_data_pages: %d copied\n", pages_copied);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1101: FILE: kernel/power/swsusp.c:1240:
+				BUG_ON(pbe->orig_address == 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1282: FILE: kernel/power/swsusp.c:1324:
+		printk("suspend: Allocating pagedir failed.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1289: FILE: kernel/power/swsusp.c:1330:
+		printk("suspend: Allocating image pages failed.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1303: FILE: kernel/power/swsusp.c:1341:
+	BUG_ON(!irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1354: FILE: kernel/power/swsusp.c:1397:
+	BUG_ON(irqs_disabled());

WARNING:MEMORY_BARRIER: memory barrier without comment
#1358: FILE: kernel/power/swsusp.c:1401:
+	mb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1374: FILE: kernel/power/swsusp.c:1417:
+	BUG_ON(!irqs_disabled());

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: kernel/power/swsusp.c:1419:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1402: FILE: kernel/power/swsusp.c:1443:
+	BUG_ON(irqs_disabled());

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1411: FILE: kernel/power/swsusp.c:1452:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1523: FILE: kernel/power/swsusp.c:1534:
+static int bio_read_page(pgoff_t page_off, void * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1529: FILE: kernel/power/swsusp.c:1539:
+static int bio_write_page(pgoff_t page_off, void * page)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1545: FILE: kernel/power/swsusp.c:1610:
 
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1549: FILE: kernel/power/swsusp.c:1614:
+	static int eaten_i = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1551: FILE: kernel/power/swsusp.c:1616:
+	printk("\b%c", eaten_progess[eaten_i]);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1552: FILE: kernel/power/swsusp.c:1617:
+	eaten_i ++;
 	        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1553: FILE: kernel/power/swsusp.c:1618:
+	if (eaten_i > 3) eaten_i = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1560: FILE: kernel/power/swsusp.c:1625:
+^Ipr_debug("check_one_pbe: %p %lu o{%p} ", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_one_pbe', this function's name, in a string
#1560: FILE: kernel/power/swsusp.c:1625:
+	pr_debug("check_one_pbe: %p %lu o{%p} ", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1561: FILE: kernel/power/swsusp.c:1626:
+	pr_debug("check_one_pbe: %p %lu o{%p} ", 
+			p, p->swap_address.val, (void*)p->orig_address);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1561: FILE: kernel/power/swsusp.c:1626:
+			p, p->swap_address.val, (void*)p->orig_address);

ERROR:SPACING: space required before the open parenthesis '('
#1563: FILE: kernel/power/swsusp.c:1628:
+	if(!addr)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1565: FILE: kernel/power/swsusp.c:1630:
+	pr_debug("c{%p} done\n", (void*)addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1571: FILE: kernel/power/swsusp.c:1636:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1572: FILE: kernel/power/swsusp.c:1637:
+static void __init swsusp_copy_pagedir(suspend_pagedir_t *d_pgdir, 
+		suspend_pagedir_t *s_pgdir)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s_pgdir"
#1576: FILE: kernel/power/swsusp.c:1641:
+	while (s_pgdir != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1579: FILE: kernel/power/swsusp.c:1644:
+		suspend_pagedir_t *d_next = (suspend_pagedir_t *)d_pgdir->dummy.val;
+		for (i = 0; i < ONE_PAGE_PBE_NUM; i++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1583: FILE: kernel/power/swsusp.c:1648:
+			s_pgdir ++; d_pgdir ++;
 			        ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1583: FILE: kernel/power/swsusp.c:1648:
+			s_pgdir ++; d_pgdir ++;
 			                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1589: FILE: kernel/power/swsusp.c:1654:
+}
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: kernel/power/swsusp.c:1665:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1601: FILE: kernel/power/swsusp.c:1666:
+	BUG_ON(bitmap == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bitmap"
#1601: FILE: kernel/power/swsusp.c:1666:
+	BUG_ON(bitmap == NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1603: FILE: kernel/power/swsusp.c:1668:
+	printk("Relocating pagedir ... ");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1604: FILE: kernel/power/swsusp.c:1669:
+^Ierror = alloc_pagedir(&addr, nr_copy_pages, bitmap, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1605: FILE: kernel/power/swsusp.c:1670:
+	error = alloc_pagedir(&addr, nr_copy_pages, bitmap, 
+			swsusp_info.pagedir_pages);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1606: FILE: kernel/power/swsusp.c:1671:
+	if (error < 0) {
+		return error;
+	}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1615: FILE: kernel/power/swsusp.c:1680:
+		BUG_ON(error);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1628: FILE: kernel/power/swsusp.c:1693:
+	printk("     done\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1629: FILE: kernel/power/swsusp.c:1694:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1655: FILE: kernel/power/swsusp.c:1709:
+	if ((error = swsusp_check_memory(1))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1655: FILE: kernel/power/swsusp.c:1709:
+	if ((error = swsusp_check_memory(1))) {
 		return error;
+	}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1659: FILE: kernel/power/swsusp.c:1713:
+	if ((error = check_pagedir())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1659: FILE: kernel/power/swsusp.c:1713:
+	if ((error = check_pagedir())) {
+		return -ENOMEM;
+	}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1672: FILE: kernel/power/swsusp.c:1721:
+		error = read_one_pbe(pos, (void*)pos->address, index);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1673: FILE: kernel/power/swsusp.c:1722:
+		if (error) break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1677: FILE: kernel/power/swsusp.c:1724:
+	printk(" %d done.\n", index);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1698: FILE: kernel/power/swsusp.c:1738:
+^Ipr_debug("read_one_pagedir: %p, %d, %lu, %p\n", $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_one_pagedir', this function's name, in a string
#1698: FILE: kernel/power/swsusp.c:1738:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1699: FILE: kernel/power/swsusp.c:1739:
+	pr_debug("read_one_pagedir: %p, %d, %lu, %p\n", 
+			pgdir, i, offset, (void*)next);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1699: FILE: kernel/power/swsusp.c:1739:
+			pgdir, i, offset, (void*)next);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1700: FILE: kernel/power/swsusp.c:1740:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1700: FILE: kernel/power/swsusp.c:1740:
+	if ((error = bio_read_page(offset, (void *)pgdir))) {
+		return error;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1719: FILE: kernel/power/swsusp.c:1749:
+ * reading pagedir from swap device $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1726: FILE: kernel/power/swsusp.c:1756:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1731: FILE: kernel/power/swsusp.c:1761:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1731: FILE: kernel/power/swsusp.c:1761:
+	printk("pmdisk: Reading pagedir (%d Pages)\n",n);
 	                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1734: FILE: kernel/power/swsusp.c:1764:
+		if (error) break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1737: FILE: kernel/power/swsusp.c:1767:
+	BUG_ON(i != n);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1738: FILE: kernel/power/swsusp.c:1768:
+^Iif (error)^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1740: FILE: kernel/power/swsusp.c:1770:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227233.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 137 errors, 90 warnings, 56 checks, 1662 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227233.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
