WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#65: FILE: drivers/pnp/pnp_bios.c:212:
+		printk(KERN_ERR "PnPBIOS: Warning! Your PnP BIOS caused a fatal error. Attempting to continue.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#66: FILE: drivers/pnp/pnp_bios.c:213:
+		printk(KERN_ERR "PnPBIOS: You may need to reboot with the \"nobiospnp\" option to operate stably.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#67: FILE: drivers/pnp/pnp_bios.c:214:
+		printk(KERN_ERR "PnPBIOS: Check with your vendor for an updated BIOS\n");

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#70: FILE: drivers/pnp/pnp_bios.c:217:
+//	if ( status ) printk(KERN_WARNING "PnPBIOS: BIOS returned error 0x%x from function 0x%x.\n", status, func);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#77: FILE: drivers/pnp/pnp_bios.c:224:
+	void *p = kmalloc( size, f );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#77: FILE: drivers/pnp/pnp_bios.c:224:
+	void *p = kmalloc( size, f );

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: drivers/pnp/pnp_bios.c:225:
+	void *p = kmalloc( size, f );
+	if ( p == NULL )

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#78: FILE: drivers/pnp/pnp_bios.c:225:
+	if ( p == NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#78: FILE: drivers/pnp/pnp_bios.c:225:
+	if ( p == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#78: FILE: drivers/pnp/pnp_bios.c:225:
+	if ( p == NULL )

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#79: FILE: drivers/pnp/pnp_bios.c:226:
+		printk(KERN_ERR "PnPBIOS: kmalloc() failed.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#79: FILE: drivers/pnp/pnp_bios.c:226:
+	if ( p == NULL )
+		printk(KERN_ERR "PnPBIOS: kmalloc() failed.\n");

CHECK:SPACING: No space is necessary after a cast
#123: FILE: drivers/pnp/pnp_bios.c:478:
+	if (!(envp = (char **) pnp_bios_kmalloc (20 * sizeof (char *), GFP_KERNEL))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: drivers/pnp/pnp_bios.c:478:
+	if (!(envp = (char **) pnp_bios_kmalloc (20 * sizeof (char *), GFP_KERNEL))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: drivers/pnp/pnp_bios.c:478:
+	if (!(envp = (char **) pnp_bios_kmalloc (20 * sizeof (char *), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: drivers/pnp/pnp_bios.c:478:
+	if (!(envp = (char **) pnp_bios_kmalloc (20 * sizeof (char *), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#123: FILE: drivers/pnp/pnp_bios.c:478:
+	if (!(envp = (char **) pnp_bios_kmalloc (20 * sizeof (char *), GFP_KERNEL))) {
 		return -ENOMEM;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: drivers/pnp/pnp_bios.c:481:
+	if (!(buf = pnp_bios_kmalloc (256, GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: drivers/pnp/pnp_bios.c:481:
+	if (!(buf = pnp_bios_kmalloc (256, GFP_KERNEL))) {

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#152: FILE: drivers/pnp/pnp_bios.c:558:
+				printk(KERN_WARNING "PnPBIOS: Unexpected error 0x%x returned by BIOS.\n", err);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#152: FILE: drivers/pnp/pnp_bios.c:558:
+				printk(KERN_WARNING "PnPBIOS: Unexpected error 0x%x returned by BIOS.\n", err);

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#161: FILE: drivers/pnp/pnp_bios.c:566:
+//				printk(KERN_INFO "PnPBIOS: Docking station %stached.\n", docked?"at":"de");

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#170: FILE: drivers/pnp/pnp_bios.c:603:
+static void inline pnpbios_add_ioresource(struct pci_dev *dev, int io, int len)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#179: FILE: drivers/pnp/pnp_bios.c:614:
+static void inline pnpbios_add_memresource(struct pci_dev *dev, int mem, int len)

ERROR:SPACING: space prohibited after that open parenthesis '('
#235: FILE: drivers/pnp/pnp_bios.c:666:
+	if ( regionid == NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#235: FILE: drivers/pnp/pnp_bios.c:666:
+	if ( regionid == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!regionid"
#235: FILE: drivers/pnp/pnp_bios.c:666:
+	if ( regionid == NULL )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: drivers/pnp/pnp_bios.c:668:
+	memcpy(regionid,pnpid,8);
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: drivers/pnp/pnp_bios.c:668:
+	memcpy(regionid,pnpid,8);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/pnp/pnp_bios.c:669:
+	res = request_region(io,len,regionid);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/pnp/pnp_bios.c:669:
+	res = request_region(io,len,regionid);
 	                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#239: FILE: drivers/pnp/pnp_bios.c:670:
+	if ( res == NULL )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#239: FILE: drivers/pnp/pnp_bios.c:670:
+	if ( res == NULL )

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#239: FILE: drivers/pnp/pnp_bios.c:670:
+	if ( res == NULL )

ERROR:SPACING: space prohibited after that open parenthesis '('
#240: FILE: drivers/pnp/pnp_bios.c:671:
+		kfree( regionid );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#240: FILE: drivers/pnp/pnp_bios.c:671:
+		kfree( regionid );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#241: FILE: drivers/pnp/pnp_bios.c:672:
+	printk(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: drivers/pnp/pnp_bios.c:672:
+	printk(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: drivers/pnp/pnp_bios.c:674:
+		pnpid, io, io+len-1,
 		             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#243: FILE: drivers/pnp/pnp_bios.c:674:
+		pnpid, io, io+len-1,
 		                 ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#244: FILE: drivers/pnp/pnp_bios.c:675:
+		NULL != res ? "has been" : "was already"

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#251: FILE: drivers/pnp/pnp_bios.c:681:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#252: FILE: drivers/pnp/pnp_bios.c:682:
+#define HEX(id,a) hex[((id)>>a) & 15]
               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#252: FILE: drivers/pnp/pnp_bios.c:682:
+#define HEX(id,a) hex[((id)>>a) & 15]
                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#252: FILE: drivers/pnp/pnp_bios.c:682:
+#define HEX(id,a) hex[((id)>>a) & 15]

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/pnp/pnp_bios.c:683:
+#define CHAR(id,a) (0x40 + (((id)>>a) & 31))
                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#253: FILE: drivers/pnp/pnp_bios.c:683:
+#define CHAR(id,a) (0x40 + (((id)>>a) & 31))
                                  ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#253: FILE: drivers/pnp/pnp_bios.c:683:
+#define CHAR(id,a) (0x40 + (((id)>>a) & 31))

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: drivers/pnp/pnp_bios.c:689:
+	static char str[8];
+	id = be32_to_cpu(id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: drivers/pnp/pnp_bios.c:692:
+	str[2] = CHAR(id,16);
 	                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/pnp/pnp_bios.c:699:
+}                                              $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: drivers/pnp/pnp_bios.c:702:
+#undef HEX  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#329: FILE: drivers/pnp/pnp_bios.c:870:
+		dev =  pnp_bios_kmalloc(sizeof (struct pci_dev), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#338: FILE: drivers/pnp/pnp_bios.c:1067:
+		printk(KERN_INFO "PnPBIOS: Disabled.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#347: FILE: drivers/pnp/pnp_bios.c:1087:
+			printk(KERN_WARNING "PnPBIOS: PnP BIOS version %d.%d is not supported.\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#355: FILE: drivers/pnp/pnp_bios.c:1092:
+		printk(KERN_INFO "PnPBIOS: Found PnP BIOS installation structure at 0x%p.\n", check);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#355: FILE: drivers/pnp/pnp_bios.c:1092:
+		printk(KERN_INFO "PnPBIOS: Found PnP BIOS installation structure at 0x%p.\n", check);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#356: FILE: drivers/pnp/pnp_bios.c:1093:
+		printk(KERN_INFO "PnPBIOS: PnP BIOS version %d.%d, entry 0x%x:0x%x, dseg 0x%x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/pnp/pnp_bios.c:1094:
+		printk(KERN_INFO "PnPBIOS: PnP BIOS version %d.%d, entry 0x%x:0x%x, dseg 0x%x.\n",
                        check->fields.version >> 4, check->fields.version & 15,

ERROR:SPACING: space prohibited after that open parenthesis '('
#367: FILE: drivers/pnp/pnp_proc.c:37:
+		if ( pnp_bios_get_dev_node(&nodenum, 1, node) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#367: FILE: drivers/pnp/pnp_proc.c:37:
+		if ( pnp_bios_get_dev_node(&nodenum, 1, node) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#377: FILE: drivers/pnp/pnp_proc.c:62:
+	if ( pnp_bios_get_dev_node(&nodenum, boot, node) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#377: FILE: drivers/pnp/pnp_proc.c:62:
+	if ( pnp_bios_get_dev_node(&nodenum, boot, node) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#387: FILE: drivers/pnp/pnp_proc.c:79:
+	if ( pnp_bios_get_dev_node(&nodenum, boot, node) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#387: FILE: drivers/pnp/pnp_proc.c:79:
+	if ( pnp_bios_get_dev_node(&nodenum, boot, node) )

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508608.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 23 warnings, 13 checks, 324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000508608.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
