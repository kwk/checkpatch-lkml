WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: include/linux/netfilter_bridge/ebtables.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#61: FILE: include/linux/netfilter_bridge/ebtables.h:27:
+#define EBT_SO_SET_COUNTERS     (EBT_SO_SET_ENTRIES+1)
                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: include/linux/netfilter_bridge/ebtables.h:28:
+#define EBT_SO_SET_MAX          (EBT_SO_SET_COUNTERS+1)
                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#65: FILE: include/linux/netfilter_bridge/ebtables.h:31:
+#define EBT_SO_GET_ENTRIES      (EBT_SO_GET_INFO+1)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#66: FILE: include/linux/netfilter_bridge/ebtables.h:32:
+#define EBT_SO_GET_INIT_INFO    (EBT_SO_GET_ENTRIES+1)
                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#67: FILE: include/linux/netfilter_bridge/ebtables.h:33:
+#define EBT_SO_GET_INIT_ENTRIES (EBT_SO_GET_INIT_INFO+1)
                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#68: FILE: include/linux/netfilter_bridge/ebtables.h:34:
+#define EBT_SO_GET_MAX          (EBT_SO_GET_INIT_ENTRIES+1)
                                                         ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#82: FILE: include/linux/netfilter_bridge/ebtables.h:48:
+struct ebt_counter
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#83: FILE: include/linux/netfilter_bridge/ebtables.h:49:
+	uint64_t pcnt;

WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#107: FILE: include/linux/netfilter_bridge/ebtables.h:73:
+// Using this simplifies the code alot, while still being able to use
                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/linux/netfilter_bridge/ebtables.h:85:
+   | EBT_ENTRY_OR_ENTRIES)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: include/linux/netfilter_bridge/ebtables.h:95:
+   | EBT_ILOGICALOUT | EBT_ISOURCE | EBT_IDEST)$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#132: FILE: include/linux/netfilter_bridge/ebtables.h:98:
+struct ebt_entry_match
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#143: FILE: include/linux/netfilter_bridge/ebtables.h:109:
+struct ebt_entry_watcher
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#154: FILE: include/linux/netfilter_bridge/ebtables.h:120:
+struct ebt_entry_target
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#166: FILE: include/linux/netfilter_bridge/ebtables.h:132:
+struct ebt_standard_target
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#176: FILE: include/linux/netfilter_bridge/ebtables.h:142:
+	uint16_t ethproto;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#199: FILE: include/linux/netfilter_bridge/ebtables.h:165:
+struct ebt_replace
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#218: FILE: include/linux/netfilter_bridge/ebtables.h:184:
+struct ebt_match
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: include/linux/netfilter_bridge/ebtables.h:189:
+	int (*match)(const struct sk_buff *skb, const struct net_device *in,
+	   const struct net_device *out, const void *matchdata,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: include/linux/netfilter_bridge/ebtables.h:193:
+	int (*check)(const char *tablename, unsigned int hookmask,
+	   const struct ebt_entry *e, void *matchdata, unsigned int datalen);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#233: FILE: include/linux/netfilter_bridge/ebtables.h:199:
+struct ebt_watcher
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: include/linux/netfilter_bridge/ebtables.h:203:
+	void (*watcher)(const struct sk_buff *skb, const struct net_device *in,
+	   const struct net_device *out, const void *watcherdata,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: include/linux/netfilter_bridge/ebtables.h:207:
+	int (*check)(const char *tablename, unsigned int hookmask,
+	   const struct ebt_entry *e, void *watcherdata, unsigned int datalen);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#247: FILE: include/linux/netfilter_bridge/ebtables.h:213:
+struct ebt_target
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: include/linux/netfilter_bridge/ebtables.h:218:
+	int (*target)(struct sk_buff **pskb, unsigned int hooknr,
+	   const struct net_device *in, const struct net_device *out,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: include/linux/netfilter_bridge/ebtables.h:222:
+	int (*check)(const char *tablename, unsigned int hookmask,
+	   const struct ebt_entry *e, void *targetdata, unsigned int datalen);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#263: FILE: include/linux/netfilter_bridge/ebtables.h:229:
+struct ebt_chainstack
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#270: FILE: include/linux/netfilter_bridge/ebtables.h:236:
+struct ebt_table_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#283: FILE: include/linux/netfilter_bridge/ebtables.h:249:
+struct ebt_table
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: include/linux/netfilter_bridge/ebtables.h:258:
+	int (*check)(const struct ebt_table_info *info,
+	   unsigned int valid_hooks);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/linux/netfilter_bridge/ebtables.h:263:
+extern int ebt_register_table(struct ebt_table *table);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: include/linux/netfilter_bridge/ebtables.h:264:
+extern void ebt_unregister_table(struct ebt_table *table);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/linux/netfilter_bridge/ebtables.h:265:
+extern int ebt_register_match(struct ebt_match *match);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: include/linux/netfilter_bridge/ebtables.h:266:
+extern void ebt_unregister_match(struct ebt_match *match);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/linux/netfilter_bridge/ebtables.h:267:
+extern int ebt_register_watcher(struct ebt_watcher *watcher);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/linux/netfilter_bridge/ebtables.h:268:
+extern void ebt_unregister_watcher(struct ebt_watcher *watcher);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/linux/netfilter_bridge/ebtables.h:269:
+extern int ebt_register_target(struct ebt_target *target);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/linux/netfilter_bridge/ebtables.h:270:
+extern void ebt_unregister_target(struct ebt_target *target);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/linux/netfilter_bridge/ebtables.h:271:
+extern unsigned int ebt_do_table(unsigned int hook, struct sk_buff **pskb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/linux/netfilter_bridge/ebtables.h:272:
+extern unsigned int ebt_do_table(unsigned int hook, struct sk_buff **pskb,
+   const struct net_device *in, const struct net_device *out,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: include/linux/netfilter_bridge/ebtables.h:272:
+   const struct net_device *in, const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: include/linux/netfilter_bridge/ebtables.h:273:
+   struct ebt_table *table);$

CHECK:SPACING: No space is necessary after a cast
#310: FILE: include/linux/netfilter_bridge/ebtables.h:276:
+#define FWINV(bool,invflg) ((bool) ^ !!(info->invflags & invflg))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#310: FILE: include/linux/netfilter_bridge/ebtables.h:276:
+#define FWINV(bool,invflg) ((bool) ^ !!(info->invflags & invflg))
                   ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'invflg' may be better as '(invflg)' to avoid precedence issues
#310: FILE: include/linux/netfilter_bridge/ebtables.h:276:
+#define FWINV(bool,invflg) ((bool) ^ !!(info->invflags & invflg))

WARNING:TYPO_SPELLING: 'blatently' may be misspelled - perhaps 'blatantly'?
#321: FILE: include/linux/netfilter_bridge/ebtables.h:287:
+// blatently stolen from ip_tables.h
    ^^^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#323: FILE: include/linux/netfilter_bridge/ebtables.h:289:
+#define EBT_MATCH_ITERATE(e, fn, args...)                   \
+({                                                          \
+	unsigned int __i;                                   \
+	int __ret = 0;                                      \
+	struct ebt_entry_match *__match;                    \
+	                                                    \
+	for (__i = sizeof(struct ebt_entry);                \
+	     __i < (e)->watchers_offset;                    \
+	     __i += __match->match_size +                   \
+	     sizeof(struct ebt_entry_match)) {              \
+		__match = (void *)(e) + __i;                \
+		                                            \
+		__ret = fn(__match , ## args);              \
+		if (__ret != 0)                             \
+			break;                              \
+	}                                                   \
+	if (__ret == 0) {                                   \
+		if (__i != (e)->watchers_offset)            \
+			__ret = -EINVAL;                    \
+	}                                                   \
+	__ret;                                              \
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: include/linux/netfilter_bridge/ebtables.h:294:
+^I                                                    \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: include/linux/netfilter_bridge/ebtables.h:300:
+^I^I                                            \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#335: FILE: include/linux/netfilter_bridge/ebtables.h:301:
+		__ret = fn(__match , ## args);              \
 		                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#346: FILE: include/linux/netfilter_bridge/ebtables.h:312:
+#define EBT_WATCHER_ITERATE(e, fn, args...)                 \
+({                                                          \
+	unsigned int __i;                                   \
+	int __ret = 0;                                      \
+	struct ebt_entry_watcher *__watcher;                \
+	                                                    \
+	for (__i = e->watchers_offset;                      \
+	     __i < (e)->target_offset;                      \
+	     __i += __watcher->watcher_size +               \
+	     sizeof(struct ebt_entry_watcher)) {            \
+		__watcher = (void *)(e) + __i;              \
+		                                            \
+		__ret = fn(__watcher , ## args);            \
+		if (__ret != 0)                             \
+			break;                              \
+	}                                                   \
+	if (__ret == 0) {                                   \
+		if (__i != (e)->target_offset)              \
+			__ret = -EINVAL;                    \
+	}                                                   \
+	__ret;                                              \
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#346: FILE: include/linux/netfilter_bridge/ebtables.h:312:
+#define EBT_WATCHER_ITERATE(e, fn, args...)                 \
+({                                                          \
+	unsigned int __i;                                   \
+	int __ret = 0;                                      \
+	struct ebt_entry_watcher *__watcher;                \
+	                                                    \
+	for (__i = e->watchers_offset;                      \
+	     __i < (e)->target_offset;                      \
+	     __i += __watcher->watcher_size +               \
+	     sizeof(struct ebt_entry_watcher)) {            \
+		__watcher = (void *)(e) + __i;              \
+		                                            \
+		__ret = fn(__watcher , ## args);            \
+		if (__ret != 0)                             \
+			break;                              \
+	}                                                   \
+	if (__ret == 0) {                                   \
+		if (__i != (e)->target_offset)              \
+			__ret = -EINVAL;                    \
+	}                                                   \
+	__ret;                                              \
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: include/linux/netfilter_bridge/ebtables.h:317:
+^I                                                    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: include/linux/netfilter_bridge/ebtables.h:323:
+^I^I                                            \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#358: FILE: include/linux/netfilter_bridge/ebtables.h:324:
+		__ret = fn(__watcher , ## args);            \
 		                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#369: FILE: include/linux/netfilter_bridge/ebtables.h:335:
+#define EBT_ENTRY_ITERATE(entries, size, fn, args...)       \
+({                                                          \
+	unsigned int __i;                                   \
+	int __ret = 0;                                      \
+	struct ebt_entry *__entry;                          \
+	                                                    \
+	for (__i = 0; __i < (size);) {                      \
+		__entry = (void *)(entries) + __i;          \
+		__ret = fn(__entry , ## args);              \
+		if (__ret != 0)                             \
+			break;                              \
+		if (__entry->bitmask != 0)                  \
+			__i += __entry->next_offset;        \
+		else                                        \
+			__i += sizeof(struct ebt_entries);  \
+	}                                                   \
+	if (__ret == 0) {                                   \
+		if (__i != (size))                          \
+			__ret = -EINVAL;                    \
+	}                                                   \
+	__ret;                                              \
+})

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: include/linux/netfilter_bridge/ebtables.h:340:
+^I                                                    \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#377: FILE: include/linux/netfilter_bridge/ebtables.h:343:
+		__ret = fn(__entry , ## args);              \
 		                   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#396: FILE: include/linux/netfilter_bridge/ebt_arp.h:1:
+#ifndef __LINUX_BRIDGE_EBT_ARP_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: include/linux/netfilter_bridge/ebt_arp.h:10:
+   EBT_ARP_SRC_IP | EBT_ARP_DST_IP)$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#409: FILE: include/linux/netfilter_bridge/ebt_arp.h:14:
+struct ebt_arp_info
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#410: FILE: include/linux/netfilter_bridge/ebt_arp.h:15:
+	uint16_t htype;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#411: FILE: include/linux/netfilter_bridge/ebt_arp.h:16:
+	uint16_t ptype;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#412: FILE: include/linux/netfilter_bridge/ebt_arp.h:17:
+	uint16_t opcode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#413: FILE: include/linux/netfilter_bridge/ebt_arp.h:18:
+	uint32_t saddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#414: FILE: include/linux/netfilter_bridge/ebt_arp.h:19:
+	uint32_t smsk;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#415: FILE: include/linux/netfilter_bridge/ebt_arp.h:20:
+	uint32_t daddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#416: FILE: include/linux/netfilter_bridge/ebt_arp.h:21:
+	uint32_t dmsk;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#417: FILE: include/linux/netfilter_bridge/ebt_arp.h:22:
+	uint8_t  bitmask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#418: FILE: include/linux/netfilter_bridge/ebt_arp.h:23:
+	uint8_t  invflags;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#425: FILE: include/linux/netfilter_bridge/ebt_ip.h:1:
+#ifndef __LINUX_BRIDGE_EBT_IP_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#437: FILE: include/linux/netfilter_bridge/ebt_ip.h:13:
+struct ebt_ip_info
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#438: FILE: include/linux/netfilter_bridge/ebt_ip.h:14:
+	uint32_t saddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#439: FILE: include/linux/netfilter_bridge/ebt_ip.h:15:
+	uint32_t daddr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#440: FILE: include/linux/netfilter_bridge/ebt_ip.h:16:
+	uint32_t smsk;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#441: FILE: include/linux/netfilter_bridge/ebt_ip.h:17:
+	uint32_t dmsk;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#442: FILE: include/linux/netfilter_bridge/ebt_ip.h:18:
+	uint8_t  tos;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#443: FILE: include/linux/netfilter_bridge/ebt_ip.h:19:
+	uint8_t  protocol;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#444: FILE: include/linux/netfilter_bridge/ebt_ip.h:20:
+	uint8_t  bitmask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#445: FILE: include/linux/netfilter_bridge/ebt_ip.h:21:
+	uint8_t  invflags;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#452: FILE: include/linux/netfilter_bridge/ebt_vlan.h:1:
+#ifndef __LINUX_BRIDGE_EBT_VLAN_H

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#462: FILE: include/linux/netfilter_bridge/ebt_vlan.h:11:
+	uint16_t id;		/* VLAN ID {1-4095} */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#463: FILE: include/linux/netfilter_bridge/ebt_vlan.h:12:
+	uint8_t prio;		/* VLAN User Priority {0-7} */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#464: FILE: include/linux/netfilter_bridge/ebt_vlan.h:13:
+	uint16_t encap;		/* VLAN Encapsulated frame code {0-65535} */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#465: FILE: include/linux/netfilter_bridge/ebt_vlan.h:14:
+	uint8_t bitmask;		/* Args bitmask bit 1=1 - ID arg,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#466: FILE: include/linux/netfilter_bridge/ebt_vlan.h:15:
+	uint8_t bitmask;		/* Args bitmask bit 1=1 - ID arg,
+				   bit 2=1 User-Priority arg, bit 3=1 encap*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#466: FILE: include/linux/netfilter_bridge/ebt_vlan.h:15:
+				   bit 2=1 User-Priority arg, bit 3=1 encap*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: include/linux/netfilter_bridge/ebt_vlan.h:16:
+^Iuint8_t invflags;^I^I/* Inverse bitmask  bit 1=1 - inversed ID arg, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#467: FILE: include/linux/netfilter_bridge/ebt_vlan.h:16:
+	uint8_t invflags;		/* Inverse bitmask  bit 1=1 - inversed ID arg, 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#468: FILE: include/linux/netfilter_bridge/ebt_vlan.h:17:
+	uint8_t invflags;		/* Inverse bitmask  bit 1=1 - inversed ID arg, 
+				   bit 2=1 - inversed Pirority arg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: include/linux/netfilter_bridge/ebt_vlan.h:17:
+				   bit 2=1 - inversed Pirority arg */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#475: FILE: include/linux/netfilter_bridge/ebt_log.h:1:
+#ifndef __LINUX_BRIDGE_EBT_LOG_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#485: FILE: include/linux/netfilter_bridge/ebt_log.h:11:
+struct ebt_log_info
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#486: FILE: include/linux/netfilter_bridge/ebt_log.h:12:
+	uint8_t loglevel;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#487: FILE: include/linux/netfilter_bridge/ebt_log.h:13:
+	uint8_t prefix[EBT_LOG_PREFIX_SIZE];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#488: FILE: include/linux/netfilter_bridge/ebt_log.h:14:
+	uint32_t bitmask;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#495: FILE: include/linux/netfilter_bridge/ebt_nat.h:1:
+#ifndef __LINUX_BRIDGE_EBT_NAT_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#499: FILE: include/linux/netfilter_bridge/ebt_nat.h:5:
+struct ebt_nat_info
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#504: FILE: include/linux/netfilter_bridge/ebt_nat.h:10:
+};
+#define EBT_SNAT_TARGET "snat"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#511: FILE: include/linux/netfilter_bridge/ebt_redirect.h:1:
+#ifndef __LINUX_BRIDGE_EBT_REDIRECT_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#515: FILE: include/linux/netfilter_bridge/ebt_redirect.h:5:
+struct ebt_redirect_info
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#519: FILE: include/linux/netfilter_bridge/ebt_redirect.h:9:
+};
+#define EBT_REDIRECT_TARGET "redirect"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#525: FILE: include/linux/netfilter_bridge/ebt_mark_m.h:1:
+#ifndef __LINUX_BRIDGE_EBT_MARK_M_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#532: FILE: include/linux/netfilter_bridge/ebt_mark_m.h:8:
+struct ebt_mark_m_info
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#534: FILE: include/linux/netfilter_bridge/ebt_mark_m.h:10:
+	uint8_t invert;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#535: FILE: include/linux/netfilter_bridge/ebt_mark_m.h:11:
+	uint8_t bitmask;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#537: FILE: include/linux/netfilter_bridge/ebt_mark_m.h:13:
+};
+#define EBT_MARK_MATCH "mark_m"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#543: FILE: include/linux/netfilter_bridge/ebt_mark_t.h:1:
+#ifndef __LINUX_BRIDGE_EBT_MARK_T_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#547: FILE: include/linux/netfilter_bridge/ebt_mark_t.h:5:
+struct ebt_mark_t_info
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#552: FILE: include/linux/netfilter_bridge/ebt_mark_t.h:10:
+};
+#define EBT_MARK_TARGET "mark"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 20 warnings, 62 checks, 496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430839.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
