WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/spi/spi_mpc83xx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#115: FILE: drivers/spi/spi_mpc83xx.c:28:
+#include <asm/io.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#129: FILE: drivers/spi/spi_mpc83xx.c:42:
+#define	SPMODE_CI_INACTIVEHIGH	(1 << 29)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: drivers/spi/spi_mpc83xx.c:43:
+#define	SPMODE_CP_BEGIN_EDGECLK	(1 << 28)

CHECK:BIT_MACRO: Prefer using the BIT macro
#131: FILE: drivers/spi/spi_mpc83xx.c:44:
+#define	SPMODE_DIV16		(1 << 27)

CHECK:BIT_MACRO: Prefer using the BIT macro
#132: FILE: drivers/spi/spi_mpc83xx.c:45:
+#define	SPMODE_REV		(1 << 26)

CHECK:BIT_MACRO: Prefer using the BIT macro
#133: FILE: drivers/spi/spi_mpc83xx.c:46:
+#define	SPMODE_MS		(1 << 25)

CHECK:BIT_MACRO: Prefer using the BIT macro
#134: FILE: drivers/spi/spi_mpc83xx.c:47:
+#define	SPMODE_ENABLE		(1 << 24)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: drivers/spi/spi_mpc83xx.c:53:
+ * ^ISPI MODE 0 (inactive low, phase middle, MSB, 8-bit length, slow clk$

WARNING:SPACING: Unnecessary space before function pointer arguments
#166: FILE: drivers/spi/spi_mpc83xx.c:79:
+	void (*get_rx) (u32 rx_data, struct mpc83xx_spi *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc83xx_spi *' should also have an identifier name
#166: FILE: drivers/spi/spi_mpc83xx.c:79:
+	void (*get_rx) (u32 rx_data, struct mpc83xx_spi *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: missing space after return type
#167: FILE: drivers/spi/spi_mpc83xx.c:80:
+	u32(*get_tx) (struct mpc83xx_spi *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#167: FILE: drivers/spi/spi_mpc83xx.c:80:
+	u32(*get_tx) (struct mpc83xx_spi *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc83xx_spi *' should also have an identifier name
#167: FILE: drivers/spi/spi_mpc83xx.c:80:
+	u32(*get_tx) (struct mpc83xx_spi *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#172: FILE: drivers/spi/spi_mpc83xx.c:85:
+	unsigned nsecs;		/* (clock cycle time)/2 */

WARNING:SPACING: Unnecessary space before function pointer arguments
#175: FILE: drivers/spi/spi_mpc83xx.c:88:
+	void (*activate_cs) (u8 cs, u8 polarity);

WARNING:SPACING: Unnecessary space before function pointer arguments
#176: FILE: drivers/spi/spi_mpc83xx.c:89:
+	void (*deactivate_cs) (u8 cs, u8 polarity);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: drivers/spi/spi_mpc83xx.c:92:
+static inline void mpc83xx_spi_write_reg(__be32 __iomem * reg, u32 val)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: drivers/spi/spi_mpc83xx.c:97:
+static inline u32 mpc83xx_spi_read_reg(__be32 __iomem * reg)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: drivers/spi/spi_mpc83xx.c:102:
+#define MPC83XX_SPI_RX_BUF(type) ^I^I^I^I^I  \$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#192: FILE: drivers/spi/spi_mpc83xx.c:105:
+	type * rx = mpc83xx_spi->rx;					  \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#201: FILE: drivers/spi/spi_mpc83xx.c:114:
+	const type * tx = mpc83xx_spi->tx;			\

WARNING:LINE_SPACING: Missing a blank line after declarations
#229: FILE: drivers/spi/spi_mpc83xx.c:142:
+		u32 len = spi->bits_per_word;
+		if (len == 32)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: drivers/spi/spi_mpc83xx.c:159:
+			u8 pm = mpc83xx_spi->sysclk / (spi->max_speed_hz * 64);
+			regval |= SPMODE_PM(pm) | SPMODE_DIV16;

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: drivers/spi/spi_mpc83xx.c:162:
+			u8 pm = mpc83xx_spi->sysclk / (spi->max_speed_hz * 4);
+			regval |= SPMODE_PM(pm);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bits_per_word < 4'
#281: FILE: drivers/spi/spi_mpc83xx.c:194:
+	if ((bits_per_word < 4)
+	    || ((bits_per_word > 16) && (bits_per_word != 32)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bits_per_word > 16'
#281: FILE: drivers/spi/spi_mpc83xx.c:194:
+	if ((bits_per_word < 4)
+	    || ((bits_per_word > 16) && (bits_per_word != 32)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bits_per_word != 32'
#281: FILE: drivers/spi/spi_mpc83xx.c:194:
+	if ((bits_per_word < 4)
+	    || ((bits_per_word > 16) && (bits_per_word != 32)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#282: FILE: drivers/spi/spi_mpc83xx.c:195:
+	if ((bits_per_word < 4)
+	    || ((bits_per_word > 16) && (bits_per_word != 32)))

CHECK:BRACES: braces {} should be used on all arms of this statement
#285: FILE: drivers/spi/spi_mpc83xx.c:198:
+	if (bits_per_word <= 8) {
[...]
+	} else if (bits_per_word <= 16) {
[...]
+	} else if (bits_per_word <= 32) {
[...]
+	} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/spi/spi_mpc83xx.c:207:
+^I} else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#294: FILE: drivers/spi/spi_mpc83xx.c:207:
+	} else 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#340: FILE: drivers/spi/spi_mpc83xx.c:253:
+		__FUNCTION__, spi->mode & (SPI_CPOL | SPI_CPHA),

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#387: FILE: drivers/spi/spi_mpc83xx.c:300:
+			    struct pt_regs * ptregs)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#408: FILE: drivers/spi/spi_mpc83xx.c:321:
+		while (((event =
[...]
+			 cpu_relax();

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/spi/spi_mpc83xx.c:330:
+			u32 word = mpc83xx_spi->get_tx(mpc83xx_spi);
+			mpc83xx_spi_write_reg(&mpc83xx_spi->base->transmit,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#430: FILE: drivers/spi/spi_mpc83xx.c:343:
+static int __devinit mpc83xx_spi_probe(struct platform_device *dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!master"
#442: FILE: drivers/spi/spi_mpc83xx.c:355:
+	if (master == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#450: FILE: drivers/spi/spi_mpc83xx.c:363:
+	if (pdata == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r"
#456: FILE: drivers/spi/spi_mpc83xx.c:369:
+	if (r == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc83xx_spi->base"
#476: FILE: drivers/spi/spi_mpc83xx.c:389:
+	if (mpc83xx_spi->base == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#513: FILE: drivers/spi/spi_mpc83xx.c:426:
+	printk(KERN_INFO

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#531: FILE: drivers/spi/spi_mpc83xx.c:444:
+static int __devexit mpc83xx_spi_remove(struct platform_device *dev)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: include/linux/fsl_devices.h:114:
+^Iu32 ^Iinitial_spmode;^I/* initial SPMODE value */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: include/linux/fsl_devices.h:115:
+^Iu16^Ibus_num;^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086228.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 23 warnings, 16 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086228.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
