WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
> > window, so on and on. During the whole process we are holding the global

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#118: FILE: fs/ext3/balloc.c:245:
+	 * we only link the node the the rb tree here

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#136: FILE: fs/ext3/balloc.c:758:
+static int find_next_reservable_window(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: fs/ext3/balloc.c:761:
+				struct super_block * sb, int start_block,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prev != my_rsv'
#175: FILE: fs/ext3/balloc.c:822:
+	if ((prev != my_rsv) && (!rsv_is_empty(&my_rsv->rsv_window)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#178: FILE: fs/ext3/balloc.c:825:
+	/* let's book the whole avaliable window for now
 	                        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: fs/ext3/balloc.c:955:
+	ret = find_next_reservable_window(search_head, my_rsv, sb,
+						start_block, group_end_block);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start_block >= my_rsv->rsv_start'
#287: FILE: fs/ext3/balloc.c:996:
+	if ((start_block >= my_rsv->rsv_start) &&
+		  (start_block < my_rsv->rsv_end))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start_block < my_rsv->rsv_end'
#287: FILE: fs/ext3/balloc.c:996:
+	if ((start_block >= my_rsv->rsv_start) &&
+		  (start_block < my_rsv->rsv_end))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: fs/ext3/balloc.c:997:
+	if ((start_block >= my_rsv->rsv_start) &&
+		  (start_block < my_rsv->rsv_end))

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#320: FILE: fs/ext3/balloc.c:1014:
+	if ((my_rsv->rsv_end) > (start_block + size -1 ))
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#320: FILE: fs/ext3/balloc.c:1014:
+	if ((my_rsv->rsv_end) > (start_block + size -1 ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'my_rsv->rsv_end'
#320: FILE: fs/ext3/balloc.c:1014:
+	if ((my_rsv->rsv_end) > (start_block + size -1 ))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000192442.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 8 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000192442.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
