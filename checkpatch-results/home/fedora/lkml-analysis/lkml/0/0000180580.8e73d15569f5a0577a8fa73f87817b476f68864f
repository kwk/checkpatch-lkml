WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#35: FILE: Makefile:4:
+EXTRAVERSION = .11
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iommu_bus_setup_pSeriesLP', this function's name, in a string
#46: FILE: arch/ppc64/kernel/pSeries_iommu.c:404:
+	DBG("iommu_bus_setup_pSeriesLP, bus %p, bus->self %p\n", bus, bus->self);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CAMELCASE: Avoid CamelCase: <iommu_dev_setup_pSeriesLP>
#55: FILE: arch/ppc64/kernel/pSeries_iommu.c:460:
+static void iommu_dev_setup_pSeriesLP(struct pci_dev *dev)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iommu_dev_setup_pSeriesLP', this function's name, in a string
#61: FILE: arch/ppc64/kernel/pSeries_iommu.c:466:
+	DBG("iommu_dev_setup_pSeriesLP, dev %p (%s)\n", dev, dev->pretty_name);

WARNING:TYPO_SPELLING: 'neccesarily' may be misspelled - perhaps 'necessarily'?
#64: FILE: arch/ppc64/kernel/pSeries_iommu.c:469:
+	 * contain the dma-window properties per-device and not neccesarily
 	                                                        ^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dma_window"
#80: FILE: arch/ppc64/kernel/pSeries_iommu.c:485:
+	if (dma_window == NULL || pdn->parent == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdn->parent"
#80: FILE: arch/ppc64/kernel/pSeries_iommu.c:485:
+	if (dma_window == NULL || pdn->parent == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <iommu_dev_setup_pSeries>
#83: FILE: arch/ppc64/kernel/pSeries_iommu.c:488:
+		iommu_dev_setup_pSeries(dev);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#85: FILE: arch/ppc64/kernel/pSeries_iommu.c:490:
+		return;
+	} else {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#93: FILE: arch/ppc64/kernel/pSeries_iommu.c:498:
+		tbl = (struct iommu_table *)kmalloc(sizeof(struct iommu_table),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tbl)...) over kmalloc(sizeof(struct iommu_table)...)
#93: FILE: arch/ppc64/kernel/pSeries_iommu.c:498:
+		tbl = (struct iommu_table *)kmalloc(sizeof(struct iommu_table),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#175: FILE: arch/x86_64/mm/fault.c:280:
+	/* Don't use pte_page here, because the mappings can point
+	   outside mem_map, and the NUMA hash lookup cannot handle

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#176: FILE: arch/x86_64/mm/fault.c:281:
+	   that. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: arch/x86_64/mm/fault.c:357:
+		if (!(error_code & 5) &&
+		      ((address >= VMALLOC_START && address < VMALLOC_END) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/x86_64/mm/ioremap.c:270:
+		change_page_attr_addr((unsigned long)(__va(p->phys_addr)),
 				 (p->size - PAGE_SIZE) >> PAGE_SHIFT,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: drivers/usb/serial/visor.c:638:
+		usb_fill_bulk_urb (port->read_urb, port->serial->dev,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#307: FILE: drivers/usb/serial/visor.c:640:
+						   port->bulk_in_endpointAddress),

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#313: FILE: drivers/usb/serial/visor.c:646:
+			dev_err(&port->dev, "%s - failed resubmitting read urb, error %d\n", __FUNCTION__, result);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#313: FILE: drivers/usb/serial/visor.c:646:
+			dev_err(&port->dev, "%s - failed resubmitting read urb, error %d\n", __FUNCTION__, result);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#366: FILE: drivers/video/matrox/matroxfb_accel.c:452:
+				fb_writel((*(u_int16_t*)chardata) << 16, mmio.vaddr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#368: FILE: drivers/video/matrox/matroxfb_accel.c:454:
+				fb_writel(*(u_int16_t*)chardata, mmio.vaddr);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#378: FILE: drivers/video/matrox/matroxfb_accel.c:465:
+					fb_writel(get_unaligned((u_int32_t*)(chardata + i)),mmio.vaddr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#378: FILE: drivers/video/matrox/matroxfb_accel.c:465:
+					fb_writel(get_unaligned((u_int32_t*)(chardata + i)),mmio.vaddr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: drivers/video/matrox/matroxfb_accel.c:465:
+					fb_writel(get_unaligned((u_int32_t*)(chardata + i)),mmio.vaddr);
 					                                                   ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#485: FILE: mm/mmap.c:1321:
+		unsigned long (*get_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#485: FILE: mm/mmap.c:1321:
+		unsigned long (*get_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#485: FILE: mm/mmap.c:1321:
+		unsigned long (*get_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#485: FILE: mm/mmap.c:1321:
+		unsigned long (*get_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#485: FILE: mm/mmap.c:1321:
+		unsigned long (*get_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#485: FILE: mm/mmap.c:1321:
+		unsigned long (*get_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#572: FILE: sound/usb/usx2y/usbusx2y.c:6:
+	Call snd_card_free() instead of snd_card_free_in_thread() to prevent oops with dead keyboard symptom.

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#583: FILE: sound/usb/usx2y/usbusx2y.c:151:
+MODULE_DESCRIPTION("TASCAM "NAME_ALLCAPS" Version 0.8.7.2");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#601: FILE: sound/usb/usx2y/usbusx2y.c:449:
+		snd_card_free((snd_card_t*)ptr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180580.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 20 warnings, 9 checks, 489 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000180580.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
