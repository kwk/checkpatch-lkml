WARNING:TYPO_SPELLING: 'primarly' may be misspelled - perhaps 'primarily'?
#46: 
care about this (this is primarly needed on 32bit apps). 
                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: arch/i386/mm/fault.c:220:
+	struct vm_area_struct * vma, * prev_vma;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#128: FILE: arch/i386/mm/fault.c:220:
+	struct vm_area_struct * vma, * prev_vma;
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: arch/ppc/mm/fault.c:98:
+	struct vm_area_struct * vma, * prev_vma;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#223: FILE: arch/ppc/mm/fault.c:98:
+	struct vm_area_struct * vma, * prev_vma;
 	                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: arch/ppc64/mm/fault.c:89:
+	struct vm_area_struct * vma, * prev_vma;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#249: FILE: arch/ppc64/mm/fault.c:89:
+	struct vm_area_struct * vma, * prev_vma;
 	                             ^

WARNING:INDENTED_LABEL: labels should not be indented
#289: FILE: arch/ppc64/mm/hugetlbpage.c:518:
+		got_it:

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/s390/mm/fault.c:228:
+        if (expand_stack(vma, address, NULL /* FIXME? */))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/s390/mm/fault.c:228:
+        if (expand_stack(vma, address, NULL /* FIXME? */))$

ERROR:SPACING: space required before the open parenthesis '('
#353: FILE: arch/sparc/mm/fault.c:274:
+	if(expand_stack(vma, address, NULL))

ERROR:SPACING: space required before the open parenthesis '('
#362: FILE: arch/sparc/mm/fault.c:527:
+	if(expand_stack(vma, address, NULL))

CHECK:BRACES: Unbalanced braces around else statement
#404: FILE: arch/um/kernel/trap_kern.c:49:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#406: FILE: arch/um/kernel/trap_kern.c:51:
+		if(expand_stack(vma, address, prev_vma))

WARNING:INDENTED_LABEL: labels should not be indented
#438: FILE: arch/x86_64/kernel/sys_x86_64.c:141:
+		got_it:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: arch/x86_64/mm/fault.c:251:
+	struct vm_area_struct * vma, * prev_vma;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#454: FILE: arch/x86_64/mm/fault.c:251:
+	struct vm_area_struct * vma, * prev_vma;
 	                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#486: FILE: include/linux/mm.h:734:
+extern int expand_stack(struct vm_area_struct * vma, unsigned long address,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#486: FILE: include/linux/mm.h:734:
+extern int expand_stack(struct vm_area_struct * vma, unsigned long address,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: include/linux/mm.h:735:
+			struct vm_area_struct * prev_vma);

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: include/linux/sysctl.h:170:
+ ^IVM_HEAP_STACK_GAP=28,^I/* int: page gap between heap and stack */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#502: FILE: include/linux/sysctl.h:170:
+ ^IVM_HEAP_STACK_GAP=28,^I/* int: page gap between heap and stack */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: include/linux/sysctl.h:170:
+ ^IVM_HEAP_STACK_GAP=28,^I/* int: page gap between heap and stack */$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#502: FILE: include/linux/sysctl.h:170:
+ 	VM_HEAP_STACK_GAP=28,	/* int: page gap between heap and stack */
  	                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#519: FILE: kernel/sysctl.c:805:
+^I^I.procname^I= "heap-stack-gap", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#562: FILE: mm/mmap.c:1091:
+		got_it:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#574: FILE: mm/mmap.c:1326:
+int expand_stack(struct vm_area_struct * vma, unsigned long address,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#575: FILE: mm/mmap.c:1327:
+		 struct vm_area_struct * prev_vma)

WARNING:INDENTED_LABEL: labels should not be indented
#617: FILE: mm/mmap.c:1424:
+	out_unlock:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#626: FILE: mm/mmap.c:1449:
+	struct vm_area_struct * vma, * prev_vma;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#626: FILE: mm/mmap.c:1449:
+	struct vm_area_struct * vma, * prev_vma;
 	                             ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 8 warnings, 2 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246773.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
