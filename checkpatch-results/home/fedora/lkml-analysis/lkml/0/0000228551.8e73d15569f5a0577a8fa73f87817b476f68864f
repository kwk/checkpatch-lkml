WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: arch/ppc/boot/include/mpsc_defs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: arch/ppc/boot/include/mpsc_defs.h:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#109: FILE: arch/ppc/boot/include/mpsc_defs.h:50:
+#define	MPSC_CHR_2_TEV			(1<<1)
        	              			  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#109: FILE: arch/ppc/boot/include/mpsc_defs.h:50:
+#define	MPSC_CHR_2_TEV			(1<<1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#110: FILE: arch/ppc/boot/include/mpsc_defs.h:51:
+#define	MPSC_CHR_2_TA			(1<<7)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#110: FILE: arch/ppc/boot/include/mpsc_defs.h:51:
+#define	MPSC_CHR_2_TA			(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#111: FILE: arch/ppc/boot/include/mpsc_defs.h:52:
+#define	MPSC_CHR_2_TTCS			(1<<9)
        	               			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: arch/ppc/boot/include/mpsc_defs.h:52:
+#define	MPSC_CHR_2_TTCS			(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#112: FILE: arch/ppc/boot/include/mpsc_defs.h:53:
+#define	MPSC_CHR_2_REV			(1<<17)
        	              			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#112: FILE: arch/ppc/boot/include/mpsc_defs.h:53:
+#define	MPSC_CHR_2_REV			(1<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#113: FILE: arch/ppc/boot/include/mpsc_defs.h:54:
+#define	MPSC_CHR_2_RA			(1<<23)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#113: FILE: arch/ppc/boot/include/mpsc_defs.h:54:
+#define	MPSC_CHR_2_RA			(1<<23)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#114: FILE: arch/ppc/boot/include/mpsc_defs.h:55:
+#define	MPSC_CHR_2_CRD			(1<<25)
        	              			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#114: FILE: arch/ppc/boot/include/mpsc_defs.h:55:
+#define	MPSC_CHR_2_CRD			(1<<25)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#115: FILE: arch/ppc/boot/include/mpsc_defs.h:56:
+#define	MPSC_CHR_2_EH			(1<<31)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: arch/ppc/boot/include/mpsc_defs.h:56:
+#define	MPSC_CHR_2_EH			(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#143: FILE: arch/ppc/boot/include/mpsc_defs.h:84:
+#define	SDMA_DESC_CMDSTAT_PE		(1<<0)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#143: FILE: arch/ppc/boot/include/mpsc_defs.h:84:
+#define	SDMA_DESC_CMDSTAT_PE		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#144: FILE: arch/ppc/boot/include/mpsc_defs.h:85:
+#define	SDMA_DESC_CMDSTAT_CDL		(1<<1)
        	                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#144: FILE: arch/ppc/boot/include/mpsc_defs.h:85:
+#define	SDMA_DESC_CMDSTAT_CDL		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#145: FILE: arch/ppc/boot/include/mpsc_defs.h:86:
+#define	SDMA_DESC_CMDSTAT_FR		(1<<3)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#145: FILE: arch/ppc/boot/include/mpsc_defs.h:86:
+#define	SDMA_DESC_CMDSTAT_FR		(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#146: FILE: arch/ppc/boot/include/mpsc_defs.h:87:
+#define	SDMA_DESC_CMDSTAT_OR		(1<<6)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: arch/ppc/boot/include/mpsc_defs.h:87:
+#define	SDMA_DESC_CMDSTAT_OR		(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#147: FILE: arch/ppc/boot/include/mpsc_defs.h:88:
+#define	SDMA_DESC_CMDSTAT_BR		(1<<9)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: arch/ppc/boot/include/mpsc_defs.h:88:
+#define	SDMA_DESC_CMDSTAT_BR		(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#148: FILE: arch/ppc/boot/include/mpsc_defs.h:89:
+#define	SDMA_DESC_CMDSTAT_MI		(1<<10)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#148: FILE: arch/ppc/boot/include/mpsc_defs.h:89:
+#define	SDMA_DESC_CMDSTAT_MI		(1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#149: FILE: arch/ppc/boot/include/mpsc_defs.h:90:
+#define	SDMA_DESC_CMDSTAT_A		(1<<11)
        	                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#149: FILE: arch/ppc/boot/include/mpsc_defs.h:90:
+#define	SDMA_DESC_CMDSTAT_A		(1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#150: FILE: arch/ppc/boot/include/mpsc_defs.h:91:
+#define	SDMA_DESC_CMDSTAT_AM		(1<<12)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#150: FILE: arch/ppc/boot/include/mpsc_defs.h:91:
+#define	SDMA_DESC_CMDSTAT_AM		(1<<12)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#151: FILE: arch/ppc/boot/include/mpsc_defs.h:92:
+#define	SDMA_DESC_CMDSTAT_CT		(1<<13)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#151: FILE: arch/ppc/boot/include/mpsc_defs.h:92:
+#define	SDMA_DESC_CMDSTAT_CT		(1<<13)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#152: FILE: arch/ppc/boot/include/mpsc_defs.h:93:
+#define	SDMA_DESC_CMDSTAT_C		(1<<14)
        	                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: arch/ppc/boot/include/mpsc_defs.h:93:
+#define	SDMA_DESC_CMDSTAT_C		(1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#153: FILE: arch/ppc/boot/include/mpsc_defs.h:94:
+#define	SDMA_DESC_CMDSTAT_ES		(1<<15)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#153: FILE: arch/ppc/boot/include/mpsc_defs.h:94:
+#define	SDMA_DESC_CMDSTAT_ES		(1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#154: FILE: arch/ppc/boot/include/mpsc_defs.h:95:
+#define	SDMA_DESC_CMDSTAT_L		(1<<16)
        	                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: arch/ppc/boot/include/mpsc_defs.h:95:
+#define	SDMA_DESC_CMDSTAT_L		(1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#155: FILE: arch/ppc/boot/include/mpsc_defs.h:96:
+#define	SDMA_DESC_CMDSTAT_F		(1<<17)
        	                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: arch/ppc/boot/include/mpsc_defs.h:96:
+#define	SDMA_DESC_CMDSTAT_F		(1<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#156: FILE: arch/ppc/boot/include/mpsc_defs.h:97:
+#define	SDMA_DESC_CMDSTAT_P		(1<<18)
        	                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#156: FILE: arch/ppc/boot/include/mpsc_defs.h:97:
+#define	SDMA_DESC_CMDSTAT_P		(1<<18)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#157: FILE: arch/ppc/boot/include/mpsc_defs.h:98:
+#define	SDMA_DESC_CMDSTAT_EI		(1<<23)
        	                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#157: FILE: arch/ppc/boot/include/mpsc_defs.h:98:
+#define	SDMA_DESC_CMDSTAT_EI		(1<<23)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#158: FILE: arch/ppc/boot/include/mpsc_defs.h:99:
+#define	SDMA_DESC_CMDSTAT_O		(1<<31)
        	                   		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: arch/ppc/boot/include/mpsc_defs.h:99:
+#define	SDMA_DESC_CMDSTAT_O		(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#163: FILE: arch/ppc/boot/include/mpsc_defs.h:104:
+#define	SDMA_SDC_RFT			(1<<0)
        	            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: arch/ppc/boot/include/mpsc_defs.h:104:
+#define	SDMA_SDC_RFT			(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#164: FILE: arch/ppc/boot/include/mpsc_defs.h:105:
+#define	SDMA_SDC_SFM			(1<<1)
        	            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#164: FILE: arch/ppc/boot/include/mpsc_defs.h:105:
+#define	SDMA_SDC_SFM			(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#165: FILE: arch/ppc/boot/include/mpsc_defs.h:106:
+#define	SDMA_SDC_BLMR			(1<<6)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#165: FILE: arch/ppc/boot/include/mpsc_defs.h:106:
+#define	SDMA_SDC_BLMR			(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#166: FILE: arch/ppc/boot/include/mpsc_defs.h:107:
+#define	SDMA_SDC_BLMT			(1<<7)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#166: FILE: arch/ppc/boot/include/mpsc_defs.h:107:
+#define	SDMA_SDC_BLMT			(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#167: FILE: arch/ppc/boot/include/mpsc_defs.h:108:
+#define	SDMA_SDC_POVR			(1<<8)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: arch/ppc/boot/include/mpsc_defs.h:108:
+#define	SDMA_SDC_POVR			(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#168: FILE: arch/ppc/boot/include/mpsc_defs.h:109:
+#define	SDMA_SDC_RIFB			(1<<9)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#168: FILE: arch/ppc/boot/include/mpsc_defs.h:109:
+#define	SDMA_SDC_RIFB			(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#170: FILE: arch/ppc/boot/include/mpsc_defs.h:111:
+#define	SDMA_SDCM_ERD			(1<<7)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#170: FILE: arch/ppc/boot/include/mpsc_defs.h:111:
+#define	SDMA_SDCM_ERD			(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#171: FILE: arch/ppc/boot/include/mpsc_defs.h:112:
+#define	SDMA_SDCM_AR			(1<<15)
        	            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#171: FILE: arch/ppc/boot/include/mpsc_defs.h:112:
+#define	SDMA_SDCM_AR			(1<<15)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#172: FILE: arch/ppc/boot/include/mpsc_defs.h:113:
+#define	SDMA_SDCM_STD			(1<<16)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: arch/ppc/boot/include/mpsc_defs.h:113:
+#define	SDMA_SDCM_STD			(1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#173: FILE: arch/ppc/boot/include/mpsc_defs.h:114:
+#define	SDMA_SDCM_TXD			(1<<23)
        	             			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#173: FILE: arch/ppc/boot/include/mpsc_defs.h:114:
+#define	SDMA_SDCM_TXD			(1<<23)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#174: FILE: arch/ppc/boot/include/mpsc_defs.h:115:
+#define	SDMA_SDCM_AT			(1<<31)
        	            			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: arch/ppc/boot/include/mpsc_defs.h:115:
+#define	SDMA_SDCM_AT			(1<<31)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#176: FILE: arch/ppc/boot/include/mpsc_defs.h:117:
+#define	SDMA_0_CAUSE_RXBUF		(1<<0)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: arch/ppc/boot/include/mpsc_defs.h:117:
+#define	SDMA_0_CAUSE_RXBUF		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#177: FILE: arch/ppc/boot/include/mpsc_defs.h:118:
+#define	SDMA_0_CAUSE_RXERR		(1<<1)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: arch/ppc/boot/include/mpsc_defs.h:118:
+#define	SDMA_0_CAUSE_RXERR		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#178: FILE: arch/ppc/boot/include/mpsc_defs.h:119:
+#define	SDMA_0_CAUSE_TXBUF		(1<<2)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#178: FILE: arch/ppc/boot/include/mpsc_defs.h:119:
+#define	SDMA_0_CAUSE_TXBUF		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#179: FILE: arch/ppc/boot/include/mpsc_defs.h:120:
+#define	SDMA_0_CAUSE_TXEND		(1<<3)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#179: FILE: arch/ppc/boot/include/mpsc_defs.h:120:
+#define	SDMA_0_CAUSE_TXEND		(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#180: FILE: arch/ppc/boot/include/mpsc_defs.h:121:
+#define	SDMA_1_CAUSE_RXBUF		(1<<8)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#180: FILE: arch/ppc/boot/include/mpsc_defs.h:121:
+#define	SDMA_1_CAUSE_RXBUF		(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#181: FILE: arch/ppc/boot/include/mpsc_defs.h:122:
+#define	SDMA_1_CAUSE_RXERR		(1<<9)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#181: FILE: arch/ppc/boot/include/mpsc_defs.h:122:
+#define	SDMA_1_CAUSE_RXERR		(1<<9)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#182: FILE: arch/ppc/boot/include/mpsc_defs.h:123:
+#define	SDMA_1_CAUSE_TXBUF		(1<<10)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#182: FILE: arch/ppc/boot/include/mpsc_defs.h:123:
+#define	SDMA_1_CAUSE_TXBUF		(1<<10)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#183: FILE: arch/ppc/boot/include/mpsc_defs.h:124:
+#define	SDMA_1_CAUSE_TXEND		(1<<11)
        	                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#183: FILE: arch/ppc/boot/include/mpsc_defs.h:124:
+#define	SDMA_1_CAUSE_TXEND		(1<<11)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: arch/ppc/boot/simple/mv64x60_tty.c:132:
+static u32 com2mem_tab[MV64x60_CPU2MEM_WINDOWS][2] = { $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#305: FILE: arch/ppc/syslib/gt64260_pic.c:300:
+	if ((rc = request_irq(MV64x60_IRQ_CPU_ERR,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: arch/ppc/syslib/gt64260_pic.c:301:
+	if ((rc = request_irq(MV64x60_IRQ_CPU_ERR,
+		gt64260_cpu_error_int_handler, SA_INTERRUPT, CPU_INTR_STR, 0)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#307: FILE: arch/ppc/syslib/gt64260_pic.c:302:
+		printk(KERN_WARNING "Can't register cpu error handler: %d", rc);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#315: FILE: arch/ppc/syslib/gt64260_pic.c:308:
+	if ((rc = request_irq(MV64360_IRQ_PCI0, gt64260_pci_error_int_handler,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: arch/ppc/syslib/gt64260_pic.c:309:
+	if ((rc = request_irq(MV64360_IRQ_PCI0, gt64260_pci_error_int_handler,
+		    SA_INTERRUPT, PCI0_INTR_STR, (void *)0)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#317: FILE: arch/ppc/syslib/gt64260_pic.c:310:
+		printk(KERN_WARNING "Can't register pci 0 error handler: %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: arch/ppc/syslib/gt64260_pic.c:311:
+		printk(KERN_WARNING "Can't register pci 0 error handler: %d",
+			rc);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#326: FILE: arch/ppc/syslib/gt64260_pic.c:317:
+	if ((rc = request_irq(MV64360_IRQ_PCI1, gt64260_pci_error_int_handler,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: arch/ppc/syslib/gt64260_pic.c:318:
+	if ((rc = request_irq(MV64360_IRQ_PCI1, gt64260_pci_error_int_handler,
+		    SA_INTERRUPT, PCI1_INTR_STR, (void *)1)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#328: FILE: arch/ppc/syslib/gt64260_pic.c:319:
+		printk(KERN_WARNING "Can't register pci 1 error handler: %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: arch/ppc/syslib/gt64260_pic.c:320:
+		printk(KERN_WARNING "Can't register pci 1 error handler: %d",
+			rc);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#346: FILE: arch/ppc/syslib/mv64360_pic.c:373:
+	if ((rc = request_irq(MV64x60_IRQ_CPU_ERR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: arch/ppc/syslib/mv64360_pic.c:374:
+	if ((rc = request_irq(MV64x60_IRQ_CPU_ERR,
+		mv64360_cpu_error_int_handler, SA_INTERRUPT, CPU_INTR_STR, 0)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#348: FILE: arch/ppc/syslib/mv64360_pic.c:375:
+		printk(KERN_WARNING "Can't register cpu error handler: %d", rc);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#356: FILE: arch/ppc/syslib/mv64360_pic.c:381:
+	if ((rc = request_irq(MV64360_IRQ_SRAM_PAR_ERR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: arch/ppc/syslib/mv64360_pic.c:382:
+	if ((rc = request_irq(MV64360_IRQ_SRAM_PAR_ERR,
+		mv64360_sram_error_int_handler,SA_INTERRUPT,SRAM_INTR_STR, 0)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: arch/ppc/syslib/mv64360_pic.c:382:
+		mv64360_sram_error_int_handler,SA_INTERRUPT,SRAM_INTR_STR, 0)))
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: arch/ppc/syslib/mv64360_pic.c:382:
+		mv64360_sram_error_int_handler,SA_INTERRUPT,SRAM_INTR_STR, 0)))
 		                                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#358: FILE: arch/ppc/syslib/mv64360_pic.c:383:
+		printk(KERN_WARNING "Can't register SRAM error handler: %d",rc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#358: FILE: arch/ppc/syslib/mv64360_pic.c:383:
+		printk(KERN_WARNING "Can't register SRAM error handler: %d",rc);
 		                                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#368: FILE: arch/ppc/syslib/mv64360_pic.c:397:
+	if ((rc = request_irq(MV64360_IRQ_PCI0, mv64360_pci_error_int_handler,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: arch/ppc/syslib/mv64360_pic.c:398:
+	if ((rc = request_irq(MV64360_IRQ_PCI0, mv64360_pci_error_int_handler,
+		    SA_INTERRUPT, PCI0_INTR_STR, (void *)0)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#370: FILE: arch/ppc/syslib/mv64360_pic.c:399:
+		printk(KERN_WARNING "Can't register pci 0 error handler: %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: arch/ppc/syslib/mv64360_pic.c:400:
+		printk(KERN_WARNING "Can't register pci 0 error handler: %d",
+			rc);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#379: FILE: arch/ppc/syslib/mv64360_pic.c:406:
+	if ((rc = request_irq(MV64360_IRQ_PCI1, mv64360_pci_error_int_handler,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: arch/ppc/syslib/mv64360_pic.c:407:
+	if ((rc = request_irq(MV64360_IRQ_PCI1, mv64360_pci_error_int_handler,
+		    SA_INTERRUPT, PCI1_INTR_STR, (void *)1)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#381: FILE: arch/ppc/syslib/mv64360_pic.c:408:
+		printk(KERN_WARNING "Can't register pci 1 error handler: %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: arch/ppc/syslib/mv64360_pic.c:409:
+		printk(KERN_WARNING "Can't register pci 1 error handler: %d",
+			rc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#629: FILE: arch/ppc/syslib/mv64x60.c:1386:
+	early_write_config_dword(hose, 0, PCI_DEVFN(0,0), gt64260_offset[bus],
 	                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: arch/ppc/syslib/mv64x60.c:1387:
+	early_write_config_dword(hose, 0, PCI_DEVFN(0,0), gt64260_offset[bus],
 		(base << 16));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#678: FILE: arch/ppc/syslib/mv64x60.c:1809:
+		mv64x60_mask(base,20) | 0xc);
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#703: FILE: arch/ppc/syslib/mv64x60.c:1833:
+	early_write_config_dword(hose, 0, PCI_DEVFN(0,0),
 	                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: arch/ppc/syslib/mv64x60.c:1834:
+	early_write_config_dword(hose, 0, PCI_DEVFN(0,0),
+		mv64360_offset[bus][0], (base << 16));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#705: FILE: arch/ppc/syslib/mv64x60.c:1835:
+	early_write_config_dword(hose, 0, PCI_DEVFN(0,0),
 	                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: arch/ppc/syslib/mv64x60.c:1836:
+	early_write_config_dword(hose, 0, PCI_DEVFN(0,0),
+		mv64360_offset[bus][1], 0);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#730: FILE: arch/ppc/syslib/mv64x60.c:2133:
+static u32 dram_selects[MV64x60_CPU2MEM_WINDOWS] __initdata =
+	{ 0xe, 0xd, 0xb, 0x7 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228551.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 8 warnings, 98 checks, 661 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228551.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
