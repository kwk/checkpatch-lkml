ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: Documentation/filesystems/proc.txt:133:
+ smaps  Extension based on maps, presenting the rss size for each $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: Documentation/filesystems/proc.txt:133:
mapped file

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: fs/proc/base.c:186:
+       PROC_TGID_PAGEMAPS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: fs/proc/base.c:187:
+       PROC_TID_PAGEMAPS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: fs/proc/base.c:249:
+       E(PROC_TGID_PAGEMAPS,  "pagemaps", S_IFREG|S_IRUGO),$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#93: FILE: fs/proc/base.c:249:
+       E(PROC_TGID_PAGEMAPS,  "pagemaps", S_IFREG|S_IRUGO),
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#93: FILE: fs/proc/base.c:249:
+       E(PROC_TGID_PAGEMAPS,  "pagemaps", S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/proc/base.c:294:
+       E(PROC_TID_PAGEMAPS,   "pagemaps", S_IFREG|S_IRUGO),$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#103: FILE: fs/proc/base.c:294:
+       E(PROC_TID_PAGEMAPS,   "pagemaps", S_IFREG|S_IRUGO),
                                                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#103: FILE: fs/proc/base.c:294:
+       E(PROC_TID_PAGEMAPS,   "pagemaps", S_IFREG|S_IRUGO),

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: fs/proc/base.c:1783:
+               case PROC_TID_PAGEMAPS:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/proc/base.c:1783:
+               case PROC_TID_PAGEMAPS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: fs/proc/base.c:1784:
+               case PROC_TGID_PAGEMAPS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/proc/base.c:1784:
+               case PROC_TGID_PAGEMAPS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: fs/proc/base.c:1785:
+                       inode->i_fop = &proc_pagemaps_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: fs/proc/base.c:1785:
+                       inode->i_fop = &proc_pagemaps_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: fs/proc/base.c:1786:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: fs/proc/base.c:1786:
+                       break;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#131: FILE: fs/proc/internal.h:43:
+extern struct file_operations proc_pagemaps_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/proc/task_mmu.c:440:
+                               unsigned long addr, unsigned long end,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/proc/task_mmu.c:440:
+                               unsigned long addr, unsigned long end,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: fs/proc/task_mmu.c:441:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/proc/task_mmu.c:441:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/proc/task_mmu.c:443:
+       pte_t *pte, ptent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: fs/proc/task_mmu.c:444:
+       spinlock_t *ptl;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#148: FILE: fs/proc/task_mmu.c:444:
+       spinlock_t *ptl;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/proc/task_mmu.c:445:
+       struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/proc/task_mmu.c:446:
+       int mapcount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: fs/proc/task_mmu.c:448:
+       pte = pte_offset_map_lock(vma->vm_mm, pmd, addr, &ptl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: fs/proc/task_mmu.c:449:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#153: FILE: fs/proc/task_mmu.c:449:
+       do {
+               ptent = *pte;

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: fs/proc/task_mmu.c:450:
+               ptent = *pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: fs/proc/task_mmu.c:450:
+               ptent = *pte;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: fs/proc/task_mmu.c:451:
+               if (pte_present(ptent)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: fs/proc/task_mmu.c:451:
+               if (pte_present(ptent)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#155: FILE: fs/proc/task_mmu.c:451:
+               if (pte_present(ptent)) {
+                       page = vm_normal_page(vma, addr, ptent);

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/proc/task_mmu.c:452:
+                       page = vm_normal_page(vma, addr, ptent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/proc/task_mmu.c:452:
+                       page = vm_normal_page(vma, addr, ptent);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: fs/proc/task_mmu.c:453:
+                       if (page) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: fs/proc/task_mmu.c:453:
+                       if (page) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#157: FILE: fs/proc/task_mmu.c:453:
+                       if (page) {
+                               if (pte_dirty(ptent))

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: fs/proc/task_mmu.c:454:
+                               if (pte_dirty(ptent))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: fs/proc/task_mmu.c:454:
+                               if (pte_dirty(ptent))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#158: FILE: fs/proc/task_mmu.c:454:
+                               if (pte_dirty(ptent))
+                                       mapcount = -page_mapcount(page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: fs/proc/task_mmu.c:455:
+                                       mapcount = -page_mapcount(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/proc/task_mmu.c:455:
+                                       mapcount = -page_mapcount(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: fs/proc/task_mmu.c:456:
+                               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/proc/task_mmu.c:456:
+                               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#160: FILE: fs/proc/task_mmu.c:456:
+                               else
+                                       mapcount = page_mapcount(page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: fs/proc/task_mmu.c:457:
+                                       mapcount = page_mapcount(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/proc/task_mmu.c:457:
+                                       mapcount = page_mapcount(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: fs/proc/task_mmu.c:458:
+                       } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/proc/task_mmu.c:458:
+                       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#162: FILE: fs/proc/task_mmu.c:458:
+                       } else {
+                               mapcount = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: fs/proc/task_mmu.c:459:
+                               mapcount = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: fs/proc/task_mmu.c:459:
+                               mapcount = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: fs/proc/task_mmu.c:460:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: fs/proc/task_mmu.c:460:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: fs/proc/task_mmu.c:461:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/proc/task_mmu.c:461:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: fs/proc/task_mmu.c:462:
+               seq_printf(m, " %d", mapcount);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: fs/proc/task_mmu.c:462:
+               seq_printf(m, " %d", mapcount);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: fs/proc/task_mmu.c:464:
+       } while (pte++, addr += PAGE_SIZE, addr != end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/proc/task_mmu.c:465:
+       seq_putc(m, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/proc/task_mmu.c:467:
+       pte_unmap_unlock(pte - 1, ptl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/proc/task_mmu.c:468:
+       cond_resched();$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#174: FILE: fs/proc/task_mmu.c:470:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: fs/proc/task_mmu.c:472:
+static inline void pagemaps_pmd_range(struct vm_area_struct *vma, pud_t $

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: fs/proc/task_mmu.c:473:
+                               unsigned long addr, unsigned long end,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/proc/task_mmu.c:473:
+                               unsigned long addr, unsigned long end,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: fs/proc/task_mmu.c:474:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: fs/proc/task_mmu.c:474:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: fs/proc/task_mmu.c:476:
+       pmd_t *pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: fs/proc/task_mmu.c:477:
+       unsigned long next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/proc/task_mmu.c:479:
+       pmd = pmd_offset(pud, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: fs/proc/task_mmu.c:480:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#185: FILE: fs/proc/task_mmu.c:480:
+       do {
+               next = pmd_addr_end(addr, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/proc/task_mmu.c:481:
+               next = pmd_addr_end(addr, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/proc/task_mmu.c:481:
+               next = pmd_addr_end(addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: fs/proc/task_mmu.c:482:
+               if (pmd_none_or_clear_bad(pmd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: fs/proc/task_mmu.c:482:
+               if (pmd_none_or_clear_bad(pmd))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#187: FILE: fs/proc/task_mmu.c:482:
+               if (pmd_none_or_clear_bad(pmd))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: fs/proc/task_mmu.c:483:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: fs/proc/task_mmu.c:483:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: fs/proc/task_mmu.c:484:
+               pagemaps_pte_range(vma, pmd, addr, next, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: fs/proc/task_mmu.c:484:
+               pagemaps_pte_range(vma, pmd, addr, next, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: fs/proc/task_mmu.c:485:
+       } while (pmd++, addr = next, addr != end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: fs/proc/task_mmu.c:488:
+static inline void pagemaps_pud_range(struct vm_area_struct *vma, pgd_t $

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: fs/proc/task_mmu.c:489:
+                               unsigned long addr, unsigned long end,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: fs/proc/task_mmu.c:489:
+                               unsigned long addr, unsigned long end,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: fs/proc/task_mmu.c:490:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: fs/proc/task_mmu.c:490:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: fs/proc/task_mmu.c:492:
+       pud_t *pud;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: fs/proc/task_mmu.c:493:
+       unsigned long next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: fs/proc/task_mmu.c:495:
+       pud = pud_offset(pgd, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: fs/proc/task_mmu.c:496:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#202: FILE: fs/proc/task_mmu.c:496:
+       do {
+               next = pud_addr_end(addr, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: fs/proc/task_mmu.c:497:
+               next = pud_addr_end(addr, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/proc/task_mmu.c:497:
+               next = pud_addr_end(addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: fs/proc/task_mmu.c:498:
+               if (pud_none_or_clear_bad(pud))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: fs/proc/task_mmu.c:498:
+               if (pud_none_or_clear_bad(pud))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#204: FILE: fs/proc/task_mmu.c:498:
+               if (pud_none_or_clear_bad(pud))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: fs/proc/task_mmu.c:499:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: fs/proc/task_mmu.c:499:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: fs/proc/task_mmu.c:500:
+               pagemaps_pmd_range(vma, pud, addr, next, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: fs/proc/task_mmu.c:500:
+               pagemaps_pmd_range(vma, pud, addr, next, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: fs/proc/task_mmu.c:501:
+       } while (pud++, addr = next, addr != end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: fs/proc/task_mmu.c:505:
+                               unsigned long addr, unsigned long end,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: fs/proc/task_mmu.c:505:
+static inline void pagemaps_pgd_range(struct vm_area_struct *vma,
+                               unsigned long addr, unsigned long end,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/proc/task_mmu.c:505:
+                               unsigned long addr, unsigned long end,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: fs/proc/task_mmu.c:506:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: fs/proc/task_mmu.c:506:
+                               struct seq_file *m)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/proc/task_mmu.c:508:
+       pgd_t *pgd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/proc/task_mmu.c:509:
+       unsigned long next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/proc/task_mmu.c:511:
+       pgd = pgd_offset(vma->vm_mm, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/proc/task_mmu.c:512:
+       do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#218: FILE: fs/proc/task_mmu.c:512:
+       do {
+               next = pgd_addr_end(addr, end);

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: fs/proc/task_mmu.c:513:
+               next = pgd_addr_end(addr, end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/proc/task_mmu.c:513:
+               next = pgd_addr_end(addr, end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: fs/proc/task_mmu.c:514:
+               if (pgd_none_or_clear_bad(pgd))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/proc/task_mmu.c:514:
+               if (pgd_none_or_clear_bad(pgd))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#220: FILE: fs/proc/task_mmu.c:514:
+               if (pgd_none_or_clear_bad(pgd))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: fs/proc/task_mmu.c:515:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/proc/task_mmu.c:515:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: fs/proc/task_mmu.c:516:
+               pagemaps_pud_range(vma, pgd, addr, next, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/proc/task_mmu.c:516:
+               pagemaps_pud_range(vma, pgd, addr, next, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/proc/task_mmu.c:517:
+       } while (pgd++, addr = next, addr != end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: fs/proc/task_mmu.c:522:
+       struct vm_area_struct *vma = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: fs/proc/task_mmu.c:524:
+       show_map_internal(m, v, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/proc/task_mmu.c:525:
+       if (vma->vm_mm && !is_vm_hugetlb_page(vma))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#231: FILE: fs/proc/task_mmu.c:525:
+       if (vma->vm_mm && !is_vm_hugetlb_page(vma))
+               pagemaps_pgd_range(vma, vma->vm_start, vma->vm_end, m);

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: fs/proc/task_mmu.c:526:
+               pagemaps_pgd_range(vma, vma->vm_start, vma->vm_end, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/proc/task_mmu.c:526:
+               pagemaps_pgd_range(vma, vma->vm_start, vma->vm_end, m);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: fs/proc/task_mmu.c:527:
+       return 0;$

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#236: FILE: fs/proc/task_mmu.c:530:
+static struct seq_operations proc_pid_pagemaps_op = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: fs/proc/task_mmu.c:531:
+       .start  = m_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: fs/proc/task_mmu.c:532:
+       .next   = m_next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: fs/proc/task_mmu.c:533:
+       .stop   = m_stop,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: fs/proc/task_mmu.c:534:
+       .show   = show_pagemap$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: fs/proc/task_mmu.c:539:
+       return do_maps_open(inode, file, &proc_pid_pagemaps_op);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#248: FILE: fs/proc/task_mmu.c:542:
+struct file_operations proc_pagemaps_operations = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: fs/proc/task_mmu.c:543:
+       .open           = pagemaps_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: fs/proc/task_mmu.c:544:
+       .read           = seq_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: fs/proc/task_mmu.c:545:
+       .llseek         = seq_lseek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: fs/proc/task_mmu.c:546:
+       .release        = seq_release_private,$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 98 warnings, 5 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
