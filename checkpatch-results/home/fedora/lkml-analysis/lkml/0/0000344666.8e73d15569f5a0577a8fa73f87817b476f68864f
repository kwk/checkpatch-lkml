ERROR:INITIALISED_STATIC: do not initialise statics to 0
#82: FILE: fs/lockd/svc.c:66:
+static const unsigned long	nlm_grace_period_min = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: fs/lockd/svc.c:72:
+static struct ctl_table_header * nlm_sysctl_table;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#113: FILE: fs/lockd/svc.c:329:
+		.extra1		= (unsigned long *) &nlm_grace_period_min,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#114: FILE: fs/lockd/svc.c:330:
+		.extra2		= (unsigned long *) &nlm_grace_period_max,

CHECK:SPACING: No space is necessary after a cast
#123: FILE: fs/lockd/svc.c:339:
+		.extra1		= (unsigned long *) &nlm_timeout_min,

CHECK:SPACING: No space is necessary after a cast
#124: FILE: fs/lockd/svc.c:340:
+		.extra2		= (unsigned long *) &nlm_timeout_max,

CHECK:SPACING: No space is necessary after a cast
#133: FILE: fs/lockd/svc.c:349:
+		.extra1		= (int *) &nlm_port_min,

CHECK:SPACING: No space is necessary after a cast
#134: FILE: fs/lockd/svc.c:350:
+		.extra2		= (int *) &nlm_port_max,

CHECK:SPACING: No space is necessary after a cast
#143: FILE: fs/lockd/svc.c:359:
+		.extra1		= (int *) &nlm_port_min,

CHECK:SPACING: No space is necessary after a cast
#144: FILE: fs/lockd/svc.c:360:
+		.extra2		= (int *) &nlm_port_max,

CHECK:SPACING: No space is necessary after a cast
#180: FILE: fs/lockd/svc.c:396:
+	*((int *) kp->arg) = num;					\

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000344666.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 0 warnings, 9 checks, 207 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000344666.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
