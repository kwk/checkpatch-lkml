ERROR:SPACING: space required after that ',' (ctx:VxV)
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);
                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Xstrncpy>
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#30: FILE: drivers/acpi/cmbatt.c:170:
+#define Xstrncpy(a, b, c) if (b) strncpy(a,b,c); else strncpy(a, "unknown", c);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#37: FILE: drivers/acpi/cmbatt.c:173:
+	Xstrncpy(result->model_number, objs[9].string.pointer, MAX_BATT_STRLEN-1);
 	                                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#38: FILE: drivers/acpi/cmbatt.c:174:
+	Xstrncpy(result->serial_number, objs[10].string.pointer, MAX_BATT_STRLEN-1);
 	                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#39: FILE: drivers/acpi/cmbatt.c:175:
+	Xstrncpy(result->battery_type, objs[11].string.pointer, MAX_BATT_STRLEN-1);
 	                                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#40: FILE: drivers/acpi/cmbatt.c:176:
+	Xstrncpy(result->oem_info, objs[12].string.pointer, MAX_BATT_STRLEN-1);
 	                                                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#56: FILE: drivers/acpi/namespace/nsxfobj.c:594:
+	printk("Running sta on %x: ", node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#60: FILE: drivers/acpi/namespace/nsxfobj.c:597:
+		printk("error (%x)\n", status);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#67: FILE: drivers/acpi/namespace/nsxfobj.c:603:
+		printk("not there\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000552591.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 8 checks, 35 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000552591.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
