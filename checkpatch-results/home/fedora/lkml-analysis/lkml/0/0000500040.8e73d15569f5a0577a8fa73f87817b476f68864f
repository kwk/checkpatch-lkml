WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -urN -x /home/mckenney/dontdiff linux-2.4.14/include/asm-alpha/system.h linux-2.4.14.read_barrier/include/asm-alpha/system.h

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#50: FILE: include/asm-alpha/system.h:145:
+#define memory_barrier() \
 __asm__ __volatile__("mb": : :"memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#54: FILE: include/asm-alpha/system.h:148:
+#define read_barrier() \
 __asm__ __volatile__("mb": : :"memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#58: FILE: include/asm-alpha/system.h:151:
+#define read_barrier_depends() \
+__asm__ __volatile__("mb": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#59: FILE: include/asm-alpha/system.h:152:
+__asm__ __volatile__("mb": : :"memory")
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#59: FILE: include/asm-alpha/system.h:152:
+__asm__ __volatile__("mb": : :"memory")
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#61: FILE: include/asm-alpha/system.h:154:
+#define write_barrier() \
 __asm__ __volatile__("wmb": : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#64: FILE: include/asm-alpha/system.h:157:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#65: FILE: include/asm-alpha/system.h:158:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#66: FILE: include/asm-alpha/system.h:159:
+#define wmb()	write_barrier()

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#90: FILE: include/asm-arm/system.h:39:
+#define memory_barrier() __asm__ __volatile__ ("" : : : "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#91: FILE: include/asm-arm/system.h:40:
+#define read_barrier() mb()

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: include/asm-arm/system.h:41:
+#define read_barrier_depends() do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#93: FILE: include/asm-arm/system.h:42:
+#define write_barrier() mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#96: FILE: include/asm-arm/system.h:45:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#97: FILE: include/asm-arm/system.h:46:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#98: FILE: include/asm-arm/system.h:47:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#114: FILE: include/asm-arm/system.h:82:
+#define smp_read_barrier_depends()		do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#128: FILE: include/asm-cris/system.h:150:
+#define memory_barrier() __asm__ __volatile__ ("" : : : "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#129: FILE: include/asm-cris/system.h:151:
+#define read_barrier() mb()

ERROR:SPACING: space required before the open parenthesis '('
#130: FILE: include/asm-cris/system.h:152:
+#define read_barrier_depends() do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#131: FILE: include/asm-cris/system.h:153:
+#define write_barrier() mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#133: FILE: include/asm-cris/system.h:155:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#134: FILE: include/asm-cris/system.h:156:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#135: FILE: include/asm-cris/system.h:157:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#145: FILE: include/asm-cris/system.h:167:
+#define smp_read_barrier_depends()     do { } while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: include/asm-cris/system.h.orig:19:
+static inline unsigned long rdvr(void) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: include/asm-cris/system.h.orig:71:
+#define local_irq_save(x) __asm__ __volatile__ ("move $ccr,%0\n\tdi" : "=rm" (x) : : "memory"); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: include/asm-cris/system.h.orig:101:
+       : "memory","r0");    $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#336: FILE: include/asm-i386/system.h:289:
+#define memory_barrier() \
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#337: FILE: include/asm-i386/system.h:290:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#337: FILE: include/asm-i386/system.h:290:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                                  ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#338: FILE: include/asm-i386/system.h:291:
+#define read_barrier()	mb()

ERROR:SPACING: space required before the open parenthesis '('
#339: FILE: include/asm-i386/system.h:292:
+#define read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#343: FILE: include/asm-i386/system.h:295:
+#define write_barrier() \
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#344: FILE: include/asm-i386/system.h:296:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#344: FILE: include/asm-i386/system.h:296:
+		__asm__ __volatile__ ("lock; addl $0,0(%%esp)": : :"memory")
 		                                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#347: FILE: include/asm-i386/system.h:298:
+#define write_barrier() \
+		__asm__ __volatile__ ("": : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#348: FILE: include/asm-i386/system.h:299:
+		__asm__ __volatile__ ("": : :"memory")
 		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#348: FILE: include/asm-i386/system.h:299:
+		__asm__ __volatile__ ("": : :"memory")
 		                            ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#351: FILE: include/asm-i386/system.h:302:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#352: FILE: include/asm-i386/system.h:303:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#353: FILE: include/asm-i386/system.h:304:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#363: FILE: include/asm-i386/system.h:314:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: include/asm-i386/system.h.orig:266:
+    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#658: FILE: include/asm-i386/system.h.orig:288:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: include/asm-i386/system.h.rej:7:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#745: FILE: include/asm-i386/system.h.rej:17:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: include/asm-i386/system.h.rej:24:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: include/asm-i386/system.h.rej:36:
+  $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#799: FILE: include/asm-ia64/system.h:102:
+#define memory_barrier()	__asm__ __volatile__ ("mf" ::: "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#800: FILE: include/asm-ia64/system.h:103:
+#define read_barrier()		mb()

ERROR:SPACING: space required before the open parenthesis '('
#801: FILE: include/asm-ia64/system.h:104:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#802: FILE: include/asm-ia64/system.h:105:
+#define write_barrier()		mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#804: FILE: include/asm-ia64/system.h:107:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#805: FILE: include/asm-ia64/system.h:108:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#806: FILE: include/asm-ia64/system.h:109:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#816: FILE: include/asm-ia64/system.h:119:
+# define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#832: FILE: include/asm-m68k/system.h:83:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#837: FILE: include/asm-m68k/system.h:88:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#838: FILE: include/asm-m68k/system.h:89:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#839: FILE: include/asm-m68k/system.h:90:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#843: FILE: include/asm-m68k/system.h:94:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#857: FILE: include/asm-mips/system.h:152:
+#define read_barrier()		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#858: FILE: include/asm-mips/system.h:153:
+#define read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#865: FILE: include/asm-mips/system.h:159:
+#define memory_barrier()				\
 __asm__ __volatile__(					\
 	"# prevent instructions being moved around\n\t"	\
 	".set\tnoreorder\n\t"				\

WARNING:MEMORY_BARRIER: memory barrier without comment
#875: FILE: include/asm-mips/system.h:169:
+#define read_barrier() mb()

ERROR:SPACING: space required before the open parenthesis '('
#876: FILE: include/asm-mips/system.h:170:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#877: FILE: include/asm-mips/system.h:171:
+#define write_barrier() mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#881: FILE: include/asm-mips/system.h:175:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#882: FILE: include/asm-mips/system.h:176:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#883: FILE: include/asm-mips/system.h:177:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#893: FILE: include/asm-mips/system.h:187:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#905: FILE: include/asm-mips64/system.h:140:
+#define memory_barrier()				\
 __asm__ __volatile__(					\
 	"# prevent instructions being moved around\n\t"	\
 	".set\tnoreorder\n\t"				\

WARNING:MEMORY_BARRIER: memory barrier without comment
#915: FILE: include/asm-mips64/system.h:149:
+#define read_barrier() mb()

ERROR:SPACING: space required before the open parenthesis '('
#916: FILE: include/asm-mips64/system.h:150:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#917: FILE: include/asm-mips64/system.h:151:
+#define write_barrier() mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#919: FILE: include/asm-mips64/system.h:153:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#920: FILE: include/asm-mips64/system.h:154:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#921: FILE: include/asm-mips64/system.h:155:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#931: FILE: include/asm-mips64/system.h:165:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#942: FILE: include/asm-parisc/system.h:53:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#950: FILE: include/asm-parisc/system.h:62:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#960: FILE: include/asm-parisc/system.h:125:
+#define memory_barrier()  __asm__ __volatile__ ("sync" : : :"memory")
                                                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#960: FILE: include/asm-parisc/system.h:125:
+#define memory_barrier()  __asm__ __volatile__ ("sync" : : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#961: FILE: include/asm-parisc/system.h:126:
+#define read_barrier() mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#962: FILE: include/asm-parisc/system.h:127:
+#define write_barrier() mb()

ERROR:SPACING: space required before the open parenthesis '('
#963: FILE: include/asm-parisc/system.h:128:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#965: FILE: include/asm-parisc/system.h:130:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#966: FILE: include/asm-parisc/system.h:131:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#967: FILE: include/asm-parisc/system.h:132:
+#define wmb()	write_barrier()

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#994: FILE: include/asm-ppc/system.h:35:
+#define memory_barrier()  __asm__ __volatile__ ("sync" : : : "memory")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#995: FILE: include/asm-ppc/system.h:36:
+#define read_barrier()  __asm__ __volatile__ ("sync" : : : "memory")

ERROR:SPACING: space required before the open parenthesis '('
#996: FILE: include/asm-ppc/system.h:37:
+#define read_barrier_depends()  do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#997: FILE: include/asm-ppc/system.h:38:
+#define write_barrier()  __asm__ __volatile__ ("eieio" : : : "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#999: FILE: include/asm-ppc/system.h:40:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1000: FILE: include/asm-ppc/system.h:41:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1001: FILE: include/asm-ppc/system.h:42:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#1014: FILE: include/asm-ppc/system.h:55:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1030: FILE: include/asm-s390/system.h:120:
+#define read_barrier_depends() do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1039: FILE: include/asm-s390/system.h:129:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1040: FILE: include/asm-s390/system.h:130:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1041: FILE: include/asm-s390/system.h:131:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#1057: FILE: include/asm-s390x/system.h:133:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1069: FILE: include/asm-s390x/system.h:145:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1070: FILE: include/asm-s390x/system.h:146:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1071: FILE: include/asm-s390x/system.h:147:
+#define wmb()	write_barrier()

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1085: FILE: include/asm-sh/system.h:89:
+#define memory_barrier()	__asm__ __volatile__ ("": : :"memory")
                         	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1085: FILE: include/asm-sh/system.h:89:
+#define memory_barrier()	__asm__ __volatile__ ("": : :"memory")
                         	                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1085: FILE: include/asm-sh/system.h:89:
+#define memory_barrier()	__asm__ __volatile__ ("": : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#1086: FILE: include/asm-sh/system.h:90:
+#define read_barrier()		mb()

ERROR:SPACING: space required before the open parenthesis '('
#1087: FILE: include/asm-sh/system.h:91:
+#define read_barrier_depends()	do { } while(0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1088: FILE: include/asm-sh/system.h:92:
+#define write_barrier()		__asm__ __volatile__ ("": : :"memory")
                        		                        ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1088: FILE: include/asm-sh/system.h:92:
+#define write_barrier()		__asm__ __volatile__ ("": : :"memory")
                        		                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1088: FILE: include/asm-sh/system.h:92:
+#define write_barrier()		__asm__ __volatile__ ("": : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#1090: FILE: include/asm-sh/system.h:94:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1091: FILE: include/asm-sh/system.h:95:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1092: FILE: include/asm-sh/system.h:96:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#1102: FILE: include/asm-sh/system.h:106:
+#define smp_read_barrier_depends()	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1116: FILE: include/asm-sparc/system.h:278:
+#define memory_barrier()	__asm__ __volatile__ ("" : : : "memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#1117: FILE: include/asm-sparc/system.h:279:
+#define read_barrier()		mb()

ERROR:SPACING: space required before the open parenthesis '('
#1118: FILE: include/asm-sparc/system.h:280:
+#define read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1119: FILE: include/asm-sparc/system.h:281:
+#define write_barrier()		mb()

ERROR:SPACING: space required before the open parenthesis '('
#1124: FILE: include/asm-sparc/system.h:286:
+#define smp_read_barrier_depends()	do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1127: FILE: include/asm-sparc/system.h:289:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1128: FILE: include/asm-sparc/system.h:290:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1129: FILE: include/asm-sparc/system.h:291:
+#define wmb()	write_barrier()

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1141: FILE: include/asm-sparc64/system.h:99:
+#define memory_barrier()		\
 	membar("#LoadLoad | #LoadStore | #StoreStore | #StoreLoad");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required before the open parenthesis '('
#1146: FILE: include/asm-sparc64/system.h:102:
+#define read_barrier_depends()		do { } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1153: FILE: include/asm-sparc64/system.h:109:
+#define mb()	memory_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1154: FILE: include/asm-sparc64/system.h:110:
+#define rmb()	read_barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#1155: FILE: include/asm-sparc64/system.h:111:
+#define wmb()	write_barrier()

ERROR:SPACING: space required before the open parenthesis '('
#1165: FILE: include/asm-sparc64/system.h:121:
+#define smp_read_barrier_depends()	do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500040.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 70 errors, 63 warnings, 0 checks, 1048 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000500040.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
