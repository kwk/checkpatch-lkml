WARNING:TYPO_SPELLING: 'equivelant' may be misspelled - perhaps 'equivalent'?
#27: 
a nearly equivelant patch (down to some of the same identifier names :-)
         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
diff -urN -X dontdiff linux-2.6.0-test1-VIRGIN/include/asm-alpha/page.h linux-2.6.0-test1-getorder/include/asm-alpha/page.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: include/asm-generic/get_order.h:1:
+#ifndef _ASM_GENERIC_GET_ORDER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/asm-generic/get_order.h:5:
+extern int __get_order_called_with_too_large_of_argument(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#168: FILE: include/asm-generic/get_order.h:7:
+#define __constant_get_order(size)					\
+		(((unsigned long) (size) <= PAGE_SIZE <<  0) ?  0 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  1) ?  1 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  2) ?  2 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  3) ?  3 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  4) ?  4 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  5) ?  5 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  6) ?  6 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  7) ?  7 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  8) ?  8 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE <<  9) ?  9 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 10) ? 10 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 11) ? 11 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 12) ? 12 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 13) ? 13 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 14) ? 14 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 15) ? 15 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 16) ? 16 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 17) ? 17 :	\
+		 ((unsigned long) (size) <= PAGE_SIZE << 18) ? 18 :	\
+		 __get_order_called_with_too_large_of_argument())

CHECK:SPACING: No space is necessary after a cast
#169: FILE: include/asm-generic/get_order.h:8:
+		(((unsigned long) (size) <= PAGE_SIZE <<  0) ?  0 :	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#170: FILE: include/asm-generic/get_order.h:9:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  1) ?  1 :	\

CHECK:SPACING: No space is necessary after a cast
#171: FILE: include/asm-generic/get_order.h:10:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  2) ?  2 :	\

CHECK:SPACING: No space is necessary after a cast
#172: FILE: include/asm-generic/get_order.h:11:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  3) ?  3 :	\

CHECK:SPACING: No space is necessary after a cast
#173: FILE: include/asm-generic/get_order.h:12:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  4) ?  4 :	\

CHECK:SPACING: No space is necessary after a cast
#174: FILE: include/asm-generic/get_order.h:13:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  5) ?  5 :	\

CHECK:SPACING: No space is necessary after a cast
#175: FILE: include/asm-generic/get_order.h:14:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  6) ?  6 :	\

CHECK:SPACING: No space is necessary after a cast
#176: FILE: include/asm-generic/get_order.h:15:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  7) ?  7 :	\

CHECK:SPACING: No space is necessary after a cast
#177: FILE: include/asm-generic/get_order.h:16:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  8) ?  8 :	\

CHECK:SPACING: No space is necessary after a cast
#178: FILE: include/asm-generic/get_order.h:17:
+		 ((unsigned long) (size) <= PAGE_SIZE <<  9) ?  9 :	\

CHECK:SPACING: No space is necessary after a cast
#179: FILE: include/asm-generic/get_order.h:18:
+		 ((unsigned long) (size) <= PAGE_SIZE << 10) ? 10 :	\

CHECK:SPACING: No space is necessary after a cast
#180: FILE: include/asm-generic/get_order.h:19:
+		 ((unsigned long) (size) <= PAGE_SIZE << 11) ? 11 :	\

CHECK:SPACING: No space is necessary after a cast
#181: FILE: include/asm-generic/get_order.h:20:
+		 ((unsigned long) (size) <= PAGE_SIZE << 12) ? 12 :	\

CHECK:SPACING: No space is necessary after a cast
#182: FILE: include/asm-generic/get_order.h:21:
+		 ((unsigned long) (size) <= PAGE_SIZE << 13) ? 13 :	\

CHECK:SPACING: No space is necessary after a cast
#183: FILE: include/asm-generic/get_order.h:22:
+		 ((unsigned long) (size) <= PAGE_SIZE << 14) ? 14 :	\

CHECK:SPACING: No space is necessary after a cast
#184: FILE: include/asm-generic/get_order.h:23:
+		 ((unsigned long) (size) <= PAGE_SIZE << 15) ? 15 :	\

CHECK:SPACING: No space is necessary after a cast
#185: FILE: include/asm-generic/get_order.h:24:
+		 ((unsigned long) (size) <= PAGE_SIZE << 16) ? 16 :	\

CHECK:SPACING: No space is necessary after a cast
#186: FILE: include/asm-generic/get_order.h:25:
+		 ((unsigned long) (size) <= PAGE_SIZE << 17) ? 17 :	\

CHECK:SPACING: No space is necessary after a cast
#187: FILE: include/asm-generic/get_order.h:26:
+		 ((unsigned long) (size) <= PAGE_SIZE << 18) ? 18 :	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/asm-generic/get_order.h:30:
+extern int __get_order(unsigned long size);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#198: FILE: include/asm-generic/get_order.h:37:
+#define get_order(size)					\
+		(__builtin_constant_p(size) ?		\
+		  __constant_get_order(size) :		\
+		  __get_order(size))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: include/asm-ia64/page.h:141:
+__get_order (unsigned long size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#268: FILE: include/asm-ia64/page.h:152:
 }
+#define __HAVE_ARCH_GET_ORDER

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#401: FILE: include/asm-ppc/page.h:131:
+extern __inline__ int __get_order(unsigned long size)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#409: FILE: include/asm-ppc/page.h:139:
 }
+#define __HAVE_ARCH_GET_ORDER

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#586: FILE: lib/get_order.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#587: FILE: lib/get_order.c:2:
+ *  linux/lib/get_order.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000351882.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 7 warnings, 25 checks, 469 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000351882.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
