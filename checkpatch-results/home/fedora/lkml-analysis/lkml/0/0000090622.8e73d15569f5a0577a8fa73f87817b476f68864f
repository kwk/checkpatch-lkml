WARNING:TYPO_SPELLING: 'wich' may be misspelled - perhaps 'which'?
#67: 
      fix typos "wich" -> "which"
                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: Documentation/networking/packet_mmap.txt:220:
+allocator which is at the end the responsible for doing the allocation and $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: Documentation/networking/packet_mmap.txt:221:
+hence which imposes the maximum memory that kmalloc can allocate. $

WARNING:TYPO_SPELLING: 'Suposse' may be misspelled - perhaps 'Suppose'?
#231: FILE: Documentation/networking/packet_mmap.txt:257:
+Suposse the following parameters, which apply for 2.6 kernel and an
 ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: Documentation/networking/packet_mmap.txt:363:
+TP_STATUS_CSUMNOTREADY: currently it's used for outgoing IP packets which $

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#267: FILE: MAINTAINERS:2068:
+P:	Christoph Hellwig
+M:	hch@infradead.org

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#284: FILE: block/elevator.c:731:
+	BUG_ON(elevator_find(e->elevator_name));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: drivers/block/DAC960.c:231:
+	BUG_ON(cpu_end > loaf->cpu_base + loaf->length);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#326: FILE: drivers/block/cciss.c:2364:
+	BUG_ON(creq->nr_phys_segments > MAXSGENTRIES);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: drivers/block/cciss_scsi.c:1319:
+	BUG_ON(cmd->cmd_len > sizeof(cp->Request.CDB));

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#339: FILE: drivers/block/cciss_scsi.c:1319:
+	BUG_ON(cmd->cmd_len > sizeof(cp->Request.CDB));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: drivers/block/cpqarray.c:909:
+	BUG_ON(creq->nr_phys_segments > SG_MAX);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#469: FILE: drivers/input/serio/hil_mlc.c:559:
+	BUG_ON(down_trylock(&(mlc->isem)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mlc->isem
#469: FILE: drivers/input/serio/hil_mlc.c:559:
+	BUG_ON(down_trylock(&(mlc->isem)));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#495: FILE: drivers/md/bitmap.c:1312:
+		BUG_ON((*bmc & COUNTER_MAX) == COUNTER_MAX);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#509: FILE: drivers/md/dm-hw-handler.c:86:
+	BUG_ON(hwhi->use < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: drivers/parisc/sba_iommu.c:1727:
+		BUG_ON(err < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#534: FILE: drivers/parisc/sba_iommu.c:2186:
+	BUG_ON((t!=HPHW_IOA) && (t!=HPHW_BCPORT));

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#534: FILE: drivers/parisc/sba_iommu.c:2186:
+	BUG_ON((t!=HPHW_IOA) && (t!=HPHW_BCPORT));
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#534: FILE: drivers/parisc/sba_iommu.c:2186:
+	BUG_ON((t!=HPHW_IOA) && (t!=HPHW_BCPORT));
 	                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#544: FILE: drivers/parisc/sba_iommu.c:2228:
+	BUG_ON((t!=HPHW_IOA) && (t!=HPHW_BCPORT));

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#544: FILE: drivers/parisc/sba_iommu.c:2228:
+	BUG_ON((t!=HPHW_IOA) && (t!=HPHW_BCPORT));
 	         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#544: FILE: drivers/parisc/sba_iommu.c:2228:
+	BUG_ON((t!=HPHW_IOA) && (t!=HPHW_BCPORT));
 	                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#558: FILE: drivers/parisc/superio.c:160:
+	BUG_ON(!pdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#559: FILE: drivers/parisc/superio.c:161:
+	BUG_ON(!sio->usb_pdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#569: FILE: drivers/parisc/superio.c:477:
+	BUG_ON(!sio->suckyio_irq_enabled);	/* Enabled by PCI_FIXUP_FINAL */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#584: FILE: drivers/s390/block/dasd.c:545:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

ERROR:SPACING: space prohibited after that open parenthesis '('
#584: FILE: drivers/s390/block/dasd.c:545:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!magic"
#584: FILE: drivers/s390/block/dasd.c:545:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: drivers/s390/block/dasd.c:546:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||
+	     (cplength*sizeof(struct ccw1)) > PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#585: FILE: drivers/s390/block/dasd.c:546:
+	     (cplength*sizeof(struct ccw1)) > PAGE_SIZE);
 	              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#596: FILE: drivers/s390/block/dasd.c:586:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

ERROR:SPACING: space prohibited after that open parenthesis '('
#596: FILE: drivers/s390/block/dasd.c:586:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!magic"
#596: FILE: drivers/s390/block/dasd.c:586:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: drivers/s390/block/dasd.c:587:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||
+	     (cplength*sizeof(struct ccw1)) > PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#597: FILE: drivers/s390/block/dasd.c:587:
+	     (cplength*sizeof(struct ccw1)) > PAGE_SIZE);
 	              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#637: FILE: drivers/video/bw2.c:330:
+		BUG_ON(!sdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#651: FILE: drivers/video/ffb.c:469:
+	BUG_ON(rect->rop != ROP_COPY && rect->rop != ROP_XOR);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/video/sstfb.c:35:
+      which one should i use ? is there any preferred one ? It seems ARGB is$

CHECK:CAMELCASE: Avoid CamelCase: <It>
#664: FILE: drivers/video/sstfb.c:35:
+      which one should i use ? is there any preferred one ? It seems ARGB is

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#704: FILE: fs/binfmt_elf_fdpic.c:575:
+	BUG_ON(csp != sp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#717: FILE: fs/coda/cache.c:54:
+	BUG_ON(!sbi);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#731: FILE: fs/coda/cnode.c:123:
+	BUG_ON(!coda_fideq(&cii->c_fid, oldfid));

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: fs/ufs/super.c:578:
 			"mount -t ufs -o ufstype="
+			"sun|sunx86|44bsd|ufs2|5xbsd|old|hp|nextstep|nextstep-cd|openstep ...\n\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#779: FILE: ipc/msg.c:223:
+		BUG_ON(msq==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#779: FILE: ipc/msg.c:223:
+		BUG_ON(msq==NULL);
 		          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msq"
#779: FILE: ipc/msg.c:223:
+		BUG_ON(msq==NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#793: FILE: kernel/cpu.c:226:
+	BUG_ON(!cpu_online(cpu));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#807: FILE: lib/swiotlb.c:299:
+	BUG_ON(!nslots);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#818: FILE: lib/swiotlb.c:419:
+			BUG_ON(dir != DMA_TO_DEVICE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#826: FILE: lib/swiotlb.c:425:
+			BUG_ON(dir != DMA_FROM_DEVICE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#836: FILE: lib/swiotlb.c:531:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#846: FILE: lib/swiotlb.c:593:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#856: FILE: lib/swiotlb.c:616:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#866: FILE: lib/swiotlb.c:647:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#876: FILE: lib/swiotlb.c:694:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#886: FILE: lib/swiotlb.c:727:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#896: FILE: lib/swiotlb.c:749:
+	BUG_ON(dir == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#936: FILE: sound/sparc/cs4231.c:614:
+		BUG_ON(period_size >= (1 << 24));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#946: FILE: sound/sparc/cs4231.c:1081:
+	BUG_ON(runtime->period_size > 0xffff + 1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 40 warnings, 10 checks, 624 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
