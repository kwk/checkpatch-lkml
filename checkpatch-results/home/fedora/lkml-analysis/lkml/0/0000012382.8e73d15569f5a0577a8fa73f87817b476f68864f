WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
	- create or change an event sets. By default a context is created with only one

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#75: 
	- delete any explicitely created event set
	             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: perfmon/perfmon_syscalls.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: perfmon/perfmon_syscalls.c:22:
+ * ^Ihttp://perfmon2.sf.net$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#123: FILE: perfmon/perfmon_syscalls.c:34:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#124: FILE: perfmon/perfmon_syscalls.c:35:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#126: FILE: perfmon/perfmon_syscalls.c:37:
+ * 02111-1307 USA
+  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#131: FILE: perfmon/perfmon_syscalls.c:42:
+#include <asm/uaccess.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: perfmon/perfmon_syscalls.c:47:
+ * ^I- any thread with access to the file descriptor of a context can$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#137: FILE: perfmon/perfmon_syscalls.c:48:
+ * ^I  potentially issue perfmon calls$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: perfmon/perfmon_syscalls.c:50:
+ * ^I- calls must be serialized to guarantee correctness$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: perfmon/perfmon_syscalls.c:52:
+ * ^I- as soon as a context is attached to a thread or CPU, it may be$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: perfmon/perfmon_syscalls.c:53:
+ * ^I  actively monitoring. On some architectures, such as IA-64, this$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: perfmon/perfmon_syscalls.c:54:
+ * ^I  is true even though the pfm_start() call has not been made. This$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: perfmon/perfmon_syscalls.c:55:
+ * ^I  comes from the fact that on some architectures, it is possible to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: perfmon/perfmon_syscalls.c:56:
+ * ^I  start/stop monitoring from userland.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: perfmon/perfmon_syscalls.c:71:
+ * ^I- we mask ALL interrupts instead of just the PMU interrupt because we$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: perfmon/perfmon_syscalls.c:72:
+ * ^I  also need to protect against timer interrupts which could trigger$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: perfmon/perfmon_syscalls.c:73:
+ * ^I  a set switch.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: perfmon/perfmon_syscalls.c:78:
+ * ^I- kernel task$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: perfmon/perfmon_syscalls.c:79:
+ * ^I- task not owned by caller$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: perfmon/perfmon_syscalls.c:80:
+ * ^I- task is dead or zombie$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: perfmon/perfmon_syscalls.c:81:
+ * ^I- cannot use blocking notification when self-monitoring$

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#205: FILE: perfmon/perfmon_syscalls.c:116:
+ * task refcount is increment when succesful.
                                    ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: perfmon/perfmon_syscalls.c:126:
+^I * perfmon system calls, we enforce that the thread $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#233: FILE: perfmon/perfmon_syscalls.c:144:
+	if (p == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: perfmon/perfmon_syscalls.c:192:
+^IPFM_DBG("state=%d check_mask=0x%x", state, check_mask); $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#354: FILE: perfmon/perfmon_syscalls.c:265:
+	if (check_mask & PFM_CMD_STOPPED) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!addr"
#406: FILE: perfmon/perfmon_syscalls.c:317:
+	if (unlikely(addr == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#440: FILE: perfmon/perfmon_syscalls.c:351:
+	if (f == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: perfmon/perfmon_syscalls.c:371:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!addr"
#463: FILE: perfmon/perfmon_syscalls.c:374:
+	if (addr == NULL)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#495: FILE: perfmon/perfmon_syscalls.c:406:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#516: FILE: perfmon/perfmon_syscalls.c:427:
+	struct file *filp;
 	             ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#527: FILE: perfmon/perfmon_syscalls.c:438:
+	sz = count*sizeof(*ureq);
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#529: FILE: perfmon/perfmon_syscalls.c:440:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#530: FILE: perfmon/perfmon_syscalls.c:441:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#530: FILE: perfmon/perfmon_syscalls.c:441:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#560: FILE: perfmon/perfmon_syscalls.c:471:
+	 * We want to avoid the branch if unecessary.
 	                                  ^^^^^^^^^^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#563: FILE: perfmon/perfmon_syscalls.c:474:
+	if (fptr)
+		kfree(fptr);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#565: FILE: perfmon/perfmon_syscalls.c:476:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#573: FILE: perfmon/perfmon_syscalls.c:484:
+	struct file *filp;
 	             ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#584: FILE: perfmon/perfmon_syscalls.c:495:
+	sz = count*sizeof(*ureq);
 	          ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#586: FILE: perfmon/perfmon_syscalls.c:497:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#587: FILE: perfmon/perfmon_syscalls.c:498:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#587: FILE: perfmon/perfmon_syscalls.c:498:
+	if (unlikely(filp == NULL)) {

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#616: FILE: perfmon/perfmon_syscalls.c:527:
+	if (fptr)
+		kfree(fptr);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#618: FILE: perfmon/perfmon_syscalls.c:529:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#626: FILE: perfmon/perfmon_syscalls.c:537:
+	struct file *filp;
 	             ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#637: FILE: perfmon/perfmon_syscalls.c:548:
+	sz = count*sizeof(*ureq);
 	          ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#639: FILE: perfmon/perfmon_syscalls.c:550:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#640: FILE: perfmon/perfmon_syscalls.c:551:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#640: FILE: perfmon/perfmon_syscalls.c:551:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#671: FILE: perfmon/perfmon_syscalls.c:582:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#678: FILE: perfmon/perfmon_syscalls.c:589:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#682: FILE: perfmon/perfmon_syscalls.c:593:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#683: FILE: perfmon/perfmon_syscalls.c:594:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#683: FILE: perfmon/perfmon_syscalls.c:594:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#705: FILE: perfmon/perfmon_syscalls.c:616:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#712: FILE: perfmon/perfmon_syscalls.c:623:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#716: FILE: perfmon/perfmon_syscalls.c:627:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#717: FILE: perfmon/perfmon_syscalls.c:628:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#717: FILE: perfmon/perfmon_syscalls.c:628:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#739: FILE: perfmon/perfmon_syscalls.c:650:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#746: FILE: perfmon/perfmon_syscalls.c:657:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#751: FILE: perfmon/perfmon_syscalls.c:662:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#752: FILE: perfmon/perfmon_syscalls.c:663:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#752: FILE: perfmon/perfmon_syscalls.c:663:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#780: FILE: perfmon/perfmon_syscalls.c:691:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#788: FILE: perfmon/perfmon_syscalls.c:699:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#796: FILE: perfmon/perfmon_syscalls.c:707:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#797: FILE: perfmon/perfmon_syscalls.c:708:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#797: FILE: perfmon/perfmon_syscalls.c:708:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#814: FILE: perfmon/perfmon_syscalls.c:725:
+	 * Upon succesful return, refcount on task is increased.
 	        ^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#819: FILE: perfmon/perfmon_syscalls.c:730:
+		if (req.load_pid != current->pid) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#823: FILE: perfmon/perfmon_syscalls.c:734:
+		} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#848: FILE: perfmon/perfmon_syscalls.c:759:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#855: FILE: perfmon/perfmon_syscalls.c:766:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#861: FILE: perfmon/perfmon_syscalls.c:772:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#862: FILE: perfmon/perfmon_syscalls.c:773:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#862: FILE: perfmon/perfmon_syscalls.c:773:
+	if (unlikely(filp == NULL)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#879: FILE: perfmon/perfmon_syscalls.c:790:
+	ret = pfm_check_task_state(ctx, PFM_CMD_STOPPED|PFM_CMD_UNLOAD, &flags);
 	                                               ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#889: FILE: perfmon/perfmon_syscalls.c:800:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#896: FILE: perfmon/perfmon_syscalls.c:807:
+	struct file *filp;
 	             ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#906: FILE: perfmon/perfmon_syscalls.c:817:
+	sz = count*sizeof(*ureq);
 	          ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#908: FILE: perfmon/perfmon_syscalls.c:819:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#909: FILE: perfmon/perfmon_syscalls.c:820:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#909: FILE: perfmon/perfmon_syscalls.c:820:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#945: FILE: perfmon/perfmon_syscalls.c:856:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#952: FILE: perfmon/perfmon_syscalls.c:863:
+	struct file *filp;
 	             ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#962: FILE: perfmon/perfmon_syscalls.c:873:
+	sz = count*sizeof(*ureq);
 	          ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#964: FILE: perfmon/perfmon_syscalls.c:875:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#965: FILE: perfmon/perfmon_syscalls.c:876:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#965: FILE: perfmon/perfmon_syscalls.c:876:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1000: FILE: perfmon/perfmon_syscalls.c:911:
+	fput_light(filp, fput_needed);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1007: FILE: perfmon/perfmon_syscalls.c:918:
+	struct file *filp;
 	             ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1017: FILE: perfmon/perfmon_syscalls.c:928:
+	sz = count*sizeof(*ureq);
 	          ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1019: FILE: perfmon/perfmon_syscalls.c:930:
+	filp = fget_light(fd, &fput_needed);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1020: FILE: perfmon/perfmon_syscalls.c:931:
+	if (unlikely(filp == NULL)) {
 	             ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#1020: FILE: perfmon/perfmon_syscalls.c:931:
+	if (unlikely(filp == NULL)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1055: FILE: perfmon/perfmon_syscalls.c:966:
+	fput_light(filp, fput_needed);
 	           ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000012382.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 71 warnings, 25 checks, 968 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000012382.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
