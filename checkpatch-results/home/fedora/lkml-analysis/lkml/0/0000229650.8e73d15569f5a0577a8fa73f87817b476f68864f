WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#85: 
are unique (this is the most common case, except for POSIX-ACL-only setups).

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#116: FILE: fs/ext3/ialloc.c:627:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:BRACES: braces {} should be used on all arms of this statement
#118: FILE: fs/ext3/ialloc.c:629:
+	if (EXT3_INODE_SIZE(inode->i_sb) > EXT3_GOOD_OLD_INODE_SIZE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: fs/ext3/ialloc.c:630:
+		ei->i_extra_isize =3D sizeof(__u16)	/* i_extra_isize */
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#121: FILE: fs/ext3/ialloc.c:632:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#122: FILE: fs/ext3/ialloc.c:633:
+		ei->i_extra_isize =3D 0;
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: fs/ext3/inode.c:2343:
+int ext3_get_inode_loc(struct inode *inode,
 				struct ext3_iloc *iloc, int in_mem)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#146: FILE: fs/ext3/inode.c:2550:
+		ei->i_extra_isize =3D le16_to_cpu(raw_inode->i_extra_isize);
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#148: FILE: fs/ext3/inode.c:2552:
+		ei->i_extra_isize =3D 0;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#158: FILE: fs/ext3/inode.c:2690:
+		raw_inode->i_extra_isize =3D cpu_to_le16(ei->i_extra_isize);
 		                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: fs/ext3/xattr.c:254:
+ext3_xattr_block_get(struct inode *inode, int name_index, const char *name,
 	       void *buffer, size_t buffer_size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: fs/ext3/xattr.c:348:
+ext3_xattr_ibody_get(struct inode *inode, int name_index, const char *name,
+	       void *buffer, size_t buffer_size)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#219: FILE: fs/ext3/xattr.c:350:
+	int size, name_len =3D strlen(name), storage_size;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#224: FILE: fs/ext3/xattr.c:355:
+	int ret =3D -ENOENT;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#224: FILE: fs/ext3/xattr.c:355:
+	int ret =3D -ENOENT;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#225: FILE: fs/ext3/xattr.c:356:
+=09
 ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#226: FILE: fs/ext3/xattr.c:357:
+	if (EXT3_SB(inode->i_sb)->s_inode_size <=3D EXT3_GOOD_OLD_INODE_SIZE)
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#229: FILE: fs/ext3/xattr.c:360:
+	ret =3D ext3_get_inode_loc(inode, &iloc, 1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: fs/ext3/xattr.c:363:
+	raw_inode =3D ext3_raw_inode(&iloc);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#234: FILE: fs/ext3/xattr.c:365:
+	storage_size =3D EXT3_SB(inode->i_sb)->s_inode_size -
 	             ^

CHECK:SPACING: No space is necessary after a cast
#238: FILE: fs/ext3/xattr.c:369:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: fs/ext3/xattr.c:369:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#238: FILE: fs/ext3/xattr.c:369:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +
 	      ^

CHECK:SPACING: No space is necessary after a cast
#240: FILE: fs/ext3/xattr.c:371:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#240: FILE: fs/ext3/xattr.c:371:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#240: FILE: fs/ext3/xattr.c:371:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {
 	                                   ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#244: FILE: fs/ext3/xattr.c:375:
+	start +=3D sizeof(__u32);
 	      ^

CHECK:SPACING: No space is necessary after a cast
#245: FILE: fs/ext3/xattr.c:376:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: fs/ext3/xattr.c:376:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#245: FILE: fs/ext3/xattr.c:376:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;
 	    ^

CHECK:SPACING: No space is necessary after a cast
#247: FILE: fs/ext3/xattr.c:378:
+	last =3D (struct ext3_xattr_entry *) start;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: fs/ext3/xattr.c:378:
+	last =3D (struct ext3_xattr_entry *) start;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#247: FILE: fs/ext3/xattr.c:378:
+	last =3D (struct ext3_xattr_entry *) start;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#249: FILE: fs/ext3/xattr.c:380:
+		struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(last);
 		                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: fs/ext3/xattr.c:381:
+		struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(last);
+		if (le32_to_cpu(last->e_value_size) > storage_size ||

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: fs/ext3/xattr.c:382:
+		if (le32_to_cpu(last->e_value_size) > storage_size ||
+				(char *) next >=3D end) {

CHECK:SPACING: No space is necessary after a cast
#251: FILE: fs/ext3/xattr.c:382:
+				(char *) next >=3D end) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#251: FILE: fs/ext3/xattr.c:382:
+				(char *) next >=3D end) {
 				              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: fs/ext3/xattr.c:384:
+			ext3_error(inode->i_sb, "ext3_xattr_ibody_get",
+				"inode %ld", inode->i_ino);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#257: FILE: fs/ext3/xattr.c:388:
+		if (name_index =3D=3D last->e_name_index &&
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#257: FILE: fs/ext3/xattr.c:388:
+		if (name_index =3D=3D last->e_name_index &&
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#257: FILE: fs/ext3/xattr.c:388:
+		if (name_index =3D=3D last->e_name_index &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#258: FILE: fs/ext3/xattr.c:389:
+		    name_len =3D=3D last->e_name_len &&
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#258: FILE: fs/ext3/xattr.c:389:
+		    name_len =3D=3D last->e_name_len &&
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#261: FILE: fs/ext3/xattr.c:392:
+		last =3D next;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#267: FILE: fs/ext3/xattr.c:398:
+=09
 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#268: FILE: fs/ext3/xattr.c:399:
+found:
      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#269: FILE: fs/ext3/xattr.c:400:
+	size =3D le32_to_cpu(last->e_value_size);
 	     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#270: FILE: fs/ext3/xattr.c:401:
+	if (buffer) {
[...]
+	} else
[...]

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#271: FILE: fs/ext3/xattr.c:402:
+		ret =3D -ERANGE;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#271: FILE: fs/ext3/xattr.c:402:
+		ret =3D -ERANGE;
 		        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#272: FILE: fs/ext3/xattr.c:403:
+		if (buffer_size >=3D size) {
 		                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: fs/ext3/xattr.c:405:
+			memcpy(buffer, start + le16_to_cpu(last->e_value_offs),
+				size);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: fs/ext3/xattr.c:406:
+			ret =3D size;
 			    ^

CHECK:BRACES: Unbalanced braces around else statement
#277: FILE: fs/ext3/xattr.c:408:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: fs/ext3/xattr.c:409:
+		ret =3D size;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#303: FILE: fs/ext3/xattr.c:436:
+	err =3D ext3_xattr_ibody_get(inode, name_index, name,
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#307: FILE: fs/ext3/xattr.c:440:
+		err =3D ext3_xattr_block_get(inode, name_index, name,
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#319: FILE: fs/ext3/xattr.c:452:
+ext3_xattr_block_list(struct inode *inode, char *buffer, size_t buffer_siz=
                                                                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#341: FILE: fs/ext3/xattr.c:524:
 }
+/* ext3_xattr_ibody_list()

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#346: FILE: fs/ext3/xattr.c:529:
+ext3_xattr_ibody_list(struct inode *inode, char *buffer, size_t buffer_siz=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#348: FILE: fs/ext3/xattr.c:530:
+ext3_xattr_ibody_list(struct inode *inode, char *buffer, size_t buffer_siz=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#355: FILE: fs/ext3/xattr.c:537:
+	int size =3D 0;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#356: FILE: fs/ext3/xattr.c:538:
+=09
 ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#357: FILE: fs/ext3/xattr.c:539:
+	if (EXT3_SB(inode->i_sb)->s_inode_size <=3D EXT3_GOOD_OLD_INODE_SIZE)
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#360: FILE: fs/ext3/xattr.c:542:
+	ret =3D ext3_get_inode_loc(inode, &iloc, 1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#363: FILE: fs/ext3/xattr.c:545:
+	raw_inode =3D ext3_raw_inode(&iloc);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#365: FILE: fs/ext3/xattr.c:547:
+	storage_size =3D EXT3_SB(inode->i_sb)->s_inode_size -
 	             ^

CHECK:SPACING: No space is necessary after a cast
#369: FILE: fs/ext3/xattr.c:551:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: fs/ext3/xattr.c:551:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#369: FILE: fs/ext3/xattr.c:551:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +
 	      ^

CHECK:SPACING: No space is necessary after a cast
#371: FILE: fs/ext3/xattr.c:553:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#371: FILE: fs/ext3/xattr.c:553:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#371: FILE: fs/ext3/xattr.c:553:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {
 	                                   ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#375: FILE: fs/ext3/xattr.c:557:
+	start +=3D sizeof(__u32);
 	      ^

CHECK:SPACING: No space is necessary after a cast
#376: FILE: fs/ext3/xattr.c:558:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: fs/ext3/xattr.c:558:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#376: FILE: fs/ext3/xattr.c:558:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;
 	    ^

CHECK:SPACING: No space is necessary after a cast
#378: FILE: fs/ext3/xattr.c:560:
+	last =3D (struct ext3_xattr_entry *) start;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#378: FILE: fs/ext3/xattr.c:560:
+	last =3D (struct ext3_xattr_entry *) start;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#378: FILE: fs/ext3/xattr.c:560:
+	last =3D (struct ext3_xattr_entry *) start;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#380: FILE: fs/ext3/xattr.c:562:
+		struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(last);
 		                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#382: FILE: fs/ext3/xattr.c:564:
+		struct ext3_xattr_handler *handler;
+		if (le32_to_cpu(last->e_value_size) > storage_size ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: fs/ext3/xattr.c:565:
+		if (le32_to_cpu(last->e_value_size) > storage_size ||
+				(char *) next >=3D end) {

CHECK:SPACING: No space is necessary after a cast
#383: FILE: fs/ext3/xattr.c:565:
+				(char *) next >=3D end) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#383: FILE: fs/ext3/xattr.c:565:
+				(char *) next >=3D end) {
 				              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: fs/ext3/xattr.c:567:
+			ext3_error(inode->i_sb, "ext3_xattr_ibody_list",
+				"inode %ld", inode->i_ino);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#389: FILE: fs/ext3/xattr.c:571:
+		handler =3D ext3_xattr_handler(last->e_name_index);
 		        ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#391: FILE: fs/ext3/xattr.c:573:
+			size +=3D handler->list(NULL, inode, last->e_name,
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#393: FILE: fs/ext3/xattr.c:575:
+		last =3D next;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#397: FILE: fs/ext3/xattr.c:579:
+		ret =3D size;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#400: FILE: fs/ext3/xattr.c:582:
+		ret =3D -ERANGE;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#400: FILE: fs/ext3/xattr.c:582:
+		ret =3D -ERANGE;
 		        ^

CHECK:SPACING: No space is necessary after a cast
#405: FILE: fs/ext3/xattr.c:587:
+	last =3D (struct ext3_xattr_entry *) start;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: fs/ext3/xattr.c:587:
+	last =3D (struct ext3_xattr_entry *) start;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#405: FILE: fs/ext3/xattr.c:587:
+	last =3D (struct ext3_xattr_entry *) start;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#406: FILE: fs/ext3/xattr.c:588:
+	buf =3D buffer;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#408: FILE: fs/ext3/xattr.c:590:
+		struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(last);
 		                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#410: FILE: fs/ext3/xattr.c:592:
+		struct ext3_xattr_handler *handler;
+		handler =3D ext3_xattr_handler(last->e_name_index);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#410: FILE: fs/ext3/xattr.c:592:
+		handler =3D ext3_xattr_handler(last->e_name_index);
 		        ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#412: FILE: fs/ext3/xattr.c:594:
+			buf +=3D handler->list(buf, inode, last->e_name,
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#414: FILE: fs/ext3/xattr.c:596:
+		last =3D next;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#416: FILE: fs/ext3/xattr.c:598:
+	ret =3D size;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: fs/ext3/xattr.c:618:
+	int size =3D buffer_size;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#441: FILE: fs/ext3/xattr.c:623:
+	error =3D ext3_xattr_ibody_list(inode, buffer, buffer_size);
 	      ^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#443: FILE: fs/ext3/xattr.c:625:
+		/* some error occured while collecting
 		              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#444: FILE: fs/ext3/xattr.c:626:
+		 * attributes in inode body */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#445: FILE: fs/ext3/xattr.c:627:
+		size =3D 0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#448: FILE: fs/ext3/xattr.c:630:
+	size =3D error;
 	     ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#452: FILE: fs/ext3/xattr.c:634:
+		buffer_size -=3D error;
 		            ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#453: FILE: fs/ext3/xattr.c:635:
+		if (buffer_size <=3D 0) {
 		                ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#453: FILE: fs/ext3/xattr.c:635:
+		if (buffer_size <=3D 0) {
[...]
+		} else
[...]

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#454: FILE: fs/ext3/xattr.c:636:
+			buffer =3D NULL;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#455: FILE: fs/ext3/xattr.c:637:
+			buffer_size =3D 0;
 			            ^

CHECK:BRACES: Unbalanced braces around else statement
#456: FILE: fs/ext3/xattr.c:638:
+		} else

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#457: FILE: fs/ext3/xattr.c:639:
+			buffer +=3D error;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: fs/ext3/xattr.c:642:
+	error =3D ext3_xattr_block_list(inode, buffer, buffer_size);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#463: FILE: fs/ext3/xattr.c:645:
+		size =3D 0;
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: fs/ext3/xattr.c:682:
+ext3_xattr_ibody_find(struct inode *inode, int name_index,
+		const char *name, struct ext3_xattr_entry *rentry, int *free)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#488: FILE: fs/ext3/xattr.c:686:
+	int name_len =3D strlen(name);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#492: FILE: fs/ext3/xattr.c:690:
+	int ret =3D -ENOENT;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#492: FILE: fs/ext3/xattr.c:690:
+	int ret =3D -ENOENT;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#493: FILE: fs/ext3/xattr.c:691:
+=09
 ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#494: FILE: fs/ext3/xattr.c:692:
+	if (EXT3_SB(inode->i_sb)->s_inode_size <=3D EXT3_GOOD_OLD_INODE_SIZE)
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#497: FILE: fs/ext3/xattr.c:695:
+	err =3D ext3_get_inode_loc(inode, &iloc, 1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#500: FILE: fs/ext3/xattr.c:698:
+	raw_inode =3D ext3_raw_inode(&iloc);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#502: FILE: fs/ext3/xattr.c:700:
+	storage_size =3D EXT3_SB(inode->i_sb)->s_inode_size -
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#506: FILE: fs/ext3/xattr.c:704:
+	*free =3D storage_size - sizeof(__u32);
 	      ^

CHECK:SPACING: No space is necessary after a cast
#507: FILE: fs/ext3/xattr.c:705:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: fs/ext3/xattr.c:705:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#507: FILE: fs/ext3/xattr.c:705:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +
 	      ^

CHECK:SPACING: No space is necessary after a cast
#509: FILE: fs/ext3/xattr.c:707:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#509: FILE: fs/ext3/xattr.c:707:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#509: FILE: fs/ext3/xattr.c:707:
+	if (le32_to_cpu((*(__u32*) start)) !=3D EXT3_XATTR_MAGIC) {
 	                                   ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#513: FILE: fs/ext3/xattr.c:711:
+	start +=3D sizeof(__u32);
 	      ^

CHECK:SPACING: No space is necessary after a cast
#514: FILE: fs/ext3/xattr.c:712:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#514: FILE: fs/ext3/xattr.c:712:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#514: FILE: fs/ext3/xattr.c:712:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;
 	    ^

CHECK:SPACING: No space is necessary after a cast
#516: FILE: fs/ext3/xattr.c:714:
+	last =3D (struct ext3_xattr_entry *) start;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: fs/ext3/xattr.c:714:
+	last =3D (struct ext3_xattr_entry *) start;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#516: FILE: fs/ext3/xattr.c:714:
+	last =3D (struct ext3_xattr_entry *) start;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#518: FILE: fs/ext3/xattr.c:716:
+		struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(last);
 		                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#519: FILE: fs/ext3/xattr.c:717:
+		struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(last);
+		if (le32_to_cpu(last->e_value_size) > storage_size ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: fs/ext3/xattr.c:718:
+		if (le32_to_cpu(last->e_value_size) > storage_size ||
+				(char *) next >=3D end) {

CHECK:SPACING: No space is necessary after a cast
#520: FILE: fs/ext3/xattr.c:718:
+				(char *) next >=3D end) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#520: FILE: fs/ext3/xattr.c:718:
+				(char *) next >=3D end) {
 				              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: fs/ext3/xattr.c:720:
+			ext3_error(inode->i_sb, "ext3_xattr_ibody_find",
+				"inode %ld", inode->i_ino);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#527: FILE: fs/ext3/xattr.c:725:
+		if (name_index =3D=3D last->e_name_index &&
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#527: FILE: fs/ext3/xattr.c:725:
+		if (name_index =3D=3D last->e_name_index &&
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#527: FILE: fs/ext3/xattr.c:725:
+		if (name_index =3D=3D last->e_name_index &&

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#528: FILE: fs/ext3/xattr.c:726:
+		    name_len =3D=3D last->e_name_len &&
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#528: FILE: fs/ext3/xattr.c:726:
+		    name_len =3D=3D last->e_name_len &&
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#531: FILE: fs/ext3/xattr.c:729:
+			ret =3D 0;
 			    ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#533: FILE: fs/ext3/xattr.c:731:
+			*free -=3D EXT3_XATTR_LEN(last->e_name_len);
 			      ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#534: FILE: fs/ext3/xattr.c:732:
+			*free -=3D le32_to_cpu(last->e_value_size);
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#536: FILE: fs/ext3/xattr.c:734:
+		last =3D next;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#538: FILE: fs/ext3/xattr.c:736:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#550: FILE: fs/ext3/xattr.c:748:
+ext3_xattr_block_find(struct inode *inode, int name_index, const char *nam=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#554: FILE: fs/ext3/xattr.c:751:
+	struct buffer_head *bh =3D NULL;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#557: FILE: fs/ext3/xattr.c:754:
+	int name_len, error =3D -ENOENT;
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#557: FILE: fs/ext3/xattr.c:754:
+	int name_len, error =3D -ENOENT;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#560: FILE: fs/ext3/xattr.c:757:
+		*free =3D inode->i_sb->s_blocksize -
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#566: FILE: fs/ext3/xattr.c:763:
+	bh =3D sb_bread(inode->i_sb, EXT3_I(inode)->i_file_acl);
 	   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: fs/ext3/xattr.c:767:
+	ea_bdebug(bh, "b_count=3D%d, refcount=3D%d",
+		atomic_read(&(bh->b_count)), le32_to_cpu(HDR(bh)->h_refcount));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bh->b_count
#570: FILE: fs/ext3/xattr.c:767:
+		atomic_read(&(bh->b_count)), le32_to_cpu(HDR(bh)->h_refcount));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#571: FILE: fs/ext3/xattr.c:768:
+	end =3D bh->b_data + bh->b_size;
 	    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#572: FILE: fs/ext3/xattr.c:769:
+	if (HDR(bh)->h_magic !=3D cpu_to_le32(EXT3_XATTR_MAGIC) ||
[...]
+			"inode %ld: bad block %d", inode->i_ino,

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#572: FILE: fs/ext3/xattr.c:769:
+	if (HDR(bh)->h_magic !=3D cpu_to_le32(EXT3_XATTR_MAGIC) ||
 	                     ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#573: FILE: fs/ext3/xattr.c:770:
+	    HDR(bh)->h_blocks !=3D cpu_to_le32(1)) {
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#581: FILE: fs/ext3/xattr.c:778:
+	name_len =3D strlen(name);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#582: FILE: fs/ext3/xattr.c:779:
+	*free =3D bh->b_size - sizeof(__u32);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#584: FILE: fs/ext3/xattr.c:781:
+	entry =3D FIRST_ENTRY(bh);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#586: FILE: fs/ext3/xattr.c:783:
+		struct ext3_xattr_entry *next =3D
 		                              ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#588: FILE: fs/ext3/xattr.c:785:
+		if ((char *)next >=3D end)
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#590: FILE: fs/ext3/xattr.c:787:
+		if (name_index =3D=3D entry->e_name_index &&
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#590: FILE: fs/ext3/xattr.c:787:
+		if (name_index =3D=3D entry->e_name_index &&
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#590: FILE: fs/ext3/xattr.c:787:
+		if (name_index =3D=3D entry->e_name_index &&

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#591: FILE: fs/ext3/xattr.c:788:
+		    name_len =3D=3D entry->e_name_len &&
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#591: FILE: fs/ext3/xattr.c:788:
+		    name_len =3D=3D entry->e_name_len &&
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#592: FILE: fs/ext3/xattr.c:789:
+		    memcmp(name, entry->e_name, name_len) =3D=3D 0) {
 		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#592: FILE: fs/ext3/xattr.c:789:
+		    memcmp(name, entry->e_name, name_len) =3D=3D 0) {
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#594: FILE: fs/ext3/xattr.c:791:
+			error =3D 0;
 			      ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#596: FILE: fs/ext3/xattr.c:793:
+			*free -=3D EXT3_XATTR_LEN(entry->e_name_len);
 			      ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#597: FILE: fs/ext3/xattr.c:794:
+			*free -=3D le32_to_cpu(entry->e_value_size);
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#599: FILE: fs/ext3/xattr.c:796:
+		entry =3D next;
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: fs/ext3/xattr.c:810:
+ext3_xattr_ibody_set(handle_t *handle, struct inode *inode, int name_index,
+		      const char *name, const void *value, size_t value_len,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#616: FILE: fs/ext3/xattr.c:813:
+	struct ext3_xattr_entry *last, *next, *here =3D NULL;
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#618: FILE: fs/ext3/xattr.c:815:
+	int name_len =3D strlen(name);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#619: FILE: fs/ext3/xattr.c:816:
+	int esize =3D EXT3_XATTR_LEN(name_len);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#625: FILE: fs/ext3/xattr.c:822:
+=09
 ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#626: FILE: fs/ext3/xattr.c:823:
+	if (EXT3_SB(inode->i_sb)->s_inode_size <=3D EXT3_GOOD_OLD_INODE_SIZE)
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#629: FILE: fs/ext3/xattr.c:826:
+	err =3D ext3_get_inode_loc(inode, &iloc, 1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#632: FILE: fs/ext3/xattr.c:829:
+	raw_inode =3D ext3_raw_inode(&iloc);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#633: FILE: fs/ext3/xattr.c:830:
+	bh =3D iloc.bh;
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#635: FILE: fs/ext3/xattr.c:832:
+	storage_size =3D EXT3_SB(inode->i_sb)->s_inode_size -
 	             ^

CHECK:SPACING: No space is necessary after a cast
#639: FILE: fs/ext3/xattr.c:836:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#639: FILE: fs/ext3/xattr.c:836:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#639: FILE: fs/ext3/xattr.c:836:
+	start =3D (char *) raw_inode + EXT3_GOOD_OLD_INODE_SIZE +
 	      ^

CHECK:SPACING: No space is necessary after a cast
#641: FILE: fs/ext3/xattr.c:838:
+	if ((*(__u32*) start) !=3D EXT3_XATTR_MAGIC) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#641: FILE: fs/ext3/xattr.c:838:
+	if ((*(__u32*) start) !=3D EXT3_XATTR_MAGIC) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#641: FILE: fs/ext3/xattr.c:838:
+	if ((*(__u32*) start) !=3D EXT3_XATTR_MAGIC) {
 	                      ^

CHECK:SPACING: No space is necessary after a cast
#643: FILE: fs/ext3/xattr.c:840:
+		*((__u32*) start) =3D cpu_to_le32(EXT3_XATTR_MAGIC);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#643: FILE: fs/ext3/xattr.c:840:
+		*((__u32*) start) =3D cpu_to_le32(EXT3_XATTR_MAGIC);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#643: FILE: fs/ext3/xattr.c:840:
+		*((__u32*) start) =3D cpu_to_le32(EXT3_XATTR_MAGIC);
 		                  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#645: FILE: fs/ext3/xattr.c:842:
+	start +=3D sizeof(__u32);
 	      ^

CHECK:SPACING: No space is necessary after a cast
#646: FILE: fs/ext3/xattr.c:843:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: fs/ext3/xattr.c:843:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#646: FILE: fs/ext3/xattr.c:843:
+	end =3D (char *) raw_inode + EXT3_SB(inode->i_sb)->s_inode_size;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#647: FILE: fs/ext3/xattr.c:844:
+	min_offs =3D storage_size;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#648: FILE: fs/ext3/xattr.c:845:
+	free =3D storage_size - sizeof(__u32);
 	     ^

CHECK:SPACING: No space is necessary after a cast
#650: FILE: fs/ext3/xattr.c:847:
+	last =3D (struct ext3_xattr_entry *) start;=09

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: fs/ext3/xattr.c:847:
+	last =3D (struct ext3_xattr_entry *) start;=09

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#650: FILE: fs/ext3/xattr.c:847:
+	last =3D (struct ext3_xattr_entry *) start;=09
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#650: FILE: fs/ext3/xattr.c:847:
+	last =3D (struct ext3_xattr_entry *) start;=09
 	                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#650: FILE: fs/ext3/xattr.c:847:
+	last =3D (struct ext3_xattr_entry *) start;=09
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#652: FILE: fs/ext3/xattr.c:849:
+		next =3D EXT3_XATTR_NEXT(last);
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: fs/ext3/xattr.c:851:
+		if (le32_to_cpu(last->e_value_size) > storage_size ||
+				(char *) next >=3D end) {

CHECK:SPACING: No space is necessary after a cast
#654: FILE: fs/ext3/xattr.c:851:
+				(char *) next >=3D end) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#654: FILE: fs/ext3/xattr.c:851:
+				(char *) next >=3D end) {
 				              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: fs/ext3/xattr.c:853:
+			ext3_error(inode->i_sb, "ext3_xattr_ibody_set",
+				"inode %ld", inode->i_ino);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#660: FILE: fs/ext3/xattr.c:857:
+		}
+	=09

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#660: FILE: fs/ext3/xattr.c:857:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#662: FILE: fs/ext3/xattr.c:859:
+			int offs =3D le16_to_cpu(last->e_value_offs);
 			         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#663: FILE: fs/ext3/xattr.c:860:
+			int offs =3D le16_to_cpu(last->e_value_offs);
+			if (offs < min_offs)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#664: FILE: fs/ext3/xattr.c:861:
+				min_offs =3D offs;
 				         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#666: FILE: fs/ext3/xattr.c:863:
+		if (name_index =3D=3D last->e_name_index &&
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#666: FILE: fs/ext3/xattr.c:863:
+		if (name_index =3D=3D last->e_name_index &&
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#666: FILE: fs/ext3/xattr.c:863:
+		if (name_index =3D=3D last->e_name_index &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: fs/ext3/xattr.c:864:
+		if (name_index =3D=3D last->e_name_index &&
+			name_len =3D=3D last->e_name_len &&

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#667: FILE: fs/ext3/xattr.c:864:
+			name_len =3D=3D last->e_name_len &&
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#667: FILE: fs/ext3/xattr.c:864:
+			name_len =3D=3D last->e_name_len &&
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#669: FILE: fs/ext3/xattr.c:866:
+			here =3D last;
 			     ^

CHECK:BRACES: Unbalanced braces around else statement
#670: FILE: fs/ext3/xattr.c:867:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#672: FILE: fs/ext3/xattr.c:869:
+			 * because it will be removed before changing */

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#673: FILE: fs/ext3/xattr.c:870:
+			free -=3D EXT3_XATTR_LEN(last->e_name_len);
 			     ^

ERROR:SPACING: spaces required around that '-=' (ctx:WxV)
#674: FILE: fs/ext3/xattr.c:871:
+			free -=3D le32_to_cpu(last->e_value_size);
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#676: FILE: fs/ext3/xattr.c:873:
+		last =3D next;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#683: FILE: fs/ext3/xattr.c:880:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#684: FILE: fs/ext3/xattr.c:881:
+	err =3D ext3_reserve_inode_write(handle, inode, &iloc);
 	    ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#686: FILE: fs/ext3/xattr.c:883:
+		brelse(bh);=09
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#686: FILE: fs/ext3/xattr.c:883:
+		brelse(bh);=09
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#693: FILE: fs/ext3/xattr.c:890:
+		int size =3D le32_to_cpu(here->e_value_size);
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#694: FILE: fs/ext3/xattr.c:891:
+		int border =3D le16_to_cpu(here->e_value_offs);
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: fs/ext3/xattr.c:896:
+		memmove(start + min_offs + size, start + min_offs,
+				border - min_offs);

CHECK:SPACING: No space is necessary after a cast
#702: FILE: fs/ext3/xattr.c:899:
+		e =3D (struct ext3_xattr_entry *) start;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#702: FILE: fs/ext3/xattr.c:899:
+		e =3D (struct ext3_xattr_entry *) start;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#702: FILE: fs/ext3/xattr.c:899:
+		e =3D (struct ext3_xattr_entry *) start;
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#704: FILE: fs/ext3/xattr.c:901:
+			struct ext3_xattr_entry *next =3D EXT3_XATTR_NEXT(e);
 			                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#705: FILE: fs/ext3/xattr.c:902:
+			int offs =3D le16_to_cpu(e->e_value_offs);
 			         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#706: FILE: fs/ext3/xattr.c:903:
+			int offs =3D le16_to_cpu(e->e_value_offs);
+			if (offs < border)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#707: FILE: fs/ext3/xattr.c:904:
+				e->e_value_offs =3D
 				                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#709: FILE: fs/ext3/xattr.c:906:
+			e =3D next;
 			  ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#711: FILE: fs/ext3/xattr.c:908:
+		min_offs +=3D size;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#714: FILE: fs/ext3/xattr.c:911:
+		border =3D EXT3_XATTR_LEN(here->e_name_len);
 		       ^

CHECK:SPACING: No space is necessary after a cast
#715: FILE: fs/ext3/xattr.c:912:
+		src =3D (char *) here + EXT3_XATTR_LEN(here->e_name_len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: fs/ext3/xattr.c:912:
+		src =3D (char *) here + EXT3_XATTR_LEN(here->e_name_len);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#715: FILE: fs/ext3/xattr.c:912:
+		src =3D (char *) here + EXT3_XATTR_LEN(here->e_name_len);
 		    ^

CHECK:SPACING: No space is necessary after a cast
#716: FILE: fs/ext3/xattr.c:913:
+		size =3D (char *) last - src;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#716: FILE: fs/ext3/xattr.c:913:
+		size =3D (char *) last - src;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#716: FILE: fs/ext3/xattr.c:913:
+		size =3D (char *) last - src;
 		     ^

CHECK:SPACING: No space is necessary after a cast
#717: FILE: fs/ext3/xattr.c:914:
+		if ((char *) here + size > end)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#718: FILE: fs/ext3/xattr.c:915:
+			printk("ALERT at %s:%d: 0x%p + %d > 0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: fs/ext3/xattr.c:916:
+			printk("ALERT at %s:%d: 0x%p + %d > 0x%p\n",
+					__FILE__, __LINE__, here, size, end);

CHECK:SPACING: No space is necessary after a cast
#721: FILE: fs/ext3/xattr.c:918:
+		last =3D (struct ext3_xattr_entry *) ((char *) last - border);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#721: FILE: fs/ext3/xattr.c:918:
+		last =3D (struct ext3_xattr_entry *) ((char *) last - border);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#721: FILE: fs/ext3/xattr.c:918:
+		last =3D (struct ext3_xattr_entry *) ((char *) last - border);
 		     ^

CHECK:SPACING: No space is necessary after a cast
#722: FILE: fs/ext3/xattr.c:919:
+		*((__u32 *) last) =3D 0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#722: FILE: fs/ext3/xattr.c:919:
+		*((__u32 *) last) =3D 0;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#724: FILE: fs/ext3/xattr.c:921:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#726: FILE: fs/ext3/xattr.c:923:
+		int offs =3D min_offs - value_len;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#728: FILE: fs/ext3/xattr.c:925:
+		last->e_name_len =3D strlen(name);
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#729: FILE: fs/ext3/xattr.c:926:
+		last->e_name_index =3D name_index;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#730: FILE: fs/ext3/xattr.c:927:
+		last->e_value_offs =3D cpu_to_le16(offs);
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#731: FILE: fs/ext3/xattr.c:928:
+		last->e_value_size =3D cpu_to_le32(value_len);
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#732: FILE: fs/ext3/xattr.c:929:
+		last->e_hash =3D last->e_value_block =3D 0;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#732: FILE: fs/ext3/xattr.c:929:
+		last->e_hash =3D last->e_value_block =3D 0;
 		                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#736: FILE: fs/ext3/xattr.c:933:
+			printk("ALERT at %s:%d: 0x%p + %d + %d > 0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: fs/ext3/xattr.c:934:
+			printk("ALERT at %s:%d: 0x%p + %d + %d > 0x%p\n",
+					__FILE__, __LINE__, start, offs,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#740: FILE: fs/ext3/xattr.c:937:
+		last =3D EXT3_XATTR_NEXT(last);
 		     ^

CHECK:SPACING: No space is necessary after a cast
#741: FILE: fs/ext3/xattr.c:938:
+		*((__u32 *) last) =3D 0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#741: FILE: fs/ext3/xattr.c:938:
+		*((__u32 *) last) =3D 0;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#743: FILE: fs/ext3/xattr.c:940:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#763: FILE: fs/ext3/xattr.c:966:
+	int err, where =3D 0, found =3D 0, total;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#763: FILE: fs/ext3/xattr.c:966:
+	int err, where =3D 0, found =3D 0, total;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#764: FILE: fs/ext3/xattr.c:967:
+	int free1 =3D -1, free2 =3D -1;
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#764: FILE: fs/ext3/xattr.c:967:
+	int free1 =3D -1, free2 =3D -1;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#764: FILE: fs/ext3/xattr.c:967:
+	int free1 =3D -1, free2 =3D -1;
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#764: FILE: fs/ext3/xattr.c:967:
+	int free1 =3D -1, free2 =3D -1;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#766: FILE: fs/ext3/xattr.c:969:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#774: FILE: fs/ext3/xattr.c:977:
+	if (value =3D=3D NULL)
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#774: FILE: fs/ext3/xattr.c:977:
+	if (value =3D=3D NULL)
 	             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#774: FILE: fs/ext3/xattr.c:977:
+	if (value =3D=3D NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#775: FILE: fs/ext3/xattr.c:978:
+		value_len =3D 0;
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#776: FILE: fs/ext3/xattr.c:979:
+	if (name =3D=3D NULL)
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#776: FILE: fs/ext3/xattr.c:979:
+	if (name =3D=3D NULL)
 	            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#776: FILE: fs/ext3/xattr.c:979:
+	if (name =3D=3D NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#778: FILE: fs/ext3/xattr.c:981:
+	name_len =3D strlen(name);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#784: FILE: fs/ext3/xattr.c:987:
+	err =3D ext3_xattr_ibody_find(inode, name_index, name, &entry, &free1);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#785: FILE: fs/ext3/xattr.c:988:
+	if (err =3D=3D 0) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#785: FILE: fs/ext3/xattr.c:988:
+	if (err =3D=3D 0) {
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#785: FILE: fs/ext3/xattr.c:988:
+	if (err =3D=3D 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#785: FILE: fs/ext3/xattr.c:988:
+	if (err =3D=3D 0) {
[...]
+	} else if (err =3D=3D -ENOENT) {
[...]
+	} else
[...]

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#787: FILE: fs/ext3/xattr.c:990:
+		found =3D 1;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#788: FILE: fs/ext3/xattr.c:991:
+		where =3D 0;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#789: FILE: fs/ext3/xattr.c:992:
+	} else if (err =3D=3D -ENOENT) {
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#789: FILE: fs/ext3/xattr.c:992:
+	} else if (err =3D=3D -ENOENT) {
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#789: FILE: fs/ext3/xattr.c:992:
+	} else if (err =3D=3D -ENOENT) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#789: FILE: fs/ext3/xattr.c:992:
+	} else if (err =3D=3D -ENOENT) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#792: FILE: fs/ext3/xattr.c:995:
+		err =3D ext3_xattr_block_find(inode, name_index, name,
 		    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#794: FILE: fs/ext3/xattr.c:997:
+		if (err !=3D 0 && err !=3D -ENOENT) {
 		        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#794: FILE: fs/ext3/xattr.c:997:
+		if (err !=3D 0 && err !=3D -ENOENT) {
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#794: FILE: fs/ext3/xattr.c:997:
+		if (err !=3D 0 && err !=3D -ENOENT) {
 		                           ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#796: FILE: fs/ext3/xattr.c:999:
+			goto finish;=09
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#796: FILE: fs/ext3/xattr.c:999:
+			goto finish;=09
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#797: FILE: fs/ext3/xattr.c:1000:
+		} else if (err =3D=3D 0) {
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#797: FILE: fs/ext3/xattr.c:1000:
+		} else if (err =3D=3D 0) {
 		                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#797: FILE: fs/ext3/xattr.c:1000:
+		} else if (err =3D=3D 0) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#799: FILE: fs/ext3/xattr.c:1002:
+			where =3D 1;
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#800: FILE: fs/ext3/xattr.c:1003:
+			found =3D 1;
 			      ^

CHECK:BRACES: Unbalanced braces around else statement
#802: FILE: fs/ext3/xattr.c:1005:
+	} else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#807: FILE: fs/ext3/xattr.c:1010:
+		err =3D -EEXIST;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#807: FILE: fs/ext3/xattr.c:1010:
+		err =3D -EEXIST;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#810: FILE: fs/ext3/xattr.c:1013:
+		err =3D -ENODATA;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#810: FILE: fs/ext3/xattr.c:1013:
+		err =3D -ENODATA;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#815: FILE: fs/ext3/xattr.c:1018:
+	total =3D EXT3_XATTR_LEN(strlen(name)) + value_len;
 	      ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#816: FILE: fs/ext3/xattr.c:1019:
+	if (free1 >=3D 0 && total > free1 && free2 >=3D 0 && total > free2) {
 	          ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#816: FILE: fs/ext3/xattr.c:1019:
+	if (free1 >=3D 0 && total > free1 && free2 >=3D 0 && total > free2) {
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#818: FILE: fs/ext3/xattr.c:1021:
+		err =3D -ENOSPC;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#818: FILE: fs/ext3/xattr.c:1021:
+		err =3D -ENOSPC;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#821: FILE: fs/ext3/xattr.c:1024:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#824: FILE: fs/ext3/xattr.c:1027:
+		if (where =3D=3D 0) {
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#824: FILE: fs/ext3/xattr.c:1027:
+		if (where =3D=3D 0) {
 		             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#824: FILE: fs/ext3/xattr.c:1027:
+		if (where =3D=3D 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: fs/ext3/xattr.c:1030:
+			ext3_xattr_ibody_set(handle, inode, name_index, name,
+					NULL, 0, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: fs/ext3/xattr.c:1034:
+			ext3_xattr_block_set(handle, inode, name_index, name,
+					NULL, 0, flags);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#836: FILE: fs/ext3/xattr.c:1039:
+	err =3D ext3_xattr_ibody_set(handle, inode, name_index, name,
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#841: FILE: fs/ext3/xattr.c:1044:
+		err =3D ext3_xattr_block_set(handle, inode, name_index,
 		    ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#842: FILE: fs/ext3/xattr.c:1045:
+					name, value, value_len, flags);=09
 					                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#842: FILE: fs/ext3/xattr.c:1045:
+					name, value, value_len, flags);=09
 					                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#845: FILE: fs/ext3/xattr.c:1048:
+finish:=09
        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: fs/ext3/xattr.c:1060:
+ext3_xattr_block_set(handle_t *handle, struct inode *inode, int name_index,
 		      const char *name, const void *value, size_t value_len,

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=
                                                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'r *' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#905: FILE: fs/ext3/xattr.h:81:
+extern int ext3_xattr_set_handle(handle_t *, struct inode *, int, const ch=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=
                                                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#907: FILE: fs/ext3/xattr.h:82:
+extern int ext3_xattr_block_set(handle_t *, struct inode *, int, const cha=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#935: FILE: include/linux/ext3_fs.h:728:
+int ext3_get_inode_loc(struct inode *inode, struct ext3_iloc *iloc, int in=
                                                                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 239 errors, 43 warnings, 77 checks, 808 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
