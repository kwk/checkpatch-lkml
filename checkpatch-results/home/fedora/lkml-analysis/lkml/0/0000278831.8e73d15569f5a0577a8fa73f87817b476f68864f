ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#69: 
--- a/drivers/message/i2o/i2o_block.c	2004-05-25 00:51:48.758284896 +0200

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: No space is necessary after a cast
#96: FILE: drivers/message/i2o/i2o_block.c:482:
+		i2o_post_message(c, (unsigned long) m - (unsigned long) c->msg_virt);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#107: FILE: drivers/message/i2o/i2o_config.c:100:
+		u32 *preserved_msg = (u32*)(c->msg_virt + msg[7]);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#118: FILE: drivers/message/i2o/i2o_core.c:357:
+		u32 *preserved_msg = (u32*)(c->msg_virt + msg[7]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: drivers/message/i2o/i2o_core.c:1797:
+	msg=(u32 *)(c->msg_virt+m);
 	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#127: FILE: drivers/message/i2o/i2o_core.c:1797:
+	msg=(u32 *)(c->msg_virt+m);
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#136: FILE: drivers/message/i2o/i2o_core.c:1926:
+	msg=(u32 *)(c->msg_virt+m);
 	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#136: FILE: drivers/message/i2o/i2o_core.c:1926:
+	msg=(u32 *)(c->msg_virt+m);
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#145: FILE: drivers/message/i2o/i2o_core.c:2347:
+	msg=(u32 *)(c->msg_virt+m);
 	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#145: FILE: drivers/message/i2o/i2o_core.c:2347:
+	msg=(u32 *)(c->msg_virt+m);
 	                       ^

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: drivers/message/i2o/i2o_core.c:3596:
+	if(c->raptor)

ERROR:SPACING: space required before the open parenthesis '('
#260: FILE: drivers/message/i2o/i2o_core.c:3686:
+	if(dev->vendor == PCI_VENDOR_ID_DPT) {

ERROR:SPACING: space required before the open parenthesis '('
#262: FILE: drivers/message/i2o/i2o_core.c:3688:
+		if(dev->device == 0xA511)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#263: FILE: drivers/message/i2o/i2o_core.c:3689:
+			c->raptor=1;
 			         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#266: FILE: drivers/message/i2o/i2o_core.c:3692:
+	for(i=0; i<6; i++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#266: FILE: drivers/message/i2o/i2o_core.c:3692:
+	for(i=0; i<6; i++)
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#266: FILE: drivers/message/i2o/i2o_core.c:3692:
+	for(i=0; i<6; i++)
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#266: FILE: drivers/message/i2o/i2o_core.c:3692:
+	for(i=0; i<6; i++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#269: FILE: drivers/message/i2o/i2o_core.c:3695:
+		if(!(pci_resource_flags(dev, i) & IORESOURCE_IO))
+		{

ERROR:SPACING: space required before the open parenthesis '('
#269: FILE: drivers/message/i2o/i2o_core.c:3695:
+		if(!(pci_resource_flags(dev, i) & IORESOURCE_IO))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#271: FILE: drivers/message/i2o/i2o_core.c:3697:
+			if(!bar0_phys)
+			{

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: drivers/message/i2o/i2o_core.c:3697:
+			if(!bar0_phys)

ERROR:SPACING: space required before the open parenthesis '('
#275: FILE: drivers/message/i2o/i2o_core.c:3701:
+				if(!c->raptor)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#278: FILE: drivers/message/i2o/i2o_core.c:3704:
+			else
+			{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#278: FILE: drivers/message/i2o/i2o_core.c:3704:
+			}
+			else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#287: FILE: drivers/message/i2o/i2o_core.c:3713:
+	if(i==6)
+	{

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#287: FILE: drivers/message/i2o/i2o_core.c:3713:
+	if(i==6)
 	    ^

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: drivers/message/i2o/i2o_core.c:3713:
+	if(i==6)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#289: FILE: drivers/message/i2o/i2o_core.c:3715:
+		printk(KERN_ERR "i2o: I2O controller has no memory regions defined.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: drivers/message/i2o/i2o_core.c:3720:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#296: FILE: drivers/message/i2o/i2o_core.c:3722:
+	if(!c->raptor)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#297: FILE: drivers/message/i2o/i2o_core.c:3723:
+		printk(KERN_INFO "i2o: PCI I2O controller at %08lX size=%ld\n", bar0_phys, bar0_size);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#297: FILE: drivers/message/i2o/i2o_core.c:3723:
+		printk(KERN_INFO "i2o: PCI I2O controller at %08lX size=%ld\n", bar0_phys, bar0_size);

WARNING:LONG_LINE: line length of 166 exceeds 100 columns
#299: FILE: drivers/message/i2o/i2o_core.c:3725:
+		printk(KERN_INFO "i2o: PCI I2O controller\n    BAR0 at 0x%08lX size=%ld\n    BAR1 at 0x%08lX size=%ld\n", bar0_phys, bar0_size, bar1_phys, bar1_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#299: FILE: drivers/message/i2o/i2o_core.c:3725:
+		printk(KERN_INFO "i2o: PCI I2O controller\n    BAR0 at 0x%08lX size=%ld\n    BAR1 at 0x%08lX size=%ld\n", bar0_phys, bar0_size, bar1_phys, bar1_size);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#302: FILE: drivers/message/i2o/i2o_core.c:3728:
+	if(bar0_virt==0)
+	{

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#302: FILE: drivers/message/i2o/i2o_core.c:3728:
+	if(bar0_virt==0)
 	            ^

ERROR:SPACING: space required before the open parenthesis '('
#302: FILE: drivers/message/i2o/i2o_core.c:3728:
+	if(bar0_virt==0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#304: FILE: drivers/message/i2o/i2o_core.c:3730:
+		printk(KERN_ERR "i2o: Unable to map controller.\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#309: FILE: drivers/message/i2o/i2o_core.c:3735:
+	if(c->raptor)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: drivers/message/i2o/i2o_core.c:3735:
+	if(c->raptor)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#312: FILE: drivers/message/i2o/i2o_core.c:3738:
+		if(bar1_virt==0)
+		{

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#312: FILE: drivers/message/i2o/i2o_core.c:3738:
+		if(bar1_virt==0)
 		            ^

ERROR:SPACING: space required before the open parenthesis '('
#312: FILE: drivers/message/i2o/i2o_core.c:3738:
+		if(bar1_virt==0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#314: FILE: drivers/message/i2o/i2o_core.c:3740:
+			printk(KERN_ERR "i2o: Unable to map controller.\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: drivers/message/i2o/i2o_core.c:3751:
+	c->irq_mask = bar0_virt+0x34;
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#326: FILE: drivers/message/i2o/i2o_core.c:3752:
+	c->post_port = bar0_virt+0x40;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: drivers/message/i2o/i2o_core.c:3753:
+	c->reply_port = bar0_virt+0x44;
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: drivers/message/i2o/i2o_core.c:3782:
+	if(c->raptor)

ERROR:SPACING: space required before the open parenthesis '('
#369: FILE: drivers/message/i2o/i2o_core.c:3796:
+		if(c->raptor)

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: drivers/message/i2o/i2o_core.c:3813:
+			if(c->raptor)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#390: FILE: drivers/message/i2o/i2o_core.c:3847:
+		if((dev->class>>8)!=PCI_CLASS_INTELLIGENT_I2O &&
 		              ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#390: FILE: drivers/message/i2o/i2o_core.c:3847:
+		if((dev->class>>8)!=PCI_CLASS_INTELLIGENT_I2O &&
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#390: FILE: drivers/message/i2o/i2o_core.c:3847:
+		if((dev->class>>8)!=PCI_CLASS_INTELLIGENT_I2O &&

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#391: FILE: drivers/message/i2o/i2o_core.c:3848:
+		   (dev->vendor!=PCI_VENDOR_ID_DPT || dev->device!=0xA511))
 		               ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#391: FILE: drivers/message/i2o/i2o_core.c:3848:
+		   (dev->vendor!=PCI_VENDOR_ID_DPT || dev->device!=0xA511))
 		                                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#395: FILE: drivers/message/i2o/i2o_core.c:3851:
+		if((dev->class>>8)==PCI_CLASS_INTELLIGENT_I2O &&
 		              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#395: FILE: drivers/message/i2o/i2o_core.c:3851:
+		if((dev->class>>8)==PCI_CLASS_INTELLIGENT_I2O &&
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#395: FILE: drivers/message/i2o/i2o_core.c:3851:
+		if((dev->class>>8)==PCI_CLASS_INTELLIGENT_I2O &&

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#396: FILE: drivers/message/i2o/i2o_core.c:3852:
+		   (dev->class&0xFF)>1)
 		              ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#396: FILE: drivers/message/i2o/i2o_core.c:3852:
+		   (dev->class&0xFF)>1)
 		                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278831.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 7 warnings, 11 checks, 361 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278831.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
