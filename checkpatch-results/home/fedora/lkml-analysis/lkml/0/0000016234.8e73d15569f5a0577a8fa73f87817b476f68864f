WARNING:TYPO_SPELLING: 'Remore' may be misspelled - perhaps 'Remote'?
#41: 
Remore kmem_cache_t from mm.
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/slab.h:61:
+extern struct kmem_cache *kmem_cache_create(const char *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#72: FILE: include/linux/slab.h:61:
+extern struct kmem_cache *kmem_cache_create(const char *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#72: FILE: include/linux/slab.h:61:
+extern struct kmem_cache *kmem_cache_create(const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#72: FILE: include/linux/slab.h:61:
+extern struct kmem_cache *kmem_cache_create(const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#72: FILE: include/linux/slab.h:61:
+extern struct kmem_cache *kmem_cache_create(const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: include/linux/slab.h:62:
+extern struct kmem_cache *kmem_cache_create(const char *,
+		size_t, size_t, unsigned long,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/slab.h:65:
+extern void kmem_cache_destroy(struct kmem_cache *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#76: FILE: include/linux/slab.h:65:
+extern void kmem_cache_destroy(struct kmem_cache *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/slab.h:66:
+extern int kmem_cache_shrink(struct kmem_cache *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#77: FILE: include/linux/slab.h:66:
+extern int kmem_cache_shrink(struct kmem_cache *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc(struct kmem_cache *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#78: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc(struct kmem_cache *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#78: FILE: include/linux/slab.h:67:
+extern void *kmem_cache_alloc(struct kmem_cache *, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/slab.h:69:
+extern void kmem_cache_free(struct kmem_cache *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#83: FILE: include/linux/slab.h:69:
+extern void kmem_cache_free(struct kmem_cache *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#83: FILE: include/linux/slab.h:69:
+extern void kmem_cache_free(struct kmem_cache *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/slab.h:70:
+extern unsigned int kmem_cache_size(struct kmem_cache *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#84: FILE: include/linux/slab.h:70:
+extern unsigned int kmem_cache_size(struct kmem_cache *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/slab.h:71:
+extern const char *kmem_cache_name(struct kmem_cache *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmem_cache *' should also have an identifier name
#85: FILE: include/linux/slab.h:71:
+extern const char *kmem_cache_name(struct kmem_cache *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/slab.h:220:
+extern void *kmem_cache_alloc_node(struct kmem_cache *, gfp_t flags, int node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: include/linux/slab.h:247:
+static inline void *kmem_cache_alloc_node(struct kmem_cache *cachep,
+						 gfp_t flags, int node)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/slab.h:258:
+extern int FASTCALL(kmem_ptr_validate(struct kmem_cache *cachep, void *ptr));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/slab.h:261:
+extern void kmem_set_shrinker(struct kmem_cache *cachep,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: include/linux/slab.h:262:
+extern void kmem_set_shrinker(struct kmem_cache *cachep,
+					struct shrinker *shrinker);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000016234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 13 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000016234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
