WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
diff -urN rc11-pre6/drivers/isdn/avmb1/capifs.c rc11-6-new_inode/drivers/isdn/avmb1/capifs.c

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: fs/ntfs/inode.c:1053:
+ntfs_new_inode (ntfs_volume* vol,int* result)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: fs/ntfs/inode.c:1053:
+ntfs_new_inode (ntfs_volume* vol,int* result)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: fs/ntfs/inode.c:1053:
+ntfs_new_inode (ntfs_volume* vol,int* result)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: fs/ntfs/inode.c:1053:
+ntfs_new_inode (ntfs_volume* vol,int* result)
                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: fs/ntfs/inode.c:1239:
+	error=ntfs_new_inode (vol,&(result->i_number));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: fs/ntfs/inode.c:1239:
+	error=ntfs_new_inode (vol,&(result->i_number));
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#182: FILE: fs/ntfs/inode.c:1239:
+	error=ntfs_new_inode (vol,&(result->i_number));
 	                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#182: FILE: fs/ntfs/inode.c:1239:
+	error=ntfs_new_inode (vol,&(result->i_number));
 	                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around result->i_number
#182: FILE: fs/ntfs/inode.c:1239:
+	error=ntfs_new_inode (vol,&(result->i_number));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#187: FILE: fs/ntfs/inode.c:1243:
+		error=ntfs_new_inode(vol,&(result->i_number));
 		     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#187: FILE: fs/ntfs/inode.c:1243:
+		error=ntfs_new_inode(vol,&(result->i_number));
 		                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#187: FILE: fs/ntfs/inode.c:1243:
+		error=ntfs_new_inode(vol,&(result->i_number));
 		                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around result->i_number
#187: FILE: fs/ntfs/inode.c:1243:
+		error=ntfs_new_inode(vol,&(result->i_number));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: ipc/shm.c:383:
+		if (!(shp = shm_lock (id))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#234: FILE: ipc/shm.c:383:
+		if (!(shp = shm_lock (id))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000565928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 4 warnings, 2 checks, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000565928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
