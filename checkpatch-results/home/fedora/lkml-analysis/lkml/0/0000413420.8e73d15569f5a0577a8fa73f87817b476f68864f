WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#include <ctype.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#include <elf.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#include <fcntl.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#include <stdlib.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#include <stdio.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#include <string.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#include <syscall.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#include <sys/stat.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#define DPRINTF(fmt, ...)

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#180: 
			Elf32_Sym *end = (Elf32_Sym *)(mod + shdr[i].sh_offset + shdr[i].sh_size);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#295: FILE: include/linux/module.h:86:
+struct module_new
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: include/linux/module.h:288:
+extern struct module_new __module_initdata __attribute__ ((section (".module_initdata")));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".module_initdata") over __attribute__((section(".module_initdata")))
#309: FILE: include/linux/module.h:288:
+extern struct module_new __module_initdata __attribute__ ((section (".module_initdata")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#310: FILE: include/linux/module.h:289:
+extern struct module __this_module __attribute__ ((weak));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#329: FILE: init/module.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: init/module.c:3:
+extern int init_module(void); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#332: FILE: init/module.c:4:
+extern void cleanup_module(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#333: FILE: init/module.c:5:
+extern struct module_symbol __syms_start;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#334: FILE: init/module.c:6:
+extern struct module_symbol __syms_end;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#335: FILE: init/module.c:7:
+extern const struct exception_table_entry __ex_table_start;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#336: FILE: init/module.c:8:
+extern const struct exception_table_entry __ex_table_end;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#337: FILE: init/module.c:9:
+char __module_name[] __attribute__ ((weak)) = "";

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#338: FILE: init/module.c:10:
+char __module_args[] __attribute__ ((weak)) = "";

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: init/module.c:12:
+struct module_new __module_initdata __attribute__ ((section (".module_initdata"))) = {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".module_initdata") over __attribute__((section(".module_initdata")))
#340: FILE: init/module.c:12:
+struct module_new __module_initdata __attribute__ ((section (".module_initdata"))) = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: init/module.c:14:
+^I^I.name ^I^I= __module_name,$

WARNING:LINE_SPACING: Missing a blank line after declarations
#384: FILE: kernel/module.c:412:
+		struct module_new *new_mod = (struct module_new *)mod;
+		mod->size = mod_tmp.size;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#394: FILE: kernel/module.c:493:
+	if (mod->size_of_struct) {
 	if ((n_namelen = get_mod_name(mod->name - (unsigned long)mod

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000413420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 27 warnings, 0 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000413420.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
