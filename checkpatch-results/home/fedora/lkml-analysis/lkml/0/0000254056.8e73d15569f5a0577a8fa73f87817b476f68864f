WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
--- 1.17/Documentation/DocBook/kernel-hacking.tmpl	2004-05-19 18:02:52 +02:00

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/i386/lib/mmx.c:5:
+#include <linux/hardirq.h> $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#349: FILE: arch/parisc/kernel/asm-offsets.c:37:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#970: FILE: drivers/char/rio/linux_compat.h:16:
  *      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1897: FILE: include/asm-s390/hardirq.h:64:
+extern void do_call_softirq(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1898: FILE: include/asm-s390/hardirq.h:65:
+extern void account_ticks(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#1898: FILE: include/asm-s390/hardirq.h:65:
+extern void account_ticks(struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2408: FILE: include/linux/hardirq.h:1:
+#ifndef LINUX_HARDIRQ_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2417: FILE: include/linux/hardirq.h:10:
+#define __IRQ_MASK(x)	((1UL << (x))-1)
                      	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#2423: FILE: include/linux/hardirq.h:16:
+#define PREEMPT_OFFSET	(1UL << PREEMPT_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#2424: FILE: include/linux/hardirq.h:17:
+#define SOFTIRQ_OFFSET	(1UL << SOFTIRQ_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#2425: FILE: include/linux/hardirq.h:18:
+#define HARDIRQ_OFFSET	(1UL << HARDIRQ_SHIFT)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#2443: FILE: include/linux/hardirq.h:36:
+# define in_atomic()	((preempt_count() & ~PREEMPT_ACTIVE) != kernel_locked())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2445: FILE: include/linux/hardirq.h:38:
+# define IRQ_EXIT_OFFSET (HARDIRQ_OFFSET-1)
                                         ^

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#2447: FILE: include/linux/hardirq.h:40:
+# define in_atomic()	(preempt_count() != 0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2453: FILE: include/linux/hardirq.h:46:
+extern void synchronize_irq(unsigned int irq);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254056.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 5 warnings, 9 checks, 1937 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254056.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
