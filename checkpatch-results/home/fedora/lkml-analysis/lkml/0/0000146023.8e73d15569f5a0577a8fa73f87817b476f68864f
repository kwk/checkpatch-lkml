CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/asm-ppc64/processor.h:542:
+extern unsigned long scom970_read(unsigned int address);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/asm-ppc64/processor.h:543:
+extern void scom970_write(unsigned int address, unsigned long value);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#157: FILE: arch/ppc64/Kconfig:164:
+config CPU_FREQ_PMAC
+	bool "Support for Apple G5"
+	depends on CPU_FREQ && PPC_PMAC64
+	select CPU_FREQ_TABLE
+	help
+	  This adds support for frequency switching on some Apple G5
+          machine. This is currently very experimental and works only
+          on some iMac G5.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#186: FILE: arch/ppc64/kernel/pmac_cpufreq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/ppc64/kernel/pmac_cpufreq.c:35:
+#define DBG(fmt...) printk(fmt)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: arch/ppc64/kernel/pmac_cpufreq.c:71:
+^I{CPUFREQ_HIGH, ^I^I0},$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#261: FILE: arch/ppc64/kernel/pmac_cpufreq.c:76:
+static struct freq_attr* g5_cpu_freqs_attr[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'retreived' may be misspelled - perhaps 'retrieved'?
#267: FILE: arch/ppc64/kernel/pmac_cpufreq.c:82:
+ * the various frequencies, retreived from the device-tree
                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#273: FILE: arch/ppc64/kernel/pmac_cpufreq.c:88:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#285: FILE: arch/ppc64/kernel/pmac_cpufreq.c:100:
+	DECLARE_COMPLETION(comp);
+	smu_queue_simple(&cmd, SMU_CMD_POWER_COMMAND, 8, smu_done_complete,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#287: FILE: arch/ppc64/kernel/pmac_cpufreq.c:102:
+			 0xff, g5_fvt_cur+1, speed_mode);
 			                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/ppc64/kernel/pmac_cpufreq.c:120:
+       ^Iscom970_write(SCOM_PCR, PCR_HILO_SELECT | 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: arch/ppc64/kernel/pmac_cpufreq.c:120:
+       ^Iscom970_write(SCOM_PCR, PCR_HILO_SELECT | 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/ppc64/kernel/pmac_cpufreq.c:120:
+       ^Iscom970_write(SCOM_PCR, PCR_HILO_SELECT | 0);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#321: FILE: arch/ppc64/kernel/pmac_cpufreq.c:136:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: arch/ppc64/kernel/pmac_cpufreq.c:168:
+static int __pmac g5_cpufreq_target(struct cpufreq_policy *policy,
+	unsigned int target_freq, unsigned int relation)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: arch/ppc64/kernel/pmac_cpufreq.c:173:
+	if (cpufreq_frequency_table_target(policy, g5_cpu_freqs,
+			target_freq, relation, &newstate))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#378: FILE: arch/ppc64/kernel/pmac_cpufreq.c:193:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: arch/ppc64/kernel/pmac_cpufreq.c:201:
+^I.attr ^I^I= g5_cpu_freqs_attr,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#389: FILE: arch/ppc64/kernel/pmac_cpufreq.c:204:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxO)
#418: FILE: arch/ppc64/kernel/pmac_cpufreq.c:233:
+	g5_pmode_data = (u32 *)get_property(cpunode, "power-mode-data",&psize);
 	                                                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#418: FILE: arch/ppc64/kernel/pmac_cpufreq.c:233:
+	g5_pmode_data = (u32 *)get_property(cpunode, "power-mode-data",&psize);
 	                                                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#448: FILE: arch/ppc64/kernel/pmac_cpufreq.c:263:
+	max_freq = (*valp)/1000;
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#450: FILE: arch/ppc64/kernel/pmac_cpufreq.c:265:
+	g5_cpu_freqs[1].frequency = max_freq/2;
 	                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#460: FILE: arch/ppc64/kernel/pmac_cpufreq.c:275:
+	printk(KERN_INFO "Registering G5 CPU frequency driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#461: FILE: arch/ppc64/kernel/pmac_cpufreq.c:276:
+	printk(KERN_INFO "Low: %d Mhz, High: %d Mhz, Cur: %d MHz\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: arch/ppc64/kernel/pmac_cpufreq.c:277:
+	printk(KERN_INFO "Low: %d Mhz, High: %d Mhz, Cur: %d MHz\n",
+		g5_cpu_freqs[1].frequency/1000,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#462: FILE: arch/ppc64/kernel/pmac_cpufreq.c:277:
+		g5_cpu_freqs[1].frequency/1000,
 		                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#463: FILE: arch/ppc64/kernel/pmac_cpufreq.c:278:
+		g5_cpu_freqs[0].frequency/1000,
 		                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#464: FILE: arch/ppc64/kernel/pmac_cpufreq.c:279:
+		g5_cpu_freqs[g5_pmode_cur].frequency/1000);
 		                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: arch/ppc64/kernel/pmac_cpufreq.c:296:
+
+

WARNING:TYPO_SPELLING: 'decyphered' may be misspelled - perhaps 'deciphered'?
#519: FILE: include/asm-ppc64/smu.h:151:
+ * I haven't yet decyphered result codes
                  ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#527: FILE: include/asm-ppc64/smu.h:251:
 
+

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#535: FILE: include/asm-ppc64/smu.h:342:
+ * - SMU "sdb" partitions informations -
                           ^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#538: FILE: include/asm-ppc64/smu.h:345:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#553: FILE: include/asm-ppc64/smu.h:360:
+#define SMU_U32_MIX(x)	((((x) << 16) & 0xffff0000u) | (((x) >> 16) & 0xffffu))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#581: FILE: include/asm-ppc64/smu.h:388:
+extern struct smu_sdbp_header *smu_get_sdb_partition(int id,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#586: FILE: include/asm-ppc64/smu.h:393:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#595: FILE: include/asm-ppc64/smu.h:437:
 
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146023.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 13 warnings, 22 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146023.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
