WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
diff -urN linux-2.5.48/include/asm-s390/smp.h linux-2.5.48-s390/include/asm-s390/smp.h

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#33: FILE: include/asm-s390/smp.h:32:
+extern volatile unsigned long cpu_possible_map;

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: include/asm-s390/unistd.h:265:
+        register long __res asm("2");                        \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: include/asm-s390/unistd.h:265:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: include/asm-s390/unistd.h:278:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: include/asm-s390/unistd.h:278:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: include/asm-s390/unistd.h:284:
+                  "0" (__arg1)                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: include/asm-s390/unistd.h:284:
+                  "0" (__arg1)                               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: include/asm-s390/unistd.h:293:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: include/asm-s390/unistd.h:293:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: include/asm-s390/unistd.h:299:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: include/asm-s390/unistd.h:299:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: include/asm-s390/unistd.h:310:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: include/asm-s390/unistd.h:310:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: include/asm-s390/unistd.h:316:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: include/asm-s390/unistd.h:316:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: include/asm-s390/unistd.h:330:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/asm-s390/unistd.h:330:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: include/asm-s390/unistd.h:336:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: include/asm-s390/unistd.h:336:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: include/asm-s390/unistd.h:353:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: include/asm-s390/unistd.h:353:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: include/asm-s390/unistd.h:359:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: include/asm-s390/unistd.h:359:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: include/asm-s390x/unistd.h:232:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: include/asm-s390x/unistd.h:232:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: include/asm-s390x/unistd.h:245:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/asm-s390x/unistd.h:245:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: include/asm-s390x/unistd.h:251:
+                  "0" (__arg1)                               \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: include/asm-s390x/unistd.h:251:
+                  "0" (__arg1)                               \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: include/asm-s390x/unistd.h:260:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: include/asm-s390x/unistd.h:260:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: include/asm-s390x/unistd.h:266:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: include/asm-s390x/unistd.h:266:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: include/asm-s390x/unistd.h:277:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: include/asm-s390x/unistd.h:277:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: include/asm-s390x/unistd.h:283:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: include/asm-s390x/unistd.h:283:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: include/asm-s390x/unistd.h:297:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: include/asm-s390x/unistd.h:297:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: include/asm-s390x/unistd.h:303:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: include/asm-s390x/unistd.h:303:
+                  "0" (__arg1),                              \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: include/asm-s390x/unistd.h:320:
+        register long __res asm("2");                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/asm-s390x/unistd.h:320:
+        register long __res asm("2");                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: include/asm-s390x/unistd.h:326:
+                  "0" (__arg1),                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: include/asm-s390x/unistd.h:326:
+                  "0" (__arg1),                              \$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 24 warnings, 0 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
