WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
 drivers/i2c/i2c-elv.c        |  176 -------------------------------------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/drivers/i2c/Kconfig	Mon Sep 22 16:12:56 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/i2c/busses/Kconfig:56:
+^I  This support is also available as a module.  If so, the module $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#105: FILE: drivers/i2c/busses/i2c-elv.c:1:
+/* ------------------------------------------------------------------------- */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: drivers/i2c/busses/i2c-elv.c:5:
+/*   Copyright (C) 1995-2000 Simon G. Vogl
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#121: FILE: drivers/i2c/busses/i2c-elv.c:17:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#122: FILE: drivers/i2c/busses/i2c-elv.c:18:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.^I^I     */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#122: FILE: drivers/i2c/busses/i2c-elv.c:18:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.		     */

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#125: FILE: drivers/i2c/busses/i2c-elv.c:21:
+/* With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#126: FILE: drivers/i2c/busses/i2c-elv.c:22:
+/* With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> and even
+   Frodo Looijaard <frodol@dds.nl> */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: drivers/i2c/busses/i2c-elv.c:22:
+   Frodo Looijaard <frodol@dds.nl> */

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#128: FILE: drivers/i2c/busses/i2c-elv.c:24:
+/* $Id: i2c-elv.c,v 1.27 2003/01/21 08:08:16 kmalkki Exp $ */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#139: FILE: drivers/i2c/busses/i2c-elv.c:35:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#142: FILE: drivers/i2c/busses/i2c-elv.c:38:
+static int base=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: drivers/i2c/busses/i2c-elv.c:38:
+static int base=0;
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#143: FILE: drivers/i2c/busses/i2c-elv.c:39:
+static unsigned char PortData = 0;

CHECK:CAMELCASE: Avoid CamelCase: <PortData>
#143: FILE: drivers/i2c/busses/i2c-elv.c:39:
+static unsigned char PortData = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: drivers/i2c/busses/i2c-elv.c:42:
+#define DEB(x)^I^I/* should be reasonable open, close &c. ^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: drivers/i2c/busses/i2c-elv.c:43:
+#define DEB2(x) ^I/* low level debugging - very slow ^I^I*/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: drivers/i2c/busses/i2c-elv.c:44:
+#define DEBE(x)^Ix^I/* error messages ^I^I^I^I*/$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#152: FILE: drivers/i2c/busses/i2c-elv.c:48:
+#define BASE	(unsigned int)(data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: drivers/i2c/busses/i2c-elv.c:50:
+#define STAT	(BASE+1)		/* Centronics status port	*/
             	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: drivers/i2c/busses/i2c-elv.c:51:
+#define CTRL	(BASE+2)		/* Centronics control port	*/
             	     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/i2c/busses/i2c-elv.c:53:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/i2c/busses/i2c-elv.c:56:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#163: FILE: drivers/i2c/busses/i2c-elv.c:59:
+	if (state) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#166: FILE: drivers/i2c/busses/i2c-elv.c:62:
+		PortData |=1;
 		         ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#173: FILE: drivers/i2c/busses/i2c-elv.c:69:
+	if (state) {
[...]
+	} else {
[...]

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#174: FILE: drivers/i2c/busses/i2c-elv.c:70:
+		PortData &=0xfd;
 		         ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#176: FILE: drivers/i2c/busses/i2c-elv.c:72:
+		PortData |=2;
 		         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/i2c/busses/i2c-elv.c:75:
+} $

ERROR:SPACING: space prohibited after that open parenthesis '('
#183: FILE: drivers/i2c/busses/i2c-elv.c:79:
+	return ( 0 == ( (inb_p(STAT)) & 0x08 ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#183: FILE: drivers/i2c/busses/i2c-elv.c:79:
+	return ( 0 == ( (inb_p(STAT)) & 0x08 ) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#188: FILE: drivers/i2c/busses/i2c-elv.c:84:
+	return ( 0 == ( (inb_p(STAT)) & 0x40 ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#188: FILE: drivers/i2c/busses/i2c-elv.c:84:
+	return ( 0 == ( (inb_p(STAT)) & 0x40 ) );

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'base == 0x3bc'
#193: FILE: drivers/i2c/busses/i2c-elv.c:89:
+	if (!request_region(base, (base == 0x3bc) ? 3 : 8,
+				"i2c (ELV adapter)"))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: drivers/i2c/busses/i2c-elv.c:90:
+	if (!request_region(base, (base == 0x3bc) ? 3 : 8,
+				"i2c (ELV adapter)"))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#197: FILE: drivers/i2c/busses/i2c-elv.c:93:
+	if (inb(base+1) & 0x80) {	/* BUSY should be high	*/
 	            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#198: FILE: drivers/i2c/busses/i2c-elv.c:94:
+		DEBINIT(printk(KERN_DEBUG "i2c-elv.o: Busy was low.\n"));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/i2c/busses/i2c-elv.c:96:
+^I} $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/i2c/busses/i2c-elv.c:98:
+	outb(0x0c,base+2);	/* SLCT auf low		*/
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#202: FILE: drivers/i2c/busses/i2c-elv.c:98:
+	outb(0x0c,base+2);	/* SLCT auf low		*/
 	              ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#203: FILE: drivers/i2c/busses/i2c-elv.c:99:
+	udelay(400);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: drivers/i2c/busses/i2c-elv.c:100:
+	if (!(inb(base+1) && 0x10)) {
 	              ^

WARNING:HEXADECIMAL_BOOLEAN_TEST: boolean test with hexadecimal, perhaps just 1 & or |?
#204: FILE: drivers/i2c/busses/i2c-elv.c:100:
+	if (!(inb(base+1) && 0x10)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: drivers/i2c/busses/i2c-elv.c:101:
+		outb(0x04,base+2);
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: drivers/i2c/busses/i2c-elv.c:101:
+		outb(0x04,base+2);
 		              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#206: FILE: drivers/i2c/busses/i2c-elv.c:102:
+		DEBINIT(printk(KERN_DEBUG "i2c-elv.o: Select was high.\n"));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#211: FILE: drivers/i2c/busses/i2c-elv.c:107:
+	bit_elv_setsda((void*)base,1);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/i2c/busses/i2c-elv.c:107:
+	bit_elv_setsda((void*)base,1);
 	                          ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#212: FILE: drivers/i2c/busses/i2c-elv.c:108:
+	bit_elv_setscl((void*)base,1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: drivers/i2c/busses/i2c-elv.c:108:
+	bit_elv_setscl((void*)base,1);
 	                          ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#216: FILE: drivers/i2c/busses/i2c-elv.c:112:
+	release_region(base , (base == 0x3bc) ? 3 : 8);
 	                    ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#243: FILE: drivers/i2c/busses/i2c-elv.c:139:
+	printk(KERN_INFO "i2c-elv.o: i2c ELV parallel port adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#243: FILE: drivers/i2c/busses/i2c-elv.c:139:
+	printk(KERN_INFO "i2c-elv.o: i2c ELV parallel port adapter module version %s (%s)\n", I2C_VERSION, I2C_DATE);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#244: FILE: drivers/i2c/busses/i2c-elv.c:140:
+	if (base==0) {
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: drivers/i2c/busses/i2c-elv.c:142:
+		base=DEFAULT_BASE;
 		    ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#247: FILE: drivers/i2c/busses/i2c-elv.c:143:
+		bit_elv_data.data=(void*)DEFAULT_BASE;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#247: FILE: drivers/i2c/busses/i2c-elv.c:143:
+		bit_elv_data.data=(void*)DEFAULT_BASE;
 		                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#248: FILE: drivers/i2c/busses/i2c-elv.c:144:
+		if (bit_elv_init()==0) {
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#249: FILE: drivers/i2c/busses/i2c-elv.c:145:
+			if(i2c_bit_add_bus(&bit_elv_ops) < 0)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#256: FILE: drivers/i2c/busses/i2c-elv.c:152:
+		if (bit_elv_init()==0) {
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: drivers/i2c/busses/i2c-elv.c:153:
+			if(i2c_bit_add_bus(&bit_elv_ops) < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#263: FILE: drivers/i2c/busses/i2c-elv.c:159:
+	printk(KERN_DEBUG "i2c-elv.o: found device at %#x.\n",base);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: drivers/i2c/busses/i2c-elv.c:159:
+	printk(KERN_DEBUG "i2c-elv.o: found device at %#x.\n",base);
 	                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#270: FILE: drivers/i2c/busses/i2c-elv.c:166:
+	release_region(base , (base == 0x3bc) ? 3 : 8);
 	                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 19 warnings, 13 checks, 222 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335125.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
