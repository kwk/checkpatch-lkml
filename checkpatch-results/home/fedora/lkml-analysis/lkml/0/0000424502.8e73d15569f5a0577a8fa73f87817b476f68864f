WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -Naur linux-2.5.41/drivers/evms/core/evms.c linux-2.5.41-evms/drivers/evms/core/evms.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/evms/core/evms.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: drivers/evms/core/evms.c:15:
+ *   along with this program;  if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/evms/core/evms.c:16:
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#72: FILE: drivers/evms/core/evms.c:31:
+#include <asm/uaccess.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#87: FILE: drivers/evms/core/evms.c:46:
+struct proc_dir_entry *evms_proc_dir = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#117: FILE: drivers/evms/core/evms.c:76:
+int evms_volumes = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/evms/core/evms.c:78:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: drivers/evms/core/evms.c:79:
+ * internal POOL variables $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/evms/core/evms.c:84:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: drivers/evms/core/evms.c:85:
+ * Handle for the devfs directory entry $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: drivers/evms/core/evms.c:99:
+	 &evms_info_level, sizeof (int), 0644, NULL,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/evms/core/evms.c:127:
+	for (lv = list_entry(list_member->next, typeof(*lv), volumes),
+		     prefetch(lv->volumes.next);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/evms/core/evms.c:128:
+^I     &lv->volumes != &evms_logical_volumes; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/evms/core/evms.c:147:
+                list_entry(evms_logical_volumes.next, typeof(*lv), volumes);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/evms/core/evms.c:147:
+                list_entry(evms_logical_volumes.next, typeof(*lv), volumes);$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#190: FILE: drivers/evms/core/evms.c:149:
+	if (&lv->volumes != &evms_logical_volumes) {
+		return lv;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: drivers/evms/core/evms.c:165:
+	struct evms_logical_volume *lv;
+	list_for_each_entry(lv, &evms_logical_volumes, volumes) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#207: FILE: drivers/evms/core/evms.c:166:
+		if (lv->minor == minor) {
+			return lv;
+		}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#223: FILE: drivers/evms/core/evms.c:182:
+	BUG_ON(list_empty(&lv->volumes));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <GetPluginOEM>
#336: FILE: drivers/evms/core/evms.c:295:
+			  GetPluginOEM(plugin->id),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GetPluginType>
#337: FILE: drivers/evms/core/evms.c:296:
+			  GetPluginType(plugin->id),

CHECK:CAMELCASE: Avoid CamelCase: <GetPluginID>
#338: FILE: drivers/evms/core/evms.c:297:
+			  GetPluginID(plugin->id),

WARNING:BRACES: braces {} are not necessary for single statement blocks
#374: FILE: drivers/evms/core/evms.c:333:
+		if (!lv->node) {
+			continue;
+		}

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#377: FILE: drivers/evms/core/evms.c:336:
+		PROCPRINT("%5d %7d %16Ld %s %s %s %s%s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: drivers/evms/core/evms.c:339:
+^I^I^I  (lv->flags & EVMS_VOLUME_FLAG) ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: drivers/evms/core/evms.c:341:
+^I^I^I  (lv->flags & EVMS_VOLUME_READ_ONLY) ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: drivers/evms/core/evms.c:343:
+^I^I^I  (lv->flags & EVMS_VOLUME_PARTIAL) ? $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: drivers/evms/core/evms.c:410:
+	if (copy_to_user(arg, &ver, sizeof (ver)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: drivers/evms/core/evms.c:435:
+	if (copy_to_user(arg, &ver, sizeof (ver)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#495: FILE: drivers/evms/core/evms.c:454:
+	if (copy_to_user(arg, &evms_info_level, sizeof (evms_info_level)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#516: FILE: drivers/evms/core/evms.c:475:
+	if (copy_from_user(&temp, arg, sizeof (temp)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: drivers/evms/core/evms.c:534:
+^I$

WARNING:TYPO_SPELLING: 'permament' may be misspelled - perhaps 'permanent'?
#616: FILE: drivers/evms/core/evms.c:575:
+	/* if this is a "permament" delete */
 	                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#621: FILE: drivers/evms/core/evms.c:580:
+			if (command == 1) {
+				return -ENOMEM;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: drivers/evms/core/evms.c:584:
+^I^I} $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#629: FILE: drivers/evms/core/evms.c:588:
+			if (command == 1) {
+				return -EBUSY;
+			}

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: drivers/evms/core/evms.c:594:
+       ^Iif (command) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#635: FILE: drivers/evms/core/evms.c:594:
+       ^Iif (command) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/evms/core/evms.c:594:
+       ^Iif (command) {$

WARNING:TYPO_SPELLING: 'incase' may be misspelled - perhaps 'in case'?
#637: FILE: drivers/evms/core/evms.c:596:
+		 * this is required incase we are re-using the minor number
 		                    ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: drivers/evms/core/evms.c:658:
+^I^I^Istruct inode *inode, struct file *file, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#708: FILE: drivers/evms/core/evms.c:667:
+		if (dv->do_vfs) {
+			lvt->flags |= EVMS_REQUESTED_VFS_QUIESCE;
+		}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#724: FILE: drivers/evms/core/evms.c:683:
+		if (!rc) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#732: FILE: drivers/evms/core/evms.c:691:
+	if (rc) {
+		goto error;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#745: FILE: drivers/evms/core/evms.c:704:
+      error:

CHECK:SPACING: No space is necessary after a cast
#784: FILE: drivers/evms/core/evms.c:743:
+	user_parms = (struct evms_delete_vol_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#786: FILE: drivers/evms/core/evms.c:745:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#793: FILE: drivers/evms/core/evms.c:752:
+		if (lv == NULL || lv->node == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#793: FILE: drivers/evms/core/evms.c:752:
+		if (lv == NULL || lv->node == NULL) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#800: FILE: drivers/evms/core/evms.c:759:
+	if (lv == NULL || lv->node == NULL) {
[...]
+	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#800: FILE: drivers/evms/core/evms.c:759:
+	if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#800: FILE: drivers/evms/core/evms.c:759:
+	if (lv == NULL || lv->node == NULL) {

WARNING:INDENTED_LABEL: labels should not be indented
#805: FILE: drivers/evms/core/evms.c:764:
+      exit:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#808: FILE: drivers/evms/core/evms.c:767:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#808: FILE: drivers/evms/core/evms.c:767:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#857: FILE: drivers/evms/core/evms.c:816:
+	LOG_DETAILS("%s: started.\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#887: FILE: drivers/evms/core/evms.c:846:
+		if (doit == 0) {
+			continue;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#898: FILE: drivers/evms/core/evms.c:857:
+^I^Idv.command = (volume_mounted) ? EVMS_SOFT_DELETE : $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#901: FILE: drivers/evms/core/evms.c:860:
+		dv.do_vfs = dv.associative_minor = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#904: FILE: drivers/evms/core/evms.c:863:
+	LOG_DETAILS("%s: completed.\n", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#931: FILE: drivers/evms/core/evms.c:890:
+	rc = tmp.drive_count = 0;

CHECK:SPACING: No space is necessary after a cast
#932: FILE: drivers/evms/core/evms.c:891:
+	user_parms = (struct evms_rediscover_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#934: FILE: drivers/evms/core/evms.c:893:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#939: FILE: drivers/evms/core/evms.c:898:
+	if (tmp.drive_count == REDISCOVER_ALL_DEVICES) {
+		evms_full_rediscover_prep(inode, file);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#944: FILE: drivers/evms/core/evms.c:903:
+		if (!lv->node) {
+			continue;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#947: FILE: drivers/evms/core/evms.c:906:
+		if (!(lv->flags & EVMS_REQUESTED_QUIESCE)) {
+			continue;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#951: FILE: drivers/evms/core/evms.c:910:
+		rc = evms_quiesce_volume(lv, 1, lv->minor,
+			(lv->flags & EVMS_REQUESTED_VFS_QUIESCE) ?

WARNING:BRACES: braces {} are not necessary for single statement blocks
#957: FILE: drivers/evms/core/evms.c:916:
+		if (!lv->node) {
+			continue;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#960: FILE: drivers/evms/core/evms.c:919:
+		if (!(lv->flags & EVMS_REQUESTED_DELETE)) {
+			continue;
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.drive_count != REDISCOVER_ALL_DEVICES'
#967: FILE: drivers/evms/core/evms.c:926:
+	if (tmp.drive_count && (tmp.drive_count != REDISCOVER_ALL_DEVICES)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#969: FILE: drivers/evms/core/evms.c:928:
+		array_size = sizeof (*tmp.drive_array) * tmp.drive_count;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.drive_count != REDISCOVER_ALL_DEVICES'
#986: FILE: drivers/evms/core/evms.c:945:
+	if (tmp.drive_count && (tmp.drive_count != REDISCOVER_ALL_DEVICES))

WARNING:INDENTED_LABEL: labels should not be indented
#988: FILE: drivers/evms/core/evms.c:947:
+      exit:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#991: FILE: drivers/evms/core/evms.c:950:
+	if (copy_to_user(&user_parms->status, &tmp.status, sizeof (tmp.status))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.status'
#991: FILE: drivers/evms/core/evms.c:950:
+	if (copy_to_user(&user_parms->status, &tmp.status, sizeof (tmp.status))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#991: FILE: drivers/evms/core/evms.c:950:
+	if (copy_to_user(&user_parms->status, &tmp.status, sizeof (tmp.status))) {
+		rc = -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1007: FILE: drivers/evms/core/evms.c:966:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: drivers/evms/core/evms.c:974:
+	user_parms = (struct evms_user_disk_pkt *) arg;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.command'
#1017: FILE: drivers/evms/core/evms.c:976:
+	if (copy_from_user
+	    (&tmp.command, &user_parms->command, sizeof (tmp.command))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1018: FILE: drivers/evms/core/evms.c:977:
+	    (&tmp.command, &user_parms->command, sizeof (tmp.command))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1026: FILE: drivers/evms/core/evms.c:985:
+	if (user_disk_ptr == &evms_device_list)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1028: FILE: drivers/evms/core/evms.c:987:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1035: FILE: drivers/evms/core/evms.c:994:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1035: FILE: drivers/evms/core/evms.c:994:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1048: FILE: drivers/evms/core/evms.c:1007:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1057: FILE: drivers/evms/core/evms.c:1016:
+	user_parms = (struct evms_user_disk_info_pkt *) arg;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.disk_handle'
#1059: FILE: drivers/evms/core/evms.c:1018:
+	if (copy_from_user
+	    (&tmp.disk_handle, &user_parms->disk_handle,
+	     sizeof (tmp.disk_handle))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1061: FILE: drivers/evms/core/evms.c:1020:
+	     sizeof (tmp.disk_handle))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1073: FILE: drivers/evms/core/evms.c:1032:
+	if (rc) {
+		goto exit;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1080: FILE: drivers/evms/core/evms.c:1039:
+^Irc = evms_cs_kernel_ioctl(disk_node, EVMS_UPDATE_DEVICE_INFO, $

CHECK:SPACING: No space is necessary after a cast
#1081: FILE: drivers/evms/core/evms.c:1040:
+				  (ulong) NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1082: FILE: drivers/evms/core/evms.c:1041:
+	if (rc) {
+		goto exit;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#1090: FILE: drivers/evms/core/evms.c:1049:
+      exit:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1093: FILE: drivers/evms/core/evms.c:1052:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1093: FILE: drivers/evms/core/evms.c:1052:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1104: FILE: drivers/evms/core/evms.c:1063:
+ * routine will do I/O upto 64KB at a time, breaking larger requests up as
                        ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1108: FILE: drivers/evms/core/evms.c:1067:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1120: FILE: drivers/evms/core/evms.c:1079:
+	user_parms = (struct evms_sector_io_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1122: FILE: drivers/evms/core/evms.c:1081:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1122: FILE: drivers/evms/core/evms.c:1081:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1134: FILE: drivers/evms/core/evms.c:1093:
+	if (rc) {
+		goto exit;
+	}

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1137: FILE: drivers/evms/core/evms.c:1096:
+	/* allocate a io buffer upto 64Kbytes in size */
 	                        ^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1138: FILE: drivers/evms/core/evms.c:1097:
+	if (tmp.sector_count < MAX_IO_SIZE) {
+		io_size = tmp.sector_count;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1169: FILE: drivers/evms/core/evms.c:1128:
+		if (rc) {
+			goto exit;
+		}

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1187: FILE: drivers/evms/core/evms.c:1146:
+	if (io_buffer)
+		kfree(io_buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1191: FILE: drivers/evms/core/evms.c:1150:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp)))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1209: FILE: drivers/evms/core/evms.c:1168:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1218: FILE: drivers/evms/core/evms.c:1177:
+	user_parms = (struct evms_user_minor_pkt *) arg;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.command'
#1220: FILE: drivers/evms/core/evms.c:1179:
+	if (copy_from_user
+	    (&tmp.command, &user_parms->command, sizeof (tmp.command))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1221: FILE: drivers/evms/core/evms.c:1180:
+	    (&tmp.command, &user_parms->command, sizeof (tmp.command))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1242: FILE: drivers/evms/core/evms.c:1201:
+				/* clear logical volume structure
+				   * for this volume so it may be

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1244: FILE: drivers/evms/core/evms.c:1203:
+				   * reused.
+				 */

WARNING:SPLIT_STRING: quoted string split across lines
#1246: FILE: drivers/evms/core/evms.c:1205:
+				LOG_WARNING("ioctl_get_minor: found unmounted "
+					    "%s volume(%u,%u,%s).\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1251: FILE: drivers/evms/core/evms.c:1210:
+				LOG_WARNING("     releasing minor(%d) used by "
+					    "volume(%s)!\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1266: FILE: drivers/evms/core/evms.c:1225:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp)))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1279: FILE: drivers/evms/core/evms.c:1238:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1288: FILE: drivers/evms/core/evms.c:1247:
+	user_parms = (struct evms_volume_data_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1290: FILE: drivers/evms/core/evms.c:1249:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1290: FILE: drivers/evms/core/evms.c:1249:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#1294: FILE: drivers/evms/core/evms.c:1253:
+	if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#1294: FILE: drivers/evms/core/evms.c:1253:
+	if (lv == NULL || lv->node == NULL) {

WARNING:INDENTED_LABEL: labels should not be indented
#1301: FILE: drivers/evms/core/evms.c:1260:
+      exit:

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1304: FILE: drivers/evms/core/evms.c:1263:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1304: FILE: drivers/evms/core/evms.c:1263:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1317: FILE: drivers/evms/core/evms.c:1276:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1326: FILE: drivers/evms/core/evms.c:1285:
+	user_parms = (struct evms_kernel_plugin_pkt *) arg;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp.command'
#1328: FILE: drivers/evms/core/evms.c:1287:
+	if (copy_from_user
+	    (&tmp.command, &user_parms->command, sizeof (tmp.command))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1329: FILE: drivers/evms/core/evms.c:1288:
+	    (&tmp.command, &user_parms->command, sizeof (tmp.command))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1340: FILE: drivers/evms/core/evms.c:1299:
+			if (plugin_id == plugin->id) {
+				break;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1344: FILE: drivers/evms/core/evms.c:1303:
+		if (&plugin->headers == &plugin_head) {
+			tmp.command = EVMS_FIRST_PLUGIN;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1348: FILE: drivers/evms/core/evms.c:1307:
+	if (tmp.command == EVMS_FIRST_PLUGIN) {
+		plugin_id = 0;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1353: FILE: drivers/evms/core/evms.c:1312:
+		if (&plugin->headers != &plugin_head) {
+			plugin_id = plugin->id;
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1367: FILE: drivers/evms/core/evms.c:1326:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1367: FILE: drivers/evms/core/evms.c:1326:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1383: FILE: drivers/evms/core/evms.c:1342:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1393: FILE: drivers/evms/core/evms.c:1352:
+	user_parms = (struct evms_plugin_ioctl_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1395: FILE: drivers/evms/core/evms.c:1354:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1395: FILE: drivers/evms/core/evms.c:1354:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1405: FILE: drivers/evms/core/evms.c:1364:
+			rc = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1417: FILE: drivers/evms/core/evms.c:1376:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1417: FILE: drivers/evms/core/evms.c:1376:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1424: FILE: drivers/evms/core/evms.c:1383:
+ * evms_ioctl_cmd_kernel_partial_csum - invokes the kernel's csum_partial routine $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1430: FILE: drivers/evms/core/evms.c:1389:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1442: FILE: drivers/evms/core/evms.c:1401:
+	user_parms = (struct evms_compute_csum_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1444: FILE: drivers/evms/core/evms.c:1403:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1444: FILE: drivers/evms/core/evms.c:1403:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#1447: FILE: drivers/evms/core/evms.c:1406:
+	/* allocate a io buffer upto 64Kbytes in size */
 	                        ^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1448: FILE: drivers/evms/core/evms.c:1407:
+	if (tmp.buffer_size < MAX_BUFFER_SIZE) {
+		compute_size = tmp.buffer_size;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#1479: FILE: drivers/evms/core/evms.c:1438:
+      exit:

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1482: FILE: drivers/evms/core/evms.c:1441:
+	if (buffer)
+		kfree(buffer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1486: FILE: drivers/evms/core/evms.c:1445:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1486: FILE: drivers/evms/core/evms.c:1445:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1495: FILE: drivers/evms/core/evms.c:1454:
+ * evms_ioctl_cmd_get_bmap - computes the physical dev/sector pair from a logical dev/sector $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1505: FILE: drivers/evms/core/evms.c:1464:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1515: FILE: drivers/evms/core/evms.c:1474:
+	user_parms = (struct evms_get_bmap_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1517: FILE: drivers/evms/core/evms.c:1476:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1517: FILE: drivers/evms/core/evms.c:1476:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

CHECK:SPACING: No space is necessary after a cast
#1522: FILE: drivers/evms/core/evms.c:1481:
+	rc = IOCTL(lv->node, inode, file, cmd, (ulong) & tmp);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#1522: FILE: drivers/evms/core/evms.c:1481:
+	rc = IOCTL(lv->node, inode, file, cmd, (ulong) & tmp);
 	                                               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1525: FILE: drivers/evms/core/evms.c:1484:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1525: FILE: drivers/evms/core/evms.c:1484:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1538: FILE: drivers/evms/core/evms.c:1497:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1548: FILE: drivers/evms/core/evms.c:1507:
+	user_parms = (struct evms_notify_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1550: FILE: drivers/evms/core/evms.c:1509:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1550: FILE: drivers/evms/core/evms.c:1509:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->pid == tmp.eventry.pid'
#1558: FILE: drivers/evms/core/evms.c:1517:
+		if ((event->pid == tmp.eventry.pid) &&
+		    (event->eventid == tmp.eventry.eventid)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->eventid == tmp.eventry.eventid'
#1558: FILE: drivers/evms/core/evms.c:1517:
+		if ((event->pid == tmp.eventry.pid) &&
+		    (event->eventid == tmp.eventry.eventid)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1569: FILE: drivers/evms/core/evms.c:1528:
+			LOG_ERROR("error(%d): pid(%d) already registered to "
+				  "receive signal(%d) on event(%d).\n", rc,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1575: FILE: drivers/evms/core/evms.c:1534:
+			    kmalloc(sizeof (struct evms_kevent), GFP_KERNEL);

WARNING:SPLIT_STRING: quoted string split across lines
#1579: FILE: drivers/evms/core/evms.c:1538:
+				LOG_ERROR("error(%d) allocating event "
+					  "structure.\n", rc);

WARNING:SPLIT_STRING: quoted string split across lines
#1592: FILE: drivers/evms/core/evms.c:1551:
+			LOG_ERROR("error(%d) attempting to unregister a "
+				  "non-registered pid(%d) on event(%d).\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1601: FILE: drivers/evms/core/evms.c:1560:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1601: FILE: drivers/evms/core/evms.c:1560:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		rc = -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1616: FILE: drivers/evms/core/evms.c:1575:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1624: FILE: drivers/evms/core/evms.c:1583:
+	user_parms = (struct evms_mount_status_pkt *) arg;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1626: FILE: drivers/evms/core/evms.c:1585:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1626: FILE: drivers/evms/core/evms.c:1585:
+	if (copy_from_user(&tmp, user_parms, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1632: FILE: drivers/evms/core/evms.c:1591:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1632: FILE: drivers/evms/core/evms.c:1591:
+	if (copy_to_user(user_parms, &tmp, sizeof (tmp))) {
+		return -EFAULT;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1664: FILE: drivers/evms/core/evms.c:1623:
+ * ^I    otherwise error code$

CHECK:SPACING: No space is necessary after a cast
#1696: FILE: drivers/evms/core/evms.c:1655:
+			rc = evms_ioctl_cmd_get_version((void *) arg);

CHECK:SPACING: No space is necessary after a cast
#1719: FILE: drivers/evms/core/evms.c:1678:
+			rc = evms_ioctl_cmd_sector_io((void *) arg);

CHECK:SPACING: No space is necessary after a cast
#1722: FILE: drivers/evms/core/evms.c:1681:
+			rc = evms_ioctl_cmd_get_minor((void *) arg);

CHECK:SPACING: No space is necessary after a cast
#1732: FILE: drivers/evms/core/evms.c:1691:
+			rc = evms_ioctl_cmd_get_plugin((void *) arg);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1758: FILE: drivers/evms/core/evms.c:1717:
+		if (lv == NULL || lv->node == NULL) {
+			return -ENXIO;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#1758: FILE: drivers/evms/core/evms.c:1717:
+		if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#1758: FILE: drivers/evms/core/evms.c:1717:
+		if (lv == NULL || lv->node == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1762: FILE: drivers/evms/core/evms.c:1721:
+^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1796: FILE: drivers/evms/core/evms.c:1755:
+ * ^I    otherwise error code$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1805: FILE: drivers/evms/core/evms.c:1764:
+	if (lv == NULL || lv->node == NULL) {
+		return -ENXIO;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#1805: FILE: drivers/evms/core/evms.c:1764:
+	if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#1805: FILE: drivers/evms/core/evms.c:1764:
+	if (lv == NULL || lv->node == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1819: FILE: drivers/evms/core/evms.c:1778:
+	if (!lv->node) {
+		return -ENXIO;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1822: FILE: drivers/evms/core/evms.c:1781:
+	if (lv->flags & EVMS_DEVICE_REMOVABLE) {
+		rc = CHECK_MEDIA_CHANGE(lv->node, dev);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1830: FILE: drivers/evms/core/evms.c:1789:
+^I^ILOG_ERROR("error(%d) checking media change on '%s'.\n", $

WARNING:TYPO_SPELLING: 'Everytime' may be misspelled - perhaps 'Every time'?
#1852: FILE: drivers/evms/core/evms.c:1811:
+ * of the EVMS block_device. Everytime the user tools are invoked, or a volume is
                              ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1853: FILE: drivers/evms/core/evms.c:1812:
+ * mounted, this check will happen and the user will the see the updated results $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1857: FILE: drivers/evms/core/evms.c:1816:
+ * ^I    otherwise error code$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1881: FILE: drivers/evms/core/evms.c:1840:
+		LOG_DETAILS("%s: new devices detected.\n", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1905: FILE: drivers/evms/core/evms.c:1864:
+			rc = CHECK_MEDIA_CHANGE(disk, mk_kdev(0,0));
 			                                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#1908: FILE: drivers/evms/core/evms.c:1867:
+				LOG_ERROR("error(%d) doing CHECK_MEDIA_CHANGE "
+					  "on '%s'.\n", rc, disk->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1914: FILE: drivers/evms/core/evms.c:1873:
+^I^I * earlier, but are gone now (from being $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1917: FILE: drivers/evms/core/evms.c:1876:
+		if (disk->flags & EVMS_DEVICE_UNAVAILABLE) {
+			add_to_list = 1;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1927: FILE: drivers/evms/core/evms.c:1886:
+	if (!list_empty(&changed_list)) {
+		LOG_DETAILS("%s: media change detected.\n", __FUNCTION__);
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1928: FILE: drivers/evms/core/evms.c:1887:
+		LOG_DETAILS("%s: media change detected.\n", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1951: FILE: drivers/evms/core/evms.c:1910:
+		int status;
+		if (!lv->node)

WARNING:SPLIT_STRING: quoted string split across lines
#1958: FILE: drivers/evms/core/evms.c:1917:
+			LOG_ERROR("error(%d) doing DEVICE_STATUS "
+				  "on '%s'.\n", rc, lv->name);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1961: FILE: drivers/evms/core/evms.c:1920:
+		if (!(status & EVMS_DEVICE_UNAVAILABLE)) {
+			continue;
+		}

WARNING:SPLIT_STRING: quoted string split across lines
#1996: FILE: drivers/evms/core/evms.c:1955:
+				LOG_ERROR("%s: error(%d) retrieving underlying "
+					  "disk list for '%s', skipping ...\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1997: FILE: drivers/evms/core/evms.c:1956:
+					  __FUNCTION__, rc, lv->name);

WARNING:SPLIT_STRING: quoted string split across lines
#2006: FILE: drivers/evms/core/evms.c:1965:
+				LOG_ERROR("%s: error(%d) attempting to quiesce "
+					  "'%s%s'.\n", __FUNCTION__, rc,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2006: FILE: drivers/evms/core/evms.c:1965:
+					  "'%s%s'.\n", __FUNCTION__, rc,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2033: FILE: drivers/evms/core/evms.c:1992:
+				rc = REVALIDATE(disk, mk_kdev(0,0));
 				                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#2036: FILE: drivers/evms/core/evms.c:1995:
+					LOG_ERROR("%s: error(%d) attempting to "
+						  "revalidate '%s%s'.\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2037: FILE: drivers/evms/core/evms.c:1996:
+						  __FUNCTION__, rc,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2081: FILE: drivers/evms/core/evms.c:2040:
+			if (disk->flags & EVMS_MEDIA_CHANGED) {
+				DELETE(disk);
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2108: FILE: drivers/evms/core/evms.c:2067:
+			if (still_in_changed_list == 0) {
+				list_del_init(&disk->removable);
+			}

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2126: FILE: drivers/evms/core/evms.c:2085:
+			kernel_rd_pckt.drive_array
+			    = kmalloc(kernel_rd_pckt.drive_count *
+				      sizeof (u64), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2127: FILE: drivers/evms/core/evms.c:2086:
+			kernel_rd_pckt.drive_array
+			    = kmalloc(kernel_rd_pckt.drive_count *

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2128: FILE: drivers/evms/core/evms.c:2087:
+				      sizeof (u64), GFP_KERNEL);

WARNING:SPLIT_STRING: quoted string split across lines
#2132: FILE: drivers/evms/core/evms.c:2091:
+				LOG_ERROR("%s: error(%d) allocating rediscover "
+					  "drive array.\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2132: FILE: drivers/evms/core/evms.c:2091:
+					  "drive array.\n", __FUNCTION__, rc);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2152: FILE: drivers/evms/core/evms.c:2111:
+		if (kernel_rd_pckt.drive_count) {
+			kfree(kernel_rd_pckt.drive_array);
+		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2155: FILE: drivers/evms/core/evms.c:2114:
+		LOG_DETAILS("%s: rediscover completed.\n", __FUNCTION__);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2178: FILE: drivers/evms/core/evms.c:2137:
+ * ^I    otherwise error code$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2187: FILE: drivers/evms/core/evms.c:2146:
+	if (lv == NULL || lv->node == NULL) {
+		return -ENXIO;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#2187: FILE: drivers/evms/core/evms.c:2146:
+	if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#2187: FILE: drivers/evms/core/evms.c:2146:
+	if (lv == NULL || lv->node == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2201: FILE: drivers/evms/core/evms.c:2160:
+	if (!lv->node) {
+		return -ENXIO;
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2230: FILE: drivers/evms/core/evms.c:2189:
+ * ^I    otherwise error code$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2243: FILE: drivers/evms/core/evms.c:2202:
+	if (rc) {
+		return rc;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2249: FILE: drivers/evms/core/evms.c:2208:
+		if (lv == NULL || lv->node == NULL) {
+			return -ENXIO;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#2249: FILE: drivers/evms/core/evms.c:2208:
+		if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#2249: FILE: drivers/evms/core/evms.c:2208:
+		if (lv == NULL || lv->node == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2263: FILE: drivers/evms/core/evms.c:2222:
+		if (!lv->node) {
+			return -ENXIO;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2272: FILE: drivers/evms/core/evms.c:2231:
+^I^I^ILOG_ERROR("error(%d) opening volume '%s'.\n", $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2297: FILE: drivers/evms/core/evms.c:2256:
+ * ^I    otherwise error code$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2310: FILE: drivers/evms/core/evms.c:2269:
+		int rc;
+		lv = lookup_volume(minor);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2311: FILE: drivers/evms/core/evms.c:2270:
+		if (lv == NULL || lv->node == NULL) {
+			return -ENXIO;
+		}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv"
#2311: FILE: drivers/evms/core/evms.c:2270:
+		if (lv == NULL || lv->node == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lv->node"
#2311: FILE: drivers/evms/core/evms.c:2270:
+		if (lv == NULL || lv->node == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2325: FILE: drivers/evms/core/evms.c:2284:
+		if (!lv->node) {
+			return -ENXIO;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2334: FILE: drivers/evms/core/evms.c:2293:
+^I^I^ILOG_ERROR("error(%d) releasing volume '%s'.\n", $

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#2349: FILE: drivers/evms/core/evms.c:2308:
+struct block_device_operations evms_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#2350: FILE: drivers/evms/core/evms.c:2309:
+	owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2351: FILE: drivers/evms/core/evms.c:2310:
+	open:evms_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#2351: FILE: drivers/evms/core/evms.c:2310:
+	open:evms_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2352: FILE: drivers/evms/core/evms.c:2311:
+	release:evms_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#2352: FILE: drivers/evms/core/evms.c:2311:
+	release:evms_release,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2353: FILE: drivers/evms/core/evms.c:2312:
+	ioctl:evms_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#2353: FILE: drivers/evms/core/evms.c:2312:
+	ioctl:evms_ioctl,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2354: FILE: drivers/evms/core/evms.c:2313:
+	check_media_change:evms_check_media_change,
 	                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#2354: FILE: drivers/evms/core/evms.c:2313:
+	check_media_change:evms_check_media_change,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2355: FILE: drivers/evms/core/evms.c:2314:
+	revalidate:evms_revalidate_disk
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#2355: FILE: drivers/evms/core/evms.c:2314:
+	revalidate:evms_revalidate_disk

WARNING:LINE_SPACING: Missing a blank line after declarations
#2379: FILE: drivers/evms/core/evms.c:2338:
+	struct evms_logical_volume *lv = lookup_volume(minor(dev));
+	if (lv && lv->node)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2395: FILE: drivers/evms/core/evms.c:2354:
+evms_make_request_fn(request_queue_t * q, struct bio *bio)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2397: FILE: drivers/evms/core/evms.c:2356:
+^Istruct evms_logical_volume *lv = $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2399: FILE: drivers/evms/core/evms.c:2358:
+	if (!lv || !lv->node) {
+		goto error;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2415: FILE: drivers/evms/core/evms.c:2374:
+	if (!lv->node) {
+		goto error;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2465: FILE: drivers/evms/core/evms.c:2424:
+			if (!lv->node) {
+				continue;
+			}

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2506: FILE: drivers/evms/core/evms.c:2465:
+extern int evms_passthru_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2507: FILE: drivers/evms/core/evms.c:2466:
+extern void evms_passthru_exit(void);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2574: FILE: drivers/evms/core/evms.c:2533:
+						sizeof (struct evms_io_notify),

ERROR:CODE_INDENT: code indent should use tabs where possible
#2602: FILE: drivers/evms/core/evms.c:2561:
+        evms_dir_devfs_handle = devfs_mk_dir(NULL, EVMS_DIR_NAME, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2602: FILE: drivers/evms/core/evms.c:2561:
+        evms_dir_devfs_handle = devfs_mk_dir(NULL, EVMS_DIR_NAME, NULL);$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#2607: FILE: drivers/evms/core/evms.c:2566:
+				   S_IFBLK | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:RETURN_VOID: void function return statements are not generally useful
#2693: FILE: drivers/evms/core/evms.c:2652:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2695: FILE: drivers/evms/core/evms.c:2654:
+EXPORT_SYMBOL(evms_cluster_init);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2709: FILE: drivers/evms/core/evms.c:2668:
+EXPORT_SYMBOL(evms_cluster_shutdown);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2712: FILE: drivers/evms/core/evms.c:2671:
+ * evms_boot_info_level - parses the ascii evms info level parm on the loader's boot line
                                                            ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2715: FILE: drivers/evms/core/evms.c:2674:
+ * parses the ascii evms info level parm on the loader's boot line
                                     ^^^^

CHECK:SPACING: No space is necessary after a cast
#2722: FILE: drivers/evms/core/evms.c:2681:
+	int evms_boot_info_level = (int) simple_strtoul(str, NULL, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2722: FILE: drivers/evms/core/evms.c:2681:
+	int evms_boot_info_level = (int) simple_strtoul(str, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#2723: FILE: drivers/evms/core/evms.c:2682:
+	int evms_boot_info_level = (int) simple_strtoul(str, NULL, 10);
+	if (evms_boot_info_level) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2723: FILE: drivers/evms/core/evms.c:2682:
+	if (evms_boot_info_level) {
+		evms_info_level = evms_boot_info_level;
+	}

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#2729: FILE: drivers/evms/core/evms.c:2688:
+__setup("evms_info_level=", evms_boot_info_level);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 184 warnings, 61 checks, 2692 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424502.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
