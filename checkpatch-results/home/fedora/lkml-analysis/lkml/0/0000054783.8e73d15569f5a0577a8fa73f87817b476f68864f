ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: kernel/rcupreempt.c:398:
+        if (atomic_dec_and_test(&rcu_barrier_cpu_count))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: kernel/rcupreempt.c:398:
+        if (atomic_dec_and_test(&rcu_barrier_cpu_count))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: kernel/rcupreempt.c:399:
+                complete(&rcu_barrier_completion);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: kernel/rcupreempt.c:399:
+                complete(&rcu_barrier_completion);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: kernel/rcupreempt.c:407:
+        int cpu = smp_processor_id();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/rcupreempt.c:407:
+        int cpu = smp_processor_id();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: kernel/rcupreempt.c:408:
+        struct rcu_head *head = &per_cpu(rcu_barrier_head, cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/rcupreempt.c:408:
+        struct rcu_head *head = &per_cpu(rcu_barrier_head, cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: kernel/rcupreempt.c:410:
+        atomic_inc(&rcu_barrier_cpu_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/rcupreempt.c:410:
+        atomic_inc(&rcu_barrier_cpu_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/rcupreempt.c:411:
+        call_rcu(head, rcu_barrier_callback);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/rcupreempt.c:411:
+        call_rcu(head, rcu_barrier_callback);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: kernel/rcupreempt.c:419:
+        BUG_ON(in_interrupt());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: kernel/rcupreempt.c:419:
+        BUG_ON(in_interrupt());$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#126: FILE: kernel/rcupreempt.c:419:
+        BUG_ON(in_interrupt());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: kernel/rcupreempt.c:420:
+        /* Take cpucontrol mutex to protect against CPU hotplug */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: kernel/rcupreempt.c:421:
+        mutex_lock(&rcu_barrier_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: kernel/rcupreempt.c:421:
+        mutex_lock(&rcu_barrier_mutex);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: kernel/rcupreempt.c:422:
+        init_completion(&rcu_barrier_completion);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/rcupreempt.c:422:
+        init_completion(&rcu_barrier_completion);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: kernel/rcupreempt.c:423:
+        atomic_set(&rcu_barrier_cpu_count, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: kernel/rcupreempt.c:423:
+        atomic_set(&rcu_barrier_cpu_count, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: kernel/rcupreempt.c:424:
+        on_each_cpu(rcu_barrier_func, NULL, 0, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: kernel/rcupreempt.c:424:
+        on_each_cpu(rcu_barrier_func, NULL, 0, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: kernel/rcupreempt.c:425:
+        wait_for_completion(&rcu_barrier_completion);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/rcupreempt.c:425:
+        wait_for_completion(&rcu_barrier_completion);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: kernel/rcupreempt.c:426:
+        mutex_unlock(&rcu_barrier_mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: kernel/rcupreempt.c:426:
+        mutex_unlock(&rcu_barrier_mutex);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#143: FILE: kernel/rcupreempt.c:518:
+EXPORT_SYMBOL_GPL(rcu_barrier);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/linux/rcupdate.h:282:
+extern void rcu_barrier(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 15 warnings, 1 checks, 70 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000054783.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
