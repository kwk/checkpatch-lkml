ERROR:TRAILING_WHITESPACE: trailing whitespace
#35: FILE: arch/um/include/sysdep-i386/signal.h:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: arch/um/include/sysdep-i386/signal.h:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#45: FILE: arch/um/include/sysdep-i386/signal.h:11:
+#define ARCH_GET_SIGCONTEXT(sc, sig) \
+	do sc = (struct sigcontext *) (&sig + 1); while(0)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sig' may be better as '(sig)' to avoid precedence issues
#45: FILE: arch/um/include/sysdep-i386/signal.h:11:
+#define ARCH_GET_SIGCONTEXT(sc, sig) \
+	do sc = (struct sigcontext *) (&sig + 1); while(0)

CHECK:SPACING: No space is necessary after a cast
#46: FILE: arch/um/include/sysdep-i386/signal.h:12:
+	do sc = (struct sigcontext *) (&sig + 1); while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#46: FILE: arch/um/include/sysdep-i386/signal.h:12:
+	do sc = (struct sigcontext *) (&sig + 1); while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: arch/um/include/sysdep-x86_64/signal.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: arch/um/include/sysdep-x86_64/signal.h:1:
+/* 

CHECK:SPACING: No space is necessary after a cast
#77: FILE: arch/um/include/sysdep-x86_64/signal.h:13:
+		sc = (struct sigcontext *) &__uc->uc_mcontext; \

ERROR:SPACING: space required before the open parenthesis '('
#78: FILE: arch/um/include/sysdep-x86_64/signal.h:14:
+	} while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: arch/um/os-Linux/signal.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#147: FILE: arch/um/os-Linux/signal.c:1:
+/* 

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: arch/um/os-Linux/signal.c:27:
+	if(!timer_irq_inited) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: arch/um/os-Linux/signal.c:27:
+	if(!timer_irq_inited) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: arch/um/os-Linux/signal.c:29:
+	if(sig == SIGALRM)

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: arch/um/os-Linux/signal.c:35:
+	if(sig == SIGALRM)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 3 warnings, 3 checks, 140 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217271.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
