WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
- [DVB] saa7146: prefix IER_DISABLE and IER_ENABLE with SAA7146_, add SAA7146_ISR_CLEAR

CHECK:SPACING: No space is necessary after a cast
#126: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:627:
+		struct dvb_frontend_event *e = (void *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:628:
+		struct dvb_frontend_event *e = (void *) arg;
+		if (cinergyt2->pending_fe_events == 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#135: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:636:
+					(unsigned long) &e->status);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#185: FILE: drivers/media/common/saa7146_core.c:295:
+			SAA7146_IER_DISABLE(dev, MASK_16|MASK_17);
 			                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#194: FILE: drivers/media/common/saa7146_core.c:314:
+		SAA7146_IER_DISABLE(dev,isr);
 		                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: drivers/media/common/saa7146_i2c.c:193:
+		SAA7146_IER_ENABLE(dev, MASK_16|MASK_17);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: drivers/media/common/saa7146_vbi.c:94:
+		SAA7146_IER_ENABLE(dev,MASK_28);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#227: FILE: drivers/media/common/saa7146_vbi.c:112:
+		SAA7146_IER_DISABLE(dev,MASK_28);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: include/media/saa7146.h:66:
+#define SAA7146_IER_DISABLE(x,y) \
                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#278: FILE: include/media/saa7146.h:66:
+#define SAA7146_IER_DISABLE(x,y) \
 	saa7146_write(x, IER, saa7146_read(x, IER) & ~(y));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#278: FILE: include/media/saa7146.h:66:
+#define SAA7146_IER_DISABLE(x,y) \
 	saa7146_write(x, IER, saa7146_read(x, IER) & ~(y));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#281: FILE: include/media/saa7146.h:68:
+#define SAA7146_IER_ENABLE(x,y) \
                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#281: FILE: include/media/saa7146.h:68:
+#define SAA7146_IER_ENABLE(x,y) \
 	saa7146_write(x, IER, saa7146_read(x, IER) | (y));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#281: FILE: include/media/saa7146.h:68:
+#define SAA7146_IER_ENABLE(x,y) \
 	saa7146_write(x, IER, saa7146_read(x, IER) | (y));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: include/media/saa7146.h:70:
+#define SAA7146_ISR_CLEAR(x,y) \
                            ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#283: FILE: include/media/saa7146.h:70:
+#define SAA7146_ISR_CLEAR(x,y) \
+	saa7146_write(x, ISR, (y));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 5 warnings, 6 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000224078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
