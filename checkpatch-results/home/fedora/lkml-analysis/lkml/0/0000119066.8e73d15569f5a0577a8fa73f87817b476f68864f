WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
This patch marks a number of functions as 'must inline'. The functions affected

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#60: FILE: include/asm-i386/bitops.h:250:
+static __always_inline int constant_test_bit(int nr, const volatile unsigned long *addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: include/asm-i386/current.h:8:
+static __always_inline struct task_struct * get_current(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: include/asm-i386/string.h:204:
+static __always_inline void * __memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: include/asm-i386/string.h:204:
+static __always_inline void * __memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: include/asm-i386/string.h:204:
+static __always_inline void * __memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: include/asm-i386/string.h:226:
+static __always_inline void * __constant_memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: include/asm-i386/string.h:226:
+static __always_inline void * __constant_memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: include/asm-i386/string.h:226:
+static __always_inline void * __constant_memcpy(void * to, const void * from, size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/asm-i386/string.h:370:
+static __always_inline void * __constant_c_memset(void * s, unsigned long c, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: include/asm-i386/string.h:370:
+static __always_inline void * __constant_c_memset(void * s, unsigned long c, size_t count)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#113: FILE: include/asm-i386/string.h:419:
+static __always_inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: include/asm-i386/string.h:419:
+static __always_inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: include/asm-i386/string.h:419:
+static __always_inline void * __constant_c_and_count_memset(void * s, unsigned long pattern, size_t count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: include/asm-x86_64/uaccess.h:247:
+static __always_inline int __copy_from_user(void *dst, const void __user *src, unsigned size) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: include/asm-x86_64/uaccess.h:247:
+static __always_inline int __copy_from_user(void *dst, const void __user *src, unsigned size) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: include/asm-x86_64/uaccess.h:276:
+static __always_inline int __copy_to_user(void __user *dst, const void *src, unsigned size) $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: include/asm-x86_64/uaccess.h:276:
+static __always_inline int __copy_to_user(void __user *dst, const void *src, unsigned size) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: include/asm-x86_64/uaccess.h:308:
+static __always_inline int __copy_in_user(void __user *dst, const void __user *src, unsigned size) $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: include/asm-x86_64/uaccess.h:308:
+static __always_inline int __copy_in_user(void __user *dst, const void __user *src, unsigned size) 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119066.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 6 warnings, 0 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119066.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
