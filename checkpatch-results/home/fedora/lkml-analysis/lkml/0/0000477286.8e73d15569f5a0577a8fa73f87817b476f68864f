WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#21: 
Here's a typo patch for 2.5.4 all the do { ... } while(0); occurances
                                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inconsistant' may be misspelled - perhaps 'inconsistent'?
#29: 
Next thing I fix is a little inconsistant syntax in one of the console
                             ^^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -ruN linux-2.5.4/arch/ia64/kernel/perfmon.c linux-2.5.4-fixed/arch/ia64/kernel/perfmon.c

ERROR:SPACING: space required before the open parenthesis '('
#54: FILE: arch/ia64/kernel/perfmon.c:285:
+#define SET_PMU_OWNER(t)	do { pmu_owners[smp_processor_id()].owner = (t); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#54: FILE: arch/ia64/kernel/perfmon.c:285:
+#define SET_PMU_OWNER(t)	do { pmu_owners[smp_processor_id()].owner = (t); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#66: FILE: arch/mips/kernel/signal.c:207:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#78: FILE: arch/mips/sni/pci.c:28:
+} while(0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/ppc/math-emu/op-4.h:282:
+  } while (0)$

ERROR:SPACING: space required before the open parenthesis '('
#102: FILE: arch/sparc/mm/srmmu.c:1966:
+	} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: arch/sparc64/kernel/binfmt_elf32.c:46:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#138: FILE: drivers/char/applicom.c:39:
+#define init_waitqueue_head(x) do { *(x) = NULL; } while (0)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#163: FILE: drivers/isdn/avmb1/kcapi.c:105:
+#define APPL_MARK_FREE(a)  do{ APPL(a)->applid=0; MOD_DEC_USE_COUNT; }while(0)
                                               ^

ERROR:SPACING: space required before the open brace '{'
#163: FILE: drivers/isdn/avmb1/kcapi.c:105:
+#define APPL_MARK_FREE(a)  do{ APPL(a)->applid=0; MOD_DEC_USE_COUNT; }while(0)

ERROR:SPACING: space required after that close brace '}'
#163: FILE: drivers/isdn/avmb1/kcapi.c:105:
+#define APPL_MARK_FREE(a)  do{ APPL(a)->applid=0; MOD_DEC_USE_COUNT; }while(0)

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: drivers/isdn/avmb1/kcapi.c:105:
+#define APPL_MARK_FREE(a)  do{ APPL(a)->applid=0; MOD_DEC_USE_COUNT; }while(0)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#164: FILE: drivers/isdn/avmb1/kcapi.c:106:
+#define APPL_MARK_USED(a)  do{ APPL(a)->applid=(a); MOD_INC_USE_COUNT; }while(0)
                                               ^

ERROR:SPACING: space required before the open brace '{'
#164: FILE: drivers/isdn/avmb1/kcapi.c:106:
+#define APPL_MARK_USED(a)  do{ APPL(a)->applid=(a); MOD_INC_USE_COUNT; }while(0)

ERROR:SPACING: space required after that close brace '}'
#164: FILE: drivers/isdn/avmb1/kcapi.c:106:
+#define APPL_MARK_USED(a)  do{ APPL(a)->applid=(a); MOD_INC_USE_COUNT; }while(0)

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: drivers/isdn/avmb1/kcapi.c:106:
+#define APPL_MARK_USED(a)  do{ APPL(a)->applid=(a); MOD_INC_USE_COUNT; }while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#164: FILE: drivers/isdn/avmb1/kcapi.c:106:
+#define APPL_MARK_USED(a)  do{ APPL(a)->applid=(a); MOD_INC_USE_COUNT; }while(0)

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: drivers/net/acenic.c:169:
+#define SET_MODULE_OWNER(dev)		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: drivers/net/acenic.c:173:
+#define ACE_MOD_INC_USE_COUNT		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: drivers/net/acenic.c:174:
+#define ACE_MOD_DEC_USE_COUNT		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#192: FILE: drivers/net/acenic.c:255:
+#define late_stop_netif_stop_queue(dev)		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: drivers/net/acenic.c:269:
+#define ace_if_down(dev)			do { dev->start = 0; } while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#201: FILE: drivers/net/acenic.c:269:
+#define ace_if_down(dev)			do { dev->start = 0; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#201: FILE: drivers/net/acenic.c:269:
+#define ace_if_down(dev)			do { dev->start = 0; } while(0)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#210: FILE: drivers/net/acenic.c:287:
 }
+#define tasklet_kill(tasklet)			do { } while(0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: drivers/net/acenic.c:287:
+#define tasklet_kill(tasklet)			do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: drivers/net/acenic.c:291:
+#define early_stop_netif_wake_queue(dev)	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: drivers/net/acenic.c:292:
+#define ace_mark_net_bh()			do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: drivers/net/acenic.c:293:
+#define ace_if_down(dev)			do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#228: FILE: drivers/net/acenic.c:309:
+#define prefetchw(x)				do { } while(0)

WARNING:LONG_LINE: line length of 154 exceeds 100 columns
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)
                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)
                                                                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)
                                                                                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)
                                                                                                                             ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)
                                                                                                                              ^

ERROR:SPACING: space required before the open brace '{'
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#253: FILE: drivers/net/pppoe.c:89:
+#define CHECKPTR(x,y) do { if (!(x) && pppoe_debug &7 ){ printk(KERN_CRIT "PPPoE Invalid pointer : %s , %p\n",#x,(x)); error=-EINVAL; goto y; }} while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#254: FILE: drivers/net/pppoe.c:90:
+#define DEBUG(s,args...) do { if( pppoe_debug & (s) ) printk(KERN_CRIT args ); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: drivers/net/pppoe.c:90:
+#define DEBUG(s,args...) do { if( pppoe_debug & (s) ) printk(KERN_CRIT args ); } while (0)
                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#254: FILE: drivers/net/pppoe.c:90:
+#define DEBUG(s,args...) do { if( pppoe_debug & (s) ) printk(KERN_CRIT args ); } while (0)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#254: FILE: drivers/net/pppoe.c:90:
+#define DEBUG(s,args...) do { if( pppoe_debug & (s) ) printk(KERN_CRIT args ); } while (0)

ERROR:SPACING: space required before the open parenthesis '('
#254: FILE: drivers/net/pppoe.c:90:
+#define DEBUG(s,args...) do { if( pppoe_debug & (s) ) printk(KERN_CRIT args ); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#258: FILE: drivers/net/pppoe.c:92:
+#define CHECKPTR(x,y) do { } while (0)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#259: FILE: drivers/net/pppoe.c:93:
+#define DEBUG(s,args...) do { } while (0)
                ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#271: FILE: drivers/net/rrunner.c:78:
+#define rr_if_down(dev)     do { dev->start = 0; } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#271: FILE: drivers/net/rrunner.c:78:
+#define rr_if_down(dev)     do { dev->start = 0; } while (0)

ERROR:SPACING: space required before the open parenthesis '('
#275: FILE: drivers/net/rrunner.c:81:
+#define rr_mark_net_bh(foo) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: drivers/net/rrunner.c:84:
+#define rr_if_down(dev)     do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#291: FILE: drivers/net/wan/lmc/lmc_var.h:90:
+		n--; }} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: drivers/s390/block/dasd_int.h:204:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: drivers/s390/block/dasd_int.h:211:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#323: FILE: drivers/scsi/3w-xxxx.h:212:
+#define dprintk(msg...) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#335: FILE: drivers/telephony/ixj.c:389:
+#define ixj_perfmon(x)	do { } while(0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/video/fbcon-cfb24.c:79:
+    } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/video/fbcon-cfb24.c:86:
+    } while (0)$

ERROR:SPACING: space required before the open parenthesis '('
#410: FILE: include/asm-arm/arch-sa1100/keyboard.h:13:
+#define kbd_disable_irq()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: include/asm-arm/arch-sa1100/keyboard.h:14:
+#define kbd_enable_irq()	do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#423: FILE: include/asm-mips/spinlock.h:22:
+#define spin_lock_init(x)	do { (x)->lock = 0; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#423: FILE: include/asm-mips/spinlock.h:22:
+#define spin_lock_init(x)	do { (x)->lock = 0; } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: include/asm-mips64/spinlock.h:22:
+#define spin_lock_init(x)	do { (x)->lock = 0; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#439: FILE: include/asm-mips64/spinlock.h:22:
+#define spin_lock_init(x)	do { (x)->lock = 0; } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: include/asm-parisc/pgalloc.h:123:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#467: FILE: include/asm-sparc/elf.h:44:
+} while(0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#480: FILE: include/linux/mtd/compatmac.h:193:
+#define spin_lock_bh(lock) do {start_bh_atomic();spin_lock(lock);} while(0)
                                                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#480: FILE: include/linux/mtd/compatmac.h:193:
+#define spin_lock_bh(lock) do {start_bh_atomic();spin_lock(lock);} while(0)
                                                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#480: FILE: include/linux/mtd/compatmac.h:193:
+#define spin_lock_bh(lock) do {start_bh_atomic();spin_lock(lock);} while(0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#481: FILE: include/linux/mtd/compatmac.h:194:
+#define spin_unlock_bh(lock) do {spin_unlock(lock);end_bh_atomic();} while(0)
                                                   ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#481: FILE: include/linux/mtd/compatmac.h:194:
+#define spin_unlock_bh(lock) do {spin_unlock(lock);end_bh_atomic();} while(0)
                                                                   ^

ERROR:SPACING: space required before the open parenthesis '('
#481: FILE: include/linux/mtd/compatmac.h:194:
+#define spin_unlock_bh(lock) do {spin_unlock(lock);end_bh_atomic();} while(0)

WARNING:TABSTOP: Statements should start on a tabstop
#493: FILE: include/linux/rtnetlink.h:590:
+		   } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: include/linux/rtnetlink.h:590:
+		   } while(0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: include/math-emu/op-4.h:648:
+  } while (0)$

ERROR:SPACING: space required before the open parenthesis '('
#517: FILE: include/net/sock.h:489:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#540: FILE: net/ipv4/netfilter/ip_fw_compat_redir.c:46:
+} while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#552: FILE: net/ipv4/netfilter/ip_queue.c:467:
+#define RCV_SKB_FAIL(err) do { netlink_ack(skb, nlh, (err)); return; } while (0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#564: FILE: net/ipv4/netfilter/ipt_ULOG.c:64:
+#define PRINTR(format, args...) do { if (net_ratelimit()) printk(format, ## args); } while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#576: FILE: net/ipv6/netfilter/ip6_queue.c:521:
+#define RCV_SKB_FAIL(err) do { netlink_ack(skb, nlh, (err)); return; } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477286.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 58 errors, 21 warnings, 6 checks, 394 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477286.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
