WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#56: FILE: scsi/scsi.c:188:
max_scsi_dev ,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: scsi/scsi.c:190:
+static int scan_scsis_single(unsigned int channel, unsigned int dev,
+		unsigned int lun, int lun0_scsi_level,=20

ERROR:SPACING: space required after that ',' (ctx:VxO)
#61: FILE: scsi/scsi.c:190:
+		unsigned int lun, int lun0_scsi_level,=20
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#61: FILE: scsi/scsi.c:190:
+		unsigned int lun, int lun0_scsi_level,=20
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#62: FILE: scsi/scsi.c:191:
+		unsigned int *max_scsi_dev, unsigned int *sparse_lun,=20
 		                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#62: FILE: scsi/scsi.c:191:
+		unsigned int *max_scsi_dev, unsigned int *sparse_lun,=20
 		                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#63: FILE: scsi/scsi.c:192:
+		unsigned int *max_scsi_dev, unsigned int *sparse_lun,=20
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20
 		            ^

ERROR:SPACING: space prohibited after that '*' (ctx:OxW)
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20
 		             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20
 		                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#63: FILE: scsi/scsi.c:192:
+		Scsi_Device ** SDpnt, struct Scsi_Host *shpnt,=20

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#75: FILE: scsi/scsi.c:446:
 }
+#define MAX_SCSI_LUNS 0x7FFFFFFF

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#79: FILE: scsi/scsi.c:449:
+static int max_scsi_luns =3D MAX_SCSI_LUNS;
                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#89: FILE: scsi/scsi.c:458:
+	printk("scsi_luns_setup : usage max_scsi_luns=3Dn (n should be =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: scsi/scsi.c:477:
+  unsigned int    dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: scsi/scsi.c:478:
+  unsigned int    lun;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: scsi/scsi.c:479:
+  unsigned int    max_dev_lun;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: scsi/scsi.c:485:
+  unsigned int    sparse_lun;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: scsi/scsi.c:486:
+  int lun0_sl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: scsi/scsi.c:550:
+    if ((0 =3D=3D lun) || (lun > 7))$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#122: FILE: scsi/scsi.c:550:
+    if ((0 =3D=3D lun) || (lun > 7))
            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#122: FILE: scsi/scsi.c:550:
+    if ((0 =3D=3D lun) || (lun > 7))
               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun > 7'
#122: FILE: scsi/scsi.c:550:
+    if ((0 =3D=3D lun) || (lun > 7))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#122: FILE: scsi/scsi.c:550:
+    if ((0 =3D=3D lun) || (lun > 7))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: scsi/scsi.c:551:
+        lun0_sl =3D SCSI_3; /* actually don't care for 0 =3D=3D lun */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: scsi/scsi.c:551:
+        lun0_sl =3D SCSI_3; /* actually don't care for 0 =3D=3D lun */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: scsi/scsi.c:551:
+        lun0_sl =3D SCSI_3; /* actually don't care for 0 =3D=3D lun */
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: scsi/scsi.c:552:
+    else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: scsi/scsi.c:553:
+        lun0_sl =3D find_lun0_scsi_level(channel, dev, shpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: scsi/scsi.c:553:
+        lun0_sl =3D find_lun0_scsi_level(channel, dev, shpnt);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: scsi/scsi.c:553:
+        lun0_sl =3D find_lun0_scsi_level(channel, dev, shpnt);
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: scsi/scsi.c:554:
+    scan_scsis_single(channel, dev, lun, lun0_sl, &max_dev_lun,=20$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#126: FILE: scsi/scsi.c:554:
+    scan_scsis_single(channel, dev, lun, lun0_sl, &max_dev_lun,=20
                                                               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#126: FILE: scsi/scsi.c:554:
+    scan_scsis_single(channel, dev, lun, lun0_sl, &max_dev_lun,=20
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: scsi/scsi.c:555:
+                      &sparse_lun, &SDpnt, shpnt, scsi_result);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: scsi/scsi.c:555:
+                      &sparse_lun, &SDpnt, shpnt, scsi_result);$

CHECK:SPACING: spaces preferred around that '&' (ctx:ExV)
#127: FILE: scsi/scsi.c:555:
+                      &sparse_lun, &SDpnt, shpnt, scsi_result);
                       ^

WARNING:TABSTOP: Statements should start on a tabstop
#147: FILE: scsi/scsi.c:613:
+	  if ((shpnt->max_id > 16) && (shpnt->max_lun > 16)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 0)
#147: FILE: scsi/scsi.c:613:
+	  if ((shpnt->max_id > 16) && (shpnt->max_lun > 16)) {
[...]
capable

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'shpnt->max_id > 16'
#147: FILE: scsi/scsi.c:613:
+	  if ((shpnt->max_id > 16) && (shpnt->max_lun > 16)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'shpnt->max_lun > 16'
#147: FILE: scsi/scsi.c:613:
+	  if ((shpnt->max_id > 16) && (shpnt->max_lun > 16)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: scsi/scsi.c:614:
+                /* This is the first step of supporting large numbers$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: scsi/scsi.c:615:
+                 * of luns on a device.  By definition any SCSU host =$

WARNING:TYPO_SPELLING: 'controlers' may be misspelled - perhaps 'controllers'?
#151: FILE: scsi/scsi.c:616:
+                 * of supporting more than 16 SCSI controlers with =
                                                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: scsi/scsi.c:616:
+                 * of supporting more than 16 SCSI controlers with =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: scsi/scsi.c:619:
+                 * place to do a report lun call.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: scsi/scsi.c:620:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: scsi/scsi.c:621:
+                sparse_lun =3D 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: scsi/scsi.c:621:
+                sparse_lun =3D 1;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#157: FILE: scsi/scsi.c:621:
+                sparse_lun =3D 1;
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: scsi/scsi.c:622:
+          } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: scsi/scsi.c:622:
+          } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: scsi/scsi.c:623:
+                sparse_lun =3D 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: scsi/scsi.c:623:
+                sparse_lun =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#159: FILE: scsi/scsi.c:623:
+                sparse_lun =3D 0;
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: scsi/scsi.c:624:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: scsi/scsi.c:624:
+          }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: scsi/scsi.c:626:
+          sparse_lun =3D 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: scsi/scsi.c:626:
+          sparse_lun =3D 0;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#162: FILE: scsi/scsi.c:626:
+          sparse_lun =3D 0;
                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: scsi/scsi.c:629:
+          for (lun =3D 0, lun0_sl =3D SCSI_2; lun < max_dev_lun; =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: scsi/scsi.c:629:
+          for (lun =3D 0, lun0_sl =3D SCSI_2; lun < max_dev_lun; =$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#165: FILE: scsi/scsi.c:629:
+          for (lun =3D 0, lun0_sl =3D SCSI_2; lun < max_dev_lun; =
[...]
+              if (!scan_scsis_single(channel, order_dev, lun, lun0_sl,

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: scsi/scsi.c:629:
+          for (lun =3D 0, lun0_sl =3D SCSI_2; lun < max_dev_lun; =
                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#165: FILE: scsi/scsi.c:629:
+          for (lun =3D 0, lun0_sl =3D SCSI_2; lun < max_dev_lun; =
                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:ExV)
#166: FILE: scsi/scsi.c:630:
++lun) {
 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: scsi/scsi.c:631:
+              if (!scan_scsis_single(channel, order_dev, lun, lun0_sl,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: scsi/scsi.c:631:
+              if (!scan_scsis_single(channel, order_dev, lun, lun0_sl,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#167: FILE: scsi/scsi.c:631:
+              if (!scan_scsis_single(channel, order_dev, lun, lun0_sl,
[...]
+                  break;	/* break means don't probe further for =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#167: FILE: scsi/scsi.c:631:
+              if (!scan_scsis_single(channel, order_dev, lun, lun0_sl,

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: scsi/scsi.c:632:
+                                     &max_dev_lun, &sparse_lun, =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: scsi/scsi.c:632:
+                                     &max_dev_lun, &sparse_lun, =$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: scsi/scsi.c:632:
+              if (!scan_scsis_single(channel, order_dev, lun, lun0_sl,
&SDpnt, shpnt,

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: scsi/scsi.c:633:
+                                     scsi_result)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: scsi/scsi.c:633:
+                                     scsi_result)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: scsi/scsi.c:634:
+                      && !sparse_lun)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#171: FILE: scsi/scsi.c:634:
+                                     scsi_result)
+                      && !sparse_lun)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: scsi/scsi.c:634:
+                      && !sparse_lun)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: scsi/scsi.c:635:
+                  break;^I/* break means don't probe further for =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: scsi/scsi.c:635:
+                  break;^I/* break means don't probe further for =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: scsi/scsi.c:636:
+              if (SDpnt && (0 =3D=3D lun))$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: scsi/scsi.c:636:
+                  break;	/* break means don't probe further for =
+              if (SDpnt && (0 =3D=3D lun))

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: scsi/scsi.c:637:
+                lun0_sl =3D SDpnt->scsi_level;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: scsi/scsi.c:638:
+          }             ^I/* for lun ends */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: scsi/scsi.c:638:
+          }             ^I/* for lun ends */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#184: FILE: scsi/scsi.c:698:
 }
+Scsi_Cmnd *scsi_allocate_request(Scsi_Device * device)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: scsi/scsi.c:698:
+Scsi_Cmnd *scsi_allocate_request(Scsi_Device * device)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#184: FILE: scsi/scsi.c:698:
+Scsi_Cmnd *scsi_allocate_request(Scsi_Device * device)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: scsi/scsi.c:700:
+  Scsi_Cmnd *SCpnt =3D NULL;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#186: FILE: scsi/scsi.c:700:
+  Scsi_Cmnd *SCpnt =3D NULL;
                    ^

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#186: FILE: scsi/scsi.c:700:
+  Scsi_Cmnd *SCpnt =3D NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: scsi/scsi.c:702:
+  if (!device)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#188: FILE: scsi/scsi.c:702:
+  if (!device)
+    panic("No device passed to scsi_allocate_request().\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: scsi/scsi.c:703:
+    panic("No device passed to scsi_allocate_request().\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'scsi_allocate_request', this function's name, in a string
#189: FILE: scsi/scsi.c:703:
+    panic("No device passed to scsi_allocate_request().\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#191: FILE: scsi/scsi.c:705:
+  SCpnt =3D (Scsi_Cmnd *) kmalloc(sizeof(Scsi_Cmnd), GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: scsi/scsi.c:705:
+  SCpnt =3D (Scsi_Cmnd *) kmalloc(sizeof(Scsi_Cmnd), GFP_ATOMIC);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: scsi/scsi.c:705:
+  SCpnt =3D (Scsi_Cmnd *) kmalloc(sizeof(Scsi_Cmnd), GFP_ATOMIC);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#191: FILE: scsi/scsi.c:705:
+  SCpnt =3D (Scsi_Cmnd *) kmalloc(sizeof(Scsi_Cmnd), GFP_ATOMIC);
         ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#191: FILE: scsi/scsi.c:705:
+  SCpnt =3D (Scsi_Cmnd *) kmalloc(sizeof(Scsi_Cmnd), GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: scsi/scsi.c:707:
+  if (SCpnt =3D=3D NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#193: FILE: scsi/scsi.c:707:
+  if (SCpnt =3D=3D NULL)
+    return NULL;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#193: FILE: scsi/scsi.c:707:
+  if (SCpnt =3D=3D NULL)
             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#193: FILE: scsi/scsi.c:707:
+  if (SCpnt =3D=3D NULL)
                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: scsi/scsi.c:707:
+  if (SCpnt =3D=3D NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: scsi/scsi.c:708:
+    return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: scsi/scsi.c:710:
+  memset(SCpnt, 0, sizeof(Scsi_Cmnd));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: scsi/scsi.c:711:
+  SCpnt->host =3D device->host;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#197: FILE: scsi/scsi.c:711:
+  SCpnt->host =3D device->host;
               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: scsi/scsi.c:712:
+  SCpnt->device =3D device;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#198: FILE: scsi/scsi.c:712:
+  SCpnt->device =3D device;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: scsi/scsi.c:713:
+  SCpnt->target =3D device->id;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#199: FILE: scsi/scsi.c:713:
+  SCpnt->target =3D device->id;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: scsi/scsi.c:714:
+  SCpnt->lun =3D device->lun;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#200: FILE: scsi/scsi.c:714:
+  SCpnt->lun =3D device->lun;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: scsi/scsi.c:715:
+  SCpnt->channel =3D device->channel;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#201: FILE: scsi/scsi.c:715:
+  SCpnt->channel =3D device->channel;
                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: scsi/scsi.c:717:
+  return SCpnt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: scsi/scsi.c:726:
+                             unsigned int lun, int lun0_scsi_level,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: scsi/scsi.c:726:
+                             unsigned int lun, int lun0_scsi_level,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: scsi/scsi.c:727:
+                             unsigned int *max_dev_lun, unsigned int =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: scsi/scsi.c:727:
+                             unsigned int *max_dev_lun, unsigned int =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: scsi/scsi.c:728:
+                             Scsi_Device ** SDpnt2, struct Scsi_Host =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: scsi/scsi.c:728:
+                             Scsi_Device ** SDpnt2, struct Scsi_Host =$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#220: FILE: scsi/scsi.c:728:
+                             Scsi_Device ** SDpnt2, struct Scsi_Host =

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt2>
#220: FILE: scsi/scsi.c:728:
+                             Scsi_Device ** SDpnt2, struct Scsi_Host =

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: scsi/scsi.c:729:
+                             char *scsi_result)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: scsi/scsi.c:729:
+                             char *scsi_result)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: scsi/scsi.c:734:
+  Scsi_Cmnd * SCpnt;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: scsi/scsi.c:734:
+  Scsi_Cmnd * SCpnt;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {
+    printk("scan_scsis_single: no memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {
            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {
               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {
                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#278: FILE: scsi/scsi.c:754:
+  if (NULL =3D=3D (SCpnt =3D scsi_allocate_request(SDpnt))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: scsi/scsi.c:755:
+    printk("scan_scsis_single: no memory\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#279: FILE: scsi/scsi.c:755:
+    printk("scan_scsis_single: no memory\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: scsi/scsi.c:756:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: scsi/scsi.c:765:
+  if ((lun > 0) && (lun0_scsi_level <=3D SCSI_2))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#289: FILE: scsi/scsi.c:765:
+  if ((lun > 0) && (lun0_scsi_level <=3D SCSI_2))
+    scsi_cmd[1] =3D (lun << 5) & 0xe0;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#289: FILE: scsi/scsi.c:765:
+  if ((lun > 0) && (lun0_scsi_level <=3D SCSI_2))
                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun > 0'
#289: FILE: scsi/scsi.c:765:
+  if ((lun > 0) && (lun0_scsi_level <=3D SCSI_2))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: scsi/scsi.c:766:
+    scsi_cmd[1] =3D (lun << 5) & 0xe0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: scsi/scsi.c:766:
+    scsi_cmd[1] =3D (lun << 5) & 0xe0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#290: FILE: scsi/scsi.c:766:
+    scsi_cmd[1] =3D (lun << 5) & 0xe0;
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: scsi/scsi.c:767:
+  else=09$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#291: FILE: scsi/scsi.c:767:
+  else=09
       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#291: FILE: scsi/scsi.c:767:
+  else=09

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: scsi/scsi.c:768:
+    scsi_cmd[1] =3D 0;^I/* SCSI_3 and higher, don't touch */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#292: FILE: scsi/scsi.c:768:
+    scsi_cmd[1] =3D 0;	/* SCSI_3 and higher, don't touch */
                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: scsi/scsi.c:790:
+  if (SCpnt->result) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#303: FILE: scsi/scsi.c:790:
+  if (SCpnt->result) {
+    kfree(SCpnt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: scsi/scsi.c:791:
+    kfree(SCpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: scsi/scsi.c:793:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: scsi/scsi.c:800:
+      kfree(SCpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: scsi/scsi.c:925:
+    if (shpnt->max_lun <=3D 8)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#323: FILE: scsi/scsi.c:925:
+    if (shpnt->max_lun <=3D 8)
+      scsi_cmd[1] =3D (lun << 5) & 0xe0;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#323: FILE: scsi/scsi.c:925:
+    if (shpnt->max_lun <=3D 8)
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: scsi/scsi.c:926:
+      scsi_cmd[1] =3D (lun << 5) & 0xe0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: scsi/scsi.c:926:
+      scsi_cmd[1] =3D (lun << 5) & 0xe0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#324: FILE: scsi/scsi.c:926:
+      scsi_cmd[1] =3D (lun << 5) & 0xe0;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: scsi/scsi.c:927:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#325: FILE: scsi/scsi.c:927:
+    else
+      scsi_cmd[1] =3D 0;	/* any other idea? */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: scsi/scsi.c:928:
+      scsi_cmd[1] =3D 0;^I/* any other idea? */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#326: FILE: scsi/scsi.c:928:
+      scsi_cmd[1] =3D 0;	/* any other idea? */
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: scsi/scsi.c:965:
+      kfree(SCpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: scsi/scsi.c:997:
+  if (bflags & BLIST_NOLUN) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#345: FILE: scsi/scsi.c:997:
+  if (bflags & BLIST_NOLUN) {
+    kfree(SCpnt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: scsi/scsi.c:998:
+    kfree(SCpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: scsi/scsi.c:1000:
+  }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#355: FILE: scsi/scsi.c:1005:
   if (bflags & BLIST_SPARSELUN) {
[...]
+    if (*max_dev_lun < shpnt->max_lun)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: scsi/scsi.c:1014:
+    if (*max_dev_lun < shpnt->max_lun)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#365: FILE: scsi/scsi.c:1014:
+    if (*max_dev_lun < shpnt->max_lun)
+      *max_dev_lun =3D shpnt->max_lun;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: scsi/scsi.c:1015:
+      *max_dev_lun =3D shpnt->max_lun;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#366: FILE: scsi/scsi.c:1015:
+      *max_dev_lun =3D shpnt->max_lun;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: scsi/scsi.c:1016:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#367: FILE: scsi/scsi.c:1016:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)
+      *max_dev_lun +=3D shpnt->max_lun;

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#367: FILE: scsi/scsi.c:1016:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)
                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#367: FILE: scsi/scsi.c:1016:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: scsi/scsi.c:1017:
+      *max_dev_lun +=3D shpnt->max_lun;$

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#368: FILE: scsi/scsi.c:1017:
+      *max_dev_lun +=3D shpnt->max_lun;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: scsi/scsi.c:1018:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#369: FILE: scsi/scsi.c:1018:
+    else
+      *max_dev_lun =3D max_scsi_luns;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: scsi/scsi.c:1019:
+      *max_dev_lun =3D max_scsi_luns;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#370: FILE: scsi/scsi.c:1019:
+      *max_dev_lun =3D max_scsi_luns;
                    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#377: FILE: scsi/scsi.c:1029:
   if (bflags & BLIST_FORCELUN) {
[...]
+    if (*max_dev_lun < shpnt->max_lun)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: scsi/scsi.c:1036:
+    if (*max_dev_lun < shpnt->max_lun)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#385: FILE: scsi/scsi.c:1036:
+    if (*max_dev_lun < shpnt->max_lun)
+      *max_dev_lun =3D shpnt->max_lun;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: scsi/scsi.c:1037:
+      *max_dev_lun =3D shpnt->max_lun;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#386: FILE: scsi/scsi.c:1037:
+      *max_dev_lun =3D shpnt->max_lun;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: scsi/scsi.c:1038:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#387: FILE: scsi/scsi.c:1038:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)
+      *max_dev_lun +=3D shpnt->max_lun;

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#387: FILE: scsi/scsi.c:1038:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)
                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#387: FILE: scsi/scsi.c:1038:
+    else if ((max_scsi_luns >> 1) >=3D *max_dev_lun)
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: scsi/scsi.c:1039:
+      *max_dev_lun +=3D shpnt->max_lun;$

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#388: FILE: scsi/scsi.c:1039:
+      *max_dev_lun +=3D shpnt->max_lun;
                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: scsi/scsi.c:1040:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#389: FILE: scsi/scsi.c:1040:
+    else
+      *max_dev_lun =3D max_scsi_luns;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: scsi/scsi.c:1041:
+      *max_dev_lun =3D max_scsi_luns;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#390: FILE: scsi/scsi.c:1041:
+      *max_dev_lun =3D max_scsi_luns;
                    ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#395: FILE: scsi/scsi.c:1058:
   if (((scsi_result[2] & 0x07) =3D=3D 0)
[...]
+    kfree(SCpnt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: scsi/scsi.c:1061:
+       (scsi_result[3] & 0x0f) =3D=3D 0)) {$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#399: FILE: scsi/scsi.c:1061:
+       (scsi_result[3] & 0x0f) =3D=3D 0)) {
                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#399: FILE: scsi/scsi.c:1061:
+       (scsi_result[3] & 0x0f) =3D=3D 0)) {
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: scsi/scsi.c:1062:
+    kfree(SCpnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: scsi/scsi.c:1064:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: scsi/scsi.c:1076:
+  int res =3D SCSI_2;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#416: FILE: scsi/scsi.c:1076:
+  int res =3D SCSI_2;
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: scsi/scsi.c:1077:
+  Scsi_Device *SDpnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: scsi/scsi.c:1079:
+  for (SDpnt =3D shpnt->host_queue; SDpnt; SDpnt =3D SDpnt->next)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#419: FILE: scsi/scsi.c:1079:
+  for (SDpnt =3D shpnt->host_queue; SDpnt; SDpnt =3D SDpnt->next)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#419: FILE: scsi/scsi.c:1079:
+  for (SDpnt =3D shpnt->host_queue; SDpnt; SDpnt =3D SDpnt->next)
+    {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#419: FILE: scsi/scsi.c:1079:
+  for (SDpnt =3D shpnt->host_queue; SDpnt; SDpnt =3D SDpnt->next)
              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#419: FILE: scsi/scsi.c:1079:
+  for (SDpnt =3D shpnt->host_queue; SDpnt; SDpnt =3D SDpnt->next)
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: scsi/scsi.c:1080:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: scsi/scsi.c:1081:
+      if ((0 =3D=3D SDpnt->lun) && (dev =3D=3D SDpnt->id) &&$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#421: FILE: scsi/scsi.c:1081:
+      if ((0 =3D=3D SDpnt->lun) && (dev =3D=3D SDpnt->id) &&
              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#421: FILE: scsi/scsi.c:1081:
+      if ((0 =3D=3D SDpnt->lun) && (dev =3D=3D SDpnt->id) &&
                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#421: FILE: scsi/scsi.c:1081:
+      if ((0 =3D=3D SDpnt->lun) && (dev =3D=3D SDpnt->id) &&
                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#421: FILE: scsi/scsi.c:1081:
+      if ((0 =3D=3D SDpnt->lun) && (dev =3D=3D SDpnt->id) &&
                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: scsi/scsi.c:1081:
+      if ((0 =3D=3D SDpnt->lun) && (dev =3D=3D SDpnt->id) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: scsi/scsi.c:1082:
+          (channel =3D=3D SDpnt->channel))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: scsi/scsi.c:1082:
+          (channel =3D=3D SDpnt->channel))$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#422: FILE: scsi/scsi.c:1082:
+          (channel =3D=3D SDpnt->channel))
                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#422: FILE: scsi/scsi.c:1082:
+          (channel =3D=3D SDpnt->channel))
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: scsi/scsi.c:1083:
+        return (int)SDpnt->scsi_level;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: scsi/scsi.c:1083:
+        return (int)SDpnt->scsi_level;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: scsi/scsi.c:1084:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: scsi/scsi.c:1086:
+  return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: scsi/scsi.c:433:
+    unsigned int lun;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: scsi/scsi.c:434:
+    unsigned char id, channel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: scsi/scsi.c:544:
+    unsigned int       lun;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000537869.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 96 errors, 121 warnings, 21 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000537869.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
