WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#76: FILE: Makefile:4:
+EXTRAVERSION = -rc4-bk9-smaps
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: fs/proc/base.c:32:
+ *  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: fs/proc/base.c:35:
+ *  Embedded Linux Lab - 10LE Instituto Nokia de Tecnologia - INdT $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#134: FILE: fs/proc/base.c:161:
+	E(PROC_TGID_SMAPS,     "smaps",   S_IFREG|S_IRUGO),
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#134: FILE: fs/proc/base.c:161:
+	E(PROC_TGID_SMAPS,     "smaps",   S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#142: FILE: fs/proc/base.c:192:
+	E(PROC_TID_SMAPS,      "smaps",   S_IFREG|S_IRUGO),
 	                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#142: FILE: fs/proc/base.c:192:
+	E(PROC_TID_SMAPS,      "smaps",   S_IFREG|S_IRUGO),

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#150: FILE: fs/proc/base.c:517:
+extern struct seq_operations proc_pid_smaps_op;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#150: FILE: fs/proc/base.c:517:
+extern struct seq_operations proc_pid_smaps_op;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: fs/proc/base.c:522:
+	int ret = seq_open(file, &proc_pid_smaps_op);
+	if (!ret) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: fs/proc/base.c:524:
+		struct seq_file *m = file->private_data;
+		m->private = task;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#162: FILE: fs/proc/base.c:529:
+static struct file_operations proc_smaps_operations = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#197: FILE: fs/proc/task_mmu.c:121:
+	pte_t * pte;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: fs/proc/task_mmu.c:123:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: fs/proc/task_mmu.c:144:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: fs/proc/task_mmu.c:183:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: fs/proc/task_mmu.c:223:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: fs/proc/task_mmu.c:226:
+^I^Ipgd_t *pgd = pgd_offset(mm, map->vm_start);^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: fs/proc/task_mmu.c:227:
+		pgd_t *pgd = pgd_offset(mm, map->vm_start);		
+		smaps_pgd_range(pgd, map->vm_start, map->vm_end, &rss);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: fs/proc/task_mmu.c:232:
+	seq_printf(m, "%08lx-%08lx %c%c%c%c ",
+			map->vm_start,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: fs/proc/task_mmu.c:243:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: fs/proc/task_mmu.c:248:
+^I$

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#336: FILE: fs/proc/task_mmu.c:306:
+struct seq_operations proc_pid_smaps_op = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 10 warnings, 3 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000202950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
