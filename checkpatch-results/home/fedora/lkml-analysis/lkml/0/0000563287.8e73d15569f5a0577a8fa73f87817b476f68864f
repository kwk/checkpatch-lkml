WARNING:TYPO_SPELLING: 'Immediatelly' may be misspelled - perhaps 'Immediately'?
#34: 
>    Immediatelly I getting: 1. waitpid(<somepid>) failed, -512 2. oops.
     ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
>    Simple (and probably not that good) solution is attached as patch, below.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: include/linux/sched.h:153:
+extern int start_context_thread(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#82: FILE: kernel/kmod.c:268:
+	ret = exec_usermodehelper (path, argv, envp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#108: FILE: kernel/kmod.c:291:
+	void *params [3] = { sub_info->path, sub_info->argv, sub_info->envp };

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#123: FILE: kernel/kmod.c:297:
+		printk(KERN_ERR "call_usermodehelper[%s]: no root fs\n", sub_info->path);

CHECK:SPACING: No space is necessary after a cast
#127: FILE: kernel/kmod.c:301:
+	if ((pid = kernel_thread(exec_helper, (void *) params, 0)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: kernel/kmod.c:301:
+	if ((pid = kernel_thread(exec_helper, (void *) params, 0)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#128: FILE: kernel/kmod.c:302:
+		printk(KERN_ERR "failed fork2 %s, errno = %d", sub_info->argv[0], -pid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#149: FILE: kernel/kmod.c:323:
+			printk(KERN_ERR "waitpid(%d) failed, %d\n", pid, pid2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#177: FILE: kernel/kmod.c:344:
+	if ((pid = kernel_thread (____call_usermodehelper, (void *)sub_info, 0)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: kernel/kmod.c:344:
+	if ((pid = kernel_thread (____call_usermodehelper, (void *)sub_info, 0)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#178: FILE: kernel/kmod.c:345:
+		printk(KERN_ERR "failed fork1 %s, errno = %d", sub_info->argv[0], -pid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: kernel/kmod.c:357:
+int call_usermodehelper (char *path, char **argv, char **envp)

WARNING:INDENTED_LABEL: labels should not be indented
#195: FILE: kernel/kmod.c:361:
+		sem:	&sem,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#196: FILE: kernel/kmod.c:362:
+		path:	path,
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#196: FILE: kernel/kmod.c:362:
+		path:	path,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#197: FILE: kernel/kmod.c:363:
+		argv:	argv,
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#197: FILE: kernel/kmod.c:363:
+		argv:	argv,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#198: FILE: kernel/kmod.c:364:
+		envp:	envp,
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#198: FILE: kernel/kmod.c:364:
+		envp:	envp,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#204: FILE: kernel/kmod.c:370:
+		routine:	__call_usermodehelper,
 		       ^

WARNING:INDENTED_LABEL: labels should not be indented
#204: FILE: kernel/kmod.c:370:
+		routine:	__call_usermodehelper,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#205: FILE: kernel/kmod.c:371:
+		data:		&sub_info,
 		    ^

WARNING:INDENTED_LABEL: labels should not be indented
#205: FILE: kernel/kmod.c:371:
+		data:		&sub_info,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#236: FILE: kernel/context.c:25:
+		printk(KERN_ERR "schedule_task(): keventd has not started\n");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#283: FILE: kernel/context.c:68:
+			while (waitpid(-1, (unsigned int *)0, __WALL|WNOHANG) > 0)
 			                                            ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#330: FILE: init/main.c:727:
To unsubscribe from this list: send the line "unsubscribe linux-kernel" in

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 16 warnings, 3 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000563287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
