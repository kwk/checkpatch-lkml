WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: arch/m68k/mm/cache.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#59: FILE: arch/m68k/mm/cache.c:2:
+ *  linux/arch/m68k/mm/cache.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#70: FILE: arch/m68k/mm/cache.c:13:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#78: FILE: arch/m68k/mm/cache.c:21:
+		 * as for user space accesses in <asm/uaccess.h>. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#115: FILE: arch/m68k/mm/cache.c:58:
+		if (mmusr & (MMU_I|MMU_B|MMU_L))
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#115: FILE: arch/m68k/mm/cache.c:58:
+		if (mmusr & (MMU_I|MMU_B|MMU_L))
 		                        ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#134: FILE: arch/m68k/mm/cache.c:77:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: arch/m68k/mm/cache.c:91:
+		unsigned long tmp;
+		asm volatile ("movec %%cacr,%0\n\t"

WARNING:LINE_SPACING: Missing a blank line after declarations
#168: FILE: arch/m68k/mm/cache.c:111:
+		unsigned long tmp;
+		asm volatile ("movec %%cacr,%0\n\t"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: include/asm-m68k/cacheflush.h:134:
+extern void flush_icache_user_range(struct vm_area_struct *vma, struct page *page,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#325: FILE: include/asm-m68k/cacheflush.h:146:
+}
+static inline void copy_from_user_page(struct vm_area_struct *vma,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155317.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 5 warnings, 6 checks, 274 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155317.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
