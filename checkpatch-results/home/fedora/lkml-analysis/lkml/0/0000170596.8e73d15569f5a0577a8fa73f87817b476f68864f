WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
> I think this needs to happen (dummy goes away or it's contents are replac=

WARNING:TYPO_SPELLING: 'ue' may be misspelled - perhaps 'use'?
#84: 
ue,
^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#95: 
#  define COND_SECURITY(seop, def)			\

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'occurence' may be misspelled - perhaps 'occurrence'?
#110: 
occurence) and know the return value immediately. Nice.
^^^^^^^^^

WARNING:TYPO_SPELLING: 'struc' may be misspelled - perhaps 'struct'?
#117: 
> I think the necessary functions need to be present in this new base struc=
                                                                      ^^^^^

WARNING:TYPO_SPELLING: 'ture' may be misspelled - perhaps 'true'?
#118: 
ture
^^^^

WARNING:TYPO_SPELLING: 'regist' may be misspelled - perhaps 'register'?
#139: 
> > +/* Note: If the capability security module is loaded, we do NOT regist=
                                                                     ^^^^^^

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#146: 
ot
^^

WARNING:REPEATED_WORD: Possible repeated word: 'it'
#161: 
> capability on top of this base capability, even if it it supported stacki=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#246: FILE: security/security.c:21:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#251: FILE: security/security.c:25:
+extern struct security_operations capability_security_ops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: security/security.c:60:
 		printk(KERN_ERR "%s could not verify "
+		       "capability_security_ops structure.\n", __FUNCTION__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#263: FILE: security/security.c:60:
+		       "capability_security_ops structure.\n", __FUNCTION__);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#268: FILE: security/security.c:63:
+	security_ops =3D &capability_security_ops;
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#268: FILE: security/security.c:63:
+	security_ops =3D &capability_security_ops;
 	                 ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#279: FILE: security/security.c:92:
+	if (security_ops !=3D &capability_security_ops)
 	                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#279: FILE: security/security.c:92:
+	if (security_ops !=3D &capability_security_ops)
 	                      ^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#290: FILE: security/security.c:111:
 the
+ * the capability_security_ops structure, and 0 is returned.

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: security/security.c:117:
 		printk(KERN_INFO "%s: trying to unregister "
+		       "a security_ops structure that is not "

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#303: FILE: security/security.c:121:
+	security_ops =3D &capability_security_ops;
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#303: FILE: security/security.c:121:
+	security_ops =3D &capability_security_ops;
 	                 ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#317: FILE: security/commoncap.c:327:
 }
+#ifdef CONFIG_SECURITY

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#318: FILE: security/commoncap.c:328:
+struct security_operations capability_security_ops =3D {
                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#319: FILE: security/commoncap.c:329:
+	.ptrace =3D			cap_ptrace,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#320: FILE: security/commoncap.c:330:
+	.capget =3D			cap_capget,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#321: FILE: security/commoncap.c:331:
+	.capset_check =3D			cap_capset_check,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#322: FILE: security/commoncap.c:332:
+	.capset_set =3D			cap_capset_set,
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#323: FILE: security/commoncap.c:333:
+	.capable =3D			cap_capable,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#324: FILE: security/commoncap.c:334:
+	.settime =3D			cap_settime,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#325: FILE: security/commoncap.c:335:
+	.netlink_send =3D			cap_netlink_send,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#326: FILE: security/commoncap.c:336:
+	.netlink_recv =3D			cap_netlink_recv,
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#328: FILE: security/commoncap.c:338:
+	.bprm_apply_creds =3D		cap_bprm_apply_creds,
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#329: FILE: security/commoncap.c:339:
+	.bprm_set_security =3D		cap_bprm_set_security,
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#330: FILE: security/commoncap.c:340:
+	.bprm_secureexec =3D		cap_bprm_secureexec,
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#332: FILE: security/commoncap.c:342:
+	.inode_setxattr =3D		cap_inode_setxattr,
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#333: FILE: security/commoncap.c:343:
+	.inode_removexattr =3D		cap_inode_removexattr,
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#335: FILE: security/commoncap.c:345:
+	.task_post_setuid =3D		cap_task_post_setuid,
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#336: FILE: security/commoncap.c:346:
+	.task_reparent_to_init =3D	cap_task_reparent_to_init,
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#338: FILE: security/commoncap.c:348:
+	.syslog =3D                       cap_syslog,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#340: FILE: security/commoncap.c:350:
+	.vm_enough_memory =3D             cap_vm_enough_memory,
 	                  ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#343: FILE: security/commoncap.c:353:
+EXPORT_SYMBOL(capability_security_ops);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'severly' may be misspelled - perhaps 'severely'?
#420: FILE: security/Makefile:32:
+ * a tiny bit and (more severly) for disallowing loading another LSM.
                         ^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 16 warnings, 4 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
