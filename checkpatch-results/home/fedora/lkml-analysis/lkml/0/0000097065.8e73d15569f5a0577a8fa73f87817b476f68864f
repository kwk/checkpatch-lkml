WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#90: FILE: drivers/usb/input/Kconfig:334:
+config USB_TOUCHSET
+	tristate "TouchSet USB Device Driver"
+	depends on USB && INPUT
+	---help---
+	  Say Y here if you want to use a TouchSet USB
+	  Touchscreen controller.
+
+	  Have a look at <http://linux.chapter7.ch/touchkit/> for
+	  a usage description and the required user-space stuff.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called touchsetusb.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: drivers/usb/input/touchsetusb.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: drivers/usb/input/touchsetusb.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: drivers/usb/input/touchsetusb.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/usb/input/touchsetusb.c:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#227: FILE: drivers/usb/input/touchsetusb.c:105:
+		    __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#234: FILE: drivers/usb/input/touchsetusb.c:112:
+		    __FUNCTION__, urb->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#238: FILE: drivers/usb/input/touchsetusb.c:116:
+		    __FUNCTION__, urb->status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/usb/input/touchsetusb.c:130:
+^I                 touchsetusb_get_touched(touchset->data));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#261: FILE: drivers/usb/input/touchsetusb.c:139:
+		    __FUNCTION__, retval);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: drivers/usb/input/touchsetusb.c:162:
+static int touchsetusb_alloc_buffers(struct usb_device *udev,
+				  struct touchset_usb *touchset)

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/usb/input/touchsetusb.c:165:
+^I                                  SLAB_KERNEL, &touchset->data_dma);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/usb/input/touchsetusb.c:174:
+static void touchsetusb_free_buffers(struct usb_device *udev,
+				  struct touchset_usb *touchset)

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/usb/input/touchsetusb.c:178:
+^I^I                touchset->data, touchset->data_dma);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/usb/input/touchsetusb.c:182:
+static int touchsetusb_probe(struct usb_interface *intf,
+			  const struct usb_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*touchset)...) over kzalloc(sizeof(struct touchset_usb)...)
#315: FILE: drivers/usb/input/touchsetusb.c:193:
+	touchset = kzalloc(sizeof(struct touchset_usb), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#325: FILE: drivers/usb/input/touchsetusb.c:203:
+		dbg("%s - usb_alloc_urb failed: touchset->irq", __FUNCTION__);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#333: FILE: drivers/usb/input/touchsetusb.c:211:
+		strlcpy(touchset->name, udev->manufacturer, sizeof(touchset->name));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/usb/input/touchsetusb.c:221:
+		snprintf(touchset->name, sizeof(touchset->name),
+			"USB Device %04x:%04x",

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#344: FILE: drivers/usb/input/touchsetusb.c:222:
+			 le16_to_cpu(udev->descriptor.idVendor),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#345: FILE: drivers/usb/input/touchsetusb.c:223:
+			 le16_to_cpu(udev->descriptor.idProduct));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#348: FILE: drivers/usb/input/touchsetusb.c:226:
+	strlcpy(touchset->phys, "/input0", sizeof(touchset->phys));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/usb/input/touchsetusb.c:239:
+	input_set_abs_params(input_dev, ABS_X, TOUCHSET_MIN_XC, TOUCHSET_MAX_XC,
+				TOUCHSET_XC_FUZZ, TOUCHSET_XC_FLAT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/usb/input/touchsetusb.c:241:
+	input_set_abs_params(input_dev, ABS_Y, TOUCHSET_MIN_YC, TOUCHSET_MAX_YC,
+				TOUCHSET_YC_FUZZ, TOUCHSET_YC_FLAT);

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#368: FILE: drivers/usb/input/touchsetusb.c:246:
+			 touchsetusb_irq, touchset, endpoint->bInterval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#387: FILE: drivers/usb/input/touchsetusb.c:265:
+	dbg("%s - called", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#392: FILE: drivers/usb/input/touchsetusb.c:270:
+	dbg("%s - touchset is initialized, cleaning up", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000097065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 11 checks, 349 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000097065.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
