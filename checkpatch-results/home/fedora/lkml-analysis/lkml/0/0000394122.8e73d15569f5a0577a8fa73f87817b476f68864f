WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.5.53/include/asm-i386/mach-default/pci-functions.h linux98-2.5.53/include/asm-i386/mach-default/pci-functions.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: include/asm-i386/mach-default/pci-functions.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: include/asm-i386/mach-default/pci-functions.h:2:
+ *^IPCI BIOS function numbering for conventional PCI BIOS $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#41: FILE: include/asm-i386/mach-default/pci-functions.h:6:
+#define PCIBIOS_PCI_FUNCTION_ID ^I0xb1XX$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#41: FILE: include/asm-i386/mach-default/pci-functions.h:6:
+#define PCIBIOS_PCI_FUNCTION_ID 	0xb1XX

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#42: FILE: include/asm-i386/mach-default/pci-functions.h:7:
+#define PCIBIOS_PCI_BIOS_PRESENT ^I0xb101$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: include/asm-i386/mach-default/io_ports.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#100: FILE: include/asm-i386/mach-default/irq_vectors.h:89:
+#define invalid_vm86_irq(irq)	((irq) < 3 || (irq) > 15)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#102: FILE: include/asm-i386/mach-default/irq_vectors.h:91:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: include/asm-i386/mach-default/mach_reboot.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#109: FILE: include/asm-i386/mach-default/mach_reboot.h:2:
+ *  include/asm-i386/mach-default/mach_reboot.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: include/asm-i386/mach-default/mach_reboot.h:22:
+	int i;
+	for (i = 0; i < 100; i++) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#131: FILE: include/asm-i386/mach-default/mach_reboot.h:24:
+		udelay(50);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#133: FILE: include/asm-i386/mach-default/mach_reboot.h:26:
+		udelay(50);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#142: FILE: include/asm-i386/mach-pc9800/io_ports.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#143: FILE: include/asm-i386/mach-pc9800/io_ports.h:2:
+ *  include/asm-i386/mach-pc9800/io_ports.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#176: FILE: include/asm-i386/mach-pc9800/irq_vectors.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: include/asm-i386/mach-pc9800/irq_vectors.h:21:
+ */^I^I^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#264: FILE: include/asm-i386/mach-pc9800/irq_vectors.h:89:
+#define invalid_vm86_irq(irq)	((irq) < 2 || (irq) == 7 || (irq) > 15)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: include/asm-i386/mach-pc9800/irq_vectors.h:93:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#273: FILE: include/asm-i386/mach-pc9800/mach_reboot.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#274: FILE: include/asm-i386/mach-pc9800/mach_reboot.h:2:
+ *  include/asm-i386/mach-pc9800/mach_reboot.h

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: include/asm-i386/mach-pc9800/mach_reboot.h:12:
+#define CMOS_WRITE(a,b)	do{}while(0)
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#284: FILE: include/asm-i386/mach-pc9800/mach_reboot.h:12:
+#define CMOS_WRITE(a,b)	do{}while(0)

ERROR:SPACING: space required after that close brace '}'
#284: FILE: include/asm-i386/mach-pc9800/mach_reboot.h:12:
+#define CMOS_WRITE(a,b)	do{}while(0)

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: include/asm-i386/mach-pc9800/mach_reboot.h:12:
+#define CMOS_WRITE(a,b)	do{}while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#298: FILE: include/asm-i386/mach-pc9800/pci-functions.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: include/asm-i386/mach-pc9800/pci-functions.h:8:
+#define PCIBIOS_PCI_FUNCTION_ID ^I0xccXX$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#305: FILE: include/asm-i386/mach-pc9800/pci-functions.h:8:
+#define PCIBIOS_PCI_FUNCTION_ID 	0xccXX

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: include/asm-i386/mach-pc9800/pci-functions.h:9:
+#define PCIBIOS_PCI_BIOS_PRESENT ^I0xcc81$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#322: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:1:
+/**

CHECK:LINE_SPACING: Please don't use multiple blank lines
#335: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:14:
+
+

CHECK:SPACING: No space is necessary after a cast
#340: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:19:
+	lower_high = (__u32) *(__u8 *) bus_to_virt(PC9800SCA_EXPMMSZ) << 17;

CHECK:SPACING: No space is necessary after a cast
#341: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:20:
+	higher_high = (__u32) *(__u16 *) bus_to_virt(PC9800SCA_MMSZ16M) << 20;

CHECK:BRACES: braces {} should be used on all arms of this statement
#342: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:21:
+	if (lower_high != 0x00f00000UL) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#346: FILE: include/asm-i386/mach-pc9800/setup_arch_post.h:25:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#355: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:1:
+/* Hook to call BIOS initialisation function */

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#359: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:5:
+#define ARCH_SETUP arch_setup_pc9800();

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#362: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:8:
+#include <asm/io.h>

CHECK:SPACING: No space is necessary after a cast
#374: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:20:
+#define MPC_TABLE ((char *) (PARAM+0x400))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#374: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:20:
+#define MPC_TABLE ((char *) (PARAM+0x400))
                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <PC9800_8MHz_P>
#380: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:26:
+	CLOCK_TICK_RATE = PC9800_8MHz_P() ? 1996800 : 2457600;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#381: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:27:
+	printk(KERN_DEBUG "CLOCK_TICK_RATE = %d\n", CLOCK_TICK_RATE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: include/asm-i386/mach-pc9800/setup_arch_pre.h:28:
+^Itick_usec = TICK_USEC; ^I^I/* ACTHZ          period (usec) */$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#402: FILE: include/asm-i386/mach-visws/irq_vectors.h:68:
+#define invalid_vm86_irq(irq)	((irq) < 3 || (irq) > 15)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#416: FILE: include/asm-i386/mach-voyager/irq_vectors.h:64:
+#define invalid_vm86_irq(irq)	((irq) < 3 || (irq) > 15)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#425: FILE: include/asm-i386/gdc.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#441: FILE: include/asm-i386/gdc.h:17:
+#define GDC_MAP_MEM(x) (unsigned long)phys_to_virt(x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#444: FILE: include/asm-i386/gdc.h:20:
+#define gdc_writeb(x,y) (*(y) = (x))
                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#449: FILE: include/asm-i386/gdc.h:25:
+#define pc9800_attr_offset(p) \
+		((u16 *)((u32)(p) + \
+		(((u32)(p) >= (u32)(vc_cons[currcons].d->vc_screenbuf) \
+			&& (u32)(p) < (u32)(vc_cons[currcons].d->vc_screenbuf) \
+				+ vc_cons[currcons].d->vc_screenbuf_size) ? \
+		vc_cons[currcons].d->vc_screenbuf_size : fbcon_softback_size)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#452: FILE: include/asm-i386/gdc.h:28:
+		(((u32)(p) >= (u32)(vc_cons[currcons].d->vc_screenbuf) \
+			&& (u32)(p) < (u32)(vc_cons[currcons].d->vc_screenbuf) \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#456: FILE: include/asm-i386/gdc.h:32:
+#define pc9800_attr_offset(p) \
+		((u16 *)((u32)(p) + \
+			(((u32)(p) >= (u32)(__va(0xa0000)) \
+				&& (u32)(p) < (u32)(__va(0xa2000))) ? \
+			0x2000 : vc_cons[currcons].d->vc_screenbuf_size)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#459: FILE: include/asm-i386/gdc.h:35:
+			(((u32)(p) >= (u32)(__va(0xa0000)) \
+				&& (u32)(p) < (u32)(__va(0xa2000))) ? \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#464: FILE: include/asm-i386/gdc.h:40:
+#define scr_writew(val, p) \
+	{ \
+		*((u16 *)(p)) = (u16)(((val) >> 16) & 0xff00) \
+			| (u16)((val) & 0xff); \
+		*(pc9800_attr_offset(p)) = (u16)((val) >> 8); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#464: FILE: include/asm-i386/gdc.h:40:
+#define scr_writew(val, p) \
+	{ \
+		*((u16 *)(p)) = (u16)(((val) >> 16) & 0xff00) \
+			| (u16)((val) & 0xff); \
+		*(pc9800_attr_offset(p)) = (u16)((val) >> 8); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#471: FILE: include/asm-i386/gdc.h:47:
+#define scr_readw(p) \
+	( \
+		(*((u16 *)(p)) & 0xff) | ((*((u16 *)(p)) & 0xff00) << 16) \
+		| ((*(pc9800_attr_offset(p)) & 0xff) << 8) \
+	)

CHECK:SPACING: No space is necessary after a cast
#498: FILE: include/asm-i386/gdc.h:74:
+			      : "a"((((u32) c) << 16) | c), "g"(2),

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: include/asm-i386/gdc.h:75:
+^I^I^I        "0"(s), "1"(count));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#504: FILE: include/asm-i386/gdc.h:80:
+#endif^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#507: FILE: include/asm-i386/gdc.h:83:
+#define scr_memsetw(s, c, count) \
+	{ \
+	_scr_memsetw((s), (u16)(((c) >> 16) & 0xff00) | (u16)((c) & 0xff), \
+		       	(count)); \
+	_scr_memsetw(pc9800_attr_offset(s), ((u16)(c)) >> 8, (count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#507: FILE: include/asm-i386/gdc.h:83:
+#define scr_memsetw(s, c, count) \
+	{ \
+	_scr_memsetw((s), (u16)(((c) >> 16) & 0xff00) | (u16)((c) & 0xff), \
+		       	(count)); \
+	_scr_memsetw(pc9800_attr_offset(s), ((u16)(c)) >> 8, (count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#507: FILE: include/asm-i386/gdc.h:83:
+#define scr_memsetw(s, c, count) \
+	{ \
+	_scr_memsetw((s), (u16)(((c) >> 16) & 0xff00) | (u16)((c) & 0xff), \
+		       	(count)); \
+	_scr_memsetw(pc9800_attr_offset(s), ((u16)(c)) >> 8, (count)); \
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: include/asm-i386/gdc.h:86:
+^I^I       ^I(count)); \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: include/asm-i386/gdc.h:86:
+^I^I       ^I(count)); \$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#518: FILE: include/asm-i386/gdc.h:94:
+#if 1 /* def CONFIG_GDC_32BITACCESS */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#541: FILE: include/asm-i386/gdc.h:117:
+#define scr_memcpyw(d, s, count) \
+	{ \
+	_scr_memcpyw((d), (s), (count)); \
+	_scr_memcpyw(pc9800_attr_offset(d), pc9800_attr_offset(s), (count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#541: FILE: include/asm-i386/gdc.h:117:
+#define scr_memcpyw(d, s, count) \
+	{ \
+	_scr_memcpyw((d), (s), (count)); \
+	_scr_memcpyw(pc9800_attr_offset(d), pc9800_attr_offset(s), (count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#541: FILE: include/asm-i386/gdc.h:117:
+#define scr_memcpyw(d, s, count) \
+	{ \
+	_scr_memcpyw((d), (s), (count)); \
+	_scr_memcpyw(pc9800_attr_offset(d), pc9800_attr_offset(s), (count)); \
+	}

WARNING:IF_1: Consider removing the #if 1 and its #endif
#550: FILE: include/asm-i386/gdc.h:126:
+#if 1 /* def CONFIG_GDC_32BITACCESS */

CHECK:SPACING: No space is necessary after a cast
#578: FILE: include/asm-i386/gdc.h:154:
+			      : "0"((void *) d + count - 2),

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: include/asm-i386/gdc.h:155:
+^I^I^I        "1"((void *) s + count - 2), "2"(count / 2));$

CHECK:SPACING: No space is necessary after a cast
#579: FILE: include/asm-i386/gdc.h:155:
+			        "1"((void *) s + count - 2), "2"(count / 2));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: include/asm-i386/gdc.h:156:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: include/asm-i386/gdc.h:167:
+}^I$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#593: FILE: include/asm-i386/gdc.h:169:
+#define scr_memmovew(d, s, count) \
+	{ \
+	_scr_memmovew((d), (s), (count)); \
+	_scr_memmovew(pc9800_attr_offset(d), pc9800_attr_offset(s), (count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#593: FILE: include/asm-i386/gdc.h:169:
+#define scr_memmovew(d, s, count) \
+	{ \
+	_scr_memmovew((d), (s), (count)); \
+	_scr_memmovew(pc9800_attr_offset(d), pc9800_attr_offset(s), (count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#593: FILE: include/asm-i386/gdc.h:169:
+#define scr_memmovew(d, s, count) \
+	{ \
+	_scr_memmovew((d), (s), (count)); \
+	_scr_memmovew(pc9800_attr_offset(d), pc9800_attr_offset(s), (count)); \
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#605: FILE: include/asm-i386/gdc.h:181:
+	/* VRAM is quite slow, so we align source pointer (%esi)
+	   to double-word alignment. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#605: FILE: include/asm-i386/gdc.h:181:
+	   to double-word alignment. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#628: FILE: include/asm-i386/gdc.h:204:
+#define scr_memcpyw_from(d, s, count) \
+	{ \
+	_scr_memcpyw_from((d), (s), (count)); \
+	_scr_memcpyw_from(pc9800_attr_offset(d), pc9800_attr_offset(s), \
+				(count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#628: FILE: include/asm-i386/gdc.h:204:
+#define scr_memcpyw_from(d, s, count) \
+	{ \
+	_scr_memcpyw_from((d), (s), (count)); \
+	_scr_memcpyw_from(pc9800_attr_offset(d), pc9800_attr_offset(s), \
+				(count)); \
+	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'count' - possible side-effects?
#628: FILE: include/asm-i386/gdc.h:204:
+#define scr_memcpyw_from(d, s, count) \
+	{ \
+	_scr_memcpyw_from((d), (s), (count)); \
+	_scr_memcpyw_from(pc9800_attr_offset(d), pc9800_attr_offset(s), \
+				(count)); \
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#646: FILE: include/asm-i386/pc9800_sca.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#698: FILE: include/asm-i386/serial.h:61:
+#define STD_SERIAL_PORT_DEFNS			\
+	/* UART CLK   PORT IRQ     FLAGS        */			\
+	{ 0, BASE_BAUD, 0x30, 4, STD_COM_FLAGS },	/* ttyS0 */	\
+	{ 0, BASE_BAUD, 0x238, 5, STD_COM_FLAGS },	/* ttyS1 */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#713: FILE: include/asm-i386/setup.h:31:
+#define PC9800_MISC_FLAGS (*(unsigned char *)(PARAM+0x1AF))
                                                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#721: FILE: include/asm-i386/upd4990a.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <_ASM_I386_uPD4990A_H>
#733: FILE: include/asm-i386/upd4990a.h:13:
+#ifndef _ASM_I386_uPD4990A_H

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#740: FILE: include/asm-i386/upd4990a.h:20:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'usec' - possible side-effects?
#759: FILE: include/asm-i386/upd4990a.h:39:
+#define UPD4990A_DELAY(usec)						\
+	do {								\
+		if (__builtin_constant_p((usec)) && (usec) < 5)	\
+			__asm__ (".rept %c1\n\toutb %%al,%0\n\t.endr"	\
+				 : : "N" (0x5F),			\
+				     "i" (((usec) * 10 + 5) / 6));	\
+		else {							\
+			int _count = ((usec) * 10 + 5) / 6;		\
+			__asm__ volatile ("1: outb %%al,%1\n\tloop 1b"	\
+					  : "=c" (_count)		\
+					  : "N" (0x5F), "0" (_count));	\
+		}							\
+	} while (0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#783: FILE: include/linux/upd4990a.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <_LINUX_uPD4990A_H>
#795: FILE: include/linux/upd4990a.h:13:
+#ifndef _LINUX_uPD4990A_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#821: FILE: include/linux/upd4990a.h:39:
+/* Parallel commands (3 bits)
+   0-6 are same with serial commands.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#821: FILE: include/linux/upd4990a.h:39:
+   0-6 are same with serial commands.  */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#829: FILE: include/linux/upd4990a.h:47:
+# define UPD4990A_OUTPUT_DATA(bit)			\
+	do {						\
+		UPD4990A_OUTPUT_DATA_CLK((bit), 0);	\
+		UPD4990A_DELAY(1); /* t-DSU */		\
+		UPD4990A_OUTPUT_DATA_CLK((bit), 1);	\
+		UPD4990A_DELAY(1); /* t-DHLD */	\
+	} while (0)

WARNING:INLINE: plain inline is preferred over __inline__
#838: FILE: include/linux/upd4990a.h:56:
+static __inline__ void upd4990a_serial_command(int command)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#849: FILE: include/linux/upd4990a.h:67:
+	/* 19 microseconds extra delay is needed
+	   iff previous mode is TIME READ command  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#849: FILE: include/linux/upd4990a.h:67:
+	   iff previous mode is TIME READ command  */

WARNING:INLINE: plain inline is preferred over __inline__
#869: FILE: include/linux/upd4990a.h:87:
+static __inline__ void upd4990a_get_time(struct upd4990a_raw_data *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: include/linux/upd4990a.h:88:
+static __inline__ void upd4990a_get_time(struct upd4990a_raw_data *buf,
+					  int leave_register_hold)

CHECK:SPACING: No space is necessary after a cast
#889: FILE: include/linux/upd4990a.h:107:
+		((u8 *) buf)[byte] = tmp;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#893: FILE: include/linux/upd4990a.h:111:
+	/* The uPD4990A users' manual says that we should issue `Register
+	   Hold' command after each data retrieval, or next `Time Read'

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#894: FILE: include/linux/upd4990a.h:112:
+	   command may not work correctly.  */

WARNING:INLINE: plain inline is preferred over __inline__
#899: FILE: include/linux/upd4990a.h:117:
+static __inline__ void upd4990a_set_time(const struct upd4990a_raw_data *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: include/linux/upd4990a.h:118:
+static __inline__ void upd4990a_set_time(const struct upd4990a_raw_data *data,
+					  int time_set_only)

CHECK:SPACING: No space is necessary after a cast
#909: FILE: include/linux/upd4990a.h:127:
+		u8 tmp = ((const u8 *) data)[byte];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 41 warnings, 46 checks, 815 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
