WARNING:TYPO_SPELLING: 'forst' may be misspelled - perhaps 'first'?
#23: 
this is the forst patch out of three that adds support for the
            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -urw ./linux/Documentation/Configure.help.orig ./linux/Documentation/Configure.help

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#44: FILE: linux/Documentation/Configure.help:24987:
+  Enable the built-in watchdog timer support on the National $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: linux/drivers/char/scx200_wdt.c:1:
+/* linux/drivers/char/scx200_wdt.c $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: linux/drivers/char/scx200_wdt.c:1:
+/* linux/drivers/char/scx200_wdt.c 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#94: FILE: linux/drivers/char/scx200_wdt.c:1:
+/* linux/drivers/char/scx200_wdt.c 

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#95: FILE: linux/drivers/char/scx200_wdt.c:2:
+/* linux/drivers/char/scx200_wdt.c 
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'Som' may be misspelled - perhaps 'Some'?
#100: FILE: linux/drivers/char/scx200_wdt.c:7:
+   Som code taken from:
    ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#111: FILE: linux/drivers/char/scx200_wdt.c:18:
+   software is provided AS-IS with no warranties. */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#123: FILE: linux/drivers/char/scx200_wdt.c:30:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#124: FILE: linux/drivers/char/scx200_wdt.c:31:
+#include <asm/io.h>

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: linux/drivers/char/scx200_wdt.c:55:
+static unsigned expect_close;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#155: FILE: linux/drivers/char/scx200_wdt.c:62:
+#define W_SCALE (32768/1024)
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CB_BASE>
#159: FILE: linux/drivers/char/scx200_wdt.c:66:
+	outw(wdto_restart, SCx200_CB_BASE + SCx200_WDT_WDTO);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDTO>
#159: FILE: linux/drivers/char/scx200_wdt.c:66:
+	outw(wdto_restart, SCx200_CB_BASE + SCx200_WDT_WDTO);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#164: FILE: linux/drivers/char/scx200_wdt.c:71:
+	printk(KERN_INFO NAME ": timer margin %d seconds\n", margin);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: linux/drivers/char/scx200_wdt.c:77:
+^Iprintk(KERN_DEBUG NAME ": enabling watchdog timer, wdto_restart = %d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#170: FILE: linux/drivers/char/scx200_wdt.c:77:
+	printk(KERN_DEBUG NAME ": enabling watchdog timer, wdto_restart = %d\n", 

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDSTS_WDOVF>
#174: FILE: linux/drivers/char/scx200_wdt.c:81:
+	outb(SCx200_WDT_WDSTS_WDOVF, SCx200_CB_BASE + SCx200_WDT_WDSTS);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDSTS>
#174: FILE: linux/drivers/char/scx200_wdt.c:81:
+	outb(SCx200_WDT_WDSTS_WDOVF, SCx200_CB_BASE + SCx200_WDT_WDSTS);

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_WDCNFG>
#175: FILE: linux/drivers/char/scx200_wdt.c:82:
+	outw(W_ENABLE, SCx200_CB_BASE + SCx200_WDT_WDCNFG);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#182: FILE: linux/drivers/char/scx200_wdt.c:89:
+	printk(KERN_DEBUG NAME ": disabling watchdog timer\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: linux/drivers/char/scx200_wdt.c:90:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: linux/drivers/char/scx200_wdt.c:98:
+        /* only allow one at a time */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: linux/drivers/char/scx200_wdt.c:99:
+        if (down_trylock(&open_semaphore))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: linux/drivers/char/scx200_wdt.c:99:
+        if (down_trylock(&open_semaphore))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: linux/drivers/char/scx200_wdt.c:100:
+                return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: linux/drivers/char/scx200_wdt.c:100:
+                return -EBUSY;$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#202: FILE: linux/drivers/char/scx200_wdt.c:109:
+	if (!expect_close) {
[...]
+	} else if (!nowayout) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#203: FILE: linux/drivers/char/scx200_wdt.c:110:
+		printk(KERN_WARNING NAME ": watchdog device closed unexpectedly, will not disable the watchdog timer\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: linux/drivers/char/scx200_wdt.c:114:
+        up(&open_semaphore);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: linux/drivers/char/scx200_wdt.c:114:
+        up(&open_semaphore);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: linux/drivers/char/scx200_wdt.c:119:
+static int scx200_wdt_notify_sys(struct notifier_block *this, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: linux/drivers/char/scx200_wdt.c:120:
+static int scx200_wdt_notify_sys(struct notifier_block *this, 
+				      unsigned long code, void *unused)

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: linux/drivers/char/scx200_wdt.c:122:
+        if (code == SYS_HALT || code == SYS_POWER_OFF)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: linux/drivers/char/scx200_wdt.c:122:
+        if (code == SYS_HALT || code == SYS_POWER_OFF)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: linux/drivers/char/scx200_wdt.c:126:
+        return NOTIFY_DONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: linux/drivers/char/scx200_wdt.c:126:
+        return NOTIFY_DONE;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#223: FILE: linux/drivers/char/scx200_wdt.c:130:
+static struct notifier_block scx200_wdt_notifier =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: linux/drivers/char/scx200_wdt.c:131:
+        notifier_call: scx200_wdt_notify_sys$

WARNING:INDENTED_LABEL: labels should not be indented
#224: FILE: linux/drivers/char/scx200_wdt.c:131:
+        notifier_call: scx200_wdt_notify_sys

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: linux/drivers/char/scx200_wdt.c:134:
+static ssize_t scx200_wdt_write(struct file *file, const char *data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: linux/drivers/char/scx200_wdt.c:135:
+static ssize_t scx200_wdt_write(struct file *file, const char *data, 
+				     size_t len, loff_t *ppos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: linux/drivers/char/scx200_wdt.c:141:
+^Iif (len) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#234: FILE: linux/drivers/char/scx200_wdt.c:141:
+	if (len) 
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: linux/drivers/char/scx200_wdt.c:150:
+			char c;
+			if (get_user(c, data+i))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: linux/drivers/char/scx200_wdt.c:150:
+			if (get_user(c, data+i))
 			                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: linux/drivers/char/scx200_wdt.c:163:
+static int scx200_wdt_ioctl(struct inode *inode, struct file *file,
+	unsigned int cmd, unsigned long arg)

WARNING:INDENTED_LABEL: labels should not be indented
#259: FILE: linux/drivers/char/scx200_wdt.c:166:
+		identity: "NatSemi SCx200 Watchdog",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: linux/drivers/char/scx200_wdt.c:167:
+^I^Ifirmware_version: 1, $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#261: FILE: linux/drivers/char/scx200_wdt.c:168:
+		options: (

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#261: FILE: linux/drivers/char/scx200_wdt.c:168:
+		options: (
 		       ^

WARNING:INDENTED_LABEL: labels should not be indented
#261: FILE: linux/drivers/char/scx200_wdt.c:168:
+		options: (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: linux/drivers/char/scx200_wdt.c:170:
+^I^I^IWDIOF_SETTIMEOUT | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: linux/drivers/char/scx200_wdt.c:175:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: linux/drivers/char/scx200_wdt.c:180:
+^I^Iif(copy_to_user((struct watchdog_info *)arg, &ident, $

ERROR:SPACING: space required before the open parenthesis '('
#273: FILE: linux/drivers/char/scx200_wdt.c:180:
+		if(copy_to_user((struct watchdog_info *)arg, &ident, 

WARNING:CONST_STRUCT: struct file_operations should normally be const
#298: FILE: linux/drivers/char/scx200_wdt.c:205:
+static struct file_operations scx200_wdt_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#299: FILE: linux/drivers/char/scx200_wdt.c:206:
+	owner: THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#300: FILE: linux/drivers/char/scx200_wdt.c:207:
+	write: scx200_wdt_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#300: FILE: linux/drivers/char/scx200_wdt.c:207:
+	write: scx200_wdt_write,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#301: FILE: linux/drivers/char/scx200_wdt.c:208:
+	ioctl: scx200_wdt_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#301: FILE: linux/drivers/char/scx200_wdt.c:208:
+	ioctl: scx200_wdt_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#302: FILE: linux/drivers/char/scx200_wdt.c:209:
+	open: scx200_wdt_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#302: FILE: linux/drivers/char/scx200_wdt.c:209:
+	open: scx200_wdt_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#303: FILE: linux/drivers/char/scx200_wdt.c:210:
+	release: scx200_wdt_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#303: FILE: linux/drivers/char/scx200_wdt.c:210:
+	release: scx200_wdt_release,

WARNING:INDENTED_LABEL: labels should not be indented
#307: FILE: linux/drivers/char/scx200_wdt.c:214:
+	minor: WATCHDOG_MINOR,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#308: FILE: linux/drivers/char/scx200_wdt.c:215:
+	name: NAME,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#308: FILE: linux/drivers/char/scx200_wdt.c:215:
+	name: NAME,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#309: FILE: linux/drivers/char/scx200_wdt.c:216:
+	fops: &scx200_wdt_fops,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#309: FILE: linux/drivers/char/scx200_wdt.c:216:
+	fops: &scx200_wdt_fops,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#316: FILE: linux/drivers/char/scx200_wdt.c:223:
+	printk(KERN_DEBUG NAME ": NatSemi SCx200 Watchdog Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: linux/drivers/char/scx200_wdt.c:226:
+^Iif ((pci_find_device(PCI_VENDOR_ID_NS, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#326: FILE: linux/drivers/char/scx200_wdt.c:233:
+		printk(KERN_WARNING NAME ": no configuration block found\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: linux/drivers/char/scx200_wdt.c:237:
+^Iif (!request_region(SCx200_CB_BASE + SCx200_WDT_OFFSET, $

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_OFFSET>
#330: FILE: linux/drivers/char/scx200_wdt.c:237:
+	if (!request_region(SCx200_CB_BASE + SCx200_WDT_OFFSET, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: linux/drivers/char/scx200_wdt.c:238:
+^I^I^I    SCx200_WDT_SIZE, $

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_WDT_SIZE>
#331: FILE: linux/drivers/char/scx200_wdt.c:238:
+			    SCx200_WDT_SIZE, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#333: FILE: linux/drivers/char/scx200_wdt.c:240:
+		printk(KERN_WARNING NAME ": watchdog I/O region busy\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: linux/drivers/char/scx200_wdt.c:254:
+        if (r) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: linux/drivers/char/scx200_wdt.c:254:
+        if (r) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: linux/drivers/char/scx200_wdt.c:255:
+                printk(KERN_ERR NAME ": unable to register reboot notifier");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: linux/drivers/char/scx200_wdt.c:255:
+                printk(KERN_ERR NAME ": unable to register reboot notifier");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#348: FILE: linux/drivers/char/scx200_wdt.c:255:
+                printk(KERN_ERR NAME ": unable to register reboot notifier");

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: linux/drivers/char/scx200_wdt.c:257:
+                return r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: linux/drivers/char/scx200_wdt.c:257:
+                return r;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: linux/drivers/char/scx200_wdt.c:258:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: linux/drivers/char/scx200_wdt.c:258:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: linux/drivers/char/scx200_wdt.c:265:
+        unregister_reboot_notifier(&scx200_wdt_notifier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: linux/drivers/char/scx200_wdt.c:265:
+        unregister_reboot_notifier(&scx200_wdt_notifier);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#368: FILE: linux/drivers/char/scx200_wdt.c:275:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: linux/drivers/char/scx200_wdt.c:276:
+        compile-command: "make -k -C ../.. SUBDIRS=drivers/char modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: linux/drivers/char/scx200_wdt.c:277:
+        c-basic-offset: 8$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#393: FILE: linux/include/linux/scx200.h:1:
+/* linux/include/linux/scx200.h

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#393: FILE: linux/include/linux/scx200.h:1:
+/* linux/include/linux/scx200.h

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#394: FILE: linux/include/linux/scx200.h:2:
+/* linux/include/linux/scx200.h
+

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_DOCCS_BASE>
#403: FILE: linux/include/linux/scx200.h:11:
+#define SCx200_DOCCS_BASE 0x78	/* DOCCS Base Address Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_DOCCS_CTRL>
#404: FILE: linux/include/linux/scx200.h:12:
+#define SCx200_DOCCS_CTRL 0x7c	/* DOCCS Control Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_GPIO_SIZE>
#407: FILE: linux/include/linux/scx200.h:15:
+#define SCx200_GPIO_SIZE 0x2c	/* Size of GPIO register block */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#419: FILE: linux/include/linux/scx200.h:27:
+#define SCx200_WDT_WDSTS_WDOVF (1<<0) /* Overflow bit */
                                  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#419: FILE: linux/include/linux/scx200.h:27:
+#define SCx200_WDT_WDSTS_WDOVF (1<<0) /* Overflow bit */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_TIMER_OFFSET>
#422: FILE: linux/include/linux/scx200.h:30:
+#define SCx200_TIMER_OFFSET 0x08

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_TIMER_SIZE>
#423: FILE: linux/include/linux/scx200.h:31:
+#define SCx200_TIMER_SIZE 0x05

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CLOCKGEN_OFFSET>
#426: FILE: linux/include/linux/scx200.h:34:
+#define SCx200_CLOCKGEN_OFFSET 0x10

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CLOCKGEN_SIZE>
#427: FILE: linux/include/linux/scx200.h:35:
+#define SCx200_CLOCKGEN_SIZE 0x10

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MISC_OFFSET>
#430: FILE: linux/include/linux/scx200.h:38:
+#define SCx200_MISC_OFFSET 0x30

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MISC_SIZE>
#431: FILE: linux/include/linux/scx200.h:39:
+#define SCx200_MISC_SIZE 0x10

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_PMR>
#433: FILE: linux/include/linux/scx200.h:41:
+#define SCx200_PMR 0x30		/* Pin Multiplexing Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_MCR>
#434: FILE: linux/include/linux/scx200.h:42:
+#define SCx200_MCR 0x34		/* Miscellaneous Configuration Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_INTSEL>
#435: FILE: linux/include/linux/scx200.h:43:
+#define SCx200_INTSEL 0x38	/* Interrupt Selection Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_IID>
#436: FILE: linux/include/linux/scx200.h:44:
+#define SCx200_IID 0x3c		/* IA On a Chip Identification Number Reg */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_REV>
#437: FILE: linux/include/linux/scx200.h:45:
+#define SCx200_REV 0x3d		/* Revision Register */

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CBA>
#438: FILE: linux/include/linux/scx200.h:46:
+#define SCx200_CBA 0x3e		/* Configuration Base Address Register */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'base' - possible side-effects?
#441: FILE: linux/include/linux/scx200.h:49:
+#define scx200_cb_probe(base) (inw((base) + SCx200_CBA) == (base))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#444: FILE: linux/include/linux/scx200.h:52:
+/*
+    Local variables:

ERROR:CODE_INDENT: code indent should use tabs where possible
#445: FILE: linux/include/linux/scx200.h:53:
+        compile-command: "make -C ../.. modules"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: linux/include/linux/scx200.h:54:
+        c-basic-offset: 8$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 40 errors, 54 warnings, 31 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
