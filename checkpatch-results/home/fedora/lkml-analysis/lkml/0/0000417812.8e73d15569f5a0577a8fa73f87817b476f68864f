WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#67: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#81: FILE: include/linux/slab.h:67:
+};
+extern struct cache_sizes malloc_sizes[];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: include/linux/slab.h:68:
+extern void __you_cannot_kmalloc_more_than_128_kilo_bytes(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#85: FILE: include/linux/slab.h:71:
+enum malloc_numbers
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: include/linux/slab.h:95:
+static inline void* __constant_kmalloc(size_t size, int flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#111: FILE: include/linux/slab.h:97:
+#define FIXED_ALLOC(len) \
+	if(size <= len) \
+		return kmem_cache_alloc( (flags & GFP_DMA)? \
+				malloc_sizes[kmalloc_size_##len].cs_dmacachep \
+				: malloc_sizes[kmalloc_size_##len].cs_cachep, \
+				flags)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'len' may be better as '(len)' to avoid precedence issues
#111: FILE: include/linux/slab.h:97:
+#define FIXED_ALLOC(len) \
+	if(size <= len) \
+		return kmem_cache_alloc( (flags & GFP_DMA)? \
+				malloc_sizes[kmalloc_size_##len].cs_dmacachep \
+				: malloc_sizes[kmalloc_size_##len].cs_cachep, \
+				flags)

ERROR:SPACING: space required before the open parenthesis '('
#112: FILE: include/linux/slab.h:98:
+	if(size <= len) \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#113: FILE: include/linux/slab.h:99:
+		return kmem_cache_alloc( (flags & GFP_DMA)? \
 		                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#113: FILE: include/linux/slab.h:99:
+		return kmem_cache_alloc( (flags & GFP_DMA)? \

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: include/linux/slab.h:128:
+}
+extern void *__kmalloc(size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/linux/slab.h:128:
+extern void *__kmalloc(size_t, int);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#144: FILE: include/linux/slab.h:130:
+#define kmalloc(size, flags)				\
+	(__builtin_constant_p(size) ?			\
+	 __constant_kmalloc((size),(flags)) :		\
+	 __kmalloc(size,flags))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'flags' - possible side-effects?
#144: FILE: include/linux/slab.h:130:
+#define kmalloc(size, flags)				\
+	(__builtin_constant_p(size) ?			\
+	 __constant_kmalloc((size),(flags)) :		\
+	 __kmalloc(size,flags))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: include/linux/slab.h:132:
+	 __constant_kmalloc((size),(flags)) :		\
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#147: FILE: include/linux/slab.h:133:
+	 __kmalloc(size,flags))
 	               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: mm/slab.c:1800:
+void * __kmalloc (size_t size, int flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: mm/slab.c:1800:
+void * __kmalloc (size_t size, int flags)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#188: FILE: kernel/ksyms.c:106:
+EXPORT_SYMBOL(__kmalloc);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417812.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 7 checks, 114 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417812.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
