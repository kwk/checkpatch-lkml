WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> > diff -Nru linux-2.6.11-rc2-orig/include/linux/suspend.h linux-2.6.11-rc2/include/linux/suspend.h

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pbe' - possible side-effects?
#110: FILE: include/linux/suspend.h:25:
+#define for_each_pbe(pbe, pblist) \
+	for (pbe = pblist ; pbe ; pbe = pbe->next)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#113: FILE: include/linux/suspend.h:28:
+#define PBES_PER_PAGE      (PAGE_SIZE/sizeof(struct pbe))
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#114: FILE: include/linux/suspend.h:29:
+#define PB_PAGE_SKIP       (PBES_PER_PAGE-1)
                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pbe' - possible side-effects?
#116: FILE: include/linux/suspend.h:31:
+#define for_each_pb_page(pbe, pblist) \
+	for (pbe = pblist ; pbe ; pbe = (pbe+PB_PAGE_SKIP)->next)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#117: FILE: include/linux/suspend.h:32:
+	for (pbe = pblist ; pbe ; pbe = (pbe+PB_PAGE_SKIP)->next)
 	                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: include/linux/suspend.h:34:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->swap_address
#153: FILE: kernel/power/swsusp.c:305:
+		error = write_page(p->address, &(p->swap_address));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: kernel/power/swsusp.c:381:
+	unsigned n = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#189: FILE: kernel/power/swsusp.c:382:
+	struct pbe * pbe;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: kernel/power/swsusp.c:384:
+	printk( "Writing pagedir ...");

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: kernel/power/swsusp.c:384:
+	printk( "Writing pagedir ...");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#204: FILE: kernel/power/swsusp.c:394:
+	printk("\b\b\bdone (%u pages)\n", n);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: kernel/power/swsusp.c:591:
+				BUG_ON(!pbe);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: kernel/power/swsusp.c:599:
+	BUG_ON(pbe);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: kernel/power/swsusp.c:638:
+static struct pbe * alloc_pagedir(unsigned nr_pages)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: kernel/power/swsusp.c:638:
+static struct pbe * alloc_pagedir(unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#328: FILE: kernel/power/swsusp.c:640:
+	unsigned num;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#334: FILE: kernel/power/swsusp.c:646:
+	pr_debug("alloc_pagedir(): nr_pages = %d\n", nr_pages);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPACING: space prohibited before semicolon
#336: FILE: kernel/power/swsusp.c:648:
+	for (pbe = pblist, num = PBES_PER_PAGE ; pbe && num < nr_pages ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: kernel/power/swsusp.c:649:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: kernel/power/swsusp.c:649:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: kernel/power/swsusp.c:649:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#349: FILE: kernel/power/swsusp.c:661:
+	}
+	else { /* get_zeroed_page() failed */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#349: FILE: kernel/power/swsusp.c:661:
+	else { /* get_zeroed_page() failed */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: kernel/power/swsusp.c:664:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: kernel/power/swsusp.c:664:
+        }$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_pagedir', this function's name, in a string
#353: FILE: kernel/power/swsusp.c:665:
+	pr_debug("alloc_pagedir(): allocated %d PBEs\n", num);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_pagedir', this function's name, in a string
#370: FILE: kernel/power/swsusp.c:682:
+	pr_debug("free_pagedir(): done\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: kernel/power/swsusp.c:786:
+	if (!(pagedir_save = alloc_pagedir(nr_copy_pages))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 15 warnings, 8 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
