WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#61: FILE: fs/9p/v9fs_vfs.h:42:
+extern struct address_space_operations v9fs_addr_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#66: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: fs/9p/vfs_addr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#72: FILE: fs/9p/vfs_addr.c:2:
+ *  linux/fs/9p/vfs_addr.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'contians' may be misspelled - perhaps 'contains'?
#74: FILE: fs/9p/vfs_addr.c:4:
+ * This file contians vfs address (mmap) ops for 9P2000. 
              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: fs/9p/vfs_addr.c:4:
+ * This file contians vfs address (mmap) ops for 9P2000. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: fs/9p/vfs_addr.c:22:
+ *  51 Franklin Street, Fifth Floor$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: fs/9p/vfs_addr.c:48:
+ * @file: file being read $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#123: FILE: fs/9p/vfs_addr.c:53:
+static int v9fs_vfs_readpage(struct file *filp, struct page *page)
                                           ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: fs/9p/vfs_addr.c:54:
+{  $

CHECK:BRACES: braces {} should be used on all arms of this statement
#145: FILE: fs/9p/vfs_addr.c:75:
+		if (result < 0) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#146: FILE: fs/9p/vfs_addr.c:76:
+			printk(KERN_ERR "v9fs_t_read returned %d\n",

CHECK:CAMELCASE: Avoid CamelCase: <UnmapAndUnlock>
#150: FILE: fs/9p/vfs_addr.c:80:
+			goto UnmapAndUnlock;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Unbalanced braces around else statement
#151: FILE: fs/9p/vfs_addr.c:81:
+		} else

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#177: FILE: fs/9p/vfs_addr.c:107:
+struct address_space_operations v9fs_addr_operations = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: fs/9p/vfs_addr.c:108:
+      .readpage = v9fs_vfs_readpage,$

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: fs/9p/vfs_file.c:292:
+	if(inode->i_mapping->nrpages)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114831.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 3 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000114831.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
