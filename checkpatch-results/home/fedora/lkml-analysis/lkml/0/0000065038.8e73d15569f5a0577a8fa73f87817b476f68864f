WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#80: FILE: drivers/net/loopback.c:205:
+	if (dev->priv) {
+		kfree(dev->priv);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: drivers/net/loopback.c:228:
+^Idev->features ^I^I= NETIF_F_SG | NETIF_F_FRAGLIST$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: include/linux/net_ns.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#177: FILE: include/linux/net_ns.h:9:
+#include <asm/atomic.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/net_ns.h:27:
+extern void net_ns_stop(struct net_namespace *ns);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: include/linux/net_ns.h:40:
+extern void net_ns_free(struct net_namespace *ns);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#352: FILE: kernel/nsproxy.c:88:
+	(void) get_net_ns(tsk->net_context); /* for pointer copied by memcpy */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#378: FILE: net/Kconfig:69:
+config NET_NS
+	bool "Network Namespaces"
+	help
+	  This option enables multiple independent network namespaces,
+	  each having own network devices, IP addresses, routes, and so on.
+	  If unsure, answer N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#423: FILE: net/core/dev.c:220:
+extern int netdev_rename_sysfs(struct net_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#423: FILE: net/core/dev.c:220:
+extern int netdev_rename_sysfs(struct net_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LINE_SPACING: Missing a blank line after declarations
#461: FILE: net/core/dev.c:1547:
+				struct net_namespace *orig_net_ns;
+				push_net_ns(dev->net_ns, orig_net_ns);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#514: FILE: net/core/dev.c:2782:
+	/*
+	 * loopback device doesn't hold active reference: it doesn't prevent

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ns"
#593: FILE: net/core/dev.c:3140:
+	if (ns != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ns"
#608: FILE: net/core/dev.c:3158:
+	if (ns != NULL && ns != &init_net_ns) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#625: FILE: net/core/dev.c:3404:
+			  /* one for init_task->net_context,
+			     one not to let init_net_ns go away */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#625: FILE: net/core/dev.c:3404:
+			     one not to let init_net_ns go away */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#631: FILE: net/core/dev.c:3410:
+extern void loopback_dev_ctor(struct net_device *dev);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#632: FILE: net/core/dev.c:3411:
+extern void loopback_dev_dtor(struct net_device *dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ns"
#642: FILE: net/core/dev.c:3421:
+	if (ns == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#645: FILE: net/core/dev.c:3424:
+	if (dev == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#669: FILE: net/core/dev.c:3448:
+	BUG_ON(atomic_read(&ns->active_ref) != 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#691: FILE: net/core/dev.c:3470:
+	BUG_ON(!list_empty(&ns->dev_base));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065038.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 28 warnings, 7 checks, 681 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065038.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
