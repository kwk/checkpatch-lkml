WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
A few weeks ago Christoph suggested that the /proc/devices file be converted to

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: drivers/block/genhd.c:42:
+        int index;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: drivers/block/genhd.c:42:
+        int index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: drivers/block/genhd.c:43:
+        struct blk_major_name *bd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: drivers/block/genhd.c:43:
+        struct blk_major_name *bd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/block/genhd.c:53:
+        struct blkdev_info *info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/block/genhd.c:53:
+        struct blkdev_info *info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: drivers/block/genhd.c:55:
+        if (dev == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/block/genhd.c:55:
+        if (dev == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#63: FILE: drivers/block/genhd.c:55:
+        if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: drivers/block/genhd.c:56:
+                info = kmalloc(sizeof(struct blkdev_info),GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: drivers/block/genhd.c:56:
+                info = kmalloc(sizeof(struct blkdev_info),GFP_KERNEL);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#64: FILE: drivers/block/genhd.c:56:
+                info = kmalloc(sizeof(struct blkdev_info),GFP_KERNEL);
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct blkdev_info)...)
#64: FILE: drivers/block/genhd.c:56:
+                info = kmalloc(sizeof(struct blkdev_info),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: drivers/block/genhd.c:57:
+                if (!info)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/block/genhd.c:57:
+                if (!info)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: drivers/block/genhd.c:58:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/block/genhd.c:58:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/block/genhd.c:59:
+                info->index=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/block/genhd.c:59:
+                info->index=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#67: FILE: drivers/block/genhd.c:59:
+                info->index=0;
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: drivers/block/genhd.c:60:
+                info->bd = major_names[info->index];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/block/genhd.c:60:
+                info->bd = major_names[info->index];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/block/genhd.c:61:
+                if(info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/block/genhd.c:61:
+                if(info->bd)$

ERROR:SPACING: space required before the open parenthesis '('
#69: FILE: drivers/block/genhd.c:61:
+                if(info->bd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/block/genhd.c:62:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/block/genhd.c:62:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: drivers/block/genhd.c:63:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/block/genhd.c:63:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/block/genhd.c:64:
+                info = (struct blkdev_info *)dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/block/genhd.c:64:
+                info = (struct blkdev_info *)dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/block/genhd.c:65:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/block/genhd.c:65:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/block/genhd.c:67:
+        while (info->index < ARRAY_SIZE(major_names)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/block/genhd.c:67:
+        while (info->index < ARRAY_SIZE(major_names)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/block/genhd.c:68:
+                if (info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/block/genhd.c:68:
+                if (info->bd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/block/genhd.c:69:
+                        info->bd = info->bd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/block/genhd.c:69:
+                        info->bd = info->bd->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/block/genhd.c:70:
+                if (info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/block/genhd.c:70:
+                if (info->bd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/block/genhd.c:71:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/block/genhd.c:71:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/block/genhd.c:72:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/block/genhd.c:73:
+                 *no devices on this chain, move to the next$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/block/genhd.c:74:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: drivers/block/genhd.c:75:
+                info->index++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/block/genhd.c:75:
+                info->index++;$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#84: FILE: drivers/block/genhd.c:76:
+                info->bd = (info->index < ARRAY_SIZE(major_names)) ? major_names[info->index] : NULL;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/block/genhd.c:76:
+                info->bd = (info->index < ARRAY_SIZE(major_names)) ? major_names[info->index] : NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/block/genhd.c:76:
+                info->bd = (info->index < ARRAY_SIZE(major_names)) ? major_names[info->index] : NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/block/genhd.c:77:
+                if (info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/block/genhd.c:77:
+                if (info->bd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/block/genhd.c:78:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/block/genhd.c:78:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/block/genhd.c:79:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/block/genhd.c:79:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/block/genhd.c:82:
+        return info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/block/genhd.c:82:
+        return info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/block/genhd.c:87:
+        struct chrdev_info *info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/block/genhd.c:87:
+        struct chrdev_info *info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/block/genhd.c:89:
+        down(&block_subsys_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/block/genhd.c:89:
+        down(&block_subsys_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/block/genhd.c:91:
+        info = get_next_blkdev(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/block/genhd.c:91:
+        info = get_next_blkdev(NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/block/genhd.c:93:
+        return info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/block/genhd.c:93:
+        return info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: drivers/block/genhd.c:98:
+        up(&block_subsys_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/block/genhd.c:98:
+        up(&block_subsys_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: drivers/block/genhd.c:99:
+        kfree(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/block/genhd.c:99:
+        kfree(dev);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: drivers/block/genhd.c:102:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int count_blkdev_list() should probably be int count_blkdev_list(void)
#115: FILE: drivers/block/genhd.c:107:
+int count_blkdev_list()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#126: FILE: drivers/block/genhd.c:115:
 		for (n = major_names[i]; n; n = n->next) {
+				count++;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/block/genhd.c:119:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/block/genhd.c:125:
+ * passed in as a void to *dev.  Must be called with $

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/block/genhd.c:130:
+        struct blkdev_info *info = (struct blkdev_info *)dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/block/genhd.c:130:
+        struct blkdev_info *info = (struct blkdev_info *)dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/block/genhd.c:132:
+        if (info->bd == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/block/genhd.c:132:
+        if (info->bd == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->bd"
#153: FILE: drivers/block/genhd.c:132:
+        if (info->bd == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/block/genhd.c:133:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/block/genhd.c:133:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/block/genhd.c:135:
+        *major = info->bd->major;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/block/genhd.c:135:
+        *major = info->bd->major;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/block/genhd.c:136:
+        *name = info->bd->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/block/genhd.c:136:
+        *name = info->bd->name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/block/genhd.c:137:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/block/genhd.c:137:
+        return 0;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#172: FILE: fs/proc/proc_misc.c:66:
+extern void *acquire_chrdev_list(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#173: FILE: fs/proc/proc_misc.c:67:
+extern int count_chrdev_list(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#174: FILE: fs/proc/proc_misc.c:68:
+extern void *get_next_chrdev(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#174: FILE: fs/proc/proc_misc.c:68:
+extern void *get_next_chrdev(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#175: FILE: fs/proc/proc_misc.c:69:
+extern void *acquire_blkdev_list(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#176: FILE: fs/proc/proc_misc.c:70:
+extern int count_blkdev_list(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#177: FILE: fs/proc/proc_misc.c:71:
+extern void *get_next_blkdev(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#177: FILE: fs/proc/proc_misc.c:71:
+extern void *get_next_blkdev(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#178: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#178: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#178: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#178: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#179: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#179: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#179: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#179: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#180: FILE: fs/proc/proc_misc.c:74:
+extern void release_chrdev_list(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#180: FILE: fs/proc/proc_misc.c:74:
+extern void release_chrdev_list(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#181: FILE: fs/proc/proc_misc.c:75:
+extern void release_blkdev_list(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#181: FILE: fs/proc/proc_misc.c:75:
+extern void release_blkdev_list(void *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: fs/proc/proc_misc.c:283:
+^I^Iif ((info) && (*pos < info->num_records)) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#215: FILE: fs/proc/proc_misc.c:287:
+	info = kmalloc(sizeof(struct devinfo_state),GFP_KERNEL);
 	                                           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct devinfo_state)...)
#215: FILE: fs/proc/proc_misc.c:287:
+	info = kmalloc(sizeof(struct devinfo_state),GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: fs/proc/proc_misc.c:289:
+^Iinfo->chrdev = acquire_chrdev_list(); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: fs/proc/proc_misc.c:306:
+	struct devinfo_state *info = (struct devinfo_state *)f->private;
+	switch (info->state) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#234: FILE: fs/proc/proc_misc.c:306:
+	switch (info->state) {
+		case CHR_HDR:
[...]
+		case CHR_LIST:
[...]
+		case BLK_HDR:	
[...]
+		case BLK_LIST:
[...]
+		case DEVINFO_DONE:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#238: FILE: fs/proc/proc_misc.c:310:
+			/*fallthrough*/

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#240: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#240: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#240: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#240: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: fs/proc/proc_misc.c:316:
+^I^I^I^Iinfo->state = BLK_HDR;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: fs/proc/proc_misc.c:322:
+^I^Icase BLK_HDR:^I$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#255: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#255: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#255: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#255: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: fs/proc/proc_misc.c:331:
+^I^I^I^Iinfo->state = DEVINFO_DONE;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: fs/proc/proc_misc.c:334:
+^I^I^I}^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: fs/proc/proc_misc.c:353:
+	struct devinfo_state *info = (struct devinfo_state *)f->private;
+	if ((info) && (info->cur_record >= info->num_records)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->cur_record >= info->num_records'
#281: FILE: fs/proc/proc_misc.c:353:
+	if ((info) && (info->cur_record >= info->num_records)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: fs/proc/proc_misc.c:357:
+^I^Ikfree(info);^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: fs/proc/proc_misc.c:367:
+	struct devinfo_state *info = (struct devinfo_state *)f->private;
+	switch(info->state) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#295: FILE: fs/proc/proc_misc.c:367:
+	switch(info->state) {
+		case CHR_HDR:
[...]
+		case CHR_LIST:
[...]
+		case BLK_HDR:
[...]
+		case BLK_LIST:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: fs/proc/proc_misc.c:367:
+	switch(info->state) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: fs/proc/proc_misc.c:369:
+			seq_printf(f,"Character devices:\n");
 			            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#297: FILE: fs/proc/proc_misc.c:369:
+			seq_printf(f,"Character devices:\n");

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#298: FILE: fs/proc/proc_misc.c:370:
+			/*fallthrough*/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#300: FILE: fs/proc/proc_misc.c:372:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#300: FILE: fs/proc/proc_misc.c:372:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#300: FILE: fs/proc/proc_misc.c:372:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#300: FILE: fs/proc/proc_misc.c:372:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: fs/proc/proc_misc.c:373:
+				seq_printf(f,"%3d %s\n",major,name);
 				            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: fs/proc/proc_misc.c:373:
+				seq_printf(f,"%3d %s\n",major,name);
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: fs/proc/proc_misc.c:373:
+				seq_printf(f,"%3d %s\n",major,name);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: fs/proc/proc_misc.c:376:
+			seq_printf(f,"\nBlock devices:\n");
 			            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#304: FILE: fs/proc/proc_misc.c:376:
+			seq_printf(f,"\nBlock devices:\n");

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#305: FILE: fs/proc/proc_misc.c:377:
+			/*fallthrough*/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#307: FILE: fs/proc/proc_misc.c:379:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#307: FILE: fs/proc/proc_misc.c:379:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#307: FILE: fs/proc/proc_misc.c:379:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#307: FILE: fs/proc/proc_misc.c:379:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: fs/proc/proc_misc.c:380:
+				seq_printf(f,"%3d %s\n",major,name);
 				            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: fs/proc/proc_misc.c:380:
+				seq_printf(f,"%3d %s\n",major,name);
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#308: FILE: fs/proc/proc_misc.c:380:
+				seq_printf(f,"%3d %s\n",major,name);
 				                             ^

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#317: FILE: fs/proc/proc_misc.c:389:
+static  struct seq_operations devinfo_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#329: FILE: fs/proc/proc_misc.c:401:
+static struct file_operations proc_devinfo_operations = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: fs/char_dev.c:57:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#399: FILE: fs/char_dev.c:58:
+	if (dev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: fs/char_dev.c:59:
+		info = kmalloc(sizeof(struct chrdev_info),GFP_KERNEL);
 		                                         ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct chrdev_info)...)
#400: FILE: fs/char_dev.c:59:
+		info = kmalloc(sizeof(struct chrdev_info),GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#403: FILE: fs/char_dev.c:62:
+		info->index=0;
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: fs/char_dev.c:64:
+		if(info->cd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: fs/char_dev.c:94:
+^Iinfo = get_next_chrdev(NULL);^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: fs/char_dev.c:105:
+
+

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int count_chrdev_list() should probably be int count_chrdev_list(void)
#456: FILE: fs/char_dev.c:106:
+int count_chrdev_list()

WARNING:BRACES: braces {} are not necessary for single statement blocks
#466: FILE: fs/char_dev.c:114:
+		for (cd = chrdevs[i]; cd; cd = cd->next) {
+			count++;
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: fs/char_dev.c:118:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#480: FILE: fs/char_dev.c:125:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->cd"
#481: FILE: fs/char_dev.c:126:
+	if (info->cd == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: fs/char_dev.c:128:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#495: FILE: fs/char_dev.c:179:
+	strncpy(cd->name,name,64);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#495: FILE: fs/char_dev.c:179:
+	strncpy(cd->name,name,64);
 	                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 92 errors, 71 warnings, 10 checks, 444 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
