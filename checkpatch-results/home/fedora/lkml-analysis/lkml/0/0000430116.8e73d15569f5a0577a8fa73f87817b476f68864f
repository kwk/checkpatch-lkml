WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#22: 
  be neccessary now. ]
     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'implementes' may be misspelled - perhaps 'implements'?
#30: 
D: This implementes CONFIG_MODVERSIONING (similar to the old
        ^^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
D: Also, the offensive export-objs defines in Makefiles are now unneccessary.

WARNING:TYPO_SPELLING: 'unneccessary' may be misspelled - perhaps 'unnecessary'?
#51: 
D: Also, the offensive export-objs defines in Makefiles are now unneccessary.
                                                                ^^^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: include/linux/module.h:56:
+#define NEED_MODVERSION(sym) ^I^I^I^I\$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#173: FILE: include/linux/module.h:56:
+#define NEED_MODVERSION(sym) 				\
+	const char __needver_##sym[256]			\
+	__attribute__((section(".needmodversion")))	\
+	= { __DIRNAME__ "/" __FILE__ };

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".needmodversion") over __attribute__((section(".needmodversion")))
#175: FILE: include/linux/module.h:58:
+	__attribute__((section(".needmodversion")))	\

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#176: FILE: include/linux/module.h:59:
+	__attribute__((section(".needmodversion")))	\
+	= { __DIRNAME__ "/" __FILE__ };

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sym' may be better as '(sym)' to avoid precedence issues
#185: FILE: include/linux/module.h:67:
+#define EXPORT_SYMBOL_NOVERS(sym)			\
 	const struct kernel_symbol __ksymtab_##sym	\
 	__attribute__((section("__ksymtab")))		\
 	= { (unsigned long)&sym, #sym }

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#191: FILE: include/linux/module.h:72:
+#define EXPORT_SYMBOL(sym)				\

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#191: FILE: include/linux/module.h:72:
+#define EXPORT_SYMBOL(sym)				\
+	NEED_MODVERSION(sym)				\
+	EXPORT_SYMBOL_NOVERS(sym)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sym' - possible side-effects?
#191: FILE: include/linux/module.h:72:
+#define EXPORT_SYMBOL(sym)				\
+	NEED_MODVERSION(sym)				\
+	EXPORT_SYMBOL_NOVERS(sym)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: kernel/module.c:480:
+			printk("%s: disagrees about version of symbol %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#257: FILE: kernel/module.c:489:
+	printk("%s: no version for %s found: kernel tainted.\n",

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#280: FILE: kernel/module.c:689:
+static int simplify_symbols(Elf_Shdr *sechdrs,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: kernel/module.c:690:
+static int simplify_symbols(Elf_Shdr *sechdrs,
 			     unsigned int symindex,

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#290: FILE: kernel/module.c:698:
+	Elf_Sym *sym = (void *)sechdrs[symindex].sh_offset;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#333: FILE: kernel/module.c:741:
+		sym[i].st_value
+			= find_symbol_internal(sechdrs,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#352: FILE: kernel/module.c:760:
+		if (streq(strtab+sym[i].st_name, "__this_module"))
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#373: FILE: kernel/module.c:842:
+	exportindex = setupindex = obsparmindex = versindex = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: kernel/module.c:883:
+		} else if (strcmp(secstrings+sechdrs[i].sh_name, ".versions")
 		                            ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#413: FILE: kernel/modversions.c:1:
+/* Made very late: not referred to be normal makefiles.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#414: FILE: kernel/modversions.c:2:
+/* Made very late: not referred to be normal makefiles.
+   (C) Copyright 2002 Rusty Russell, IBM Corporation.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".versions") over __attribute__((section(".versions")))
#417: FILE: kernel/modversions.c:5:
+struct modversion_info modversions[] __attribute__((section(".versions"))) = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#431: FILE: scripts/add_versions:2:
+# For a given list of modules, add a .versions section containing the

WARNING:TYPO_SPELLING: 'extraversion' may be misspelled - perhaps 'extroversion'?
#437: FILE: scripts/add_versions:8:
+    echo Usage: add_versions extraversion objfiles... >&2
                              ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#441: FILE: scripts/add_versions:12:
+EXTRAVERSION=$1
 ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#452: FILE: scripts/add_versions:23:
+	echo "$EXTRAVERSION" >> .$file.versions.c
 	       ^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#467: FILE: scripts/extract_versions:2:
+# Given a list of object files, output the C structure for the version table.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: scripts/extract_versions:18:
+# $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 18 warnings, 10 checks, 391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000430116.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
