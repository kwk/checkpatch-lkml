WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
provides a standard API to request programmable clock events from.  The core

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#36: 
Once the preliminaries for high resolution mode (a continous time source for
                                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/hrtimer.h:197:
+extern void hrtimer_clock_notify(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/hrtimer.h:198:
+extern void clock_was_set(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/hrtimer.h:199:
+extern void hrtimer_interrupt(struct pt_regs *regs);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#214: FILE: include/linux/hrtimer.h:215:
+# define KTIME_HIGH_RES		(ktime_t) { .tv64 = 1 }

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#271: FILE: include/linux/ktime.h:264:
+#define KTIME_LOW_RES		(ktime_t){ .tv64 = TICK_NSEC }

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#361: FILE: kernel/hrtimer.c:322:
+__setup("highres=", setup_hrtimer_hres);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: kernel/hrtimer.c:403:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Reevalute' may be misspelled - perhaps 'Reevaluate'?
#534: FILE: kernel/hrtimer.c:495:
+	/* Reevalute with xtime_lock held */
 	   ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: kernel/hrtimer.c:529:
+ ^Istruct pt_regs *regs = get_irq_regs();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#568: FILE: kernel/hrtimer.c:529:
+ ^Istruct pt_regs *regs = get_irq_regs();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: kernel/hrtimer.c:529:
+ ^Istruct pt_regs *regs = get_irq_regs();$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#647: FILE: kernel/hrtimer.c:608:
+	printk(KERN_INFO "Switched to high resolution mode on CPU %d\n",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#696: FILE: kernel/hrtimer.c:657:
+	if (base->cpu_base->hres_active && hrtimer_reprogram(timer, base)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#698: FILE: kernel/hrtimer.c:659:
+		switch(timer->cb_mode) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#704: FILE: kernel/hrtimer.c:665:
+			BUG_ON(timer->function(timer) != HRTIMER_NORESTART);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#726: FILE: kernel/hrtimer.c:687:
+			BUG();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#756: FILE: kernel/hrtimer.c:717:
+}
+static inline int hrtimer_cb_pending(struct hrtimer *timer) { return 0; }

CHECK:BRACES: braces {} should be used on all arms of this statement
#838: FILE: kernel/hrtimer.c:858:
+	if (hrtimer_cb_pending(timer))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#840: FILE: kernel/hrtimer.c:860:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#911: FILE: kernel/hrtimer.c:1108:
+	BUG_ON(!cpu_base->hres_active);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#960: FILE: kernel/hrtimer.c:1157:
+				BUG_ON(timer->state != HRTIMER_STATE_CALLBACK);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hrtimer *' should also have an identifier name
#993: FILE: kernel/hrtimer.c:1190:
+		enum hrtimer_restart (*fn)(struct hrtimer *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1010: FILE: kernel/hrtimer.c:1207:
+			BUG_ON(hrtimer_active(timer));

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1159: FILE: kernel/time/Kconfig:4:
+config HIGH_RES_TIMERS
+	bool "High Resolution Timer Support"
+	depends on GENERIC_TIME && GENERIC_CLOCKEVENTS
+	help
+	  This option enables high resolution timer support. If your
+	  hardware is not capable then this option only increases
+	  the size of the kernel image.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000019747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 13 warnings, 9 checks, 1052 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000019747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
