ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#128: FILE: include/linux/time.h:105:
itimerval *ovalue);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/linux/time.h:108:
+extern long clock_gettime(int which, struct timespec *tp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: include/linux/time.h:110:
+extern int FASTCALL(abs_timespec_to_abs_jiffies (clockid_t clock, const

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#133: FILE: include/linux/time.h:110:
+extern int FASTCALL(abs_timespec_to_abs_jiffies (clockid_t clock, const

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/linux/time.h:111:
+extern int FASTCALL(rel_to_abs_timespec(clockid_t clock, const struct

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#146: FILE: include/linux/timeout.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#170: FILE: include/linux/timeout.h:24:
+	TIMEOUT_FLAGS_MASK = 0xf0000000,	/* flags mask for
+	TIMEOUT_CLOCK_MASK = 0x0fffffff,	/* clock mask for

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#172: FILE: include/linux/timeout.h:25:
+	TIMEOUT_CLOCK_MASK = 0x0fffffff,	/* clock mask for
+};

CHECK:SPACING: No space is necessary after a cast
#176: FILE: include/linux/timeout.h:29:
+#define TIMEOUT_MAX	((struct timeout *) ~0UL) /* never time out */

CHECK:SPACING: No space is necessary after a cast
#177: FILE: include/linux/timeout.h:30:
+#define TIMEOUT_NONE	((struct timeout *) 0UL)  /* time out

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#179: FILE: include/linux/timeout.h:31:
+#define TIMEOUT_NONE	((struct timeout *) 0UL)  /* time out
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: include/linux/timeout.h:44:
+extern int FASTCALL(timeout_validate (const struct timeout *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/linux/timeout.h:44:
+extern int FASTCALL(timeout_validate (const struct timeout *));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: include/linux/timeout.h:45:
+extern int FASTCALL(timeout_sleep (const struct timeout *, struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/timeout.h:45:
+extern int FASTCALL(timeout_sleep (const struct timeout *, struct

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct timeout *' should also have an identifier name
#193: FILE: include/linux/timeout.h:45:
+extern int FASTCALL(timeout_sleep (const struct timeout *, struct

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct
 imeout *' should also have an identifier name
#193: FILE: include/linux/timeout.h:45:
+extern int FASTCALL(timeout_sleep (const struct timeout *, struct

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#239: FILE: kernel/timer.c:1140:
+	unsigned flags, clock_id;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#249: FILE: kernel/timer.c:1150:
+	if (flags & ~TIMEOUT_RELATIVE)
+	    goto out;

WARNING:TABSTOP: Statements should start on a tabstop
#250: FILE: kernel/timer.c:1151:
+	    goto out;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#298: FILE: kernel/timer.c:1195:
+fastcall int abs_timespec_to_abs_jiffies (clockid_t clock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: kernel/timer.c:1196:
+fastcall int abs_timespec_to_abs_jiffies (clockid_t clock,
+			const struct timespec *tp, unsigned long *jp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: kernel/timer.c:1227:
+unsigned long __timeout_sleep_timespec (const struct timeout *timeout,
+				struct timeout *endtime)

CHECK:BRACES: braces {} should be used on all arms of this statement
#336: FILE: kernel/timer.c:1233:
+	if (timeout->clock_id & TIMEOUT_RELATIVE) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#343: FILE: kernel/timer.c:1240:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: kernel/timer.c:1266:
+fastcall int timeout_sleep (const struct timeout *timeout, struct

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#397: FILE: kernel/timer.c:1293:
+	if (del_singleshot_timer_sync (&timer))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&timer'
#397: FILE: kernel/timer.c:1293:
+	if (del_singleshot_timer_sync (&timer))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#418: FILE: kernel/timer.c:1314:
+EXPORT_SYMBOL_GPL (timeout_sleep);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155700.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 16 warnings, 11 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155700.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
