WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#87: FILE: arch/m32r/Kconfig:81:
+config PLAT_MAPPI3
+       bool "Mappi-III(M3A-2170)"
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#180: FILE: arch/m32r/kernel/io_mappi3.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#181: FILE: arch/m32r/kernel/io_mappi3.c:2:
+ *  linux/arch/m32r/kernel/io_mappi3.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#192: FILE: arch/m32r/kernel/io_mappi3.c:13:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#203: FILE: arch/m32r/kernel/io_mappi3.c:24:
+extern void pcc_ioread_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#204: FILE: arch/m32r/kernel/io_mappi3.c:25:
+extern void pcc_ioread_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#205: FILE: arch/m32r/kernel/io_mappi3.c:26:
+extern void pcc_iowrite_byte(int, unsigned long, void *, size_t, size_t, int);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#206: FILE: arch/m32r/kernel/io_mappi3.c:27:
+extern void pcc_iowrite_word(int, unsigned long, void *, size_t, size_t, int);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: arch/m32r/kernel/io_mappi3.c:57:
+^Idefault: ^Ireturn (void *)&dummy_reg;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#250: FILE: arch/m32r/kernel/io_mappi3.c:71:
+}
+static inline void delay(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#252: FILE: arch/m32r/kernel/io_mappi3.c:73:
+	__asm__ __volatile__ ("push r0; \n\t pop r0;" : : :"memory");
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#252: FILE: arch/m32r/kernel/io_mappi3.c:73:
+	__asm__ __volatile__ ("push r0; \n\t pop r0;" : : :"memory");

CHECK:SPACING: No space is necessary after a cast
#261: FILE: arch/m32r/kernel/io_mappi3.c:82:
+	return (unsigned char) *(volatile unsigned char *)portp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#261: FILE: arch/m32r/kernel/io_mappi3.c:82:
+	return (unsigned char) *(volatile unsigned char *)portp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#266: FILE: arch/m32r/kernel/io_mappi3.c:87:
+	return (unsigned short)le16_to_cpu(*(volatile unsigned short *)portp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: arch/m32r/kernel/io_mappi3.c:90:
+static inline void _ne_insb(void *portp, void * addr, unsigned long count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#274: FILE: arch/m32r/kernel/io_mappi3.c:95:
+		*buf++ = *(volatile unsigned char *)portp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#279: FILE: arch/m32r/kernel/io_mappi3.c:100:
+	*(volatile unsigned char *)portp = (unsigned char)b;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#284: FILE: arch/m32r/kernel/io_mappi3.c:105:
+	*(volatile unsigned short *)portp = cpu_to_le16(w);

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#292: FILE: arch/m32r/kernel/io_mappi3.c:113:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#292: FILE: arch/m32r/kernel/io_mappi3.c:113:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
+		return *(volatile unsigned char *)__port2addr_ata(port);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#293: FILE: arch/m32r/kernel/io_mappi3.c:114:
+		return *(volatile unsigned char *)__port2addr_ata(port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: arch/m32r/kernel/io_mappi3.c:120:
+		unsigned char b;
+		pcc_ioread_byte(0, port, &b, sizeof(b), 1, 0);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#301: FILE: arch/m32r/kernel/io_mappi3.c:122:
+		return b;
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#301: FILE: arch/m32r/kernel/io_mappi3.c:122:
+	} else
[...]
+	return *(volatile unsigned char *)PORT2ADDR(port);

CHECK:BRACES: Unbalanced braces around else statement
#301: FILE: arch/m32r/kernel/io_mappi3.c:122:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#303: FILE: arch/m32r/kernel/io_mappi3.c:124:
+	return *(volatile unsigned char *)PORT2ADDR(port);

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#311: FILE: arch/m32r/kernel/io_mappi3.c:132:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#311: FILE: arch/m32r/kernel/io_mappi3.c:132:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
+		return *(volatile unsigned short *)__port2addr_ata(port);
+	}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#312: FILE: arch/m32r/kernel/io_mappi3.c:133:
+		return *(volatile unsigned short *)__port2addr_ata(port);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#317: FILE: arch/m32r/kernel/io_mappi3.c:138:
+		return *(volatile unsigned short *)PORT2ADDR_USB(port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#323: FILE: arch/m32r/kernel/io_mappi3.c:144:
+		unsigned short w;
+		pcc_ioread_word(0, port, &w, sizeof(w), 1, 0);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#325: FILE: arch/m32r/kernel/io_mappi3.c:146:
+		return w;
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#325: FILE: arch/m32r/kernel/io_mappi3.c:146:
+	} else
[...]
+	return *(volatile unsigned short *)PORT2ADDR(port);

CHECK:BRACES: Unbalanced braces around else statement
#325: FILE: arch/m32r/kernel/io_mappi3.c:146:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#327: FILE: arch/m32r/kernel/io_mappi3.c:148:
+	return *(volatile unsigned short *)PORT2ADDR(port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: arch/m32r/kernel/io_mappi3.c:156:
+		unsigned long l;
+		pcc_ioread_word(0, port, &l, sizeof(l), 1, 0);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#337: FILE: arch/m32r/kernel/io_mappi3.c:158:
+		return l;
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#337: FILE: arch/m32r/kernel/io_mappi3.c:158:
+	} else
[...]
+	return *(volatile unsigned long *)PORT2ADDR(port);

CHECK:BRACES: Unbalanced braces around else statement
#337: FILE: arch/m32r/kernel/io_mappi3.c:158:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#339: FILE: arch/m32r/kernel/io_mappi3.c:160:
+	return *(volatile unsigned long *)PORT2ADDR(port);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#348: FILE: arch/m32r/kernel/io_mappi3.c:169:
+	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#350: FILE: arch/m32r/kernel/io_mappi3.c:171:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#350: FILE: arch/m32r/kernel/io_mappi3.c:171:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#351: FILE: arch/m32r/kernel/io_mappi3.c:172:
+		return *(volatile unsigned char *)__port2addr_ata(port);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#352: FILE: arch/m32r/kernel/io_mappi3.c:173:
+		return *(volatile unsigned char *)__port2addr_ata(port);
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#352: FILE: arch/m32r/kernel/io_mappi3.c:173:
+	} else
[...]
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#352: FILE: arch/m32r/kernel/io_mappi3.c:173:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: arch/m32r/kernel/io_mappi3.c:178:
+		unsigned char b;
+		pcc_ioread_byte(0, port, &b, sizeof(b), 1, 0);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#359: FILE: arch/m32r/kernel/io_mappi3.c:180:
+		return b;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#359: FILE: arch/m32r/kernel/io_mappi3.c:180:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#361: FILE: arch/m32r/kernel/io_mappi3.c:182:
+		v = *(volatile unsigned char *)PORT2ADDR(port);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#364: FILE: arch/m32r/kernel/io_mappi3.c:185:
+	return (v);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#373: FILE: arch/m32r/kernel/io_mappi3.c:194:
+	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#375: FILE: arch/m32r/kernel/io_mappi3.c:196:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#375: FILE: arch/m32r/kernel/io_mappi3.c:196:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]
+	else
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#376: FILE: arch/m32r/kernel/io_mappi3.c:197:
+		return *(volatile unsigned short *)__port2addr_ata(port);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#377: FILE: arch/m32r/kernel/io_mappi3.c:198:
+		return *(volatile unsigned short *)__port2addr_ata(port);
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#377: FILE: arch/m32r/kernel/io_mappi3.c:198:
+	} else
[...]
+	if (port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#377: FILE: arch/m32r/kernel/io_mappi3.c:198:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#381: FILE: arch/m32r/kernel/io_mappi3.c:202:
+		v = *(volatile unsigned short *)PORT2ADDR_USB(port);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#382: FILE: arch/m32r/kernel/io_mappi3.c:203:
+	else
[...]
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: arch/m32r/kernel/io_mappi3.c:208:
+		unsigned short w;
+		pcc_ioread_word(0, port, &w, sizeof(w), 1, 0);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#389: FILE: arch/m32r/kernel/io_mappi3.c:210:
+		return w;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#389: FILE: arch/m32r/kernel/io_mappi3.c:210:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#391: FILE: arch/m32r/kernel/io_mappi3.c:212:
+		v = *(volatile unsigned short *)PORT2ADDR(port);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#394: FILE: arch/m32r/kernel/io_mappi3.c:215:
+	return (v);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#401: FILE: arch/m32r/kernel/io_mappi3.c:222:
+	v = *(volatile unsigned long *)PORT2ADDR(port);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#403: FILE: arch/m32r/kernel/io_mappi3.c:224:
+	return (v);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#410: FILE: arch/m32r/kernel/io_mappi3.c:231:
+	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#412: FILE: arch/m32r/kernel/io_mappi3.c:233:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#412: FILE: arch/m32r/kernel/io_mappi3.c:233:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#413: FILE: arch/m32r/kernel/io_mappi3.c:234:
+		*(volatile unsigned char *)__port2addr_ata(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#414: FILE: arch/m32r/kernel/io_mappi3.c:235:
+	} else
[...]
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#414: FILE: arch/m32r/kernel/io_mappi3.c:235:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#417: FILE: arch/m32r/kernel/io_mappi3.c:238:
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#419: FILE: arch/m32r/kernel/io_mappi3.c:240:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#421: FILE: arch/m32r/kernel/io_mappi3.c:242:
+		*(volatile unsigned char *)PORT2ADDR(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#428: FILE: arch/m32r/kernel/io_mappi3.c:249:
+	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#430: FILE: arch/m32r/kernel/io_mappi3.c:251:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#430: FILE: arch/m32r/kernel/io_mappi3.c:251:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]
+	else
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#431: FILE: arch/m32r/kernel/io_mappi3.c:252:
+		*(volatile unsigned short *)__port2addr_ata(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#432: FILE: arch/m32r/kernel/io_mappi3.c:253:
+	} else
[...]
+	if (port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#432: FILE: arch/m32r/kernel/io_mappi3.c:253:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#436: FILE: arch/m32r/kernel/io_mappi3.c:257:
+		*(volatile unsigned short *)PORT2ADDR_USB(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#437: FILE: arch/m32r/kernel/io_mappi3.c:258:
+	else
[...]
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#440: FILE: arch/m32r/kernel/io_mappi3.c:261:
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#442: FILE: arch/m32r/kernel/io_mappi3.c:263:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#444: FILE: arch/m32r/kernel/io_mappi3.c:265:
+		*(volatile unsigned short *)PORT2ADDR(port) = w;

CHECK:BRACES: braces {} should be used on all arms of this statement
#450: FILE: arch/m32r/kernel/io_mappi3.c:271:
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {
[...]
+	} else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#452: FILE: arch/m32r/kernel/io_mappi3.c:273:
+	} else
[...]
+	*(volatile unsigned long *)PORT2ADDR(port) = l;

CHECK:BRACES: Unbalanced braces around else statement
#452: FILE: arch/m32r/kernel/io_mappi3.c:273:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#454: FILE: arch/m32r/kernel/io_mappi3.c:275:
+	*(volatile unsigned long *)PORT2ADDR(port) = l;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#461: FILE: arch/m32r/kernel/io_mappi3.c:282:
+	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#463: FILE: arch/m32r/kernel/io_mappi3.c:284:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#463: FILE: arch/m32r/kernel/io_mappi3.c:284:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#464: FILE: arch/m32r/kernel/io_mappi3.c:285:
+		*(volatile unsigned char *)__port2addr_ata(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#465: FILE: arch/m32r/kernel/io_mappi3.c:286:
+	} else
[...]
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: Unbalanced braces around else statement
#465: FILE: arch/m32r/kernel/io_mappi3.c:286:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#468: FILE: arch/m32r/kernel/io_mappi3.c:289:
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#470: FILE: arch/m32r/kernel/io_mappi3.c:291:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#472: FILE: arch/m32r/kernel/io_mappi3.c:293:
+		*(volatile unsigned char *)PORT2ADDR(port) = b;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#481: FILE: arch/m32r/kernel/io_mappi3.c:302:
+	else
[...]
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#483: FILE: arch/m32r/kernel/io_mappi3.c:304:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#483: FILE: arch/m32r/kernel/io_mappi3.c:304:
+	if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
[...]
+	} else
[...]
+	else
[...]
+	} else
[...]

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#484: FILE: arch/m32r/kernel/io_mappi3.c:305:
+		*(volatile unsigned short *)__port2addr_ata(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#485: FILE: arch/m32r/kernel/io_mappi3.c:306:
+	} else
[...]
+	  if (port >= 0x340 && port < 0x3a0)

CHECK:BRACES: Unbalanced braces around else statement
#485: FILE: arch/m32r/kernel/io_mappi3.c:306:
+	} else

WARNING:TABSTOP: Statements should start on a tabstop
#488: FILE: arch/m32r/kernel/io_mappi3.c:309:
+	  if (port >= 0x340 && port < 0x3a0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#489: FILE: arch/m32r/kernel/io_mappi3.c:310:
+		*(volatile unsigned short *)PORT2ADDR_USB(port) = w;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#490: FILE: arch/m32r/kernel/io_mappi3.c:311:
+	else
[...]
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#493: FILE: arch/m32r/kernel/io_mappi3.c:314:
+	if (port >= M32R_PCC_IOSTART0 && port <= M32R_PCC_IOEND0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#495: FILE: arch/m32r/kernel/io_mappi3.c:316:
+	} else

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#497: FILE: arch/m32r/kernel/io_mappi3.c:318:
+		*(volatile unsigned short *)PORT2ADDR(port) = w;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#504: FILE: arch/m32r/kernel/io_mappi3.c:325:
+	*(volatile unsigned long *)PORT2ADDR(port) = l;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#508: FILE: arch/m32r/kernel/io_mappi3.c:329:
+void _insb(unsigned int port, void * addr, unsigned long count)

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#513: FILE: arch/m32r/kernel/io_mappi3.c:334:
+	else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#516: FILE: arch/m32r/kernel/io_mappi3.c:337:
+		unsigned char *portp = __port2addr_ata(port);
+		while (count--)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#517: FILE: arch/m32r/kernel/io_mappi3.c:338:
+			*buf++ = *(volatile unsigned char *)portp;

CHECK:BRACES: Unbalanced braces around else statement
#526: FILE: arch/m32r/kernel/io_mappi3.c:347:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#529: FILE: arch/m32r/kernel/io_mappi3.c:350:
+		unsigned char *portp = PORT2ADDR(port);
+		while (count--)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#530: FILE: arch/m32r/kernel/io_mappi3.c:351:
+			*buf++ = *(volatile unsigned char *)portp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#534: FILE: arch/m32r/kernel/io_mappi3.c:355:
+void _insw(unsigned int port, void * addr, unsigned long count)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#542: FILE: arch/m32r/kernel/io_mappi3.c:363:
+			*buf++ = *(volatile unsigned short *)portp;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#549: FILE: arch/m32r/kernel/io_mappi3.c:370:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#552: FILE: arch/m32r/kernel/io_mappi3.c:373:
+			*buf++ = *(volatile unsigned short *)portp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#557: FILE: arch/m32r/kernel/io_mappi3.c:378:
+			*buf++ = *(volatile unsigned short *)portp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#561: FILE: arch/m32r/kernel/io_mappi3.c:382:
+void _insl(unsigned int port, void * addr, unsigned long count)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#568: FILE: arch/m32r/kernel/io_mappi3.c:389:
+		*buf++ = *(volatile unsigned long *)portp;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#571: FILE: arch/m32r/kernel/io_mappi3.c:392:
+void _outsb(unsigned int port, const void * addr, unsigned long count)

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#581: FILE: arch/m32r/kernel/io_mappi3.c:402:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#584: FILE: arch/m32r/kernel/io_mappi3.c:405:
+			*(volatile unsigned char *)portp = *buf++;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#594: FILE: arch/m32r/kernel/io_mappi3.c:415:
+			*(volatile unsigned char *)portp = *buf++;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#598: FILE: arch/m32r/kernel/io_mappi3.c:419:
+void _outsw(unsigned int port, const void * addr, unsigned long count)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#606: FILE: arch/m32r/kernel/io_mappi3.c:427:
+			*(volatile unsigned short *)portp = *buf++;

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#608: FILE: arch/m32r/kernel/io_mappi3.c:429:
+	} else if ((port >= 0x1f0 && port <=0x1f7) || port == 0x3f6) {
 	                                  ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#611: FILE: arch/m32r/kernel/io_mappi3.c:432:
+			*(volatile unsigned short *)portp = *buf++;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#621: FILE: arch/m32r/kernel/io_mappi3.c:442:
+			*(volatile unsigned short *)portp = *buf++;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#625: FILE: arch/m32r/kernel/io_mappi3.c:446:
+void _outsl(unsigned int port, const void * addr, unsigned long count)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#632: FILE: arch/m32r/kernel/io_mappi3.c:453:
+		*(volatile unsigned long *)portp = *buf++;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#642: FILE: arch/m32r/kernel/setup.c:334:
+	seq_printf(m, "Machine\t\t: Mappi-III Evaluation board\n");

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#652: FILE: arch/m32r/kernel/setup_mappi2.c:2:
+ *  linux/arch/m32r/kernel/setup_mappi2.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#686: FILE: arch/m32r/kernel/setup_mappi3.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#687: FILE: arch/m32r/kernel/setup_mappi3.c:2:
+ *  linux/arch/m32r/kernel/setup_mappi3.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#703: FILE: arch/m32r/kernel/setup_mappi3.c:18:
+#include <asm/io.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#705: FILE: arch/m32r/kernel/setup_mappi3.c:20:
+#define irq2port(x) (M32R_ICU_CR1_PORTL + ((x - 1) * sizeof(unsigned long)))

WARNING:NEW_TYPEDEFS: do not add new typedefs
#708: FILE: arch/m32r/kernel/setup_mappi3.c:23:
+typedef struct {

ERROR:SPACING: spaces required around that '||' (ctx:WxV)
#719: FILE: arch/m32r/kernel/setup_mappi3.c:34:
+	if ((irq == 0) ||(irq >= NR_IRQS))  {
 	               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == 0'
#719: FILE: arch/m32r/kernel/setup_mappi3.c:34:
+	if ((irq == 0) ||(irq >= NR_IRQS))  {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq >= NR_IRQS'
#719: FILE: arch/m32r/kernel/setup_mappi3.c:34:
+	if ((irq == 0) ||(irq >= NR_IRQS))  {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#720: FILE: arch/m32r/kernel/setup_mappi3.c:35:
+		printk("bad irq 0x%08x\n", irq);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#724: FILE: arch/m32r/kernel/setup_mappi3.c:39:
+	data = icu_data[irq].icucr|M32R_ICUCR_ILEVEL7;
 	                          ^

ERROR:SPACING: spaces required around that '||' (ctx:WxV)
#732: FILE: arch/m32r/kernel/setup_mappi3.c:47:
+	if ((irq == 0) ||(irq >= NR_IRQS))  {
 	               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == 0'
#732: FILE: arch/m32r/kernel/setup_mappi3.c:47:
+	if ((irq == 0) ||(irq >= NR_IRQS))  {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq >= NR_IRQS'
#732: FILE: arch/m32r/kernel/setup_mappi3.c:47:
+	if ((irq == 0) ||(irq >= NR_IRQS))  {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#733: FILE: arch/m32r/kernel/setup_mappi3.c:48:
+		printk("bad irq 0x%08x\n", irq);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#737: FILE: arch/m32r/kernel/setup_mappi3.c:52:
+	data = icu_data[irq].icucr|M32R_ICUCR_IEN|M32R_ICUCR_ILEVEL6;
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#737: FILE: arch/m32r/kernel/setup_mappi3.c:52:
+	data = icu_data[irq].icucr|M32R_ICUCR_IEN|M32R_ICUCR_ILEVEL6;
 	                                         ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#754: FILE: arch/m32r/kernel/setup_mappi3.c:69:
+	return (0);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#766: FILE: arch/m32r/kernel/setup_mappi3.c:81:
+static struct hw_interrupt_type mappi3_irq_type =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#784: FILE: arch/m32r/kernel/setup_mappi3.c:99:
+	icu_data[M32R_IRQ_INT0].icucr = M32R_ICUCR_IEN|M32R_ICUCR_ISMOD10;
 	                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#844: FILE: arch/m32r/kernel/setup_mappi3.c:159:
+	icu_data[PLD_IRQ_CFIREQ].icucr = M32R_ICUCR_IEN|M32R_ICUCR_ISMOD01;
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#853: FILE: arch/m32r/kernel/setup_mappi3.c:168:
+	icu_data[PLD_IRQ_CFC_INSERT].icucr = M32R_ICUCR_IEN|M32R_ICUCR_ISMOD00;
 	                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#861: FILE: arch/m32r/kernel/setup_mappi3.c:176:
+	icu_data[PLD_IRQ_CFC_EJECT].icucr = M32R_ICUCR_IEN|M32R_ICUCR_ISMOD10;
 	                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1896: FILE: include/asm-m32r/m32102.h:178:
+#define M32R_ICU_CR8_PORTL    (0x219+M32R_ICU_OFFSET)  /* INT7 */
                                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1918: FILE: include/asm-m32r/mappi3/mappi3_pld.h:1:
+/*

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1938: FILE: include/asm-m32r/mappi3/mappi3_pld.h:21:
+#define __reg8			(volatile unsigned char *)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1939: FILE: include/asm-m32r/mappi3/mappi3_pld.h:22:
+#define __reg16			(volatile unsigned short *)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1940: FILE: include/asm-m32r/mappi3/mappi3_pld.h:23:
+#define __reg32			(volatile unsigned int *)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1973: FILE: include/asm-m32r/mappi3/mappi3_pld.h:56:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1983: FILE: include/asm-m32r/mappi3/mappi3_pld.h:66:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1984: FILE: include/asm-m32r/mappi3/mappi3_pld.h:67:
+#if 0

WARNING:TYPO_SPELLING: 'swich' may be misspelled - perhaps 'switch'?
#1987: FILE: include/asm-m32r/mappi3/mappi3_pld.h:70:
+ * 1: DIP swich side
           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2017: FILE: include/asm-m32r/mappi3/mappi3_pld.h:100:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2018: FILE: include/asm-m32r/mappi3/mappi3_pld.h:101:
+#if 0

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179805.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 124 warnings, 48 checks, 1915 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179805.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
