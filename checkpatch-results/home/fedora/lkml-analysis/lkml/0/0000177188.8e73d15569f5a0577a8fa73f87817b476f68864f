WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: arch/um/drivers/slip_common.c:1:
+#include <string.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required before the open brace '{'
#111: FILE: arch/um/drivers/slip_common.c:9:
+	if(slip->more > 0){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: arch/um/drivers/slip_common.c:9:
+	if(slip->more > 0){

ERROR:SPACING: space required before the open brace '{'
#113: FILE: arch/um/drivers/slip_common.c:11:
+		while(i < slip->more){

ERROR:SPACING: space required before the open parenthesis '('
#113: FILE: arch/um/drivers/slip_common.c:11:
+		while(i < slip->more){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: arch/um/drivers/slip_common.c:12:
+^I^I^Isize = slip_unesc(slip->ibuf[i++], slip->ibuf, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#116: FILE: arch/um/drivers/slip_common.c:14:
+			if(size){

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: arch/um/drivers/slip_common.c:14:
+			if(size){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: arch/um/drivers/slip_common.c:16:
+^I^I^I^Imemmove(slip->ibuf, &slip->ibuf[i], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: arch/um/drivers/slip_common.c:18:
+^I^I^I^Islip->more = slip->more - i; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: arch/um/drivers/slip_common.c:25:
+^In = net_read(fd, &slip->ibuf[slip->pos], $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: arch/um/drivers/slip_common.c:27:
+^Iif(n <= 0) $

ERROR:SPACING: space required before the open parenthesis '('
#129: FILE: arch/um/drivers/slip_common.c:27:
+	if(n <= 0) 

ERROR:SPACING: space required before the open brace '{'
#133: FILE: arch/um/drivers/slip_common.c:31:
+	for(i = 0; i < n; i++){

ERROR:SPACING: space required before the open parenthesis '('
#133: FILE: arch/um/drivers/slip_common.c:31:
+	for(i = 0; i < n; i++){

ERROR:SPACING: space required after that ',' (ctx:VxO)
#134: FILE: arch/um/drivers/slip_common.c:32:
+		size = slip_unesc(slip->ibuf[start + i], slip->ibuf,&slip->pos,
 		                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#134: FILE: arch/um/drivers/slip_common.c:32:
+		size = slip_unesc(slip->ibuf[start + i], slip->ibuf,&slip->pos,
 		                                                    ^

ERROR:SPACING: space required before the open brace '{'
#136: FILE: arch/um/drivers/slip_common.c:34:
+		if(size){

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: arch/um/drivers/slip_common.c:34:
+		if(size){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: arch/um/drivers/slip_common.c:36:
+^I^I^Imemmove(slip->ibuf, &slip->ibuf[start+i+1], $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: arch/um/drivers/slip_common.c:36:
+			memmove(slip->ibuf, &slip->ibuf[start+i+1], 
 			                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: arch/um/drivers/slip_common.c:36:
+			memmove(slip->ibuf, &slip->ibuf[start+i+1], 
 			                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: arch/um/drivers/slip_common.c:38:
+^I^I^Islip->more = n - (i + 1); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: arch/um/drivers/slip_common.c:51:
+^Iif(n < 0) $

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: arch/um/drivers/slip_common.c:51:
+	if(n < 0) 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#155: FILE: arch/um/drivers/slip_common.c:53:
+	else return len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#162: FILE: arch/um/drivers/slip_common.h:1:
+#ifndef __UM_SLIP_COMMON_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/um/drivers/slip_common.h:5:
+ /* two bytes each for a (pathological) max packet of escaped chars +  * $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#167: FILE: arch/um/drivers/slip_common.h:6:
+  * terminating END char + initial END char                            */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/um/drivers/slip_common.h:16:
+                             int *esc)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/um/drivers/slip_common.h:16:
+                             int *esc)$

ERROR:SPACING: space required before the open brace '{'
#181: FILE: arch/um/drivers/slip_common.h:20:
+	switch(c){

ERROR:SPACING: space required before the open parenthesis '('
#181: FILE: arch/um/drivers/slip_common.h:20:
+	switch(c){

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#184: FILE: arch/um/drivers/slip_common.h:23:
+		ret=*pos;
 		   ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#184: FILE: arch/um/drivers/slip_common.h:23:
+		ret=*pos;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#185: FILE: arch/um/drivers/slip_common.h:24:
+		*pos=0;
 		    ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#186: FILE: arch/um/drivers/slip_common.h:25:
+		return(ret);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#189: FILE: arch/um/drivers/slip_common.h:28:
+		return(0);

ERROR:SPACING: space required before the open brace '{'
#191: FILE: arch/um/drivers/slip_common.h:30:
+		if(*esc){

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: arch/um/drivers/slip_common.h:30:
+		if(*esc){

ERROR:SPACING: space required before the open brace '{'
#197: FILE: arch/um/drivers/slip_common.h:36:
+		if(*esc){

ERROR:SPACING: space required before the open parenthesis '('
#197: FILE: arch/um/drivers/slip_common.h:36:
+		if(*esc){

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#204: FILE: arch/um/drivers/slip_common.h:43:
+	return(0);

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: arch/um/drivers/slip_common.h:65:
+		switch(c = *s++) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: arch/um/drivers/slip_common.h:92:
+^I.ibuf  ^I= { '\0' }, \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: arch/um/drivers/slip_common.h:93:
+^I.obuf  ^I= { '\0' }, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/um/drivers/slip_common.h:94:
+        .more^I= 0, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/um/drivers/slip_common.h:94:
+        .more^I= 0, \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: arch/um/drivers/slip_common.h:99:
+extern int slip_proto_read(int fd, void *buf, int len, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: arch/um/drivers/slip_common.h:99:
+extern int slip_proto_read(int fd, void *buf, int len, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: arch/um/drivers/slip_common.h:101:
+extern int slip_proto_write(int fd, void *buf, int len, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: arch/um/drivers/slip_common.h:101:
+extern int slip_proto_write(int fd, void *buf, int len, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: arch/um/drivers/slip_user.c:88:
+^Iif(err < 0) $

ERROR:SPACING: space required before the open parenthesis '('
#441: FILE: arch/um/drivers/slip_user.c:88:
+	if(err < 0) 

ERROR:SPACING: space required before the open brace '{'
#447: FILE: arch/um/drivers/slip_user.c:94:
+	if(output == NULL){

ERROR:SPACING: space required before the open parenthesis '('
#447: FILE: arch/um/drivers/slip_user.c:94:
+	if(output == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output"
#447: FILE: arch/um/drivers/slip_user.c:94:
+	if(output == NULL){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#448: FILE: arch/um/drivers/slip_user.c:95:
+		printk("slip_tramp : failed to allocate output buffer\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slip_tramp', this function's name, in a string
#448: FILE: arch/um/drivers/slip_user.c:95:
+		printk("slip_tramp : failed to allocate output buffer\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#456: FILE: arch/um/drivers/slip_user.c:103:
+	printk("%s", output);

ERROR:SPACING: space required before the open parenthesis '('
#459: FILE: arch/um/drivers/slip_user.c:106:
+	if(err < 0)

CHECK:BRACES: braces {} should be used on all arms of this statement
#459: FILE: arch/um/drivers/slip_user.c:106:
+	if(err < 0)
[...]
+	else if(!WIFEXITED(status) || (WEXITSTATUS(status) != 0)){
[...]
+	else err = 0;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#461: FILE: arch/um/drivers/slip_user.c:108:
+	else if(!WIFEXITED(status) || (WEXITSTATUS(status) != 0)){

ERROR:SPACING: space required before the open parenthesis '('
#461: FILE: arch/um/drivers/slip_user.c:108:
+	else if(!WIFEXITED(status) || (WEXITSTATUS(status) != 0)){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#462: FILE: arch/um/drivers/slip_user.c:109:
+		printk("'%s' didn't exit with status 0\n", argv[0]);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#465: FILE: arch/um/drivers/slip_user.c:112:
+	else err = 0;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#465: FILE: arch/um/drivers/slip_user.c:112:
 	}
+	else err = 0;

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#491: FILE: arch/um/drivers/slip_user.c:137:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#491: FILE: arch/um/drivers/slip_user.c:137:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: arch/um/drivers/slip_user.c:138:
+		printk("slip-open : Failed to open pty, err = %d\n", -err);

ERROR:SPACING: space required before the open brace '{'
#503: FILE: arch/um/drivers/slip_user.c:144:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#503: FILE: arch/um/drivers/slip_user.c:144:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#504: FILE: arch/um/drivers/slip_user.c:145:
+		printk("Couldn't open tty for slip line, err = %d\n", -err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: arch/um/drivers/slip_user.c:150:
+^Iif(set_up_tty(sfd)) $

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: arch/um/drivers/slip_user.c:150:
+	if(set_up_tty(sfd)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: arch/um/drivers/slirp.h:30:
+extern int slirp_user_write(int fd, void *buf, int len, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#653: FILE: arch/um/drivers/slirp.h:30:
+extern int slirp_user_write(int fd, void *buf, int len, 

ERROR:SPACING: space required before the open brace '{'
#736: FILE: arch/um/drivers/slirp_user.c:61:
+	if(err < 0){

ERROR:SPACING: space required before the open parenthesis '('
#736: FILE: arch/um/drivers/slirp_user.c:61:
+	if(err < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#737: FILE: arch/um/drivers/slirp_user.c:62:
+		printk("slirp_tramp failed - errno = %d\n", -err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slirp_tramp', this function's name, in a string
#737: FILE: arch/um/drivers/slirp_user.c:62:
+		printk("slirp_tramp failed - errno = %d\n", -err);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#754: FILE: arch/um/drivers/slirp_user.c:72:
+	return(fds[0]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000177188.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 60 errors, 15 warnings, 7 checks, 599 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000177188.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
