WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
 drivers/scsi/libata-core.c  |   40 ++++++++++++++++++++++++++++++++++++++--

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#65: 
--- a/drivers/scsi/ata_piix.c	Fri Feb 13 13:40:32 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#73: FILE: drivers/scsi/ata_piix.c:6:
+	Copyright 2003-2004 Red Hat Inc
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Copyright>
#73: FILE: drivers/scsi/ata_piix.c:6:
+	Copyright 2003-2004 Red Hat Inc

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Red>
#73: FILE: drivers/scsi/ata_piix.c:6:
+	Copyright 2003-2004 Red Hat Inc

CHECK:CAMELCASE: Avoid CamelCase: <Hat>
#73: FILE: drivers/scsi/ata_piix.c:6:
+	Copyright 2003-2004 Red Hat Inc

CHECK:CAMELCASE: Avoid CamelCase: <Inc>
#73: FILE: drivers/scsi/ata_piix.c:6:
+	Copyright 2003-2004 Red Hat Inc

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#74: FILE: drivers/scsi/ata_piix.c:7:
+	Copyright 2003-2004 Jeff Garzik
 	              ^

CHECK:CAMELCASE: Avoid CamelCase: <Jeff>
#74: FILE: drivers/scsi/ata_piix.c:7:
+	Copyright 2003-2004 Jeff Garzik

CHECK:CAMELCASE: Avoid CamelCase: <Garzik>
#74: FILE: drivers/scsi/ata_piix.c:7:
+	Copyright 2003-2004 Jeff Garzik

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#117: FILE: drivers/scsi/libata-core.c:2401:
+static inline void ata_chk_spurious_int(struct ata_port *ap) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: drivers/scsi/libata-core.c:2403:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#120: FILE: drivers/scsi/libata-core.c:2404:
+	if (ap->flags & ATA_FLAG_MMIO) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#121: FILE: drivers/scsi/libata-core.c:2405:
+		void *mmio = (void *) ap->ioaddr.bmdma_addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: drivers/scsi/libata-core.c:2406:
+		void *mmio = (void *) ap->ioaddr.bmdma_addr;
+		host_stat = readb(mmio + ATA_DMA_STATUS);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#123: FILE: drivers/scsi/libata-core.c:2407:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/scsi/libata-core.c:2409:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: drivers/scsi/libata-core.c:2411:
+		if (ap->flags & ATA_FLAG_MMIO) {
[...]
+		} else
[...]

CHECK:SPACING: No space is necessary after a cast
#128: FILE: drivers/scsi/libata-core.c:2412:
+			void *mmio = (void *) ap->ioaddr.bmdma_addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: drivers/scsi/libata-core.c:2413:
+			void *mmio = (void *) ap->ioaddr.bmdma_addr;
+			writeb(host_stat & ~ATA_DMA_ERR, mmio + ATA_DMA_STATUS);

CHECK:BRACES: Unbalanced braces around else statement
#130: FILE: drivers/scsi/libata-core.c:2414:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/scsi/libata-core.c:2416:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#138: FILE: drivers/scsi/libata-core.c:2422:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 3 warnings, 15 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
