WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -u --recursive --new-file linux-2.5.56-01-fix_oops/include/linux/sunrpc/auth.h linux-2.5.56-02-auth2/include/linux/sunrpc/auth.h

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct auth_cred *' should also have an identifier name
#60: FILE: include/linux/sunrpc/auth.h:85:
+	struct rpc_cred *	(*crcreate)(struct auth_cred *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#60: FILE: include/linux/sunrpc/auth.h:85:
+	struct rpc_cred *	(*crcreate)(struct auth_cred *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct auth_cred *' should also have an identifier name
#67: FILE: include/linux/sunrpc/auth.h:91:
+	int			(*crmatch)(struct auth_cred *, struct rpc_cred *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#67: FILE: include/linux/sunrpc/auth.h:91:
+	int			(*crmatch)(struct auth_cred *, struct rpc_cred *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#67: FILE: include/linux/sunrpc/auth.h:91:
+	int			(*crmatch)(struct auth_cred *, struct rpc_cred *, int);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: net/sunrpc/auth.c:177:
+rpcauth_lookup_credcache(struct rpc_auth *auth, struct auth_cred * acred,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: net/sunrpc/auth.c:178:
+rpcauth_lookup_credcache(struct rpc_auth *auth, struct auth_cred * acred,
+		int taskflags)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#215: FILE: net/sunrpc/auth_unix.c:81:
+		cred->uc_uid = cred->uc_puid = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#216: FILE: net/sunrpc/auth_unix.c:82:
+		cred->uc_gid = cred->uc_pgid = 0;

CHECK:SPACING: No space is necessary after a cast
#234: FILE: net/sunrpc/auth_unix.c:94:
+			cred->uc_gids[i] = (gid_t) acred->groups[i];

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#256: FILE: net/sunrpc/auth_unix.c:124:
+		if (cred->uc_uid != acred->uid
+		 || cred->uc_gid != acred->gid

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#257: FILE: net/sunrpc/auth_unix.c:125:
+		 || cred->uc_gid != acred->gid
+		 || cred->uc_puid != current->uid

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#258: FILE: net/sunrpc/auth_unix.c:126:
+		 || cred->uc_puid != current->uid
+		 || cred->uc_pgid != current->gid)

CHECK:SPACING: No space is necessary after a cast
#267: FILE: net/sunrpc/auth_unix.c:133:
+			if (cred->uc_gids[i] != (gid_t) acred->groups[i])

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#274: FILE: net/sunrpc/auth_unix.c:138:
+	return (cred->uc_uid == 0 && cred->uc_puid == 0
+	     && cred->uc_gid == 0 && cred->uc_pgid == 0

CHECK:SPACING: No space is necessary after a cast
#284: FILE: net/sunrpc/auth_unix.c:168:
+		*p++ = htonl((u32) cred->uc_puid);

CHECK:SPACING: No space is necessary after a cast
#285: FILE: net/sunrpc/auth_unix.c:169:
+		*p++ = htonl((u32) cred->uc_pgid);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400442.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 6 warnings, 11 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400442.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
