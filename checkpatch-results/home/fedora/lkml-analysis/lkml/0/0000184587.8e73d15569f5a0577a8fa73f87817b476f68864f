CHECK:SPACING: No space is necessary after a cast
#125: FILE: arch/ia64/kernel/ptrace.c:454:
+		err = get_user(ret, (long __user *) addr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#140: FILE: arch/ia64/kernel/ptrace.c:542:
+	if (child == current &&
[...]
+	    return -EIO;

WARNING:TABSTOP: Statements should start on a tabstop
#143: FILE: arch/ia64/kernel/ptrace.c:545:
+	    return -EIO;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#149: FILE: arch/ia64/kernel/ptrace.c:549:
+		if ((ret = ia64_peek(child, sw, user_rbs_end, addr, &val)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#154: FILE: arch/ia64/kernel/ptrace.c:552:
+			err = __put_user(val, (unsigned long __user *) addr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: arch/ia64/kernel/ptrace.c:563:
+arch_ptrace_stop (struct task_struct *child, siginfo_t *info)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: arch/ia64/kernel/ptrace.c:569:
+	if (likely (child == current)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'child == current'
#176: FILE: arch/ia64/kernel/ptrace.c:569:
+	if (likely (child == current)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#176: FILE: arch/ia64/kernel/ptrace.c:569:
+	if (likely (child == current)) {
[...]
-		 * doing as well as we can...
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#195: FILE: arch/ia64/kernel/ptrace.c:579:
+	} else

CHECK:SPACING: No space is necessary after a cast
#196: FILE: arch/ia64/kernel/ptrace.c:580:
+		sw = (struct switch_stack *) (child->thread.ksp + 16);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: arch/ia64/kernel/ptrace.c:603:
+ptrace_attach_sync_user_rbs (struct task_struct *child)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: include/asm-ia64/ptrace.h:274:
+  struct ia64_flush_rbs_retval {$

WARNING:TABSTOP: Statements should start on a tabstop
#365: FILE: include/asm-ia64/ptrace.h:275:
+	  unsigned long bspstore;

WARNING:TABSTOP: Statements should start on a tabstop
#366: FILE: include/asm-ia64/ptrace.h:276:
+	  unsigned long rnat;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: include/asm-ia64/ptrace.h:277:
+  };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: include/asm-ia64/ptrace.h:295:
+  extern struct ia64_flush_rbs_retval ia64_flush_rbs (void);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#380: FILE: include/asm-ia64/ptrace.h:295:
+  extern struct ia64_flush_rbs_retval ia64_flush_rbs (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#380: FILE: include/asm-ia64/ptrace.h:295:
+  extern struct ia64_flush_rbs_retval ia64_flush_rbs (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: include/asm-ia64/ptrace.h:306:
+  struct siginfo;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#390: FILE: include/asm-ia64/ptrace.h:307:
+  struct siginfo;
+  extern void arch_ptrace_stop (struct task_struct *, struct siginfo *);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: include/asm-ia64/ptrace.h:307:
+  extern void arch_ptrace_stop (struct task_struct *, struct siginfo *);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#390: FILE: include/asm-ia64/ptrace.h:307:
+  extern void arch_ptrace_stop (struct task_struct *, struct siginfo *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#390: FILE: include/asm-ia64/ptrace.h:307:
+  extern void arch_ptrace_stop (struct task_struct *, struct siginfo *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#390: FILE: include/asm-ia64/ptrace.h:307:
+  extern void arch_ptrace_stop (struct task_struct *, struct siginfo *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct siginfo *' should also have an identifier name
#390: FILE: include/asm-ia64/ptrace.h:307:
+  extern void arch_ptrace_stop (struct task_struct *, struct siginfo *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 17 warnings, 8 checks, 314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000184587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
