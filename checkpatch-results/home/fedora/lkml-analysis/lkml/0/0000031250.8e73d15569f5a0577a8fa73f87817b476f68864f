WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: include/bc/rsspages.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#63: FILE: include/bc/rsspages.h:2:
+ * include/bc/rsspages.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: include/bc/rsspages.h:19:
+int __must_check bc_rsspage_prepare(struct page *p,
+		struct vm_area_struct *vma, struct page_beancounter **ppb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: include/bc/rsspages.h:26:
+unsigned long bc_isolate_pages(unsigned long nr_to_scan,
+		struct beancounter *bc, struct list_head *dst,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: include/bc/rsspages.h:31:
+static inline int __must_check bc_rsspage_prepare(struct page *p,
+		struct vm_area_struct *vma, struct page_beancounter **ppb)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#100: FILE: include/bc/rsspages.h:39:
+}
+static inline void bc_rsspage_release(struct page_beancounter *pb)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#103: FILE: include/bc/rsspages.h:42:
+}
+static inline void bc_rsspage_uncharge(struct page *p)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#155: FILE: kernel/bc/rsspages.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#156: FILE: kernel/bc/rsspages.c:2:
+ * kernel/bc/rsspages.c

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#172: FILE: kernel/bc/rsspages.c:18:
+#include <asm/bitops.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: kernel/bc/rsspages.c:47:
+int bc_rsspage_prepare(struct page *page, struct vm_area_struct *vma,
+		struct page_beancounter **ppb)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pb)...) over kmalloc(sizeof(struct page_beancounter)...)
#206: FILE: kernel/bc/rsspages.c:52:
+	pb = kmalloc(sizeof(struct page_beancounter), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pb"
#207: FILE: kernel/bc/rsspages.c:53:
+	if (pb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pb"
#267: FILE: kernel/bc/rsspages.c:113:
+	if (pb == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: kernel/bc/rsspages.c:137:
+unsigned long bc_isolate_pages(unsigned long nr_to_scan, struct beancounter *bc,
+		struct list_head *dst, int active, unsigned long *scanned)

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: kernel/bc/rsspages.c:151:
+		struct list_head *target;
+		pb = list_entry(src->prev, struct page_beancounter, list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: kernel/bc/rsspages.c:160:
+			if ((active && PageActive(page)) ||
+					(!active && !PageActive(page))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: kernel/bc/rsspages.c:194:
+	bc_init_resource(bc, BC_PHYSPAGES,
+			BC_PHYSPAGES_BARRIER, BC_PHYSPAGES_LIMIT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: kernel/bc/rsspages.c:206:
+static int bc_phys_limit_hit(struct beancounter *bc, unsigned long val,
+		unsigned long flags)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#363: FILE: kernel/bc/rsspages.c:209:
+	struct bc_resource_parm *parm;
 	                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#368: FILE: kernel/bc/rsspages.c:214:
+	parm = &bc->bc_parms[BC_PHYSPAGES];
 	^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#375: FILE: kernel/bc/rsspages.c:221:
+			bc_adjust_maxheld(parm);
 			                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: kernel/bc/rsspages.c:234:
+static int bc_phys_change(struct beancounter *bc,
+		unsigned long barrier, unsigned long limit)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#391: FILE: kernel/bc/rsspages.c:237:
+	struct bc_resource_parm *parm;
 	                         ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#393: FILE: kernel/bc/rsspages.c:239:
+	parm = &bc->bc_parms[BC_PHYSPAGES];
 	^^^^

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#424: FILE: kernel/bc/rsspages.c:270:
+__initcall(bc_phys_init_resource);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'Thes' may be misspelled - perhaps 'This'?
#443: FILE: mm/vmscan.c:1084:
+ * Thes works like shrink_inactive_list() and shrink_active_list()
    ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: mm/vmscan.c:1091:
+static unsigned long bc_shrink_pages_inactive(unsigned long max_scan,
+		struct beancounter *bc, struct scan_control *sc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: mm/vmscan.c:1104:
+		nr_taken = bc_isolate_pages(sc->swap_cluster_max, bc,
+				&page_list, 0, &nr_scan);

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: mm/vmscan.c:1127:
+  ^I} while (nr_scanned < max_scan);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: mm/vmscan.c:1127:
+  ^I} while (nr_scanned < max_scan);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: mm/vmscan.c:1127:
+  ^I} while (nr_scanned < max_scan);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: mm/vmscan.c:1133:
+static void bc_shrink_pages_active(unsigned long nr_pages,
+		struct beancounter *bc, struct scan_control *sc)

WARNING:TYPO_SPELLING: 'firts' may be misspelled - perhaps 'first'?
#553: FILE: mm/vmscan.c:1194:
+ * This is a reworked shrink_zone() routine - it scans active pages firts,
                                                                     ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: mm/vmscan.c:1198:
+static unsigned long bc_shrink_pages(int priority, struct beancounter *bc,
+		struct scan_control *sc)

WARNING:MINMAX: min() should probably be min_t(unsigned long, nr_pages, sc->swap_cluster_max)
#568: FILE: mm/vmscan.c:1209:
+		nr_to_scan = min(nr_pages, (unsigned long)sc->swap_cluster_max);

WARNING:MINMAX: min() should probably be min_t(unsigned long, nr_pages, sc->swap_cluster_max)
#578: FILE: mm/vmscan.c:1219:
+		nr_to_scan = min(nr_pages, (unsigned long)sc->swap_cluster_max);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#621: FILE: mm/vmscan.c:1262:
+			blk_congestion_wait(WRITE, HZ/10);
 			                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 24 warnings, 19 checks, 552 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
