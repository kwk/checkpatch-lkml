WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/ppc/kernel/process.c:192:
+    struct pt_regs *regs = tsk->thread.regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: arch/ppc/kernel/process.c:194:
+    if (!regs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: arch/ppc/kernel/process.c:195:
+        return 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/ppc/kernel/process.c:195:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/ppc/kernel/process.c:196:
+    if (tsk == current && (regs->msr & MSR_FP))$

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#83: FILE: arch/ppc/kernel/process.c:199:
+    memcpy(fpregs, &tsk->thread.fpr[0], sizeof(*fpregs));
                                 ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/ppc/kernel/process.c:199:
+    memcpy(fpregs, &tsk->thread.fpr[0], sizeof(*fpregs));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: include/asm-ppc/elf.h:94:
+                        struct pt_regs *regs)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: include/asm-ppc/elf.h:94:
+static inline void ppc_elf_core_copy_regs(elf_gregset_t elf_regs,
+                        struct pt_regs *regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: include/asm-ppc/elf.h:94:
+                        struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: include/asm-ppc/elf.h:96:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/asm-ppc/elf.h:97:
+    int gprs = sizeof(struct pt_regs)/sizeof(elf_greg_t);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#106: FILE: include/asm-ppc/elf.h:97:
+    int gprs = sizeof(struct pt_regs)/sizeof(elf_greg_t);
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: include/asm-ppc/elf.h:99:
+    if (gprs > ELF_NGREG)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: include/asm-ppc/elf.h:100:
+        gprs = ELF_NGREG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: include/asm-ppc/elf.h:100:
+        gprs = ELF_NGREG;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: include/asm-ppc/elf.h:102:
+    for (i=0; i < gprs; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#111: FILE: include/asm-ppc/elf.h:102:
+    for (i=0; i < gprs; i++)
           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: include/asm-ppc/elf.h:103:
+        elf_regs[i] = (elf_greg_t)((elf_greg_t *)regs)[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: include/asm-ppc/elf.h:103:
+        elf_regs[i] = (elf_greg_t)((elf_greg_t *)regs)[i];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: include/asm-ppc/elf.h:105:
+#define ELF_CORE_COPY_REGS(gregs, regs) ppc_elf_core_copy_regs(gregs, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#114: FILE: include/asm-ppc/elf.h:105:
+}
+#define ELF_CORE_COPY_REGS(gregs, regs) ppc_elf_core_copy_regs(gregs, 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#114: FILE: include/asm-ppc/elf.h:105:
+#define ELF_CORE_COPY_REGS(gregs, regs) ppc_elf_core_copy_regs(gregs, 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#115: FILE: include/asm-ppc/elf.h:105:
regs);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: include/asm-ppc/elf.h:108:
+                 elf_gregset_t *elf_regs)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/asm-ppc/elf.h:108:
+static inline int dump_task_regs(struct task_struct *tsk,
+                 elf_gregset_t *elf_regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: include/asm-ppc/elf.h:108:
+                 elf_gregset_t *elf_regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/asm-ppc/elf.h:110:
+    struct pt_regs *regs = tsk->thread.regs;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: include/asm-ppc/elf.h:111:
+    struct pt_regs *regs = tsk->thread.regs;
+    if (regs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: include/asm-ppc/elf.h:111:
+    if (regs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: include/asm-ppc/elf.h:112:
+        ppc_elf_core_copy_regs(*elf_regs, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: include/asm-ppc/elf.h:112:
+        ppc_elf_core_copy_regs(*elf_regs, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: include/asm-ppc/elf.h:114:
+    return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: include/asm-ppc/elf.h:116:
+#define ELF_CORE_COPY_TASK_REGS(tsk, elf_regs) dump_task_regs(tsk, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#126: FILE: include/asm-ppc/elf.h:116:
+}
+#define ELF_CORE_COPY_TASK_REGS(tsk, elf_regs) dump_task_regs(tsk, 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#126: FILE: include/asm-ppc/elf.h:116:
+#define ELF_CORE_COPY_TASK_REGS(tsk, elf_regs) dump_task_regs(tsk, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/asm-ppc/elf.h:118:
+extern int dump_task_fpu(struct task_struct *, elf_fpregset_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#129: FILE: include/asm-ppc/elf.h:118:
+extern int dump_task_fpu(struct task_struct *, elf_fpregset_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#129: FILE: include/asm-ppc/elf.h:118:
+extern int dump_task_fpu(struct task_struct *, elf_fpregset_t *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: include/asm-ppc/elf.h:119:
+#define ELF_CORE_COPY_FPREGS(tsk, elf_fpregs) dump_task_fpu(tsk, $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#130: FILE: include/asm-ppc/elf.h:119:
+#define ELF_CORE_COPY_FPREGS(tsk, elf_fpregs) dump_task_fpu(tsk, 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000300755.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 21 warnings, 6 checks, 75 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000300755.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
