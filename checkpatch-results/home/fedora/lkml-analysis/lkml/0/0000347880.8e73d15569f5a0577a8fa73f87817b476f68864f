WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
(http://www.ussg.iu.edu/hypermail/linux/kernel/0305.3/att-1604/01-4202-vfs-mctime-rofs.patch):

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
###################################################################

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: fs/inode.c:1192:
+^Iif (IS_NODIRATIME(inode) && S_ISDIR(inode->i_mode)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: fs/inode.c:1194:
+^Iif (IS_RDONLY(inode)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: fs/inode.c:1208:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/inode.c:1208:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#80: FILE: fs/inode.c:1209:
+void update_mctime (struct inode *inode)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#86: FILE: fs/inode.c:1215:
+	inode->i_ctime = inode->i_mtime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#87: FILE: fs/inode.c:1216:
+	mark_inode_dirty (inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: include/linux/fs.h:204:
+extern void update_mctime (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/fs.h:204:
+extern void update_mctime (struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#110: FILE: include/linux/fs.h:204:
+extern void update_mctime (struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347880.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 2 checks, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347880.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
