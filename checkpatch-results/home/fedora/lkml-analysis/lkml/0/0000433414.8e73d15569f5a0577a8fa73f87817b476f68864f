WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
diff -urN linux-2.5.34/arch/s390/kernel/Makefile linux-2.5.34-s390/arch/s390/kernel/Makefile

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#191: FILE: arch/s390/kernel/signal.c:52:
+int do_signal(struct pt_regs *regs, sigset_t *oldset);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: arch/s390/kernel/signal.c:58:
+sys_sigsuspend(struct pt_regs * regs, int history0, int history1,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: arch/s390/kernel/signal.c:155:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: arch/s390/kernel/signal.c:160:
+^Ireturn __copy_to_user(&sregs->fpregs, &current->thread.fp_regs, $

CHECK:SPACING: No space is necessary after a cast
#480: FILE: arch/s390x/kernel/signal32.c:302:
+	regs32.psw.addr = _ADDR_31 | (__u32) regs->psw.addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#482: FILE: arch/s390x/kernel/signal32.c:304:
+		regs32.gprs[i] = (__u32) regs->gprs[i];

CHECK:SPACING: No space is necessary after a cast
#531: FILE: arch/s390x/kernel/signal32.c:327:
+		regs->gprs[i] = (__u64) regs32.gprs[i];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#565: FILE: include/asm-s390/system.h:24:
+extern struct task_struct *resume(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#565: FILE: include/asm-s390/system.h:24:
+extern struct task_struct *resume(void *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#565: FILE: include/asm-s390/system.h:24:
+extern struct task_struct *resume(void *, void *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#569: FILE: include/asm-s390/system.h:28:
+	asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#574: FILE: include/asm-s390/system.h:33:
+		: : "a" (fpregs) : "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#577: FILE: include/asm-s390/system.h:36:
+	asm volatile(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#591: FILE: include/asm-s390/system.h:50:
+		: : "a" (fpregs) : "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#596: FILE: include/asm-s390/system.h:55:
+	asm volatile (

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#604: FILE: include/asm-s390/system.h:63:
+	asm volatile(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#655: FILE: include/asm-s390x/system.h:24:
+extern struct task_struct *resume(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#655: FILE: include/asm-s390x/system.h:24:
+extern struct task_struct *resume(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#655: FILE: include/asm-s390x/system.h:24:
+extern struct task_struct *resume(void *, void *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#659: FILE: include/asm-s390x/system.h:28:
+	asm volatile (

ERROR:SPACING: space prohibited before that close parenthesis ')'
#677: FILE: include/asm-s390x/system.h:46:
+		: : "a" (fpregs) : "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#682: FILE: include/asm-s390x/system.h:51:
+	asm volatile (

ERROR:SPACING: space required after that ',' (ctx:VxV)
#703: FILE: include/asm-s390x/system.h:72:
+#define switch_to(prev,next,last) do {					     \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#703: FILE: include/asm-s390x/system.h:72:
+#define switch_to(prev,next,last) do {					     \
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#703: FILE: include/asm-s390x/system.h:72:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \
 	restore_fp_regs(&next->thread.fp_regs);				     \
 	resume(prev,next);						     \
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#703: FILE: include/asm-s390x/system.h:72:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \
 	restore_fp_regs(&next->thread.fp_regs);				     \
 	resume(prev,next);						     \
 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#703: FILE: include/asm-s390x/system.h:72:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \
 	restore_fp_regs(&next->thread.fp_regs);				     \
 	resume(prev,next);						     \
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#703: FILE: include/asm-s390x/system.h:72:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \
 	save_fp_regs(&prev->thread.fp_regs);				     \
 	restore_fp_regs(&next->thread.fp_regs);				     \
 	resume(prev,next);						     \
 } while (0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 6 warnings, 15 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
