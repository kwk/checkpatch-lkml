WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -ruN 2.5.15/arch/cris/kernel/signal.c 2.5.15-si.5/arch/cris/kernel/signal.c

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#51: FILE: arch/cris/kernel/signal.c:524:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: arch/i386/kernel/signal.c:536:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: arch/i386/kernel/signal.c:536:
+	struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#189: FILE: arch/i386/kernel/signal.c:538:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: arch/mips/kernel/signal.c:526:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+		struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: arch/mips/kernel/signal.c:526:
+		struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#325: FILE: arch/mips/kernel/signal.c:528:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: arch/mips64/kernel/signal.c:547:
+static inline void handle_signal(unsigned long sig, siginfo_t *info,
+		sigset_t *oldset, struct pt_regs *regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#456: FILE: arch/mips64/kernel/signal.c:549:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: arch/mips64/kernel/signal32.c:629:
+handle_signal(unsigned long sig siginfo_t *info, sigset_t *oldset,
+		struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: arch/mips64/kernel/signal32.c:629:
+		struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#586: FILE: arch/mips64/kernel/signal32.c:631:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#713: FILE: arch/parisc/kernel/signal.c:438:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#835: FILE: arch/parisc/kernel/signal.c:509:
+				ka = &current->sig->action[signr-1];
 				                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#859: FILE: arch/ppc/kernel/signal.c:430:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs, unsigned long *newspp, unsigned long frame)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#859: FILE: arch/ppc/kernel/signal.c:430:
+	struct pt_regs * regs, unsigned long *newspp, unsigned long frame)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#863: FILE: arch/ppc/kernel/signal.c:434:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: arch/ppc64/kernel/signal.c:548:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs, unsigned long *newspp, unsigned long frame)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#993: FILE: arch/ppc64/kernel/signal.c:548:
+	struct pt_regs * regs, unsigned long *newspp, unsigned long frame)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#997: FILE: arch/ppc64/kernel/signal.c:552:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1137: FILE: arch/ppc64/kernel/signal32.c:1191:
+handle_signal32(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs, unsigned int *newspp, unsigned int frame)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1137: FILE: arch/ppc64/kernel/signal32.c:1191:
+	struct pt_regs * regs, unsigned int *newspp, unsigned int frame)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1142: FILE: arch/ppc64/kernel/signal32.c:1196:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: arch/s390/kernel/signal.c:413:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1295: FILE: arch/s390/kernel/signal.c:413:
+	struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1297: FILE: arch/s390/kernel/signal.c:415:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1425: FILE: arch/s390x/kernel/signal.c:413:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1425: FILE: arch/s390x/kernel/signal.c:413:
+	struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1427: FILE: arch/s390x/kernel/signal.c:415:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1554: FILE: arch/s390x/kernel/signal32.c:552:
+handle_signal32(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1554: FILE: arch/s390x/kernel/signal32.c:552:
+	struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1556: FILE: arch/s390x/kernel/signal32.c:554:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1681: FILE: arch/sh/kernel/signal.c:526:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1681: FILE: arch/sh/kernel/signal.c:526:
+	struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1683: FILE: arch/sh/kernel/signal.c:528:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1808: FILE: arch/x86_64/kernel/signal.c:384:
+handle_signal(unsigned long sig, siginfo_t *info, sigset_t *oldset,
+	struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1808: FILE: arch/x86_64/kernel/signal.c:384:
+	struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1810: FILE: arch/x86_64/kernel/signal.c:386:
+	struct k_sigaction *ka = &current->sig->action[sig-1];
 	                                                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2019: FILE: include/linux/signal.h:224:
+extern int get_signal_to_deliver(siginfo_t *info, struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2090: FILE: kernel/signal.c:877:
+		ka = &current->sig->action[signr-1];
 		                                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 45)
#2095: FILE: kernel/signal.c:882:
+			while (sys_wait4(-1, NULL, WNOHANG, NULL) > 0)
+				/* nothing */;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2114: FILE: kernel/signal.c:901:
+				/* FALLTHRU */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2118: FILE: kernel/signal.c:905:
+				struct signal_struct *sig;
+				set_current_state(TASK_STOPPED);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2121: FILE: kernel/signal.c:908:
+				if (sig && !(sig->action[SIGCHLD-1].sa.sa_flags & SA_NOCLDSTOP))
 				                                ^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2132: FILE: kernel/signal.c:919:
+				/* FALLTHRU */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458151.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 5 warnings, 30 checks, 1985 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458151.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
