WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#48: FILE: drivers/serial/Kconfig:355:
+config SERIAL_DCC
+	bool "JTAG ICE/ICD DCC serial port emulation support"
+	depends on ARM
+	select SERIAL_CORE
+	help
+	  This selects serial port emulation driver for ICE/ICD JTAG debugger
+	  (e.g. Trace32) for ARM architecture. You should make an terminal with
+	  DCC(JTAG1) protocol.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/serial/Kconfig:365:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/serial/Kconfig:366:
+config SERIAL_DCC_CONSOLE
+	bool "Support for console on JTAG ICE/ICD DCC"
+	depends on SERIAL_DCC
+	select SERIAL_CORE_CONSOLE
+	help
+	  Say Y here if you wish to use ICE/ICD JTAG DCC serial port emulation
+	  as the system console.
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#95: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: drivers/serial/dcc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#101: FILE: drivers/serial/dcc.c:2:
+ *  linux/drivers/serial/dcc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: drivers/serial/dcc.c:7:
+ * ^ICopyright (C) 2003, 2004, 2005 Hyok S. Choi (hyok.choi@samsung.com)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: drivers/serial/dcc.c:8:
+ * ^ISAMSUNG ELECTRONICS Co.,Ltd.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#132: FILE: drivers/serial/dcc.c:33:
+#include <asm/io.h>

ERROR:SPACING: exactly one space required after that #ifndef
#145: FILE: drivers/serial/dcc.c:46:
+#ifndef  DCC_IRQ_USED

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#149: FILE: drivers/serial/dcc.c:50:
+static unsigned int dcc_poll_run = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:BIT_MACRO: Prefer using the BIT macro
#167: FILE: drivers/serial/dcc.c:68:
+#define DCC_STATUS_RX		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#168: FILE: drivers/serial/dcc.c:69:
+#define DCC_STATUS_TX		(1 << 1)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#197: FILE: drivers/serial/dcc.c:98:
+}
+/* end of JTAG1 dependencies */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#217: FILE: drivers/serial/dcc.c:118:
+	if (pendings + xmit->tail > UART_XMIT_SIZE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around xmit->buf[xmit->tail]
#218: FILE: drivers/serial/dcc.c:119:
+		xmit_string(port, &(xmit->buf[xmit->tail]),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/serial/dcc.c:120:
+		xmit_string(port, &(xmit->buf[xmit->tail]),
+			UART_XMIT_SIZE - xmit->tail);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around xmit->buf[0]
#220: FILE: drivers/serial/dcc.c:121:
+		xmit_string(port, &(xmit->buf[0]), xmit->head);

CHECK:BRACES: Unbalanced braces around else statement
#221: FILE: drivers/serial/dcc.c:122:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around xmit->buf[xmit->tail]
#222: FILE: drivers/serial/dcc.c:123:
+		xmit_string(port, &(xmit->buf[xmit->tail]), pendings);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: drivers/serial/dcc.c:124:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#224: FILE: drivers/serial/dcc.c:125:
+	xmit->tail = (xmit->tail + pendings) & (UART_XMIT_SIZE-1);
 	                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: drivers/serial/dcc.c:170:
+^I^Ireturn; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/serial/dcc.c:189:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: drivers/serial/dcc.c:195:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: drivers/serial/dcc.c:214:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/serial/dcc.c:269:
+static void dcc_set_termios(struct uart_port *port, struct termios *termios,
+		   struct termios *old)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/serial/dcc.c:291:
+^Ibaud = uart_get_baud_rate(port, termios, old, 0, port->uartclk/16); $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#390: FILE: drivers/serial/dcc.c:291:
+	baud = uart_get_baud_rate(port, termios, old, 0, port->uartclk/16); 
 	                                                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#404: FILE: drivers/serial/dcc.c:305:
+static const char * dcc_type(struct uart_port *port)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#428: FILE: drivers/serial/dcc.c:329:
+static int dcc_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                          ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: drivers/serial/dcc.c:332:
+	int ret = 0;
+	if (ser->type != PORT_UNKNOWN && ser->type != PORT_DCC_JTAG1)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#444: FILE: drivers/serial/dcc.c:345:
+}
+static void dcc_dummy_ops_ui(struct uart_port *port, unsigned int ui)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#447: FILE: drivers/serial/dcc.c:348:
+}
+static void dcc_dummy_ops_i(struct uart_port *port, int i)

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#451: FILE: drivers/serial/dcc.c:352:
+static struct uart_ops dcc_pops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#471: FILE: drivers/serial/dcc.c:372:
+	.membase	= (char*)0x12345678,	/* we need these garbages */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/serial/dcc.c:374:
+^I.iotype^I^I= UPIO_MEM,^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: drivers/serial/dcc.c:387:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#525: FILE: drivers/serial/dcc.c:426:
+#define DCC_CONSOLE	&dcc_console

WARNING:REPEATED_WORD: Possible repeated word: 'driver'
#544: FILE: drivers/serial/dcc.c:445:
+	printk(KERN_INFO "DCC: JTAG1 Serial emulation driver driver $Revision: 1.1 $\n");

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#544: FILE: drivers/serial/dcc.c:445:
+	printk(KERN_INFO "DCC: JTAG1 Serial emulation driver driver $Revision: 1.1 $\n");

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#544: FILE: drivers/serial/dcc.c:445:
+	printk(KERN_INFO "DCC: JTAG1 Serial emulation driver driver $Revision: 1.1 $\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#561: FILE: drivers/serial/dcc.c:462:
+__initcall(dcc_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087889.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 15 warnings, 15 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087889.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
