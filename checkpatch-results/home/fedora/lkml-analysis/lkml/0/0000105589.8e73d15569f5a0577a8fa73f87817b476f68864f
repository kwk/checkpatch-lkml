WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/isdn/gigaset/bas-gigaset.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#64: FILE: drivers/isdn/gigaset/bas-gigaset.c:18:
+ * Version: $Id: bas-gigaset.c,v 1.52.4.19 2006/02/04 18:28:16 hjlipp Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#82: FILE: drivers/isdn/gigaset/bas-gigaset.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#88: FILE: drivers/isdn/gigaset/bas-gigaset.c:42:
+module_param(startmode, int, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#89: FILE: drivers/isdn/gigaset/bas-gigaset.c:43:
+module_param(cidmode, int, S_IRUGO);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#109: FILE: drivers/isdn/gigaset/bas-gigaset.c:63:
+static struct usb_device_id gigaset_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#133: FILE: drivers/isdn/gigaset/bas-gigaset.c:87:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: drivers/isdn/gigaset/bas-gigaset.c:128:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#175: FILE: drivers/isdn/gigaset/bas-gigaset.c:129:
+static struct gigaset_driver *driver = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#176: FILE: drivers/isdn/gigaset/bas-gigaset.c:130:
+static struct cardstate *cardstate = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/isdn/gigaset/bas-gigaset.c:211:
+                            struct urb *urb)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/isdn/gigaset/bas-gigaset.c:211:
+                            struct urb *urb)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: drivers/isdn/gigaset/bas-gigaset.c:215:
+	int i;
+	IFNULLRET(tag);

CHECK:SPACING: No space is necessary after a cast
#262: FILE: drivers/isdn/gigaset/bas-gigaset.c:216:
+	dbg(level, "%s urb(0x%08lx)->{", tag, (unsigned long) urb);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#266: FILE: drivers/isdn/gigaset/bas-gigaset.c:220:
+		    "  dev=0x%08lx, pipe=%s:EP%d/DV%d:%s, "
+		    "status=%d, hcpriv=0x%08lx, transfer_flags=0x%x,",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#267: FILE: drivers/isdn/gigaset/bas-gigaset.c:221:
+		    (unsigned long) urb->dev,

CHECK:SPACING: No space is necessary after a cast
#271: FILE: drivers/isdn/gigaset/bas-gigaset.c:225:
+		    urb->status, (unsigned long) urb->hcpriv,

WARNING:SPLIT_STRING: quoted string split across lines
#275: FILE: drivers/isdn/gigaset/bas-gigaset.c:229:
+		    "  transfer_buffer=0x%08lx[%d], actual_length=%d, "
+		    "bandwidth=%d, setup_packet=0x%08lx,",

CHECK:SPACING: No space is necessary after a cast
#276: FILE: drivers/isdn/gigaset/bas-gigaset.c:230:
+		    (unsigned long) urb->transfer_buffer,

CHECK:SPACING: No space is necessary after a cast
#278: FILE: drivers/isdn/gigaset/bas-gigaset.c:232:
+		    urb->bandwidth, (unsigned long) urb->setup_packet);

WARNING:SPLIT_STRING: quoted string split across lines
#281: FILE: drivers/isdn/gigaset/bas-gigaset.c:235:
+		    "  start_frame=%d, number_of_packets=%d, interval=%d, "
+		    "error_count=%d,",

CHECK:SPACING: No space is necessary after a cast
#286: FILE: drivers/isdn/gigaset/bas-gigaset.c:240:
+		    (unsigned long) urb->context,

CHECK:SPACING: No space is necessary after a cast
#287: FILE: drivers/isdn/gigaset/bas-gigaset.c:241:
+		    (unsigned long) urb->complete);

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: drivers/isdn/gigaset/bas-gigaset.c:244:
+			struct usb_iso_packet_descriptor *pifd = &urb->iso_frame_desc[i];
+			dbg(level,

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: drivers/isdn/gigaset/bas-gigaset.c:246:
+			    "    {offset=%u, length=%u, actual_length=%u, "
+			    "status=%u}",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: drivers/isdn/gigaset/bas-gigaset.c:256:
+static int gigaset_set_modem_ctrl(struct cardstate *cs, unsigned old_state,

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/isdn/gigaset/bas-gigaset.c:257:
+                                  unsigned new_state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/isdn/gigaset/bas-gigaset.c:257:
+                                  unsigned new_state)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#303: FILE: drivers/isdn/gigaset/bas-gigaset.c:257:
+                                  unsigned new_state)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#308: FILE: drivers/isdn/gigaset/bas-gigaset.c:262:
+static int gigaset_baud_rate(struct cardstate *cs, unsigned cflag)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#313: FILE: drivers/isdn/gigaset/bas-gigaset.c:267:
+static int gigaset_set_line_ctrl(struct cardstate *cs, unsigned cflag)

CHECK:SPACING: No space is necessary after a cast
#420: FILE: drivers/isdn/gigaset/bas-gigaset.c:374:
+	struct cardstate *cs = (struct cardstate *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#445: FILE: drivers/isdn/gigaset/bas-gigaset.c:399:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#476: FILE: drivers/isdn/gigaset/bas-gigaset.c:430:
+	ucs->dr_cmd_in.bRequestType = IN_VENDOR_REQ;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#477: FILE: drivers/isdn/gigaset/bas-gigaset.c:431:
+	ucs->dr_cmd_in.bRequest = HD_READ_ATMESSAGE;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#478: FILE: drivers/isdn/gigaset/bas-gigaset.c:432:
+	ucs->dr_cmd_in.wValue = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#479: FILE: drivers/isdn/gigaset/bas-gigaset.c:433:
+	ucs->dr_cmd_in.wIndex = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#480: FILE: drivers/isdn/gigaset/bas-gigaset.c:434:
+	ucs->dr_cmd_in.wLength = cpu_to_le16(ucs->rcvbuf_size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: drivers/isdn/gigaset/bas-gigaset.c:436:
+^I                     usb_rcvctrlpipe(ucs->udev, 0),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: drivers/isdn/gigaset/bas-gigaset.c:437:
+^I                     (unsigned char*) & ucs->dr_cmd_in,$

CHECK:SPACING: No space is necessary after a cast
#483: FILE: drivers/isdn/gigaset/bas-gigaset.c:437:
+	                     (unsigned char*) & ucs->dr_cmd_in,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#483: FILE: drivers/isdn/gigaset/bas-gigaset.c:437:
+	                     (unsigned char*) & ucs->dr_cmd_in,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#483: FILE: drivers/isdn/gigaset/bas-gigaset.c:437:
+	                     (unsigned char*) & ucs->dr_cmd_in,
 	                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: drivers/isdn/gigaset/bas-gigaset.c:438:
+^I                     ucs->rcvbuf, ucs->rcvbuf_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: drivers/isdn/gigaset/bas-gigaset.c:439:
+^I                     read_ctrl_callback, cs->inbuf);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#487: FILE: drivers/isdn/gigaset/bas-gigaset.c:441:
+	if ((ret = usb_submit_urb(ucs->urb_cmd_in, SLAB_ATOMIC)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#496: FILE: drivers/isdn/gigaset/bas-gigaset.c:450:
+		ucs->timer_cmd_in.data = (unsigned long) cs;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#508: FILE: drivers/isdn/gigaset/bas-gigaset.c:462:
+inline static void update_basstate(struct bas_cardstate *ucs,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#522: FILE: drivers/isdn/gigaset/bas-gigaset.c:476:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#537: FILE: drivers/isdn/gigaset/bas-gigaset.c:491:
+	unsigned l;

CHECK:SPACING: No space is necessary after a cast
#541: FILE: drivers/isdn/gigaset/bas-gigaset.c:495:
+	cs = (struct cardstate *) urb->context;

CHECK:SPACING: No space is necessary after a cast
#567: FILE: drivers/isdn/gigaset/bas-gigaset.c:521:
+	l = (unsigned) ucs->int_in_buf[1] +

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#567: FILE: drivers/isdn/gigaset/bas-gigaset.c:521:
+	l = (unsigned) ucs->int_in_buf[1] +

CHECK:SPACING: No space is necessary after a cast
#568: FILE: drivers/isdn/gigaset/bas-gigaset.c:522:
+	    (((unsigned) ucs->int_in_buf[2]) << 8);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#568: FILE: drivers/isdn/gigaset/bas-gigaset.c:522:
+	    (((unsigned) ucs->int_in_buf[2]) << 8);

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: drivers/isdn/gigaset/bas-gigaset.c:573:
+^I^I           &bcs->hw.bas->corrbytes);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#638: FILE: drivers/isdn/gigaset/bas-gigaset.c:592:
+		if ((ucs->rcvbuf = kmalloc(l, GFP_ATOMIC)) == NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#646: FILE: drivers/isdn/gigaset/bas-gigaset.c:600:
+		if ((status = atread_submit(cs, BAS_TIMEOUT)) < 0) {

CHECK:SPACING: No space is necessary after a cast
#665: FILE: drivers/isdn/gigaset/bas-gigaset.c:619:
+		     (int) ucs->int_in_buf[0], l);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#690: FILE: drivers/isdn/gigaset/bas-gigaset.c:644:
+	unsigned numbytes;

CHECK:SPACING: No space is necessary after a cast
#696: FILE: drivers/isdn/gigaset/bas-gigaset.c:650:
+	inbuf = (struct inbuf_t *) urb->context;

WARNING:INDENTED_LABEL: labels should not be indented
#753: FILE: drivers/isdn/gigaset/bas-gigaset.c:707:
+	retry:

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/isdn/gigaset/bas-gigaset.c:752:
+^I             urb->status == -EINPROGRESS)) {$

CHECK:SPACING: No space is necessary after a cast
#804: FILE: drivers/isdn/gigaset/bas-gigaset.c:758:
+	bcs = (struct bc_state *) urb->context;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubc->isoindone"
#809: FILE: drivers/isdn/gigaset/bas-gigaset.c:763:
+	if (likely(ubc->isoindone == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: drivers/isdn/gigaset/bas-gigaset.c:815:
+^I             urb->status == -EINPROGRESS)) {$

CHECK:SPACING: No space is necessary after a cast
#868: FILE: drivers/isdn/gigaset/bas-gigaset.c:822:
+	ucx = (struct isow_urbctx_t *) urb->context;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#930: FILE: drivers/isdn/gigaset/bas-gigaset.c:884:
+		if ((rc = usb_submit_urb(urb, SLAB_ATOMIC)) != 0) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#978: FILE: drivers/isdn/gigaset/bas-gigaset.c:932:
+	ubc->isooutdone = ubc->isooutovfl = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1048: FILE: drivers/isdn/gigaset/bas-gigaset.c:1002:
+		if ((corrbytes = atomic_read(&ubc->corrbytes)) != 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1077: FILE: drivers/isdn/gigaset/bas-gigaset.c:1031:
+	if ((urb->number_of_packets = nframe) > 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1078: FILE: drivers/isdn/gigaset/bas-gigaset.c:1032:
+		if ((rc = usb_submit_urb(urb, SLAB_ATOMIC)) != 0) {

CHECK:SPACING: No space is necessary after a cast
#1109: FILE: drivers/isdn/gigaset/bas-gigaset.c:1063:
+	bcs = (struct bc_state *) data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ubc->isooutfree"
#1152: FILE: drivers/isdn/gigaset/bas-gigaset.c:1106:
+				if (ubc->isooutfree == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1182: FILE: drivers/isdn/gigaset/bas-gigaset.c:1136:
+					warn("isochronous write: frame %d: %s, "
+					     "only %d of %d bytes sent",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1186: FILE: drivers/isdn/gigaset/bas-gigaset.c:1140:
+^I^I^I^I^I          ifd->actual_length)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1187: FILE: drivers/isdn/gigaset/bas-gigaset.c:1141:
+^I^I^I^I^I         % BAS_OUTBUFSIZE;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1196: FILE: drivers/isdn/gigaset/bas-gigaset.c:1150:
+				if (ifd->status != -EINPROGRESS
+				    || ifd->actual_length != 0) {

WARNING:SPLIT_STRING: quoted string split across lines
#1198: FILE: drivers/isdn/gigaset/bas-gigaset.c:1152:
+					warn("isochronous write: frame %d: %s, "
+					     "%d of %d bytes sent",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1202: FILE: drivers/isdn/gigaset/bas-gigaset.c:1156:
+^I^I^I^I^I          ifd->actual_length)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1203: FILE: drivers/isdn/gigaset/bas-gigaset.c:1157:
+^I^I^I^I^I         % BAS_OUTBUFSIZE;$

CHECK:SPACING: No space is necessary after a cast
#1272: FILE: drivers/isdn/gigaset/bas-gigaset.c:1226:
+	bcs = (struct bc_state *) data;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1288: FILE: drivers/isdn/gigaset/bas-gigaset.c:1242:
+		if (!(urb = ubc->isoindone)) {

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#1350: FILE: drivers/isdn/gigaset/bas-gigaset.c:1304:
+				warn("isochronous read: frame %d: offset (%d) + numbytes (%d) > BAS_INBUFSIZE",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:INDENTED_LABEL: labels should not be indented
#1361: FILE: drivers/isdn/gigaset/bas-gigaset.c:1315:
+	error:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1370: FILE: drivers/isdn/gigaset/bas-gigaset.c:1324:
+		if ((rc = usb_submit_urb(urb, SLAB_ATOMIC)) != 0) {

CHECK:SPACING: No space is necessary after a cast
#1389: FILE: drivers/isdn/gigaset/bas-gigaset.c:1343:
+	struct bc_state *bcs = (struct bc_state *) data;

CHECK:SPACING: No space is necessary after a cast
#1454: FILE: drivers/isdn/gigaset/bas-gigaset.c:1408:
+	ucs = (struct bas_cardstate *) urb->context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1518: FILE: drivers/isdn/gigaset/bas-gigaset.c:1472:
+                             usb_sndctrlpipe(ucs->udev, 0),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1518: FILE: drivers/isdn/gigaset/bas-gigaset.c:1472:
+	usb_fill_control_urb(ucs->urb_ctrl, ucs->udev,
+                             usb_sndctrlpipe(ucs->udev, 0),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/isdn/gigaset/bas-gigaset.c:1472:
+                             usb_sndctrlpipe(ucs->udev, 0),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1519: FILE: drivers/isdn/gigaset/bas-gigaset.c:1473:
+                             (unsigned char*) &ucs->dr_ctrl, NULL, 0,$

CHECK:SPACING: No space is necessary after a cast
#1519: FILE: drivers/isdn/gigaset/bas-gigaset.c:1473:
+                             (unsigned char*) &ucs->dr_ctrl, NULL, 0,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/isdn/gigaset/bas-gigaset.c:1473:
+                             (unsigned char*) &ucs->dr_ctrl, NULL, 0,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1519: FILE: drivers/isdn/gigaset/bas-gigaset.c:1473:
+                             (unsigned char*) &ucs->dr_ctrl, NULL, 0,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1520: FILE: drivers/isdn/gigaset/bas-gigaset.c:1474:
+                             write_ctrl_callback, ucs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: drivers/isdn/gigaset/bas-gigaset.c:1474:
+                             write_ctrl_callback, ucs);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1521: FILE: drivers/isdn/gigaset/bas-gigaset.c:1475:
+	if ((ret = usb_submit_urb(ucs->urb_ctrl, SLAB_ATOMIC)) != 0) {

CHECK:SPACING: No space is necessary after a cast
#1532: FILE: drivers/isdn/gigaset/bas-gigaset.c:1486:
+		ucs->timer_ctrl.data = (unsigned long) bcs;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1555: FILE: drivers/isdn/gigaset/bas-gigaset.c:1509:
+	if ((ret = starturbs(bcs)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1563: FILE: drivers/isdn/gigaset/bas-gigaset.c:1517:
+	if ((ret = req_submit(bcs, req, 0, BAS_TIMEOUT)) < 0) {

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#1576: FILE: drivers/isdn/gigaset/bas-gigaset.c:1530:
+ * acknowledgement for the close arrives
    ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1596: FILE: drivers/isdn/gigaset/bas-gigaset.c:1550:
+	if ((ret = req_submit(bcs, req, 0, BAS_TIMEOUT)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1624: FILE: drivers/isdn/gigaset/bas-gigaset.c:1578:
+	if ((cs->cmdbuf = cb->next) != NULL) {

CHECK:SPACING: No space is necessary after a cast
#1654: FILE: drivers/isdn/gigaset/bas-gigaset.c:1608:
+	cs = (struct cardstate *) urb->context;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cs->cmdbuf"
#1676: FILE: drivers/isdn/gigaset/bas-gigaset.c:1630:
+		if (cs->cmdbuf == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cs->cmdbuf"
#1691: FILE: drivers/isdn/gigaset/bas-gigaset.c:1645:
+	if (cs->cmdbuf != NULL)

CHECK:SPACING: No space is necessary after a cast
#1703: FILE: drivers/isdn/gigaset/bas-gigaset.c:1657:
+	struct cardstate *cs = (struct cardstate *) data;

CHECK:SPACING: No space is necessary after a cast
#1753: FILE: drivers/isdn/gigaset/bas-gigaset.c:1707:
+			     (unsigned char*) &ucs->dr_cmd_out, buf, len,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1753: FILE: drivers/isdn/gigaset/bas-gigaset.c:1707:
+			     (unsigned char*) &ucs->dr_cmd_out, buf, len,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1756: FILE: drivers/isdn/gigaset/bas-gigaset.c:1710:
+	if ((ret = usb_submit_urb(ucs->urb_cmd_out, SLAB_ATOMIC)) != 0) {

CHECK:SPACING: No space is necessary after a cast
#1770: FILE: drivers/isdn/gigaset/bas-gigaset.c:1724:
+		ucs->timer_atrdy.data = (unsigned long) cs;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cs->cmdbuf"
#1806: FILE: drivers/isdn/gigaset/bas-gigaset.c:1760:
+			while (cs->cmdbuf != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1847: FILE: drivers/isdn/gigaset/bas-gigaset.c:1801:
+                             const unsigned char *buf, int len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1847: FILE: drivers/isdn/gigaset/bas-gigaset.c:1801:
+                             const unsigned char *buf, int len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1848: FILE: drivers/isdn/gigaset/bas-gigaset.c:1802:
+                             struct tasklet_struct *wake_tasklet)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1848: FILE: drivers/isdn/gigaset/bas-gigaset.c:1802:
+                             struct tasklet_struct *wake_tasklet)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1855: FILE: drivers/isdn/gigaset/bas-gigaset.c:1809:
+^I                     DEBUG_TRANSCMD : DEBUG_LOCKCMD,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1856: FILE: drivers/isdn/gigaset/bas-gigaset.c:1810:
+^I                   "CMD Transmit", len, buf, 0);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1868: FILE: drivers/isdn/gigaset/bas-gigaset.c:1822:
+	if (!(cb = kmalloc(sizeof(struct cmdbuf_t) + len, GFP_ATOMIC))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cb)...) over kmalloc(sizeof(struct cmdbuf_t)...)
#1868: FILE: drivers/isdn/gigaset/bas-gigaset.c:1822:
+	if (!(cb = kmalloc(sizeof(struct cmdbuf_t) + len, GFP_ATOMIC))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#1881: FILE: drivers/isdn/gigaset/bas-gigaset.c:1835:
+	if (cs->lastcmdbuf)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1883: FILE: drivers/isdn/gigaset/bas-gigaset.c:1837:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1920: FILE: drivers/isdn/gigaset/bas-gigaset.c:1874:
+	unsigned bytes;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1941: FILE: drivers/isdn/gigaset/bas-gigaset.c:1895:
+
+

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1957: FILE: drivers/isdn/gigaset/bas-gigaset.c:1911:
+	if (bcs->hw.bas->isooutbuf)
+		kfree(bcs->hw.bas->isooutbuf);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1974: FILE: drivers/isdn/gigaset/bas-gigaset.c:1928:
+	bcs->hw.bas = ubc = kmalloc(sizeof(struct bas_bc_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ubc)...) over kmalloc(sizeof(struct bas_bc_state)...)
#1974: FILE: drivers/isdn/gigaset/bas-gigaset.c:1928:
+	bcs->hw.bas = ubc = kmalloc(sizeof(struct bas_bc_state), GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1987: FILE: drivers/isdn/gigaset/bas-gigaset.c:1941:
+	ubc->isooutdone = ubc->isooutfree = ubc->isooutovfl = NULL;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1989: FILE: drivers/isdn/gigaset/bas-gigaset.c:1943:
+	if (!(ubc->isooutbuf = kmalloc(sizeof(struct isowbuf_t), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ubc->isooutbuf)...) over kmalloc(sizeof(struct isowbuf_t)...)
#1989: FILE: drivers/isdn/gigaset/bas-gigaset.c:1943:
+	if (!(ubc->isooutbuf = kmalloc(sizeof(struct isowbuf_t), GFP_KERNEL))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1996: FILE: drivers/isdn/gigaset/bas-gigaset.c:1950:
+^I             &write_iso_tasklet, (unsigned long) bcs);$

CHECK:SPACING: No space is necessary after a cast
#1996: FILE: drivers/isdn/gigaset/bas-gigaset.c:1950:
+	             &write_iso_tasklet, (unsigned long) bcs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2017: FILE: drivers/isdn/gigaset/bas-gigaset.c:1971:
+^I             &read_iso_tasklet, (unsigned long) bcs);$

CHECK:SPACING: No space is necessary after a cast
#2017: FILE: drivers/isdn/gigaset/bas-gigaset.c:1971:
+	             &read_iso_tasklet, (unsigned long) bcs);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2048: FILE: drivers/isdn/gigaset/bas-gigaset.c:2002:
+	cs->hw.bas = ucs = kmalloc(sizeof *ucs, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *ucs should be sizeof(*ucs)
#2048: FILE: drivers/isdn/gigaset/bas-gigaset.c:2002:
+	cs->hw.bas = ucs = kmalloc(sizeof *ucs, GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#2152: FILE: drivers/isdn/gigaset/bas-gigaset.c:2106:
+	    __func__, le16_to_cpu(udev->descriptor.idVendor),

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#2153: FILE: drivers/isdn/gigaset/bas-gigaset.c:2107:
+	    le16_to_cpu(udev->descriptor.idProduct));

CHECK:CAMELCASE: Avoid CamelCase: <bAlternateSetting>
#2167: FILE: drivers/isdn/gigaset/bas-gigaset.c:2121:
+	if (hostif->desc.bAlternateSetting != 3) {

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#2171: FILE: drivers/isdn/gigaset/bas-gigaset.c:2125:
+		if (usb_set_interface(udev, hostif->desc.bInterfaceNumber, 3) < 0) {

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#2182: FILE: drivers/isdn/gigaset/bas-gigaset.c:2136:
+	if (hostif->desc.bInterfaceClass != 255) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2253: FILE: drivers/isdn/gigaset/bas-gigaset.c:2207:
+^I                 usb_rcvintpipe(udev,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2254: FILE: drivers/isdn/gigaset/bas-gigaset.c:2208:
+^I                                (endpoint->bEndpointAddress) & 0x0f),$

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#2254: FILE: drivers/isdn/gigaset/bas-gigaset.c:2208:
+	                                (endpoint->bEndpointAddress) & 0x0f),

ERROR:CODE_INDENT: code indent should use tabs where possible
#2255: FILE: drivers/isdn/gigaset/bas-gigaset.c:2209:
+^I                 ucs->int_in_buf, 3, read_int_callback, cs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2256: FILE: drivers/isdn/gigaset/bas-gigaset.c:2210:
+^I                 endpoint->bInterval);$

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#2256: FILE: drivers/isdn/gigaset/bas-gigaset.c:2210:
+	                 endpoint->bInterval);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2264: FILE: drivers/isdn/gigaset/bas-gigaset.c:2218:
+	if ((ret = req_submit(cs->bcs, HD_DEVICE_INIT_ACK, 0, 0)) != 0)

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#2340: FILE: drivers/isdn/gigaset/bas-gigaset.c:2294:
+	/* allocate memory for our driver state and intialize it */
 	                                            ^^^^^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2341: FILE: drivers/isdn/gigaset/bas-gigaset.c:2295:
+	if ((driver = gigaset_initdriver(GIGASET_MINOR, GIGASET_MINORS,

ERROR:CODE_INDENT: code indent should use tabs where possible
#2342: FILE: drivers/isdn/gigaset/bas-gigaset.c:2296:
+^I                               GIGASET_MODULENAME, GIGASET_DEVNAME,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2342: FILE: drivers/isdn/gigaset/bas-gigaset.c:2296:
+	if ((driver = gigaset_initdriver(GIGASET_MINOR, GIGASET_MINORS,
+	                               GIGASET_MODULENAME, GIGASET_DEVNAME,

ERROR:CODE_INDENT: code indent should use tabs where possible
#2343: FILE: drivers/isdn/gigaset/bas-gigaset.c:2297:
+^I                               GIGASET_DEVFSNAME, &gigops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2344: FILE: drivers/isdn/gigaset/bas-gigaset.c:2298:
+^I                               THIS_MODULE)) == NULL)$

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#2347: FILE: drivers/isdn/gigaset/bas-gigaset.c:2301:
+	/* allocate memory for our device state and intialize it */
 	                                            ^^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#2363: FILE: drivers/isdn/gigaset/bas-gigaset.c:2317:
+error:	if (cardstate)
+		gigaset_freecs(cardstate);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2378: FILE: drivers/isdn/gigaset/bas-gigaset.c:2332:
+^I                              * => no gigaset_start any more$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2379: FILE: drivers/isdn/gigaset/bas-gigaset.c:2333:
+^I                              */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2387: FILE: drivers/isdn/gigaset/bas-gigaset.c:2341:
+^I^I               HD_CLOSE_ATCHANNEL, 0, BAS_TIMEOUT) >= 0) {$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2405: FILE: drivers/isdn/gigaset/bas-gigaset.c:2359:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 37 warnings, 65 checks, 2365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105589.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
