WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#59: FILE: include/linux/ktimer.h:90:
+	int			(*function)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: include/linux/ktimer.h:160:
+extern void ktimer_forward(struct ktimer *timer,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: include/linux/ktimer.h:161:
+extern void ktimer_forward(struct ktimer *timer,
+		    const ktime_t interval, const ktime_t now);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/timer.h:99:
+extern int it_real_fn(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#193: FILE: include/linux/timer.h:99:
+extern int it_real_fn(void *);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#238: FILE: kernel/ktimer.c:302:
+	dclc = dns = ktime_to_ns(kt);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: kernel/ktimer.c:305:
+	while(div >> 32) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#246: FILE: kernel/ktimer.c:310:
+	do_div(dclc, (unsigned long) div);

CHECK:SPACING: No space is necessary after a cast
#247: FILE: kernel/ktimer.c:311:
+	return (unsigned long) dclc;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#253: FILE: kernel/ktimer.c:317:
+# define ktime_divns(kt, div)		(unsigned long)((kt).tv64 / (div))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: kernel/ktimer.c:341:
+void ktimer_forward(struct ktimer *timer,
+			 const ktime_t interval, const ktime_t now)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#365: FILE: kernel/ktimer.c:818:
+		int (*fn)(void *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: kernel/posix-timers.c:789:
+	timr->it.real.interval = ktimer_round_timespec(&timr->it.real,
+						   &new_setting->it_interval);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129828.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 8 checks, 495 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129828.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
