Use of uninitialized value $typo_fix in concatenation (.) or string at /home/fedora/lkml-analysis/linux/scripts/checkpatch.pl line 3367.
WARNING:TYPO_SPELLING: 'msdos' may be misspelled - perhaps ''?
#14: 
Subject: [patch] fat/msdos/vfat crud removal
                     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#29: FILE: fs/fat/cache.c:70:
+		next = le32_to_cpu(((__u32 *) bh->b_data)[(first &

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#36: FILE: fs/fat/cache.c:76:
+		next = le16_to_cpu(((__u16 *) bh->b_data)[(first &

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#45: FILE: fs/fat/cache.c:89:
 			((__u32 *)bh->b_data)[(first & (sb->s_blocksize - 1)) >> 2]
+				= cpu_to_le32(new_value);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#49: FILE: fs/fat/cache.c:92:
 			((__u16 *)bh->b_data)[(first & (sb->s_blocksize - 1)) >> 1]
+				= cpu_to_le16(new_value);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#62: FILE: fs/fat/dir.c:771:
+	de[0].time = de[1].time = cpu_to_le16(time);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#63: FILE: fs/fat/dir.c:772:
+	de[0].date = de[1].date = cpu_to_le16(date);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#66: FILE: fs/fat/dir.c:774:
+		de[0].ctime = de[1].ctime = cpu_to_le16(time);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#69: FILE: fs/fat/dir.c:776:
+			de[1].adate = de[1].cdate = cpu_to_le16(date);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#76: FILE: fs/fat/dir.c:779:
+	de[0].starthi = cpu_to_le16(MSDOS_I(dir)->i_logstart>>16);
 	                                                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#78: FILE: fs/fat/dir.c:781:
+	de[1].starthi = cpu_to_le16(MSDOS_I(parent)->i_logstart>>16);
 	                                                       ^

CHECK:SPACING: No space is necessary after a cast
#90: FILE: fs/fat/inode.c:715:
+		le16_to_cpu(get_unaligned((unsigned short *) &b->sector_size));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: fs/fat/inode.c:1068:
+		date_dos2unix(le16_to_cpu(de->time),le16_to_cpu(de->date));
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: fs/fat/inode.c:1071:
+		? date_dos2unix(le16_to_cpu(de->ctime),le16_to_cpu(de->cdate))
 		                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: fs/fat/misc.c:408:
+             (MSDOS_SB(sb)->fat_bits != 32) ? 0 : (le16_to_cpu(data[entry].starthi) << 16) \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/fat/misc.c:408:
+             (MSDOS_SB(sb)->fat_bits != 32) ? 0 : (le16_to_cpu(data[entry].starthi) << 16) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: fs/fat/misc.c:410:
+           | le16_to_cpu(data[entry].start) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: fs/fat/misc.c:410:
+           | le16_to_cpu(data[entry].start) \$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#291: FILE: fs/vfat/namei.c:1261:
+		dotdot_de->starthi = cpu_to_le16(start>>16);
 		                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#304: FILE: include/linux/msdos_fs.h:83:
+#define IS_FSINFO(x)	(le32_to_cpu((x)->signature1) == FAT_FSINFO_SIG1	\
+			 && le32_to_cpu((x)->signature2) == FAT_FSINFO_SIG2)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#305: FILE: include/linux/msdos_fs.h:84:
+#define IS_FSINFO(x)	(le32_to_cpu((x)->signature1) == FAT_FSINFO_SIG1	\
+			 && le32_to_cpu((x)->signature2) == FAT_FSINFO_SIG2)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 14 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
