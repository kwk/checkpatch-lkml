WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
        void *dma_pool_alloc(struct dma_pool *, int mem_flags, dma_addr_t *)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: include/asm-generic/dma-mapping.h:162:
+dma_alloc (struct device *dev, size_t size, dma_addr_t *handle, int mem_flags);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#94: FILE: include/asm-generic/dma-mapping.h:165:
+dma_free (struct device *dev, size_t size, void *vaddr, dma_addr_t dma);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: include/asm-generic/dma-mapping.h:167:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: include/asm-generic/dma-mapping.h:171:
+dma_pool_create (const char *name, struct device *dev, size_t size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#102: FILE: include/asm-generic/dma-mapping.h:173:
+	BUG_ON(dev->bus != &pci_bus_type);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: include/asm-generic/dma-slab.h:1:
+#ifndef _ASM_GENERIC_DMA_SLAB_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: include/asm-generic/dma-slab.h:6:
+dma_alloc (struct device *dev, size_t size, dma_addr_t *handle, int mem_flags)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: include/asm-generic/dma-slab.h:14:
+	ret = kmalloc (size, mem_flags | __dma_slab_flags (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: include/asm-generic/dma-slab.h:14:
+	ret = kmalloc (size, mem_flags | __dma_slab_flags (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: include/asm-generic/dma-slab.h:15:
+	if (likely (ret != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 0'
#131: FILE: include/asm-generic/dma-slab.h:15:
+	if (likely (ret != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: include/asm-generic/dma-slab.h:16:
+		*handle = virt_to_phys (ret);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: include/asm-generic/dma-slab.h:21:
+dma_free (struct device *dev, size_t size, void *vaddr, dma_addr_t dma)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: include/asm-generic/dma-slab.h:23:
+	kfree (vaddr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: include/asm-generic/dma-slab.h:26:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: include/asm-generic/dma-slab.h:29:
+^Ikmem_cache_t ^I*cache;$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#147: FILE: include/asm-generic/dma-slab.h:31:
+	char		name [0];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: include/asm-generic/dma-slab.h:35:
+dma_pool_create (const char *name, struct device *dev, size_t size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: include/asm-generic/dma-slab.h:37:
+extern void dma_pool_destroy (struct dma_pool *pool);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/asm-generic/dma-slab.h:37:
+extern void dma_pool_destroy (struct dma_pool *pool);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: include/asm-generic/dma-slab.h:39:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: include/asm-generic/dma-slab.h:42:
+dma_pool_alloc (struct dma_pool *pool, int flags, dma_addr_t *handle)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: include/asm-generic/dma-slab.h:46:
+	ret = kmem_cache_alloc (pool->cache, flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: include/asm-generic/dma-slab.h:47:
+	if (likely (ret != 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 0'
#163: FILE: include/asm-generic/dma-slab.h:47:
+	if (likely (ret != 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: include/asm-generic/dma-slab.h:48:
+		*handle = virt_to_phys (ret);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: include/asm-generic/dma-slab.h:53:
+dma_pool_free (struct dma_pool *pool, void *vaddr, dma_addr_t addr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#171: FILE: include/asm-generic/dma-slab.h:55:
+	kmem_cache_free (pool->cache, vaddr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#191: FILE: include/asm-ppc/dma-mapping.h:1:
+#ifndef CONFIG_NOT_COHERENT_CACHE

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#201: FILE: include/asm-um/dma-mapping.h:1:
+/* use the slab allocator to manage dma buffers */

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#208: FILE: include/asm-arm/dma-mapping.h:1:
+#ifdef	CONFIG_SA1111

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#217: FILE: drivers/base/dma.c:1:
+/* the non-inlined support for coherent dma memory buffer calls */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#226: FILE: drivers/base/dma.c:10:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#231: FILE: drivers/base/dma.c:15:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/base/dma.c:24:
+dma_pool_create (const char *name, struct device *dev, size_t size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: drivers/base/dma.c:29:
+	tmp = strlen (name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: drivers/base/dma.c:30:
+	pool = kmalloc (sizeof *pool + tmp + strlen (dev->bus_id) + 2, SLAB_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: drivers/base/dma.c:30:
+	pool = kmalloc (sizeof *pool + tmp + strlen (dev->bus_id) + 2, SLAB_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *pool should be sizeof(*pool)
#246: FILE: drivers/base/dma.c:30:
+	pool = kmalloc (sizeof *pool + tmp + strlen (dev->bus_id) + 2, SLAB_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: drivers/base/dma.c:35:
+	memcpy (pool->name, name, tmp);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#252: FILE: drivers/base/dma.c:36:
+	pool->name [tmp] = '/';

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#253: FILE: drivers/base/dma.c:37:
+	strcpy (&pool->name [tmp + 1], dev->bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/base/dma.c:37:
+	strcpy (&pool->name [tmp + 1], dev->bus_id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: drivers/base/dma.c:40:
+	if (__dma_slab_flags (dev) & SLAB_DMA)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#259: FILE: drivers/base/dma.c:43:
+	pool->cache = kmem_cache_create (pool->name, size, 0, tmp, 0, 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#260: FILE: drivers/base/dma.c:44:
+	if (!pool->cache) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#261: FILE: drivers/base/dma.c:45:
+		kfree (pool);

CHECK:BRACES: Unbalanced braces around else statement
#263: FILE: drivers/base/dma.c:47:
+	} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: drivers/base/dma.c:48:
+		pool->dev = get_device (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: drivers/base/dma.c:51:
+EXPORT_SYMBOL (dma_pool_create);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: drivers/base/dma.c:53:
+void dma_pool_destroy (struct dma_pool *pool)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#271: FILE: drivers/base/dma.c:55:
+	kmem_cache_destroy (pool->cache);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: drivers/base/dma.c:56:
+	put_device (pool->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: drivers/base/dma.c:57:
+	kfree (pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: drivers/base/dma.c:59:
+EXPORT_SYMBOL (dma_pool_destroy);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: drivers/base/dma.c:61:
+#elif	defined (CONFIG_PCI)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: drivers/base/dma.c:71:
+dma_alloc (struct device *dev, size_t size, dma_addr_t *handle, int mem_flags)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#291: FILE: drivers/base/dma.c:75:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: drivers/base/dma.c:78:
+		return pci_alloc_consistent (pdev, size, handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: drivers/base/dma.c:90:
+EXPORT_SYMBOL (dma_alloc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: drivers/base/dma.c:93:
+dma_free (struct device *dev, size_t size, void *vaddr, dma_addr_t dma)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#313: FILE: drivers/base/dma.c:97:
+	BUG_ON(dev->bus != &pci_bus_type);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: drivers/base/dma.c:99:
+	pci_free_consistent (pdev, size, vaddr, dma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#317: FILE: drivers/base/dma.c:101:
+EXPORT_SYMBOL (dma_free);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#319: FILE: drivers/base/dma.c:103:
+
+

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: include/asm-generic/pci-dma-compat.h:39:
+pci_pool_create (const char *name, struct pci_dev *hwdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#585: FILE: include/asm-generic/pci-dma-compat.h:40:
+pci_pool_create (const char *name, struct pci_dev *hwdev,
+		size_t size, size_t align, size_t allocation)

CHECK:SPACING: No space is necessary after a cast
#596: FILE: include/asm-generic/pci-dma-compat.h:51:
+	return (struct pci_pool *) dma_pool_create(name, &hwdev->dev, size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: include/asm-generic/pci-dma-compat.h:54:
+static inline void pci_pool_destroy (struct pci_pool *pool)

CHECK:SPACING: No space is necessary after a cast
#601: FILE: include/asm-generic/pci-dma-compat.h:56:
+	dma_pool_destroy ((struct dma_pool *) pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#601: FILE: include/asm-generic/pci-dma-compat.h:56:
+	dma_pool_destroy ((struct dma_pool *) pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#605: FILE: include/asm-generic/pci-dma-compat.h:60:
+pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle)

CHECK:SPACING: No space is necessary after a cast
#607: FILE: include/asm-generic/pci-dma-compat.h:62:
+	return dma_pool_alloc((struct dma_pool *) pool, flags, handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#611: FILE: include/asm-generic/pci-dma-compat.h:66:
+pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr)

CHECK:SPACING: No space is necessary after a cast
#613: FILE: include/asm-generic/pci-dma-compat.h:68:
+	return dma_pool_free((struct dma_pool *) pool, vaddr, addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#643: FILE: include/asm-alpha/pci.h:85:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: include/asm-alpha/pci.h:86:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#645: FILE: include/asm-alpha/pci.h:87:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: include/asm-alpha/pci.h:89:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#648: FILE: include/asm-alpha/pci.h:90:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: include/asm-arm/pci.h:80:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: include/asm-arm/pci.h:81:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: include/asm-arm/pci.h:82:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#664: FILE: include/asm-arm/pci.h:84:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#665: FILE: include/asm-arm/pci.h:85:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#677: FILE: include/asm-ia64/pci.h:62:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: include/asm-ia64/pci.h:63:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#679: FILE: include/asm-ia64/pci.h:64:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#681: FILE: include/asm-ia64/pci.h:66:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: include/asm-ia64/pci.h:67:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#694: FILE: include/asm-mips/pci.h:81:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: include/asm-mips/pci.h:82:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#696: FILE: include/asm-mips/pci.h:83:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: include/asm-mips/pci.h:85:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#699: FILE: include/asm-mips/pci.h:86:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#711: FILE: include/asm-mips64/pci.h:74:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: include/asm-mips64/pci.h:75:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#713: FILE: include/asm-mips64/pci.h:76:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: include/asm-mips64/pci.h:78:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#716: FILE: include/asm-mips64/pci.h:79:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: include/asm-parisc/pci.h:150:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#729: FILE: include/asm-parisc/pci.h:151:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#730: FILE: include/asm-parisc/pci.h:152:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#732: FILE: include/asm-parisc/pci.h:154:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#733: FILE: include/asm-parisc/pci.h:155:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: include/asm-ppc/pci.h:95:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: include/asm-ppc/pci.h:96:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: include/asm-ppc/pci.h:97:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#749: FILE: include/asm-ppc/pci.h:99:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#750: FILE: include/asm-ppc/pci.h:100:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#762: FILE: include/asm-ppc64/pci.h:47:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: include/asm-ppc64/pci.h:48:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#764: FILE: include/asm-ppc64/pci.h:49:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#766: FILE: include/asm-ppc64/pci.h:51:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: include/asm-ppc64/pci.h:52:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#779: FILE: include/asm-sh/pci.h:75:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: include/asm-sh/pci.h:76:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: include/asm-sh/pci.h:77:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: include/asm-sh/pci.h:79:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#784: FILE: include/asm-sh/pci.h:80:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#796: FILE: include/asm-sparc/pci.h:51:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#797: FILE: include/asm-sparc/pci.h:52:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#798: FILE: include/asm-sparc/pci.h:53:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#800: FILE: include/asm-sparc/pci.h:55:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#801: FILE: include/asm-sparc/pci.h:56:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#813: FILE: include/asm-sparc64/pci.h:59:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: include/asm-sparc64/pci.h:60:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#815: FILE: include/asm-sparc64/pci.h:61:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#817: FILE: include/asm-sparc64/pci.h:63:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#818: FILE: include/asm-sparc64/pci.h:64:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#830: FILE: include/asm-v850/pci.h:78:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: include/asm-v850/pci.h:79:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#832: FILE: include/asm-v850/pci.h:80:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#834: FILE: include/asm-v850/pci.h:82:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#835: FILE: include/asm-v850/pci.h:83:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#845: FILE: include/asm-x86_64/pci.h:73:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: include/asm-x86_64/pci.h:74:
+struct pci_pool *pci_pool_create (const char *name, struct pci_dev *dev,
+		size_t size, size_t align, size_t allocation);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#847: FILE: include/asm-x86_64/pci.h:75:
+void pci_pool_destroy (struct pci_pool *pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#849: FILE: include/asm-x86_64/pci.h:77:
+void *pci_pool_alloc (struct pci_pool *pool, int flags, dma_addr_t *handle);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#850: FILE: include/asm-x86_64/pci.h:78:
+void pci_pool_free (struct pci_pool *pool, void *vaddr, dma_addr_t addr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 135 warnings, 28 checks, 697 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
