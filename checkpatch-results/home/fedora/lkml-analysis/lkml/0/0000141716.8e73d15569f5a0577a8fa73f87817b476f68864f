WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==
[...]
+                set_current_state(TASK_INTERRUPTIBLE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'n == 0'
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==
NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inp == NULL'
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==
NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'outp == NULL'
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==
NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'exp ==
 ULL'
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==
NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inp"
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!outp"
#52: FILE: fs/select.c:290:
+       if ((n == 0) && (inp == NULL) && (outp == NULL) && (exp ==

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#53: FILE: fs/select.c:290:
NULL)) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: fs/select.c:291:
+                set_current_state(TASK_INTERRUPTIBLE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: fs/select.c:291:
+                set_current_state(TASK_INTERRUPTIBLE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: fs/select.c:292:
+                ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: fs/select.c:292:
+                ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: fs/select.c:293:
+                timeout = schedule_timeout(timeout);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: fs/select.c:293:
+                timeout = schedule_timeout(timeout);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: fs/select.c:296:
+                if (signal_pending(current))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: fs/select.c:296:
+                if (signal_pending(current))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: fs/select.c:297:
+                        ret = -ERESTARTNOHAND;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/select.c:297:
+                        ret = -ERESTARTNOHAND;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: fs/select.c:300:
+                if (tvp && !(current->personality & STICKY_TIMEOUTS)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/select.c:300:
+                if (tvp && !(current->personality & STICKY_TIMEOUTS)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: fs/select.c:301:
+                        time_t sec = 0, usec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/select.c:301:
+                        time_t sec = 0, usec = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: fs/select.c:302:
+                        if (timeout) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#65: FILE: fs/select.c:302:
+                        time_t sec = 0, usec = 0;
+                        if (timeout) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/select.c:302:
+                        if (timeout) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: fs/select.c:303:
+                                sec = timeout / HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/select.c:303:
+                                sec = timeout / HZ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: fs/select.c:304:
+                                usec = timeout % HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/select.c:304:
+                                usec = timeout % HZ;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: fs/select.c:305:
+                                usec *= (1000000 / HZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: fs/select.c:305:
+                                usec *= (1000000 / HZ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: fs/select.c:306:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/select.c:306:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: fs/select.c:307:
+                        put_user(sec, &tvp->tv_sec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: fs/select.c:307:
+                        put_user(sec, &tvp->tv_sec);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: fs/select.c:308:
+                        put_user(usec, &tvp->tv_usec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: fs/select.c:308:
+                        put_user(usec, &tvp->tv_usec);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: fs/select.c:309:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: fs/select.c:309:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: fs/select.c:312:
+                current->state = TASK_RUNNING;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: fs/select.c:312:
+                current->state = TASK_RUNNING;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: fs/select.c:313:
+                goto out_nofds;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: fs/select.c:313:
+                goto out_nofds;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: fs/select.c:314:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: fs/select.c:314:
+        }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 21 warnings, 6 checks, 30 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000141716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
