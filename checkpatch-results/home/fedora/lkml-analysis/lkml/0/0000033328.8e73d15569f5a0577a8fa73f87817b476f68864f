WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
    1,     1 swapper          neigh_table_init_no_netlink (neigh_periodic_timer)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/hrtimer.h:271:
+extern void tstats_update_stats(void *timer, pid_t pid, void *startf,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/linux/hrtimer.h:272:
+				void *timerf, char * comm);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: include/linux/hrtimer.h:280:
+extern void __tstats_hrtimer_set_start_info(struct hrtimer *timer, void *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/timer.h:88:
+extern void tstats_update_stats(void *timer, pid_t pid, void *startf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: include/linux/timer.h:89:
+				void *timerf, char * comm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: include/linux/timer.h:97:
+extern void __tstats_timer_set_start_info(struct timer_list *timer, void *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/linux/timer.h:122:
+extern void delayed_work_timer_fn(unsigned long __data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: include/linux/timer.h:124:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#292: FILE: kernel/time/timer_stats.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#293: FILE: kernel/time/timer_stats.c:2:
+ * kernel/time/timer_stats.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#326: FILE: kernel/time/timer_stats.c:35:
+#include <asm/uaccess.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#353: FILE: kernel/time/timer_stats.c:62:
+			 void *timerf, char * comm)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#368: FILE: kernel/time/timer_stats.c:77:
+		    entry->pid == pid) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: kernel/time/timer_stats.c:104:
+	char namebuf[KSYM_NAME_LEN+1];
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#416: FILE: kernel/time/timer_stats.c:125:
+	switch(tstats_status) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#478: FILE: kernel/time/timer_stats.c:187:
+		if (tstats_status == TSTATS_INACTIVE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#484: FILE: kernel/time/timer_stats.c:193:
+		} else

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#494: FILE: kernel/time/timer_stats.c:203:
+static int tstats_open(struct inode *inode, struct file *filp)
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#496: FILE: kernel/time/timer_stats.c:205:
+	return single_open(filp, tstats_show, NULL);
 	                   ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#499: FILE: kernel/time/timer_stats.c:208:
+static struct file_operations tstats_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000033328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 7 warnings, 10 checks, 559 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000033328.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
