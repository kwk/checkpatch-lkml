CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/asm-i386/apic.h:121:
+extern int lapic_disable(char *str);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/asm-i386/apic.h:122:
+extern int lapic_enable(char *str);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: arch/i386/kernel/acpi/boot.c:777:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/i386/kernel/acpi/boot.c:783:
+^Iif (enable_local_apic <= 0) { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#104: FILE: arch/i386/kernel/acpi/boot.c:784:
+		printk(KERN_INFO "ACPI: local apic disabled\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/i386/kernel/acpi/boot.c:787:
+#endif^I   $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#121: FILE: arch/i386/kernel/io_apic.c:694:
+int skip_ioapic_setup = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#133: FILE: arch/i386/kernel/apic.c:672:
+int enable_local_apic __initdata = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/i386/kernel/apic.c:692:
+^Iif (*str == '=') $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#157: FILE: arch/i386/kernel/apic.c:694:
+	if (*str == 0) {
[...]
+	} else if (strcmp("debug", str) == 0)
[...]
 	else if (strcmp("verbose", str) == 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: arch/i386/kernel/apic.c:695:
+^I^I/* parsed early already */ $

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#168: FILE: arch/i386/kernel/apic.c:707:
+__setup("apic", apic_set_verbosity);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/i386/kernel/apic.c:715:
+^Iif (enable_local_apic < 1) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: arch/i386/kernel/apic.c:716:
+^I^Ireturn -1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/i386/kernel/apic.c:1253:
+^Iif (enable_local_apic <= 0) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: arch/i386/kernel/apic.c:1263:
+^Iif (!smp_found_config && !cpu_has_apic) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/i386/kernel/setup.c:816:
+^I^I        lapic_enable(from+4);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#255: FILE: arch/i386/kernel/setup.c:816:
+		        lapic_enable(from+4);
 		                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: arch/i386/kernel/setup.c:818:
+^I^I        lapic_enable(from+7);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#257: FILE: arch/i386/kernel/setup.c:818:
+		        lapic_enable(from+7);
 		                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/i386/kernel/setup.c:820:
+^I^I        lapic_disable(from+7);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#259: FILE: arch/i386/kernel/setup.c:820:
+		        lapic_disable(from+7);
 		                          ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#271: FILE: arch/i386/Kconfig:566:
+config X86_APIC_OFF
+        bool "Disable local/IO APIC by default" 
+	depends on X86_LOCAL_APIC 
+	default n
+	help
+	  When this option is enabled the IO/local APIC code is compiled in, but 
+	  only enabled when the kernel is booted with "apic" on the kernel 
+	  command line  or an DMI entry forced APIC mode. 
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: arch/i386/Kconfig:567:
+        bool "Disable local/IO APIC by default" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: arch/i386/Kconfig:568:
+^Idepends on X86_LOCAL_APIC $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: arch/i386/Kconfig:571:
+^I  When this option is enabled the IO/local APIC code is compiled in, but $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: arch/i386/Kconfig:572:
+^I  only enabled when the kernel is booted with "apic" on the kernel $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: arch/i386/Kconfig:573:
+^I  command line  or an DMI entry forced APIC mode. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/x86_64/kernel/apic.c:1027:
+int enable_local_apic = 1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/x86_64/kernel/apic.c:1041:
+^I^Ienable_local_apic = -1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: Documentation/kernel-parameters.txt:218:
+^I                uniprocessor systems. When CONFIG_X86_APIC_OFF is set it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: Documentation/kernel-parameters.txt:219:
+^I^I^Ineeds this parameter to really activate it (needed to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: Documentation/kernel-parameters.txt:220:
+^I^I^Iavoid problems with certain machines). This enables IO $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: Documentation/kernel-parameters.txt:222:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 3 warnings, 6 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000211321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
