WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urN linux-2.5.33/arch/s390/config.in linux-2.5.33-ltt/arch/s390/config.in

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: arch/s390/kernel/entry.S:188:
+#if (CONFIG_TRACE || CONFIG_TRACE_MODULE) /* tjh - ltt port */              $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: arch/s390/kernel/entry.S:189:
+        /* add call to trace_real_syscall_entry */                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: arch/s390/kernel/entry.S:190:
+        la      %r2,SP_PTREGS(%r15)   # load pt_regs as first parameter     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: arch/s390/kernel/entry.S:191:
+        l       %r1,BASED(.Ltracesysent)                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: arch/s390/kernel/entry.S:192:
+        basr    %r14,%r1                                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: arch/s390/kernel/entry.S:193:
+        lm      %r0,%r6,SP_R0(%r15) /* restore call clobbered regs tjh */   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/s390/kernel/entry.S:203:
+#if (CONFIG_TRACE || CONFIG_TRACE_MODULE) /* tjh - ltt port *            $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: arch/s390/kernel/entry.S:204:
+        /* add call to trace_real_syscall_exit */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: arch/s390/kernel/entry.S:205:
+        la      %r2,SP_PTREGS(%r15)   # load pt_regs as first parameter  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/s390/kernel/entry.S:206:
+        l       %r1,BASED(.Ltracesysext)                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: arch/s390/kernel/entry.S:207:
+        basr    %r14,%r1                                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: arch/s390/kernel/entry.S:209:
+#endif                                                                   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: arch/s390/kernel/entry.S:916:
+.Ltracesysext: .long  trace_real_syscall_exit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: arch/s390/kernel/process.c:149:
+#if (CONFIG_TRACE || CONFIG_TRACE_MODULE)                           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: arch/s390/kernel/process.c:150:
+        if (retval > 0)                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/s390/kernel/process.c:150:
+        if (retval > 0)                                             $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/s390/kernel/process.c:150:
+        if (retval > 0)                                             $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#113: FILE: arch/s390/kernel/process.c:150:
+        if (retval > 0)                                             
+          TRACE_PROCESS(TRACE_EV_PROCESS_KTHREAD, retval, (int) fn);

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: arch/s390/kernel/process.c:151:
+          TRACE_PROCESS(TRACE_EV_PROCESS_KTHREAD, retval, (int) fn);$

CHECK:SPACING: No space is necessary after a cast
#114: FILE: arch/s390/kernel/process.c:151:
+          TRACE_PROCESS(TRACE_EV_PROCESS_KTHREAD, retval, (int) fn);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/s390/kernel/process.c:151:
+          TRACE_PROCESS(TRACE_EV_PROCESS_KTHREAD, retval, (int) fn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/s390/kernel/sys_s390.c:149:
+        TRACE_IPC(TRACE_EV_IPC_CALL, call, first);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/s390/kernel/sys_s390.c:149:
+        TRACE_IPC(TRACE_EV_IPC_CALL, call, first);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/s390/kernel/traps.c:281:
+         trapid_t ltt_interruption_code; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/s390/kernel/traps.c:281:
+         trapid_t ltt_interruption_code; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/s390/kernel/traps.c:281:
+         trapid_t ltt_interruption_code; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/s390/kernel/traps.c:282:
+         char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#164: FILE: arch/s390/kernel/traps.c:282:
+         char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/s390/kernel/traps.c:282:
+         char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: arch/s390/kernel/traps.c:282:
+         char * ic_ptr = (char *) &ltt_interruption_code;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: arch/s390/kernel/traps.c:283:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/s390/kernel/traps.c:283:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/s390/kernel/traps.c:291:
+         memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/s390/kernel/traps.c:291:
+         memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: arch/s390/kernel/traps.c:291:
+         memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: arch/s390/kernel/traps.c:291:
+         memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/s390/kernel/traps.c:292:
+         memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/s390/kernel/traps.c:292:
+         memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: arch/s390/kernel/traps.c:292:
+         memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#174: FILE: arch/s390/kernel/traps.c:292:
+         memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#174: FILE: arch/s390/kernel/traps.c:292:
+         memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: arch/s390/kernel/traps.c:292:
+         memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/s390/kernel/traps.c:293:
+         TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/s390/kernel/traps.c:293:
+         TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: arch/s390/kernel/traps.c:421:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/s390/kernel/traps.c:421:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/s390/kernel/traps.c:422:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#193: FILE: arch/s390/kernel/traps.c:422:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/s390/kernel/traps.c:422:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#193: FILE: arch/s390/kernel/traps.c:422:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/s390/kernel/traps.c:434:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/s390/kernel/traps.c:434:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: arch/s390/kernel/traps.c:434:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: arch/s390/kernel/traps.c:434:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/s390/kernel/traps.c:435:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/s390/kernel/traps.c:435:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#202: FILE: arch/s390/kernel/traps.c:435:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#202: FILE: arch/s390/kernel/traps.c:435:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#202: FILE: arch/s390/kernel/traps.c:435:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: arch/s390/kernel/traps.c:435:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/s390/kernel/traps.c:436:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/s390/kernel/traps.c:436:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/s390/kernel/traps.c:478:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/s390/kernel/traps.c:478:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/s390/kernel/traps.c:489:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/s390/kernel/traps.c:489:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/s390/kernel/traps.c:490:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/s390/kernel/traps.c:490:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/s390/kernel/traps.c:490:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: arch/s390/kernel/traps.c:490:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/s390/kernel/traps.c:502:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/s390/kernel/traps.c:502:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: arch/s390/kernel/traps.c:502:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#230: FILE: arch/s390/kernel/traps.c:502:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/s390/kernel/traps.c:503:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/s390/kernel/traps.c:503:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: arch/s390/kernel/traps.c:503:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#231: FILE: arch/s390/kernel/traps.c:503:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#231: FILE: arch/s390/kernel/traps.c:503:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: arch/s390/kernel/traps.c:503:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/s390/kernel/traps.c:504:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/s390/kernel/traps.c:504:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/s390/kernel/traps.c:549:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/s390/kernel/traps.c:549:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/s390/kernel/traps.c:559:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/s390/kernel/traps.c:559:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/s390/kernel/traps.c:560:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#249: FILE: arch/s390/kernel/traps.c:560:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/s390/kernel/traps.c:560:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: arch/s390/kernel/traps.c:560:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: arch/s390/kernel/traps.c:572:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/s390/kernel/traps.c:572:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: arch/s390/kernel/traps.c:572:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#257: FILE: arch/s390/kernel/traps.c:572:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: arch/s390/kernel/traps.c:573:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/s390/kernel/traps.c:573:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#258: FILE: arch/s390/kernel/traps.c:573:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#258: FILE: arch/s390/kernel/traps.c:573:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#258: FILE: arch/s390/kernel/traps.c:573:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#258: FILE: arch/s390/kernel/traps.c:573:
+        memcpy(ic_ptr+4,&interruption_code,sizeof(interruption_code));
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/s390/kernel/traps.c:574:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/s390/kernel/traps.c:574:
+        TRACE_TRAP_ENTRY(ltt_interruption_code, (regs->psw.addr & PSW_ADDR_MASK));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/s390/kernel/traps.c:651:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/s390/kernel/traps.c:651:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/s390/kernel/traps.c:706:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/s390/kernel/traps.c:706:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/s390/kernel/traps.c:707:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

CHECK:SPACING: No space is necessary after a cast
#277: FILE: arch/s390/kernel/traps.c:707:
+        char * ic_ptr = (char *) &ltt_interruption_code;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/s390/kernel/traps.c:707:
+        char * ic_ptr = (char *) &ltt_interruption_code;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#277: FILE: arch/s390/kernel/traps.c:707:
+        char * ic_ptr = (char *) &ltt_interruption_code;

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/s390/kernel/traps.c:708:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: arch/s390/kernel/traps.c:708:
+        char * ic_ptr = (char *) &ltt_interruption_code;
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/s390/kernel/traps.c:708:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: arch/s390/kernel/traps.c:708:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: arch/s390/kernel/traps.c:708:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/s390/kernel/traps.c:709:
+        memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/s390/kernel/traps.c:709:
+        memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: arch/s390/kernel/traps.c:709:
+        memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#279: FILE: arch/s390/kernel/traps.c:709:
+        memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#279: FILE: arch/s390/kernel/traps.c:709:
+        memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#279: FILE: arch/s390/kernel/traps.c:709:
+        memcpy(ic_ptr+6,&S390_lowcore.pgm_code,2); /* copy the interrupt code */
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/s390/kernel/traps.c:710:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_MASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/s390/kernel/traps.c:710:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_MASK));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#280: FILE: arch/s390/kernel/traps.c:710:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_MASK));
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/s390/kernel/traps.c:727:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/s390/kernel/traps.c:727:
+        TRACE_TRAP_EXIT();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/s390/kernel/traps.c:730:
+/* ltt - Trace related code  */                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: arch/s390/kernel/traps.c:731:
+#if (CONFIG_TRACE || CONFIG_TRACE_MODULE)                      $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: arch/s390/kernel/traps.c:732:
+asmlinkage void trace_real_syscall_entry(struct pt_regs * regs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: arch/s390/kernel/traps.c:733:
+{                                                              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: arch/s390/kernel/traps.c:734:
+        int                 use_depth;                         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: arch/s390/kernel/traps.c:734:
+        int                 use_depth;                         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: arch/s390/kernel/traps.c:734:
+        int                 use_depth;                         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: arch/s390/kernel/traps.c:735:
+        int                 use_bounds;                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: arch/s390/kernel/traps.c:735:
+        int                 use_bounds;                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/s390/kernel/traps.c:735:
+        int                 use_bounds;                        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: arch/s390/kernel/traps.c:736:
+        int                 depth = 0;                         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: arch/s390/kernel/traps.c:736:
+        int                 depth = 0;                         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/s390/kernel/traps.c:736:
+        int                 depth = 0;                         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: arch/s390/kernel/traps.c:737:
+        int                 seek_depth;                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: arch/s390/kernel/traps.c:737:
+        int                 seek_depth;                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/s390/kernel/traps.c:737:
+        int                 seek_depth;                        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/s390/kernel/traps.c:738:
+        unsigned long       lower_bound;                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/s390/kernel/traps.c:738:
+        unsigned long       lower_bound;                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/s390/kernel/traps.c:738:
+        unsigned long       lower_bound;                       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: arch/s390/kernel/traps.c:739:
+        unsigned long       upper_bound;                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/s390/kernel/traps.c:739:
+        unsigned long       upper_bound;                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/s390/kernel/traps.c:739:
+        unsigned long       upper_bound;                       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: arch/s390/kernel/traps.c:740:
+        unsigned long       addr;                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/s390/kernel/traps.c:740:
+        unsigned long       addr;                              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/s390/kernel/traps.c:740:
+        unsigned long       addr;                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: arch/s390/kernel/traps.c:741:
+        unsigned long*      stack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/s390/kernel/traps.c:741:
+        unsigned long*      stack;$

ERROR:POINTER_LOCATION: "foo*      bar" should be "foo *bar"
#302: FILE: arch/s390/kernel/traps.c:741:
+        unsigned long*      stack;

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/s390/kernel/traps.c:742:
+        unsigned long       temp_stack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/s390/kernel/traps.c:742:
+        unsigned long       temp_stack;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: arch/s390/kernel/traps.c:743:
+        trace_syscall_entry trace_syscall_event;               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: arch/s390/kernel/traps.c:743:
+        trace_syscall_entry trace_syscall_event;               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/s390/kernel/traps.c:743:
+        trace_syscall_entry trace_syscall_event;               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: arch/s390/kernel/traps.c:744:
+        /* Set the syscall ID                               */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/s390/kernel/traps.c:744:
+        /* Set the syscall ID                               */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: arch/s390/kernel/traps.c:745:
+        /* Register 8 is setup just prior to the call       */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/s390/kernel/traps.c:745:
+        /* Register 8 is setup just prior to the call       */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: arch/s390/kernel/traps.c:746:
+        /* This instruction is just following linkage       */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/s390/kernel/traps.c:746:
+        /* This instruction is just following linkage       */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: arch/s390/kernel/traps.c:747:
+        /* so it's ok.  If moved and chance of R8 being     */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/s390/kernel/traps.c:747:
+        /* so it's ok.  If moved and chance of R8 being     */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: arch/s390/kernel/traps.c:748:
+        /* clobbered, would need to dig it out of the stack */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/s390/kernel/traps.c:748:
+        /* clobbered, would need to dig it out of the stack */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: arch/s390/kernel/traps.c:749:
+        __asm__ volatile(                                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/s390/kernel/traps.c:749:
+        __asm__ volatile(                                      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/s390/kernel/traps.c:749:
+        __asm__ volatile(                                      $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#310: FILE: arch/s390/kernel/traps.c:749:
+        __asm__ volatile(                                      

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: arch/s390/kernel/traps.c:750:
+        "  stc  8,%0\n\t"                                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/s390/kernel/traps.c:750:
+        "  stc  8,%0\n\t"                                      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/s390/kernel/traps.c:750:
+        "  stc  8,%0\n\t"                                      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: arch/s390/kernel/traps.c:751:
+        : "=m" (trace_syscall_event.syscall_id));              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/s390/kernel/traps.c:751:
+        : "=m" (trace_syscall_event.syscall_id));              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/s390/kernel/traps.c:751:
+        : "=m" (trace_syscall_event.syscall_id));              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: arch/s390/kernel/traps.c:752:
+        /* get the psw address */                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/s390/kernel/traps.c:752:
+        /* get the psw address */                              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: arch/s390/kernel/traps.c:753:
+        trace_syscall_event.address  = regs->psw.addr;         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: arch/s390/kernel/traps.c:753:
+        trace_syscall_event.address  = regs->psw.addr;         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: arch/s390/kernel/traps.c:753:
+        trace_syscall_event.address  = regs->psw.addr;         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/s390/kernel/traps.c:754:
+        /* and off the hi-order bit */                                          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: arch/s390/kernel/traps.c:754:
+        /* and off the hi-order bit */                                          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: arch/s390/kernel/traps.c:755:
+        trace_syscall_event.address &= PSW_ADDR_MASK;                           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: arch/s390/kernel/traps.c:755:
+        trace_syscall_event.address &= PSW_ADDR_MASK;                           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/s390/kernel/traps.c:755:
+        trace_syscall_event.address &= PSW_ADDR_MASK;                           $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: arch/s390/kernel/traps.c:756:
+        if(!(user_mode(regs))) /* if kernel mode, return */                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: arch/s390/kernel/traps.c:756:
+        if(!(user_mode(regs))) /* if kernel mode, return */                     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: arch/s390/kernel/traps.c:756:
+        if(!(user_mode(regs))) /* if kernel mode, return */                     $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#317: FILE: arch/s390/kernel/traps.c:756:
+        if(!(user_mode(regs))) /* if kernel mode, return */                     
+           goto trace_syscall_end;                                              

ERROR:SPACING: space required before the open parenthesis '('
#317: FILE: arch/s390/kernel/traps.c:756:
+        if(!(user_mode(regs))) /* if kernel mode, return */                     

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: arch/s390/kernel/traps.c:757:
+           goto trace_syscall_end;                                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: arch/s390/kernel/traps.c:757:
+           goto trace_syscall_end;                                              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: arch/s390/kernel/traps.c:757:
+           goto trace_syscall_end;                                              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: arch/s390/kernel/traps.c:758:
+        /* Get the trace configuration - if none, return */                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/s390/kernel/traps.c:758:
+        /* Get the trace configuration - if none, return */                     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: arch/s390/kernel/traps.c:759:
+        if(trace_get_config(&use_depth,                                         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/s390/kernel/traps.c:759:
+        if(trace_get_config(&use_depth,                                         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/s390/kernel/traps.c:759:
+        if(trace_get_config(&use_depth,                                         $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#320: FILE: arch/s390/kernel/traps.c:759:
+        if(trace_get_config(&use_depth,                                         
[...]
+          goto trace_syscall_end;                                               

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: arch/s390/kernel/traps.c:759:
+        if(trace_get_config(&use_depth,                                         

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/s390/kernel/traps.c:760:
+                            &use_bounds,                                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: arch/s390/kernel/traps.c:760:
+                            &use_bounds,                                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/s390/kernel/traps.c:760:
+                            &use_bounds,                                        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: arch/s390/kernel/traps.c:761:
+                            &seek_depth,                                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/s390/kernel/traps.c:761:
+                            &seek_depth,                                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/s390/kernel/traps.c:761:
+                            &seek_depth,                                        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: arch/s390/kernel/traps.c:762:
+                            (void*)&lower_bound,                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: arch/s390/kernel/traps.c:762:
+                            (void*)&lower_bound,                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/s390/kernel/traps.c:762:
+                            (void*)&lower_bound,                                $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#323: FILE: arch/s390/kernel/traps.c:762:
+                            (void*)&lower_bound,                                

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: arch/s390/kernel/traps.c:763:
+                            (void*)&upper_bound) < 0)                           $

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/s390/kernel/traps.c:763:
+                            (void*)&upper_bound) < 0)                           $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/s390/kernel/traps.c:763:
+                            (void*)&upper_bound) < 0)                           $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: arch/s390/kernel/traps.c:763:
+                            (void*)&upper_bound) < 0)                           

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: arch/s390/kernel/traps.c:764:
+          goto trace_syscall_end;                                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: arch/s390/kernel/traps.c:764:
+          goto trace_syscall_end;                                               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/s390/kernel/traps.c:764:
+          goto trace_syscall_end;                                               $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: arch/s390/kernel/traps.c:765:
+        /* Do we have to search for an instruction pointer address range */     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/s390/kernel/traps.c:765:
+        /* Do we have to search for an instruction pointer address range */     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               
+        {                                                                       

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               
[...]
+          /* stack pointer is register 15 */                                    

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_depth == 1'
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_bounds == 1'
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               

ERROR:SPACING: space required before the open parenthesis '('
#327: FILE: arch/s390/kernel/traps.c:766:
+        if((use_depth == 1) || (use_bounds == 1))                               

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: arch/s390/kernel/traps.c:767:
+        {                                                                       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: arch/s390/kernel/traps.c:767:
+        {                                                                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/s390/kernel/traps.c:767:
+        {                                                                       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: arch/s390/kernel/traps.c:768:
+          /* Start at the top of the stack */                                   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: arch/s390/kernel/traps.c:768:
+          /* Start at the top of the stack */                                   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: arch/s390/kernel/traps.c:769:
+          /* stack pointer is register 15 */                                    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: arch/s390/kernel/traps.c:769:
+          /* stack pointer is register 15 */                                    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: arch/s390/kernel/traps.c:770:
+          stack = (unsigned long*) regs->gprs[15]; /* stack pointer */      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: arch/s390/kernel/traps.c:770:
+          stack = (unsigned long*) regs->gprs[15]; /* stack pointer */      $

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/s390/kernel/traps.c:770:
+          stack = (unsigned long*) regs->gprs[15]; /* stack pointer */      

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/s390/kernel/traps.c:770:
+          stack = (unsigned long*) regs->gprs[15]; /* stack pointer */      $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: arch/s390/kernel/traps.c:770:
+          stack = (unsigned long*) regs->gprs[15]; /* stack pointer */      

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: arch/s390/kernel/traps.c:771:
+          /* Keep on going until we reach the end of the process' stack limit */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: arch/s390/kernel/traps.c:772:
+          do$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/s390/kernel/traps.c:772:
+          do$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#333: FILE: arch/s390/kernel/traps.c:772:
+          do
+          {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#333: FILE: arch/s390/kernel/traps.c:772:
+          do
+          {

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: arch/s390/kernel/traps.c:773:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/s390/kernel/traps.c:773:
+          {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/s390/kernel/traps.c:774:
+            get_user(addr,stack+14);  /* get the program address +0x38 */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/s390/kernel/traps.c:774:
+            get_user(addr,stack+14);  /* get the program address +0x38 */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/s390/kernel/traps.c:774:
+            get_user(addr,stack+14);  /* get the program address +0x38 */ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: arch/s390/kernel/traps.c:774:
+            get_user(addr,stack+14);  /* get the program address +0x38 */ 
                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#335: FILE: arch/s390/kernel/traps.c:774:
+            get_user(addr,stack+14);  /* get the program address +0x38 */ 
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: arch/s390/kernel/traps.c:775:
+            /* and off the hi-order bit */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: arch/s390/kernel/traps.c:776:
+            addr &= PSW_ADDR_MASK;                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: arch/s390/kernel/traps.c:776:
+            addr &= PSW_ADDR_MASK;                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/s390/kernel/traps.c:776:
+            addr &= PSW_ADDR_MASK;                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: arch/s390/kernel/traps.c:777:
+            /* Does this LOOK LIKE an address in the program */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: arch/s390/kernel/traps.c:778:
+            if ((addr > current->mm->start_code)               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: arch/s390/kernel/traps.c:778:
+            if ((addr > current->mm->start_code)               $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/s390/kernel/traps.c:778:
+            if ((addr > current->mm->start_code)               $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#339: FILE: arch/s390/kernel/traps.c:778:
+            if ((addr > current->mm->start_code)               
+               &&(addr < current->mm->end_code))               
+            { 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#339: FILE: arch/s390/kernel/traps.c:778:
+            if ((addr > current->mm->start_code)               
[...]
+              /* Does this address fit the description */      

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr > current->mm->start_code'
#339: FILE: arch/s390/kernel/traps.c:778:
+            if ((addr > current->mm->start_code)               
+               &&(addr < current->mm->end_code))               

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: arch/s390/kernel/traps.c:779:
+               &&(addr < current->mm->end_code))               $

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/s390/kernel/traps.c:779:
+               &&(addr < current->mm->end_code))               $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#340: FILE: arch/s390/kernel/traps.c:779:
+            if ((addr > current->mm->start_code)               
+               &&(addr < current->mm->end_code))               

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/s390/kernel/traps.c:779:
+               &&(addr < current->mm->end_code))               $

ERROR:SPACING: spaces required around that '&&' (ctx:ExV)
#340: FILE: arch/s390/kernel/traps.c:779:
+               &&(addr < current->mm->end_code))               
                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#341: FILE: arch/s390/kernel/traps.c:780:
+            { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/s390/kernel/traps.c:780:
+            { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/s390/kernel/traps.c:780:
+            { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/s390/kernel/traps.c:781:
+              /* Does this address fit the description */      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/s390/kernel/traps.c:781:
+              /* Does this address fit the description */      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
[...]
+                  /* Set the address */   

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_depth == 1'
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'depth == seek_depth'
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'use_bounds == 1'
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr > lower_bound'
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr < upper_bound'
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))

ERROR:SPACING: space required before the open parenthesis '('
#343: FILE: arch/s390/kernel/traps.c:782:
+              if(((use_depth == 1) && (depth == seek_depth))   

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: arch/s390/kernel/traps.c:783:
+                ||((use_bounds == 1) && (addr > lower_bound)   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/s390/kernel/traps.c:783:
+                ||((use_bounds == 1) && (addr > lower_bound)   $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#344: FILE: arch/s390/kernel/traps.c:783:
+              if(((use_depth == 1) && (depth == seek_depth))   
+                ||((use_bounds == 1) && (addr > lower_bound)   

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/s390/kernel/traps.c:783:
+                ||((use_bounds == 1) && (addr > lower_bound)   $

ERROR:SPACING: spaces required around that '||' (ctx:ExV)
#344: FILE: arch/s390/kernel/traps.c:783:
+                ||((use_bounds == 1) && (addr > lower_bound)   
                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/s390/kernel/traps.c:784:
+                && (addr < upper_bound)))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#345: FILE: arch/s390/kernel/traps.c:784:
+                ||((use_bounds == 1) && (addr > lower_bound)   
+                && (addr < upper_bound)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/s390/kernel/traps.c:784:
+                && (addr < upper_bound)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/s390/kernel/traps.c:785:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/s390/kernel/traps.c:785:
+                {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: arch/s390/kernel/traps.c:786:
+                  /* Set the address */   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/s390/kernel/traps.c:786:
+                  /* Set the address */   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: arch/s390/kernel/traps.c:787:
+                  trace_syscall_event.address = addr; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/s390/kernel/traps.c:787:
+                  trace_syscall_event.address = addr; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/s390/kernel/traps.c:787:
+                  trace_syscall_event.address = addr; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: arch/s390/kernel/traps.c:788:
+                  /* We're done */                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/s390/kernel/traps.c:788:
+                  /* We're done */                             $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/s390/kernel/traps.c:789:
+                  goto trace_syscall_end;                      $

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/s390/kernel/traps.c:789:
+                  goto trace_syscall_end;                      $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/s390/kernel/traps.c:789:
+                  goto trace_syscall_end;                      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: arch/s390/kernel/traps.c:790:
+                }                                              $

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/s390/kernel/traps.c:790:
+                }                                              $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/s390/kernel/traps.c:790:
+                }                                              $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/s390/kernel/traps.c:791:
+              else                                             $

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/s390/kernel/traps.c:791:
+              else                                             $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/s390/kernel/traps.c:791:
+              else                                             $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: arch/s390/kernel/traps.c:792:
+                /* We're one depth more */                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/s390/kernel/traps.c:792:
+                /* We're one depth more */                     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: arch/s390/kernel/traps.c:793:
+                depth++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: arch/s390/kernel/traps.c:793:
+                depth++; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/s390/kernel/traps.c:793:
+                depth++; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/s390/kernel/traps.c:794:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/s390/kernel/traps.c:794:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/s390/kernel/traps.c:795:
+            /* Go on to the next address */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/s390/kernel/traps.c:796:
+            get_user(temp_stack,stack); /* get contents of stack */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: arch/s390/kernel/traps.c:796:
+            get_user(temp_stack,stack); /* get contents of stack */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: arch/s390/kernel/traps.c:796:
+            get_user(temp_stack,stack); /* get contents of stack */
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/s390/kernel/traps.c:797:
+            temp_stack &= PSW_ADDR_MASK; /* and off hi order bit */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/s390/kernel/traps.c:797:
+            temp_stack &= PSW_ADDR_MASK; /* and off hi order bit */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/s390/kernel/traps.c:798:
+            stack = (unsigned long *)temp_stack; /* move into stack */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/s390/kernel/traps.c:798:
+            stack = (unsigned long *)temp_stack; /* move into stack */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/s390/kernel/traps.c:799:
+            /* stack may or may not go to zero when end hit               */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/s390/kernel/traps.c:800:
+            /* using 0x7fffffff-_STK_LIM to validate that the address is  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/s390/kernel/traps.c:801:
+            /* within the range of a valid stack address                  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/s390/kernel/traps.c:802:
+            /* If outside that range, exit the loop, stack end must have  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: arch/s390/kernel/traps.c:803:
+            /* been hit.                                                  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/s390/kernel/traps.c:804:
+          } while (stack >= (unsigned long *)(0x7fffffff-_STK_LIM));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/s390/kernel/traps.c:804:
+          } while (stack >= (unsigned long *)(0x7fffffff-_STK_LIM));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#365: FILE: arch/s390/kernel/traps.c:804:
+          } while (stack >= (unsigned long *)(0x7fffffff-_STK_LIM));
                                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: arch/s390/kernel/traps.c:805:
+        }                                                         $

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: arch/s390/kernel/traps.c:805:
+        }                                                         $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: arch/s390/kernel/traps.c:805:
+        }                                                         $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: arch/s390/kernel/traps.c:806:
+trace_syscall_end:                                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: arch/s390/kernel/traps.c:807:
+        /* Trace the event */                                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: arch/s390/kernel/traps.c:807:
+        /* Trace the event */                                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/s390/kernel/traps.c:808:
+        trace_event(TRACE_EV_SYSCALL_ENTRY, &trace_syscall_event);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/s390/kernel/traps.c:808:
+        trace_event(TRACE_EV_SYSCALL_ENTRY, &trace_syscall_event);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: arch/s390/kernel/traps.c:809:
+}                                                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: arch/s390/kernel/traps.c:810:
+asmlinkage void trace_real_syscall_exit(void)                     $

CHECK:SPACING: No space is necessary after a cast
#371: FILE: arch/s390/kernel/traps.c:810:
+asmlinkage void trace_real_syscall_exit(void)                     

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#371: FILE: arch/s390/kernel/traps.c:810:
+}                                                                 
+asmlinkage void trace_real_syscall_exit(void)                     

ERROR:TRAILING_WHITESPACE: trailing whitespace
#372: FILE: arch/s390/kernel/traps.c:811:
+{                                                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: arch/s390/kernel/traps.c:812:
+  trace_event(TRACE_EV_SYSCALL_EXIT, NULL);                       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/s390/kernel/traps.c:812:
+  trace_event(TRACE_EV_SYSCALL_EXIT, NULL);                       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: arch/s390/kernel/traps.c:813:
+}                                                                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: arch/s390/kernel/traps.c:814:
+#endif /* (CONFIG_TRACE || CONFIG_TRACE_MODULE) */                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: arch/s390/mm/fault.c:159:
+        trapid_t ltt_interruption_code;                 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: arch/s390/mm/fault.c:159:
+        trapid_t ltt_interruption_code;                 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/s390/mm/fault.c:159:
+        trapid_t ltt_interruption_code;                 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: arch/s390/mm/fault.c:160:
+        char * ic_ptr = (char *) &ltt_interruption_code; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: arch/s390/mm/fault.c:160:
+        char * ic_ptr = (char *) &ltt_interruption_code; $

CHECK:SPACING: No space is necessary after a cast
#400: FILE: arch/s390/mm/fault.c:160:
+        char * ic_ptr = (char *) &ltt_interruption_code; 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: arch/s390/mm/fault.c:160:
+        char * ic_ptr = (char *) &ltt_interruption_code; $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#400: FILE: arch/s390/mm/fault.c:160:
+        char * ic_ptr = (char *) &ltt_interruption_code; 

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/s390/mm/fault.c:208:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/s390/mm/fault.c:208:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/s390/mm/fault.c:208:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#408: FILE: arch/s390/mm/fault.c:208:
+        memset(&ltt_interruption_code,0,sizeof(ltt_interruption_code));
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/s390/mm/fault.c:209:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/s390/mm/fault.c:209:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#409: FILE: arch/s390/mm/fault.c:209:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#409: FILE: arch/s390/mm/fault.c:209:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#409: FILE: arch/s390/mm/fault.c:209:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: arch/s390/mm/fault.c:209:
+        memcpy(ic_ptr+4,&error_code,sizeof(error_code));
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/s390/mm/fault.c:210:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_MASK));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/s390/mm/fault.c:210:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_MASK));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#410: FILE: arch/s390/mm/fault.c:210:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,(regs->psw.addr & PSW_ADDR_MASK));
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/s390/mm/fault.c:257:
+        TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/s390/mm/fault.c:257:
+        TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: arch/s390/mm/fault.c:272:
+                TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/s390/mm/fault.c:272:
+                TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/s390/mm/fault.c:280:
+                TRACE_TRAP_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/s390/mm/fault.c:280:
+                TRACE_TRAP_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: drivers/s390/cio/cio.c:1007:
+                        TRACE_IRQ_ENTRY(irq, !(((regs).psw.mask&PSW_PROBLEM_STATE) != 0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/s390/cio/cio.c:1007:
+                        TRACE_IRQ_ENTRY(irq, !(((regs).psw.mask&PSW_PROBLEM_STATE) != 0));$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#463: FILE: drivers/s390/cio/cio.c:1007:
+                        TRACE_IRQ_ENTRY(irq, !(((regs).psw.mask&PSW_PROBLEM_STATE) != 0));
                                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: drivers/s390/cio/cio.c:1011:
+                        TRACE_IRQ_EXIT();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/s390/cio/cio.c:1011:
+                        TRACE_IRQ_EXIT();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/s390/s390mach.c:157:
+        trapid_t ltt_interruption_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/s390/s390mach.c:157:
+        trapid_t ltt_interruption_code;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/s390/s390mach.c:158:
+        uint32_t ltt_old_psw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/s390/s390mach.c:158:
+        uint32_t ltt_old_psw;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#494: FILE: drivers/s390/s390mach.c:158:
+        uint32_t ltt_old_psw;

ERROR:SPACING: space prohibited after that open parenthesis '('
#499: FILE: drivers/s390/s390mach.c:163:
+	memcpy( &ltt_interruption_code,

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: drivers/s390/s390mach.c:164:
+^I        &S390_lowcore.mcck_interruption_code,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: drivers/s390/s390mach.c:164:
+	memcpy( &ltt_interruption_code,
+	        &S390_lowcore.mcck_interruption_code,

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: drivers/s390/s390mach.c:165:
+^I        sizeof(__u64));$

ERROR:SPACING: space prohibited after that open parenthesis '('
#502: FILE: drivers/s390/s390mach.c:166:
+	memcpy( &ltt_old_psw,

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: drivers/s390/s390mach.c:167:
+^I        &S390_lowcore.mcck_old_psw,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/s390/s390mach.c:167:
+	memcpy( &ltt_old_psw,
+	        &S390_lowcore.mcck_old_psw,

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: drivers/s390/s390mach.c:168:
+^I        sizeof(uint32_t));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: drivers/s390/s390mach.c:169:
+        ltt_old_psw &=  PSW_ADDR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/s390/s390mach.c:169:
+        ltt_old_psw &=  PSW_ADDR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: drivers/s390/s390mach.c:170:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,ltt_old_psw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/s390/s390mach.c:170:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,ltt_old_psw);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: drivers/s390/s390mach.c:170:
+        TRACE_TRAP_ENTRY(ltt_interruption_code,ltt_old_psw);
                                               ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#514: FILE: include/asm-s390/trace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#515: FILE: include/asm-s390/trace.h:2:
+ * linux/include/asm-s390/trace.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 264 errors, 108 warnings, 34 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
