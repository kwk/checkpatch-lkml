WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dasd_alias_show' to 'alias_show'
#75: FILE: drivers/s390/block/dasd_devmap.c:735:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dasd_vendor_show' to 'vendor_show'
#94: FILE: drivers/s390/block/dasd_devmap.c:754:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dasd_vendor_show' to 'vendor_show'
#96: FILE: drivers/s390/block/dasd_devmap.c:756:
+static DEVICE_ATTR(vendor, 0444, dasd_vendor_show, NULL);

ERROR:SPACING: space prohibited after that open parenthesis '('
#98: FILE: drivers/s390/block/dasd_devmap.c:758:
+#define UID_STRLEN ( /* vendor */ 3 + 1 + /* serial    */ 14 + 1 +\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dasd_uid_show' to 'uid_show'
#118: FILE: drivers/s390/block/dasd_devmap.c:778:
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: drivers/s390/block/dasd_devmap.c:837:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#193: FILE: drivers/s390/block/dasd_eckd.c:458:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:CAMELCASE: Avoid CamelCase: <subsystemID>
#207: FILE: drivers/s390/block/dasd_eckd.c:472:
+	uid->ssid = confdata->neq.subsystemID;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#208: FILE: drivers/s390/block/dasd_eckd.c:473:
+	if (confdata->ned2.sneq.flags == 0x40) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#211: FILE: drivers/s390/block/dasd_eckd.c:476:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <recNED>
#299: FILE: drivers/s390/block/dasd_eckd.h:241:
+				unsigned char recNED:1;

CHECK:CAMELCASE: Avoid CamelCase: <emuNED>
#300: FILE: drivers/s390/block/dasd_eckd.h:242:
+				unsigned char emuNED:1;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#302: FILE: drivers/s390/block/dasd_eckd.h:244:
+			} __attribute__ ((packed)) flags;

WARNING:TYPO_SPELLING: 'ned' may be misspelled - perhaps 'need'?
#311: FILE: drivers/s390/block/dasd_eckd.h:253:
+		} __attribute__ ((packed)) ned;
 		                           ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#311: FILE: drivers/s390/block/dasd_eckd.h:253:
+		} __attribute__ ((packed)) ned;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#318: FILE: drivers/s390/block/dasd_eckd.h:260:
+		} __attribute__ ((packed)) sneq;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#346: FILE: drivers/s390/block/dasd_int.h:529:
+int dasd_get_uid(struct ccw_device *, struct dasd_uid *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_uid *' should also have an identifier name
#346: FILE: drivers/s390/block/dasd_int.h:529:
+int dasd_get_uid(struct ccw_device *, struct dasd_uid *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ccw_device *' should also have an identifier name
#347: FILE: drivers/s390/block/dasd_int.h:530:
+int dasd_set_uid(struct ccw_device *, struct dasd_uid *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_uid *' should also have an identifier name
#347: FILE: drivers/s390/block/dasd_int.h:530:
+int dasd_set_uid(struct ccw_device *, struct dasd_uid *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083049.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 12 warnings, 7 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083049.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
