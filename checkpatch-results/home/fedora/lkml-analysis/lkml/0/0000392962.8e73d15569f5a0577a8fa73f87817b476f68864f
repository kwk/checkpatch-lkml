WARNING:TYPO_SPELLING: 'catched' may be misspelled - perhaps 'caught'?
#37: 
I'm not 100% that I've catched everyone that does 
                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#59: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'accessable' may be misspelled - perhaps 'accessible'?
#72: FILE: arch/i386/Kconfig:1632:
+	  so that the event log is actually accessable. This option causes a
 	                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'noticable' may be misspelled - perhaps 'noticeable'?
#73: FILE: arch/i386/Kconfig:1633:
+	  noticable overhead, disable for production systems.
 	  ^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: include/asm-i386/processor.h:479:
+		} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#99: FILE: kernel/exit.c:712:
+	save_event(EVENT_WRITE_LOCK_RELEASE,&tasklist_lock);
 	                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#99: FILE: kernel/exit.c:712:
+	save_event(EVENT_WRITE_LOCK_RELEASE,&tasklist_lock);
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#109: FILE: kernel/sched.c:1891:
+	save_event(EVENT_SPINLOCK_RELEASE,&rq->lock);
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#109: FILE: kernel/sched.c:1891:
+	save_event(EVENT_SPINLOCK_RELEASE,&rq->lock);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#120: FILE: include/linux/brlock.h:89:
+	save_event(EVENT_READ_LOCK_BEFORE,&__brlock_array[smp_processor_id()][idx]);
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#120: FILE: include/linux/brlock.h:89:
+	save_event(EVENT_READ_LOCK_BEFORE,&__brlock_array[smp_processor_id()][idx]);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#122: FILE: include/linux/brlock.h:91:
+	save_event(EVENT_READ_LOCK,&__brlock_array[smp_processor_id()][idx]);
 	                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#122: FILE: include/linux/brlock.h:91:
+	save_event(EVENT_READ_LOCK,&__brlock_array[smp_processor_id()][idx]);
 	                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: include/linux/eventlog.h:1:
+#ifndef __LINUX_EVENTLOG_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#148: FILE: include/linux/eventlog.h:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#149: FILE: include/linux/eventlog.h:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:TYPO_SPELLING: 'poped' may be misspelled - perhaps 'popped'?
#154: FILE: include/linux/eventlog.h:25:
+/* events that are pushed/poped on the eventstack */
                           ^^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#159: FILE: include/linux/eventlog.h:30:
+#define EVENT_SPINLOCK_BEFORE		(0x0011|EVENT_STACK_PUSH)
                              		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#160: FILE: include/linux/eventlog.h:31:
+#define EVENT_SPINLOCK			(0x0012|EVENT_STACK_REPLACE)
                       			       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: include/linux/eventlog.h:32:
+#define EVENT_SPIN_TRYLOCK_SUCCESS	(0x0013|EVENT_STACK_PUSH)
                                   	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: include/linux/eventlog.h:34:
+#define EVENT_SPINLOCK_RELEASE		(0x0015|EVENT_STACK_POP)
                               		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: include/linux/eventlog.h:35:
+#define EVENT_READ_LOCK_BEFORE		(0x0021|EVENT_STACK_PUSH)
                               		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#165: FILE: include/linux/eventlog.h:36:
+#define EVENT_READ_LOCK			(0x0022|EVENT_STACK_REPLACE)
                        			       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#166: FILE: include/linux/eventlog.h:37:
+#define EVENT_READ_LOCK_RELEASE		(0x0023|EVENT_STACK_POP)
                                		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: include/linux/eventlog.h:38:
+#define EVENT_WRITE_LOCK_BEFORE		(0x0031|EVENT_STACK_PUSH)
                                		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#168: FILE: include/linux/eventlog.h:39:
+#define EVENT_WRITE_TRYLOCK_SUCCESS	(0x0032|EVENT_STACK_PUSH)
                                    	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#170: FILE: include/linux/eventlog.h:41:
+#define EVENT_WRITE_LOCK		(0x0034|EVENT_STACK_REPLACE)
                         		       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#171: FILE: include/linux/eventlog.h:42:
+#define EVENT_WRITE_LOCK_RELEASE	(0x0035|EVENT_STACK_POP)
                                 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: include/linux/eventlog.h:47:
+#define save_event(type,object) \
                        ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#176: FILE: include/linux/eventlog.h:47:
+#define save_event(type,object) \
+		do { \
+			store_event(type, __FILE__, __LINE__, __stringify(object), object); \
+		} while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#179: FILE: include/linux/eventlog.h:50:
+		} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: include/linux/eventlog.h:56:
+#define save_event(type,object) \
                        ^

ERROR:SPACING: space required before the open parenthesis '('
#186: FILE: include/linux/eventlog.h:57:
+		do { } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: include/linux/eventlog.h:63:
+ * ^I^IIncreasing the number increases the memory consumption.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: include/linux/eventlog.h:65:
+ * ^I^IThis log contains the last few events that were logged.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: include/linux/eventlog.h:66:
+ * ^I^IIncreasing this number is only possible with a serial$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: include/linux/eventlog.h:67:
+ * ^I^Iconsole, otherwise the log will scroll of your screen.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#198: FILE: include/linux/eventlog.h:69:
+ * ^Ithat should be sufficient for dual-cpu systems with RECENT_LEN$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: include/linux/eventlog.h:70:
+ * ^I16.$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#212: FILE: include/linux/sched.h:778:
+		save_event(EVENT_SPINLOCK_RELEASE,lock);
 		                                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#232: FILE: include/linux/spinlock.h:193:
+				({save_event(EVENT_SPIN_TRYLOCK_SUCCESS, lock); 1;}) \
 				                                                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#234: FILE: include/linux/spinlock.h:195:
+				      preempt_enable(); 0;});})
 				                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#234: FILE: include/linux/spinlock.h:195:
+				      preempt_enable(); 0;});})
 				                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#238: FILE: include/linux/spinlock.h:198:
+				({save_event(EVENT_WRITE_TRYLOCK_SUCCESS, lock); 1;}) \
 				                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: include/linux/spinlock.h:199:
+^I^I^I       ^I: ({save_event(EVENT_WRITE_TRYLOCK_FAILED, lock); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: include/linux/spinlock.h:199:
+^I^I^I       ^I: ({save_event(EVENT_WRITE_TRYLOCK_FAILED, lock); \$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#240: FILE: include/linux/spinlock.h:200:
+				      preempt_enable(); 0;});})
 				                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#240: FILE: include/linux/spinlock.h:200:
+				      preempt_enable(); 0;});})
 				                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#459: FILE: include/linux/spinlock.h:424:
+				({save_event(EVENT_SPIN_TRYLOCK_SUCCESS, lock); 1;}) \
 				                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#460: FILE: include/linux/spinlock.h:425:
+				: ({save_event(EVENT_SPIN_TRYLOCK_FAILED,lock); \
 				                                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#461: FILE: include/linux/spinlock.h:426:
+				  preempt_enable(); local_bh_enable(); 0;});})
 				                                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#461: FILE: include/linux/spinlock.h:426:
+				  preempt_enable(); local_bh_enable(); 0;});})
 				                                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#469: FILE: lib/eventlog.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#485: FILE: lib/eventlog.c:17:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#486: FILE: lib/eventlog.c:18:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#495: FILE: lib/eventlog.c:27:
+#include <asm/atomic.h>

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#517: FILE: lib/eventlog.c:49:
+	struct eventdata* ped = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: lib/eventlog.c:52:
+^Icpu = get_cpu(); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#524: FILE: lib/eventlog.c:56:
+		ped = &event_recent[cpu][event_recentpos[cpu]%RECENT_LEN];
 		                                             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#534: FILE: lib/eventlog.c:66:
+		if (event_stackpos[cpu] < MAX_DEPTH && enabled) {
+			event_stack[cpu][event_stackpos[cpu]] = *ped;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#540: FILE: lib/eventlog.c:72:
+		BUG_ON(event_stackpos[cpu] < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: lib/eventlog.c:74:
+		BUG_ON(event_stackpos[cpu] <= 0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#543: FILE: lib/eventlog.c:75:
+		if (event_stackpos[cpu]-1 < MAX_DEPTH && enabled) {
 		                       ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#543: FILE: lib/eventlog.c:75:
+		if (event_stackpos[cpu]-1 < MAX_DEPTH && enabled) {
+			event_stack[cpu][event_stackpos[cpu]-1] = *ped;
+		}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#544: FILE: lib/eventlog.c:76:
+			event_stack[cpu][event_stackpos[cpu]-1] = *ped;
 			                                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#547: FILE: lib/eventlog.c:79:
+	if (enabled) {
+		event_recentpos[cpu]++;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#557: FILE: lib/eventlog.c:89:
+	char *name;
+	switch(ped->type) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#557: FILE: lib/eventlog.c:89:
+	switch(ped->type) {
+		case EVENT_SPINLOCK_BEFORE:		name = "spinlock_before";	break;
+		case EVENT_SPINLOCK:			name = "spinlock";	break;
+		case EVENT_SPIN_TRYLOCK_SUCCESS:	name = "spin_trylock_success";	break;
+		case EVENT_SPIN_TRYLOCK_FAILED:		name = "spin_trylock_failed";	break;
+		case EVENT_SPINLOCK_RELEASE:		name = "spinlock_release";	break;
+		case EVENT_READ_LOCK_BEFORE:		name = "read_lock_before";	break;
+		case EVENT_READ_LOCK:			name = "read_lock";	break;
+		case EVENT_READ_LOCK_RELEASE:		name = "read_lock_release";	break;
+		case EVENT_WRITE_LOCK_BEFORE:		name = "write_lock_before";	break;
+		case EVENT_WRITE_LOCK:			name = "write_lock";	break;
+		case EVENT_WRITE_TRYLOCK_SUCCESS:	name = "write_trylock_success";	break;
+		case EVENT_WRITE_TRYLOCK_FAILED:	name = "write_trylock_failed";	break;
+		case EVENT_WRITE_LOCK_RELEASE:		name = "write_lock_release";	break;
+		case EVENT_CPU_RELAX:			name = "cpu_relax";	break;
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#557: FILE: lib/eventlog.c:89:
+	switch(ped->type) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#558: FILE: lib/eventlog.c:90:
+		case EVENT_SPINLOCK_BEFORE:		name = "spinlock_before";	break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#559: FILE: lib/eventlog.c:91:
+		case EVENT_SPINLOCK:			name = "spinlock";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#560: FILE: lib/eventlog.c:92:
+		case EVENT_SPIN_TRYLOCK_SUCCESS:	name = "spin_trylock_success";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#561: FILE: lib/eventlog.c:93:
+		case EVENT_SPIN_TRYLOCK_FAILED:		name = "spin_trylock_failed";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#562: FILE: lib/eventlog.c:94:
+		case EVENT_SPINLOCK_RELEASE:		name = "spinlock_release";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#563: FILE: lib/eventlog.c:95:
+		case EVENT_READ_LOCK_BEFORE:		name = "read_lock_before";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#564: FILE: lib/eventlog.c:96:
+		case EVENT_READ_LOCK:			name = "read_lock";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#565: FILE: lib/eventlog.c:97:
+		case EVENT_READ_LOCK_RELEASE:		name = "read_lock_release";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#566: FILE: lib/eventlog.c:98:
+		case EVENT_WRITE_LOCK_BEFORE:		name = "write_lock_before";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#567: FILE: lib/eventlog.c:99:
+		case EVENT_WRITE_LOCK:			name = "write_lock";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#568: FILE: lib/eventlog.c:100:
+		case EVENT_WRITE_TRYLOCK_SUCCESS:	name = "write_trylock_success";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#569: FILE: lib/eventlog.c:101:
+		case EVENT_WRITE_TRYLOCK_FAILED:	name = "write_trylock_failed";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#570: FILE: lib/eventlog.c:102:
+		case EVENT_WRITE_LOCK_RELEASE:		name = "write_lock_release";	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#571: FILE: lib/eventlog.c:103:
+		case EVENT_CPU_RELAX:			name = "cpu_relax";	break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#573: FILE: lib/eventlog.c:105:
+			printk(KERN_INFO"%3d: unknown type %xh.\n",no, ped->type);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#573: FILE: lib/eventlog.c:105:
+			printk(KERN_INFO"%3d: unknown type %xh.\n",no, ped->type);
 			                                          ^

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#573: FILE: lib/eventlog.c:105:
+			printk(KERN_INFO"%3d: unknown type %xh.\n",no, ped->type);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#574: FILE: lib/eventlog.c:106:
+			name="Duh";
 			    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#577: FILE: lib/eventlog.c:109:
+	printk(KERN_INFO"%3d(%d): %s from %s/%d on %s(%p)\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#577: FILE: lib/eventlog.c:109:
+	printk(KERN_INFO"%3d(%d): %s from %s/%d on %s(%p)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: lib/eventlog.c:110:
+	printk(KERN_INFO"%3d(%d): %s from %s/%d on %s(%p)\n",
+			no, ped->depth, name, ped->file, ped->line, ped->object_name,

WARNING:LINE_SPACING: Missing a blank line after declarations
#587: FILE: lib/eventlog.c:119:
+	int i;
+	local_irq_save(flags);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#591: FILE: lib/eventlog.c:123:
+	for(i=0;i<NR_CPUS;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#591: FILE: lib/eventlog.c:123:
+	for(i=0;i<NR_CPUS;i++) {
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#591: FILE: lib/eventlog.c:123:
+	for(i=0;i<NR_CPUS;i++) {
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#591: FILE: lib/eventlog.c:123:
+	for(i=0;i<NR_CPUS;i++) {
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#591: FILE: lib/eventlog.c:123:
+	for(i=0;i<NR_CPUS;i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#591: FILE: lib/eventlog.c:123:
+	for(i=0;i<NR_CPUS;i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#594: FILE: lib/eventlog.c:126:
+		unsigned int lastpos;
+		if (!cpu_possible(i))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#596: FILE: lib/eventlog.c:128:
+		printk(KERN_INFO "Events of cpu %d%s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: lib/eventlog.c:129:
+		printk(KERN_INFO "Events of cpu %d%s.\n",
+				i, (i==cpu)?" (current)":"");

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#597: FILE: lib/eventlog.c:129:
+				i, (i==cpu)?" (current)":"");
 				     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#597: FILE: lib/eventlog.c:129:
+				i, (i==cpu)?" (current)":"");
 				           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#597: FILE: lib/eventlog.c:129:
+				i, (i==cpu)?" (current)":"");
 				                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#600: FILE: lib/eventlog.c:132:
+			printk(KERN_INFO"  No events recorded.\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#600: FILE: lib/eventlog.c:132:
+			printk(KERN_INFO"  No events recorded.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#603: FILE: lib/eventlog.c:135:
+		printk(KERN_INFO "recent events: (old to new)\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#604: FILE: lib/eventlog.c:136:
+		j=0;
 		 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#606: FILE: lib/eventlog.c:138:
+			j = RECENT_LEN-lastpos;
 			              ^

ERROR:SPACING: space required after that ';' (ctx:BxV)
#608: FILE: lib/eventlog.c:140:
+		for (;j<RECENT_LEN;j++) {
 		     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#608: FILE: lib/eventlog.c:140:
+		for (;j<RECENT_LEN;j++) {
 		       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#608: FILE: lib/eventlog.c:140:
+		for (;j<RECENT_LEN;j++) {
 		                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#608: FILE: lib/eventlog.c:140:
+		for (;j<RECENT_LEN;j++) {
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);
+		}

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#609: FILE: lib/eventlog.c:141:
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#609: FILE: lib/eventlog.c:141:
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);
 			                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#609: FILE: lib/eventlog.c:141:
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);
 			                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#609: FILE: lib/eventlog.c:141:
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);
 			                                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#609: FILE: lib/eventlog.c:141:
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);
 			                                                                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#609: FILE: lib/eventlog.c:141:
+			print_one_event(lastpos-RECENT_LEN+j, &event_recent[i][(lastpos-RECENT_LEN+j)%RECENT_LEN]);
 			                                                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#613: FILE: lib/eventlog.c:145:
+		printk(KERN_INFO "event stack: (bottom to top, %u total)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: lib/eventlog.c:146:
+		printk(KERN_INFO "event stack: (bottom to top, %u total)\n",
+				lastpos);

ERROR:SPACING: space required before the open parenthesis '('
#615: FILE: lib/eventlog.c:147:
+		if(lastpos > MAX_DEPTH)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#617: FILE: lib/eventlog.c:149:
+		for (j=0;j<lastpos;j++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#617: FILE: lib/eventlog.c:149:
+		for (j=0;j<lastpos;j++) {
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#617: FILE: lib/eventlog.c:149:
+		for (j=0;j<lastpos;j++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#617: FILE: lib/eventlog.c:149:
+		for (j=0;j<lastpos;j++) {
 		                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#617: FILE: lib/eventlog.c:149:
+		for (j=0;j<lastpos;j++) {
+			print_one_event(j, &event_stack[i][j]);
+		}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#626: FILE: lib/eventlog.c:158:
+EXPORT_SYMBOL(print_events);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 35 warnings, 28 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392962.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
