WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Greg KH <greg@kroah.com>, linux-pci@atrey.karlin.mff.cuni.cz, ak@muc.de,', should be: 'Greg KH <greg@kroah.com> (, linux-pci@atrey.karlin.mff.cuni.cz, ak@muc.de,)'
#30: 
Cc: Greg KH <greg@kroah.com>, linux-pci@atrey.karlin.mff.cuni.cz, ak@muc.de,

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: linux/pci.h:664:
+ *  the io_state_change() callback will be called to notify the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#86: FILE: linux/pci.h:670:
+	pci_device_io_thawed,     /* I/O te device is (re-)enabled */
 	                                 ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: linux/pci.h:694:
+ * This routine builds a PCI error event which will be delivered $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: linux/pci.h:696:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: linux/pci.h:699:
+ * (from a workqueue).  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: linux/pci.h:701:
+int peh_send_failure_event (struct pci_dev *dev, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: linux/pci.h:701:
+int peh_send_failure_event (struct pci_dev *dev, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: linux/pci.h:702:
+                            enum pci_device_io_state state, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: linux/pci.h:702:
+                            enum pci_device_io_state state, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: linux/pci.h:702:
+                            enum pci_device_io_state state, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: linux/pci.h:703:
+                            int time_unavail);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: linux/pci.h:703:
+                            int time_unavail);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#142: FILE: linux/pci.h:730:
+	int  (*io_state_change) (struct pci_dev *, enum pci_device_io_state); /* state change */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pci_dev *' should also have an identifier name
#142: FILE: linux/pci.h:730:
+	int  (*io_state_change) (struct pci_dev *, enum pci_device_io_state); /* state change */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#160: FILE: pci/pci-error.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: pci/pci-error.c:3:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: pci/pci-error.c:8:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: pci/pci-error.c:13:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#174: FILE: pci/pci-error.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#175: FILE: pci/pci-error.c:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: pci/pci-error.c:37:
+ *  which in turn might be caused by low voltage on the bus, dust, $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#239: FILE: pci/pci-error.c:80:
+		if (event == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#242: FILE: pci/pci-error.c:83:
+		printk(KERN_INFO "PEH: Detected PCI bus error on device "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: pci/pci-error.c:84:
+^I^I       "%s %s\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#243: FILE: pci/pci-error.c:84:
+		printk(KERN_INFO "PEH: Detected PCI bus error on device "
+		       "%s %s\n", 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#246: FILE: pci/pci-error.c:87:
+		notifier_call_chain (&peh_notifier_chain,

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: pci/pci-error.c:88:
+^I^I           PEH_NOTIFY_ERROR, event);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: pci/pci-error.c:88:
+		notifier_call_chain (&peh_notifier_chain,
+		           PEH_NOTIFY_ERROR, event);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#254: FILE: pci/pci-error.c:95:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: pci/pci-error.c:100:
+ * This routine builds a PCI error event which will be delivered $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: pci/pci-error.c:102:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: pci/pci-error.c:105:
+ * (from a workqueue).  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: pci/pci-error.c:107:
+int peh_send_failure_event (struct pci_dev *dev, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: pci/pci-error.c:107:
+int peh_send_failure_event (struct pci_dev *dev, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: pci/pci-error.c:108:
+                            enum pci_device_io_state state, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: pci/pci-error.c:108:
+                            enum pci_device_io_state state, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: pci/pci-error.c:108:
+                            enum pci_device_io_state state, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: pci/pci-error.c:109:
+                            int time_unavail)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: pci/pci-error.c:109:
+                            int time_unavail)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: pci/pci-error.c:113:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!event"
#274: FILE: pci/pci-error.c:115:
+	if (event == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#275: FILE: pci/pci-error.c:116:
+		printk (KERN_ERR "PEH: out of memory, event not handled\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: pci/pci-error.c:116:
+		printk (KERN_ERR "PEH: out of memory, event not handled\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#275: FILE: pci/pci-error.c:116:
+	if (event == NULL) {
+		printk (KERN_ERR "PEH: out of memory, event not handled\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: pci/pci-error.c:118:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#277: FILE: pci/pci-error.c:118:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: pci/pci-error.c:118:
+ ^I}$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: pci/pci-error.c:152:
+
+

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#327: FILE: scsi/ipr.c:4998:
 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: scsi/ipr.c:5325:
+static void ipr_eeh_frozen (struct pci_dev *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: scsi/ipr.c:5335:
+static void ipr_eeh_thawed (struct pci_dev *pdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: scsi/ipr.c:5341:
+^I_ipr_initiate_ioa_reset(ioa_cfg, ipr_reset_restore_cfg_space, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: scsi/ipr.c:5342:
+^I                                 IPR_SHUTDOWN_NONE);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: scsi/ipr.c:5342:
+	_ipr_initiate_ioa_reset(ioa_cfg, ipr_reset_restore_cfg_space, 
+	                                 IPR_SHUTDOWN_NONE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: scsi/ipr.c:5346:
+static void ipr_eeh_perm_failure (struct pci_dev *pdev)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#371: FILE: scsi/ipr.c:5348:
+#if 0  // XXXXXXXXXXXXXXXXXXXXXXX

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: scsi/ipr.c:5354:
+static int ipr_io_state_change (struct pci_dev *pdev, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: scsi/ipr.c:5354:
+static int ipr_io_state_change (struct pci_dev *pdev, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: scsi/ipr.c:5355:
+                                enum pci_device_io_state state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: scsi/ipr.c:5355:
+                                enum pci_device_io_state state)$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#380: FILE: scsi/ipr.c:5357:
+	switch (state) {
+		case pci_device_io_frozen:
[...]
+		case pci_device_io_thawed:
[...]
+		case pci_device_io_perm_failure:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#382: FILE: scsi/ipr.c:5359:
+			ipr_eeh_frozen (pdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#385: FILE: scsi/ipr.c:5362:
+			ipr_eeh_thawed (pdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#388: FILE: scsi/ipr.c:5365:
+			ipr_eeh_perm_failure (pdev);

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#419: FILE: scsi/ipr.h:1138:
+#define ENTER printk(KERN_INFO IPR_NAME": Entering %s jiffies=%lu\n", __FUNCTION__, jiffies)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#419: FILE: scsi/ipr.h:1138:
+#define ENTER printk(KERN_INFO IPR_NAME": Entering %s jiffies=%lu\n", __FUNCTION__, jiffies)

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#419: FILE: scsi/ipr.h:1138:
+#define ENTER printk(KERN_INFO IPR_NAME": Entering %s jiffies=%lu\n", __FUNCTION__, jiffies)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#420: FILE: scsi/ipr.h:1139:
+#define LEAVE printk(KERN_INFO IPR_NAME": Leaving %s jiffies=%lu\n", __FUNCTION__, jiffies)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#420: FILE: scsi/ipr.h:1139:
+#define LEAVE printk(KERN_INFO IPR_NAME": Leaving %s jiffies=%lu\n", __FUNCTION__, jiffies)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#420: FILE: scsi/ipr.h:1139:
+#define LEAVE printk(KERN_INFO IPR_NAME": Leaving %s jiffies=%lu\n", __FUNCTION__, jiffies)

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#443: FILE: scsi/sym53c8xx_2/sym_glue.c:853:
+static void sym_eeh_timeout(u_long p) $

CHECK:SPACING: No space is necessary after a cast
#445: FILE: scsi/sym53c8xx_2/sym_glue.c:855:
+	struct sym_eh_wait *ep = (struct sym_eh_wait *) p;

WARNING:LINE_SPACING: Missing a blank line after declarations
#446: FILE: scsi/sym53c8xx_2/sym_glue.c:856:
+	struct sym_eh_wait *ep = (struct sym_eh_wait *) p;
+	if (!ep)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: scsi/sym53c8xx_2/sym_glue.c:866:
+^Iif (!del_timer(&ep->timer)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: scsi/sym53c8xx_2/sym_glue.c:868:
+^I^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#471: FILE: scsi/sym53c8xx_2/sym_glue.c:935:
+printk("duuuuuude attempting symbios recovery\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#473: FILE: scsi/sym53c8xx_2/sym_glue.c:937:
+		int rc = eeh_slot_is_isolated (np->s.device);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#475: FILE: scsi/sym53c8xx_2/sym_glue.c:939:
+printk ("duude symbios is isolated ??=%d\n", rc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: scsi/sym53c8xx_2/sym_glue.c:939:
+printk ("duude symbios is isolated ??=%d\n", rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#476: FILE: scsi/sym53c8xx_2/sym_glue.c:940:
+printk ("duuude the current io state is %d\n", np->s.io_state);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#476: FILE: scsi/sym53c8xx_2/sym_glue.c:940:
+printk ("duuude the current io state is %d\n", np->s.io_state);

WARNING:LINE_SPACING: Missing a blank line after declarations
#479: FILE: scsi/sym53c8xx_2/sym_glue.c:943:
+			struct sym_eh_wait eeh, *eep = &eeh;
+			np->s.io_reset_wait = eep;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#483: FILE: scsi/sym53c8xx_2/sym_glue.c:947:
+			eep->timer.expires = jiffies + (10*HZ);
 			                                  ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#491: FILE: scsi/sym53c8xx_2/sym_glue.c:955:
+			if (eep->timed_out) {
+printk ("duude symbios timed out\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#491: FILE: scsi/sym53c8xx_2/sym_glue.c:955:
+			if (eep->timed_out) {
[...]
+			} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: scsi/sym53c8xx_2/sym_glue.c:956:
+printk ("duude symbios timed out\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#492: FILE: scsi/sym53c8xx_2/sym_glue.c:956:
+printk ("duude symbios timed out\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#493: FILE: scsi/sym53c8xx_2/sym_glue.c:957:
+			} else {
+printk ("duude symbios waited for completion\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#494: FILE: scsi/sym53c8xx_2/sym_glue.c:958:
+printk ("duude symbios waited for completion\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: scsi/sym53c8xx_2/sym_glue.c:958:
+printk ("duude symbios waited for completion\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#507: FILE: scsi/sym53c8xx_2/sym_glue.c:1636:
+int sym2_io_state_change (struct pci_dev *pdev, enum pci_device_io_state state)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#510: FILE: scsi/sym53c8xx_2/sym_glue.c:1639:
+printk ("duude symbios got this state change %d jiffies=%ld\n", state, jiffies);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#510: FILE: scsi/sym53c8xx_2/sym_glue.c:1639:
+printk ("duude symbios got this state change %d jiffies=%ld\n", state, jiffies);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#513: FILE: scsi/sym53c8xx_2/sym_glue.c:1642:
+	if (state == pci_device_io_thawed) {
+		sym_eeh_done (np->s.io_reset_wait);
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#514: FILE: scsi/sym53c8xx_2/sym_glue.c:1643:
+		sym_eeh_done (np->s.io_reset_wait);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: scsi/sym53c8xx_2/sym_glue.c:1651:
+^I$

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#578: FILE: scsi/sym53c8xx_2/sym_hipd.c:2889:
+		icnt ++;
 		     ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#579: FILE: scsi/sym53c8xx_2/sym_hipd.c:2890:
+		if (100 < icnt) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#582: FILE: scsi/sym53c8xx_2/sym_hipd.c:2893:
+			if(eeh_slot_is_isolated (np->s.device))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'np->s.device'
#582: FILE: scsi/sym53c8xx_2/sym_hipd.c:2893:
+			if(eeh_slot_is_isolated (np->s.device))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#582: FILE: scsi/sym53c8xx_2/sym_hipd.c:2893:
+			if(eeh_slot_is_isolated (np->s.device))

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#603: FILE: asm-ppc64/eeh.h:40:
+#define EEH_MODE_RECOVERING	(1<<3)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#603: FILE: asm-ppc64/eeh.h:40:
+#define EEH_MODE_RECOVERING	(1<<3)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#606: FILE: asm-ppc64/eeh.h:43:
+ * to be permanently disabled. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: asm-ppc64/eeh.h:68:
+ * This routine should be called when a device is removed from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: asm-ppc64/eeh.h:69:
+ * a running system (e.g. by hotplug or dlpar).  It unregisters $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#632: FILE: asm-ppc64/eeh.h:79:
+int eeh_slot_is_isolated (struct pci_dev *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: asm-ppc64/eeh.h:82:
+ * eeh_ioaddr_is_isolated -- return non-zero value if device at $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#640: FILE: asm-ppc64/eeh.h:85:
+int eeh_ioaddr_is_isolated(const volatile void __iomem *token);

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#660: FILE: asm-ppc64/eeh.h:91:
+ * Obtains the the EEH error details from the RTAS subsystem, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: asm-ppc64/eeh.h:91:
+ * Obtains the the EEH error details from the RTAS subsystem, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: asm-ppc64/eeh.h:94:
+void eeh_slot_error_detail (struct device_node *dn, int severity);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: asm-ppc64/eeh.h:96:
+/** $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#669: FILE: asm-ppc64/eeh.h:100:
+ * does this by asserting the PCI #RST line for 1/8th of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: asm-ppc64/eeh.h:101:
+ * a second; this routine will sleep while the adapter is $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: asm-ppc64/eeh.h:104:
+void rtas_set_slot_reset (struct device_node *dn);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: asm-ppc64/eeh.h:111:
+ * and drops the #RST line if 'state is '0'.  This routine is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: asm-ppc64/eeh.h:119:
+ *  slot is ready to be used. After a PCI reset, it may take a while $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: asm-ppc64/eeh.h:122:
+ *  to wait before a PCI slot might become usable.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: asm-ppc64/eeh.h:126:
+ *  slot is immediately usable. A negavitve value means that the $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device_node *' should also have an identifier name
#702: FILE: asm-ppc64/eeh.h:133:
+void eeh_restore_bars(struct device_node *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: asm-ppc64/eeh.h:138:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: asm-ppc64/eeh.h:139:
+ * Ask the firmware to configure any PCI bridge devices $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: asm-ppc64/eeh.h:140:
+ * located behind the indicated node. Required after a $

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#745: FILE: asm-ppc64/rtas.h:246:
+extern int rtas_write_config(struct device_node *dn, int where, int size, u32 val);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#751: FILE: ppc64/kernel/eeh.c:17:
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#766: FILE: ppc64/kernel/eeh.c:30:
+#include <asm/atomic.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#776: FILE: ppc64/kernel/eeh.c:53:
+ *  which in turn might be caused by low voltage on the bus, dust, $

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#824: FILE: ppc64/kernel/eeh.c:226:
+		} else if (alo > piar->addr_hi) {
 		           ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: ppc64/kernel/eeh.c:244:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: ppc64/kernel/eeh.c:245:
+#ifdef DEBUG $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#834: FILE: ppc64/kernel/eeh.c:246:
+^Iprintk (KERN_DEBUG "PIAR: insert range=[%lx:%lx] dev=%s\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#834: FILE: ppc64/kernel/eeh.c:246:
+	printk (KERN_DEBUG "PIAR: insert range=[%lx:%lx] dev=%s\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#834: FILE: ppc64/kernel/eeh.c:246:
+	printk (KERN_DEBUG "PIAR: insert range=[%lx:%lx] dev=%s\n", 

WARNING:TYPO_SPELLING: 'alo' may be misspelled - perhaps 'also'?
#835: FILE: ppc64/kernel/eeh.c:247:
+	               alo, ahi, pci_name (dev));
 	               ^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: ppc64/kernel/eeh.c:247:
+^I               alo, ahi, pci_name (dev));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: ppc64/kernel/eeh.c:247:
+	printk (KERN_DEBUG "PIAR: insert range=[%lx:%lx] dev=%s\n", 
+	               alo, ahi, pci_name (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#835: FILE: ppc64/kernel/eeh.c:247:
+	               alo, ahi, pci_name (dev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: ppc64/kernel/eeh.c:384:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#857: FILE: ppc64/kernel/eeh.c:389:
+			int i;
+			for (i = 0; i < 16; i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#875: FILE: ppc64/kernel/eeh.c:406:
+void eeh_slot_error_detail (struct device_node *dn, int severity)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#889: FILE: ppc64/kernel/eeh.c:411:
+	if (!dn) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#896: FILE: ppc64/kernel/eeh.c:418:
+^I               8, 1, NULL, dn->eeh_config_addr,$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#897: FILE: ppc64/kernel/eeh.c:419:
+	               BUID_HI(dn->phb->buid),
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: ppc64/kernel/eeh.c:419:
+^I               BUID_HI(dn->phb->buid),$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#898: FILE: ppc64/kernel/eeh.c:420:
+	               BUID_LO(dn->phb->buid), NULL, 0,
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: ppc64/kernel/eeh.c:420:
+^I               BUID_LO(dn->phb->buid), NULL, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#899: FILE: ppc64/kernel/eeh.c:421:
+^I               virt_to_phys(slot_errbuf),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#900: FILE: ppc64/kernel/eeh.c:422:
+^I               eeh_error_buf_size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#901: FILE: ppc64/kernel/eeh.c:423:
+^I               severity);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#908: FILE: ppc64/kernel/eeh.c:430:
+EXPORT_SYMBOL(eeh_slot_error_detail);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1003: FILE: ppc64/kernel/eeh.c:471:
 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1004: FILE: ppc64/kernel/eeh.c:472:
+static inline struct pci_dev * eeh_find_pci_dev(struct device_node *dn)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1007: FILE: ppc64/kernel/eeh.c:475:
+	struct pci_dev *dev = NULL;
+	for_each_pci_dev(dev) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1014: FILE: ppc64/kernel/eeh.c:482:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1022: FILE: ppc64/kernel/eeh.c:498:
+extern void disable_irq_nosync(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1022: FILE: ppc64/kernel/eeh.c:498:
+extern void disable_irq_nosync(unsigned int);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1062: FILE: ppc64/kernel/eeh.c:533:
+		dn->eeh_check_count ++;
 		                    ^

WARNING:TYPO_SPELLING: 'panicing' may be misspelled - perhaps 'panicking'?
#1064: FILE: ppc64/kernel/eeh.c:535:
+			printk (KERN_ERR "EEH: Device driver ignored %d bad reads, panicing\n",
 			                                                           ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1064: FILE: ppc64/kernel/eeh.c:535:
+			printk (KERN_ERR "EEH: Device driver ignored %d bad reads, panicing\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: ppc64/kernel/eeh.c:535:
+			printk (KERN_ERR "EEH: Device driver ignored %d bad reads, panicing\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: ppc64/kernel/eeh.c:536:
+^I^I^I        dn->eeh_check_count);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1074: FILE: ppc64/kernel/eeh.c:544:
+			panic("EEH: MMIO halt (%d) on device:%s %s\n", rets[0],
+		      pci_name(dev), pci_pretty_name(dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 5'
#1083: FILE: ppc64/kernel/eeh.c:557:
+	if (!(ret == 0 && ((rets[1] == 1 && (rets[0] == 2 || rets[0] >= 4))
+	                   || (rets[0] == 5)))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: ppc64/kernel/eeh.c:558:
+^I                   || (rets[0] == 5)))) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1084: FILE: ppc64/kernel/eeh.c:558:
+	if (!(ret == 0 && ((rets[1] == 1 && (rets[0] == 2 || rets[0] >= 4))
+	                   || (rets[0] == 5)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 5'
#1092: FILE: ppc64/kernel/eeh.c:564:
+	if ((rets[0] == 5) && (dn->child == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dn->child == NULL'
#1092: FILE: ppc64/kernel/eeh.c:564:
+	if ((rets[0] == 5) && (dn->child == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dn->child"
#1092: FILE: ppc64/kernel/eeh.c:564:
+	if ((rets[0] == 5) && (dn->child == NULL)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1104: FILE: ppc64/kernel/eeh.c:573:
+	disable_irq_nosync (dev->irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: ppc64/kernel/eeh.c:575:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1117: FILE: ppc64/kernel/eeh.c:579:
+		dev = eeh_find_pci_dev (dn);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1123: FILE: ppc64/kernel/eeh.c:582:
+^Iif ((rets[0] == 2) || (rets[0] == 4)) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 2'
#1123: FILE: ppc64/kernel/eeh.c:582:
+	if ((rets[0] == 2) || (rets[0] == 4)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rets[0] == 4'
#1123: FILE: ppc64/kernel/eeh.c:582:
+	if ((rets[0] == 2) || (rets[0] == 4)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: ppc64/kernel/eeh.c:584:
+^Iif (rets[0] == 5) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1144: FILE: ppc64/kernel/eeh.c:587:
+	peh_send_failure_event (dev, state, rets[2]);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1151: FILE: ppc64/kernel/eeh.c:592:
+	if (rets[0] != 5) dump_stack();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1192: FILE: ppc64/kernel/eeh.c:640:
+{ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1194: FILE: ppc64/kernel/eeh.c:642:
+	struct device_node *dn;
+	dn = pci_device_to_OF_node(dev);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1199: FILE: ppc64/kernel/eeh.c:647:
+eeh_ioaddr_is_isolated(const volatile void __iomem *token)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1200: FILE: ppc64/kernel/eeh.c:648:
+{ $

CHECK:SPACING: No space is necessary after a cast
#1205: FILE: ppc64/kernel/eeh.c:653:
+	addr = eeh_token_to_phys((unsigned long __force) token);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: ppc64/kernel/eeh.c:663:
+ *  state: 1/0 to raise/lower the #RST $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1221: FILE: ppc64/kernel/eeh.c:669:
+	struct device_node *dn = pci_device_to_OF_node(dev);
+	rtas_pci_slot_reset (dn, state);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1221: FILE: ppc64/kernel/eeh.c:669:
+	rtas_pci_slot_reset (dn, state);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1224: FILE: ppc64/kernel/eeh.c:672:
+/** Return negative value if a permanent error, else return $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1225: FILE: ppc64/kernel/eeh.c:673:
+ * a number of milliseconds to wait until the PCI slot is $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1235: FILE: ppc64/kernel/eeh.c:683:
+	if (rc) return rc;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1237: FILE: ppc64/kernel/eeh.c:685:
+	if (rets[1] == 0) return -1;  /* EEH is not supported */

WARNING:TYPO_SPELLING: 'Oll' may be misspelled - perhaps 'All'?
#1238: FILE: ppc64/kernel/eeh.c:686:
+	if (rets[0] == 0)  return 0;  /* Oll Korrect */
 	                                 ^^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1238: FILE: ppc64/kernel/eeh.c:686:
+	if (rets[0] == 0)  return 0;  /* Oll Korrect */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1240: FILE: ppc64/kernel/eeh.c:688:
+		if (rets[2] == 0) return -1; /* permanently unavailable */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1250: FILE: ppc64/kernel/eeh.c:698:
+	struct device_node *dn = pci_device_to_OF_node(dev);
+	if (!dn) return -1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1250: FILE: ppc64/kernel/eeh.c:698:
+	if (!dn) return -1;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1252: FILE: ppc64/kernel/eeh.c:700:
+	BUG_ON (dn->phb==NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1252: FILE: ppc64/kernel/eeh.c:700:
+	BUG_ON (dn->phb==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1252: FILE: ppc64/kernel/eeh.c:700:
+	BUG_ON (dn->phb==NULL);
 	               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dn->phb"
#1252: FILE: ppc64/kernel/eeh.c:700:
+	BUG_ON (dn->phb==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1253: FILE: ppc64/kernel/eeh.c:701:
+	if (dn->phb==NULL) {
 	           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dn->phb"
#1253: FILE: ppc64/kernel/eeh.c:701:
+	if (dn->phb==NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1254: FILE: ppc64/kernel/eeh.c:702:
+		printk (KERN_ERR "EEH, checking on slot with no phb dn=%s dev=%s:%s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1254: FILE: ppc64/kernel/eeh.c:702:
+		printk (KERN_ERR "EEH, checking on slot with no phb dn=%s dev=%s:%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: ppc64/kernel/eeh.c:703:
+		printk (KERN_ERR "EEH, checking on slot with no phb dn=%s dev=%s:%s\n",
+		       dn->full_name, pci_name(dev), pci_pretty_name (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1255: FILE: ppc64/kernel/eeh.c:703:
+		       dn->full_name, pci_name(dev), pci_pretty_name (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1258: FILE: ppc64/kernel/eeh.c:706:
+	return eeh_slot_availability (dn);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1269: FILE: ppc64/kernel/eeh.c:717:
+		printk (KERN_WARNING "EEH: in slot reset, device node %s has no phb\n",                    dn->full_name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1269: FILE: ppc64/kernel/eeh.c:717:
+		printk (KERN_WARNING "EEH: in slot reset, device node %s has no phb\n",                    dn->full_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1269: FILE: ppc64/kernel/eeh.c:717:
+		printk (KERN_WARNING "EEH: in slot reset, device node %s has no phb\n",                    dn->full_name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1274: FILE: ppc64/kernel/eeh.c:722:
+	rc = rtas_call(ibm_set_slot_reset,4,1, NULL,
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1274: FILE: ppc64/kernel/eeh.c:722:
+	rc = rtas_call(ibm_set_slot_reset,4,1, NULL,
 	                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1275: FILE: ppc64/kernel/eeh.c:723:
+^I               dn->eeh_config_addr,$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1276: FILE: ppc64/kernel/eeh.c:724:
+	               BUID_HI(dn->phb->buid),
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1276: FILE: ppc64/kernel/eeh.c:724:
+^I               BUID_HI(dn->phb->buid),$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1277: FILE: ppc64/kernel/eeh.c:725:
+	               BUID_LO(dn->phb->buid),
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1277: FILE: ppc64/kernel/eeh.c:725:
+^I               BUID_LO(dn->phb->buid),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1278: FILE: ppc64/kernel/eeh.c:726:
+^I               state);$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1280: FILE: ppc64/kernel/eeh.c:728:
+		printk (KERN_WARNING "EEH: Unable to reset the failed slot, (%d) #RST=%d\n", rc, state);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1280: FILE: ppc64/kernel/eeh.c:728:
+		printk (KERN_WARNING "EEH: Unable to reset the failed slot, (%d) #RST=%d\n", rc, state);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1280: FILE: ppc64/kernel/eeh.c:728:
+		printk (KERN_WARNING "EEH: Unable to reset the failed slot, (%d) #RST=%d\n", rc, state);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1285: FILE: ppc64/kernel/eeh.c:733:
+		dn->eeh_mode &= ~(EEH_MODE_RECOVERING|EEH_MODE_ISOLATED);
 		                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1288: FILE: ppc64/kernel/eeh.c:736:
+/** rtas_set_slot_reset -- assert the pci #RST line for 1/4 second $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1297: FILE: ppc64/kernel/eeh.c:745:
+	rtas_pci_slot_reset (dn, 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1300: FILE: ppc64/kernel/eeh.c:748:
+	 * a 100 milliseconds. We wait a bit longer 'just in case'.  */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1303: FILE: ppc64/kernel/eeh.c:751:
+	msleep (PCI_BUS_RST_HOLD_TIME_MSEC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1304: FILE: ppc64/kernel/eeh.c:752:
+^Irtas_pci_slot_reset (dn, 0); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1304: FILE: ppc64/kernel/eeh.c:752:
+	rtas_pci_slot_reset (dn, 0); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1305: FILE: ppc64/kernel/eeh.c:753:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1307: FILE: ppc64/kernel/eeh.c:755:
+^I * a 1.5 second idle time for the bus to stabilize, before starting $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1308: FILE: ppc64/kernel/eeh.c:756:
+	 * up traffic. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1310: FILE: ppc64/kernel/eeh.c:758:
+	msleep (PCI_BUS_SETTLE_TIME_MSEC);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1313: FILE: ppc64/kernel/eeh.c:761:
+	 * ready to be used; if not, wait for recovery. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1314: FILE: ppc64/kernel/eeh.c:762:
+	for (i=0; i<10; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1314: FILE: ppc64/kernel/eeh.c:762:
+	for (i=0; i<10; i++) {
 	           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1315: FILE: ppc64/kernel/eeh.c:763:
+		rc = eeh_slot_availability (dn);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1316: FILE: ppc64/kernel/eeh.c:764:
+		if (rc <= 0) return;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1318: FILE: ppc64/kernel/eeh.c:766:
+		msleep (rc+100);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1318: FILE: ppc64/kernel/eeh.c:766:
+		msleep (rc+100);
 		          ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1322: FILE: ppc64/kernel/eeh.c:770:
+EXPORT_SYMBOL(rtas_set_slot_reset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1327: FILE: ppc64/kernel/eeh.c:775:
+	int token = rtas_token ("ibm,configure-bridge");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1332: FILE: ppc64/kernel/eeh.c:780:
+	rc = rtas_call(token,3,1, NULL,
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1332: FILE: ppc64/kernel/eeh.c:780:
+	rc = rtas_call(token,3,1, NULL,
 	                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1333: FILE: ppc64/kernel/eeh.c:781:
+^I               dn->eeh_config_addr,$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1334: FILE: ppc64/kernel/eeh.c:782:
+	               BUID_HI(dn->phb->buid),
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: ppc64/kernel/eeh.c:782:
+^I               BUID_HI(dn->phb->buid),$

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1335: FILE: ppc64/kernel/eeh.c:783:
+	               BUID_LO(dn->phb->buid));
 	                                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1335: FILE: ppc64/kernel/eeh.c:783:
+^I               BUID_LO(dn->phb->buid));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: ppc64/kernel/eeh.c:785:
+^I^Iprintk (KERN_WARNING "EEH: Unable to configure device bridge (%d) for %s\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1337: FILE: ppc64/kernel/eeh.c:785:
+		printk (KERN_WARNING "EEH: Unable to configure device bridge (%d) for %s\n", 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1337: FILE: ppc64/kernel/eeh.c:785:
+		printk (KERN_WARNING "EEH: Unable to configure device bridge (%d) for %s\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1338: FILE: ppc64/kernel/eeh.c:786:
+^I^I        rc, dn->full_name);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1342: FILE: ppc64/kernel/eeh.c:790:
+EXPORT_SYMBOL(rtas_configure_bridge);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1362: FILE: ppc64/kernel/eeh.c:810:
+static inline void __restore_bars (struct device_node *dn)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1366: FILE: ppc64/kernel/eeh.c:814:
+	if (NULL==dn->phb) return;
 	        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1366: FILE: ppc64/kernel/eeh.c:814:
+	if (NULL==dn->phb) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1366: FILE: ppc64/kernel/eeh.c:814:
+	if (NULL==dn->phb) return;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1367: FILE: ppc64/kernel/eeh.c:815:
+	for (i=4; i<10; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1367: FILE: ppc64/kernel/eeh.c:815:
+	for (i=4; i<10; i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1367: FILE: ppc64/kernel/eeh.c:815:
+	for (i=4; i<10; i++) {
+		rtas_write_config(dn, i*4, 4, dn->config_space[i]);
+	}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1368: FILE: ppc64/kernel/eeh.c:816:
+		rtas_write_config(dn, i*4, 4, dn->config_space[i]);
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1372: FILE: ppc64/kernel/eeh.c:820:
+	rtas_write_config(dn, 12*4, 4, dn->config_space[12]);
 	                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1373: FILE: ppc64/kernel/eeh.c:821:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1375: FILE: ppc64/kernel/eeh.c:823:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1376: FILE: ppc64/kernel/eeh.c:824:
+	rtas_write_config (dn, PCI_CACHE_LINE_SIZE, 1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1377: FILE: ppc64/kernel/eeh.c:825:
+^I            SAVED_BYTE(PCI_CACHE_LINE_SIZE));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1377: FILE: ppc64/kernel/eeh.c:825:
+	rtas_write_config (dn, PCI_CACHE_LINE_SIZE, 1,
+	            SAVED_BYTE(PCI_CACHE_LINE_SIZE));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1378: FILE: ppc64/kernel/eeh.c:826:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1379: FILE: ppc64/kernel/eeh.c:827:
+	rtas_write_config (dn, PCI_LATENCY_TIMER, 1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: ppc64/kernel/eeh.c:828:
+^I            SAVED_BYTE(PCI_LATENCY_TIMER));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1380: FILE: ppc64/kernel/eeh.c:828:
+	rtas_write_config (dn, PCI_LATENCY_TIMER, 1,
+	            SAVED_BYTE(PCI_LATENCY_TIMER));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1381: FILE: ppc64/kernel/eeh.c:829:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1382: FILE: ppc64/kernel/eeh.c:830:
+	rtas_write_config (dn, PCI_INTERRUPT_LINE, 1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1383: FILE: ppc64/kernel/eeh.c:831:
+^I            SAVED_BYTE(PCI_INTERRUPT_LINE));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1383: FILE: ppc64/kernel/eeh.c:831:
+	rtas_write_config (dn, PCI_INTERRUPT_LINE, 1,
+	            SAVED_BYTE(PCI_INTERRUPT_LINE));

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1391: FILE: ppc64/kernel/eeh.c:839:
+	if (! dn->eeh_is_bridge)
 	    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1392: FILE: ppc64/kernel/eeh.c:840:
+		__restore_bars (dn);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1393: FILE: ppc64/kernel/eeh.c:841:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1395: FILE: ppc64/kernel/eeh.c:843:
+		eeh_restore_bars (dn->child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1398: FILE: ppc64/kernel/eeh.c:846:
+		eeh_restore_bars (dn->sibling);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1405: FILE: ppc64/kernel/eeh.c:853:
+	struct device_node *dn = pci_device_to_OF_node(dev);
+	eeh_restore_bars (dn);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1405: FILE: ppc64/kernel/eeh.c:853:
+	eeh_restore_bars (dn);

WARNING:TYPO_SPELLING: 'buid' may be misspelled - perhaps 'build'?
#1447: FILE: ppc64/kernel/eeh.c:1030:
+		printk(KERN_WARNING "EEH: Expected buid but found none for %s\n",
 		                                   ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1447: FILE: ppc64/kernel/eeh.c:1030:
+		printk(KERN_WARNING "EEH: Expected buid but found none for %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: ppc64/kernel/eeh.c:1031:
+^I^I                dn->full_name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1448: FILE: ppc64/kernel/eeh.c:1031:
+		printk(KERN_WARNING "EEH: Expected buid but found none for %s\n",
+		                dn->full_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1501: FILE: ppc64/kernel/eeh.c:1118:
+^I^Iseq_printf(m, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1502: FILE: ppc64/kernel/eeh.c:1119:
+		seq_printf(m, 
+				"no device=%ld\n"

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1537: FILE: pci/hotplug/rpaphp.h:121:
+extern void init_eeh_handler (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1538: FILE: pci/hotplug/rpaphp.h:122:
+extern void exit_eeh_handler (void);

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#1594: FILE: pci/hotplug/rpaphp_pci.c:200:
+	struct pci_dev *dev;
+	list_for_each_entry(dev, &bus->devices, bus_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1598: FILE: pci/hotplug/rpaphp_pci.c:204:
+			struct pci_bus *subbus = dev->subordinate;
+			if (bus)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1599: FILE: pci/hotplug/rpaphp_pci.c:205:
+				rpaphp_eeh_add_bus_device (subbus);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1664: FILE: pci/hotplug/rpaphp_pci.c:589:
+static int rpaphp_search_bus_for_dev (struct pci_bus *bus, struct pci_dev *dev)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1668: FILE: pci/hotplug/rpaphp_pci.c:593:
+	if (!bus) return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1669: FILE: pci/hotplug/rpaphp_pci.c:594:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1672: FILE: pci/hotplug/rpaphp_pci.c:597:
+		struct pci_dev *pdev = pci_dev_b(ln);
+		if (pdev == dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1676: FILE: pci/hotplug/rpaphp_pci.c:601:
+			int rc;
+			rc = rpaphp_search_bus_for_dev (pdev->subordinate, dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1676: FILE: pci/hotplug/rpaphp_pci.c:601:
+			rc = rpaphp_search_bus_for_dev (pdev->subordinate, dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1705: FILE: pci/hotplug/rpaphp_pci.c:622:
+^I^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slot->bridge"
#1707: FILE: pci/hotplug/rpaphp_pci.c:624:
+		if (slot->bridge == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1717: FILE: pci/hotplug/rpaphp_pci.c:633:
+			printk (KERN_WARNING "PCI bridge is missing bus: %s %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1717: FILE: pci/hotplug/rpaphp_pci.c:633:
+			printk (KERN_WARNING "PCI bridge is missing bus: %s %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1718: FILE: pci/hotplug/rpaphp_pci.c:634:
+			printk (KERN_WARNING "PCI bridge is missing bus: %s %s\n",
+			    pci_name (slot->bridge), pci_pretty_name (slot->bridge));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1718: FILE: pci/hotplug/rpaphp_pci.c:634:
+			    pci_name (slot->bridge), pci_pretty_name (slot->bridge));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1718: FILE: pci/hotplug/rpaphp_pci.c:634:
+			    pci_name (slot->bridge), pci_pretty_name (slot->bridge));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1727: FILE: pci/hotplug/rpaphp_pci.c:638:
+		if (rpaphp_search_bus_for_dev (bus, dev))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1733: FILE: pci/hotplug/rpaphp_pci.c:644:
+/** get_phb_of_device -- find the pci controller for the device $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1740: FILE: pci/hotplug/rpaphp_pci.c:651:
+get_phb_of_device (struct pci_dev *dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1753: FILE: pci/hotplug/rpaphp_pci.c:664:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1755: FILE: pci/hotplug/rpaphp_pci.c:666:
+		BUG_ON (dev==NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1755: FILE: pci/hotplug/rpaphp_pci.c:666:
+		BUG_ON (dev==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1755: FILE: pci/hotplug/rpaphp_pci.c:666:
+		BUG_ON (dev==NULL);
 		           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#1755: FILE: pci/hotplug/rpaphp_pci.c:666:
+		BUG_ON (dev==NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#1756: FILE: pci/hotplug/rpaphp_pci.c:667:
+		if (dev == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1768: FILE: pci/hotplug/rpaphp_pci.c:678:
+ * bridge detects address or data parity errors, DMA's $

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#1769: FILE: pci/hotplug/rpaphp_pci.c:679:
+ * occuring to wild addresses (which usually happen due to
    ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1773: FILE: pci/hotplug/rpaphp_pci.c:683:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1776: FILE: pci/hotplug/rpaphp_pci.c:686:
+ * a PCI #RST to the device, then reconfiguring the PCI config $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1777: FILE: pci/hotplug/rpaphp_pci.c:687:
+ * space for all bridges & devices under this slot, and then $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1782: FILE: pci/hotplug/rpaphp_pci.c:692:
+int eeh_reset_device (struct pci_dev *dev, struct device_node *dn, int reconfig)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1784: FILE: pci/hotplug/rpaphp_pci.c:694:
+	struct slot *frozen_slot= NULL;
 	                        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1792: FILE: pci/hotplug/rpaphp_pci.c:702:
+	if (reconfig && frozen_slot) rpaphp_unconfig_pci_adapter (frozen_slot);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1792: FILE: pci/hotplug/rpaphp_pci.c:702:
+	if (reconfig && frozen_slot) rpaphp_unconfig_pci_adapter (frozen_slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1793: FILE: pci/hotplug/rpaphp_pci.c:703:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1794: FILE: pci/hotplug/rpaphp_pci.c:704:
+^I/* Reset the pci controller. (Asserts RST#; resets config space). $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1795: FILE: pci/hotplug/rpaphp_pci.c:705:
+	 * Reconfigure bridges and devices */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1796: FILE: pci/hotplug/rpaphp_pci.c:706:
+	rtas_set_slot_reset (dn->child);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1799: FILE: pci/hotplug/rpaphp_pci.c:709:
+	enable_irq (dev->irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1802: FILE: pci/hotplug/rpaphp_pci.c:712:
+^I * hotplug scripts, e.g. ifdown for ethernet.  Yes, this is a hack, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1806: FILE: pci/hotplug/rpaphp_pci.c:716:
+		ssleep (5);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1807: FILE: pci/hotplug/rpaphp_pci.c:717:
+		rpaphp_enable_pci_slot (frozen_slot);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1815: FILE: pci/hotplug/rpaphp_pci.c:725:
+#define MAX_WAIT_FOR_RECOVERY 15 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1817: FILE: pci/hotplug/rpaphp_pci.c:727:
+int handle_eeh_events (struct notifier_block *self, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1817: FILE: pci/hotplug/rpaphp_pci.c:727:
+int handle_eeh_events (struct notifier_block *self, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1818: FILE: pci/hotplug/rpaphp_pci.c:728:
+                       unsigned long reason, void *ev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1818: FILE: pci/hotplug/rpaphp_pci.c:728:
+                       unsigned long reason, void *ev)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1820: FILE: pci/hotplug/rpaphp_pci.c:730:
+	int freeze_count=0;
 	                ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1827: FILE: pci/hotplug/rpaphp_pci.c:737:
+	if (!dev)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1829: FILE: pci/hotplug/rpaphp_pci.c:739:
+		printk ("EEH: EEH error caught, but no PCI device specified!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1829: FILE: pci/hotplug/rpaphp_pci.c:739:
+		printk ("EEH: EEH error caught, but no PCI device specified!\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1833: FILE: pci/hotplug/rpaphp_pci.c:743:
+	frozen_device = get_phb_of_device (dev);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1835: FILE: pci/hotplug/rpaphp_pci.c:745:
+	if (!frozen_device)
+	{

WARNING:TYPO_SPELLING: 'conroller' may be misspelled - perhaps 'controller'?
#1837: FILE: pci/hotplug/rpaphp_pci.c:747:
+		printk (KERN_ERR "EEH: Cannot find PCI conroller for %s %s\n",
 		                                       ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1837: FILE: pci/hotplug/rpaphp_pci.c:747:
+		printk (KERN_ERR "EEH: Cannot find PCI conroller for %s %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1837: FILE: pci/hotplug/rpaphp_pci.c:747:
+		printk (KERN_ERR "EEH: Cannot find PCI conroller for %s %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1838: FILE: pci/hotplug/rpaphp_pci.c:748:
+		printk (KERN_ERR "EEH: Cannot find PCI conroller for %s %s\n",
+				pci_name(dev), pci_pretty_name (dev));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1838: FILE: pci/hotplug/rpaphp_pci.c:748:
+				pci_name(dev), pci_pretty_name (dev));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1843: FILE: pci/hotplug/rpaphp_pci.c:753:
+^I/* We get "permanent failure" messages on empty slots. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1844: FILE: pci/hotplug/rpaphp_pci.c:754:
+	 * These are false alarms. Empty slots have no child dn. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->state == pci_device_io_perm_failure'
#1845: FILE: pci/hotplug/rpaphp_pci.c:755:
+	if ((event->state == pci_device_io_perm_failure) && (frozen_device == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frozen_device == NULL'
#1845: FILE: pci/hotplug/rpaphp_pci.c:755:
+	if ((event->state == pci_device_io_perm_failure) && (frozen_device == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!frozen_device"
#1845: FILE: pci/hotplug/rpaphp_pci.c:755:
+	if ((event->state == pci_device_io_perm_failure) && (frozen_device == NULL))

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#1850: FILE: pci/hotplug/rpaphp_pci.c:760:
+	freeze_count ++;
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1853: FILE: pci/hotplug/rpaphp_pci.c:763:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1854: FILE: pci/hotplug/rpaphp_pci.c:764:
+^I/* If the reset state is a '5' and the time to reset is 0 (infinity) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1855: FILE: pci/hotplug/rpaphp_pci.c:765:
+^I * or is more then 15 seconds, then mark this as a permanent failure. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1857: FILE: pci/hotplug/rpaphp_pci.c:767:
+^Iif ((event->state == pci_device_io_perm_failure) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->state == pci_device_io_perm_failure'
#1857: FILE: pci/hotplug/rpaphp_pci.c:767:
+	if ((event->state == pci_device_io_perm_failure) && 
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000))) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'event->time_unavail <= 0'
#1857: FILE: pci/hotplug/rpaphp_pci.c:767:
+	if ((event->state == pci_device_io_perm_failure) && 
+	    ((event->time_unavail <= 0) ||
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000))) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1859: FILE: pci/hotplug/rpaphp_pci.c:769:
+^I     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000))) $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1859: FILE: pci/hotplug/rpaphp_pci.c:769:
+	     (event->time_unavail > MAX_WAIT_FOR_RECOVERY*1000))) 
 	                                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1861: FILE: pci/hotplug/rpaphp_pci.c:771:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1864: FILE: pci/hotplug/rpaphp_pci.c:774:
+^I^I/* $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1869: FILE: pci/hotplug/rpaphp_pci.c:779:
+		printk (KERN_ERR

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1869: FILE: pci/hotplug/rpaphp_pci.c:779:
+		printk (KERN_ERR

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1870: FILE: pci/hotplug/rpaphp_pci.c:780:
+		   "EEH: device %s:%s has failed %d times \n"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1873: FILE: pci/hotplug/rpaphp_pci.c:783:
+			pci_name (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1874: FILE: pci/hotplug/rpaphp_pci.c:784:
+			pci_pretty_name (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1877: FILE: pci/hotplug/rpaphp_pci.c:787:
+		eeh_slot_error_detail (frozen_device, 2 /* Permanent Error */);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1880: FILE: pci/hotplug/rpaphp_pci.c:790:
+^I^I/* XXX this should be a recursive walk to children for $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1881: FILE: pci/hotplug/rpaphp_pci.c:791:
+		 * multi-function devices */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1882: FILE: pci/hotplug/rpaphp_pci.c:792:
+		if (dev->driver->io_state_change) {
+			dev->driver->io_state_change (dev, pci_device_io_perm_failure);
+		}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1883: FILE: pci/hotplug/rpaphp_pci.c:793:
+			dev->driver->io_state_change (dev, pci_device_io_perm_failure);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1887: FILE: pci/hotplug/rpaphp_pci.c:797:
+		struct slot * frozen_slot = rpaphp_find_slot(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1888: FILE: pci/hotplug/rpaphp_pci.c:798:
+		struct slot * frozen_slot = rpaphp_find_slot(dev);
+		rpaphp_unconfig_pci_adapter (frozen_slot);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1888: FILE: pci/hotplug/rpaphp_pci.c:798:
+		rpaphp_unconfig_pci_adapter (frozen_slot);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1890: FILE: pci/hotplug/rpaphp_pci.c:800:
+		return 1;
+	} else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1891: FILE: pci/hotplug/rpaphp_pci.c:801:
+		eeh_slot_error_detail (frozen_device, 1 /* Temporary Error */);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1894: FILE: pci/hotplug/rpaphp_pci.c:804:
+	printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1894: FILE: pci/hotplug/rpaphp_pci.c:804:
+	printk (KERN_WARNING

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1897: FILE: pci/hotplug/rpaphp_pci.c:807:
+		pci_name (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1898: FILE: pci/hotplug/rpaphp_pci.c:808:
+		pci_pretty_name (dev));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1902: FILE: pci/hotplug/rpaphp_pci.c:812:
+	 * to accomplish the reset */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1903: FILE: pci/hotplug/rpaphp_pci.c:813:
+^I/* XXX this should be a recursive walk to children for $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1906: FILE: pci/hotplug/rpaphp_pci.c:816:
+	 * then need to hotplug it. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1908: FILE: pci/hotplug/rpaphp_pci.c:818:
+		dev->driver->io_state_change (dev, pci_device_io_frozen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1909: FILE: pci/hotplug/rpaphp_pci.c:819:
+		rc = eeh_reset_device (dev, frozen_device, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1910: FILE: pci/hotplug/rpaphp_pci.c:820:
+		dev->driver->io_state_change (dev, pci_device_io_thawed);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1912: FILE: pci/hotplug/rpaphp_pci.c:822:
+		rc = eeh_reset_device (dev, frozen_device, 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1928: FILE: pci/hotplug/rpaphp_pci.c:838:
+	peh_register_notifier (&eeh_block);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1933: FILE: pci/hotplug/rpaphp_pci.c:843:
+	peh_unregister_notifier (&eeh_block);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199722.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 152 errors, 204 warnings, 52 checks, 1769 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000199722.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
