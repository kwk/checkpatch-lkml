WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
The accuracy of stateful thrashing-threshold estimation depends largely on the

CHECK:BIT_MACRO: Prefer using the BIT macro
#87: FILE: mm/readahead.c:213:
+#define AGING_INFO_SIZE	(1 << 8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxE)
#90: FILE: mm/readahead.c:216:
+#define AGING_INFO_SHIFTS	(sizeof(aging_info_shift)/\
                          	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#93: FILE: mm/readahead.c:219:
+static unsigned long aging_info[AGING_INFO_SIZE][AGING_INFO_SHIFTS*3];
                                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#114: FILE: mm/readahead.c:240:
+		if (smooth_aging - aging_info[aging_info_index[i]][i*3+2] +
 		                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#114: FILE: mm/readahead.c:240:
+		if (smooth_aging - aging_info[aging_info_index[i]][i*3+2] +
 		                                                      ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#114: FILE: mm/readahead.c:240:
+		if (smooth_aging - aging_info[aging_info_index[i]][i*3+2] +
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#115: FILE: mm/readahead.c:241:
+		      page_aging - aging_info[aging_info_index[i]][i*3+1] >
 		                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: mm/readahead.c:241:
+		      page_aging - aging_info[aging_info_index[i]][i*3+1] >
 		                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#119: FILE: mm/readahead.c:245:
+			aging_info[aging_info_index[i]][i*3] = jiffies;
 			                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#120: FILE: mm/readahead.c:246:
+			aging_info[aging_info_index[i]][i*3+1] = page_aging;
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: mm/readahead.c:246:
+			aging_info[aging_info_index[i]][i*3+1] = page_aging;
 			                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: mm/readahead.c:247:
+			aging_info[aging_info_index[i]][i*3+2] = smooth_aging;
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#121: FILE: mm/readahead.c:247:
+			aging_info[aging_info_index[i]][i*3+2] = smooth_aging;
 			                                   ^

CHECK:BRACES: Unbalanced braces around else statement
#122: FILE: mm/readahead.c:248:
+		} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#138: FILE: mm/readahead.c:264:
+			seq_printf(s, "%12s %10s %18s%d %18s%d\t", "time","dt",
 			                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: mm/readahead.c:265:
+                                        "page_aging", aging_info_shift[i],$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: mm/readahead.c:265:
+			seq_printf(s, "%12s %10s %18s%d %18s%d\t", "time","dt",
+                                        "page_aging", aging_info_shift[i],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: mm/readahead.c:265:
+                                        "page_aging", aging_info_shift[i],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: mm/readahead.c:266:
+                                        "smooth_aging", aging_info_shift[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: mm/readahead.c:266:
+                                        "smooth_aging", aging_info_shift[i]);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#179: FILE: mm/readahead.c:305:
+		time = aging_info[index0][i*3];
 		                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#180: FILE: mm/readahead.c:306:
+		nr1 = aging_info[index1][i*3+1] - aging_info[index0][i*3+1];
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: mm/readahead.c:306:
+		nr1 = aging_info[index1][i*3+1] - aging_info[index0][i*3+1];
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#180: FILE: mm/readahead.c:306:
+		nr1 = aging_info[index1][i*3+1] - aging_info[index0][i*3+1];
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: mm/readahead.c:306:
+		nr1 = aging_info[index1][i*3+1] - aging_info[index0][i*3+1];
 		                                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#181: FILE: mm/readahead.c:307:
+		nr2 = aging_info[index1][i*3+2] - aging_info[index0][i*3+2];
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#181: FILE: mm/readahead.c:307:
+		nr2 = aging_info[index1][i*3+2] - aging_info[index0][i*3+2];
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#181: FILE: mm/readahead.c:307:
+		nr2 = aging_info[index1][i*3+2] - aging_info[index0][i*3+2];
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#181: FILE: mm/readahead.c:307:
+		nr2 = aging_info[index1][i*3+2] - aging_info[index0][i*3+2];
 		                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: mm/readahead.c:309:
+		seq_printf(s, "%12ld %10lu %10lu %8lu %10lu %8lu\t",
+				time,  aging_info[index1][i*3] - time,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#183: FILE: mm/readahead.c:309:
+				time,  aging_info[index1][i*3] - time,
 				                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#184: FILE: mm/readahead.c:310:
+				aging_info[index0][i*3+1], nr1,
 				                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: mm/readahead.c:310:
+				aging_info[index0][i*3+1], nr1,
 				                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#185: FILE: mm/readahead.c:311:
+				aging_info[index0][i*3+2], nr2);
 				                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#185: FILE: mm/readahead.c:311:
+				aging_info[index0][i*3+2], nr2);
 				                      ^

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#195: FILE: mm/readahead.c:321:
+struct seq_operations aginginfo_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#216: FILE: mm/readahead.c:353:
+static struct file_operations aginginfo_fops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#223: FILE: mm/readahead.c:360:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: mm/readahead.c:366:
+	pageaging_dentry = debugfs_create_file("pageaging",
+					0644, NULL, NULL, &aginginfo_fops);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140435.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 5 warnings, 32 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140435.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
