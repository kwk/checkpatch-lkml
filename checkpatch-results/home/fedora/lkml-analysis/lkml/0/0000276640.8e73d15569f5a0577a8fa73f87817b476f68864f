WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
>   madly patching dmi_scan.c.  The subsequent reject storm forced me to dr=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#79: FILE: arch/i386/kernel/dmi_scan.c:14:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/i386/kernel/dmi_scan.c:1067:
+ ^Idmi_check_system(dmi_blacklist);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: arch/i386/kernel/dmi_scan.c:1067:
+ ^Idmi_check_system(dmi_blacklist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/i386/kernel/dmi_scan.c:1067:
+ ^Idmi_check_system(dmi_blacklist);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: arch/i386/kernel/dmi_scan.c:1134:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#183: FILE: arch/i386/kernel/dmi_scan.c:1141:
+ *	each successfull match. Returns the number of matches.
   	     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: arch/i386/kernel/dmi_scan.c:1145:
+	int i, count =3D 0;
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#188: FILE: arch/i386/kernel/dmi_scan.c:1146:
+	struct dmi_system_id *d =3D list;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#191: FILE: arch/i386/kernel/dmi_scan.c:1149:
+		for (i =3D 0; i < ARRAY_SIZE(d->matches); i++) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#192: FILE: arch/i386/kernel/dmi_scan.c:1150:
+			int s =3D d->matches[i].slot;
 			      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: arch/i386/kernel/dmi_scan.c:1151:
+			int s =3D d->matches[i].slot;
+			if (s =3D=3D DMI_NONE)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#193: FILE: arch/i386/kernel/dmi_scan.c:1151:
+			if (s =3D=3D DMI_NONE)
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#193: FILE: arch/i386/kernel/dmi_scan.c:1151:
+			if (s =3D=3D DMI_NONE)
 			         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: arch/i386/kernel/dmi_scan.c:1151:
+			if (s =3D=3D DMI_NONE)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#209: FILE: arch/i386/kernel/dmi_scan.c:1167:
+EXPORT_SYMBOL(dmi_check_system);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: arch/i386/kernel/dmi_scan.c:1176:
+char * dmi_get_system_info(int field)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#223: FILE: arch/i386/kernel/dmi_scan.c:1181:
+EXPORT_SYMBOL(dmi_get_system_info);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: include/linux/dmi.h:1:
+#ifndef __DMI_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dmi_system_id *' should also have an identifier name
#255: FILE: include/linux/dmi.h:27:
+	int (*callback)(struct dmi_system_id *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/linux/dmi.h:33:
+#define DMI_MATCH(a,b)	{ a, b }
                    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#265: FILE: include/linux/dmi.h:37:
+extern int dmi_check_system(struct dmi_system_id *list);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: include/linux/dmi.h:38:
+extern char * dmi_get_system_info(int field);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/dmi.h:38:
+extern char * dmi_get_system_info(int field);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#270: FILE: include/linux/dmi.h:42:
+static inline int dmi_check_system(struct dmi_system_id *list) { return 0;=

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ';' (ctx:VxO)
#270: FILE: include/linux/dmi.h:42:
+static inline int dmi_check_system(struct dmi_system_id *list) { return 0;=
                                                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxE)
#270: FILE: include/linux/dmi.h:42:
+static inline int dmi_check_system(struct dmi_system_id *list) { return 0;=
                                                                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#272: FILE: include/linux/dmi.h:44:
 }
+static inline char * dmi_get_system_info(int field) { return NULL; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: include/linux/dmi.h:44:
+static inline char * dmi_get_system_info(int field) { return NULL; }

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276640.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 9 warnings, 4 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276640.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
