CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: scripts/mod/modpost.c:162:
+static struct symbol *new_symbol(const char *name, struct module *module,
+					int export_type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: scripts/mod/modpost.c:194:
+static struct symbol *sym_add_exported(const char *name, struct module *mod,
+				int export_type)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#128: FILE: scripts/mod/modpost.c:326:
+		secname = secstrings+sechdrs[i].sh_name;
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#129: FILE: scripts/mod/modpost.c:327:
+		if (strcmp(secname, ".modinfo") == 0) {
[...]
-		}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: scripts/mod/modpost.c:381:
+			sym_update_crc(symname + strlen(CRC_PFX), mod, crc,
+					export_type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: scripts/mod/modpost.c:426:
+			sym_add_exported(symname + strlen(KSYMTAB_PFX), mod,
+					export_type);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#185: FILE: scripts/mod/modpost.c:1135:
+		if (!(export = strchr(modname, '\t')))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: scripts/mod/modpost.c:1142:
+		if (*symname == '\0' || *modname == '\0' || *export == '\0' ||
+					*d != '\0')

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: scripts/mod/modpost.c:1147:
+		else if(strcmp(export, "EXPORT_SYMBOL") == 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: scripts/mod/modpost.c:1193:
+				buf_printf(&buf, "0x%08x\t%s\t%s\t%s\n",
 					symbol->crc, symbol->name,

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#226: FILE: scripts/mod/modpost.c:1195:
+					(symbol->export_type?
 					                    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078624.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 0 warnings, 8 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078624.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
