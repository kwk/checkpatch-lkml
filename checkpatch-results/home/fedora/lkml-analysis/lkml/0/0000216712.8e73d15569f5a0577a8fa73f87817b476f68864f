WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: fs/fuse/fuse_i.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#50: FILE: fs/fuse/fuse_i.h:2:
+/*
+  FUSE: Filesystem in Userspace

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#72: FILE: fs/fuse/fuse_i.h:24:
+	 * and kernel */

CHECK:SPACING: No space is necessary after a cast
#99: FILE: fs/fuse/fuse_i.h:51:
+	return (struct fuse_conn **) &sb->s_fs_info;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#142: FILE: fs/fuse/inode.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#143: FILE: fs/fuse/inode.c:2:
+/*
+  FUSE: Filesystem in Userspace

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#167: FILE: fs/fuse/inode.c:26:
+spinlock_t fuse_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: fs/fuse/inode.c:38:
+	unsigned rootmode;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#180: FILE: fs/fuse/inode.c:39:
+	unsigned user_id;

CHECK:SPACING: No space is necessary after a cast
#242: FILE: fs/fuse/inode.c:101:
+	unsigned long nodeid = *(unsigned long *) _nodeidp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: fs/fuse/inode.c:102:
+	unsigned long nodeid = *(unsigned long *) _nodeidp;
+	if (get_node_id(inode) == nodeid)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#251: FILE: fs/fuse/inode.c:110:
+	unsigned long nodeid = *(unsigned long *) _nodeidp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: fs/fuse/inode.c:111:
+	unsigned long nodeid = *(unsigned long *) _nodeidp;
+	get_fuse_inode(inode)->nodeid = nodeid;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: fs/fuse/inode.c:133:
+		BUG_ON(retried);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#277: FILE: fs/fuse/inode.c:136:
+		iput(inode);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#292: FILE: fs/fuse/inode.c:151:
+	mount_count --;
 	            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: fs/fuse/inode.c:184:
+	char *p;
+	memset(d, 0, sizeof(struct fuse_mount_data));

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: fs/fuse/inode.c:191:
+		substring_t args[MAX_OPT_ARGS];
+		if (!*p)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fc"
#383: FILE: fs/fuse/inode.c:242:
+	if (fc != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fc"
#398: FILE: fs/fuse/inode.c:257:
+	if (fc == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: fs/fuse/inode.c:265:
+static struct inode *get_root_inode(struct super_block *sb, unsigned mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#409: FILE: fs/fuse/inode.c:268:
+	struct fuse_attr attr;
+	memset(&attr, 0, sizeof(attr));

WARNING:LINE_SPACING: Missing a blank line after declarations
#428: FILE: fs/fuse/inode.c:287:
+	int success = 0;
+	spin_lock(&fuse_lock);

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#429: FILE: fs/fuse/inode.c:288:
+	mount_count ++;
 	            ^

CHECK:SPACING: No space is necessary after a cast
#444: FILE: fs/fuse/inode.c:303:
+	if (!parse_fuse_opt((char *) data, &d))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fc"
#459: FILE: fs/fuse/inode.c:318:
+	if (fc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root"
#472: FILE: fs/fuse/inode.c:331:
+	if (root == NULL)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#477: FILE: fs/fuse/inode.c:336:
+		iput(root);
 		^^^^

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#484: FILE: fs/fuse/inode.c:343:
+	mount_count --;
 	            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: fs/fuse/inode.c:368:
+	struct inode * inode = foo;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#511: FILE: fs/fuse/inode.c:370:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) ==
 	                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#521: FILE: fs/fuse/inode.c:380:
+	if (err)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#522: FILE: fs/fuse/inode.c:381:
+		printk("fuse: failed to register filesystem\n");

CHECK:BRACES: Unbalanced braces around else statement
#523: FILE: fs/fuse/inode.c:382:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#547: FILE: fs/fuse/inode.c:406:
+	printk("fuse init (API version %i.%i)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#563: FILE: fs/fuse/inode.c:422:
+	printk(KERN_DEBUG "fuse exit\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#574: FILE: include/linux/fuse.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#575: FILE: include/linux/fuse.h:2:
+/*
+    FUSE: Filesystem in Userspace

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 22 warnings, 12 checks, 562 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
