CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#671: FILE: scripts/kconfig/qconf.h:39:
+	ConfigView(QWidget* parent, ConfigSettings* configSettings);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#671: FILE: scripts/kconfig/qconf.h:39:
+	ConfigView(QWidget* parent, ConfigSettings* configSettings);
 	                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <ConfigView>
#671: FILE: scripts/kconfig/qconf.h:39:
+	ConfigView(QWidget* parent, ConfigSettings* configSettings);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <QWidget>
#671: FILE: scripts/kconfig/qconf.h:39:
+	ConfigView(QWidget* parent, ConfigSettings* configSettings);

CHECK:CAMELCASE: Avoid CamelCase: <ConfigSettings>
#671: FILE: scripts/kconfig/qconf.h:39:
+	ConfigView(QWidget* parent, ConfigSettings* configSettings);

CHECK:CAMELCASE: Avoid CamelCase: <configSettings>
#671: FILE: scripts/kconfig/qconf.h:39:
+	ConfigView(QWidget* parent, ConfigSettings* configSettings);

CHECK:CAMELCASE: Avoid CamelCase: <singleMode>
#680: FILE: scripts/kconfig/qconf.h:56:
+	singleMode, menuMode, symbolMode, fullMode, listMode

CHECK:CAMELCASE: Avoid CamelCase: <menuMode>
#680: FILE: scripts/kconfig/qconf.h:56:
+	singleMode, menuMode, symbolMode, fullMode, listMode

CHECK:CAMELCASE: Avoid CamelCase: <symbolMode>
#680: FILE: scripts/kconfig/qconf.h:56:
+	singleMode, menuMode, symbolMode, fullMode, listMode

CHECK:CAMELCASE: Avoid CamelCase: <fullMode>
#680: FILE: scripts/kconfig/qconf.h:56:
+	singleMode, menuMode, symbolMode, fullMode, listMode

CHECK:CAMELCASE: Avoid CamelCase: <listMode>
#680: FILE: scripts/kconfig/qconf.h:56:
+	singleMode, menuMode, symbolMode, fullMode, listMode

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#688: FILE: scripts/kconfig/qconf.h:63:
+	ConfigList(ConfigView* p, ConfigSettings *configSettings);
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#688: FILE: scripts/kconfig/qconf.h:63:
+	ConfigList(ConfigView* p, ConfigSettings *configSettings);
 	                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <ConfigList>
#688: FILE: scripts/kconfig/qconf.h:63:
+	ConfigList(ConfigView* p, ConfigSettings *configSettings);

CHECK:CAMELCASE: Avoid CamelCase: <menuChanged>
#705: FILE: scripts/kconfig/qconf.h:85:
+	void menuChanged(struct menu *menu);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#716: FILE: scripts/kconfig/qconf.h:210:
+	ConfigLineEdit(ConfigView* parent);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ConfigLineEdit>
#716: FILE: scripts/kconfig/qconf.h:210:
+	ConfigLineEdit(ConfigView* parent);

CHECK:CAMELCASE: Avoid CamelCase: <ConfigInfoView>
#724: FILE: scripts/kconfig/qconf.h:222:
+class ConfigInfoView : public QTextBrowser {

CHECK:CAMELCASE: Avoid CamelCase: <QTextBrowser>
#724: FILE: scripts/kconfig/qconf.h:222:
+class ConfigInfoView : public QTextBrowser {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#726: FILE: scripts/kconfig/qconf.h:224:
+	typedef class QTextBrowser Parent;

CHECK:CAMELCASE: Avoid CamelCase: <Parent>
#726: FILE: scripts/kconfig/qconf.h:224:
+	typedef class QTextBrowser Parent;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#728: FILE: scripts/kconfig/qconf.h:226:
+	ConfigInfoView(QWidget* parent, const char *name = 0);
 	                      ^

CHECK:CAMELCASE: Avoid CamelCase: <showDebug>
#729: FILE: scripts/kconfig/qconf.h:227:
+	bool showDebug(void) const { return _showDebug; }

CHECK:CAMELCASE: Avoid CamelCase: <_showDebug>
#729: FILE: scripts/kconfig/qconf.h:227:
+	bool showDebug(void) const { return _showDebug; }

CHECK:CAMELCASE: Avoid CamelCase: <setInfo>
#732: FILE: scripts/kconfig/qconf.h:230:
+	void setInfo(struct menu *menu);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#733: FILE: scripts/kconfig/qconf.h:231:
+	void setSource(const QString& name);
 	                            ^

CHECK:CAMELCASE: Avoid CamelCase: <setSource>
#733: FILE: scripts/kconfig/qconf.h:231:
+	void setSource(const QString& name);

CHECK:CAMELCASE: Avoid CamelCase: <QString>
#733: FILE: scripts/kconfig/qconf.h:231:
+	void setSource(const QString& name);

CHECK:CAMELCASE: Avoid CamelCase: <setShowDebug>
#734: FILE: scripts/kconfig/qconf.h:232:
+	void setShowDebug(bool);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bool' should also have an identifier name
#734: FILE: scripts/kconfig/qconf.h:232:
+	void setShowDebug(bool);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:CAMELCASE: Avoid CamelCase: <showDebugChanged>
#737: FILE: scripts/kconfig/qconf.h:235:
+	void showDebugChanged(bool);

CHECK:CAMELCASE: Avoid CamelCase: <menuInfo>
#740: FILE: scripts/kconfig/qconf.h:238:
+	void menuInfo(void);

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#742: FILE: scripts/kconfig/qconf.h:240:
+	static QString print_filter(const QString &str);
 	                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <ConfigSearchWindow>
#749: FILE: scripts/kconfig/qconf.h:247:
+class ConfigSearchWindow : public QDialog {

CHECK:CAMELCASE: Avoid CamelCase: <QDialog>
#749: FILE: scripts/kconfig/qconf.h:247:
+class ConfigSearchWindow : public QDialog {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#751: FILE: scripts/kconfig/qconf.h:249:
+	typedef class QDialog Parent;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#753: FILE: scripts/kconfig/qconf.h:251:
+	ConfigSearchWindow(QWidget* parent);
 	                          ^

ERROR:SPACING: space required before that '*' (ctx:VxW)
#757: FILE: scripts/kconfig/qconf.h:255:
+	QLineEdit* editField;
 	         ^

ERROR:SPACING: space prohibited after that '*' (ctx:VxW)
#757: FILE: scripts/kconfig/qconf.h:255:
+	QLineEdit* editField;
 	         ^

CHECK:CAMELCASE: Avoid CamelCase: <QLineEdit>
#757: FILE: scripts/kconfig/qconf.h:255:
+	QLineEdit* editField;

CHECK:CAMELCASE: Avoid CamelCase: <editField>
#757: FILE: scripts/kconfig/qconf.h:255:
+	QLineEdit* editField;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#758: FILE: scripts/kconfig/qconf.h:256:
+	QPushButton* searchButton;

CHECK:CAMELCASE: Avoid CamelCase: <QPushButton>
#758: FILE: scripts/kconfig/qconf.h:256:
+	QPushButton* searchButton;

CHECK:CAMELCASE: Avoid CamelCase: <searchButton>
#758: FILE: scripts/kconfig/qconf.h:256:
+	QPushButton* searchButton;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#759: FILE: scripts/kconfig/qconf.h:257:
+	ConfigView* list;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#760: FILE: scripts/kconfig/qconf.h:258:
+	ConfigInfoView* info;

CHECK:CAMELCASE: Avoid CamelCase: <searchConfig>
#772: FILE: scripts/kconfig/qconf.h:275:
+	void searchConfig(void);

CHECK:CAMELCASE: Avoid CamelCase: <searchWindow>
#785: FILE: scripts/kconfig/qconf.h:290:
+	ConfigSearchWindow *searchWindow;

CHECK:CAMELCASE: Avoid CamelCase: <helpText>
#791: FILE: scripts/kconfig/qconf.h:295:
+	ConfigInfoView *helpText;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 3 warnings, 40 checks, 728 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086733.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
