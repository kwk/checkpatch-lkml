WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#30: 
check, if request_module() function is useable. Implementation follows.
                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# Project Name: Perex's Linux 2.5 Tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	           ChangeSet	1.4     -> 1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#	       kernel/kmod.c	1.2     -> 1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#	include/linux/kmod.h	1.1     -> 1.2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
# 02/02/24	perex@perex.cz	1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# kmod.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#   Exported function can_request_module()

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# kmod.c, kmod.h:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#   Added can_request_module() function.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#52: 
--- a/include/linux/kmod.h	Sun Feb 24 13:20:44 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: include/linux/kmod.h:26:
+extern int can_request_module(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#81: FILE: kernel/kmod.c:179:
+	if ( ! current->fs->root )
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: kernel/kmod.c:179:
+	if ( ! current->fs->root )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: kernel/kmod.c:179:
+	if ( ! current->fs->root )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#85: FILE: kernel/kmod.c:183:
+	if ( ! strcmp("rootfs", current->fs->pwdmnt->mnt_sb->s_type->name) )
 	     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#85: FILE: kernel/kmod.c:183:
+	if ( ! strcmp("rootfs", current->fs->pwdmnt->mnt_sb->s_type->name) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#85: FILE: kernel/kmod.c:183:
+	if ( ! strcmp("rootfs", current->fs->pwdmnt->mnt_sb->s_type->name) )

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#109: FILE: kernel/kmod.c:221:
+	if ( ! strcmp("rootfs", current->fs->pwdmnt->mnt_sb->s_type->name) ) {
 	     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#109: FILE: kernel/kmod.c:221:
+	if ( ! strcmp("rootfs", current->fs->pwdmnt->mnt_sb->s_type->name) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#109: FILE: kernel/kmod.c:221:
+	if ( ! strcmp("rootfs", current->fs->pwdmnt->mnt_sb->s_type->name) ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#110: FILE: kernel/kmod.c:222:
+		printk(KERN_ERR "request_module[%s]: Real root fs not mounted\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: kernel/kmod.c:223:
+		printk(KERN_ERR "request_module[%s]: Real root fs not mounted\n",
+			module_name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474647.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 20 warnings, 2 checks, 65 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474647.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
