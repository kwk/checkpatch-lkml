WARNING:TYPO_SPELLING: 'mailling' may be misspelled - perhaps 'mailing'?
#39: 
We also fix a bug in the check_dsp routine (reported on our mailling 
                                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unsued' may be misspelled - perhaps 'unused'?
#40: 
list) and kill some unsued code.
                    ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: drivers/usb/atm/Kconfig:59:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: drivers/usb/atm/ueagle-atm.c:1:
+/*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#135: FILE: drivers/usb/atm/ueagle-atm.c:47:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#136: FILE: drivers/usb/atm/ueagle-atm.c:48:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:REPEATED_WORD: Possible repeated word: 'was'
#142: FILE: drivers/usb/atm/ueagle-atm.c:54:
+ * The rest of the code was was rewritten from scratch.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/usb/atm/ueagle-atm.c:72:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#169: FILE: drivers/usb/atm/ueagle-atm.c:81:
+					__FUNCTION__, ##args); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/usb/atm/ueagle-atm.c:82:
+       } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/usb/atm/ueagle-atm.c:89:
+       } while (0)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#180: FILE: drivers/usb/atm/ueagle-atm.c:92:
+	uea_vdbg(usb_dev, "entering %s\n", __FUNCTION__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#183: FILE: drivers/usb/atm/ueagle-atm.c:95:
+	uea_vdbg(usb_dev, "leaving  %s\n", __FUNCTION__)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#185: FILE: drivers/usb/atm/ueagle-atm.c:97:
+#define uea_err(usb_dev, format,args...) \
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#186: FILE: drivers/usb/atm/ueagle-atm.c:98:
+	dev_err(&(usb_dev)->dev ,"[UEAGLE-ATM] " format , ##args)
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#186: FILE: drivers/usb/atm/ueagle-atm.c:98:
+	dev_err(&(usb_dev)->dev ,"[UEAGLE-ATM] " format , ##args)
 	                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#186: FILE: drivers/usb/atm/ueagle-atm.c:98:
+	dev_err(&(usb_dev)->dev ,"[UEAGLE-ATM] " format , ##args)
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: drivers/usb/atm/ueagle-atm.c:100:
+#define uea_warn(usb_dev, format,args...) \
                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#189: FILE: drivers/usb/atm/ueagle-atm.c:101:
+	dev_warn(&(usb_dev)->dev ,"[Ueagle-atm] " format, ##args)
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#189: FILE: drivers/usb/atm/ueagle-atm.c:101:
+	dev_warn(&(usb_dev)->dev ,"[Ueagle-atm] " format, ##args)
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: drivers/usb/atm/ueagle-atm.c:103:
+#define uea_info(usb_dev, format,args...) \
                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#192: FILE: drivers/usb/atm/ueagle-atm.c:104:
+	dev_info(&(usb_dev)->dev ,"[ueagle-atm] " format, ##args)
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#192: FILE: drivers/usb/atm/ueagle-atm.c:104:
+	dev_info(&(usb_dev)->dev ,"[ueagle-atm] " format, ##args)
 	                         ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#198: FILE: drivers/usb/atm/ueagle-atm.c:110:
+} __attribute__ ((packed));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#294: FILE: drivers/usb/atm/ueagle-atm.c:206:
+#define PSTFIRM (1<<7)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#294: FILE: drivers/usb/atm/ueagle-atm.c:206:
+#define PSTFIRM (1<<7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sc' may be better as '(sc)' to avoid precedence issues
#308: FILE: drivers/usb/atm/ueagle-atm.c:220:
+#define IS_ISDN(sc) \
+	(le16_to_cpu(sc->usb_dev->descriptor.bcdDevice) & 0x80)

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#309: FILE: drivers/usb/atm/ueagle-atm.c:221:
+	(le16_to_cpu(sc->usb_dev->descriptor.bcdDevice) & 0x80)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ins' may be better as '(ins)' to avoid precedence issues
#311: FILE: drivers/usb/atm/ueagle-atm.c:223:
+#define INS_TO_USBDEV(ins) ins->usb_dev

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'data' may be better as '(data)' to avoid precedence issues
#313: FILE: drivers/usb/atm/ueagle-atm.c:225:
+#define GET_STATUS(data) \
+	((data >> 8) & 0xf)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sc' may be better as '(sc)' to avoid precedence issues
#315: FILE: drivers/usb/atm/ueagle-atm.c:227:
+#define IS_OPERATIONAL(sc) \
+	(GET_STATUS(sc->stats.phy.state) == 2)

CHECK:SPACING: No space is necessary after a cast
#323: FILE: drivers/usb/atm/ueagle-atm.c:235:
+#define FW_GET_BYTE(p)	*((__u8 *) (p))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#323: FILE: drivers/usb/atm/ueagle-atm.c:235:
+#define FW_GET_BYTE(p)	*((__u8 *) (p))

CHECK:SPACING: No space is necessary after a cast
#324: FILE: drivers/usb/atm/ueagle-atm.c:236:
+#define FW_GET_WORD(p)	le16_to_cpu(get_unaligned((__le16 *) (p)))

CHECK:SPACING: No space is necessary after a cast
#325: FILE: drivers/usb/atm/ueagle-atm.c:237:
+#define FW_GET_LONG(p)	le32_to_cpu(get_unaligned((__le32 *) (p)))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: drivers/usb/atm/ueagle-atm.c:247:
+#define UEA_INTR_IFACE_NO ^I0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#346: FILE: drivers/usb/atm/ueagle-atm.c:258:
+#define UEA_SET_BLOCK    ^I0x0001$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: drivers/usb/atm/ueagle-atm.c:259:
+#define UEA_SET_MODE     ^I0x0003$

CHECK:CAMELCASE: Avoid CamelCase: <wHdr>
#364: FILE: drivers/usb/atm/ueagle-atm.c:276:
+	__le16 wHdr;

CHECK:CAMELCASE: Avoid CamelCase: <wAddress>
#366: FILE: drivers/usb/atm/ueagle-atm.c:278:
+	__le16 wAddress;

CHECK:CAMELCASE: Avoid CamelCase: <wSize>
#367: FILE: drivers/usb/atm/ueagle-atm.c:279:
+	__le16 wSize;

CHECK:CAMELCASE: Avoid CamelCase: <wOvlOffset>
#368: FILE: drivers/usb/atm/ueagle-atm.c:280:
+	__le16 wOvlOffset;

CHECK:CAMELCASE: Avoid CamelCase: <wOvl>
#369: FILE: drivers/usb/atm/ueagle-atm.c:281:
+	__le16 wOvl;		/* overlay */

CHECK:CAMELCASE: Avoid CamelCase: <wLast>
#370: FILE: drivers/usb/atm/ueagle-atm.c:282:
+	__le16 wLast;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#371: FILE: drivers/usb/atm/ueagle-atm.c:283:
+} __attribute__ ((packed));

CHECK:CAMELCASE: Avoid CamelCase: <wPreamble>
#376: FILE: drivers/usb/atm/ueagle-atm.c:288:
+	__le16 wPreamble;

CHECK:CAMELCASE: Avoid CamelCase: <bDirection>
#378: FILE: drivers/usb/atm/ueagle-atm.c:290:
+	__u8 bDirection;

CHECK:CAMELCASE: Avoid CamelCase: <bFunction>
#381: FILE: drivers/usb/atm/ueagle-atm.c:293:
+	__u8 bFunction;

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#397: FILE: drivers/usb/atm/ueagle-atm.c:309:
+	__le16 wIndex;

CHECK:CAMELCASE: Avoid CamelCase: <dwSymbolicAddress>
#398: FILE: drivers/usb/atm/ueagle-atm.c:310:
+	__le32 dwSymbolicAddress;

CHECK:CAMELCASE: Avoid CamelCase: <wOffsetAddress>
#411: FILE: drivers/usb/atm/ueagle-atm.c:323:
+	__le16 wOffsetAddress;

CHECK:CAMELCASE: Avoid CamelCase: <dwData>
#412: FILE: drivers/usb/atm/ueagle-atm.c:324:
+	__le32 dwData;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#413: FILE: drivers/usb/atm/ueagle-atm.c:325:
+} __attribute__ ((packed));

CHECK:CAMELCASE: Avoid CamelCase: <bSwapPageNo>
#418: FILE: drivers/usb/atm/ueagle-atm.c:330:
+	__u8 bSwapPageNo;

CHECK:CAMELCASE: Avoid CamelCase: <bOvl>
#419: FILE: drivers/usb/atm/ueagle-atm.c:331:
+	__u8 bOvl;		/* overlay */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#420: FILE: drivers/usb/atm/ueagle-atm.c:332:
+} __attribute__ ((packed));

CHECK:CAMELCASE: Avoid CamelCase: <bType>
#424: FILE: drivers/usb/atm/ueagle-atm.c:336:
+	__u8 bType;

CHECK:CAMELCASE: Avoid CamelCase: <bNotification>
#425: FILE: drivers/usb/atm/ueagle-atm.c:337:
+	__u8 bNotification;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#426: FILE: drivers/usb/atm/ueagle-atm.c:338:
+	__le16 wValue;

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#428: FILE: drivers/usb/atm/ueagle-atm.c:340:
+	__le16 wLength;

CHECK:CAMELCASE: Avoid CamelCase: <wInterrupt>
#429: FILE: drivers/usb/atm/ueagle-atm.c:341:
+	__le16 wInterrupt;

CHECK:CAMELCASE: Avoid CamelCase: <wDataSize>
#435: FILE: drivers/usb/atm/ueagle-atm.c:347:
+			__le16 wDataSize;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#436: FILE: drivers/usb/atm/ueagle-atm.c:348:
+		} __attribute__ ((packed)) s1;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#441: FILE: drivers/usb/atm/ueagle-atm.c:353:
+		} __attribute__ ((packed)) s2;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#442: FILE: drivers/usb/atm/ueagle-atm.c:354:
+	} __attribute__ ((packed)) u;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#445: FILE: drivers/usb/atm/ueagle-atm.c:357:
+} __attribute__ ((packed));

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#450: FILE: drivers/usb/atm/ueagle-atm.c:362:
+static const char *chip_name[] = {"ADI930", "Eagle I", "Eagle II", "Eagle III"};

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/usb/atm/ueagle-atm.c:375:
+MODULE_PARM_DESC(cmv_file,
+		"file name with configuration and management variables");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/usb/atm/ueagle-atm.c:391:
+static int uea_send_modem_cmd(struct usb_device *usb,
+		u16 addr, u16 size, u8 * buff)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#479: FILE: drivers/usb/atm/ueagle-atm.c:391:
+		u16 addr, u16 size, u8 * buff)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#540: FILE: drivers/usb/atm/ueagle-atm.c:452:
+		u16 add = FW_GET_WORD(pfw + 1);
+		ret = uea_send_modem_cmd(usb, add, len, pfw + 3);

WARNING:SPLIT_STRING: quoted string split across lines
#543: FILE: drivers/usb/atm/ueagle-atm.c:455:
+			uea_err(usb, "uploading firmware data failed "
+					"with error %d\n", ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#590: FILE: drivers/usb/atm/ueagle-atm.c:502:
+	ret = request_firmware_nowait(THIS_MODULE, 1, fw_name, &usb->dev, usb, uea_upload_pre_firmware);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#625: FILE: drivers/usb/atm/ueagle-atm.c:537:
+	for (i = 0; i < pagecount; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#641: FILE: drivers/usb/atm/ueagle-atm.c:553:
+		for (j = 0; j < blockcount; j++) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#663: FILE: drivers/usb/atm/ueagle-atm.c:575:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#672: FILE: drivers/usb/atm/ueagle-atm.c:584:
+	if (!xfer_buff) {
+		uea_err(INS_TO_USBDEV(sc), "can't allocate xfer_buff\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/usb/atm/ueagle-atm.c:591:
+	ret = usb_bulk_msg(sc->usb_dev,
+			 usb_sndbulkpipe(sc->usb_dev, UEA_IDMA_PIPE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: drivers/usb/atm/ueagle-atm.c:599:
+		uea_err(INS_TO_USBDEV(sc), "size != bytes_read %d %d\n", size,
+		       bytes_read);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#710: FILE: drivers/usb/atm/ueagle-atm.c:622:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: drivers/usb/atm/ueagle-atm.c:624:
+	ret = request_firmware(&sc->dsp_firm,
+				dsp_name, &sc->usb_dev->dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/usb/atm/ueagle-atm.c:627:
+		uea_err(INS_TO_USBDEV(sc),
+		       "requesting firmware %s failed with error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/usb/atm/ueagle-atm.c:634:
+		uea_err(INS_TO_USBDEV(sc), "firmware %s is corrupted\n",
+		       dsp_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: drivers/usb/atm/ueagle-atm.c:664:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sc->dsp_firm"
#753: FILE: drivers/usb/atm/ueagle-atm.c:665:
+	if (sc->dsp_firm == NULL && request_dsp(sc) < 0)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: drivers/usb/atm/ueagle-atm.c:686:
+	uea_dbg(INS_TO_USBDEV(sc),
+	       "sending %u blocks for DSP page %u\n", blockcount, pageno);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#808: FILE: drivers/usb/atm/ueagle-atm.c:720:
+	uea_err(INS_TO_USBDEV(sc), "invalid DSP page %u requested\n",pageno);
 	                                                            ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#828: FILE: drivers/usb/atm/ueagle-atm.c:740:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/usb/atm/ueagle-atm.c:745:
+static int uea_request(struct uea_softc *sc,
+		u16 value, u16 index, u16 size, void *data)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#840: FILE: drivers/usb/atm/ueagle-atm.c:752:
+	if (!xfer_buff) {
+		uea_err(INS_TO_USBDEV(sc), "can't allocate xfer_buff\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/usb/atm/ueagle-atm.c:770:
+		uea_err(INS_TO_USBDEV(sc),
+		       "usb_control_msg send only %d bytes (instead of %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: drivers/usb/atm/ueagle-atm.c:779:
+static int uea_cmv(struct uea_softc *sc,
+		u8 function, u32 address, u16 offset, u32 data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: drivers/usb/atm/ueagle-atm.c:805:
+static inline int uea_read_cmv(struct uea_softc *sc,
+		u32 address, u16 offset, u32 *data)

ERROR:CODE_INDENT: code indent should use tabs where possible
#901: FILE: drivers/usb/atm/ueagle-atm.c:813:
+^I ^I*data = sc->data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#901: FILE: drivers/usb/atm/ueagle-atm.c:813:
+^I ^I*data = sc->data;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#907: FILE: drivers/usb/atm/ueagle-atm.c:819:
+static inline int uea_write_cmv(struct uea_softc *sc,
+		u32 address, u16 offset, u32 data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#930: FILE: drivers/usb/atm/ueagle-atm.c:842:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#938: FILE: drivers/usb/atm/ueagle-atm.c:850:
+		uea_dbg(INS_TO_USBDEV(sc),
+		       "modem not yet synchronized\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#940: FILE: drivers/usb/atm/ueagle-atm.c:852:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/usb/atm/ueagle-atm.c:867:
+		uea_warn(INS_TO_USBDEV(sc),
+				"modem in test mode - not supported\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#966: FILE: drivers/usb/atm/ueagle-atm.c:878:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#983: FILE: drivers/usb/atm/ueagle-atm.c:895:
+		uea_info(INS_TO_USBDEV(sc), "ATU-R firmware version : %x\n",
+				sc->stats.phy.firmid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: drivers/usb/atm/ueagle-atm.c:897:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: drivers/usb/atm/ueagle-atm.c:902:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#999: FILE: drivers/usb/atm/ueagle-atm.c:911:
+^I/* in case of a flags ( for example delineation LOSS (& 0x10)), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/usb/atm/ueagle-atm.c:916:
+		uea_dbg(INS_TO_USBDEV(sc), "Stat flag = %d\n",
+		       sc->stats.phy.flags);

WARNING:TYPO_SPELLING: 'misterious' may be misspelled - perhaps 'mysterious'?
#1014: FILE: drivers/usb/atm/ueagle-atm.c:926:
+	 * value is misterious.
 	            ^^^^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1018: FILE: drivers/usb/atm/ueagle-atm.c:930:
+	if (UEA_CHIP_VERSION(sc) != ADI930
+		    && sc->stats.phy.dsrate != (data >> 16) * 32) {

WARNING:TYPO_SPELLING: 'timming' may be misspelled - perhaps 'timing'?
#1019: FILE: drivers/usb/atm/ueagle-atm.c:931:
+		/* Original timming from ADI(used in windows driver)
 		            ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1023: FILE: drivers/usb/atm/ueagle-atm.c:935:
+		u16 timeout = (data <= 0x20ffff) ? 0 : 1;
+		ret = uea_request(sc, UEA_SET_TIMEOUT, timeout, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1025: FILE: drivers/usb/atm/ueagle-atm.c:937:
+		uea_info(INS_TO_USBDEV(sc),
+				"setting new timeout %d%s\n", timeout,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1026: FILE: drivers/usb/atm/ueagle-atm.c:938:
+				ret < 0?" failed":"");
 				       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1026: FILE: drivers/usb/atm/ueagle-atm.c:938:
+				ret < 0?" failed":"");
 				                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1045: FILE: drivers/usb/atm/ueagle-atm.c:957:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1083: FILE: drivers/usb/atm/ueagle-atm.c:995:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1088: FILE: drivers/usb/atm/ueagle-atm.c:1000:
+static int request_cmvs(struct uea_softc *sc,
+		 struct uea_cmvs **cmvs, const struct firmware **fw)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: drivers/usb/atm/ueagle-atm.c:1006:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1095: FILE: drivers/usb/atm/ueagle-atm.c:1007:
+	if (cmv_file[sc->modem_index] == NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmv_file[sc->modem_index]"
#1095: FILE: drivers/usb/atm/ueagle-atm.c:1007:
+	if (cmv_file[sc->modem_index] == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#1100: FILE: drivers/usb/atm/ueagle-atm.c:1012:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1105: FILE: drivers/usb/atm/ueagle-atm.c:1017:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1109: FILE: drivers/usb/atm/ueagle-atm.c:1021:
+		uea_err(INS_TO_USBDEV(sc),
+		       "requesting firmware %s failed with error %d\n",

CHECK:SPACING: No space is necessary after a cast
#1114: FILE: drivers/usb/atm/ueagle-atm.c:1026:
+	data = (u8 *) (*fw)->data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1118: FILE: drivers/usb/atm/ueagle-atm.c:1030:
+		uea_err(INS_TO_USBDEV(sc), "firmware %s is corrupted\n",
+		       cmv_name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1152: FILE: drivers/usb/atm/ueagle-atm.c:1064:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: drivers/usb/atm/ueagle-atm.c:1065:
+ ^I/* enter reset mode */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1153: FILE: drivers/usb/atm/ueagle-atm.c:1065:
+ ^I/* enter reset mode */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: drivers/usb/atm/ueagle-atm.c:1065:
+ ^I/* enter reset mode */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/usb/atm/ueagle-atm.c:1073:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1162: FILE: drivers/usb/atm/ueagle-atm.c:1074:
+ ^I/* clear tx and rx mailboxes */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1162: FILE: drivers/usb/atm/ueagle-atm.c:1074:
+ ^I/* clear tx and rx mailboxes */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1162: FILE: drivers/usb/atm/ueagle-atm.c:1074:
+ ^I/* clear tx and rx mailboxes */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1187: FILE: drivers/usb/atm/ueagle-atm.c:1099:
+ ^Iret = len = request_cmvs(sc, &cmvs, &cmvs_fw);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1187: FILE: drivers/usb/atm/ueagle-atm.c:1099:
+ ^Iret = len = request_cmvs(sc, &cmvs, &cmvs_fw);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: drivers/usb/atm/ueagle-atm.c:1099:
+ ^Iret = len = request_cmvs(sc, &cmvs, &cmvs_fw);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1187: FILE: drivers/usb/atm/ueagle-atm.c:1099:
+ 	ret = len = request_cmvs(sc, &cmvs, &cmvs_fw);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1194: FILE: drivers/usb/atm/ueagle-atm.c:1106:
+		ret = uea_write_cmv(sc, FW_GET_LONG(&cmvs[i].address),
+					FW_GET_WORD(&cmvs[i].offset),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1198: FILE: drivers/usb/atm/ueagle-atm.c:1110:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1218: FILE: drivers/usb/atm/ueagle-atm.c:1130:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/usb/atm/ueagle-atm.c:1157:
+		uea_err(INS_TO_USBDEV(sc), "firmware %s is not available\n",
+		       fw_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1253: FILE: drivers/usb/atm/ueagle-atm.c:1165:
+		uea_err(INS_TO_USBDEV(sc), "firmware %s is corrupted\n",
+		       fw_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: drivers/usb/atm/ueagle-atm.c:1174:
+			uea_err(INS_TO_USBDEV(sc),
+			       "elsa download data failed (%d)\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1272: FILE: drivers/usb/atm/ueagle-atm.c:1184:
+		uea_err(INS_TO_USBDEV(sc),
+				"elsa download data failed (%d)\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: drivers/usb/atm/ueagle-atm.c:1187:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1284: FILE: drivers/usb/atm/ueagle-atm.c:1196:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1292: FILE: drivers/usb/atm/ueagle-atm.c:1204:
+static void uea_dispatch_cmv(struct uea_softc *sc, struct cmv* cmv)

WARNING:TYPO_SPELLING: 'preambule' may be misspelled - perhaps 'preamble'?
#1301: FILE: drivers/usb/atm/ueagle-atm.c:1213:
+	/* FIXME : ADI930 reply wrong preambule (func = 2, sub = 2) to
 	                              ^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1305: FILE: drivers/usb/atm/ueagle-atm.c:1217:
+		if (UEA_CHIP_VERSION(sc) == ADI930
[...]
+		else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1306: FILE: drivers/usb/atm/ueagle-atm.c:1218:
+		if (UEA_CHIP_VERSION(sc) == ADI930
+				&& cmv->bFunction ==  MAKEFUNCTION(2, 2)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1311: FILE: drivers/usb/atm/ueagle-atm.c:1223:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1324: FILE: drivers/usb/atm/ueagle-atm.c:1236:
+	    sc->cmv_address
+	    || le16_to_cpu(cmv->wOffsetAddress) != sc->cmv_offset)

WARNING:SPLIT_STRING: quoted string split across lines
#1335: FILE: drivers/usb/atm/ueagle-atm.c:1247:
+	uea_err(INS_TO_USBDEV(sc), "unexpected cmv received,"
+			"Function : %d, Subfunction : %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1342: FILE: drivers/usb/atm/ueagle-atm.c:1254:
+	uea_err(INS_TO_USBDEV(sc), "invalid cmv received, "
+			"wPreamble %d, bDirection %d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1353: FILE: drivers/usb/atm/ueagle-atm.c:1265:
+	struct intr_pkt *intr;
+	uea_enters(INS_TO_USBDEV(sc));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'uea_intr', this function's name, in a string
#1356: FILE: drivers/usb/atm/ueagle-atm.c:1268:
+		uea_err(INS_TO_USBDEV(sc), "uea_intr() failed with %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1357: FILE: drivers/usb/atm/ueagle-atm.c:1269:
+		uea_err(INS_TO_USBDEV(sc), "uea_intr() failed with %d\n",
+		       urb->status);

CHECK:SPACING: No space is necessary after a cast
#1361: FILE: drivers/usb/atm/ueagle-atm.c:1273:
+	intr = (struct intr_pkt *) urb->transfer_buffer;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1384: FILE: drivers/usb/atm/ueagle-atm.c:1296:
+		uea_err(INS_TO_USBDEV(sc), "unknown intr %u\n",
+		       le16_to_cpu(intr->wInterrupt));

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1410: FILE: drivers/usb/atm/ueagle-atm.c:1322:
+	if (!intr) {
+		uea_err(INS_TO_USBDEV(sc),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1411: FILE: drivers/usb/atm/ueagle-atm.c:1323:
+		uea_err(INS_TO_USBDEV(sc),
+		       "cannot allocate interrupt package\n");

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'sc->usb_dev->actconfig->interface[0]->altsetting[0].endpoint[0].desc.bInterval'
#1426: FILE: drivers/usb/atm/ueagle-atm.c:1338:
+			 sc->usb_dev->actconfig->interface[0]->altsetting[0].
+			 endpoint[0].desc.bInterval);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#1426: FILE: drivers/usb/atm/ueagle-atm.c:1338:
+			 endpoint[0].desc.bInterval);

WARNING:TYPO_SPELLING: 'submition' may be misspelled - perhaps 'submission'?
#1431: FILE: drivers/usb/atm/ueagle-atm.c:1343:
+		       "urb submition failed with error %d\n", ret);
 		            ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1431: FILE: drivers/usb/atm/ueagle-atm.c:1343:
+		uea_err(INS_TO_USBDEV(sc),
+		       "urb submition failed with error %d\n", ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1460: FILE: drivers/usb/atm/ueagle-atm.c:1372:
+	int ret;
+	uea_enters(INS_TO_USBDEV(sc));

WARNING:TYPO_SPELLING: 'syfs' may be misspelled - perhaps 'sysfs'?
#1478: FILE: drivers/usb/atm/ueagle-atm.c:1390:
+/* syfs interface */
    ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1496: FILE: drivers/usb/atm/ueagle-atm.c:1408:
+static ssize_t read_status(struct device *dev, struct device_attribute *attr,
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1500: FILE: drivers/usb/atm/ueagle-atm.c:1412:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1511: FILE: drivers/usb/atm/ueagle-atm.c:1423:
+static ssize_t reboot(struct device *dev, struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1512: FILE: drivers/usb/atm/ueagle-atm.c:1424:
+static ssize_t reboot(struct device *dev, struct device_attribute *attr, 
+		const char *buf, size_t count)

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUGO | S_IRUGO' used
#1526: FILE: drivers/usb/atm/ueagle-atm.c:1438:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1528: FILE: drivers/usb/atm/ueagle-atm.c:1440:
+static DEVICE_ATTR(stat_status, S_IWUGO | S_IRUGO, read_status, reboot);

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO | S_IRUGO' are not preferred. Consider using octal permissions '0666'.
#1528: FILE: drivers/usb/atm/ueagle-atm.c:1440:
+static DEVICE_ATTR(stat_status, S_IWUGO | S_IRUGO, read_status, reboot);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1531: FILE: drivers/usb/atm/ueagle-atm.c:1443:
+static ssize_t read_human_status(struct device *dev, struct device_attribute *attr,
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1535: FILE: drivers/usb/atm/ueagle-atm.c:1447:
+^I$

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUGO | S_IRUGO' used
#1558: FILE: drivers/usb/atm/ueagle-atm.c:1470:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1560: FILE: drivers/usb/atm/ueagle-atm.c:1472:
+static DEVICE_ATTR(stat_human_status, S_IWUGO | S_IRUGO, read_human_status, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO | S_IRUGO' are not preferred. Consider using octal permissions '0666'.
#1560: FILE: drivers/usb/atm/ueagle-atm.c:1472:
+static DEVICE_ATTR(stat_human_status, S_IWUGO | S_IRUGO, read_human_status, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1563: FILE: drivers/usb/atm/ueagle-atm.c:1475:
+static ssize_t read_delin(struct device *dev, struct device_attribute *attr,
+		char *buf)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1567: FILE: drivers/usb/atm/ueagle-atm.c:1479:
+^I$

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUGO | S_IRUGO' used
#1582: FILE: drivers/usb/atm/ueagle-atm.c:1494:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1584: FILE: drivers/usb/atm/ueagle-atm.c:1496:
+static DEVICE_ATTR(stat_delin, S_IWUGO | S_IRUGO, read_delin, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO | S_IRUGO' are not preferred. Consider using octal permissions '0666'.
#1584: FILE: drivers/usb/atm/ueagle-atm.c:1496:
+static DEVICE_ATTR(stat_delin, S_IWUGO | S_IRUGO, read_delin, NULL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1586: FILE: drivers/usb/atm/ueagle-atm.c:1498:
+#define UEA_ATTR(name, reset) ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#1586: FILE: drivers/usb/atm/ueagle-atm.c:1498:
+#define UEA_ATTR(name, reset) 					\
+								\
+static ssize_t read_##name(struct device *dev, 			\
+		struct device_attribute *attr, char *buf)	\
+{ 								\
+	int ret = -ENODEV; 					\
+	struct uea_softc *sc; 					\
+ 								\
+	down(&uea_semaphore); 					\
+	sc = dev_to_uea(dev);					\
+	if (!sc) 						\
+		goto out; 					\
+	ret = snprintf(buf, 10, "%08x\n", sc->stats.phy.name);	\
+	if (reset)						\
+		sc->stats.phy.name = 0;				\
+out: 								\
+	up(&uea_semaphore); 					\
+	return ret; 						\
+} 								\
+								\
+static DEVICE_ATTR(stat_##name, S_IRUGO, read_##name, NULL)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1588: FILE: drivers/usb/atm/ueagle-atm.c:1500:
+static ssize_t read_##name(struct device *dev, ^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1590: FILE: drivers/usb/atm/ueagle-atm.c:1502:
+{ ^I^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1591: FILE: drivers/usb/atm/ueagle-atm.c:1503:
+^Iint ret = -ENODEV; ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1592: FILE: drivers/usb/atm/ueagle-atm.c:1504:
+^Istruct uea_softc *sc; ^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1593: FILE: drivers/usb/atm/ueagle-atm.c:1505:
+ ^I^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1593: FILE: drivers/usb/atm/ueagle-atm.c:1505:
+ ^I^I^I^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: drivers/usb/atm/ueagle-atm.c:1505:
+ ^I^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1594: FILE: drivers/usb/atm/ueagle-atm.c:1506:
+^Idown(&uea_semaphore); ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1596: FILE: drivers/usb/atm/ueagle-atm.c:1508:
+^Iif (!sc) ^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1597: FILE: drivers/usb/atm/ueagle-atm.c:1509:
+^I^Igoto out; ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1601: FILE: drivers/usb/atm/ueagle-atm.c:1513:
+out: ^I^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1602: FILE: drivers/usb/atm/ueagle-atm.c:1514:
+^Iup(&uea_semaphore); ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1603: FILE: drivers/usb/atm/ueagle-atm.c:1515:
+^Ireturn ret; ^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1604: FILE: drivers/usb/atm/ueagle-atm.c:1516:
+} ^I^I^I^I^I^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1606: FILE: drivers/usb/atm/ueagle-atm.c:1518:
+static DEVICE_ATTR(stat_##name, S_IRUGO, read_##name, NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1625: FILE: drivers/usb/atm/ueagle-atm.c:1537:
+#define htoi(x) (isdigit(x) ? x-'0' : toupper(x)-'A'+10)
                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1625: FILE: drivers/usb/atm/ueagle-atm.c:1537:
+#define htoi(x) (isdigit(x) ? x-'0' : toupper(x)-'A'+10)
                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1625: FILE: drivers/usb/atm/ueagle-atm.c:1537:
+#define htoi(x) (isdigit(x) ? x-'0' : toupper(x)-'A'+10)
                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1625: FILE: drivers/usb/atm/ueagle-atm.c:1537:
+#define htoi(x) (isdigit(x) ? x-'0' : toupper(x)-'A'+10)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1626: FILE: drivers/usb/atm/ueagle-atm.c:1538:
+static int uea_getesi(struct uea_softc *sc, u_char * esi)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1630: FILE: drivers/usb/atm/ueagle-atm.c:1542:
+	int i;
+	if (usb_string

CHECK:CAMELCASE: Avoid CamelCase: <iSerialNumber>
#1631: FILE: drivers/usb/atm/ueagle-atm.c:1543:
+	    (sc->usb_dev, sc->usb_dev->descriptor.iSerialNumber, mac_str,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1657: FILE: drivers/usb/atm/ueagle-atm.c:1569:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1673: FILE: drivers/usb/atm/ueagle-atm.c:1585:
+		uea_err(usb_dev, "can't claim interface %d, error %d\n", ifnum,
+		       ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1700: FILE: drivers/usb/atm/ueagle-atm.c:1612:
+static int uea_bind(struct usbatm_data *usbatm, struct usb_interface *intf,
+		   const struct usb_device_id *id, int *heavy)

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#1704: FILE: drivers/usb/atm/ueagle-atm.c:1616:
+	int ret, ifnum = intf->altsetting->desc.bInterfaceNumber;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sc)...) over kzalloc(sizeof(struct uea_softc)...)
#1729: FILE: drivers/usb/atm/ueagle-atm.c:1641:
+	sc = kzalloc(sizeof(struct uea_softc), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1731: FILE: drivers/usb/atm/ueagle-atm.c:1643:
+	if (!sc) {
+		uea_err(INS_TO_USBDEV(sc), "uea_init: not enough memory !\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1799: FILE: drivers/usb/atm/ueagle-atm.c:1711:
+	uea_info(usb, "ADSL device founded vid (%#X) pid (%#X) : %s\n",
+	       le16_to_cpu(usb->descriptor.idVendor),

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#1799: FILE: drivers/usb/atm/ueagle-atm.c:1711:
+	       le16_to_cpu(usb->descriptor.idVendor),

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1800: FILE: drivers/usb/atm/ueagle-atm.c:1712:
+	       le16_to_cpu(usb->descriptor.idProduct),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1815: FILE: drivers/usb/atm/ueagle-atm.c:1727:
+	int ifnum = intf->altsetting->desc.bInterfaceNumber;
+	uea_enters(usb);

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#1820: FILE: drivers/usb/atm/ueagle-atm.c:1732:
+	if (usb->config->desc.bNumInterfaces != 1 && ifnum == 0) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1848: FILE: drivers/usb/atm/ueagle-atm.c:1760:
+	{USB_DEVICE(USR_VID,	HEINEKEN_A_PID_PREFIRM),.driver_info = EAGLE_I | PREFIRM},
 	                    	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1849: FILE: drivers/usb/atm/ueagle-atm.c:1761:
+	{USB_DEVICE(USR_VID,	HEINEKEN_A_PID_PSTFIRM),.driver_info = EAGLE_I | PSTFIRM},
 	                    	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1850: FILE: drivers/usb/atm/ueagle-atm.c:1762:
+	{USB_DEVICE(USR_VID,	HEINEKEN_B_PID_PREFIRM),.driver_info = EAGLE_I | PREFIRM},
 	                    	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1851: FILE: drivers/usb/atm/ueagle-atm.c:1763:
+	{USB_DEVICE(USR_VID,	HEINEKEN_B_PID_PSTFIRM),.driver_info = EAGLE_I | PSTFIRM},
 	                    	                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1874: FILE: drivers/usb/atm/ueagle-atm.c:1786:
+	printk(KERN_INFO "[ueagle-atm] driver " EAGLEUSBVERSION " loaded\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1894: FILE: drivers/usb/atm/ueagle-atm.c:1806:
+	printk(KERN_INFO "[ueagle-atm] driver unloaded\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137101.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 76 warnings, 99 checks, 1838 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137101.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
