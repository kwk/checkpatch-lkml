WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff --minimal -urN -X /usr/share/dontdiff linux-2.5.73.vanilla/arch/alpha/=

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#63: FILE: arch/alpha/Kconfig:16:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: arch/alpha/kernel/irq.c:30:
+	irq_desc_t *desc;
+	if (!irq_valid(irq))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: arch/alpha/kernel/irq.c:32:
+	desc =3D irq_desc(irq);
 	     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#566: FILE: arch/alpha/kernel/irq.c:35:
+	while (((cpu_present_mask >> cpu) & 1) =3D=3D 0)
 	                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#566: FILE: arch/alpha/kernel/irq.c:35:
+	while (((cpu_present_mask >> cpu) & 1) =3D=3D 0)
 	                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#567: FILE: arch/alpha/kernel/irq.c:36:
+		cpu =3D (cpu < (NR_CPUS-1) ? cpu + 1 : 0);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#567: FILE: arch/alpha/kernel/irq.c:36:
+		cpu =3D (cpu < (NR_CPUS-1) ? cpu + 1 : 0);
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#567: FILE: arch/alpha/kernel/irq.c:36:
+		cpu =3D (cpu < (NR_CPUS-1) ? cpu + 1 : 0);
 		                       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#567: FILE: arch/alpha/kernel/irq.c:36:
+		cpu =3D (cpu < (NR_CPUS-1) ? cpu + 1 : 0);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#568: FILE: arch/alpha/kernel/irq.c:37:
+	last_cpu =3D cpu;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#574: FILE: arch/alpha/kernel/irq.c:38:
+	desc->irq_affinity =3D 1UL << cpu;
 	                   ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#657: FILE: arch/alpha/kernel/irq.c:185:
+		extern void note_interrupt(int, irq_desc_t*, irqreturn_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#657: FILE: arch/alpha/kernel/irq.c:185:
+		extern void note_interrupt(int, irq_desc_t*, irqreturn_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'irq_desc_t*' should also have an identifier name
#657: FILE: arch/alpha/kernel/irq.c:185:
+		extern void note_interrupt(int, irq_desc_t*, irqreturn_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'irqreturn_t' should also have an identifier name
#657: FILE: arch/alpha/kernel/irq.c:185:
+		extern void note_interrupt(int, irq_desc_t*, irqreturn_t);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#662: FILE: arch/alpha/kernel/irq.c:189:
+		action_ret =3D handle_IRQ_event(irq, regs, action);
 		           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#852: FILE: include/asm-alpha/hw_irq.h:9:
+extern void select_smp_affinity(int irq);

CHECK:SPACING: No space is necessary after a cast
#870: FILE: include/asm-alpha/hw_irq.h:28:
+#define for_each_irq(i) for (i =3D 0; i < NR_IRQS; i++) \

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#870: FILE: include/asm-alpha/hw_irq.h:28:
+#define for_each_irq(i) for (i =3D 0; i < NR_IRQS; i++) \
                                ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#870: FILE: include/asm-alpha/hw_irq.h:28:
+#define for_each_irq(i) for (i =3D 0; i < NR_IRQS; i++) \
+	if (!irq_valid(i)) \
+		continue; \
+	else

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#870: FILE: include/asm-alpha/hw_irq.h:28:
+#define for_each_irq(i) for (i =3D 0; i < NR_IRQS; i++) \
+	if (!irq_valid(i)) \
+		continue; \
+	else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358638.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 8 warnings, 4 checks, 813 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358638.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
