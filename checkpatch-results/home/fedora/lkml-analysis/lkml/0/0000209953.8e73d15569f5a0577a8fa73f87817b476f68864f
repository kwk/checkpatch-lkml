WARNING:LINE_SPACING: Missing a blank line after declarations
#45: FILE: fs/devpts/inode.c:31:
+	struct devpts_inode_info *ei;
+	ei = kmalloc(sizeof(*ei), SLAB_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#57: FILE: fs/devpts/inode.c:43:
+	struct devpts_inode_info *ei = DEVPTS_I(inode);
+	if (ei->i_acl)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#64: FILE: fs/devpts/inode.c:50:
+extern struct xattr_handler devpts_xattr_acl_access_handler;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#138: FILE: include/linux/devpts_fs.h:33:
+int devpts_permission(struct inode *, int, struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#138: FILE: include/linux/devpts_fs.h:33:
+int devpts_permission(struct inode *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#138: FILE: include/linux/devpts_fs.h:33:
+int devpts_permission(struct inode *, int, struct nameidata *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#174: FILE: fs/devpts/acl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#175: FILE: fs/devpts/acl.c:2:
+ * fs/devpts/acl.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/devpts/acl.c:98:
+        struct posix_acl *acl = devpts_get_acl(inode, ACL_TYPE_ACCESS);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/devpts/acl.c:98:
+        struct posix_acl *acl = devpts_get_acl(inode, ACL_TYPE_ACCESS);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/devpts/acl.c:100:
+        if (acl) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/devpts/acl.c:100:
+        if (acl) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: fs/devpts/acl.c:101:
+                int error = posix_acl_permission(inode, acl, mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/devpts/acl.c:101:
+                int error = posix_acl_permission(inode, acl, mask);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: fs/devpts/acl.c:102:
+                posix_acl_release(acl);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: fs/devpts/acl.c:102:
+                int error = posix_acl_permission(inode, acl, mask);
+                posix_acl_release(acl);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/devpts/acl.c:102:
+                posix_acl_release(acl);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: fs/devpts/acl.c:103:
+                return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: fs/devpts/acl.c:103:
+                return error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: fs/devpts/acl.c:104:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: fs/devpts/acl.c:104:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: fs/devpts/acl.c:105:
+        return -EAGAIN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: fs/devpts/acl.c:105:
+        return -EAGAIN;$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#282: FILE: fs/devpts/acl.c:109:
+devpts_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                    ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: fs/devpts/acl.c:111:
+        return generic_permission(inode, mask, devpts_check_acl);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/devpts/acl.c:111:
+        return generic_permission(inode, mask, devpts_check_acl);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000209953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 18 warnings, 0 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000209953.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
