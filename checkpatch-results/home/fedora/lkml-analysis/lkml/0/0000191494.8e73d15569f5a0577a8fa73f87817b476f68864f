WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#46: FILE: drivers/char/drm/drmP.h:319:
+typedef int drm_ioctl_compat_t(struct file *filp, unsigned int cmd,
                                             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#56: FILE: drivers/char/drm/drmP.h:781:
+extern long	     drm_compat_ioctl(struct file *filp,
            	                                   ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: drivers/char/drm/drmP.h:781:
+extern long	     drm_compat_ioctl(struct file *filp,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: drivers/char/drm/drmP.h:782:
+extern long	     drm_compat_ioctl(struct file *filp,
+				unsigned int cmd, unsigned long arg);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#129: FILE: drivers/char/drm/drm_ioc32.c:96:
+	if (__put_user(v32.name_len, &version->name_len)
+	    || __put_user((void __user *)(unsigned long)v32.name,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#131: FILE: drivers/char/drm/drm_ioc32.c:98:
+			  &version->name)
+	    || __put_user(v32.date_len, &version->date_len)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#132: FILE: drivers/char/drm/drm_ioc32.c:99:
+	    || __put_user(v32.date_len, &version->date_len)
+	    || __put_user((void __user *)(unsigned long)v32.date,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#134: FILE: drivers/char/drm/drm_ioc32.c:101:
+			  &version->date)
+	    || __put_user(v32.desc_len, &version->desc_len)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#135: FILE: drivers/char/drm/drm_ioc32.c:102:
+	    || __put_user(v32.desc_len, &version->desc_len)
+	    || __put_user((void __user *)(unsigned long)v32.desc,

CHECK:SPACING: No space is necessary after a cast
#144: FILE: drivers/char/drm/drm_ioc32.c:107:
+			DRM_IOCTL_VERSION, (unsigned long) version);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#155: FILE: drivers/char/drm/drm_ioc32.c:112:
+	if (__get_user(v32.version_major, &version->version_major)
+	    || __get_user(v32.version_minor, &version->version_minor)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#156: FILE: drivers/char/drm/drm_ioc32.c:113:
+	    || __get_user(v32.version_minor, &version->version_minor)
+	    || __get_user(v32.version_patchlevel, &version->version_patchlevel)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#157: FILE: drivers/char/drm/drm_ioc32.c:114:
+	    || __get_user(v32.version_patchlevel, &version->version_patchlevel)
+	    || __get_user(v32.name_len, &version->name_len)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#158: FILE: drivers/char/drm/drm_ioc32.c:115:
+	    || __get_user(v32.name_len, &version->name_len)
+	    || __get_user(v32.date_len, &version->date_len)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#159: FILE: drivers/char/drm/drm_ioc32.c:116:
+	    || __get_user(v32.date_len, &version->date_len)
+	    || __get_user(v32.desc_len, &version->desc_len))

CHECK:SPACING: No space is necessary after a cast
#181: FILE: drivers/char/drm/drm_ioc32.c:136:
+	if (copy_from_user(&uq32, (void __user *) arg, sizeof(uq32)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#191: FILE: drivers/char/drm/drm_ioc32.c:143:
+	if (__put_user(uq32.unique_len, &u->unique_len)
+	    || __put_user((void __user *)(unsigned long) uq32.unique,

CHECK:SPACING: No space is necessary after a cast
#191: FILE: drivers/char/drm/drm_ioc32.c:143:
+	    || __put_user((void __user *)(unsigned long) uq32.unique,

CHECK:SPACING: No space is necessary after a cast
#200: FILE: drivers/char/drm/drm_ioc32.c:148:
+			DRM_IOCTL_GET_UNIQUE, (unsigned long) u);

CHECK:SPACING: No space is necessary after a cast
#208: FILE: drivers/char/drm/drm_ioc32.c:154:
+	if (copy_to_user((void __user *) arg, &uq32, sizeof(uq32)))

CHECK:SPACING: No space is necessary after a cast
#226: FILE: drivers/char/drm/drm_ioc32.c:165:
+	if (copy_from_user(&uq32, (void __user *) arg, sizeof(uq32)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#236: FILE: drivers/char/drm/drm_ioc32.c:172:
+	if (__put_user(uq32.unique_len, &u->unique_len)
+	    || __put_user((void __user *)(unsigned long) uq32.unique,

CHECK:SPACING: No space is necessary after a cast
#236: FILE: drivers/char/drm/drm_ioc32.c:172:
+	    || __put_user((void __user *)(unsigned long) uq32.unique,

CHECK:SPACING: No space is necessary after a cast
#248: FILE: drivers/char/drm/drm_ioc32.c:177:
+			 DRM_IOCTL_SET_UNIQUE, (unsigned long) u);

CHECK:SPACING: No space is necessary after a cast
#285: FILE: drivers/char/drm/drm_ioc32.c:208:
+			DRM_IOCTL_GET_MAP, (unsigned long) map);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#296: FILE: drivers/char/drm/drm_ioc32.c:213:
+	if (__get_user(m32.offset, &map->offset)
+	    || __get_user(m32.size, &map->size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#297: FILE: drivers/char/drm/drm_ioc32.c:214:
+	    || __get_user(m32.size, &map->size)
+	    || __get_user(m32.type, &map->type)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#298: FILE: drivers/char/drm/drm_ioc32.c:215:
+	    || __get_user(m32.type, &map->type)
+	    || __get_user(m32.flags, &map->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#299: FILE: drivers/char/drm/drm_ioc32.c:216:
+	    || __get_user(m32.flags, &map->flags)
+	    || __get_user(handle, &map->handle)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#300: FILE: drivers/char/drm/drm_ioc32.c:217:
+	    || __get_user(handle, &map->handle)
+	    || __get_user(m32.mtrr, &map->mtrr))

CHECK:SPACING: No space is necessary after a cast
#303: FILE: drivers/char/drm/drm_ioc32.c:220:
+	m32.handle = (unsigned long) handle;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#334: FILE: drivers/char/drm/drm_ioc32.c:243:
+	if (__put_user(m32.offset, &map->offset)
+	    || __put_user(m32.size, &map->size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#335: FILE: drivers/char/drm/drm_ioc32.c:244:
+	    || __put_user(m32.size, &map->size)
+	    || __put_user(m32.type, &map->type)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#336: FILE: drivers/char/drm/drm_ioc32.c:245:
+	    || __put_user(m32.type, &map->type)
+	    || __put_user(m32.flags, &map->flags))

CHECK:SPACING: No space is necessary after a cast
#344: FILE: drivers/char/drm/drm_ioc32.c:249:
+			DRM_IOCTL_ADD_MAP, (unsigned long) map);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#352: FILE: drivers/char/drm/drm_ioc32.c:254:
+	if (__get_user(m32.offset, &map->offset)
+	    || __get_user(m32.mtrr, &map->mtrr)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#353: FILE: drivers/char/drm/drm_ioc32.c:255:
+	    || __get_user(m32.mtrr, &map->mtrr)
+	    || __get_user(handle, &map->handle))

CHECK:SPACING: No space is necessary after a cast
#357: FILE: drivers/char/drm/drm_ioc32.c:258:
+	m32.handle = (unsigned long) handle;

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/char/drm/drm_ioc32.c:259:
+	if (m32.handle != (unsigned long) handle && printk_ratelimit())

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#358: FILE: drivers/char/drm/drm_ioc32.c:259:
+	if (m32.handle != (unsigned long) handle && printk_ratelimit())

WARNING:SPLIT_STRING: quoted string split across lines
#362: FILE: drivers/char/drm/drm_ioc32.c:261:
 		printk(KERN_ERR "compat_drm_addmap truncated handle"
+		       " %p for type %d offset %x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#396: FILE: drivers/char/drm/drm_ioc32.c:283:
+	if (__put_user((void *)(unsigned long) handle, &map->handle))

CHECK:SPACING: No space is necessary after a cast
#401: FILE: drivers/char/drm/drm_ioc32.c:287:
+			 DRM_IOCTL_RM_MAP, (unsigned long) map);

CHECK:SPACING: No space is necessary after a cast
#437: FILE: drivers/char/drm/drm_ioc32.c:317:
+			DRM_IOCTL_GET_CLIENT, (unsigned long) client);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#447: FILE: drivers/char/drm/drm_ioc32.c:322:
+	if (__get_user(c32.auth, &client->auth)
+	    || __get_user(c32.pid, &client->pid)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#448: FILE: drivers/char/drm/drm_ioc32.c:323:
+	    || __get_user(c32.pid, &client->pid)
+	    || __get_user(c32.uid, &client->uid)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#449: FILE: drivers/char/drm/drm_ioc32.c:324:
+	    || __get_user(c32.uid, &client->uid)
+	    || __get_user(c32.magic, &client->magic)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#450: FILE: drivers/char/drm/drm_ioc32.c:325:
+	    || __get_user(c32.magic, &client->magic)
+	    || __get_user(c32.iocs, &client->iocs))

CHECK:SPACING: No space is necessary after a cast
#481: FILE: drivers/char/drm/drm_ioc32.c:354:
+			DRM_IOCTL_GET_STATS, (unsigned long) stats);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#494: FILE: drivers/char/drm/drm_ioc32.c:362:
+		if (__get_user(s32.data[i].value, &stats->data[i].value)
+		    || __get_user(s32.data[i].type, &stats->data[i].type))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#519: FILE: drivers/char/drm/drm_ioc32.c:389:
+	if (!access_ok(VERIFY_WRITE, buf, sizeof(*buf))
+	    || !access_ok(VERIFY_WRITE, argp, sizeof(*argp)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#523: FILE: drivers/char/drm/drm_ioc32.c:393:
+	if (__copy_in_user(buf, argp, offsetof(drm_buf_desc32_t, agp_start))
+	    || __get_user(agp_start, &argp->agp_start)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#524: FILE: drivers/char/drm/drm_ioc32.c:394:
+	    || __get_user(agp_start, &argp->agp_start)
+	    || __put_user(agp_start, &buf->agp_start))

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/char/drm/drm_ioc32.c:398:
+			DRM_IOCTL_ADD_BUFS, (unsigned long) buf);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#550: FILE: drivers/char/drm/drm_ioc32.c:403:
+	if (__copy_in_user(argp, buf, offsetof(drm_buf_desc32_t, agp_start))
+	    || __get_user(agp_start, &buf->agp_start)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#551: FILE: drivers/char/drm/drm_ioc32.c:404:
+	    || __get_user(agp_start, &buf->agp_start)
+	    || __put_user(agp_start, &argp->agp_start))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#586: FILE: drivers/char/drm/drm_ioc32.c:425:
+	if (__put_user(b32.size, &buf->size)
+	    || __put_user(b32.low_mark, &buf->low_mark)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#587: FILE: drivers/char/drm/drm_ioc32.c:426:
+	    || __put_user(b32.low_mark, &buf->low_mark)
+	    || __put_user(b32.high_mark, &buf->high_mark))

CHECK:SPACING: No space is necessary after a cast
#591: FILE: drivers/char/drm/drm_ioc32.c:430:
+			 DRM_IOCTL_MARK_BUFS, (unsigned long) buf);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#626: FILE: drivers/char/drm/drm_ioc32.c:458:
+	if (count > 0
+	    && !access_ok(VERIFY_WRITE, to, count * sizeof(drm_buf_desc32_t)))

CHECK:SPACING: No space is necessary after a cast
#643: FILE: drivers/char/drm/drm_ioc32.c:465:
+	list = (drm_buf_desc_t *) (request + 1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#648: FILE: drivers/char/drm/drm_ioc32.c:468:
+	if (__put_user(count, &request->count)
+	    || __put_user(list, &request->list))

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/char/drm/drm_ioc32.c:472:
+			DRM_IOCTL_INFO_BUFS, (unsigned long) request);

CHECK:SPACING: No space is necessary after a cast
#729: FILE: drivers/char/drm/drm_ioc32.c:527:
+	list = (drm_buf_pub_t *) (request + 1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#732: FILE: drivers/char/drm/drm_ioc32.c:530:
+	if (__put_user(count, &request->count)
+	    || __put_user(list, &request->list))

CHECK:SPACING: No space is necessary after a cast
#748: FILE: drivers/char/drm/drm_ioc32.c:534:
+			DRM_IOCTL_MAP_BUFS, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#773: FILE: drivers/char/drm/drm_ioc32.c:544:
+					   offsetof(drm_buf_pub_t, address))
+			    || __get_user(addr, &list[i].address)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#774: FILE: drivers/char/drm/drm_ioc32.c:545:
+			    || __get_user(addr, &list[i].address)
+			    || __put_user((unsigned long) addr,

CHECK:SPACING: No space is necessary after a cast
#774: FILE: drivers/char/drm/drm_ioc32.c:545:
+			    || __put_user((unsigned long) addr,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#783: FILE: drivers/char/drm/drm_ioc32.c:550:
+	if (__put_user(actual, &argp->count)
+	    || __get_user(addr, &request->virtual)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#784: FILE: drivers/char/drm/drm_ioc32.c:551:
+	    || __get_user(addr, &request->virtual)
+	    || __put_user((unsigned long) addr, &argp->virtual))

CHECK:SPACING: No space is necessary after a cast
#784: FILE: drivers/char/drm/drm_ioc32.c:551:
+	    || __put_user((unsigned long) addr, &argp->virtual))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#820: FILE: drivers/char/drm/drm_ioc32.c:576:
+	if (__put_user(req32.count, &request->count)
+	    || __put_user((int __user *)(unsigned long) req32.list,

CHECK:SPACING: No space is necessary after a cast
#820: FILE: drivers/char/drm/drm_ioc32.c:576:
+	    || __put_user((int __user *)(unsigned long) req32.list,

CHECK:SPACING: No space is necessary after a cast
#832: FILE: drivers/char/drm/drm_ioc32.c:581:
+			 DRM_IOCTL_FREE_BUFS, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#866: FILE: drivers/char/drm/drm_ioc32.c:603:
+	if (__put_user(req32.ctx_id, &request->ctx_id)
+	    || __put_user((void *)(unsigned long) req32.handle,

CHECK:SPACING: No space is necessary after a cast
#866: FILE: drivers/char/drm/drm_ioc32.c:603:
+	    || __put_user((void *)(unsigned long) req32.handle,

CHECK:SPACING: No space is necessary after a cast
#872: FILE: drivers/char/drm/drm_ioc32.c:608:
+			 DRM_IOCTL_SET_SAREA_CTX, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#891: FILE: drivers/char/drm/drm_ioc32.c:621:
+	if (!access_ok(VERIFY_WRITE, argp, sizeof(*argp))
+	    || __get_user(ctx_id, &argp->ctx_id))

CHECK:SPACING: No space is necessary after a cast
#906: FILE: drivers/char/drm/drm_ioc32.c:631:
+			DRM_IOCTL_GET_SAREA_CTX, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#914: FILE: drivers/char/drm/drm_ioc32.c:636:
+	if (__get_user(handle, &request->handle)
+	    || __put_user((unsigned long) handle, &argp->handle))

CHECK:SPACING: No space is necessary after a cast
#914: FILE: drivers/char/drm/drm_ioc32.c:636:
+	    || __put_user((unsigned long) handle, &argp->handle))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#946: FILE: drivers/char/drm/drm_ioc32.c:662:
+	if (__put_user(res32.count, &res->count)
+	    || __put_user((drm_ctx_t __user *)(unsigned long) res32.contexts,

CHECK:SPACING: No space is necessary after a cast
#946: FILE: drivers/char/drm/drm_ioc32.c:662:
+	    || __put_user((drm_ctx_t __user *)(unsigned long) res32.contexts,

CHECK:SPACING: No space is necessary after a cast
#955: FILE: drivers/char/drm/drm_ioc32.c:667:
+			DRM_IOCTL_RES_CTX, (unsigned long) res);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#962: FILE: drivers/char/drm/drm_ioc32.c:672:
+	if (__get_user(res32.count, &res->count)
+	    || __put_user(res32.count, &argp->count))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1012: FILE: drivers/char/drm/drm_ioc32.c:707:
+	if (__put_user(d32.context, &d->context)
+	    || __put_user(d32.send_count, &d->send_count)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1013: FILE: drivers/char/drm/drm_ioc32.c:708:
+	    || __put_user(d32.send_count, &d->send_count)
+	    || __put_user((int __user *)(unsigned long) d32.send_indices,

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: drivers/char/drm/drm_ioc32.c:708:
+	    || __put_user((int __user *)(unsigned long) d32.send_indices,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1015: FILE: drivers/char/drm/drm_ioc32.c:710:
+			  &d->send_indices)
+	    || __put_user((int __user *)(unsigned long) d32.send_sizes,

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: drivers/char/drm/drm_ioc32.c:710:
+	    || __put_user((int __user *)(unsigned long) d32.send_sizes,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1017: FILE: drivers/char/drm/drm_ioc32.c:712:
+			  &d->send_sizes)
+	    || __put_user(d32.flags, &d->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1018: FILE: drivers/char/drm/drm_ioc32.c:713:
+	    || __put_user(d32.flags, &d->flags)
+	    || __put_user(d32.request_count, &d->request_count)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1019: FILE: drivers/char/drm/drm_ioc32.c:714:
+	    || __put_user(d32.request_count, &d->request_count)
+	    || __put_user((int __user *)(unsigned long) d32.request_indices,

CHECK:SPACING: No space is necessary after a cast
#1019: FILE: drivers/char/drm/drm_ioc32.c:714:
+	    || __put_user((int __user *)(unsigned long) d32.request_indices,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1021: FILE: drivers/char/drm/drm_ioc32.c:716:
+			  &d->request_indices)
+	    || __put_user((int __user *)(unsigned long) d32.request_sizes,

CHECK:SPACING: No space is necessary after a cast
#1021: FILE: drivers/char/drm/drm_ioc32.c:716:
+	    || __put_user((int __user *)(unsigned long) d32.request_sizes,

CHECK:SPACING: No space is necessary after a cast
#1030: FILE: drivers/char/drm/drm_ioc32.c:721:
+			DRM_IOCTL_DMA, (unsigned long) d);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1039: FILE: drivers/char/drm/drm_ioc32.c:726:
+	if (__get_user(d32.request_size, &d->request_size)
+	    || __get_user(d32.granted_count, &d->granted_count)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1040: FILE: drivers/char/drm/drm_ioc32.c:727:
+	    || __get_user(d32.granted_count, &d->granted_count)
+	    || __put_user(d32.request_size, &argp->request_size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1041: FILE: drivers/char/drm/drm_ioc32.c:728:
+	    || __put_user(d32.request_size, &argp->request_size)
+	    || __put_user(d32.granted_count, &argp->granted_count))

CHECK:SPACING: No space is necessary after a cast
#1079: FILE: drivers/char/drm/drm_ioc32.c:754:
+			 DRM_IOCTL_AGP_ENABLE, (unsigned long) mode);

CHECK:SPACING: No space is necessary after a cast
#1109: FILE: drivers/char/drm/drm_ioc32.c:784:
+			DRM_IOCTL_AGP_INFO, (unsigned long) info);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1123: FILE: drivers/char/drm/drm_ioc32.c:789:
+	if (__get_user(i32.agp_version_major, &info->agp_version_major)
+	    || __get_user(i32.agp_version_minor, &info->agp_version_minor)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1124: FILE: drivers/char/drm/drm_ioc32.c:790:
+	    || __get_user(i32.agp_version_minor, &info->agp_version_minor)
+	    || __get_user(i32.mode, &info->mode)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1125: FILE: drivers/char/drm/drm_ioc32.c:791:
+	    || __get_user(i32.mode, &info->mode)
+	    || __get_user(i32.aperture_base, &info->aperture_base)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1126: FILE: drivers/char/drm/drm_ioc32.c:792:
+	    || __get_user(i32.aperture_base, &info->aperture_base)
+	    || __get_user(i32.aperture_size, &info->aperture_size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1127: FILE: drivers/char/drm/drm_ioc32.c:793:
+	    || __get_user(i32.aperture_size, &info->aperture_size)
+	    || __get_user(i32.memory_allowed, &info->memory_allowed)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1128: FILE: drivers/char/drm/drm_ioc32.c:794:
+	    || __get_user(i32.memory_allowed, &info->memory_allowed)
+	    || __get_user(i32.memory_used, &info->memory_used)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1129: FILE: drivers/char/drm/drm_ioc32.c:795:
+	    || __get_user(i32.memory_used, &info->memory_used)
+	    || __get_user(i32.id_vendor, &info->id_vendor)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1130: FILE: drivers/char/drm/drm_ioc32.c:796:
+	    || __get_user(i32.id_vendor, &info->id_vendor)
+	    || __get_user(i32.id_device, &info->id_device))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1163: FILE: drivers/char/drm/drm_ioc32.c:825:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.size, &request->size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1164: FILE: drivers/char/drm/drm_ioc32.c:826:
+	    || __put_user(req32.size, &request->size)
+	    || __put_user(req32.type, &request->type))

CHECK:SPACING: No space is necessary after a cast
#1168: FILE: drivers/char/drm/drm_ioc32.c:830:
+			DRM_IOCTL_AGP_ALLOC, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1176: FILE: drivers/char/drm/drm_ioc32.c:835:
+	if (__get_user(req32.handle, &request->handle)
+	    || __get_user(req32.physical, &request->physical)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1177: FILE: drivers/char/drm/drm_ioc32.c:836:
+	    || __get_user(req32.physical, &request->physical)
+	    || copy_to_user(argp, &req32, sizeof(req32))) {

CHECK:SPACING: No space is necessary after a cast
#1180: FILE: drivers/char/drm/drm_ioc32.c:838:
+			  DRM_IOCTL_AGP_FREE, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1203: FILE: drivers/char/drm/drm_ioc32.c:854:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || get_user(handle, &argp->handle)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1204: FILE: drivers/char/drm/drm_ioc32.c:855:
+	    || get_user(handle, &argp->handle)
+	    || __put_user(handle, &request->handle))

CHECK:SPACING: No space is necessary after a cast
#1216: FILE: drivers/char/drm/drm_ioc32.c:859:
+			 DRM_IOCTL_AGP_FREE, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1248: FILE: drivers/char/drm/drm_ioc32.c:879:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.handle, &request->handle)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1249: FILE: drivers/char/drm/drm_ioc32.c:880:
+	    || __put_user(req32.handle, &request->handle)
+	    || __put_user(req32.offset, &request->offset))

CHECK:SPACING: No space is necessary after a cast
#1254: FILE: drivers/char/drm/drm_ioc32.c:884:
+			 DRM_IOCTL_AGP_BIND, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1273: FILE: drivers/char/drm/drm_ioc32.c:896:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || get_user(handle, &argp->handle)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1274: FILE: drivers/char/drm/drm_ioc32.c:897:
+	    || get_user(handle, &argp->handle)
+	    || __put_user(handle, &request->handle))

CHECK:SPACING: No space is necessary after a cast
#1286: FILE: drivers/char/drm/drm_ioc32.c:901:
+			 DRM_IOCTL_AGP_UNBIND, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1312: FILE: drivers/char/drm/drm_ioc32.c:920:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || !access_ok(VERIFY_WRITE, argp, sizeof(*argp))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1313: FILE: drivers/char/drm/drm_ioc32.c:921:
+	    || !access_ok(VERIFY_WRITE, argp, sizeof(*argp))
+	    || __get_user(x, &argp->size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1314: FILE: drivers/char/drm/drm_ioc32.c:922:
+	    || __get_user(x, &argp->size)
+	    || __put_user(x, &request->size))

CHECK:SPACING: No space is necessary after a cast
#1324: FILE: drivers/char/drm/drm_ioc32.c:926:
+			DRM_IOCTL_SG_ALLOC, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1332: FILE: drivers/char/drm/drm_ioc32.c:932:
+	if (__get_user(x, &request->handle)
+	    || __put_user(x >> PAGE_SHIFT, &argp->handle))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1356: FILE: drivers/char/drm/drm_ioc32.c:947:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || !access_ok(VERIFY_WRITE, argp, sizeof(*argp))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1357: FILE: drivers/char/drm/drm_ioc32.c:948:
+	    || !access_ok(VERIFY_WRITE, argp, sizeof(*argp))
+	    || __get_user(x, &argp->handle)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1358: FILE: drivers/char/drm/drm_ioc32.c:949:
+	    || __get_user(x, &argp->handle)
+	    || __put_user(x << PAGE_SHIFT, &request->handle))

CHECK:SPACING: No space is necessary after a cast
#1372: FILE: drivers/char/drm/drm_ioc32.c:953:
+			 DRM_IOCTL_SG_FREE, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1402: FILE: drivers/char/drm/drm_ioc32.c:987:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.request.type, &request->request.type)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1403: FILE: drivers/char/drm/drm_ioc32.c:988:
+	    || __put_user(req32.request.type, &request->request.type)
+	    || __put_user(req32.request.sequence, &request->request.sequence)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1404: FILE: drivers/char/drm/drm_ioc32.c:989:
+	    || __put_user(req32.request.sequence, &request->request.sequence)
+	    || __put_user(req32.request.signal, &request->request.signal))

CHECK:SPACING: No space is necessary after a cast
#1410: FILE: drivers/char/drm/drm_ioc32.c:993:
+			DRM_IOCTL_WAIT_VBLANK, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1419: FILE: drivers/char/drm/drm_ioc32.c:998:
+	if (__get_user(req32.reply.type, &request->reply.type)
+	    || __get_user(req32.reply.sequence, &request->reply.sequence)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1420: FILE: drivers/char/drm/drm_ioc32.c:999:
+	    || __get_user(req32.reply.sequence, &request->reply.sequence)
+	    || __get_user(req32.reply.tval_sec, &request->reply.tval_sec)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1421: FILE: drivers/char/drm/drm_ioc32.c:1000:
+	    || __get_user(req32.reply.tval_sec, &request->reply.tval_sec)
+	    || __get_user(req32.reply.tval_usec, &request->reply.tval_usec))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1521: FILE: drivers/char/drm/drm_ioc32.c:1040:
+/** $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1525: FILE: drivers/char/drm/drm_ioc32.c:1044:
+ * \param filp file pointer.
           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1530: FILE: drivers/char/drm/drm_ioc32.c:1049:
+long drm_compat_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
                                    ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fn"
#1542: FILE: drivers/char/drm/drm_ioc32.c:1061:
+	if (fn != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1543: FILE: drivers/char/drm/drm_ioc32.c:1062:
+		ret = (*fn)(filp, cmd, arg);
 		            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1545: FILE: drivers/char/drm/drm_ioc32.c:1064:
+		ret = drm_ioctl(filp->f_dentry->d_inode, filp, cmd, arg);
 		                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1643: FILE: drivers/char/drm/radeon_drv.h:320:
+extern long radeon_compat_ioctl(struct file *filp, unsigned int cmd,
                                              ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1643: FILE: drivers/char/drm/radeon_drv.h:320:
+extern long radeon_compat_ioctl(struct file *filp, unsigned int cmd,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1725: FILE: drivers/char/drm/radeon_ioc32.c:72:
+	if (!access_ok(VERIFY_WRITE, init, sizeof(*init))
+	    || __put_user(init32.func, &init->func)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1726: FILE: drivers/char/drm/radeon_ioc32.c:73:
+	    || __put_user(init32.func, &init->func)
+	    || __put_user(init32.sarea_priv_offset, &init->sarea_priv_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1727: FILE: drivers/char/drm/radeon_ioc32.c:74:
+	    || __put_user(init32.sarea_priv_offset, &init->sarea_priv_offset)
+	    || __put_user(init32.is_pci, &init->is_pci)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1728: FILE: drivers/char/drm/radeon_ioc32.c:75:
+	    || __put_user(init32.is_pci, &init->is_pci)
+	    || __put_user(init32.cp_mode, &init->cp_mode)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1729: FILE: drivers/char/drm/radeon_ioc32.c:76:
+	    || __put_user(init32.cp_mode, &init->cp_mode)
+	    || __put_user(init32.gart_size, &init->gart_size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1730: FILE: drivers/char/drm/radeon_ioc32.c:77:
+	    || __put_user(init32.gart_size, &init->gart_size)
+	    || __put_user(init32.ring_size, &init->ring_size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1731: FILE: drivers/char/drm/radeon_ioc32.c:78:
+	    || __put_user(init32.ring_size, &init->ring_size)
+	    || __put_user(init32.usec_timeout, &init->usec_timeout)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1732: FILE: drivers/char/drm/radeon_ioc32.c:79:
+	    || __put_user(init32.usec_timeout, &init->usec_timeout)
+	    || __put_user(init32.fb_bpp, &init->fb_bpp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1733: FILE: drivers/char/drm/radeon_ioc32.c:80:
+	    || __put_user(init32.fb_bpp, &init->fb_bpp)
+	    || __put_user(init32.front_offset, &init->front_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1734: FILE: drivers/char/drm/radeon_ioc32.c:81:
+	    || __put_user(init32.front_offset, &init->front_offset)
+	    || __put_user(init32.front_pitch, &init->front_pitch)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1735: FILE: drivers/char/drm/radeon_ioc32.c:82:
+	    || __put_user(init32.front_pitch, &init->front_pitch)
+	    || __put_user(init32.back_offset, &init->back_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1736: FILE: drivers/char/drm/radeon_ioc32.c:83:
+	    || __put_user(init32.back_offset, &init->back_offset)
+	    || __put_user(init32.back_pitch, &init->back_pitch)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1737: FILE: drivers/char/drm/radeon_ioc32.c:84:
+	    || __put_user(init32.back_pitch, &init->back_pitch)
+	    || __put_user(init32.depth_bpp, &init->depth_bpp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1738: FILE: drivers/char/drm/radeon_ioc32.c:85:
+	    || __put_user(init32.depth_bpp, &init->depth_bpp)
+	    || __put_user(init32.depth_offset, &init->depth_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1739: FILE: drivers/char/drm/radeon_ioc32.c:86:
+	    || __put_user(init32.depth_offset, &init->depth_offset)
+	    || __put_user(init32.depth_pitch, &init->depth_pitch)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1740: FILE: drivers/char/drm/radeon_ioc32.c:87:
+	    || __put_user(init32.depth_pitch, &init->depth_pitch)
+	    || __put_user(init32.fb_offset, &init->fb_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1741: FILE: drivers/char/drm/radeon_ioc32.c:88:
+	    || __put_user(init32.fb_offset, &init->fb_offset)
+	    || __put_user(init32.mmio_offset, &init->mmio_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1742: FILE: drivers/char/drm/radeon_ioc32.c:89:
+	    || __put_user(init32.mmio_offset, &init->mmio_offset)
+	    || __put_user(init32.ring_offset, &init->ring_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1743: FILE: drivers/char/drm/radeon_ioc32.c:90:
+	    || __put_user(init32.ring_offset, &init->ring_offset)
+	    || __put_user(init32.ring_rptr_offset, &init->ring_rptr_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1744: FILE: drivers/char/drm/radeon_ioc32.c:91:
+	    || __put_user(init32.ring_rptr_offset, &init->ring_rptr_offset)
+	    || __put_user(init32.buffers_offset, &init->buffers_offset)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1745: FILE: drivers/char/drm/radeon_ioc32.c:92:
+	    || __put_user(init32.buffers_offset, &init->buffers_offset)
+	    || __put_user(init32.gart_textures_offset,

CHECK:SPACING: No space is necessary after a cast
#1750: FILE: drivers/char/drm/radeon_ioc32.c:97:
+			 DRM_IOCTL_RADEON_CP_INIT, (unsigned long) init);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1790: FILE: drivers/char/drm/radeon_ioc32.c:120:
+	if (!access_ok(VERIFY_WRITE, clr, sizeof(*clr))
+	    || __put_user(clr32.flags, &clr->flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1791: FILE: drivers/char/drm/radeon_ioc32.c:121:
+	    || __put_user(clr32.flags, &clr->flags)
+	    || __put_user(clr32.clear_color, &clr->clear_color)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1792: FILE: drivers/char/drm/radeon_ioc32.c:122:
+	    || __put_user(clr32.clear_color, &clr->clear_color)
+	    || __put_user(clr32.clear_depth, &clr->clear_depth)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1793: FILE: drivers/char/drm/radeon_ioc32.c:123:
+	    || __put_user(clr32.clear_depth, &clr->clear_depth)
+	    || __put_user(clr32.color_mask, &clr->color_mask)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1794: FILE: drivers/char/drm/radeon_ioc32.c:124:
+	    || __put_user(clr32.color_mask, &clr->color_mask)
+	    || __put_user(clr32.depth_mask, &clr->depth_mask)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1795: FILE: drivers/char/drm/radeon_ioc32.c:125:
+	    || __put_user(clr32.depth_mask, &clr->depth_mask)
+	    || __put_user((void __user *)(unsigned long)clr32.depth_boxes,

CHECK:SPACING: No space is necessary after a cast
#1800: FILE: drivers/char/drm/radeon_ioc32.c:130:
+			 DRM_IOCTL_RADEON_CLEAR, (unsigned long) clr);

CHECK:SPACING: No space is necessary after a cast
#1817: FILE: drivers/char/drm/radeon_ioc32.c:140:
+	drm_radeon_stipple32_t __user *argp = (void __user *) arg;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1835: FILE: drivers/char/drm/radeon_ioc32.c:149:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user((unsigned int __user *)(unsigned long) mask,

CHECK:SPACING: No space is necessary after a cast
#1835: FILE: drivers/char/drm/radeon_ioc32.c:149:
+	    || __put_user((unsigned int __user *)(unsigned long) mask,

CHECK:SPACING: No space is necessary after a cast
#1841: FILE: drivers/char/drm/radeon_ioc32.c:154:
+			 DRM_IOCTL_RADEON_STIPPLE, (unsigned long) request);

CHECK:SPACING: No space is necessary after a cast
#1894: FILE: drivers/char/drm/radeon_ioc32.c:192:
+	image = (drm_radeon_tex_image_t __user *) (request + 1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1897: FILE: drivers/char/drm/radeon_ioc32.c:195:
+	if (__put_user(req32.offset, &request->offset)
+	    || __put_user(req32.pitch, &request->pitch)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1898: FILE: drivers/char/drm/radeon_ioc32.c:196:
+	    || __put_user(req32.pitch, &request->pitch)
+	    || __put_user(req32.format, &request->format)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1899: FILE: drivers/char/drm/radeon_ioc32.c:197:
+	    || __put_user(req32.format, &request->format)
+	    || __put_user(req32.width, &request->width)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1900: FILE: drivers/char/drm/radeon_ioc32.c:198:
+	    || __put_user(req32.width, &request->width)
+	    || __put_user(req32.height, &request->height)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1901: FILE: drivers/char/drm/radeon_ioc32.c:199:
+	    || __put_user(req32.height, &request->height)
+	    || __put_user(image, &request->image)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1902: FILE: drivers/char/drm/radeon_ioc32.c:200:
+	    || __put_user(image, &request->image)
+	    || __put_user(img32.x, &image->x)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1903: FILE: drivers/char/drm/radeon_ioc32.c:201:
+	    || __put_user(img32.x, &image->x)
+	    || __put_user(img32.y, &image->y)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1904: FILE: drivers/char/drm/radeon_ioc32.c:202:
+	    || __put_user(img32.y, &image->y)
+	    || __put_user(img32.width, &image->width)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1905: FILE: drivers/char/drm/radeon_ioc32.c:203:
+	    || __put_user(img32.width, &image->width)
+	    || __put_user(img32.height, &image->height)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1906: FILE: drivers/char/drm/radeon_ioc32.c:204:
+	    || __put_user(img32.height, &image->height)
+	    || __put_user((const void __user *)(unsigned long)img32.data,

CHECK:SPACING: No space is necessary after a cast
#1912: FILE: drivers/char/drm/radeon_ioc32.c:209:
+			 DRM_IOCTL_RADEON_TEXTURE, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1954: FILE: drivers/char/drm/radeon_ioc32.c:232:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.idx, &request->idx)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1955: FILE: drivers/char/drm/radeon_ioc32.c:233:
+	    || __put_user(req32.idx, &request->idx)
+	    || __put_user(req32.discard, &request->discard)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1956: FILE: drivers/char/drm/radeon_ioc32.c:234:
+	    || __put_user(req32.discard, &request->discard)
+	    || __put_user(req32.nr_states, &request->nr_states)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1957: FILE: drivers/char/drm/radeon_ioc32.c:235:
+	    || __put_user(req32.nr_states, &request->nr_states)
+	    || __put_user((void __user *)(unsigned long)req32.state,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1959: FILE: drivers/char/drm/radeon_ioc32.c:237:
+			  &request->state)
+	    || __put_user(req32.nr_prims, &request->nr_prims)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1960: FILE: drivers/char/drm/radeon_ioc32.c:238:
+	    || __put_user(req32.nr_prims, &request->nr_prims)
+	    || __put_user((void __user *)(unsigned long)req32.prim,

CHECK:SPACING: No space is necessary after a cast
#1965: FILE: drivers/char/drm/radeon_ioc32.c:243:
+			 DRM_IOCTL_RADEON_VERTEX2, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2004: FILE: drivers/char/drm/radeon_ioc32.c:264:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.bufsz, &request->bufsz)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2005: FILE: drivers/char/drm/radeon_ioc32.c:265:
+	    || __put_user(req32.bufsz, &request->bufsz)
+	    || __put_user((void __user *)(unsigned long)req32.buf,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2007: FILE: drivers/char/drm/radeon_ioc32.c:267:
+			  &request->buf)
+	    || __put_user(req32.nbox, &request->nbox)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2008: FILE: drivers/char/drm/radeon_ioc32.c:268:
+	    || __put_user(req32.nbox, &request->nbox)
+	    || __put_user((void __user *)(unsigned long)req32.boxes,

CHECK:SPACING: No space is necessary after a cast
#2013: FILE: drivers/char/drm/radeon_ioc32.c:273:
+			 DRM_IOCTL_RADEON_CMDBUF, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2046: FILE: drivers/char/drm/radeon_ioc32.c:292:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.param, &request->param)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2047: FILE: drivers/char/drm/radeon_ioc32.c:293:
+	    || __put_user(req32.param, &request->param)
+	    || __put_user((void __user *)(unsigned long)req32.value,

CHECK:SPACING: No space is necessary after a cast
#2053: FILE: drivers/char/drm/radeon_ioc32.c:298:
+			 DRM_IOCTL_RADEON_GETPARAM, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2088: FILE: drivers/char/drm/radeon_ioc32.c:319:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user(req32.region, &request->region)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2089: FILE: drivers/char/drm/radeon_ioc32.c:320:
+	    || __put_user(req32.region, &request->region)
+	    || __put_user(req32.alignment, &request->alignment)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2090: FILE: drivers/char/drm/radeon_ioc32.c:321:
+	    || __put_user(req32.alignment, &request->alignment)
+	    || __put_user(req32.size, &request->size)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2091: FILE: drivers/char/drm/radeon_ioc32.c:322:
+	    || __put_user(req32.size, &request->size)
+	    || __put_user((int __user *)(unsigned long)req32.region_offset,

CHECK:SPACING: No space is necessary after a cast
#2097: FILE: drivers/char/drm/radeon_ioc32.c:327:
+			 DRM_IOCTL_RADEON_ALLOC, (unsigned long) request);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2133: FILE: drivers/char/drm/radeon_ioc32.c:345:
+	if (!access_ok(VERIFY_WRITE, request, sizeof(*request))
+	    || __put_user((int __user *)(unsigned long)req32.irq_seq,

CHECK:SPACING: No space is necessary after a cast
#2138: FILE: drivers/char/drm/radeon_ioc32.c:350:
+			 DRM_IOCTL_RADEON_IRQ_EMIT, (unsigned long) request);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2153: FILE: drivers/char/drm/radeon_ioc32.c:365:
+/** $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2157: FILE: drivers/char/drm/radeon_ioc32.c:369:
+ * \param filp file pointer.
           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2162: FILE: drivers/char/drm/radeon_ioc32.c:374:
+long radeon_compat_ioctl(struct file *filp, unsigned int cmd,
                                       ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2170: FILE: drivers/char/drm/radeon_ioc32.c:382:
+		return drm_compat_ioctl(filp, cmd, arg);
 		                        ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fn"
#2176: FILE: drivers/char/drm/radeon_ioc32.c:388:
+	if (fn != NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2177: FILE: drivers/char/drm/radeon_ioc32.c:389:
+		ret = (*fn)(filp, cmd, arg);
 		            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2179: FILE: drivers/char/drm/radeon_ioc32.c:391:
+		ret = drm_ioctl(filp->f_dentry->d_inode, filp, cmd, arg);
 		                                         ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191494.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 208 checks, 2126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191494.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
