WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
	3. [PATCH] usb: Betop BTP-2118 joystick force-feedback driver 0.1.0 (It's same with last version)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/usb/input/btp2118.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#91: FILE: drivers/usb/input/btp2118.c:39:
+	(test_bit(BTP_URB_DONE|BTP_DISCONNECTING, &(info)->flags))
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/usb/input/btp2118.c:65:
+^Istruct urb *ctrl0;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#131: FILE: drivers/usb/input/btp2118.c:79:
+static char driver_name[] = "BETOP Vibration Gamepad (BTP-2118) Driver";

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/usb/input/btp2118.c:105:
+^I$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#164: FILE: drivers/usb/input/btp2118.c:112:
+static int inline btp_effect_request(struct usb_btp_info *info, char *packet)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#169: FILE: drivers/usb/input/btp2118.c:117:
+	usb_fill_control_urb (info->ctrl0, info->dev, info->pipe0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/usb/input/btp2118.c:118:
+	usb_fill_control_urb (info->ctrl0, info->dev, info->pipe0,
+							(char*)&info->req,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#170: FILE: drivers/usb/input/btp2118.c:118:
+							(char*)&info->req,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#172: FILE: drivers/usb/input/btp2118.c:120:
+							info->req.wLength,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: drivers/usb/input/btp2118.c:122:
+^I^I                                        info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#183: FILE: drivers/usb/input/btp2118.c:131:
+	struct usb_btp_info *info = (struct usb_btp_info*)data;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#192: FILE: drivers/usb/input/btp2118.c:140:
+		mod_timer(&info->timer, jiffies+4*HZ);
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#192: FILE: drivers/usb/input/btp2118.c:140:
+		mod_timer(&info->timer, jiffies+4*HZ);
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/usb/input/btp2118.c:173:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct usb_btp_info)...)
#226: FILE: drivers/usb/input/btp2118.c:174:
+	info = kzalloc(sizeof(struct usb_btp_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/usb/input/btp2118.c:176:
+^I^Ireturn -ENOMEM;^I$

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#237: FILE: drivers/usb/input/btp2118.c:185:
+	info->req.bRequest = 0x9;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#238: FILE: drivers/usb/input/btp2118.c:186:
+	info->req.bRequestType = (USB_TYPE_CLASS|USB_RECIP_INTERFACE);
 	                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#238: FILE: drivers/usb/input/btp2118.c:186:
+	info->req.bRequestType = (USB_TYPE_CLASS|USB_RECIP_INTERFACE);

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#239: FILE: drivers/usb/input/btp2118.c:187:
+	info->req.wIndex = 0x0;

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#240: FILE: drivers/usb/input/btp2118.c:188:
+	info->req.wValue = 0x200;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#256: FILE: drivers/usb/input/btp2118.c:204:
+static void inline btp_wait_for_effect(struct usb_btp_info *info)

ERROR:SPACING: space prohibited after that open parenthesis '('
#258: FILE: drivers/usb/input/btp2118.c:206:
+	while ( info->flags && !IS_BTP_URB_DONE(info) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#258: FILE: drivers/usb/input/btp2118.c:206:
+	while ( info->flags && !IS_BTP_URB_DONE(info) )

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#301: FILE: drivers/usb/input/btp2118.c:249:
+		}
+		else	/* remove effect */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#316: FILE: drivers/usb/input/btp2118.c:264:
+	offset = (value>49); /*0 - left motor, 1 - right motor */
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#325: FILE: drivers/usb/input/btp2118.c:273:
+	strength = ((21*value)+459)/48;
 	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: drivers/usb/input/btp2118.c:273:
+	strength = ((21*value)+459)/48;
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#325: FILE: drivers/usb/input/btp2118.c:273:
+	strength = ((21*value)+459)/48;
 	                           ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#379: FILE: drivers/usb/input/btp2118.c:327:
+			if (value>1) {
 			         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: drivers/usb/input/btp2118.c:329:
+				mod_timer(&info->timer, jiffies+4*HZ);
 				                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#381: FILE: drivers/usb/input/btp2118.c:329:
+				mod_timer(&info->timer, jiffies+4*HZ);
 				                                 ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#385: FILE: drivers/usb/input/btp2118.c:333:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#385: FILE: drivers/usb/input/btp2118.c:333:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: drivers/usb/input/btp2118.c:343:
+^Ireturn ret; $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#398: FILE: drivers/usb/input/btp2118.c:346:
+static int inline btp_new_effect_id(void)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#400: FILE: drivers/usb/input/btp2118.c:348:
+	static atomic_t effect_id= ATOMIC_INIT(0);
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: drivers/usb/input/btp2118.c:349:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#413: FILE: drivers/usb/input/btp2118.c:361:
+	if (!hidinput) {
+		return -ENODEV;
+	}

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#418: FILE: drivers/usb/input/btp2118.c:366:
+	if (offset>=0 && offset<8) {
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#418: FILE: drivers/usb/input/btp2118.c:366:
+	if (offset>=0 && offset<8) {
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#425: FILE: drivers/usb/input/btp2118.c:373:
+		memcpy(info->effects+offset, effect, sizeof(struct ff_effect));
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: drivers/usb/input/btp2118.c:382:
+{^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#449: FILE: drivers/usb/input/btp2118.c:397:
+	for (offset=0; offset<8; ++offset) {
 	           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#449: FILE: drivers/usb/input/btp2118.c:397:
+	for (offset=0; offset<8; ++offset) {
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#451: FILE: drivers/usb/input/btp2118.c:399:
+			memset(info->effects+offset, 0, sizeof(struct ff_effect));
 			                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: drivers/usb/input/hid-core.c:2088:
+static int hidinput_simple_driver_bind_one(struct hidinput_simple_driver *simple,
+						struct hid_device *hid,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#598: FILE: drivers/usb/input/hid-core.c:2102:
+		printk(KERN_WARNING "The HID device \'%s\' disconnected!", hid->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: drivers/usb/input/hid-core.c:2105:
+^I}^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#607: FILE: drivers/usb/input/hid-core.c:2111:
+		printk(KERN_INFO "The simple driver \'%s\' attach"

WARNING:SPLIT_STRING: quoted string split across lines
#608: FILE: drivers/usb/input/hid-core.c:2112:
+		printk(KERN_INFO "The simple driver \'%s\' attach"
+			" to the device \'%s\'\n", simple->name, hid->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#615: FILE: drivers/usb/input/hid-core.c:2119:
+static void hidinput_simple_driver_bind_foreach_simple(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: drivers/usb/input/hid-core.c:2125:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#624: FILE: drivers/usb/input/hid-core.c:2128:
+	hid = usb_get_intfdata (matched->intf);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#639: FILE: drivers/usb/input/hid-core.c:2143:
+static void hidinput_simple_driver_bind_foreach_matched(

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#642: FILE: drivers/usb/input/hid-core.c:2146:
+	struct list_head *node=NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#644: FILE: drivers/usb/input/hid-core.c:2148:
+	struct hid_device *hid=NULL;
 	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: drivers/usb/input/hid-core.c:2156:
+		hid = usb_get_intfdata (matched->intf);

WARNING:LINE_SPACING: Missing a blank line after declarations
#728: FILE: drivers/usb/input/hid-core.c:2240:
+		struct matched_device *matched;
+		matched = kmalloc(sizeof(struct matched_device), GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*matched)...) over kmalloc(sizeof(struct matched_device)...)
#728: FILE: drivers/usb/input/hid-core.c:2240:
+		matched = kmalloc(sizeof(struct matched_device), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#745: FILE: drivers/usb/input/hid-core.c:2254:
+		printk (KERN_INFO "HID device not claimed by input or hiddev\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#745: FILE: drivers/usb/input/hid-core.c:2254:
+		printk (KERN_INFO "HID device not claimed by input or hiddev\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#790: FILE: drivers/usb/input/hid.h:392:
+^Istruct mutex input_lock;^I/* To protect accessing input_dev from $

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#790: FILE: drivers/usb/input/hid.h:392:
+	struct mutex input_lock;	/* To protect accessing input_dev from 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#791: FILE: drivers/usb/input/hid.h:393:
+^I^I^I^I^I * hid-input processing. But it not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#792: FILE: drivers/usb/input/hid.h:394:
+^I^I^I^I^I * necessary for accessing this input_dev $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#816: FILE: drivers/usb/input/hid.h:521:
+extern void hidinput_reconnect_core(struct hid_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#816: FILE: drivers/usb/input/hid.h:521:
+extern void hidinput_reconnect_core(struct hid_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#817: FILE: drivers/usb/input/hid.h:522:
+extern int hidinput_disconnect_core(struct hid_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#817: FILE: drivers/usb/input/hid.h:522:
+extern int hidinput_disconnect_core(struct hid_device *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: drivers/usb/input/hid-input.c:78:
+static inline void hidinput_send_event(struct hid_input *hidinput, int type,
+							int code, int value)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#991: FILE: drivers/usb/input/hid-input.c:679:
+	if ((hid->quirks & HID_QUIRK_POWERBOOK_HAS_FN) && hidinput_pb_event(hid, hidinput, usage, value))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1001: FILE: drivers/usb/input/hid-input.c:687:
+		hidinput_send_event(hidinput, usage->type, usage->code    , hid_hat_to_axis[hat_dir].x);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1001: FILE: drivers/usb/input/hid-input.c:687:
+		hidinput_send_event(hidinput, usage->type, usage->code    , hid_hat_to_axis[hat_dir].x);
 		                                                          ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1002: FILE: drivers/usb/input/hid-input.c:688:
+                hidinput_send_event(hidinput, usage->type, usage->code + 1, hid_hat_to_axis[hat_dir].y);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: drivers/usb/input/hid-input.c:688:
+                hidinput_send_event(hidinput, usage->type, usage->code + 1, hid_hat_to_axis[hat_dir].y);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: drivers/usb/input/hid-input.c:688:
+                hidinput_send_event(hidinput, usage->type, usage->code + 1, hid_hat_to_axis[hat_dir].y);$

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#1011: FILE: drivers/usb/input/hid-input.c:699:
+			hidinput_send_event(hidinput, usage->type, (*quirks & HID_QUIRK_INVERT) ? BTN_TOOL_RUBBER : usage->code, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1031: FILE: drivers/usb/input/hid-input.c:714:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1035: FILE: drivers/usb/input/hid-input.c:718:
+		dbg("Maximum Effects - %d",hidinput->input->ff_effects_max);
 		                          ^

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#1074: FILE: drivers/usb/input/hid-input.c:773:
+			if (!hid->simple->ff_event(dev, type, code, value));
+				return 0;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1074: FILE: drivers/usb/input/hid-input.c:773:
+			if (!hid->simple->ff_event(dev, type, code, value));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1106: FILE: drivers/usb/input/hid-input.c:815:
+static void hidinput_input_init(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1107: FILE: drivers/usb/input/hid-input.c:816:
+static void hidinput_input_init(struct hid_device *hid, 
+					struct input_dev *input_dev)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1120: FILE: drivers/usb/input/hid-input.c:829:
+	if (!(hid->quirks&HID_QUIRK_MULTI_INPUT))
 	                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#1123: FILE: drivers/usb/input/hid-input.c:832:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1172: FILE: drivers/usb/input/hid-input.c:908:
+static void hidinput_setup_usage(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: drivers/usb/input/hid-input.c:909:
+static void hidinput_setup_usage(struct hid_device *hid, 
+					struct input_dev *input)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1197: FILE: drivers/usb/input/hid-input.c:933:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1200: FILE: drivers/usb/input/hid-input.c:936:
+ *  The caller must be call hidinput_reconnect() soon, $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1217: FILE: drivers/usb/input/hid-input.c:953:
+		if (!(hid->quirks&HID_QUIRK_MULTI_INPUT)/* like hidinput_connect() */
 		                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1218: FILE: drivers/usb/input/hid-input.c:954:
+		if (!(hid->quirks&HID_QUIRK_MULTI_INPUT)/* like hidinput_connect() */
+			&& !input_dev->upload_effect) /* and when SIMPLE_FF off */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1243: FILE: drivers/usb/input/hid-simple.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: drivers/usb/input/hid-simple.c:3:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1261: FILE: drivers/usb/input/hid-simple.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1262: FILE: drivers/usb/input/hid-simple.c:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: drivers/usb/input/hid-simple.c:47:
+static void inline hidinput_simple_configure_one_usage(int op, $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1289: FILE: drivers/usb/input/hid-simple.c:47:
+static void inline hidinput_simple_configure_one_usage(int op, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: drivers/usb/input/hid-simple.c:48:
+static void inline hidinput_simple_configure_one_usage(int op, 
+						struct input_dev *input,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1340: FILE: drivers/usb/input/hid-simple.c:98:
+	if (__OP_SET_BIT == op) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1349: FILE: drivers/usb/input/hid-simple.c:107:
+	else if (__OP_CLR_BIT == op) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1349: FILE: drivers/usb/input/hid-simple.c:107:
+	}
+	else if (__OP_CLR_BIT == op) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1360: FILE: drivers/usb/input/hid-simple.c:118:
+static do_usage_t hidinput_simple_driver_configure_usage_prep(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1370: FILE: drivers/usb/input/hid-simple.c:128:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1370: FILE: drivers/usb/input/hid-simple.c:128:
+	else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1377: FILE: drivers/usb/input/hid-simple.c:135:
+static void __hidinput_simple_driver_configure_usage(

ERROR:SPACING: space required after that ';' (ctx:BxV)
#1392: FILE: drivers/usb/input/hid-simple.c:150:
+	for (;page_block && page_block->usage_blockes;page_block++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1392: FILE: drivers/usb/input/hid-simple.c:150:
+	for (;page_block && page_block->usage_blockes;page_block++) {
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1399: FILE: drivers/usb/input/hid-simple.c:157:
+^I^I^Ihidinput_simple_configure_one_usage(op, input, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1400: FILE: drivers/usb/input/hid-simple.c:158:
+			hidinput_simple_configure_one_usage(op, input, 
+						hid_usage, usage_block);

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#1409: FILE: drivers/usb/input/hid-simple.c:167:
+void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, 							struct hid_device *hid)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1409: FILE: drivers/usb/input/hid-simple.c:167:
+void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, ^I^I^I^I^I^I^Istruct hid_device *hid)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1422: FILE: drivers/usb/input/hid-simple.c:180:
+		if (hid->collection[i].type == HID_COLLECTION_APPLICATION ||
+			hid->collection[i].type==HID_COLLECTION_PHYSICAL)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1422: FILE: drivers/usb/input/hid-simple.c:180:
+			hid->collection[i].type==HID_COLLECTION_PHYSICAL)
 			                       ^

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#1436: FILE: drivers/usb/input/hid-simple.c:194:
+					__hidinput_simple_driver_configure_usage(simple, op, report->field[i], report->field[i]->usage + j);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: drivers/usb/input/hid-simple.c:197:
+						do_usage(report->field[i],
+						report->field[i]->usage + j);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1444: FILE: drivers/usb/input/hid-simple.c:202:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1446: FILE: drivers/usb/input/hid-simple.c:204:
+int hidinput_simple_driver_push(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: drivers/usb/input/hid-simple.c:205:
+int hidinput_simple_driver_push(struct hid_device *hid, 
+					struct hidinput_simple_driver *simple,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*raw_simple)...) over kmalloc(sizeof(struct raw_simple_device)...)
#1452: FILE: drivers/usb/input/hid-simple.c:210:
+	raw_simple = kmalloc(sizeof(struct raw_simple_device), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1463: FILE: drivers/usb/input/hid-simple.c:221:
+void hidinput_simple_driver_pop(struct hid_device *hid,
+					struct matched_device *matched)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1466: FILE: drivers/usb/input/hid-simple.c:224:
+	struct raw_simple_device *raw_simple=NULL;
 	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: drivers/usb/input/hid-simple.c:226:
+	list_for_each (node, &hid->simple->raw_devices) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: drivers/usb/input/hid-simple.c:244:
+^I^Iraw_simple = list_entry(simple->raw_devices.next, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1488: FILE: drivers/usb/input/hid-simple.c:246:
+		hid = usb_get_intfdata (raw_simple->intf);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1491: FILE: drivers/usb/input/hid-simple.c:249:
+				BUG_ON(hid->simple != simple);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: drivers/usb/input/hid-simple.c:261:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1504: FILE: drivers/usb/input/hid-simple.c:262:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 
+						struct hid_device *hid,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1532: FILE: drivers/usb/input/hid-simple.c:290:
+void hidinput_simple_driver_disconnect(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1533: FILE: drivers/usb/input/hid-simple.c:291:
+void hidinput_simple_driver_disconnect(struct hid_device *hid, 
+						struct matched_device *matched)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1543: FILE: drivers/usb/input/hid-simple.c:301:
+	wmb();

WARNING:RETURN_VOID: void function return statements are not generally useful
#1551: FILE: drivers/usb/input/hid-simple.c:309:
+	return;
+}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1553: FILE: drivers/usb/input/hid-simple.c:311:
+struct hid_input* hidinput_simple_inputdev_to_hidinput(struct input_dev *dev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1573: FILE: drivers/usb/input/hid-simple.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1575: FILE: drivers/usb/input/hid-simple.h:3:
+ *^IFor use me , you must include hid.h in your source first. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: drivers/usb/input/hid-simple.h:28:
+#define F_EVENT_BY_VALUE (0x1) /* submit input event by usage_block.value, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1601: FILE: drivers/usb/input/hid-simple.h:29:
+#define F_EVENT_BY_VALUE (0x1) /* submit input event by usage_block.value, 
+				  not implement yet */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1601: FILE: drivers/usb/input/hid-simple.h:29:
+				  not implement yet */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1633: FILE: drivers/usb/input/hid-simple.h:61:
+^Iint (*connect)(struct hid_device *, struct hid_input *);^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#1633: FILE: drivers/usb/input/hid-simple.h:61:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#1633: FILE: drivers/usb/input/hid-simple.h:61:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#1634: FILE: drivers/usb/input/hid-simple.h:62:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#1634: FILE: drivers/usb/input/hid-simple.h:62:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#1635: FILE: drivers/usb/input/hid-simple.h:63:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#1635: FILE: drivers/usb/input/hid-simple.h:63:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#1636: FILE: drivers/usb/input/hid-simple.h:64:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#1636: FILE: drivers/usb/input/hid-simple.h:64:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#1637: FILE: drivers/usb/input/hid-simple.h:65:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#1637: FILE: drivers/usb/input/hid-simple.h:65:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#1637: FILE: drivers/usb/input/hid-simple.h:65:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#1637: FILE: drivers/usb/input/hid-simple.h:65:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/usb/input/hid-simple.h:66:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,
+					const struct hid_usage *, const __s32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#1640: FILE: drivers/usb/input/hid-simple.h:68:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#1640: FILE: drivers/usb/input/hid-simple.h:68:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#1640: FILE: drivers/usb/input/hid-simple.h:68:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#1640: FILE: drivers/usb/input/hid-simple.h:68:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1641: FILE: drivers/usb/input/hid-simple.h:69:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,
+					const struct hid_usage *, const __s32,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1645: FILE: drivers/usb/input/hid-simple.h:73:
+        int (*upload_effect)(struct input_dev *dev, struct ff_effect *effect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1645: FILE: drivers/usb/input/hid-simple.h:73:
+        int (*upload_effect)(struct input_dev *dev, struct ff_effect *effect);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1646: FILE: drivers/usb/input/hid-simple.h:74:
+        int (*erase_effect)(struct input_dev *dev, int effect_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1646: FILE: drivers/usb/input/hid-simple.h:74:
+        int (*erase_effect)(struct input_dev *dev, int effect_id);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1654: FILE: drivers/usb/input/hid-simple.h:82:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1657: FILE: drivers/usb/input/hid-simple.h:85:
+struct hid_input* hidinput_simple_inputdev_to_hidinput(struct input_dev *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1679: FILE: drivers/usb/input/hid-simple.h:107:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1680: FILE: drivers/usb/input/hid-simple.h:108:
+ *  matched_device record one device which hid-subsystem handle, it may $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1683: FILE: drivers/usb/input/hid-simple.h:111:
+ *  The element of matched_device list is inserted at hidinput_connect(), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1685: FILE: drivers/usb/input/hid-simple.h:113:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1691: FILE: drivers/usb/input/hid-simple.h:119:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1694: FILE: drivers/usb/input/hid-simple.h:122:
+ */ $

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1702: FILE: drivers/usb/input/hid-simple.h:130:
+extern void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, struct hid_device *hid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1702: FILE: drivers/usb/input/hid-simple.h:130:
+extern void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, struct hid_device *hid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1703: FILE: drivers/usb/input/hid-simple.h:131:
+extern int hidinput_simple_driver_init(struct hidinput_simple_driver *simple);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1704: FILE: drivers/usb/input/hid-simple.h:132:
+extern void hidinput_simple_driver_clear(struct hidinput_simple_driver *simple);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1705: FILE: drivers/usb/input/hid-simple.h:133:
+extern int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1705: FILE: drivers/usb/input/hid-simple.h:133:
+extern int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1706: FILE: drivers/usb/input/hid-simple.h:134:
+extern int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 
+						struct hid_device *hid,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1708: FILE: drivers/usb/input/hid-simple.h:136:
+extern void hidinput_simple_driver_disconnect(struct hid_device *hid, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1708: FILE: drivers/usb/input/hid-simple.h:136:
+extern void hidinput_simple_driver_disconnect(struct hid_device *hid, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1709: FILE: drivers/usb/input/hid-simple.h:137:
+extern void hidinput_simple_driver_disconnect(struct hid_device *hid, 
+						struct matched_device *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1711: FILE: drivers/usb/input/hid-simple.h:139:
+static inline int hidinput_simple_event_filter(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1712: FILE: drivers/usb/input/hid-simple.h:140:
+static inline int hidinput_simple_event_filter(struct hid_device *hid, 
+							struct hid_field *field,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1728: FILE: drivers/usb/input/hid-simple.h:156:
+static inline void hidinput_simple_event_post(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1729: FILE: drivers/usb/input/hid-simple.h:157:
+static inline void hidinput_simple_event_post(struct hid_device *hid, 
+							struct hid_field *field,

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1742: FILE: drivers/usb/input/hid-simple.h:170:
+static inline void hidinput_simple_driver_setup_usage(struct hidinput_simple_driver *simple, struct hid_device *hid)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1750: FILE: drivers/usb/input/hid-simple.h:178:
+static void inline hidinput_simple_driver_clear_usage(struct hidinput_simple_driver *simple, struct hid_device *hid)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1750: FILE: drivers/usb/input/hid-simple.h:178:
+static void inline hidinput_simple_driver_clear_usage(struct hidinput_simple_driver *simple, struct hid_device *hid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1760: FILE: drivers/usb/input/hid-simple.h:188:
+static int hidinput_upload_effect(struct input_dev *dev,
+						struct ff_effect *effect)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1790: FILE: drivers/usb/input/hid-simple.h:218:
+static void inline hidinput_simple_driver_ff_init(struct input_dev *input_dev)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1797: FILE: drivers/usb/input/hid-simple.h:225:
+static void inline hidinput_simple_driver_ff_init(struct input_dev *input_dev) {}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1800: FILE: drivers/usb/input/hid-simple.h:228:
+static inline void hidinput_simple_driver_bind_foreach_simple(

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1808: FILE: drivers/usb/input/hid-simple.h:236:
+}
+static inline void hidinput_simple_driver_clear(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1808: FILE: drivers/usb/input/hid-simple.h:236:
+static inline void hidinput_simple_driver_clear(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1810: FILE: drivers/usb/input/hid-simple.h:238:
+static inline int hidinput_simple_driver_connect(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1817: FILE: drivers/usb/input/hid-simple.h:245:
+static inline void hidinput_simple_driver_disconnect(struct hid_device *hid, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1817: FILE: drivers/usb/input/hid-simple.h:245:
+}
+static inline void hidinput_simple_driver_disconnect(struct hid_device *hid, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1818: FILE: drivers/usb/input/hid-simple.h:246:
+static inline void hidinput_simple_driver_disconnect(struct hid_device *hid, 
+						struct matched_device *dev) {}

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1821: FILE: drivers/usb/input/hid-simple.h:249:
+static void inline hidinput_simple_driver_ff_init(struct input_dev *input_dev) {}

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1835: FILE: drivers/usb/input/Kconfig:330:
+config HID_SIMPLE
+	bool "HID simple driver interface"
+	depends on USB_HIDINPUT
+	help
+	  This simple interface let the writing HID driver more easier. Moreover,
+	  this allow you write force-feedback driver without touch HID input 
+	  implementation code. Also, it can be used as input filter.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1840: FILE: drivers/usb/input/Kconfig:335:
+^I  this allow you write force-feedback driver without touch HID input $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1843: FILE: drivers/usb/input/Kconfig:338:
+config HID_SIMPLE_MSNEK4K
+	tristate "Microsoft Natural Ergonomic Keyboard 4000 Driver"
+	depends on HID_SIMPLE
+	help
+	  Microsoft Natural Ergonomic Keyboard 4000 extend keys support. These
+  	  may not work without change user space configration, e.g, XKB conf-
+	  iguration in X.
+

WARNING:TYPO_SPELLING: 'configration' may be misspelled - perhaps 'configuration'?
#1848: FILE: drivers/usb/input/Kconfig:343:
+  	  may not work without change user space configration, e.g, XKB conf-
   	                                         ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1851: FILE: drivers/usb/input/Kconfig:346:
+config HID_SIMPLE_FF
+	bool "HID simple driver interface force feedback support"
+	depends on HID_SIMPLE && !HID_FF
+	help
+	  This feature can not be compatible with "Force feedback support" (HID_FF).
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1857: FILE: drivers/usb/input/Kconfig:352:
+config HID_SIMPLE_FF_BTP2118
+	tristate "Betop 2118 joystick force feedback support"
+	depends on HID_SIMPLE_FF
+	help
+	  This can enable Betop 2118 joystick force feedback feature.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1888: FILE: drivers/usb/input/usbnek4k.c:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1956: FILE: drivers/usb/input/usbnek4k.c:69:
+#define map_key(c) do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#1956: FILE: drivers/usb/input/usbnek4k.c:69:
+#define map_key(c) do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1957: FILE: drivers/usb/input/usbnek4k.c:70:
+#define clear_key(c) do { usage->code = 0; usage->type = 0; clear_bit(c,input->keybit); } while (0)
                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2034: FILE: drivers/usb/input/usbnek4k.c:147:
+				set_bit(KEY_F18,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2035: FILE: drivers/usb/input/usbnek4k.c:148:
+				set_bit(KEY_F19,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2036: FILE: drivers/usb/input/usbnek4k.c:149:
+				set_bit(KEY_F20,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2037: FILE: drivers/usb/input/usbnek4k.c:150:
+				set_bit(KEY_F21,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2038: FILE: drivers/usb/input/usbnek4k.c:151:
+				set_bit(KEY_F22,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2040: FILE: drivers/usb/input/usbnek4k.c:153:
+				set_bit(KEY_FN_F1,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2041: FILE: drivers/usb/input/usbnek4k.c:154:
+				set_bit(KEY_FN_F2,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2042: FILE: drivers/usb/input/usbnek4k.c:155:
+				set_bit(KEY_FN_F3,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2043: FILE: drivers/usb/input/usbnek4k.c:156:
+				set_bit(KEY_FN_F4,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2044: FILE: drivers/usb/input/usbnek4k.c:157:
+				set_bit(KEY_FN_F5,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2065: FILE: drivers/usb/input/usbnek4k.c:178:
+				clear_bit(KEY_F18,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2066: FILE: drivers/usb/input/usbnek4k.c:179:
+				clear_bit(KEY_F19,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2067: FILE: drivers/usb/input/usbnek4k.c:180:
+				clear_bit(KEY_F20,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2068: FILE: drivers/usb/input/usbnek4k.c:181:
+				clear_bit(KEY_F21,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2069: FILE: drivers/usb/input/usbnek4k.c:182:
+				clear_bit(KEY_F22,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2071: FILE: drivers/usb/input/usbnek4k.c:184:
+				clear_bit(KEY_FN_F1,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2072: FILE: drivers/usb/input/usbnek4k.c:185:
+				clear_bit(KEY_FN_F2,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2073: FILE: drivers/usb/input/usbnek4k.c:186:
+				clear_bit(KEY_FN_F3,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2074: FILE: drivers/usb/input/usbnek4k.c:187:
+				clear_bit(KEY_FN_F4,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2075: FILE: drivers/usb/input/usbnek4k.c:188:
+				clear_bit(KEY_FN_F5,input->keybit);
 				                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2081: FILE: drivers/usb/input/usbnek4k.c:194:
+static int nek4k_pre_event(const struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2082: FILE: drivers/usb/input/usbnek4k.c:195:
+static int nek4k_pre_event(const struct hid_device *hid, 
+					const struct hid_field *field,

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2091: FILE: drivers/usb/input/usbnek4k.c:204:
+	if (((usage->hid&HID_USAGE_PAGE) != HID_UP_MSVENDOR) ||
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2092: FILE: drivers/usb/input/usbnek4k.c:205:
+	if (((usage->hid&HID_USAGE_PAGE) != HID_UP_MSVENDOR) ||
+				(usage->hid&HID_USAGE) != USAGE_CUSTOM)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2092: FILE: drivers/usb/input/usbnek4k.c:205:
+				(usage->hid&HID_USAGE) != USAGE_CUSTOM)
 				           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2095: FILE: drivers/usb/input/usbnek4k.c:208:
+	code = ascii_keycode ? KEY_F18-1 : KEY_FN_F1-1;
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2095: FILE: drivers/usb/input/usbnek4k.c:208:
+	code = ascii_keycode ? KEY_F18-1 : KEY_FN_F1-1;
 	                                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2108: FILE: drivers/usb/input/usbnek4k.c:221:
+		hidinput->private = (void*)code;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2112: FILE: drivers/usb/input/usbnek4k.c:225:
+^Ireturn 0; $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000028817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 103 errors, 65 warnings, 70 checks, 2024 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000028817.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
