WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
>> boots fine. So it might be sched-init_idle-fork_by_hand-consolidation.patch

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#68: FILE: arch/ia64/kernel/smpboot.c:359:
 static int __devinit

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#88: FILE: arch/ia64/kernel/smpboot.c:366:
+	printk("entered do_boot_cpu(%d, %d)\n", sapicid, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#89: FILE: arch/ia64/kernel/smpboot.c:367:
+	printk("about to fork_idle(%d)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#91: FILE: arch/ia64/kernel/smpboot.c:369:
+	printk("survived fork_idle(%d)\n", cpu);

WARNING:MEMORY_BARRIER: memory barrier without comment
#96: FILE: arch/ia64/kernel/smpboot.c:372:
+	mb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: arch/ia64/kernel/smpboot.c:375:
+	printk("about to platform_send_ipi(%d, %p, IA64_IPI_DM_INT, 0)\n", cpu, ap_wakeup_vector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#101: FILE: arch/ia64/kernel/smpboot.c:377:
+	printk("survived platform_send_ipi(%d, %p, IA64_IPI_DM_INT, 0)\n", cpu, ap_wakeup_vector);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: arch/ia64/kernel/smpboot.c:382:
+	printk("Waiting on callin_map on cpu %d for cpu %d...",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: arch/ia64/kernel/smpboot.c:383:
+	printk("Waiting on callin_map on cpu %d for cpu %d...",
+		smp_processor_id(), cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: arch/ia64/kernel/smpboot.c:389:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#116: FILE: arch/ia64/kernel/smpboot.c:390:
+	printk("finished waiting on callin_map\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#120: FILE: arch/ia64/kernel/smpboot.c:393:
+		printk("Processor 0x%x/0x%x is stuck.\n", cpu, sapicid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: arch/ia64/kernel/smpboot.c:396:
+		printk("error return from do_boot_cpu(%d, %d)\n", sapicid, cpu);

CHECK:BRACES: Unbalanced braces around else statement
#126: FILE: arch/ia64/kernel/smpboot.c:398:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: arch/ia64/kernel/smpboot.c:399:
+		printk("Processor %d/%d came up\n", cpu, sapicid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: arch/ia64/kernel/smpboot.c:400:
+	printk("normal return from do_boot_cpu(%d, %d)\n", sapicid, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: arch/ia64/kernel/smpboot.c:641:
+	printk("entered __cpu_up(%u)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#140: FILE: arch/ia64/kernel/smpboot.c:644:
+		printk("invalid SAPIC ID\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#141: FILE: arch/ia64/kernel/smpboot.c:645:
+		printk("error return from __cpu_up(%u)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#150: FILE: arch/ia64/kernel/smpboot.c:654:
+		printk("%u already set in cpu_callin_map\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#151: FILE: arch/ia64/kernel/smpboot.c:655:
+		printk("about to cpu_enable(%u)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: arch/ia64/kernel/smpboot.c:657:
+		printk("survived cpu_enable(%u)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: arch/ia64/kernel/smpboot.c:659:
+		printk("looping while (!cpu_isset(%u, cpu_online_map))\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#158: FILE: arch/ia64/kernel/smpboot.c:662:
+		printk("finished looping while (!cpu_isset(%u, cpu_online_map))\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: arch/ia64/kernel/smpboot.c:663:
+		printk("successful return from __cpu_up(%u)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: arch/ia64/kernel/smpboot.c:667:
+	printk("about to call do_boot_cpu(%d, %d)\n", sapicid, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: arch/ia64/kernel/smpboot.c:669:
+	printk("survived call to do_boot_cpu(%d, %d)\n", sapicid, cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/ia64/kernel/smpboot.c:671:
+		printk("error return from __cpu_up(%u)\n", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#172: FILE: arch/ia64/kernel/smpboot.c:674:
+	printk("successful return from __cpu_up(%u)\n", cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 28 warnings, 2 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
