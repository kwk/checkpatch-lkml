ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#69: 
--- a/include/asm-i386/system.h	Sat Jul 20 23:03:53 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#146: FILE: include/asm-sparc64/system.h:153:
+#define finish_arch_switch(rq, prev)		\
+do {	spin_unlock_irq(&(prev)->switch_lock);	\
 } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#175: FILE: include/linux/init_task.h:81:
+    switch_lock:	SPIN_LOCK_UNLOCKED,				\
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#175: FILE: include/linux/init_task.h:81:
+    switch_lock:	SPIN_LOCK_UNLOCKED,				\

ERROR:SPACING: space required before the open parenthesis '('
#264: FILE: kernel/sched.c:160:
+# define prepare_arch_switch(rq, next)	do { } while(0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: kernel/sched.c:381:
+		if (unlikely(sync && !task_running(rq, p) &&
 			(task_cpu(p) != smp_processor_id()) &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#366: FILE: kernel/sched.c:523:
+	if (rq1 == rq2)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#368: FILE: kernel/sched.c:525:
+	else {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#410: FILE: kernel/sched.c:574:
+static inline runqueue_t *find_busiest_queue(runqueue_t *this_rq, int this_cpu, int idle, int *imbalance)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#435: FILE: kernel/sched.c:631:
+	if (!idle && (*imbalance < (max_load + 3)/4)) {
 	                                         ^

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#459: FILE: kernel/sched.c:653:
+static inline void pull_task(runqueue_t *src_rq, prio_array_t *src_array, task_t *p, runqueue_t *this_rq, int this_cpu)

WARNING:TYPO_SPELLING: 'inbalance' may be misspelled - perhaps 'imbalance'?
#476: FILE: kernel/sched.c:670:
+ * inbalance (current runqueue is too short) then pull from
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: kernel/sched.c:1182:
+		if ((NICE_TO_PRIO(nice) < p->static_prio) ||
+							task_running(rq, p))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#805: FILE: kernel/sched.c:1895:
+extern void timer_bh(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#806: FILE: kernel/sched.c:1896:
+extern void tqueue_bh(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#807: FILE: kernel/sched.c:1897:
+extern void immediate_bh(void);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#814: FILE: kernel/sched.c:1904:
+	for (i = 0; i < NR_CPUS; i++) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 9 warnings, 5 checks, 717 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445879.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
