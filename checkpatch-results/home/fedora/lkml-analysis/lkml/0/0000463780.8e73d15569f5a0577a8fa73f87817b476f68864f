WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -uNr linux-2.5.8.boot.linuxbios/arch/i386/Makefile linux-2.5.8.boot.elf/arch/i386/Makefile

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: arch/i386/boot/Makefile:21:
+bzElf: $(CONFIGURE) tools/build $(TOPDIR)/vmlinux brealmode compressed/bvmlinux $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Half>
#96: FILE: arch/i386/boot/tools/build.c:104:
+typedef uint16_t Elf_Half;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Word>
#97: FILE: arch/i386/boot/tools/build.c:105:
+typedef uint32_t Elf_Word;

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Xword>
#98: FILE: arch/i386/boot/tools/build.c:106:
+typedef uint64_t Elf_Xword;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: arch/i386/boot/tools/build.c:108:
+typedef struct $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#100: FILE: arch/i386/boot/tools/build.c:108:
+typedef struct 

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#101: FILE: arch/i386/boot/tools/build.c:109:
+typedef struct 
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Nhdr>
#105: FILE: arch/i386/boot/tools/build.c:113:
+} Elf_Nhdr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/i386/boot/tools/build.c:115:
+typedef struct $

WARNING:NEW_TYPEDEFS: do not add new typedefs
#107: FILE: arch/i386/boot/tools/build.c:115:
+typedef struct 

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#108: FILE: arch/i386/boot/tools/build.c:116:
+typedef struct 
+{

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Pdesc>
#111: FILE: arch/i386/boot/tools/build.c:119:
+} Elf_Pdesc;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#137: FILE: arch/i386/boot/tools/build.c:377:
+	laddr = (unsigned long )addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#153: FILE: arch/i386/boot/tools/build.c:393:
+		addr = ptr +1;
 		           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: arch/i386/boot/tools/build.c:418:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#179: FILE: arch/i386/boot/tools/build.c:419:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: arch/i386/boot/tools/build.c:424:
+	unsigned long checksum;
+	sum = ~sum & 0xFFFF;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/boot/tools/build.c:427:
+^I^I/* byte swap the sum if it came from an odd offset $

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#188: FILE: arch/i386/boot/tools/build.c:428:
+		 * since the computation is endian independant this
 		                                   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#194: FILE: arch/i386/boot/tools/build.c:434:
+	if (checksum > 0xFFFF) {
+		checksum -= 0xFFFF;
+	}

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#223: FILE: arch/i386/boot/tools/build.c:632:
+	Elf32_Ehdr ehdr;

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#224: FILE: arch/i386/boot/tools/build.c:633:
+	Elf32_Phdr phdr[OSEGS - (OEHDR + 1)];

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#235: FILE: arch/i386/boot/tools/build.c:644:
+} __attribute__((packed));

WARNING:LINE_SPACING: Missing a blank line after declarations
#243: FILE: arch/i386/boot/tools/build.c:652:
+	int i;
+	hdr = checked_malloc(sizeof(*hdr));

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(hdr->phdr)
#258: FILE: arch/i386/boot/tools/build.c:667:
+	hdr->ehdr.e_phnum     = cpu_to_le16(sizeof(hdr->phdr)/sizeof(hdr->phdr[0]));

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#258: FILE: arch/i386/boot/tools/build.c:667:
+	hdr->ehdr.e_phnum     = cpu_to_le16(sizeof(hdr->phdr)/sizeof(hdr->phdr[0]));
 	                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: arch/i386/boot/tools/build.c:682:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#274: FILE: arch/i386/boot/tools/build.c:683:
+	for(i = OEHDR +1; i < OSEGS; i++) {
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: arch/i386/boot/tools/build.c:683:
+	for(i = OEHDR +1; i < OSEGS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: arch/i386/boot/tools/build.c:685:
+^I^Iif (seg[i].mem_size == 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: arch/i386/boot/tools/build.c:696:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#288: FILE: arch/i386/boot/tools/build.c:697:
+	hdr->program_name_hdr.n_namesz = cpu_to_le32(strlen(EIN_NOTE_NAME) +1);
 	                                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#289: FILE: arch/i386/boot/tools/build.c:698:
+	hdr->program_name_hdr.n_descsz = cpu_to_le32(strlen("Linux") +1);
 	                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: arch/i386/boot/tools/build.c:702:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#294: FILE: arch/i386/boot/tools/build.c:703:
+	hdr->program_version_hdr.n_namesz = cpu_to_le32(strlen(EIN_NOTE_NAME) +1);
 	                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#295: FILE: arch/i386/boot/tools/build.c:704:
+	hdr->program_version_hdr.n_descsz = cpu_to_le32(strlen(LINUX_KERNEL_VERSION)+1);
 	                                                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#300: FILE: arch/i386/boot/tools/build.c:709:
+	hdr->program_checksum_hdr.n_namesz = cpu_to_le32(strlen(EIN_NOTE_NAME) +1);
 	                                                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: arch/i386/boot/tools/build.c:720:
+	for(i = 1; i < 4; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: arch/i386/boot/tools/build.c:721:
+^I^Ichecksum = add_ip_checksums(bytes, checksum, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: arch/i386/boot/tools/build.c:722:
+		checksum = add_ip_checksums(bytes, checksum, 
+			compute_ip_checksum(seg[i].data, seg[i].data_size));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#353: FILE: arch/i386/boot/tools/build.c:868:
+	if (info.is_elf) {
+		oseg[OEHDR].data_size = sizeof(struct elf_header);
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463780.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 10 warnings, 17 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463780.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
