WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#26: 
Signed-Off-By: dhowells@redhat.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: arch/frv/kernel/frv_ksyms.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#56: FILE: arch/frv/kernel/frv_ksyms.c:15:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#63: FILE: arch/frv/kernel/frv_ksyms.c:22:
+extern long __memcpy_user(void *dst, const void *src, size_t count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#67: FILE: arch/frv/kernel/frv_ksyms.c:26:
+EXPORT_SYMBOL(__ioremap);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#68: FILE: arch/frv/kernel/frv_ksyms.c:27:
+EXPORT_SYMBOL(iounmap);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#70: FILE: arch/frv/kernel/frv_ksyms.c:29:
+EXPORT_SYMBOL(dump_thread);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#71: FILE: arch/frv/kernel/frv_ksyms.c:30:
+EXPORT_SYMBOL(strnlen);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#72: FILE: arch/frv/kernel/frv_ksyms.c:31:
+EXPORT_SYMBOL(strrchr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#73: FILE: arch/frv/kernel/frv_ksyms.c:32:
+EXPORT_SYMBOL(strstr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#74: FILE: arch/frv/kernel/frv_ksyms.c:33:
+EXPORT_SYMBOL(strchr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#75: FILE: arch/frv/kernel/frv_ksyms.c:34:
+EXPORT_SYMBOL(strcat);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#76: FILE: arch/frv/kernel/frv_ksyms.c:35:
+EXPORT_SYMBOL(strlen);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#77: FILE: arch/frv/kernel/frv_ksyms.c:36:
+EXPORT_SYMBOL(strcmp);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#78: FILE: arch/frv/kernel/frv_ksyms.c:37:
+EXPORT_SYMBOL(strncmp);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#79: FILE: arch/frv/kernel/frv_ksyms.c:38:
+EXPORT_SYMBOL(strncpy);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#81: FILE: arch/frv/kernel/frv_ksyms.c:40:
+EXPORT_SYMBOL(ip_fast_csum);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#83: FILE: arch/frv/kernel/frv_ksyms.c:42:
+#if 0

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#85: FILE: arch/frv/kernel/frv_ksyms.c:44:
+EXPORT_SYMBOL(local_bh_count);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#89: FILE: arch/frv/kernel/frv_ksyms.c:48:
+EXPORT_SYMBOL(enable_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#90: FILE: arch/frv/kernel/frv_ksyms.c:49:
+EXPORT_SYMBOL(disable_irq);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#91: FILE: arch/frv/kernel/frv_ksyms.c:50:
+EXPORT_SYMBOL(__res_bus_clock_speed_HZ);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#92: FILE: arch/frv/kernel/frv_ksyms.c:51:
+EXPORT_SYMBOL(__page_offset);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#93: FILE: arch/frv/kernel/frv_ksyms.c:52:
+EXPORT_SYMBOL(__memcpy_user);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#94: FILE: arch/frv/kernel/frv_ksyms.c:53:
+EXPORT_SYMBOL(flush_dcache_page);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#98: FILE: arch/frv/kernel/frv_ksyms.c:57:
+EXPORT_SYMBOL(memory_end);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#101: FILE: arch/frv/kernel/frv_ksyms.c:60:
+EXPORT_SYMBOL_NOVERS(__debug_bug_trap);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#107: FILE: arch/frv/kernel/frv_ksyms.c:66:
+/* The following are special because they're not called
+   explicitly (the C compiler generates them).  Fortunately,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#109: FILE: arch/frv/kernel/frv_ksyms.c:68:
+   it's OK to leave it out of version control.  */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#111: FILE: arch/frv/kernel/frv_ksyms.c:70:
+EXPORT_SYMBOL_NOVERS(memset);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#112: FILE: arch/frv/kernel/frv_ksyms.c:71:
+EXPORT_SYMBOL_NOVERS(memcmp);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#113: FILE: arch/frv/kernel/frv_ksyms.c:72:
+EXPORT_SYMBOL_NOVERS(memscan);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#114: FILE: arch/frv/kernel/frv_ksyms.c:73:
+EXPORT_SYMBOL_NOVERS(memmove);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#115: FILE: arch/frv/kernel/frv_ksyms.c:74:
+EXPORT_SYMBOL_NOVERS(strtok);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#117: FILE: arch/frv/kernel/frv_ksyms.c:76:
+EXPORT_SYMBOL(get_wchan);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#121: FILE: arch/frv/kernel/frv_ksyms.c:80:
+EXPORT_SYMBOL_NOVERS(atomic_test_and_OR_mask);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#122: FILE: arch/frv/kernel/frv_ksyms.c:81:
+EXPORT_SYMBOL_NOVERS(atomic_test_and_XOR_mask);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#123: FILE: arch/frv/kernel/frv_ksyms.c:82:
+EXPORT_SYMBOL_NOVERS(atomic_add_return);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#124: FILE: arch/frv/kernel/frv_ksyms.c:83:
+EXPORT_SYMBOL_NOVERS(atomic_sub_return);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#125: FILE: arch/frv/kernel/frv_ksyms.c:84:
+EXPORT_SYMBOL_NOVERS(__xchg_8);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#126: FILE: arch/frv/kernel/frv_ksyms.c:85:
+EXPORT_SYMBOL_NOVERS(__xchg_16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#127: FILE: arch/frv/kernel/frv_ksyms.c:86:
+EXPORT_SYMBOL_NOVERS(__xchg_32);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#128: FILE: arch/frv/kernel/frv_ksyms.c:87:
+EXPORT_SYMBOL_NOVERS(__cmpxchg_8);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#129: FILE: arch/frv/kernel/frv_ksyms.c:88:
+EXPORT_SYMBOL_NOVERS(__cmpxchg_16);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#130: FILE: arch/frv/kernel/frv_ksyms.c:89:
+EXPORT_SYMBOL_NOVERS(__cmpxchg_32);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#139: FILE: arch/frv/kernel/frv_ksyms.c:98:
+extern void __ashldi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#140: FILE: arch/frv/kernel/frv_ksyms.c:99:
+extern void __ashrdi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#141: FILE: arch/frv/kernel/frv_ksyms.c:100:
+extern void __cmpdi2(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#142: FILE: arch/frv/kernel/frv_ksyms.c:101:
+extern void __divdi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#143: FILE: arch/frv/kernel/frv_ksyms.c:102:
+extern void __lshrdi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#144: FILE: arch/frv/kernel/frv_ksyms.c:103:
+extern void __moddi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#145: FILE: arch/frv/kernel/frv_ksyms.c:104:
+extern void __muldi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#146: FILE: arch/frv/kernel/frv_ksyms.c:105:
+extern void __negdi2(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#147: FILE: arch/frv/kernel/frv_ksyms.c:106:
+extern void __ucmpdi2(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#148: FILE: arch/frv/kernel/frv_ksyms.c:107:
+extern void __udivdi3(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#149: FILE: arch/frv/kernel/frv_ksyms.c:108:
+extern void __udivmoddi4(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#150: FILE: arch/frv/kernel/frv_ksyms.c:109:
+extern void __umoddi3(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/frv/kernel/frv_ksyms.c:111:
+        /* gcc lib functions */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#155: FILE: arch/frv/kernel/frv_ksyms.c:114:
+EXPORT_SYMBOL_NOVERS(__ashrdi3);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#161: FILE: arch/frv/kernel/frv_ksyms.c:120:
+EXPORT_SYMBOL_NOVERS(__negdi2);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#170: FILE: arch/frv/kernel/gdb-io.c:1:
+/* gdb-io.c: FR403 GDB stub I/O

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#190: FILE: arch/frv/kernel/gdb-io.c:21:
+#include <asm/pgtable.h>

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#198: FILE: arch/frv/kernel/gdb-io.c:29:
+#define __UART(X) (*(volatile uint8_t *)(UART0_BASE + (UART_##X)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#201: FILE: arch/frv/kernel/gdb-io.c:32:
+#define __UART(X) (*(volatile uint8_t *)(UART1_BASE + (UART_##X)))

WARNING:MEMORY_BARRIER: memory barrier without comment
#211: FILE: arch/frv/kernel/gdb-io.c:42:
+#define FLOWCTL_CLEAR(LINE)	do { __UART(MCR) &= ~UART_MCR_##LINE; mb(); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#212: FILE: arch/frv/kernel/gdb-io.c:43:
+#define FLOWCTL_SET(LINE)	do { __UART(MCR) |= UART_MCR_##LINE;  mb(); } while (0)

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: arch/frv/kernel/gdb-io.c:48:
+} while(!FLOWCTL_QUERY(LINE))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#241: FILE: arch/frv/kernel/gdb-io.c:72:
+	mb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#251: FILE: arch/frv/kernel/gdb-io.c:82:
+void gdbstub_set_baud(unsigned baud)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#253: FILE: arch/frv/kernel/gdb-io.c:84:
+	unsigned value, high, low;

WARNING:MEMORY_BARRIER: memory barrier without comment
#269: FILE: arch/frv/kernel/gdb-io.c:100:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#272: FILE: arch/frv/kernel/gdb-io.c:103:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#274: FILE: arch/frv/kernel/gdb-io.c:105:
+	mb();

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#284: FILE: arch/frv/kernel/gdb-io.c:115:
+	unsigned ix, nix;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: arch/frv/kernel/gdb-io.c:142:
+	unsigned ix;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#342: FILE: arch/frv/kernel/gdb-io.c:173:
+	else if (st & (UART_LSR_FE|UART_LSR_OE|UART_LSR_PE)) {
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#342: FILE: arch/frv/kernel/gdb-io.c:173:
+	else if (st & (UART_LSR_FE|UART_LSR_OE|UART_LSR_PE)) {
 	                                      ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#342: FILE: arch/frv/kernel/gdb-io.c:173:
+	}
+	else if (st & (UART_LSR_FE|UART_LSR_OE|UART_LSR_PE)) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#343: FILE: arch/frv/kernel/gdb-io.c:174:
+		gdbstub_proto("### GDB Rx Error (st=%02x) ###\n",st);
 		                                                ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#346: FILE: arch/frv/kernel/gdb-io.c:177:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#346: FILE: arch/frv/kernel/gdb-io.c:177:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: arch/frv/kernel/gdb-io.c:178:
+		gdbstub_proto("### GDB Rx %02x (st=%02x) ###\n",ch,st);
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: arch/frv/kernel/gdb-io.c:178:
+		gdbstub_proto("### GDB Rx %02x (st=%02x) ###\n",ch,st);
 		                                                  ^

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#361: FILE: arch/frv/kernel/gdb-io.c:192:
+	LSR_WAIT_FOR(THRE);
 	             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MEMORY_BARRIER: memory barrier without comment
#366: FILE: arch/frv/kernel/gdb-io.c:197:
+		mb();

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#367: FILE: arch/frv/kernel/gdb-io.c:198:
+		LSR_WAIT_FOR(THRE);
 		             ^^^^

WARNING:MEMORY_BARRIER: memory barrier without comment
#371: FILE: arch/frv/kernel/gdb-io.c:202:
+	mb();

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#383: FILE: arch/frv/kernel/gdb-io.c:214:
+	LSR_WAIT_FOR(THRE);
 	             ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#390: FILE: arch/frv/kernel/gdb-io.h:1:
+/* gdb-io.h: FR403 GDB I/O port defs

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#419: FILE: arch/frv/kernel/gdb-io.h:30:
+#define UART_RX		0*8	/* In:  Receive buffer (DLAB=0) */
                		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#419: FILE: arch/frv/kernel/gdb-io.h:30:
+#define UART_RX		0*8	/* In:  Receive buffer (DLAB=0) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#420: FILE: arch/frv/kernel/gdb-io.h:31:
+#define UART_TX		0*8	/* Out: Transmit buffer (DLAB=0) */
                		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#420: FILE: arch/frv/kernel/gdb-io.h:31:
+#define UART_TX		0*8	/* Out: Transmit buffer (DLAB=0) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#421: FILE: arch/frv/kernel/gdb-io.h:32:
+#define UART_DLL	0*8	/* Out: Divisor Latch Low (DLAB=1) */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#421: FILE: arch/frv/kernel/gdb-io.h:32:
+#define UART_DLL	0*8	/* Out: Divisor Latch Low (DLAB=1) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#422: FILE: arch/frv/kernel/gdb-io.h:33:
+#define UART_DLM	1*8	/* Out: Divisor Latch High (DLAB=1) */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#422: FILE: arch/frv/kernel/gdb-io.h:33:
+#define UART_DLM	1*8	/* Out: Divisor Latch High (DLAB=1) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#423: FILE: arch/frv/kernel/gdb-io.h:34:
+#define UART_IER	1*8	/* Out: Interrupt Enable Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#423: FILE: arch/frv/kernel/gdb-io.h:34:
+#define UART_IER	1*8	/* Out: Interrupt Enable Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#424: FILE: arch/frv/kernel/gdb-io.h:35:
+#define UART_IIR	2*8	/* In:  Interrupt ID Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#424: FILE: arch/frv/kernel/gdb-io.h:35:
+#define UART_IIR	2*8	/* In:  Interrupt ID Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#425: FILE: arch/frv/kernel/gdb-io.h:36:
+#define UART_FCR	2*8	/* Out: FIFO Control Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#425: FILE: arch/frv/kernel/gdb-io.h:36:
+#define UART_FCR	2*8	/* Out: FIFO Control Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#426: FILE: arch/frv/kernel/gdb-io.h:37:
+#define UART_LCR	3*8	/* Out: Line Control Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#426: FILE: arch/frv/kernel/gdb-io.h:37:
+#define UART_LCR	3*8	/* Out: Line Control Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#427: FILE: arch/frv/kernel/gdb-io.h:38:
+#define UART_MCR	4*8	/* Out: Modem Control Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#427: FILE: arch/frv/kernel/gdb-io.h:38:
+#define UART_MCR	4*8	/* Out: Modem Control Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#428: FILE: arch/frv/kernel/gdb-io.h:39:
+#define UART_LSR	5*8	/* In:  Line Status Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#428: FILE: arch/frv/kernel/gdb-io.h:39:
+#define UART_LSR	5*8	/* In:  Line Status Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#429: FILE: arch/frv/kernel/gdb-io.h:40:
+#define UART_MSR	6*8	/* In:  Modem Status Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#429: FILE: arch/frv/kernel/gdb-io.h:40:
+#define UART_MSR	6*8	/* In:  Modem Status Register */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#430: FILE: arch/frv/kernel/gdb-io.h:41:
+#define UART_SCR	7*8	/* I/O: Scratch Register */
                 	 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#430: FILE: arch/frv/kernel/gdb-io.h:41:
+#define UART_SCR	7*8	/* I/O: Scratch Register */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#443: FILE: arch/frv/kernel/gdb-io.h:54:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#449: FILE: arch/frv/kernel/gdb-stub.c:1:
+/* gdb-stub.c: FRV GDB stub

WARNING:TYPO_SPELLING: 'fasion' may be misspelled - perhaps 'fashion'?
#559: FILE: arch/frv/kernel/gdb-stub.c:111:
+ *       in the normal fasion. Setting
                        ^^^^^^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#575: FILE: arch/frv/kernel/gdb-stub.c:127:
+#include <asm/pgtable.h>

ERROR:SPACING: space required before the open parenthesis '('
#579: FILE: arch/frv/kernel/gdb-stub.c:131:
+#define LEDS(x) do { /* *(u32*)0xe1200004 = ~(x); mb(); */ } while(0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#584: FILE: arch/frv/kernel/gdb-stub.c:136:
+extern void gdbstub_console_write(struct console *co, const char *p, unsigned n);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#584: FILE: arch/frv/kernel/gdb-stub.c:136:
+extern void gdbstub_console_write(struct console *co, const char *p, unsigned n);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#586: FILE: arch/frv/kernel/gdb-stub.c:138:
+extern volatile uint32_t __break_error_detect[3]; /* ESFR1, ESR15, EAR15 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#586: FILE: arch/frv/kernel/gdb-stub.c:138:
+extern volatile uint32_t __break_error_detect[3]; /* ESFR1, ESR15, EAR15 */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#586: FILE: arch/frv/kernel/gdb-stub.c:138:
+extern volatile uint32_t __break_error_detect[3]; /* ESFR1, ESR15, EAR15 */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#587: FILE: arch/frv/kernel/gdb-stub.c:139:
+extern struct user_context __break_user_context;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#591: FILE: arch/frv/kernel/gdb-stub.c:143:
+} __attribute__((aligned(8)));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#605: FILE: arch/frv/kernel/gdb-stub.c:157:
+	struct __debug_amr	tlb[64*2];
 	                  	      ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#621: FILE: arch/frv/kernel/gdb-stub.c:173:
+volatile u8	gdbstub_rx_buffer[PAGE_SIZE] __attribute__((aligned(PAGE_SIZE)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#621: FILE: arch/frv/kernel/gdb-stub.c:173:
+volatile u8	gdbstub_rx_buffer[PAGE_SIZE] __attribute__((aligned(PAGE_SIZE)));

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#622: FILE: arch/frv/kernel/gdb-stub.c:174:
+volatile u32	gdbstub_rx_inp = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#622: FILE: arch/frv/kernel/gdb-stub.c:174:
+volatile u32	gdbstub_rx_inp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#623: FILE: arch/frv/kernel/gdb-stub.c:175:
+volatile u32	gdbstub_rx_outp = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#623: FILE: arch/frv/kernel/gdb-stub.c:175:
+volatile u32	gdbstub_rx_outp = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#624: FILE: arch/frv/kernel/gdb-stub.c:176:
+volatile u8	gdbstub_rx_overflow = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#624: FILE: arch/frv/kernel/gdb-stub.c:176:
+volatile u8	gdbstub_rx_overflow = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#625: FILE: arch/frv/kernel/gdb-stub.c:177:
+u8		gdbstub_rx_unget = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#628: FILE: arch/frv/kernel/gdb-stub.c:180:
+extern volatile u32 __attribute__((section(".bss"))) gdbstub_trace_through_exceptions;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".bss") over __attribute__((section(".bss")))
#628: FILE: arch/frv/kernel/gdb-stub.c:180:
+extern volatile u32 __attribute__((section(".bss"))) gdbstub_trace_through_exceptions;

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#635: FILE: arch/frv/kernel/gdb-stub.c:187:
+static const char *regnames[] = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#652: FILE: arch/frv/kernel/gdb-stub.c:204:
+	unsigned	len;		/* size of breakpoint */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#653: FILE: arch/frv/kernel/gdb-stub.c:205:
+	uint32_t	originsns[7];	/* original instructions */

CHECK:CAMELCASE: Avoid CamelCase: <hexToInt>
#666: FILE: arch/frv/kernel/gdb-stub.c:218:
+static int hexToInt(char **ptr, unsigned long *intValue);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <intValue>
#666: FILE: arch/frv/kernel/gdb-stub.c:218:
+static int hexToInt(char **ptr, unsigned long *intValue);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#676: FILE: arch/frv/kernel/gdb-stub.c:228:
+		return ch-'a'+10;
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#676: FILE: arch/frv/kernel/gdb-stub.c:228:
+		return ch-'a'+10;
 		             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#678: FILE: arch/frv/kernel/gdb-stub.c:230:
+		return ch-'0';
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#680: FILE: arch/frv/kernel/gdb-stub.c:232:
+		return ch-'A'+10;
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#680: FILE: arch/frv/kernel/gdb-stub.c:232:
+		return ch-'A'+10;
 		             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#700: FILE: arch/frv/kernel/gdb-stub.c:252:
+	int loop = 0;
+	while ((dst[loop] = src[loop]))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#700: FILE: arch/frv/kernel/gdb-stub.c:252:
+	while ((dst[loop] = src[loop]))
+	       loop++;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#707: FILE: arch/frv/kernel/gdb-stub.c:259:
+	asm volatile("	dcef	@(gr0,gr0),#1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#708: FILE: arch/frv/kernel/gdb-stub.c:260:
+		     "	icei	@(gr0,gr0),#1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#709: FILE: arch/frv/kernel/gdb-stub.c:261:
+		     "	membar			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#710: FILE: arch/frv/kernel/gdb-stub.c:262:
+		     "	bar			\n"

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#798: FILE: arch/frv/kernel/gdb-stub.c:350:
+			while (buffer[count]) count++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#799: FILE: arch/frv/kernel/gdb-stub.c:351:
+			for (i=3; i <= count; i++)
 			      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#837: FILE: arch/frv/kernel/gdb-stub.c:389:
+	} while (gdbstub_rx_char(&ch,0),
 	                            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#839: FILE: arch/frv/kernel/gdb-stub.c:391:
+		 ch=='-' && (gdbstub_proto("### GDB Rx NAK\n"),0),
 		   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#839: FILE: arch/frv/kernel/gdb-stub.c:391:
+		 ch=='-' && (gdbstub_proto("### GDB Rx NAK\n"),0),
 		                                              ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#840: FILE: arch/frv/kernel/gdb-stub.c:392:
+		 ch!='-' && ch!='+' && (gdbstub_proto("### GDB Rx ??? %02x\n",ch),0),
 		   ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#840: FILE: arch/frv/kernel/gdb-stub.c:392:
+		 ch!='-' && ch!='+' && (gdbstub_proto("### GDB Rx ??? %02x\n",ch),0),
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: arch/frv/kernel/gdb-stub.c:392:
+		 ch!='-' && ch!='+' && (gdbstub_proto("### GDB Rx ??? %02x\n",ch),0),
 		                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#840: FILE: arch/frv/kernel/gdb-stub.c:392:
+		 ch!='-' && ch!='+' && (gdbstub_proto("### GDB Rx ??? %02x\n",ch),0),
 		                                                                 ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#842: FILE: arch/frv/kernel/gdb-stub.c:394:
+		 ch!='+' && ch!='$');
 		   ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#842: FILE: arch/frv/kernel/gdb-stub.c:394:
+		 ch!='+' && ch!='$');
 		              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#844: FILE: arch/frv/kernel/gdb-stub.c:396:
+	if (ch=='+') {
 	      ^

CHECK:SPACING: No space is necessary after a cast
#868: FILE: arch/frv/kernel/gdb-stub.c:420:
+		*_value = (*_value << 4) | ((uint8_t) ch & 0xf);

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_V>
#887: FILE: arch/frv/kernel/gdb-stub.c:439:
+	if (!(paddr & xAMPRx_V))

CHECK:SPACING: No space is necessary after a cast
#904: FILE: arch/frv/kernel/gdb-stub.c:456:
+	pgd = (pgd_t *) __get_DAMLR(3) + pgd_index(vaddr);

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_L>
#913: FILE: arch/frv/kernel/gdb-stub.c:465:
+	__set_DAMPR(5, val | xAMPRx_L | xAMPRx_SS_16Kb | xAMPRx_S | xAMPRx_C | xAMPRx_V);

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_16Kb>
#913: FILE: arch/frv/kernel/gdb-stub.c:465:
+	__set_DAMPR(5, val | xAMPRx_L | xAMPRx_SS_16Kb | xAMPRx_S | xAMPRx_C | xAMPRx_V);

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S>
#913: FILE: arch/frv/kernel/gdb-stub.c:465:
+	__set_DAMPR(5, val | xAMPRx_L | xAMPRx_SS_16Kb | xAMPRx_S | xAMPRx_C | xAMPRx_V);

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C>
#913: FILE: arch/frv/kernel/gdb-stub.c:465:
+	__set_DAMPR(5, val | xAMPRx_L | xAMPRx_SS_16Kb | xAMPRx_S | xAMPRx_C | xAMPRx_V);

CHECK:SPACING: No space is necessary after a cast
#940: FILE: arch/frv/kernel/gdb-stub.c:492:
+	pte = gdbstub_virt_to_pte((unsigned long) vaddr);

CHECK:SPACING: No space is necessary after a cast
#943: FILE: arch/frv/kernel/gdb-stub.c:495:
+		__set_DAMLR(2, (unsigned long) vaddr & PAGE_MASK);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#964: FILE: arch/frv/kernel/gdb-stub.c:516:
+	uint32_t res;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#969: FILE: arch/frv/kernel/gdb-stub.c:521:
+	asm volatile("	movgs	gr0,brr	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#970: FILE: arch/frv/kernel/gdb-stub.c:522:
+		     "	ld%I2	%M2,%0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#971: FILE: arch/frv/kernel/gdb-stub.c:523:
+		     "	movsg	brr,%1	\n"

CHECK:SPACING: No space is necessary after a cast
#973: FILE: arch/frv/kernel/gdb-stub.c:525:
+		     : "m"(*(uint32_t *) addr));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#986: FILE: arch/frv/kernel/gdb-stub.c:538:
+	asm volatile("	movgs	gr0,brr	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#987: FILE: arch/frv/kernel/gdb-stub.c:539:
+		     "	st%I2	%1,%M2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#988: FILE: arch/frv/kernel/gdb-stub.c:540:
+		     "	movsg	brr,%0	\n"

CHECK:SPACING: No space is necessary after a cast
#990: FILE: arch/frv/kernel/gdb-stub.c:542:
+		     : "r"(val), "m"(*(uint32_t *) addr));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#998: FILE: arch/frv/kernel/gdb-stub.c:550:
+	uint16_t res;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1003: FILE: arch/frv/kernel/gdb-stub.c:555:
+	asm volatile("	movgs	gr0,brr	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1004: FILE: arch/frv/kernel/gdb-stub.c:556:
+		     "	lduh%I2	%M2,%0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1005: FILE: arch/frv/kernel/gdb-stub.c:557:
+		     "	movsg	brr,%1	\n"

CHECK:SPACING: No space is necessary after a cast
#1007: FILE: arch/frv/kernel/gdb-stub.c:559:
+		     : "m"(*(uint16_t *) addr));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1020: FILE: arch/frv/kernel/gdb-stub.c:572:
+	asm volatile("	movgs	gr0,brr	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1021: FILE: arch/frv/kernel/gdb-stub.c:573:
+		     "	sth%I2	%1,%M2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1022: FILE: arch/frv/kernel/gdb-stub.c:574:
+		     "	movsg	brr,%0	\n"

CHECK:SPACING: No space is necessary after a cast
#1024: FILE: arch/frv/kernel/gdb-stub.c:576:
+		     : "r"(val), "m"(*(uint16_t *) addr));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1032: FILE: arch/frv/kernel/gdb-stub.c:584:
+	uint8_t res;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1037: FILE: arch/frv/kernel/gdb-stub.c:589:
+	asm volatile("	movgs	gr0,brr	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1038: FILE: arch/frv/kernel/gdb-stub.c:590:
+		     "	ldub%I2	%M2,%0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1039: FILE: arch/frv/kernel/gdb-stub.c:591:
+		     "	movsg	brr,%1	\n"

CHECK:SPACING: No space is necessary after a cast
#1041: FILE: arch/frv/kernel/gdb-stub.c:593:
+		     : "m"(*(uint8_t *) addr));

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1054: FILE: arch/frv/kernel/gdb-stub.c:606:
+	asm volatile("	movgs	gr0,brr	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1055: FILE: arch/frv/kernel/gdb-stub.c:607:
+		     "	stb%I2	%1,%M2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1056: FILE: arch/frv/kernel/gdb-stub.c:608:
+		     "	movsg	brr,%0	\n"

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: arch/frv/kernel/gdb-stub.c:610:
+		     : "r"(val), "m"(*(uint8_t *) addr));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1063: FILE: arch/frv/kernel/gdb-stub.c:615:
+static void __gdbstub_console_write(struct console *co, const char *p, unsigned n)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1089: FILE: arch/frv/kernel/gdb-stub.c:641:
+#if 0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1092: FILE: arch/frv/kernel/gdb-stub.c:644:
+	gdbstub_console_write(NULL,p,n);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1092: FILE: arch/frv/kernel/gdb-stub.c:644:
+	gdbstub_console_write(NULL,p,n);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1100: FILE: arch/frv/kernel/gdb-stub.c:652:
+	return MKDEV(1,3); /* /dev/null */
 	              ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1123: FILE: arch/frv/kernel/gdb-stub.c:675:
+	const uint8_t *mem = _mem;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1124: FILE: arch/frv/kernel/gdb-stub.c:676:
+	uint8_t ch[4] __attribute__((aligned(4)));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1124: FILE: arch/frv/kernel/gdb-stub.c:676:
+	uint8_t ch[4] __attribute__((aligned(4)));

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1126: FILE: arch/frv/kernel/gdb-stub.c:678:
+	if ((uint32_t)mem&1 && count>=1) {
 	                 ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1126: FILE: arch/frv/kernel/gdb-stub.c:678:
+	if ((uint32_t)mem&1 && count>=1) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1127: FILE: arch/frv/kernel/gdb-stub.c:679:
+		if (!gdbstub_read_byte(mem,ch))
 		                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1135: FILE: arch/frv/kernel/gdb-stub.c:687:
+	if ((uint32_t)mem&3 && count>=2) {
 	                 ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1135: FILE: arch/frv/kernel/gdb-stub.c:687:
+	if ((uint32_t)mem&3 && count>=2) {
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1136: FILE: arch/frv/kernel/gdb-stub.c:688:
+		if (!gdbstub_read_word(mem,(uint16_t *)ch))
 		                          ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1146: FILE: arch/frv/kernel/gdb-stub.c:698:
+	while (count>=4) {
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1147: FILE: arch/frv/kernel/gdb-stub.c:699:
+		if (!gdbstub_read_dword(mem,(uint32_t *)ch))
 		                           ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1161: FILE: arch/frv/kernel/gdb-stub.c:713:
+	if (count>=2) {
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1162: FILE: arch/frv/kernel/gdb-stub.c:714:
+		if (!gdbstub_read_word(mem,(uint16_t *)ch))
 		                          ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1172: FILE: arch/frv/kernel/gdb-stub.c:724:
+	if (count>=1) {
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1173: FILE: arch/frv/kernel/gdb-stub.c:725:
+		if (!gdbstub_read_byte(mem,ch))
 		                          ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1191: FILE: arch/frv/kernel/gdb-stub.c:743:
+	uint8_t *mem = _mem;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1193: FILE: arch/frv/kernel/gdb-stub.c:745:
+		uint32_t l;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1194: FILE: arch/frv/kernel/gdb-stub.c:746:
+		uint16_t w;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1195: FILE: arch/frv/kernel/gdb-stub.c:747:
+		uint8_t  b[4];

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1198: FILE: arch/frv/kernel/gdb-stub.c:750:
+	if ((u32)mem&1 && count>=1) {
 	            ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1198: FILE: arch/frv/kernel/gdb-stub.c:750:
+	if ((u32)mem&1 && count>=1) {
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1201: FILE: arch/frv/kernel/gdb-stub.c:753:
+		if (!gdbstub_write_byte(mem,ch.b[0]))
 		                           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1207: FILE: arch/frv/kernel/gdb-stub.c:759:
+	if ((u32)mem&3 && count>=2) {
 	            ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1207: FILE: arch/frv/kernel/gdb-stub.c:759:
+	if ((u32)mem&3 && count>=2) {
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1212: FILE: arch/frv/kernel/gdb-stub.c:764:
+		if (!gdbstub_write_word(mem,ch.w))
 		                           ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1218: FILE: arch/frv/kernel/gdb-stub.c:770:
+	while (count>=4) {
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1227: FILE: arch/frv/kernel/gdb-stub.c:779:
+		if (!gdbstub_write_dword(mem,ch.l))
 		                            ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1233: FILE: arch/frv/kernel/gdb-stub.c:785:
+	if (count>=2) {
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1238: FILE: arch/frv/kernel/gdb-stub.c:790:
+		if (!gdbstub_write_word(mem,ch.w))
 		                           ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1244: FILE: arch/frv/kernel/gdb-stub.c:796:
+	if (count>=1) {
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1247: FILE: arch/frv/kernel/gdb-stub.c:799:
+		if (!gdbstub_write_byte(mem,ch.b[0]))
 		                           ^

CHECK:SPACING: No space is necessary after a cast
#1251: FILE: arch/frv/kernel/gdb-stub.c:803:
+	return (char *) buf;

CHECK:CAMELCASE: Avoid CamelCase: <BRR_DBNEx>
#1279: FILE: arch/frv/kernel/gdb-stub.c:831:
+	{ BRR_DBNEx,	0,			SIGTRAP		},

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1318: FILE: arch/frv/kernel/gdb-stub.c:870:
+		uint8_t bytes[8];

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1326: FILE: arch/frv/kernel/gdb-stub.c:878:
+		if (addr & 3 || len > 7*4)
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1335: FILE: arch/frv/kernel/gdb-stub.c:887:
+		for (loop = 0; loop < len/4; loop++)
 		                         ^

CHECK:SPACING: No space is necessary after a cast
#1336: FILE: arch/frv/kernel/gdb-stub.c:888:
+			if (!gdbstub_read_dword(&((uint32_t *) addr)[loop],

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1340: FILE: arch/frv/kernel/gdb-stub.c:892:
+		for (loop = 0; loop < len/4; loop++)
 		                         ^

CHECK:SPACING: No space is necessary after a cast
#1341: FILE: arch/frv/kernel/gdb-stub.c:893:
+			if (!gdbstub_write_dword(&((uint32_t *) addr)[loop],

CHECK:SPACING: No space is necessary after a cast
#1346: FILE: arch/frv/kernel/gdb-stub.c:898:
+					gdbstub_write_dword(&((uint32_t *) addr)[xloop],

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1354: FILE: arch/frv/kernel/gdb-stub.c:906:
+#if 0

CHECK:SPACING: No space is necessary after a cast
#1361: FILE: arch/frv/kernel/gdb-stub.c:913:
+			       ((uint32_t *) addr)[0],

CHECK:SPACING: No space is necessary after a cast
#1362: FILE: arch/frv/kernel/gdb-stub.c:914:
+			       ((uint32_t *) addr)[1]

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1417: FILE: arch/frv/kernel/gdb-stub.c:969:
+		if (!(__debug_regs->dcr & (DCR_DRBE0|DCR_DWBE0))) {
 		                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1419: FILE: arch/frv/kernel/gdb-stub.c:971:
+			tmp = type==2 ? DCR_DWBE0 : type==3 ? DCR_DRBE0 : DCR_DRBE0|DCR_DWBE0;
 			          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1419: FILE: arch/frv/kernel/gdb-stub.c:971:
+			tmp = type==2 ? DCR_DWBE0 : type==3 ? DCR_DRBE0 : DCR_DRBE0|DCR_DWBE0;
 			                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1419: FILE: arch/frv/kernel/gdb-stub.c:971:
+			tmp = type==2 ? DCR_DWBE0 : type==3 ? DCR_DRBE0 : DCR_DRBE0|DCR_DWBE0;
 			                                                           ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1421: FILE: arch/frv/kernel/gdb-stub.c:973:
+			asm volatile("	movgs	%0,dbar0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1422: FILE: arch/frv/kernel/gdb-stub.c:974:
+				     "	movgs	%1,dbmr00	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1423: FILE: arch/frv/kernel/gdb-stub.c:975:
+				     "	movgs	%2,dbmr01	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1424: FILE: arch/frv/kernel/gdb-stub.c:976:
+				     "	movgs	gr0,dbdr00	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1425: FILE: arch/frv/kernel/gdb-stub.c:977:
+				     "	movgs	gr0,dbdr01	\n"

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1430: FILE: arch/frv/kernel/gdb-stub.c:982:
+		if (!(__debug_regs->dcr & (DCR_DRBE1|DCR_DWBE1))) {
 		                                    ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1432: FILE: arch/frv/kernel/gdb-stub.c:984:
+			tmp = type==2 ? DCR_DWBE1 : type==3 ? DCR_DRBE1 : DCR_DRBE1|DCR_DWBE1;
 			          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1432: FILE: arch/frv/kernel/gdb-stub.c:984:
+			tmp = type==2 ? DCR_DWBE1 : type==3 ? DCR_DRBE1 : DCR_DRBE1|DCR_DWBE1;
 			                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1432: FILE: arch/frv/kernel/gdb-stub.c:984:
+			tmp = type==2 ? DCR_DWBE1 : type==3 ? DCR_DRBE1 : DCR_DRBE1|DCR_DWBE1;
 			                                                           ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1434: FILE: arch/frv/kernel/gdb-stub.c:986:
+			asm volatile("	movgs	%0,dbar1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1435: FILE: arch/frv/kernel/gdb-stub.c:987:
+				     "	movgs	%1,dbmr10	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1436: FILE: arch/frv/kernel/gdb-stub.c:988:
+				     "	movgs	%2,dbmr11	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1437: FILE: arch/frv/kernel/gdb-stub.c:989:
+				     "	movgs	gr0,dbdr10	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1438: FILE: arch/frv/kernel/gdb-stub.c:990:
+				     "	movgs	gr0,dbdr11	\n"

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1464: FILE: arch/frv/kernel/gdb-stub.c:1016:
+		uint8_t bytes[8];

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1480: FILE: arch/frv/kernel/gdb-stub.c:1032:
+		for (loop = 0; loop < len/4; loop++)
 		                         ^

CHECK:SPACING: No space is necessary after a cast
#1481: FILE: arch/frv/kernel/gdb-stub.c:1033:
+			if (!gdbstub_write_dword(&((uint32_t *) addr)[loop],

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1491: FILE: arch/frv/kernel/gdb-stub.c:1043:
+#define __get_ibar(X) ({ unsigned long x; asm volatile("movsg ibar"#X",%0" : "=r"(x)); x; })

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1538: FILE: arch/frv/kernel/gdb-stub.c:1090:
+#define __get_dbar(X) ({ unsigned long x; asm volatile("movsg dbar"#X",%0" : "=r"(x)); x; })

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1539: FILE: arch/frv/kernel/gdb-stub.c:1091:
+#define __get_dbmr0(X) ({ unsigned long x; asm volatile("movsg dbmr"#X"0,%0" : "=r"(x)); x; })

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1540: FILE: arch/frv/kernel/gdb-stub.c:1092:
+#define __get_dbmr1(X) ({ unsigned long x; asm volatile("movsg dbmr"#X"1,%0" : "=r"(x)); x; })

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1543: FILE: arch/frv/kernel/gdb-stub.c:1095:
+		tmp = type==2 ? DCR_DWBE0 : type==3 ? DCR_DRBE0 : DCR_DRBE0|DCR_DWBE0;
 		          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1543: FILE: arch/frv/kernel/gdb-stub.c:1095:
+		tmp = type==2 ? DCR_DWBE0 : type==3 ? DCR_DRBE0 : DCR_DRBE0|DCR_DWBE0;
 		                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1543: FILE: arch/frv/kernel/gdb-stub.c:1095:
+		tmp = type==2 ? DCR_DWBE0 : type==3 ? DCR_DRBE0 : DCR_DRBE0|DCR_DWBE0;
 		                                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1545: FILE: arch/frv/kernel/gdb-stub.c:1097:
+		if ((__debug_regs->dcr & (DCR_DRBE0|DCR_DWBE0)) != tmp ||
 		                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1552: FILE: arch/frv/kernel/gdb-stub.c:1104:
+		__debug_regs->dcr &= ~(DCR_DRBE0|DCR_DWBE0);
 		                                ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1553: FILE: arch/frv/kernel/gdb-stub.c:1105:
+		asm volatile("	movgs	gr0,dbar0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1554: FILE: arch/frv/kernel/gdb-stub.c:1106:
+			     "	movgs	gr0,dbmr00	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1555: FILE: arch/frv/kernel/gdb-stub.c:1107:
+			     "	movgs	gr0,dbmr01	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1556: FILE: arch/frv/kernel/gdb-stub.c:1108:
+			     "	movgs	gr0,dbdr00	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1557: FILE: arch/frv/kernel/gdb-stub.c:1109:
+			     "	movgs	gr0,dbdr01	\n");

WARNING:INDENTED_LABEL: labels should not be indented
#1560: FILE: arch/frv/kernel/gdb-stub.c:1112:
+	skip_dbar0:

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1562: FILE: arch/frv/kernel/gdb-stub.c:1114:
+		tmp = type==2 ? DCR_DWBE1 : type==3 ? DCR_DRBE1 : DCR_DRBE1|DCR_DWBE1;
 		          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1562: FILE: arch/frv/kernel/gdb-stub.c:1114:
+		tmp = type==2 ? DCR_DWBE1 : type==3 ? DCR_DRBE1 : DCR_DRBE1|DCR_DWBE1;
 		                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1562: FILE: arch/frv/kernel/gdb-stub.c:1114:
+		tmp = type==2 ? DCR_DWBE1 : type==3 ? DCR_DRBE1 : DCR_DRBE1|DCR_DWBE1;
 		                                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1564: FILE: arch/frv/kernel/gdb-stub.c:1116:
+		if ((__debug_regs->dcr & (DCR_DRBE1|DCR_DWBE1)) != tmp ||
 		                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1571: FILE: arch/frv/kernel/gdb-stub.c:1123:
+		__debug_regs->dcr &= ~(DCR_DRBE1|DCR_DWBE1);
 		                                ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1572: FILE: arch/frv/kernel/gdb-stub.c:1124:
+		asm volatile("	movgs	gr0,dbar1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1573: FILE: arch/frv/kernel/gdb-stub.c:1125:
+			     "	movgs	gr0,dbmr10	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1574: FILE: arch/frv/kernel/gdb-stub.c:1126:
+			     "	movgs	gr0,dbmr11	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1575: FILE: arch/frv/kernel/gdb-stub.c:1127:
+			     "	movgs	gr0,dbdr10	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1576: FILE: arch/frv/kernel/gdb-stub.c:1128:
+			     "	movgs	gr0,dbdr11	\n");

WARNING:INDENTED_LABEL: labels should not be indented
#1579: FILE: arch/frv/kernel/gdb-stub.c:1131:
+	skip_dbar1:

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1610: FILE: arch/frv/kernel/gdb-stub.c:1162:
+static void __attribute__((unused)) gdbstub_show_regs(void)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1612: FILE: arch/frv/kernel/gdb-stub.c:1164:
+	uint32_t *reg;

CHECK:SPACING: No space is necessary after a cast
#1621: FILE: arch/frv/kernel/gdb-stub.c:1173:
+	reg = (uint32_t *) __debug_frame;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1623: FILE: arch/frv/kernel/gdb-stub.c:1175:
+		printk("%s %08x", regnames[loop + 0], reg[loop + 0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1626: FILE: arch/frv/kernel/gdb-stub.c:1178:
+			printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1628: FILE: arch/frv/kernel/gdb-stub.c:1180:
+			printk(" | ");

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1638: FILE: arch/frv/kernel/gdb-stub.c:1190:
+static void __attribute__((unused)) gdbstub_dump_debugregs(void)

ERROR:SPACING: space required before the open parenthesis '('
#1777: FILE: arch/frv/kernel/gdb-stub.c:1329:
+	} while(0);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1794: FILE: arch/frv/kernel/gdb-stub.c:1346:
+	uint32_t zero;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1811: FILE: arch/frv/kernel/gdb-stub.c:1363:
+#if 0

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gdbstub', this function's name, in a string
#1812: FILE: arch/frv/kernel/gdb-stub.c:1364:
+	gdbstub_printk("--> gdbstub() %08x %p %08x %08x\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#1826: FILE: arch/frv/kernel/gdb-stub.c:1378:
+	temp = (unsigned long) __entry_kerneltrap_table;

CHECK:SPACING: No space is necessary after a cast
#1827: FILE: arch/frv/kernel/gdb-stub.c:1379:
+	temp2 = (unsigned long) __entry_usertrap_table;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1855: FILE: arch/frv/kernel/gdb-stub.c:1407:
+		sigval = SIGXCPU;;

CHECK:SPACING: No space is necessary after a cast
#1867: FILE: arch/frv/kernel/gdb-stub.c:1419:
+	if (__debug_frame->pc == (unsigned long) gdbstub_console_write + 4) {

CHECK:SPACING: No space is necessary after a cast
#1868: FILE: arch/frv/kernel/gdb-stub.c:1420:
+		__gdbstub_console_write((struct console *) __debug_frame->gr8,

CHECK:SPACING: No space is necessary after a cast
#1869: FILE: arch/frv/kernel/gdb-stub.c:1421:
+					(const char *) __debug_frame->gr9,

CHECK:SPACING: No space is necessary after a cast
#1870: FILE: arch/frv/kernel/gdb-stub.c:1422:
+					(unsigned) __debug_frame->gr10);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1870: FILE: arch/frv/kernel/gdb-stub.c:1422:
+					(unsigned) __debug_frame->gr10);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1895: FILE: arch/frv/kernel/gdb-stub.c:1447:
+		ptr = mem2hex(title, ptr, sizeof(title) - 1,0);
 		                                           ^

CHECK:SPACING: No space is necessary after a cast
#2016: FILE: arch/frv/kernel/gdb-stub.c:1568:
+			temp = (unsigned long) __frame;

CHECK:SPACING: No space is necessary after a cast
#2023: FILE: arch/frv/kernel/gdb-stub.c:1575:
+			temp = (unsigned long) __debug_frame;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2046: FILE: arch/frv/kernel/gdb-stub.c:1598:
+			ptr = mem2hex(&__debug_regs->brr ,   ptr, 4, 0);
 			                                 ^

CHECK:SPACING: No space is necessary after a cast
#2101: FILE: arch/frv/kernel/gdb-stub.c:1653:
+			__frame = (struct pt_regs *) temp;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2124: FILE: arch/frv/kernel/gdb-stub.c:1676:
+			ptr = hex2mem(ptr, &__debug_frame->cccr,4);
 			                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2159: FILE: arch/frv/kernel/gdb-stub.c:1711:
+			gdbstub_strcpy(output_buffer,"OK");
 			                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2172: FILE: arch/frv/kernel/gdb-stub.c:1724:
+				gdbstub_strcpy (output_buffer, "E03");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2174: FILE: arch/frv/kernel/gdb-stub.c:1726:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#2174: FILE: arch/frv/kernel/gdb-stub.c:1726:
+			else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2175: FILE: arch/frv/kernel/gdb-stub.c:1727:
+				gdbstub_strcpy(output_buffer,"E01");
 				                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#2183: FILE: arch/frv/kernel/gdb-stub.c:1735:
+			if (hexToInt(&ptr, &addr) &&
[...]
+			else
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2188: FILE: arch/frv/kernel/gdb-stub.c:1740:
+				if (hex2mem(ptr, (char *)addr, length)) {
[...]
+				else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2191: FILE: arch/frv/kernel/gdb-stub.c:1743:
+				}
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#2191: FILE: arch/frv/kernel/gdb-stub.c:1743:
+				else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2195: FILE: arch/frv/kernel/gdb-stub.c:1747:
+			}
+			else

CHECK:SPACING: No space is necessary after a cast
#2251: FILE: arch/frv/kernel/gdb-stub.c:1803:
+				*(uint32_t *) &__break_user_context.f.accg[0] = temp;

CHECK:SPACING: No space is necessary after a cast
#2254: FILE: arch/frv/kernel/gdb-stub.c:1806:
+				*(uint32_t *) &__break_user_context.f.accg[4] = temp;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2270: FILE: arch/frv/kernel/gdb-stub.c:1822:
+			if (temp2) {
[...]
+			else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2273: FILE: arch/frv/kernel/gdb-stub.c:1825:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#2273: FILE: arch/frv/kernel/gdb-stub.c:1825:
+			else {

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2280: FILE: arch/frv/kernel/gdb-stub.c:1832:
+			/* try to read optional parameter, pc unchanged if no parm */
 			                                                      ^^^^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#2287: FILE: arch/frv/kernel/gdb-stub.c:1839:
+		case 'k' :
 		         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2290: FILE: arch/frv/kernel/gdb-stub.c:1842:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2295: FILE: arch/frv/kernel/gdb-stub.c:1847:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2305: FILE: arch/frv/kernel/gdb-stub.c:1857:
+				gdbstub_strcpy(output_buffer,"B01");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2320: FILE: arch/frv/kernel/gdb-stub.c:1872:
+			if (!hexToInt(&ptr,&temp) || *ptr++ != ',' ||
 			                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2320: FILE: arch/frv/kernel/gdb-stub.c:1872:
+			if (!hexToInt(&ptr,&temp) || *ptr++ != ',' ||
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2321: FILE: arch/frv/kernel/gdb-stub.c:1873:
+			    !hexToInt(&ptr,&addr) || *ptr++ != ',' ||
 			                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2321: FILE: arch/frv/kernel/gdb-stub.c:1873:
+			    !hexToInt(&ptr,&addr) || *ptr++ != ',' ||
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2322: FILE: arch/frv/kernel/gdb-stub.c:1874:
+			    !hexToInt(&ptr,&length)
 			                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2322: FILE: arch/frv/kernel/gdb-stub.c:1874:
+			    !hexToInt(&ptr,&length)
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2324: FILE: arch/frv/kernel/gdb-stub.c:1876:
+				gdbstub_strcpy(output_buffer,"E01");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2329: FILE: arch/frv/kernel/gdb-stub.c:1881:
+				gdbstub_strcpy(output_buffer,"E03");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2334: FILE: arch/frv/kernel/gdb-stub.c:1886:
+				gdbstub_strcpy(output_buffer,"E03");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2341: FILE: arch/frv/kernel/gdb-stub.c:1893:
+			gdbstub_strcpy(output_buffer,"OK");
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2348: FILE: arch/frv/kernel/gdb-stub.c:1900:
+			if (!hexToInt(&ptr,&temp) || *ptr++ != ',' ||
 			                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2348: FILE: arch/frv/kernel/gdb-stub.c:1900:
+			if (!hexToInt(&ptr,&temp) || *ptr++ != ',' ||
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2349: FILE: arch/frv/kernel/gdb-stub.c:1901:
+			    !hexToInt(&ptr,&addr) || *ptr++ != ',' ||
 			                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2349: FILE: arch/frv/kernel/gdb-stub.c:1901:
+			    !hexToInt(&ptr,&addr) || *ptr++ != ',' ||
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#2350: FILE: arch/frv/kernel/gdb-stub.c:1902:
+			    !hexToInt(&ptr,&length)
 			                  ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#2350: FILE: arch/frv/kernel/gdb-stub.c:1902:
+			    !hexToInt(&ptr,&length)
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2352: FILE: arch/frv/kernel/gdb-stub.c:1904:
+				gdbstub_strcpy(output_buffer,"E01");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2357: FILE: arch/frv/kernel/gdb-stub.c:1909:
+				gdbstub_strcpy(output_buffer,"E03");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2362: FILE: arch/frv/kernel/gdb-stub.c:1914:
+				gdbstub_strcpy(output_buffer,"E03");
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2369: FILE: arch/frv/kernel/gdb-stub.c:1921:
+			gdbstub_strcpy(output_buffer,"OK");
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2373: FILE: arch/frv/kernel/gdb-stub.c:1925:
+			gdbstub_proto("### GDB Unsupported Cmd '%s'\n",input_buffer);
 			                                              ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2442: FILE: arch/frv/kernel/gdb-stub.c:1994:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2459: FILE: arch/frv/kernel/gdb-stub.c:2011:
+#if defined (CONFIG_GDBSTUB_CONSOLE) && !defined(CONFIG_GDBSTUB_IMMEDIATE)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2462: FILE: arch/frv/kernel/gdb-stub.c:2014:
+	printk("registering console\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#2467: FILE: arch/frv/kernel/gdb-stub.c:2019:
+__initcall(gdbstub_postinit);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2480: FILE: arch/frv/kernel/gdb-stub.c:2032:
+	sprintf(output_buffer,"W%02x",status&0xff);
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2480: FILE: arch/frv/kernel/gdb-stub.c:2032:
+	sprintf(output_buffer,"W%02x",status&0xff);
 	                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2480: FILE: arch/frv/kernel/gdb-stub.c:2032:
+	sprintf(output_buffer,"W%02x",status&0xff);
 	                                    ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#2507: FILE: arch/frv/kernel/gdb-stub.c:2059:
+static void *malloc(size_t size) __attribute__((unused));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#2513: FILE: arch/frv/kernel/gdb-stub.c:2065:
+static void free(void *p) __attribute__((unused));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#2519: FILE: arch/frv/kernel/gdb-stub.c:2071:
+static uint32_t ___get_HSR0(void) __attribute__((unused));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#2525: FILE: arch/frv/kernel/gdb-stub.c:2077:
+static uint32_t ___set_HSR0(uint32_t x) __attribute__((unused));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2556: FILE: arch/frv/kernel/head.inc:22:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2578: FILE: arch/frv/kernel/head.inc:44:
+#endif^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2589: FILE: arch/frv/kernel/head-mmu-fr451.S:1:
+/* head-mmu-fr451.S: FR451 mmu-linux specific bits of initialisation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2874: FILE: arch/frv/kernel/head-mmu-fr451.S:286:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2952: FILE: arch/frv/kernel/head-mmu-fr451.S:364:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2967: FILE: arch/frv/kernel/head.S:1:
+/* head.S: kernel entry point for FR-V kernel

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232856.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 106 errors, 167 warnings, 106 checks, 3539 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232856.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
