WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
 lib/radix-tree.c           |  101 ++++++++++++++++++++++++++++++++++++++++++++-

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#46: FILE: lib/radix-tree.c:46:
+#define RADIX_TREE_MAX_PATH (RADIX_TREE_INDEX_BITS/RADIX_TREE_MAP_SHIFT + 2)
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#59: FILE: lib/radix-tree.c:226:
+__lookup(struct radix_tree_root *root, void **results, unsigned long index,
+	unsigned int max_items, unsigned long *next_index,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#69: FILE: lib/radix-tree.c:236:
+	shift = (height-1) * RADIX_TREE_MAP_SHIFT;
 	               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: lib/radix-tree.c:241:
+		unsigned long i = (index >> shift) & RADIX_TREE_MAP_MASK;
+		for ( ; i < RADIX_TREE_MAP_SIZE; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "slot->slots[i]"
#75: FILE: lib/radix-tree.c:242:
+			if (slot->slots[i] != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#88: FILE: lib/radix-tree.c:255:
+			BUG_ON((shift + RADIX_TREE_MAP_SHIFT) != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: lib/radix-tree.c:256:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: lib/radix-tree.c:272:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#106: FILE: lib/radix-tree.c:273:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#107: FILE: lib/radix-tree.c:274:
+}
+/**

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: lib/radix-tree.c:289:
+radix_tree_gang_lookup(struct radix_tree_root *root, void **results,
+			unsigned long first_index, unsigned int max_items)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root->rnode"
#128: FILE: lib/radix-tree.c:295:
+	if (root->rnode == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: lib/radix-tree.c:311:
+		nr_found = __lookup(root, results + ret, cur_index,
+				max_items - ret, &next_index, max_index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: include/linux/radix-tree.h:50:
+radix_tree_gang_lookup(struct radix_tree_root *root, void **results,
+			unsigned long first_index, unsigned int max_items);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: fs/inode.c:153:
+		BUG_ON(inode->i_data.page_tree.rnode != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "inode->i_data.page_tree.rnode"
#188: FILE: fs/inode.c:153:
+		BUG_ON(inode->i_data.page_tree.rnode != NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 11 checks, 143 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
