WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#918: FILE: arch/powerpc/platforms/85xx/Kconfig:14:
+config MPC85xx_CDS
+	bool "Freescale MPC85xx CDS"
+	select DEFAULT_UIMAGE
+	select PPC_I8259 if PCI
+	help
+	  This option enables support for the MPC85xx CDS board
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#951: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#982: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:32:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#984: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:34:
+#include <asm/atomic.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#986: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:36:
+#include <asm/io.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1003: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:53:
+unsigned long isa_io_base = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1004: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:54:
+unsigned long isa_mem_base = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1008: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:58:
+static volatile u8 *cadmus;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1042: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:92:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1052: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:102:
+	if (!hose->index)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1063: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:113:
+			 * interrupt on slot */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1083: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:133:
+		return PCI_IRQ_TABLE_LOOKUP;
+	} else {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1086: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:136:
+		char pci_irq_table[][4] =
+		{

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1089: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:139:
+			 * going to PIRQA - PIRQD */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1102: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:152:
+extern int mpc85xx_pci2_busno;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus == 1'
#1113: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:163:
+	if ((bus == 1) && (PCI_SLOT(devfn) == ARCADIA_2ND_BRIDGE_IDSEL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus == 0'
#1115: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:165:
+	if ((bus == 0) && (PCI_SLOT(devfn) == ARCADIA_2ND_BRIDGE_IDSEL))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1127: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:177:
+	if ((dev = pci_get_device(PCI_VENDOR_ID_VIA,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1128: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:178:
+	if ((dev = pci_get_device(PCI_VENDOR_ID_VIA,
+					PCI_DEVICE_ID_VIA_82C586_1, NULL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1150: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:200:
+	if ((dev = pci_get_device(PCI_VENDOR_ID_VIA,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1151: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:201:
+	if ((dev = pci_get_device(PCI_VENDOR_ID_VIA,
+					PCI_DEVICE_ID_VIA_82C586_2, NULL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1157: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:207:
+	if ((dev = pci_get_device(PCI_VENDOR_ID_VIA,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1158: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:208:
+	if ((dev = pci_get_device(PCI_VENDOR_ID_VIA,
+					PCI_DEVICE_ID_VIA_82C586_2, dev))) {

CHECK:CAMELCASE: Avoid CamelCase: <OpenPIC_PAddr>
#1169: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:219:
+	phys_addr_t OpenPIC_PAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1175: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:225:
+	mpic1 = mpic_alloc(OpenPIC_PAddr,
+			MPIC_PRIMARY | MPIC_WANTS_RESET | MPIC_BIG_ENDIAN,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1179: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:229:
+	BUG_ON(mpic1 == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpic1"
#1179: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:229:
+	BUG_ON(mpic1 == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1205: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:255:
+	i8259_init(0,0);
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1209: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:259:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mpc85xx_cds_setup_arch', this function's name, in a string
#1222: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:272:
+		ppc_md.progress("mpc85xx_cds_setup_arch()", 0);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1241: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:291:
+		char buf[40];
+		snprintf(buf, 40, "CDS Version = 0x%x in slot %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1242: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:292:
+		snprintf(buf, 40, "CDS Version = 0x%x in slot %d\n",
+				cadmus[CM_VER], cds_pci_slot);

ERROR:SPACING: exactly one space required after that #ifdef
#1256: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:306:
+#ifdef  CONFIG_ROOT_NFS

CHECK:CAMELCASE: Avoid CamelCase: <Root_NFS>
#1257: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:307:
+	ROOT_DEV = Root_NFS;

CHECK:CAMELCASE: Avoid CamelCase: <Root_HDA1>
#1259: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:309:
+	ROOT_DEV = Root_HDA1;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1263: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:313:
+
+

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1273: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:323:
+	seq_printf(m, "Vendor\t\t: Freescale Semiconductor\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1286: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.c:336:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1316: FILE: arch/powerpc/platforms/85xx/mpc85xx_cds.h:1:
+/*

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 13 warnings, 18 checks, 1296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
