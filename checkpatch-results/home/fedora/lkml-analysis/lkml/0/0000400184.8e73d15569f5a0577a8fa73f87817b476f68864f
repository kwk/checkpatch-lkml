WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
diff -ur linux-2.5.56_original/drivers/block/DAC960.c linux-2.5.56_DAC/drivers/block/DAC960.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: drivers/block/DAC960.c:270:
+        Command->cmd_sglist = Command->V1.ScatterList;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: drivers/block/DAC960.c:270:
+        Command->cmd_sglist = Command->V1.ScatterList;$

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#41: FILE: drivers/block/DAC960.c:270:
+        Command->cmd_sglist = Command->V1.ScatterList;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ScatterList>
#41: FILE: drivers/block/DAC960.c:270:
+        Command->cmd_sglist = Command->V1.ScatterList;

ERROR:CODE_INDENT: code indent should use tabs where possible
#46: FILE: drivers/block/DAC960.c:275:
+        Command->cmd_sglist = Command->V2.ScatterList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: drivers/block/DAC960.c:275:
+        Command->cmd_sglist = Command->V2.ScatterList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/block/DAC960.c:3054:
+  if (Command->SegmentCount == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#71: FILE: drivers/block/DAC960.c:3054:
+  if (Command->SegmentCount == 1)
     {

CHECK:CAMELCASE: Avoid CamelCase: <SegmentCount>
#71: FILE: drivers/block/DAC960.c:3054:
+  if (Command->SegmentCount == 1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/block/DAC960.c:3056:
+      if (Command->DmaDirection == PCI_DMA_FROMDEVICE)$

CHECK:CAMELCASE: Avoid CamelCase: <DmaDirection>
#74: FILE: drivers/block/DAC960.c:3056:
+      if (Command->DmaDirection == PCI_DMA_FROMDEVICE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/block/DAC960.c:3071:
+      if (Command->DmaDirection == PCI_DMA_FROMDEVICE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/block/DAC960.c:3081:
+      CommandMailbox->Type5.ScatterGatherCount = Command->SegmentCount;$

CHECK:CAMELCASE: Avoid CamelCase: <CommandMailbox>
#92: FILE: drivers/block/DAC960.c:3081:
+      CommandMailbox->Type5.ScatterGatherCount = Command->SegmentCount;

CHECK:CAMELCASE: Avoid CamelCase: <Type5>
#92: FILE: drivers/block/DAC960.c:3081:
+      CommandMailbox->Type5.ScatterGatherCount = Command->SegmentCount;

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherCount>
#92: FILE: drivers/block/DAC960.c:3081:
+      CommandMailbox->Type5.ScatterGatherCount = Command->SegmentCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/block/DAC960.c:3083:
+      for (i = 0; i < Command->SegmentCount; i++, ScatterList++, ScatterGatherList++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#95: FILE: drivers/block/DAC960.c:3083:
+      for (i = 0; i < Command->SegmentCount; i++, ScatterList++, ScatterGatherList++) {
 		ScatterGatherList->SegmentDataPointer =

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherList>
#95: FILE: drivers/block/DAC960.c:3083:
+      for (i = 0; i < Command->SegmentCount; i++, ScatterList++, ScatterGatherList++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/block/DAC960.c:3109:
+    (Command->DmaDirection == PCI_DMA_FROMDEVICE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/block/DAC960.c:3118:
+    (Command->DmaDirection == PCI_DMA_FROMDEVICE ? 0x28 : 0x2A);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/block/DAC960.c:3126:
+  if (Command->SegmentCount == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#140: FILE: drivers/block/DAC960.c:3126:
+  if (Command->SegmentCount == 1)
     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/block/DAC960.c:3142:
+      if (Command->SegmentCount > 2)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#149: FILE: drivers/block/DAC960.c:3142:
+      if (Command->SegmentCount > 2)
 	{

CHECK:CAMELCASE: Avoid CamelCase: <ExtendedScatterGather>
#156: FILE: drivers/block/DAC960.c:3148:
+		.ExtendedScatterGather.ScatterGatherList0Length = Command->SegmentCount;

CHECK:CAMELCASE: Avoid CamelCase: <ScatterGatherList0Length>
#156: FILE: drivers/block/DAC960.c:3148:
+		.ExtendedScatterGather.ScatterGatherList0Length = Command->SegmentCount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/block/DAC960.c:3157:
+      for (i = 0; i < Command->SegmentCount; i++, ScatterList++, ScatterGatherList++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#165: FILE: drivers/block/DAC960.c:3157:
+      for (i = 0; i < Command->SegmentCount; i++, ScatterList++, ScatterGatherList++) {
 		ScatterGatherList->SegmentDataPointer =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/block/DAC960.c:3199:
+  if (rq_data_dir(Request) == READ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#174: FILE: drivers/block/DAC960.c:3199:
+  if (rq_data_dir(Request) == READ) {
+    Command->DmaDirection = PCI_DMA_FROMDEVICE;

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#174: FILE: drivers/block/DAC960.c:3199:
+  if (rq_data_dir(Request) == READ) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/block/DAC960.c:3200:
+    Command->DmaDirection = PCI_DMA_FROMDEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/block/DAC960.c:3202:
+  } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#178: FILE: drivers/block/DAC960.c:3202:
+  } else {
+    Command->DmaDirection = PCI_DMA_TODEVICE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/block/DAC960.c:3203:
+    Command->DmaDirection = PCI_DMA_TODEVICE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/block/DAC960.c:3205:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/block/DAC960.c:3212:
+  Command->SegmentCount = blk_rq_map_sg(&Controller->RequestQueue,$

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#188: FILE: drivers/block/DAC960.c:3212:
+  Command->SegmentCount = blk_rq_map_sg(&Controller->RequestQueue,

CHECK:CAMELCASE: Avoid CamelCase: <RequestQueue>
#188: FILE: drivers/block/DAC960.c:3212:
+  Command->SegmentCount = blk_rq_map_sg(&Controller->RequestQueue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/block/DAC960.c:3213:
+  Command->SegmentCount = blk_rq_map_sg(&Controller->RequestQueue,
+		  Command->Request, Command->cmd_sglist);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/block/DAC960.c:3215:
+  Command->SegmentCount = pci_map_sg(Command->PciDevice, Command->cmd_sglist,$

CHECK:CAMELCASE: Avoid CamelCase: <PciDevice>
#191: FILE: drivers/block/DAC960.c:3215:
+  Command->SegmentCount = pci_map_sg(Command->PciDevice, Command->cmd_sglist,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/block/DAC960.c:3216:
+  Command->SegmentCount = pci_map_sg(Command->PciDevice, Command->cmd_sglist,
+		 Command->SegmentCount, Command->DmaDirection);

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/block/DAC960.c:3229:
+  ^Ithere is no failure mode from trying to allocate a command.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: drivers/block/DAC960.c:3229:
+  ^Ithere is no failure mode from trying to allocate a command.$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Command_T>
#208: FILE: drivers/block/DAC960.c:3232:
+static void DAC960_queue_partial_rw(DAC960_Command_T *Command)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/block/DAC960.c:3234:
+  DAC960_Controller_T *Controller = Command->Controller;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Controller_T>
#210: FILE: drivers/block/DAC960.c:3234:
+  DAC960_Controller_T *Controller = Command->Controller;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/block/DAC960.c:3235:
+  IO_Request_T *Request = Command->Request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/block/DAC960.c:3237:
+  if (Command->DmaDirection == PCI_DMA_FROMDEVICE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#213: FILE: drivers/block/DAC960.c:3237:
+  if (Command->DmaDirection == PCI_DMA_FROMDEVICE)
+    Command->CommandType = DAC960_ReadRetryCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/block/DAC960.c:3238:
+    Command->CommandType = DAC960_ReadRetryCommand;$

CHECK:CAMELCASE: Avoid CamelCase: <CommandType>
#214: FILE: drivers/block/DAC960.c:3238:
+    Command->CommandType = DAC960_ReadRetryCommand;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ReadRetryCommand>
#214: FILE: drivers/block/DAC960.c:3238:
+    Command->CommandType = DAC960_ReadRetryCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/block/DAC960.c:3239:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#215: FILE: drivers/block/DAC960.c:3239:
+  else
+    Command->CommandType = DAC960_WriteRetryCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/block/DAC960.c:3240:
+    Command->CommandType = DAC960_WriteRetryCommand;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_WriteRetryCommand>
#216: FILE: drivers/block/DAC960.c:3240:
+    Command->CommandType = DAC960_WriteRetryCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/block/DAC960.c:3242:
+  (void)blk_rq_map_sg(&Controller->RequestQueue, Command->Request,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/block/DAC960.c:3243:
+                                        Command->cmd_sglist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/block/DAC960.c:3243:
+                                        Command->cmd_sglist);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/block/DAC960.c:3249:
+  (void)pci_map_sg(Command->PciDevice, Command->cmd_sglist, 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: drivers/block/DAC960.c:3250:
+^I^I                        Command->DmaDirection);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/block/DAC960.c:3251:
+  Command->SegmentCount = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/block/DAC960.c:3252:
+  Command->BlockNumber = Request->sector;$

CHECK:CAMELCASE: Avoid CamelCase: <BlockNumber>
#228: FILE: drivers/block/DAC960.c:3252:
+  Command->BlockNumber = Request->sector;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/block/DAC960.c:3253:
+  Command->BlockCount = Request->bio->bi_size >> 9;$

CHECK:CAMELCASE: Avoid CamelCase: <BlockCount>
#229: FILE: drivers/block/DAC960.c:3253:
+  Command->BlockCount = Request->bio->bi_size >> 9;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/block/DAC960.c:3254:
+  DAC960_QueueReadWriteCommand(Command);$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_QueueReadWriteCommand>
#230: FILE: drivers/block/DAC960.c:3254:
+  DAC960_QueueReadWriteCommand(Command);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/block/DAC960.c:3255:
+  return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: drivers/block/DAC960.c:3258:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_ProcessCompletedRequest>
#244: FILE: drivers/block/DAC960.c:3300:
+static inline boolean DAC960_ProcessCompletedRequest(DAC960_Command_T *Command,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/block/DAC960.c:3301:
+static inline boolean DAC960_ProcessCompletedRequest(DAC960_Command_T *Command,
 						 boolean SuccessfulIO)

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#250: FILE: drivers/block/DAC960.c:3304:
+	int UpToDate;
 	    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <UpToDate>
#250: FILE: drivers/block/DAC960.c:3304:
+	int UpToDate;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/block/DAC960.c:3311:
+	pci_unmap_sg(Command->PciDevice, Command->cmd_sglist,
+		Command->SegmentCount, Command->DmaDirection);

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#284: FILE: drivers/block/DAC960.c:3313:
+	 if (!end_that_request_first(Request, UpToDate, Command->BlockCount)) {
 	                                      ^^^^^^^^

WARNING:TABSTOP: Statements should start on a tabstop
#284: FILE: drivers/block/DAC960.c:3313:
+	 if (!end_that_request_first(Request, UpToDate, Command->BlockCount)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#285: FILE: drivers/block/DAC960.c:3314:
+	 if (!end_that_request_first(Request, UpToDate, Command->BlockCount)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/block/DAC960.c:3315:
+ ^I ^Iend_that_request_last(Request);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: drivers/block/DAC960.c:3315:
+ ^I ^Iend_that_request_last(Request);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/block/DAC960.c:3315:
+ ^I ^Iend_that_request_last(Request);$

CHECK:CAMELCASE: Avoid CamelCase: <Completion>
#288: FILE: drivers/block/DAC960.c:3317:
+		if (Command->Completion) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#299: FILE: drivers/block/DAC960.c:3392:
   if (CommandType == DAC960_ReadCommand ||
[...]
+#ifdef FORCE_RETRY_DEBUG

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/block/DAC960.c:3397:
+      CommandStatus = DAC960_V1_IrrecoverableDataError;$

CHECK:CAMELCASE: Avoid CamelCase: <CommandStatus>
#306: FILE: drivers/block/DAC960.c:3397:
+      CommandStatus = DAC960_V1_IrrecoverableDataError;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_IrrecoverableDataError>
#306: FILE: drivers/block/DAC960.c:3397:
+      CommandStatus = DAC960_V1_IrrecoverableDataError;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/block/DAC960.c:3400:
+      if (CommandStatus == DAC960_V1_NormalCompletion) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#309: FILE: drivers/block/DAC960.c:3400:
+      if (CommandStatus == DAC960_V1_NormalCompletion) {
[...]
+		if (!DAC960_ProcessCompletedRequest(Command, true))

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_NormalCompletion>
#309: FILE: drivers/block/DAC960.c:3400:
+      if (CommandStatus == DAC960_V1_NormalCompletion) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#313: FILE: drivers/block/DAC960.c:3403:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/block/DAC960.c:3405:
+      } else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 11)
#315: FILE: drivers/block/DAC960.c:3405:
+      } else if (CommandStatus == DAC960_V1_IrrecoverableDataError ||
[...]
 	   */

WARNING:TABSTOP: Statements should start on a tabstop
#338: FILE: drivers/block/DAC960.c:3413:
+	   return;

WARNING:TABSTOP: Statements should start on a tabstop
#346: FILE: drivers/block/DAC960.c:3420:
+	 if (!DAC960_ProcessCompletedRequest(Command, false))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#347: FILE: drivers/block/DAC960.c:3421:
+		BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/block/DAC960.c:3427:
+      boolean normal_completion;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/block/DAC960.c:3429:
+      static int retry_count = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: drivers/block/DAC960.c:3432:
+        Perform completion processing for the portion that was$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#362: FILE: drivers/block/DAC960.c:3432:
+      /*
+        Perform completion processing for the portion that was

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: drivers/block/DAC960.c:3433:
+        retried, and submit the next portion, if any.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/block/DAC960.c:3435:
+      normal_completion = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/block/DAC960.c:3436:
+      if (CommandStatus != DAC960_V1_NormalCompletion) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/block/DAC960.c:3437:
+        normal_completion = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/block/DAC960.c:3437:
+        normal_completion = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: drivers/block/DAC960.c:3438:
+        if (CommandStatus != DAC960_V1_LogicalDriveNonexistentOrOffline)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/block/DAC960.c:3438:
+        if (CommandStatus != DAC960_V1_LogicalDriveNonexistentOrOffline)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#368: FILE: drivers/block/DAC960.c:3438:
+        if (CommandStatus != DAC960_V1_LogicalDriveNonexistentOrOffline)
+            DAC960_V1_ReadWriteError(Command);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_LogicalDriveNonexistentOrOffline>
#368: FILE: drivers/block/DAC960.c:3438:
+        if (CommandStatus != DAC960_V1_LogicalDriveNonexistentOrOffline)

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: drivers/block/DAC960.c:3439:
+            DAC960_V1_ReadWriteError(Command);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/block/DAC960.c:3439:
+            DAC960_V1_ReadWriteError(Command);$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_ReadWriteError>
#369: FILE: drivers/block/DAC960.c:3439:
+            DAC960_V1_ReadWriteError(Command);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/block/DAC960.c:3440:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/block/DAC960.c:3443:
+      if (!(++retry_count % 10000)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 14)
#373: FILE: drivers/block/DAC960.c:3443:
+      if (!(++retry_count % 10000)) {
+	      printk("V1 error retry failure test\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#374: FILE: drivers/block/DAC960.c:3444:
+	      printk("V1 error retry failure test\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/block/DAC960.c:3446:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/block/DAC960.c:3449:
+      if (!DAC960_ProcessCompletedRequest(Command, normal_completion)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/block/DAC960.c:3450:
+        DAC960_queue_partial_rw(Command);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/block/DAC960.c:3450:
+        DAC960_queue_partial_rw(Command);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/block/DAC960.c:3451:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/block/DAC960.c:3451:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/block/DAC960.c:3452:
+      }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#387: FILE: drivers/block/DAC960.c:4477:
   if (CommandType == DAC960_ReadCommand ||
[...]
+#ifdef FORCE_RETRY_DEBUG

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/block/DAC960.c:4482:
+      CommandStatus = DAC960_V2_AbormalCompletion;$

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_AbormalCompletion>
#394: FILE: drivers/block/DAC960.c:4482:
+      CommandStatus = DAC960_V2_AbormalCompletion;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/block/DAC960.c:4484:
+      Command->V2.RequestSense->SenseKey = DAC960_SenseKey_MediumError;$

CHECK:CAMELCASE: Avoid CamelCase: <RequestSense>
#396: FILE: drivers/block/DAC960.c:4484:
+      Command->V2.RequestSense->SenseKey = DAC960_SenseKey_MediumError;

CHECK:CAMELCASE: Avoid CamelCase: <SenseKey>
#396: FILE: drivers/block/DAC960.c:4484:
+      Command->V2.RequestSense->SenseKey = DAC960_SenseKey_MediumError;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SenseKey_MediumError>
#396: FILE: drivers/block/DAC960.c:4484:
+      Command->V2.RequestSense->SenseKey = DAC960_SenseKey_MediumError;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/block/DAC960.c:4486:
+      if (CommandStatus == DAC960_V2_NormalCompletion) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#398: FILE: drivers/block/DAC960.c:4486:
+      if (CommandStatus == DAC960_V2_NormalCompletion) {
[...]
+		if (!DAC960_ProcessCompletedRequest(Command, true))

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_NormalCompletion>
#398: FILE: drivers/block/DAC960.c:4486:
+      if (CommandStatus == DAC960_V2_NormalCompletion) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#399: FILE: drivers/block/DAC960.c:4487:
+      if (CommandStatus == DAC960_V2_NormalCompletion) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#401: FILE: drivers/block/DAC960.c:4489:
+			BUG();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/block/DAC960.c:4491:
+      } else if (Command->V2.RequestSense->SenseKey == DAC960_SenseKey_MediumError)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 11)
#404: FILE: drivers/block/DAC960.c:4491:
+      } else if (Command->V2.RequestSense->SenseKey == DAC960_SenseKey_MediumError)
[...]
 	   */

WARNING:TABSTOP: Statements should start on a tabstop
#420: FILE: drivers/block/DAC960.c:4498:
+	   return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/block/DAC960.c:4507:
+          (void)DAC960_ProcessCompletedRequest(Command, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/block/DAC960.c:4507:
+          (void)DAC960_ProcessCompletedRequest(Command, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/block/DAC960.c:4513:
+      boolean normal_completion;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/block/DAC960.c:4516:
+      static int retry_count = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: drivers/block/DAC960.c:4519:
+        Perform completion processing for the portion that was$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#442: FILE: drivers/block/DAC960.c:4519:
+      /*
+        Perform completion processing for the portion that was

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/block/DAC960.c:4522:
+      normal_completion = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/block/DAC960.c:4523:
+      if (CommandStatus != DAC960_V2_NormalCompletion) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#448: FILE: drivers/block/DAC960.c:4525:
+	if (Command->V2.RequestSense->SenseKey != DAC960_SenseKey_NotReady)
+	    DAC960_V2_ReadWriteError(Command);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SenseKey_NotReady>
#448: FILE: drivers/block/DAC960.c:4525:
+	if (Command->V2.RequestSense->SenseKey != DAC960_SenseKey_NotReady)

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_ReadWriteError>
#449: FILE: drivers/block/DAC960.c:4526:
+	    DAC960_V2_ReadWriteError(Command);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/block/DAC960.c:4527:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/block/DAC960.c:4530:
+      if (!(++retry_count % 10000)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 14)
#453: FILE: drivers/block/DAC960.c:4530:
+      if (!(++retry_count % 10000)) {
+	      printk("V2 error retry failure test\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#454: FILE: drivers/block/DAC960.c:4531:
+	      printk("V2 error retry failure test\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/block/DAC960.c:4533:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/block/DAC960.c:4536:
+      if (!DAC960_ProcessCompletedRequest(Command, normal_completion)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 16)
#459: FILE: drivers/block/DAC960.c:4536:
+      if (!DAC960_ProcessCompletedRequest(Command, normal_completion)) {
+		DAC960_queue_partial_rw(Command);

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/block/DAC960.c:4538:
+        ^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#461: FILE: drivers/block/DAC960.c:4538:
+        ^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/block/DAC960.c:4538:
+        ^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/block/DAC960.c:4539:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/block/DAC960.h:2308:
+  int^IDmaDirection;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/block/DAC960.h:2309:
+  struct scatterlist *cmd_sglist;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 105 warnings, 44 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000400184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
