WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -uNr --exclude=Makefile linux-2.4.20/include/linux/netfilter_ipv4/ipt_quota.h linux-2.4.20-2/include/linux/netfilter_ipv4/ipt_quota.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: include/linux/netfilter_ipv4/ipt_quota.h:1:
+#ifndef _IPT_QUOTA_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: include/linux/netfilter_ipv4/ipt_quota.h:15:
+  u_int32_t conn_index;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#59: FILE: include/linux/netfilter_ipv4/ipt_quota.h:15:
+  u_int32_t conn_index;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: include/linux/netfilter_ipv4/ipt_quota.h:16:
+  u_int64_t quota;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#60: FILE: include/linux/netfilter_ipv4/ipt_quota.h:16:
+  u_int64_t quota;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/linux/netfilter_ipv4/ipt_quota.h:17:
+  struct ipquota_list *next;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#65: FILE: include/linux/netfilter_ipv4/ipt_quota.h:21:
+struct ipt_quota_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: include/linux/netfilter_ipv4/ipt_quota.h:22:
+  u_int64_t quota;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#66: FILE: include/linux/netfilter_ipv4/ipt_quota.h:22:
+  u_int64_t quota;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: include/linux/netfilter_ipv4/ipt_quota.h:23:
+  int mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: include/linux/netfilter_ipv4/ipt_quota.h:24:
+  int invert;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: include/linux/netfilter_ipv4/ipt_quota.h:25:
+  struct ipquota_list *quota_hash[QUOTA_HASH_SIZE];$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#72: FILE: include/linux/netfilter_ipv4/ipt_quota.h:28:
+#define QUOTA_INDEX(skb, info) (q->mode == CONNQUOTA ? (skb->nh.iph->saddr + \
+	  skb->nh.iph->daddr + \
+	  skb->h.th->source +  \
+	  skb->h.th->dest +  \
+	  skb->nh.iph->protocol) : \
+	  (skb->nh.iph->saddr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#72: FILE: include/linux/netfilter_ipv4/ipt_quota.h:28:
+#define QUOTA_INDEX(skb, info) (q->mode == CONNQUOTA ? (skb->nh.iph->saddr + \
+	  skb->nh.iph->daddr + \
+	  skb->h.th->source +  \
+	  skb->h.th->dest +  \
+	  skb->nh.iph->protocol) : \
+	  (skb->nh.iph->saddr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'conn_index' may be better as '(conn_index)' to avoid precedence issues
#79: FILE: include/linux/netfilter_ipv4/ipt_quota.h:35:
+#define QUOTA_KEY(conn_index) (conn_index % QUOTA_HASH_SIZE)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: net/ipv4/netfilter/ipt_quota.c:1:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#127: FILE: net/ipv4/netfilter/ipt_quota.c:1:
+/* 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: net/ipv4/netfilter/ipt_quota.c:19:
+MODULE_LICENSE ("GPL");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: net/ipv4/netfilter/ipt_quota.c:24:
+quota_hash_get (struct ipquota_list **hash, u_int32_t conn_index,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: net/ipv4/netfilter/ipt_quota.c:25:
+		u_int64_t * quota)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#153: FILE: net/ipv4/netfilter/ipt_quota.c:27:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: net/ipv4/netfilter/ipt_quota.c:28:
+  struct ipquota_list *node = hash[QUOTA_KEY (conn_index)];$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: net/ipv4/netfilter/ipt_quota.c:28:
+  struct ipquota_list *node = hash[QUOTA_KEY (conn_index)];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: net/ipv4/netfilter/ipt_quota.c:30:
+  while (node != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#156: FILE: net/ipv4/netfilter/ipt_quota.c:30:
+  while (node != NULL)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#156: FILE: net/ipv4/netfilter/ipt_quota.c:30:
+  while (node != NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#156: FILE: net/ipv4/netfilter/ipt_quota.c:30:
+  while (node != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: net/ipv4/netfilter/ipt_quota.c:31:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: net/ipv4/netfilter/ipt_quota.c:32:
+      if (node->conn_index == conn_index)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#158: FILE: net/ipv4/netfilter/ipt_quota.c:32:
+      if (node->conn_index == conn_index)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#158: FILE: net/ipv4/netfilter/ipt_quota.c:32:
+      if (node->conn_index == conn_index)
+	{

WARNING:TABSTOP: Statements should start on a tabstop
#161: FILE: net/ipv4/netfilter/ipt_quota.c:35:
+	  return (0);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#161: FILE: net/ipv4/netfilter/ipt_quota.c:35:
+	  return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: net/ipv4/netfilter/ipt_quota.c:37:
+      node = node->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: net/ipv4/netfilter/ipt_quota.c:38:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: net/ipv4/netfilter/ipt_quota.c:40:
+  return (-1);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#168: FILE: net/ipv4/netfilter/ipt_quota.c:42:
+
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#171: FILE: net/ipv4/netfilter/ipt_quota.c:45:
+quota_hash_sum (struct ipquota_list **hash, u_int32_t conn_index,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#174: FILE: net/ipv4/netfilter/ipt_quota.c:48:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: net/ipv4/netfilter/ipt_quota.c:49:
+  struct ipquota_list$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: net/ipv4/netfilter/ipt_quota.c:50:
+    *node = hash[QUOTA_KEY (conn_index)], *tmp = hash[QUOTA_KEY (conn_index)];$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: net/ipv4/netfilter/ipt_quota.c:50:
+    *node = hash[QUOTA_KEY (conn_index)], *tmp = hash[QUOTA_KEY (conn_index)];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: net/ipv4/netfilter/ipt_quota.c:50:
+    *node = hash[QUOTA_KEY (conn_index)], *tmp = hash[QUOTA_KEY (conn_index)];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: net/ipv4/netfilter/ipt_quota.c:52:
+  while (tmp != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#178: FILE: net/ipv4/netfilter/ipt_quota.c:52:
+  while (tmp != NULL)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#178: FILE: net/ipv4/netfilter/ipt_quota.c:52:
+  while (tmp != NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp"
#178: FILE: net/ipv4/netfilter/ipt_quota.c:52:
+  while (tmp != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: net/ipv4/netfilter/ipt_quota.c:53:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: net/ipv4/netfilter/ipt_quota.c:54:
+      if (tmp->conn_index == conn_index)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#180: FILE: net/ipv4/netfilter/ipt_quota.c:54:
+      if (tmp->conn_index == conn_index)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#180: FILE: net/ipv4/netfilter/ipt_quota.c:54:
+      if (tmp->conn_index == conn_index)
+	{

WARNING:TABSTOP: Statements should start on a tabstop
#183: FILE: net/ipv4/netfilter/ipt_quota.c:57:
+	  return (0);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#183: FILE: net/ipv4/netfilter/ipt_quota.c:57:
+	  return (0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: net/ipv4/netfilter/ipt_quota.c:59:
+      tmp = tmp->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: net/ipv4/netfilter/ipt_quota.c:60:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: net/ipv4/netfilter/ipt_quota.c:62:
+  tmp = kmalloc (sizeof (struct ipquota_list), GFP_KERNEL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: net/ipv4/netfilter/ipt_quota.c:62:
+  tmp = kmalloc (sizeof (struct ipquota_list), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: net/ipv4/netfilter/ipt_quota.c:62:
+  tmp = kmalloc (sizeof (struct ipquota_list), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*tmp)...) over kmalloc(sizeof (struct ipquota_list)...)
#188: FILE: net/ipv4/netfilter/ipt_quota.c:62:
+  tmp = kmalloc (sizeof (struct ipquota_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: net/ipv4/netfilter/ipt_quota.c:63:
+  if (!tmp)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#189: FILE: net/ipv4/netfilter/ipt_quota.c:63:
+  if (!tmp)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#189: FILE: net/ipv4/netfilter/ipt_quota.c:63:
+  if (!tmp)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: net/ipv4/netfilter/ipt_quota.c:64:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: net/ipv4/netfilter/ipt_quota.c:65:
+      printk ("quota_hash_sum()->kmalloc fail");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#191: FILE: net/ipv4/netfilter/ipt_quota.c:65:
+      printk ("quota_hash_sum()->kmalloc fail");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: net/ipv4/netfilter/ipt_quota.c:65:
+      printk ("quota_hash_sum()->kmalloc fail");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: net/ipv4/netfilter/ipt_quota.c:66:
+      return (-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: net/ipv4/netfilter/ipt_quota.c:67:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: net/ipv4/netfilter/ipt_quota.c:69:
+  tmp->conn_index = conn_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: net/ipv4/netfilter/ipt_quota.c:70:
+  tmp->quota = datalen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: net/ipv4/netfilter/ipt_quota.c:71:
+  tmp->next = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: net/ipv4/netfilter/ipt_quota.c:73:
+  if (node == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#199: FILE: net/ipv4/netfilter/ipt_quota.c:73:
+  if (node == NULL)
+    hash[QUOTA_KEY (conn_index)] = tmp;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
#199: FILE: net/ipv4/netfilter/ipt_quota.c:73:
+  if (node == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: net/ipv4/netfilter/ipt_quota.c:74:
+    hash[QUOTA_KEY (conn_index)] = tmp;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: net/ipv4/netfilter/ipt_quota.c:74:
+    hash[QUOTA_KEY (conn_index)] = tmp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: net/ipv4/netfilter/ipt_quota.c:75:
+  else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: net/ipv4/netfilter/ipt_quota.c:75:
+  else
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#201: FILE: net/ipv4/netfilter/ipt_quota.c:75:
+  else
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: net/ipv4/netfilter/ipt_quota.c:76:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: net/ipv4/netfilter/ipt_quota.c:77:
+      while (node->next != NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node->next"
#203: FILE: net/ipv4/netfilter/ipt_quota.c:77:
+      while (node->next != NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: net/ipv4/netfilter/ipt_quota.c:79:
+      node->next = tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: net/ipv4/netfilter/ipt_quota.c:80:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: net/ipv4/netfilter/ipt_quota.c:82:
+  return (0);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#210: FILE: net/ipv4/netfilter/ipt_quota.c:84:
+
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: net/ipv4/netfilter/ipt_quota.c:87:
+quota_hash_reset (struct ipquota_list **hash, u_int32_t conn_index)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#215: FILE: net/ipv4/netfilter/ipt_quota.c:89:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: net/ipv4/netfilter/ipt_quota.c:90:
+  struct ipquota_list *node = hash[QUOTA_KEY (conn_index)];$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: net/ipv4/netfilter/ipt_quota.c:90:
+  struct ipquota_list *node = hash[QUOTA_KEY (conn_index)];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: net/ipv4/netfilter/ipt_quota.c:92:
+  while (node)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#218: FILE: net/ipv4/netfilter/ipt_quota.c:92:
+  while (node)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#218: FILE: net/ipv4/netfilter/ipt_quota.c:92:
+  while (node)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: net/ipv4/netfilter/ipt_quota.c:93:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: net/ipv4/netfilter/ipt_quota.c:94:
+      if (node->conn_index == conn_index)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#220: FILE: net/ipv4/netfilter/ipt_quota.c:94:
+      if (node->conn_index == conn_index)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#220: FILE: net/ipv4/netfilter/ipt_quota.c:94:
+      if (node->conn_index == conn_index)
+	{

WARNING:TABSTOP: Statements should start on a tabstop
#223: FILE: net/ipv4/netfilter/ipt_quota.c:97:
+	  return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: net/ipv4/netfilter/ipt_quota.c:99:
+      node = node->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: net/ipv4/netfilter/ipt_quota.c:100:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: net/ipv4/netfilter/ipt_quota.c:102:
+  return (-1);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#230: FILE: net/ipv4/netfilter/ipt_quota.c:104:
+
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#233: FILE: net/ipv4/netfilter/ipt_quota.c:107:
+match (const struct sk_buff *skb,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: net/ipv4/netfilter/ipt_quota.c:108:
+       const struct net_device *in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: net/ipv4/netfilter/ipt_quota.c:109:
+       const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: net/ipv4/netfilter/ipt_quota.c:110:
+       const void *matchinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: net/ipv4/netfilter/ipt_quota.c:111:
+       int offset, const void *hdr, u_int16_t datalen, int *hotdrop)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#239: FILE: net/ipv4/netfilter/ipt_quota.c:113:
+{
+

CHECK:SPACING: No space is necessary after a cast
#240: FILE: net/ipv4/netfilter/ipt_quota.c:114:
+  struct ipt_quota_info *q = (struct ipt_quota_info *) matchinfo;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: net/ipv4/netfilter/ipt_quota.c:114:
+  struct ipt_quota_info *q = (struct ipt_quota_info *) matchinfo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: net/ipv4/netfilter/ipt_quota.c:115:
+  u_int64_t quota = 0;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#241: FILE: net/ipv4/netfilter/ipt_quota.c:115:
+  u_int64_t quota = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: net/ipv4/netfilter/ipt_quota.c:117:
+  spin_lock_bh (&quota_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: net/ipv4/netfilter/ipt_quota.c:117:
+  spin_lock_bh (&quota_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: net/ipv4/netfilter/ipt_quota.c:119:
+  if (q->mode == QUOTA)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#245: FILE: net/ipv4/netfilter/ipt_quota.c:119:
+  if (q->mode == QUOTA)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#245: FILE: net/ipv4/netfilter/ipt_quota.c:119:
+  if (q->mode == QUOTA)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: net/ipv4/netfilter/ipt_quota.c:120:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: net/ipv4/netfilter/ipt_quota.c:121:
+      if (q->quota >= datalen)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#247: FILE: net/ipv4/netfilter/ipt_quota.c:121:
+      if (q->quota >= datalen)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#247: FILE: net/ipv4/netfilter/ipt_quota.c:121:
+      if (q->quota >= datalen)
[...]
+	     d this one */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#250: FILE: net/ipv4/netfilter/ipt_quota.c:124:
+	  /* we can affor
+	     d this one */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#250: FILE: net/ipv4/netfilter/ipt_quota.c:124:
+	     d this one */

WARNING:TABSTOP: Statements should start on a tabstop
#252: FILE: net/ipv4/netfilter/ipt_quota.c:126:
+	  goto quota;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: net/ipv4/netfilter/ipt_quota.c:129:
+      q->quota = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: net/ipv4/netfilter/ipt_quota.c:130:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: net/ipv4/netfilter/ipt_quota.c:131:
+  else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#257: FILE: net/ipv4/netfilter/ipt_quota.c:131:
+  else
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#257: FILE: net/ipv4/netfilter/ipt_quota.c:131:
+  else
[...]
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: net/ipv4/netfilter/ipt_quota.c:132:
+    {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#259: FILE: net/ipv4/netfilter/ipt_quota.c:133:
+    {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: net/ipv4/netfilter/ipt_quota.c:134:
+      if (quota_hash_get (q->quota_hash, QUOTA_INDEX (skb, q), &quota) < 0$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#260: FILE: net/ipv4/netfilter/ipt_quota.c:134:
+      if (quota_hash_get (q->quota_hash, QUOTA_INDEX (skb, q), &quota) < 0
+	  || quota < q->quota)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#260: FILE: net/ipv4/netfilter/ipt_quota.c:134:
+      if (quota_hash_get (q->quota_hash, QUOTA_INDEX (skb, q), &quota) < 0
[...]
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: net/ipv4/netfilter/ipt_quota.c:134:
+      if (quota_hash_get (q->quota_hash, QUOTA_INDEX (skb, q), &quota) < 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: net/ipv4/netfilter/ipt_quota.c:134:
+      if (quota_hash_get (q->quota_hash, QUOTA_INDEX (skb, q), &quota) < 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#261: FILE: net/ipv4/netfilter/ipt_quota.c:135:
+      if (quota_hash_get (q->quota_hash, QUOTA_INDEX (skb, q), &quota) < 0
+	  || quota < q->quota)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#263: FILE: net/ipv4/netfilter/ipt_quota.c:137:
+	{
+

WARNING:TABSTOP: Statements should start on a tabstop
#264: FILE: net/ipv4/netfilter/ipt_quota.c:138:
+	  if (quota_hash_sum (q->quota_hash, QUOTA_INDEX (skb, q), datalen)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#264: FILE: net/ipv4/netfilter/ipt_quota.c:138:
+	  if (quota_hash_sum (q->quota_hash, QUOTA_INDEX (skb, q), datalen)
+	      < 0)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#264: FILE: net/ipv4/netfilter/ipt_quota.c:138:
+	  if (quota_hash_sum (q->quota_hash, QUOTA_INDEX (skb, q), datalen)
[...]
+	    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: net/ipv4/netfilter/ipt_quota.c:138:
+	  if (quota_hash_sum (q->quota_hash, QUOTA_INDEX (skb, q), datalen)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: net/ipv4/netfilter/ipt_quota.c:138:
+	  if (quota_hash_sum (q->quota_hash, QUOTA_INDEX (skb, q), datalen)

WARNING:TABSTOP: Statements should start on a tabstop
#266: FILE: net/ipv4/netfilter/ipt_quota.c:140:
+	    {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: net/ipv4/netfilter/ipt_quota.c:141:
+	      printk ("quota_hash_sum() error");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: net/ipv4/netfilter/ipt_quota.c:141:
+	      printk ("quota_hash_sum() error");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: net/ipv4/netfilter/ipt_quota.c:142:
+	      spin_unlock_bh (&quota_lock);

WARNING:TABSTOP: Statements should start on a tabstop
#269: FILE: net/ipv4/netfilter/ipt_quota.c:143:
+	      return 0;

WARNING:TABSTOP: Statements should start on a tabstop
#270: FILE: net/ipv4/netfilter/ipt_quota.c:144:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#271: FILE: net/ipv4/netfilter/ipt_quota.c:145:
+	  goto quota;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: net/ipv4/netfilter/ipt_quota.c:147:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: net/ipv4/netfilter/ipt_quota.c:149:
+  if (q->mode == CONNQUOTA)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#275: FILE: net/ipv4/netfilter/ipt_quota.c:149:
+  if (q->mode == CONNQUOTA)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#275: FILE: net/ipv4/netfilter/ipt_quota.c:149:
+  if (q->mode == CONNQUOTA)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: net/ipv4/netfilter/ipt_quota.c:150:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: net/ipv4/netfilter/ipt_quota.c:151:
+      enum ip_conntrack_info ct_state;$

CHECK:SPACING: No space is necessary after a cast
#279: FILE: net/ipv4/netfilter/ipt_quota.c:153:
+      ip_conntrack_get ((struct sk_buff *) skb, &ct_state);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: net/ipv4/netfilter/ipt_quota.c:153:
+      ip_conntrack_get ((struct sk_buff *) skb, &ct_state);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: net/ipv4/netfilter/ipt_quota.c:153:
+      ip_conntrack_get ((struct sk_buff *) skb, &ct_state);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: net/ipv4/netfilter/ipt_quota.c:154:
+      if (ct_state == IP_CT_NEW)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#280: FILE: net/ipv4/netfilter/ipt_quota.c:154:
+      if (ct_state == IP_CT_NEW)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#280: FILE: net/ipv4/netfilter/ipt_quota.c:154:
+      if (ct_state == IP_CT_NEW)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: net/ipv4/netfilter/ipt_quota.c:156:
+	  quota_hash_reset (q->quota_hash, QUOTA_INDEX (skb, q));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: net/ipv4/netfilter/ipt_quota.c:156:
+	  quota_hash_reset (q->quota_hash, QUOTA_INDEX (skb, q));

WARNING:TABSTOP: Statements should start on a tabstop
#283: FILE: net/ipv4/netfilter/ipt_quota.c:157:
+	  goto quota;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: net/ipv4/netfilter/ipt_quota.c:159:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: net/ipv4/netfilter/ipt_quota.c:162:
+  printk ("IPT Quota Failed: max=%llu\n", q->quota);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#288: FILE: net/ipv4/netfilter/ipt_quota.c:162:
+  printk ("IPT Quota Failed: max=%llu\n", q->quota);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: net/ipv4/netfilter/ipt_quota.c:162:
+  printk ("IPT Quota Failed: max=%llu\n", q->quota);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: net/ipv4/netfilter/ipt_quota.c:165:
+  spin_unlock_bh (&quota_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: net/ipv4/netfilter/ipt_quota.c:165:
+  spin_unlock_bh (&quota_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: net/ipv4/netfilter/ipt_quota.c:166:
+  if (q->invert == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#292: FILE: net/ipv4/netfilter/ipt_quota.c:166:
+  if (q->invert == 1)
+    return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: net/ipv4/netfilter/ipt_quota.c:167:
+    return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: net/ipv4/netfilter/ipt_quota.c:168:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: net/ipv4/netfilter/ipt_quota.c:171:
+  spin_unlock_bh (&quota_lock);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: net/ipv4/netfilter/ipt_quota.c:171:
+  spin_unlock_bh (&quota_lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: net/ipv4/netfilter/ipt_quota.c:173:
+  printk ("IPT Quota OK: %llu datlen %d \n", q->quota, datalen);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#299: FILE: net/ipv4/netfilter/ipt_quota.c:173:
+  printk ("IPT Quota OK: %llu datlen %d \n", q->quota, datalen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#299: FILE: net/ipv4/netfilter/ipt_quota.c:173:
+  printk ("IPT Quota OK: %llu datlen %d \n", q->quota, datalen);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#299: FILE: net/ipv4/netfilter/ipt_quota.c:173:
+  printk ("IPT Quota OK: %llu datlen %d \n", q->quota, datalen);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: net/ipv4/netfilter/ipt_quota.c:175:
+  if (q->invert == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#301: FILE: net/ipv4/netfilter/ipt_quota.c:175:
+  if (q->invert == 1)
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: net/ipv4/netfilter/ipt_quota.c:176:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: net/ipv4/netfilter/ipt_quota.c:177:
+  return 1;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#305: FILE: net/ipv4/netfilter/ipt_quota.c:179:
+
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: net/ipv4/netfilter/ipt_quota.c:182:
+checkentry (const char *tablename,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: net/ipv4/netfilter/ipt_quota.c:187:
+  if (matchsize != IPT_ALIGN (sizeof (struct ipt_quota_info)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#313: FILE: net/ipv4/netfilter/ipt_quota.c:187:
+  if (matchsize != IPT_ALIGN (sizeof (struct ipt_quota_info)))
+    return 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: net/ipv4/netfilter/ipt_quota.c:187:
+  if (matchsize != IPT_ALIGN (sizeof (struct ipt_quota_info)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: net/ipv4/netfilter/ipt_quota.c:187:
+  if (matchsize != IPT_ALIGN (sizeof (struct ipt_quota_info)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: net/ipv4/netfilter/ipt_quota.c:188:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: net/ipv4/netfilter/ipt_quota.c:190:
+  return 1;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: net/ipv4/netfilter/ipt_quota.c:194:
+destroy (void *matchinfo, unsigned int size)

CHECK:SPACING: No space is necessary after a cast
#322: FILE: net/ipv4/netfilter/ipt_quota.c:196:
+  struct ipt_quota_info *q = (struct ipt_quota_info *) matchinfo;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: net/ipv4/netfilter/ipt_quota.c:196:
+  struct ipt_quota_info *q = (struct ipt_quota_info *) matchinfo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: net/ipv4/netfilter/ipt_quota.c:198:
+  int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: net/ipv4/netfilter/ipt_quota.c:200:
+  for (i = 0; i < QUOTA_HASH_SIZE; i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#326: FILE: net/ipv4/netfilter/ipt_quota.c:200:
+  for (i = 0; i < QUOTA_HASH_SIZE; i++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#326: FILE: net/ipv4/netfilter/ipt_quota.c:200:
+  for (i = 0; i < QUOTA_HASH_SIZE; i++)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: net/ipv4/netfilter/ipt_quota.c:201:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: net/ipv4/netfilter/ipt_quota.c:202:
+      if (q->quota_hash[i])$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#328: FILE: net/ipv4/netfilter/ipt_quota.c:202:
+      if (q->quota_hash[i])
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#328: FILE: net/ipv4/netfilter/ipt_quota.c:202:
+      if (q->quota_hash[i])
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: net/ipv4/netfilter/ipt_quota.c:205:
+	  struct ipquota_list *tmp1, *tmp2;
+	  tmp1 = q->quota_hash[i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#333: FILE: net/ipv4/netfilter/ipt_quota.c:207:
+	  while (tmp1)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#333: FILE: net/ipv4/netfilter/ipt_quota.c:207:
+	  while (tmp1)
+	    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#333: FILE: net/ipv4/netfilter/ipt_quota.c:207:
+	  while (tmp1)
+	    {

WARNING:TABSTOP: Statements should start on a tabstop
#334: FILE: net/ipv4/netfilter/ipt_quota.c:208:
+	    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: net/ipv4/netfilter/ipt_quota.c:211:
+	      kfree (tmp2);

WARNING:TABSTOP: Statements should start on a tabstop
#338: FILE: net/ipv4/netfilter/ipt_quota.c:212:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: net/ipv4/netfilter/ipt_quota.c:215:
+    }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#341: FILE: net/ipv4/netfilter/ipt_quota.c:215:
+
+    }

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#345: FILE: net/ipv4/netfilter/ipt_quota.c:219:
+static struct ipt_match quota_match
+  = { {NULL, NULL}, "quota", &match, &checkentry, &destroy, THIS_MODULE };

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: net/ipv4/netfilter/ipt_quota.c:219:
+  = { {NULL, NULL}, "quota", &match, &checkentry, &destroy, THIS_MODULE };$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: net/ipv4/netfilter/ipt_quota.c:222:
+init (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: net/ipv4/netfilter/ipt_quota.c:224:
+  return ipt_register_match (&quota_match);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#350: FILE: net/ipv4/netfilter/ipt_quota.c:224:
+  return ipt_register_match (&quota_match);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#354: FILE: net/ipv4/netfilter/ipt_quota.c:228:
+fini (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: net/ipv4/netfilter/ipt_quota.c:230:
+  ipt_unregister_match (&quota_match);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#356: FILE: net/ipv4/netfilter/ipt_quota.c:230:
+  ipt_unregister_match (&quota_match);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: net/ipv4/netfilter/ipt_quota.c:233:
+module_init (init);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#360: FILE: net/ipv4/netfilter/ipt_quota.c:234:
+module_exit (fini);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: net/ipv4/netfilter/ipt_quota.c~:1:
+/* $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 173 warnings, 28 checks, 549 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379448.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
