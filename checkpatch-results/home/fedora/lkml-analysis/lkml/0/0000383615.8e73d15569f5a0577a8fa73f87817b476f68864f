ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#30: 
--- a/fs/devfs/util.c	Sat Mar 22 15:40:42 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#45: FILE: fs/devfs/util.c:271:
+struct unique_numspace
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: fs/devfs/util.c:272:
+    spinlock_t init_lock;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#46: FILE: fs/devfs/util.c:272:
+    spinlock_t init_lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: fs/devfs/util.c:273:
+    unsigned char sem_initialised;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: fs/devfs/util.c:274:
+    unsigned int num_free;          /*  Num free in bits       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: fs/devfs/util.c:275:
+    unsigned int length;            /*  Array length in bytes  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: fs/devfs/util.c:276:
+    unsigned long *bits;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: fs/devfs/util.c:277:
+    struct semaphore semaphore;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#77: FILE: fs/devfs/util.c:369:
+		pos = devfs_generate_path(dir, dirname + 3, sizeof dirname-3);
 		                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof dirname should be sizeof(dirname)
#77: FILE: fs/devfs/util.c:369:
+		pos = devfs_generate_path(dir, dirname + 3, sizeof dirname-3);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: fs/devfs/util.c:380:
+	dev->number = devfs_alloc_unique_number (&disc_numspace);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: fs/devfs/util.c:384:
+	dev->disk_de = devfs_register(dir, "disc", 0,
+			    dev->major, dev->first_minor,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#93: FILE: fs/devfs/util.c:385:
+			    S_IFBLK | S_IRUSR | S_IWUSR, dev->fops, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: fs/devfs/util.c:399:
+		dev->disk_de = devfs_register(dev->de, "cd", DEVFS_FL_DEFAULT,
+				     dev->major, dev->first_minor,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#108: FILE: fs/devfs/util.c:400:
+				     S_IFBLK | S_IRUGO | S_IWUGO,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#111: FILE: fs/devfs/util.c:403:
+		pos = devfs_generate_path(dev->disk_de, rname+3, sizeof(rname)-3);
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#111: FILE: fs/devfs/util.c:403:
+		pos = devfs_generate_path(dev->disk_de, rname+3, sizeof(rname)-3);
 		                                                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#117: FILE: fs/devfs/util.c:409:
+		dev->disk_de = devfs_register (NULL, vname, DEVFS_FL_DEFAULT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: fs/devfs/util.c:410:
+		dev->disk_de = devfs_register (NULL, vname, DEVFS_FL_DEFAULT,
+				    dev->major, dev->first_minor,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#119: FILE: fs/devfs/util.c:411:
+				    S_IFBLK | S_IRUGO | S_IWUGO,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/devfs_fs_kernel.h:39:
+extern void devfs_create_partitions(struct gendisk *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#283: FILE: include/linux/devfs_fs_kernel.h:40:
+extern void devfs_create_cdrom(struct gendisk *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: include/linux/devfs_fs_kernel.h:41:
+extern void devfs_remove_partitions(struct gendisk *dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#304: FILE: include/linux/devfs_fs_kernel.h:81:
 }
+static inline void devfs_create_partitions(struct gendisk *dev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#310: FILE: include/linux/devfs_fs_kernel.h:84:
 }
+extern void devfs_create_cdrom(struct gendisk *dev)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/linux/devfs_fs_kernel.h:84:
+extern void devfs_create_cdrom(struct gendisk *dev)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#313: FILE: include/linux/devfs_fs_kernel.h:87:
+}
+extern void devfs_remove_partitions(struct gendisk *dev)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: include/linux/devfs_fs_kernel.h:87:
+extern void devfs_remove_partitions(struct gendisk *dev)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 15 checks, 273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000383615.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
