WARNING:TYPO_SPELLING: 'seperation' may be misspelled - perhaps 'separation'?
#29: 
the seperation.
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#112: FILE: fs/ext2/balloc.c:587:
+	return ext2_test_bit ((block - le32_to_cpu(EXT2_SB(sb)->s_es->s_first_data_block)) %

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: fs/ext2/ialloc.c:233:
+	struct ext2_super_block * es = EXT2_SB(sb)->s_es;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#253: FILE: fs/ext2/ialloc.c:491:
+	struct ext2_super_block * es = EXT2_SB(sb)->s_es;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#356: FILE: fs/ext2/super.c:140:
+			brelse (sbi->s_group_desc[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: fs/ext2/super.c:144:
+			brelse (sbi->s_inode_bitmap[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#368: FILE: fs/ext2/super.c:147:
+			brelse (sbi->s_block_bitmap[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: fs/ext2/super.c:148:
+	brelse (sbi->s_sbh);

CHECK:SPACING: No space is necessary after a cast
#426: FILE: fs/ext2/super.c:398:
+			gdp = (struct ext2_group_desc *) sbi->s_group_desc[desc_block++]->b_data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#443: FILE: fs/ext2/super.c:455:
+	struct ext2_sb_info * sbi;

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: fs/ext2/super.c:590:
+^I^I^I^I        sbi->s_inodes_per_block;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: fs/ext2/super.c:649:
+	sbi->s_group_desc = kmalloc (db_count * sizeof (struct buffer_head *), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: fs/ext2/super.c:649:
+	sbi->s_group_desc = kmalloc (db_count * sizeof (struct buffer_head *), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#610: FILE: fs/ext2/super.c:649:
+	sbi->s_group_desc = kmalloc (db_count * sizeof (struct buffer_head *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sbi->s_group_desc"
#611: FILE: fs/ext2/super.c:650:
+	if (sbi->s_group_desc == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#623: FILE: fs/ext2/super.c:658:
+				brelse (sbi->s_group_desc[j]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#686: FILE: fs/ext2/super.c:754:
+	struct ext2_sb_info * sbi = EXT2_SB(sb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: fs/intermezzo/journal_ext2.c:30:
+        unsigned long freebl = le32_to_cpu(EXT2_SB(sb)->s_es->s_free_blocks_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: fs/intermezzo/journal_ext2.c:30:
+        unsigned long freebl = le32_to_cpu(EXT2_SB(sb)->s_es->s_free_blocks_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: fs/intermezzo/journal_ext2.c:31:
+        unsigned long avail =   freebl - le32_to_cpu(EXT2_SB(sb)->s_es->s_r_blocks_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: fs/intermezzo/journal_ext2.c:31:
+        unsigned long avail =   freebl - le32_to_cpu(EXT2_SB(sb)->s_es->s_r_blocks_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: fs/intermezzo/journal_ext2.c:44:
+        avail_kmlblocks = EXT2_SB(inode->i_sb)->s_es->s_free_blocks_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: fs/intermezzo/journal_ext2.c:44:
+        avail_kmlblocks = EXT2_SB(inode->i_sb)->s_es->s_free_blocks_count;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#825: FILE: include/linux/ext2_fs.h:81:
+ * macros from user land. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*sbi)...) over kmalloc(sizeof(struct ext2_super_block)...)
#921: FILE: fs/ext2/super.c:468:
+	sbi = kmalloc(sizeof(struct ext2_super_block), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 14 warnings, 3 checks, 864 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000470395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
