WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
diff -ruN -X../cludes linux-2.5.67-moo.orig/arch/v850/kernel/entry.S linux-2.5.67-moo/arch/v850/kernel/entry.S

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#193: FILE: arch/v850/kernel/entry.S:198:
+   from the the stack.  */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#739: FILE: arch/v850/kernel/ptrace.c:33:
+static v850_reg_t *reg_save_addr (unsigned reg_offs, struct task_struct *t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#739: FILE: arch/v850/kernel/ptrace.c:33:
+static v850_reg_t *reg_save_addr (unsigned reg_offs, struct task_struct *t)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#744: FILE: arch/v850/kernel/ptrace.c:38:
+	/* Three basic cases:
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#759: FILE: arch/v850/kernel/ptrace.c:53:
+	       context switch state.  */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#763: FILE: arch/v850/kernel/ptrace.c:57:
+		regs = thread_saved_regs (t);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#766: FILE: arch/v850/kernel/ptrace.c:60:
+		regs = task_regs (t);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#772: FILE: arch/v850/kernel/ptrace.c:66:
+/* Set the bits SET and clear the bits CLEAR in the v850e DIR
+   (`debug information register').  Returns the new value of DIR.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#772: FILE: arch/v850/kernel/ptrace.c:66:
+   (`debug information register').  Returns the new value of DIR.  */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#773: FILE: arch/v850/kernel/ptrace.c:67:
+static inline v850_reg_t set_dir (v850_reg_t set, v850_reg_t clear)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#780: FILE: arch/v850/kernel/ptrace.c:74:
+	/* The dbtrap handler has exactly this functionality when called
+	   from kernel mode.  0xf840 is a `dbtrap' insn.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#780: FILE: arch/v850/kernel/ptrace.c:74:
+	   from kernel mode.  0xf840 is a `dbtrap' insn.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#787: FILE: arch/v850/kernel/ptrace.c:81:
+/* Makes sure hardware single-stepping is (globally) enabled.
+   Returns true if successful.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#787: FILE: arch/v850/kernel/ptrace.c:81:
+   Returns true if successful.  */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#788: FILE: arch/v850/kernel/ptrace.c:82:
+static inline int enable_single_stepping (void)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#790: FILE: arch/v850/kernel/ptrace.c:84:
+	static int enabled = 0;	/* Remember whether we already did it.  */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#791: FILE: arch/v850/kernel/ptrace.c:85:
+	static int enabled = 0;	/* Remember whether we already did it.  */
+	if (! enabled) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#791: FILE: arch/v850/kernel/ptrace.c:85:
+	if (! enabled) {
 	    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#793: FILE: arch/v850/kernel/ptrace.c:87:
+		/* Turn on the SE (`single-step enable') bit, 0x100, in the
+		   DIR (`debug information register').  This may fail if a

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#797: FILE: arch/v850/kernel/ptrace.c:91:
+		   shouldn't cause any problem.  */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#798: FILE: arch/v850/kernel/ptrace.c:92:
+		v850_reg_t dir = set_dir (0x100, 0x40);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#807: FILE: arch/v850/kernel/ptrace.c:101:
+static int set_single_step (struct task_struct *t, int val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#810: FILE: arch/v850/kernel/ptrace.c:104:
+	v850_reg_t *psw_addr = reg_save_addr(PT_PSW, t);
+	if (val) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#810: FILE: arch/v850/kernel/ptrace.c:104:
+	if (val) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#812: FILE: arch/v850/kernel/ptrace.c:106:
+		if (! enable_single_stepping ())

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#812: FILE: arch/v850/kernel/ptrace.c:106:
+		if (! enable_single_stepping ())
 		    ^

CHECK:BRACES: Unbalanced braces around else statement
#816: FILE: arch/v850/kernel/ptrace.c:110:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#892: FILE: arch/v850/kernel/ptrace.c:185:
+		if (addr >= PT_SIZE && request == PTRACE_PEEKUSR) {
[...]
+		} else if (addr >= 0 && addr < PT_SIZE && (addr & 0x3) == 0) {
[...]
+		} else
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#894: FILE: arch/v850/kernel/ptrace.c:187:
+			/* Special requests that don't actually correspond
+			   to offsets in struct pt_regs.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#894: FILE: arch/v850/kernel/ptrace.c:187:
+			   to offsets in struct pt_regs.  */

WARNING:LINE_SPACING: Missing a blank line after declarations
#906: FILE: arch/v850/kernel/ptrace.c:199:
+			v850_reg_t *reg_addr = reg_save_addr(addr, child);
+			if (request == PTRACE_PEEKUSR)

CHECK:BRACES: Unbalanced braces around else statement
#910: FILE: arch/v850/kernel/ptrace.c:203:
+		} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#914: FILE: arch/v850/kernel/ptrace.c:207:
+			rval = put_user (val, (unsigned long *)data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#930: FILE: arch/v850/kernel/ptrace.c:221:
+		if (! set_single_step (child, request == PTRACE_SINGLESTEP))

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#930: FILE: arch/v850/kernel/ptrace.c:221:
+		if (! set_single_step (child, request == PTRACE_SINGLESTEP))
 		    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#955: FILE: arch/v850/kernel/ptrace.c:248:
+		set_single_step (child, 0);  /* Clear single-step flag */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#988: FILE: include/asm-v850/ptrace.h:106:
+/* Where the current syscall number is stashed; obviously only valid in
+   the kernel!  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#988: FILE: include/asm-v850/ptrace.h:106:
+   the kernel!  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#996: FILE: include/asm-v850/ptrace.h:114:
+/* These are `magic' values for PTRACE_PEEKUSR that return info about where
+   a process is located in memory.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#996: FILE: include/asm-v850/ptrace.h:114:
+   a process is located in memory.  */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1001: FILE: include/asm-v850/ptrace.h:119:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 33 warnings, 5 checks, 913 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379511.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
