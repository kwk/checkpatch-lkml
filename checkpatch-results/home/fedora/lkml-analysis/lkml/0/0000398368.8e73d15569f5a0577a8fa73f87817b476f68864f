WARNING:TYPO_SPELLING: 'tring' may be misspelled - perhaps 'trying'?
#42: FILE: arch/i386/kernel/smpboot.c:173:
+ * pairs of processors rather than tring to synchronize all of the processors
                                    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#43: FILE: arch/i386/kernel/smpboot.c:174:
+ * with a single event.  When several processors are all waiting for an $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#47: FILE: arch/i386/kernel/smpboot.c:178:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: arch/i386/kernel/smpboot.c:180:
+ * that all of the cpus can be synchronized before we overflow the $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#60: FILE: arch/i386/kernel/smpboot.c:185:
+#define SLAVE	(SMP_CACHE_BYTES/sizeof(long))
              	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: arch/i386/kernel/smpboot.c:190:
+static volatile unsigned long go[2*SLAVE] __cacheline_aligned;
                                   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#77: FILE: arch/i386/kernel/smpboot.c:190:
+static volatile unsigned long go[2*SLAVE] __cacheline_aligned;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#78: FILE: arch/i386/kernel/smpboot.c:191:
+static volatile int current_slave = -1;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#79: FILE: arch/i386/kernel/smpboot.c:192:
+static volatile int tsc_sync_complete = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#79: FILE: arch/i386/kernel/smpboot.c:192:
+static volatile int tsc_sync_complete = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#80: FILE: arch/i386/kernel/smpboot.c:193:
+static volatile int tsc_adj_latency = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#80: FILE: arch/i386/kernel/smpboot.c:193:
+static volatile int tsc_adj_latency = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#81: FILE: arch/i386/kernel/smpboot.c:194:
+static unsigned int max_rt = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#82: FILE: arch/i386/kernel/smpboot.c:195:
+static unsigned int max_delta = 0;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#91: FILE: arch/i386/kernel/smpboot.c:204:
+} tsc_sync_debug[NUM_ROUNDS*NR_CPUS];
                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#91: FILE: arch/i386/kernel/smpboot.c:204:
+} tsc_sync_debug[NUM_ROUNDS*NR_CPUS];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: arch/i386/kernel/smpboot.c:232:
+get_delta (long *rt, long *master)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#147: FILE: arch/i386/kernel/smpboot.c:241:
+		go[MASTER] = i+1;
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#163: FILE: arch/i386/kernel/smpboot.c:255:
+	tcenter = (best_t0/2 + best_t1/2);
 	                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#163: FILE: arch/i386/kernel/smpboot.c:255:
+	tcenter = (best_t0/2 + best_t1/2);
 	                              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: arch/i386/kernel/smpboot.c:297:
+synchronize_tsc_ap (void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: arch/i386/kernel/smpboot.c:305:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: arch/i386/kernel/smpboot.c:315:
+	write_tsc(0,0);
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/i386/kernel/smpboot.c:321:
+^I^Iif (i > 0) $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#269: FILE: arch/i386/kernel/smpboot.c:323:
+		adj = -delta + adjust_latency/8;
 		                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#276: FILE: arch/i386/kernel/smpboot.c:330:
+		t[i].lat = adjust_latency/8;
 		                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#321: FILE: arch/i386/kernel/smpboot.c:338:
+		printk("rt=%5ld master=%5ld diff=%5ld adjlat=%5ld\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: arch/i386/kernel/smpboot.c:341:
+	printk("CPU %d: synchronized TSC (last diff %ld cycles, maxerr %lu cycles)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: arch/i386/kernel/smpboot.c:343:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#327: FILE: arch/i386/kernel/smpboot.c:344:
+	printk("It took %d rounds\n", n_rounds);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: arch/i386/kernel/smpboot.c:359:
+ * The boot processor set its own TSC to zero and then gives each $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: arch/i386/kernel/smpboot.c:363:
+static void __init synchronize_tsc_bp (void)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#368: FILE: arch/i386/kernel/smpboot.c:368:
+	printk("start TSC synchronization\n");

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#373: FILE: arch/i386/kernel/smpboot.c:371:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#374: FILE: arch/i386/kernel/smpboot.c:372:
+		if (!(cpu_callin_map & (1<<cpu)))
 		                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#386: FILE: arch/i386/kernel/smpboot.c:384:
+		printk("TSC overflowed during synchronization\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: arch/i386/kernel/smpboot.c:385:
+^Ielse $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#388: FILE: arch/i386/kernel/smpboot.c:386:
+		printk("TSC synchronization complete max_delta=%d cycles\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: arch/i386/kernel/smpboot.c:387:
+		printk("TSC synchronization complete max_delta=%d cycles\n",
+			max_delta);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#391: FILE: arch/i386/kernel/smpboot.c:389:
+		error = (max_rt * 1000000)/cpu_khz;
 		                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#392: FILE: arch/i386/kernel/smpboot.c:390:
+		printk("TSC sync round-trip time %d.%03d microseconds\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: arch/i386/kernel/smpboot.c:391:
+		printk("TSC sync round-trip time %d.%03d microseconds\n",
+			error/1000, error%1000);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#393: FILE: arch/i386/kernel/smpboot.c:391:
+			error/1000, error%1000);
 			     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#393: FILE: arch/i386/kernel/smpboot.c:391:
+			error/1000, error%1000);
 			                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#395: FILE: arch/i386/kernel/smpboot.c:393:
+		printk("TSC sync round-trip time %d cycles\n", max_rt);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 18 warnings, 14 checks, 369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000398368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
