WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#137: FILE: include/linux/platform_device.h:47:
+	int (*probe)(struct platform_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#138: FILE: include/linux/platform_device.h:48:
+	int (*remove)(struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#139: FILE: include/linux/platform_device.h:49:
+	void (*shutdown)(struct platform_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#140: FILE: include/linux/platform_device.h:50:
+	int (*suspend)(struct platform_device *, pm_message_t state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_device *' should also have an identifier name
#141: FILE: include/linux/platform_device.h:51:
+	int (*resume)(struct platform_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/platform_device.h:55:
+extern int platform_driver_register(struct platform_driver *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_driver *' should also have an identifier name
#145: FILE: include/linux/platform_device.h:55:
+extern int platform_driver_register(struct platform_driver *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: include/linux/platform_device.h:56:
+extern void platform_driver_unregister(struct platform_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct platform_driver *' should also have an identifier name
#146: FILE: include/linux/platform_device.h:56:
+extern void platform_driver_unregister(struct platform_driver *);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: include/linux/platform_device.h:59:
+#define platform_set_drvdata(_dev,data)	dev_set_drvdata(&(_dev)->dev, (data))
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 7 warnings, 2 checks, 104 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137793.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
