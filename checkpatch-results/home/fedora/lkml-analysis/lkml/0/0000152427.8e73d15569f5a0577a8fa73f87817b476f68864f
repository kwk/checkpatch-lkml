WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
diff -uprN linux-vanilla/arch/i386/kernel/smpboot.c linux-tainted/arch/i386/kernel/smpboot.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: include/linux/tainted.h:1:
+#ifndef __TAINTED_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#119: FILE: include/linux/tainted.h:4:
+#define TAINT_PROPRIETARY_MODULE	(1<<0)
                                 	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#119: FILE: include/linux/tainted.h:4:
+#define TAINT_PROPRIETARY_MODULE	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#120: FILE: include/linux/tainted.h:5:
+#define TAINT_FORCED_MODULE		(1<<1)
                            		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#120: FILE: include/linux/tainted.h:5:
+#define TAINT_FORCED_MODULE		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#121: FILE: include/linux/tainted.h:6:
+#define TAINT_UNSAFE_SMP		(1<<2)
                         		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#121: FILE: include/linux/tainted.h:6:
+#define TAINT_UNSAFE_SMP		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#122: FILE: include/linux/tainted.h:7:
+#define TAINT_FORCED_RMMOD		(1<<3)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#122: FILE: include/linux/tainted.h:7:
+#define TAINT_FORCED_RMMOD		(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#123: FILE: include/linux/tainted.h:8:
+#define TAINT_MACHINE_CHECK		(1<<4)
                            		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#123: FILE: include/linux/tainted.h:8:
+#define TAINT_MACHINE_CHECK		(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#124: FILE: include/linux/tainted.h:9:
+#define TAINT_BAD_PAGE			(1<<5)
                       			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#124: FILE: include/linux/tainted.h:9:
+#define TAINT_BAD_PAGE			(1<<5)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: include/linux/tainted.h:12:
+const char * print_tainted(void);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: include/linux/tainted.h:13:
+void add_taint(unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#128: FILE: include/linux/tainted.h:13:
+void add_taint(unsigned);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#220: FILE: kernel/tainted.c:1:
+#include <linux/kernel.h> /* FIXME: remove once snprintf prototype removed from kernel.h */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: kernel/tainted.c:20:
+const char * print_tainted(void)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: kernel/tainted.c:26:
+		snprintf(buf, sizeof(buf), "Tainted: %c%c%c%c%c%c",
+			tainted & TAINT_PROPRIETARY_MODULE	? 'P' : 'G',

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#256: FILE: kernel/tainted.c:37:
+void add_taint(unsigned flag)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 6 warnings, 13 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000152427.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
