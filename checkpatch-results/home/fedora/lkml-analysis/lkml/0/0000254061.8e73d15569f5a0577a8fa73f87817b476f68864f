ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: scripts/kconfig/mconf.c:106:
+static void show_file(const char *filename, const char *title, int r, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#56: FILE: scripts/kconfig/mconf.c:106:
int c);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: scripts/kconfig/mconf.c:107:
+static void show_file(const char *filename, const char *title, int r, 
 static void search_conf(char *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: scripts/kconfig/mconf.c:283:
+       regex_t re;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: scripts/kconfig/mconf.c:284:
+       int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: scripts/kconfig/mconf.c:286:
+       if (regcomp(&re, pattern, REG_EXTENDED|REG_NOSUB))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#87: FILE: scripts/kconfig/mconf.c:286:
+       if (regcomp(&re, pattern, REG_EXTENDED|REG_NOSUB))
+               return 0;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#87: FILE: scripts/kconfig/mconf.c:286:
+       if (regcomp(&re, pattern, REG_EXTENDED|REG_NOSUB))
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: scripts/kconfig/mconf.c:287:
+               return 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: scripts/kconfig/mconf.c:287:
+               return 0;$

CHECK:SPACING: No space is necessary after a cast
#89: FILE: scripts/kconfig/mconf.c:288:
+       rc = regexec(&re, string, (size_t) 0, NULL, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: scripts/kconfig/mconf.c:288:
+       rc = regexec(&re, string, (size_t) 0, NULL, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: scripts/kconfig/mconf.c:289:
+       regfree(&re);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: scripts/kconfig/mconf.c:290:
+       if (rc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#91: FILE: scripts/kconfig/mconf.c:290:
+       if (rc)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: scripts/kconfig/mconf.c:291:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: scripts/kconfig/mconf.c:291:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: scripts/kconfig/mconf.c:292:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: scripts/kconfig/mconf.c:297:
+       struct symbol *sym = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: scripts/kconfig/mconf.c:299:
+       struct property *prop = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: scripts/kconfig/mconf.c:300:
+       FILE *fp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: scripts/kconfig/mconf.c:302:
+       int i, j, k;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: scripts/kconfig/mconf.c:310:
+               if (!sym->name)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: scripts/kconfig/mconf.c:310:
+               if (!sym->name)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#117: FILE: scripts/kconfig/mconf.c:310:
+               if (!sym->name)
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: scripts/kconfig/mconf.c:311:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: scripts/kconfig/mconf.c:311:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: scripts/kconfig/mconf.c:312:
+               if (!regex_match(sym->name, search_str))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: scripts/kconfig/mconf.c:312:
+               if (!regex_match(sym->name, search_str))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#119: FILE: scripts/kconfig/mconf.c:312:
+               if (!regex_match(sym->name, search_str))
+                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: scripts/kconfig/mconf.c:313:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: scripts/kconfig/mconf.c:313:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: scripts/kconfig/mconf.c:314:
+               for_all_prompts(sym, prop) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: scripts/kconfig/mconf.c:314:
+               for_all_prompts(sym, prop) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: scripts/kconfig/mconf.c:315:
+                       struct menu *submenu = prop->menu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: scripts/kconfig/mconf.c:315:
+                       struct menu *submenu = prop->menu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: scripts/kconfig/mconf.c:316:
+                       if (!submenu)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: scripts/kconfig/mconf.c:316:
+                       struct menu *submenu = prop->menu;
+                       if (!submenu)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: scripts/kconfig/mconf.c:316:
+                       if (!submenu)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#123: FILE: scripts/kconfig/mconf.c:316:
+                       if (!submenu)
+                               continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: scripts/kconfig/mconf.c:317:
+                               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: scripts/kconfig/mconf.c:317:
+                               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: scripts/kconfig/mconf.c:319:
+                       hit = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: scripts/kconfig/mconf.c:319:
+                       hit = false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#131: FILE: scripts/kconfig/mconf.c:324:
                        if (j > 0) {
+                               if (!hit)

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: scripts/kconfig/mconf.c:325:
+                               if (!hit)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: scripts/kconfig/mconf.c:325:
+                               if (!hit)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#135: FILE: scripts/kconfig/mconf.c:325:
+                               if (!hit)
+                                       hit = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: scripts/kconfig/mconf.c:326:
+                                       hit = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: scripts/kconfig/mconf.c:326:
+                                       hit = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: scripts/kconfig/mconf.c:327:
+                               if (prop->text)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: scripts/kconfig/mconf.c:327:
+                               if (prop->text)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#137: FILE: scripts/kconfig/mconf.c:327:
+                               if (prop->text)
+                                       fprintf(fp, "%s (%s)\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: scripts/kconfig/mconf.c:328:
+                                       fprintf(fp, "%s (%s)\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: scripts/kconfig/mconf.c:328:
+                                       fprintf(fp, "%s (%s)\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: scripts/kconfig/mconf.c:328:
+                                       fprintf(fp, "%s (%s)\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: scripts/kconfig/mconf.c:329:
+                                       fprintf(fp, "%s (%s)\n", 
                                else

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: scripts/kconfig/mconf.c:331:
+                               fprintf(fp, "Location:\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: scripts/kconfig/mconf.c:331:
+                               fprintf(fp, "Location:\n");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: scripts/kconfig/mconf.c:334:
+                               const char *prompt = (char $

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: scripts/kconfig/mconf.c:334:
+                               const char *prompt = (char $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: scripts/kconfig/mconf.c:334:
+                               const char *prompt = (char $

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: scripts/kconfig/mconf.c:335:
+                               if (menu[k]->sym)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: scripts/kconfig/mconf.c:335:
+                               const char *prompt = (char 
+                               if (menu[k]->sym)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: scripts/kconfig/mconf.c:335:
+                               if (menu[k]->sym)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#155: FILE: scripts/kconfig/mconf.c:335:
+                               if (menu[k]->sym)
+                                       fprintf(fp, " -> %s (%s)\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: scripts/kconfig/mconf.c:336:
+                                       fprintf(fp, " -> %s (%s)\n", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: scripts/kconfig/mconf.c:336:
+                                       fprintf(fp, " -> %s (%s)\n", $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: scripts/kconfig/mconf.c:336:
+                                       fprintf(fp, " -> %s (%s)\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: scripts/kconfig/mconf.c:337:
+                                       fprintf(fp, " -> %s (%s)\n", 
                                else

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: scripts/kconfig/mconf.c:340:
+                       if (hit) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: scripts/kconfig/mconf.c:340:
+                       if (hit) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#163: FILE: scripts/kconfig/mconf.c:340:
+                       if (hit) {
+                               if (menu[0]->dep || (menu[0]->sym && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: scripts/kconfig/mconf.c:341:
+                               if (menu[0]->dep || (menu[0]->sym && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: scripts/kconfig/mconf.c:341:
+                               if (menu[0]->dep || (menu[0]->sym && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: scripts/kconfig/mconf.c:341:
+                               if (menu[0]->dep || (menu[0]->sym && $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#164: FILE: scripts/kconfig/mconf.c:341:
+                               if (menu[0]->dep || (menu[0]->sym && 
[...]
+                                       fprintf(fp, "Depends:\n ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: scripts/kconfig/mconf.c:342:
+                                       fprintf(fp, "Depends:\n ");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: scripts/kconfig/mconf.c:342:
+                               if (menu[0]->dep || (menu[0]->sym && 
+                                       fprintf(fp, "Depends:\n ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: scripts/kconfig/mconf.c:342:
+                                       fprintf(fp, "Depends:\n ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: scripts/kconfig/mconf.c:343:
+                               if (menu[0]->dep)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: scripts/kconfig/mconf.c:343:
+                               if (menu[0]->dep)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#167: FILE: scripts/kconfig/mconf.c:343:
+                               if (menu[0]->dep)
+                                       expr_fprint(menu[0]->dep, fp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: scripts/kconfig/mconf.c:344:
+                                       expr_fprint(menu[0]->dep, fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: scripts/kconfig/mconf.c:344:
+                                       expr_fprint(menu[0]->dep, fp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: scripts/kconfig/mconf.c:345:
+                               if (menu[0]->sym && menu[0]->sym->dep)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: scripts/kconfig/mconf.c:345:
+                               if (menu[0]->sym && menu[0]->sym->dep)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#169: FILE: scripts/kconfig/mconf.c:345:
+                               if (menu[0]->sym && menu[0]->sym->dep)
+                                       expr_fprint(menu[0]->sym->dep, fp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: scripts/kconfig/mconf.c:346:
+                                       expr_fprint(menu[0]->sym->dep, fp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: scripts/kconfig/mconf.c:346:
+                                       expr_fprint(menu[0]->sym->dep, fp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: scripts/kconfig/mconf.c:347:
+                               fprintf(fp, "\n\n\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: scripts/kconfig/mconf.c:347:
+                               fprintf(fp, "\n\n\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: scripts/kconfig/mconf.c:348:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: scripts/kconfig/mconf.c:348:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: scripts/kconfig/mconf.c:354:
+       show_file(".search.tmp", "Search Results", rows, cols);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: scripts/kconfig/mconf.c:651:
+       show_file(".help.tmp", title, r, c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: scripts/kconfig/mconf.c:680:
+       show_file("scripts/README.Menuconfig", NULL, rows, cols);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: scripts/kconfig/mconf.c:683:
+static void show_file(const char *filename, const char *title, int r, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: scripts/kconfig/mconf.c:684:
+static void show_file(const char *filename, const char *title, int r, 
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: scripts/kconfig/mconf.c:687:
+               if (title) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: scripts/kconfig/mconf.c:687:
+               if (title) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#235: FILE: scripts/kconfig/mconf.c:687:
+               if (title) {
+                       cprint("--title");

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: scripts/kconfig/mconf.c:688:
+                       cprint("--title");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: scripts/kconfig/mconf.c:688:
+                       cprint("--title");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: scripts/kconfig/mconf.c:689:
+                       cprint("%s", title);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: scripts/kconfig/mconf.c:689:
+                       cprint("%s", title);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: scripts/kconfig/mconf.c:690:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: scripts/kconfig/mconf.c:690:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: scripts/kconfig/mconf.c:692:
+               cprint("%s", filename);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: scripts/kconfig/mconf.c:692:
+               cprint("%s", filename);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: scripts/kconfig/mconf.c:693:
+               cprint("%d", r);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: scripts/kconfig/mconf.c:693:
+               cprint("%d", r);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: scripts/kconfig/mconf.c:694:
+               cprint("%d", c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: scripts/kconfig/mconf.c:694:
+               cprint("%d", c);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: scripts/kconfig/mconf.c:695:
+       } while (exec_conf() < 0);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 66 warnings, 7 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
