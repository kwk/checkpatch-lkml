WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#85: 
 linux-2.6-npiggin/mm/vmscan.c                 |  176 ++++++++++----------------

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: include/linux/mm_inline.h:1:
+#ifndef _LINUX_MM_INLINE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#339: FILE: kernel/sysctl.c:707:
+		.extra1		= &one,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#369: FILE: mm/hugetlb.c:130:
+		page[i].flags &= ~(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#506: FILE: mm/swap.c:92:
+	if (PageLRU(page)
+		&& !PageActiveMapped(page) && !PageActiveUnmapped(page)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#507: FILE: mm/swap.c:93:
+		&& !PageActiveMapped(page) && !PageActiveUnmapped(page)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#599: FILE: mm/vmscan.c:270:
+		BUG_ON(PageActiveMapped(page) || PageActiveUnmapped(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: mm/vmscan.c:582:
+static void shrink_active_list(struct zone *zone, struct list_head *list,
+		unsigned long *list_count, const int nr_scan,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#748: FILE: mm/vmscan.c:644:
+		if (!TestClearPageActiveMapped(page)
+				&& !TestClearPageActiveUnmapped(page))

ERROR:SPACING: space required before the open parenthesis '('
#765: FILE: mm/vmscan.c:674:
+		if(!TestClearPageActiveMapped(page)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#766: FILE: mm/vmscan.c:675:
+		if(!TestClearPageActiveMapped(page)
+				&& !TestClearPageActiveUnmapped(page))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#767: FILE: mm/vmscan.c:676:
+			BUG();

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#819: FILE: mm/vmscan.c:733:
+	do_div(mapped_ratio, (zone->nr_active_unmapped * vm_mapped_page_cost) +1);
 	                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#822: FILE: mm/vmscan.c:736:
+	atomic_add(ratio+1, &zone->nr_scan_active_unmapped);
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: mm/vmscan.c:741:
+		shrink_active_list(zone, &zone->active_unmapped_list,
+					&zone->nr_active_unmapped, count, ps);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: mm/vmscan.c:744:
+	atomic_add(mapped_ratio+1, &zone->nr_scan_active_mapped);
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: mm/vmscan.c:749:
+		shrink_active_list(zone, &zone->active_mapped_list,
+					&zone->nr_active_mapped, count, ps);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 5 warnings, 11 checks, 748 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287731.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
