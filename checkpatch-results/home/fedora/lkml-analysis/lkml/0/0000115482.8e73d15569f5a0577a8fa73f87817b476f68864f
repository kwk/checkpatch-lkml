CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bmp' may be better as '(bmp)' to avoid precedence issues
#147: FILE: fs/jfs/jfs_dmap.c:67:
+#define BMAP_LOCK_INIT(bmp)	mutex_init(&bmp->db_bmaplock)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bmp' may be better as '(bmp)' to avoid precedence issues
#148: FILE: fs/jfs/jfs_dmap.c:68:
+#define BMAP_LOCK(bmp)		mutex_lock(&bmp->db_bmaplock)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bmp' may be better as '(bmp)' to avoid precedence issues
#149: FILE: fs/jfs/jfs_dmap.c:69:
+#define BMAP_UNLOCK(bmp)	mutex_unlock(&bmp->db_bmaplock)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'imap' may be better as '(imap)' to avoid precedence issues
#267: FILE: fs/jfs/jfs_imap.c:69:
+#define IAGFREE_LOCK_INIT(imap)		mutex_init(&imap->im_freelock)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'imap' may be better as '(imap)' to avoid precedence issues
#268: FILE: fs/jfs/jfs_imap.c:70:
+#define IAGFREE_LOCK(imap)		mutex_lock(&imap->im_freelock)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'imap' may be better as '(imap)' to avoid precedence issues
#269: FILE: fs/jfs/jfs_imap.c:71:
+#define IAGFREE_UNLOCK(imap)		mutex_unlock(&imap->im_freelock)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: fs/jfs/jfs_imap.c:74:
+#define AG_LOCK_INIT(imap,index)	mutex_init(&(imap->im_aglock[index]))
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around imap->im_aglock[index]
#275: FILE: fs/jfs/jfs_imap.c:74:
+#define AG_LOCK_INIT(imap,index)	mutex_init(&(imap->im_aglock[index]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'imap' may be better as '(imap)' to avoid precedence issues
#275: FILE: fs/jfs/jfs_imap.c:74:
+#define AG_LOCK_INIT(imap,index)	mutex_init(&(imap->im_aglock[index]))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#276: FILE: fs/jfs/jfs_imap.c:75:
+#define AG_LOCK(imap,agno)		mutex_lock(&imap->im_aglock[agno])
                     ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'imap' may be better as '(imap)' to avoid precedence issues
#276: FILE: fs/jfs/jfs_imap.c:75:
+#define AG_LOCK(imap,agno)		mutex_lock(&imap->im_aglock[agno])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: fs/jfs/jfs_imap.c:76:
+#define AG_UNLOCK(imap,agno)		mutex_unlock(&imap->im_aglock[agno])
                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'imap' may be better as '(imap)' to avoid precedence issues
#277: FILE: fs/jfs/jfs_imap.c:76:
+#define AG_UNLOCK(imap,agno)		mutex_unlock(&imap->im_aglock[agno])

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#362: FILE: fs/jfs/jfs_incore.h:71:
+	struct mutex commit_mutex;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#430: FILE: fs/jfs/jfs_txnmgr.c:2955:
+			} else if (! !mutex_trylock(&jfs_ip->commit_mutex)) {
 			           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115482.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 0 warnings, 11 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115482.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
