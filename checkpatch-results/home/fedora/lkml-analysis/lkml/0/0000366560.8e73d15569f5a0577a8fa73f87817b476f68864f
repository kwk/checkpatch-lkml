WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
 pci-bridge.c |  205 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: drivers/pci/pci-bridge.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#52: FILE: drivers/pci/pci-bridge.c:2:
+ * 	drivers/pci/pci-bridge.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#52: FILE: drivers/pci/pci-bridge.c:2:
+ * ^Idrivers/pci/pci-bridge.c$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#54: FILE: drivers/pci/pci-bridge.c:4:
+ * ^ICopyright (c) 2003 Mark Haverkamp <markh@osdl.org>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: drivers/pci/pci-bridge.c:6:
+ * ^Ipci bridge driver$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: drivers/pci/pci-bridge.c:11:
+ * ^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: drivers/pci/pci-bridge.c:11:
+ * ^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#68: FILE: drivers/pci/pci-bridge.c:18:
+static int __devinit pci_bridge_probe(struct pci_dev *pci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#69: FILE: drivers/pci/pci-bridge.c:19:
+static int __devinit pci_bridge_probe(struct pci_dev *pci,
+					const struct pci_device_id *pci_id);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#70: FILE: drivers/pci/pci-bridge.c:20:
+static void  __devexit pci_bridge_remove(struct pci_dev *pci);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#80: FILE: drivers/pci/pci-bridge.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#81: FILE: drivers/pci/pci-bridge.c:31:
+static struct pci_device_id pci_bridge_id[] __devinitdata = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/pci/pci-bridge.c:32:
+^I{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/pci/pci-bridge.c:33:
+^I^I.vendor^I^I= PCI_ANY_ID, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/pci/pci-bridge.c:34:
+^I^I.device ^I= PCI_ANY_ID, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: drivers/pci/pci-bridge.c:34:
+^I^I.device ^I= PCI_ANY_ID, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/pci/pci-bridge.c:35:
+^I ^I.subvendor^I= PCI_ANY_ID, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/pci/pci-bridge.c:35:
+^I ^I.subvendor^I= PCI_ANY_ID, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: drivers/pci/pci-bridge.c:35:
+^I ^I.subvendor^I= PCI_ANY_ID, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/pci/pci-bridge.c:36:
+^I^I.subdevice^I= PCI_ANY_ID, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/pci/pci-bridge.c:37:
+^I ^I.class^I^I= PCI_CLASS_BRIDGE_PCI << 8, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/pci/pci-bridge.c:37:
+^I ^I.class^I^I= PCI_CLASS_BRIDGE_PCI << 8, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/pci/pci-bridge.c:37:
+^I ^I.class^I^I= PCI_CLASS_BRIDGE_PCI << 8, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: drivers/pci/pci-bridge.c:38:
+^I^I.class_mask^I= 0xffff00, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/pci/pci-bridge.c:39:
+^I ^I.driver_data^I= 0,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: drivers/pci/pci-bridge.c:39:
+^I ^I.driver_data^I= 0,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: drivers/pci/pci-bridge.c:45:
+^I.name ^I^I= "pci_bridge",$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#108: FILE: drivers/pci/pci-bridge.c:58:
+static u32 pci_bridge_num = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'Initialze' may be misspelled - perhaps 'Initialize'?
#112: FILE: drivers/pci/pci-bridge.c:62:
+ * pci_bridge_probe - Initialze driver for pci-pci bridge.
                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#117: FILE: drivers/pci/pci-bridge.c:67:
+static int __devinit pci_bridge_probe(struct pci_dev *pci,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: drivers/pci/pci-bridge.c:68:
+static int __devinit pci_bridge_probe(struct pci_dev *pci,
+					const struct pci_device_id *pci_id)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: drivers/pci/pci-bridge.c:74:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#126: FILE: drivers/pci/pci-bridge.c:76:
+	if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: drivers/pci/pci-bridge.c:92:
+^Imemset(&class_dev_data, 0, sizeof(class_dev_data)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/pci/pci-bridge.c:94:
+^Iclass_dev_data.class = &pci_bridge_class; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: drivers/pci/pci-bridge.c:103:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#154: FILE: drivers/pci/pci-bridge.c:104:
+	
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/pci/pci-bridge.c:110:
+ */ $

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#161: FILE: drivers/pci/pci-bridge.c:111:
+static void  __devexit pci_bridge_remove(struct pci_dev *pci)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#171: FILE: drivers/pci/pci-bridge.c:121:
+{
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#175: FILE: drivers/pci/pci-bridge.c:125:
+	if (err < 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#175: FILE: drivers/pci/pci-bridge.c:125:
+	if (err < 0 ) {
+		return err;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#180: FILE: drivers/pci/pci-bridge.c:130:
+	if (err < 0) {
+		class_unregister(&pci_bridge_class);
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#186: FILE: drivers/pci/pci-bridge.c:136:
+
+}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#205: FILE: drivers/pci/pci-bridge.c:155:
+	if (dev == NULL) {
+		return 0;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#205: FILE: drivers/pci/pci-bridge.c:155:
+	if (dev == NULL) {

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_bridge_show_primary' to 'primary_bus_show'
#210: FILE: drivers/pci/pci-bridge.c:160:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#211: FILE: drivers/pci/pci-bridge.c:161:
+static DEVICE_ATTR(primary_bus, S_IRUGO, pci_bridge_show_primary, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#217: FILE: drivers/pci/pci-bridge.c:167:
+	if (dev == NULL) {
+		return 0;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#217: FILE: drivers/pci/pci-bridge.c:167:
+	if (dev == NULL) {

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_bridge_show_secondary' to 'secondary_bus_show'
#222: FILE: drivers/pci/pci-bridge.c:172:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#223: FILE: drivers/pci/pci-bridge.c:173:
+static DEVICE_ATTR(secondary_bus, S_IRUGO, pci_bridge_show_secondary, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#229: FILE: drivers/pci/pci-bridge.c:179:
+	if (dev == NULL) {
+		return 0;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#229: FILE: drivers/pci/pci-bridge.c:179:
+	if (dev == NULL) {

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_bridge_show_subordinate' to 'subordinate_bus_show'
#234: FILE: drivers/pci/pci-bridge.c:184:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#235: FILE: drivers/pci/pci-bridge.c:185:
+static DEVICE_ATTR(subordinate_bus, S_IRUGO, pci_bridge_show_subordinate, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: drivers/pci/pci-bridge.c:187:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 29 warnings, 12 checks, 213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
