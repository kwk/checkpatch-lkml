WARNING:TYPO_SPELLING: 'initalized' may be misspelled - perhaps 'initialized'?
#24: 
which are initalized long after I need the crc functions.
          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'lib' exists, appears to be a -p0 patch

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#188: FILE: crc32.c:157:
+EXPORT_SYMBOL(crc32_le);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PATCH_PREFIX: patch prefix 'lib' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'lib' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: crc32.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#280: FILE: crc32.h:18:
+#if CRC_LE_BITS > 8 || CRC_LE_BITS < 1 || CRC_LE_BITS & CRC_LE_BITS-1
                                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#288: FILE: crc32.h:26:
+#if CRC_BE_BITS > 8 || CRC_BE_BITS < 1 || CRC_BE_BITS & CRC_BE_BITS-1
                                                                    ^

WARNING:PATCH_PREFIX: patch prefix 'lib' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#294: FILE: gen_crc32table.c:1:
+#include <stdio.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#298: FILE: gen_crc32table.c:5:
+#define LE_TABLE_SIZE (1 << CRC_LE_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: gen_crc32table.c:6:
+#define BE_TABLE_SIZE (1 << CRC_BE_BITS)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#301: FILE: gen_crc32table.c:8:
+static u_int32_t crc32table_le[LE_TABLE_SIZE];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#302: FILE: gen_crc32table.c:9:
+static u_int32_t crc32table_be[BE_TABLE_SIZE];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#313: FILE: gen_crc32table.c:20:
+	unsigned i, j;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#314: FILE: gen_crc32table.c:21:
+	u_int32_t crc = 1;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: gen_crc32table.c:37:
+	unsigned i, j;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#331: FILE: gen_crc32table.c:38:
+	u_int32_t crc = 0x80000000;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#342: FILE: gen_crc32table.c:49:
+static void output_table(u_int32_t table[], int len)

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#354: FILE: gen_crc32table.c:61:
+int main(int argc, char** argv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411696.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 9 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000411696.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
