WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
http://sourceforge.net/mailarchive/forum.php?thread_id=8132624&forum_id=35191 )

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: include/linux/cn_proc.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: include/linux/cn_proc.h:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: include/linux/cn_proc.h:22:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: include/linux/cn_proc.h:107:
+void proc_id_connector (pid_t pid, pid_t tgid, int from, int to, int which_id);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: include/linux/cn_proc.h:117:
+static inline void proc_id_connector (pid_t pid, pid_t tgid, int from,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#221: FILE: drivers/connector/cn_proc.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#241: FILE: drivers/connector/cn_proc.c:21:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#242: FILE: drivers/connector/cn_proc.c:22:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#253: FILE: drivers/connector/cn_proc.c:33:
+static int proc_event_num_listeners = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#259: FILE: drivers/connector/cn_proc.c:39:
+static inline void get_seq (__u32 *ts, int *cpu)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#275: FILE: drivers/connector/cn_proc.c:55:
+	msg = (struct cn_msg*)buffer;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#276: FILE: drivers/connector/cn_proc.c:56:
+	ev = (struct proc_event*)msg->data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#303: FILE: drivers/connector/cn_proc.c:83:
+	msg = (struct cn_msg*)buffer;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#304: FILE: drivers/connector/cn_proc.c:84:
+	ev = (struct proc_event*)msg->data;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: drivers/connector/cn_proc.c:99:
+void proc_id_connector (pid_t task_pid, pid_t task_tgid,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#329: FILE: drivers/connector/cn_proc.c:109:
+	msg = (struct cn_msg*)buffer;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#330: FILE: drivers/connector/cn_proc.c:110:
+	ev = (struct proc_event*)msg->data;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#338: FILE: drivers/connector/cn_proc.c:118:
+	switch (which_id) {
+		case PROC_EVENT_RUID:
+		case PROC_EVENT_EUID:
+		case PROC_EVENT_SUID:
+		case PROC_EVENT_FSUID:
[...]
+		case PROC_EVENT_RGID:
+		case PROC_EVENT_EGID:
+		case PROC_EVENT_SGID:
+		case PROC_EVENT_FSGID:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#355: FILE: drivers/connector/cn_proc.c:135:
+			return;
+			break;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#372: FILE: drivers/connector/cn_proc.c:152:
+	msg = (struct cn_msg*)buffer;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#373: FILE: drivers/connector/cn_proc.c:153:
+	ev = (struct proc_event*)msg->data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->len == sizeof(*mc_op)'
#398: FILE: drivers/connector/cn_proc.c:178:
+	if (!(cn_already_initialized &&
+	    (msg->len == sizeof(*mc_op))))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/connector/cn_proc.c:179:
+	if (!(cn_already_initialized &&
+	    (msg->len == sizeof(*mc_op))))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#402: FILE: drivers/connector/cn_proc.c:182:
+	mc_op = (enum proc_cn_mcast_op*)msg->data;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#403: FILE: drivers/connector/cn_proc.c:183:
+	switch (*mc_op) {
+		case PROC_CN_MCAST_LISTEN:
[...]
+		case PROC_CN_MCAST_IGNORE:
[...]
+		default:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#426: FILE: drivers/connector/cn_proc.c:206:
+		printk(KERN_WARNING "cn_proc failed to register\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#432: FILE: drivers/connector/cn_proc.c:212:
+__initcall(cn_proc_init);

CHECK:SPACING: No space is necessary after a cast
#533: FILE: kernel/sys.c:582:
+	    (egid != (gid_t) -1 && egid != old_rgid)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#540: FILE: kernel/sys.c:589:
+			  current->fsgid, new_egid,PROC_EVENT_FSGID);
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#568: FILE: kernel/sys.c:631:
+				  current->gid, gid,PROC_EVENT_RGID);
 				                   ^

CHECK:SPACING: No space is necessary after a cast
#615: FILE: kernel/sys.c:743:
+	    (euid != (uid_t) -1 && euid != old_ruid)) {

CHECK:SPACING: No space is necessary after a cast
#660: FILE: kernel/sys.c:856:
+	if (suid != (uid_t) -1) {

CHECK:SPACING: No space is necessary after a cast
#684: FILE: kernel/sys.c:913:
+	if (rgid != (gid_t) -1) {

CHECK:SPACING: No space is necessary after a cast
#690: FILE: kernel/sys.c:918:
+	if (sgid != (gid_t) -1) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 10 warnings, 7 checks, 645 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
