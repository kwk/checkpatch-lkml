WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#49: 
  idle time inbetween skipped ticks
            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#61: 
inbetween ticks is only few seconds at most.
^^^^^^^^^

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#65: 
system take advantage of the idle time inbetween the skipped
                                       ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Orignal' may be misspelled - perhaps 'Original'?
#71: 
Orignal 2.4 VST patch by George Anzinger -->
^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#90: 
Content-Disposition: inline; filename="patch-dynamic-tick-2.6.11-rc1-050118-1"

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#93: 
--- a/arch/i386/Kconfig	2005-01-18 15:50:17 -08:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#150: FILE: arch/i386/kernel/time.c:307:
+void reprogram_pit_tick(int jiffies_to_skip);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: arch/i386/kernel/time.c:311:
+				printk("%i/%i ", skipped, dyn_tick->skip);}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#154: FILE: arch/i386/kernel/time.c:311:
+				printk("%i/%i ", skipped, dyn_tick->skip);}
 				                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#168: FILE: arch/i386/kernel/time.c:325:
+	volatile unsigned long long now;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#210: FILE: arch/i386/kernel/time.c:455:
+	extern spinlock_t i8253_lock;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: arch/i386/kernel/time.c:468:
+extern void replace_timer_interrupt(void * new_handler);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: arch/i386/kernel/timers/timer_pm.c:250:
+	static unsigned int last_cycles;
+	now = read_pmtmr();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: arch/i386/kernel/timers/timer_tsc.c:120:
+	unsigned long long hw_time;
+	rdtscll(hw_time);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: arch/i386/mach-default/setup.c:95:
+void replace_timer_interrupt(void * new_handler)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#426: FILE: include/linux/dyn-tick-timer.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#427: FILE: include/linux/dyn-tick-timer.h:2:
+ * linux/include/linux/dyn-tick-timer.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#450: FILE: include/linux/dyn-tick-timer.h:25:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#451: FILE: include/linux/dyn-tick-timer.h:26:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:BIT_MACRO: Prefer using the BIT macro
#456: FILE: include/linux/dyn-tick-timer.h:31:
+#define DYN_TICK_SKIPPING	(1 << 2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#457: FILE: include/linux/dyn-tick-timer.h:32:
+#define DYN_TICK_RUNNING	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#458: FILE: include/linux/dyn-tick-timer.h:33:
+#define DYN_TICK_ENABLED	(1 << 0)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#465: FILE: include/linux/dyn-tick-timer.h:40:
+	irqreturn_t (*interrupt)(int, void *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#465: FILE: include/linux/dyn-tick-timer.h:40:
+	irqreturn_t (*interrupt)(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#465: FILE: include/linux/dyn-tick-timer.h:40:
+	irqreturn_t (*interrupt)(int, void *, struct pt_regs *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#470: FILE: include/linux/dyn-tick-timer.h:45:
+	int (*init) (void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#473: FILE: include/linux/dyn-tick-timer.h:48:
+extern struct dyn_tick_state * dyn_tick;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: include/linux/dyn-tick-timer.h:49:
+extern struct dyn_tick_timer * ltt;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#475: FILE: include/linux/dyn-tick-timer.h:50:
+extern void dyn_tick_register(struct dyn_tick_timer * new_timer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#475: FILE: include/linux/dyn-tick-timer.h:50:
+extern void dyn_tick_register(struct dyn_tick_timer * new_timer);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#477: FILE: include/linux/dyn-tick-timer.h:52:
+#define NS_TICK_LEN		((1 * 1000000000)/HZ)
                    		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#480: FILE: include/linux/dyn-tick-timer.h:55:
+#define MAX_SKIP_JIFFIES	(0xffff/LATCH)
                         	       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#496: FILE: kernel/dyn-tick-timer.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#497: FILE: kernel/dyn-tick-timer.c:2:
+ * linux/kernel/dyn-tick-timer.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#522: FILE: kernel/dyn-tick-timer.c:27:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#523: FILE: kernel/dyn-tick-timer.c:28:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#539: FILE: kernel/dyn-tick-timer.c:44:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#543: FILE: kernel/dyn-tick-timer.c:48:
+#define VERSION	050109-4
                	      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#543: FILE: kernel/dyn-tick-timer.c:48:
+#define VERSION	050109-4

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#546: FILE: kernel/dyn-tick-timer.c:51:
+struct dyn_tick_state * dyn_tick = &dyn_tick_state;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#548: FILE: kernel/dyn-tick-timer.c:53:
+struct dyn_tick_timer * ltt = &dyn_tick_timer;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#549: FILE: kernel/dyn-tick-timer.c:54:
+static void (*orig_idle) (void) = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: Unnecessary space before function pointer arguments
#549: FILE: kernel/dyn-tick-timer.c:54:
+static void (*orig_idle) (void) = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#550: FILE: kernel/dyn-tick-timer.c:55:
+extern void reprogram_pit_tick(int jiffies_to_skip);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#587: FILE: kernel/dyn-tick-timer.c:92:
+void __init dyn_tick_register(struct dyn_tick_timer * new_timer)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#590: FILE: kernel/dyn-tick-timer.c:95:
+	printk(KERN_INFO "dyn-tick: Registering dynamic tick timer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#600: FILE: kernel/dyn-tick-timer.c:105:
+	printk(KERN_INFO "dyn-tick: Enabling dynamic tick timer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#604: FILE: kernel/dyn-tick-timer.c:109:
+			printk(KERN_WARNING "dyn-tick: Cannot use this timer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#611: FILE: kernel/dyn-tick-timer.c:116:
+	printk(KERN_INFO "dyn-tick: Timer using dynamic tick\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 26 warnings, 7 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000214246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
