WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#define TRUE/FALSE in include/linux shows a few repeats. Shouldn't

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
http://opersys.com/ftp/pub/LTT/ExtraPatches/patch-ltt-linux-2.5.41-vanilla-021009-2.1.bz2

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#84: FILE: include/linux/trace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#85: FILE: include/linux/trace.h:2:
+ * linux/include/linux/trace.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#90: FILE: include/linux/trace.h:7:
+ * This contains the necessary definitions for tracing the
+ * the system.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#105: FILE: include/linux/trace.h:22:
+/* BTW, this really ought to be defined globally somewhere in the kernel, there are
+already a few headers that define this each on their own. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#105: FILE: include/linux/trace.h:22:
+already a few headers that define this each on their own. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#113: FILE: include/linux/trace.h:30:
+#define LTT_PACKED_STRUCT __attribute__ ((packed))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#113: FILE: include/linux/trace.h:30:
+#define LTT_PACKED_STRUCT __attribute__ ((packed))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#155: FILE: include/linux/trace.h:72:
+int trace_set_config

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#155: FILE: include/linux/trace.h:72:
+int trace_set_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#155: FILE: include/linux/trace.h:72:
+int trace_set_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#155: FILE: include/linux/trace.h:72:
+int trace_set_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#155: FILE: include/linux/trace.h:72:
+int trace_set_config

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/trace.h:73:
+ (int,^I^I/* Use depth to fetch eip */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: include/linux/trace.h:74:
+  int,^I^I/* Use bounds to fetch eip */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: include/linux/trace.h:75:
+  int,^I^I/* Detph to fetch eip */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: include/linux/trace.h:76:
+  void *,^I/* Lower bound eip address */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/trace.h:77:
+  void *);^I/* Upper bound eip address */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#161: FILE: include/linux/trace.h:78:
+int trace_get_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#161: FILE: include/linux/trace.h:78:
+int trace_get_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#161: FILE: include/linux/trace.h:78:
+int trace_get_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#161: FILE: include/linux/trace.h:78:
+int trace_get_config

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#161: FILE: include/linux/trace.h:78:
+int trace_get_config

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/trace.h:79:
+ (int *,^I/* Use depth to fetch eip */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: include/linux/trace.h:80:
+  int *,^I/* Use bounds to fetch eip */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/trace.h:81:
+  int *,^I/* Detph to fetch eip */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: include/linux/trace.h:82:
+  void **,^I/* Lower bound eip address */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: include/linux/trace.h:83:
+  void **);^I/* Upper bound eip address */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#167: FILE: include/linux/trace.h:84:
+int trace_create_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#167: FILE: include/linux/trace.h:84:
+int trace_create_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#167: FILE: include/linux/trace.h:84:
+int trace_create_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#167: FILE: include/linux/trace.h:84:
+int trace_create_event

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/trace.h:85:
+ (char *,^I/* String describing event type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/linux/trace.h:86:
+  char *,^I/* String to format standard event description */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: include/linux/trace.h:87:
+  int,^I^I/* Type of formatting used to log event data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: include/linux/trace.h:88:
+  char *);^I/* Data specific to format */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#172: FILE: include/linux/trace.h:89:
+int trace_create_owned_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#172: FILE: include/linux/trace.h:89:
+int trace_create_owned_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#172: FILE: include/linux/trace.h:89:
+int trace_create_owned_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#172: FILE: include/linux/trace.h:89:
+int trace_create_owned_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pid_t' should also have an identifier name
#172: FILE: include/linux/trace.h:89:
+int trace_create_owned_event

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: include/linux/trace.h:90:
+ (char *,^I/* String describing event type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: include/linux/trace.h:91:
+  char *,^I/* String to format standard event description */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: include/linux/trace.h:92:
+  int,^I^I/* Type of formatting used to log event data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: include/linux/trace.h:93:
+  char *,^I/* Data specific to format */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#177: FILE: include/linux/trace.h:94:
+  pid_t);      ^I/* PID of event's owner */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: include/linux/trace.h:94:
+  pid_t);      ^I/* PID of event's owner */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#178: FILE: include/linux/trace.h:95:
+void trace_destroy_event

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: include/linux/trace.h:96:
+ (int);^I^I/* The event ID given by trace_create_event() */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pid_t' should also have an identifier name
#180: FILE: include/linux/trace.h:97:
+void trace_destroy_owners_events

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: include/linux/trace.h:98:
+ (pid_t);^I/* The PID of the process' who's events are to be deleted */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: include/linux/trace.h:100:
+ (void);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#184: FILE: include/linux/trace.h:101:
+int trace_std_formatted_event

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: include/linux/trace.h:102:
+ (int,^I^I/* The event ID given by trace_create_event() */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/linux/trace.h:103:
+  ...);^I^I/* The parameters to be printed out in the event string */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#187: FILE: include/linux/trace.h:104:
+int trace_raw_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#187: FILE: include/linux/trace.h:104:
+int trace_raw_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#187: FILE: include/linux/trace.h:104:
+int trace_raw_event

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: include/linux/trace.h:105:
+ (int,^I^I/* The event ID given by trace_create_event() */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/linux/trace.h:106:
+  int,^I^I/* The size of the raw data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: include/linux/trace.h:107:
+  void *);^I/* Pointer to the raw event data */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#191: FILE: include/linux/trace.h:108:
+int trace_event

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#191: FILE: include/linux/trace.h:108:
+int trace_event

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: include/linux/trace.h:109:
+ (u8,^I^I/* Event ID (as defined in this header file) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: include/linux/trace.h:110:
+  void *);^I/* Structure describing the event */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: include/linux/trace.h:112:
+ (void);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#196: FILE: include/linux/trace.h:113:
+int trace

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#196: FILE: include/linux/trace.h:113:
+int trace

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#196: FILE: include/linux/trace.h:113:
+int trace

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: include/linux/trace.h:114:
+ (u8,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: include/linux/trace.h:115:
+  void *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: include/linux/trace.h:116:
+  u8);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct timeval' should also have an identifier name
#200: FILE: include/linux/trace.h:117:
+void tracer_switch_buffers

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: include/linux/trace.h:118:
+ (struct timeval,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: include/linux/trace.h:119:
+  trace_time_delta tsc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: include/linux/trace.h:120:
+  u8 cpu);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#204: FILE: include/linux/trace.h:121:
+int tracer_ioctl

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#204: FILE: include/linux/trace.h:121:
+int tracer_ioctl

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#204: FILE: include/linux/trace.h:121:
+int tracer_ioctl

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#204: FILE: include/linux/trace.h:121:
+int tracer_ioctl

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: include/linux/trace.h:122:
+ (struct inode *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: include/linux/trace.h:123:
+  struct file *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: include/linux/trace.h:124:
+  unsigned int,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: include/linux/trace.h:125:
+  unsigned long);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#209: FILE: include/linux/trace.h:126:
+int tracer_mmap

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#209: FILE: include/linux/trace.h:126:
+int tracer_mmap

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: include/linux/trace.h:127:
+ (struct file *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: include/linux/trace.h:128:
+  struct vm_area_struct *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#212: FILE: include/linux/trace.h:129:
+int tracer_open

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#212: FILE: include/linux/trace.h:129:
+int tracer_open

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: include/linux/trace.h:130:
+ (struct inode *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: include/linux/trace.h:131:
+  struct file *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#215: FILE: include/linux/trace.h:132:
+int tracer_release

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#215: FILE: include/linux/trace.h:132:
+int tracer_release

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: include/linux/trace.h:133:
+ (struct inode *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: include/linux/trace.h:134:
+  struct file *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#218: FILE: include/linux/trace.h:135:
+int tracer_fsync

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#218: FILE: include/linux/trace.h:135:
+int tracer_fsync

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#218: FILE: include/linux/trace.h:135:
+int tracer_fsync

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: include/linux/trace.h:136:
+ (struct file *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: include/linux/trace.h:137:
+  struct dentry *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: include/linux/trace.h:138:
+  int);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#222: FILE: include/linux/trace.h:139:
+int tracer_set_buffer_size

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: include/linux/trace.h:140:
+ (int);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#224: FILE: include/linux/trace.h:141:
+int tracer_set_n_buffers

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: include/linux/trace.h:142:
+ (int);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: include/linux/trace.h:144:
+ (void);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#230: FILE: include/linux/trace.h:147:
+static inline void TRACE_EVENT(u8 event_id, void* data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'begining' may be misspelled - perhaps 'beginning'?
#254: FILE: include/linux/trace.h:171:
+#define TRACE_EV_BUFFER_START   17	/* Mark the begining of a trace buffer */
                                   	            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#268: FILE: include/linux/trace.h:185:
+#define TRACER_MAGIC_NUMBER     0x00D6B7ED	/* That day marks an important historical event ... */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:NEW_TYPEDEFS: do not add new typedefs
#271: FILE: include/linux/trace.h:188:
+typedef struct _trace_start {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#287: FILE: include/linux/trace.h:204:
+typedef struct _trace_syscall_entry {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#294: FILE: include/linux/trace.h:211:
+typedef struct _trace_trap_entry {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#296: FILE: include/linux/trace.h:213:
+	u32 address;		/* Address where trap occured */
 	            		                      ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#301: FILE: include/linux/trace.h:218:
+typedef struct _trace_trap_entry {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#303: FILE: include/linux/trace.h:220:
+	u32 address;		/* Address where trap occured */
 	            		                      ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#323: FILE: include/linux/trace.h:240:
+typedef struct _trace_irq_entry {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#344: FILE: include/linux/trace.h:261:
+typedef struct _trace_schedchange {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/linux/trace.h:266:
+static inline void TRACE_SCHEDCHANGE(task_t * task_out, task_t * task_in)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/linux/trace.h:266:
+static inline void TRACE_SCHEDCHANGE(task_t * task_out, task_t * task_in)

CHECK:SPACING: No space is necessary after a cast
#353: FILE: include/linux/trace.h:270:
+	sched_event.out = (u32) task_out->pid;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#354: FILE: include/linux/trace.h:271:
+	sched_event.in = (u32) task_in;

CHECK:SPACING: No space is necessary after a cast
#355: FILE: include/linux/trace.h:272:
+	sched_event.out_state = (u32) task_out->state;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#365: FILE: include/linux/trace.h:282:
+typedef struct _trace_soft_irq {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#381: FILE: include/linux/trace.h:298:
+#define TRACE_EV_PROCESS_FORK        2	/* A fork or clone occured */
                                       	                   ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#382: FILE: include/linux/trace.h:299:
+#define TRACE_EV_PROCESS_EXIT        3	/* An exit occured */
                                       	           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#383: FILE: include/linux/trace.h:300:
+#define TRACE_EV_PROCESS_WAIT        4	/* A wait occured */
                                       	          ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#386: FILE: include/linux/trace.h:303:
+typedef struct _trace_process {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#405: FILE: include/linux/trace.h:322:
+#define TRACE_EV_FILE_SYSTEM_EXEC            3	/* An exec occured */
                                               	           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#406: FILE: include/linux/trace.h:323:
+#define TRACE_EV_FILE_SYSTEM_OPEN            4	/* An open occured */
                                               	           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#407: FILE: include/linux/trace.h:324:
+#define TRACE_EV_FILE_SYSTEM_CLOSE           5	/* A close occured */
                                               	           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#408: FILE: include/linux/trace.h:325:
+#define TRACE_EV_FILE_SYSTEM_READ            6	/* A read occured */
                                               	          ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#409: FILE: include/linux/trace.h:326:
+#define TRACE_EV_FILE_SYSTEM_WRITE           7	/* A write occured */
                                               	           ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#410: FILE: include/linux/trace.h:327:
+#define TRACE_EV_FILE_SYSTEM_SEEK            8	/* A seek occured */
                                               	          ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#411: FILE: include/linux/trace.h:328:
+#define TRACE_EV_FILE_SYSTEM_IOCTL           9	/* An ioctl occured */
                                               	            ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#412: FILE: include/linux/trace.h:329:
+#define TRACE_EV_FILE_SYSTEM_SELECT         10	/* A select occured */
                                               	            ^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#413: FILE: include/linux/trace.h:330:
+#define TRACE_EV_FILE_SYSTEM_POLL           11	/* A poll occured */
                                               	          ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#414: FILE: include/linux/trace.h:331:
+typedef struct _trace_file_system {

CHECK:SPACING: No space is necessary after a cast
#427: FILE: include/linux/trace.h:344:
+	fs_event.file_name = (char*) file_name;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#427: FILE: include/linux/trace.h:344:
+	fs_event.file_name = (char*) file_name;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#436: FILE: include/linux/trace.h:353:
+typedef struct _trace_timer {

WARNING:TYPO_SPELLING: 'Swaping' may be misspelled - perhaps 'Swapping'?
#457: FILE: include/linux/trace.h:374:
+#define TRACE_EV_MEMORY_SWAP_IN           3	/* Swaping pages in */
                                            	   ^^^^^^^

WARNING:TYPO_SPELLING: 'Swaping' may be misspelled - perhaps 'Swapping'?
#458: FILE: include/linux/trace.h:375:
+#define TRACE_EV_MEMORY_SWAP_OUT          4	/* Swaping pages out */
                                            	   ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#461: FILE: include/linux/trace.h:378:
+typedef struct _trace_memory {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#476: FILE: include/linux/trace.h:393:
+#define TRACE_EV_SOCKET_CALL     1	/* A socket call occured */
                                   	                 ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#480: FILE: include/linux/trace.h:397:
+typedef struct _trace_socket {

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#497: FILE: include/linux/trace.h:414:
+#define TRACE_EV_IPC_CALL            1	/* A System V IPC call occured */
                                       	                       ^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#501: FILE: include/linux/trace.h:418:
+typedef struct _trace_ipc {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#520: FILE: include/linux/trace.h:437:
+typedef struct _trace_network {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#535: FILE: include/linux/trace.h:452:
+typedef struct _trace_buffer_start {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#542: FILE: include/linux/trace.h:459:
+typedef struct _trace_buffer_end {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#549: FILE: include/linux/trace.h:466:
+/* ***WARNING*** These structures should never be used as is, use the provided custom
+   event creation and logging functions. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#549: FILE: include/linux/trace.h:466:
+   event creation and logging functions. */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#550: FILE: include/linux/trace.h:467:
+typedef struct _trace_new_event {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#560: FILE: include/linux/trace.h:477:
+typedef struct _trace_custom {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#567: FILE: include/linux/trace.h:484:
+typedef struct _trace_change_mask {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#571: FILE: include/linux/trace.h:488:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#589: FILE: include/linux/trace.h:506:
+#define TRACER_FIRST_EVENT_SIZE   (sizeof(u8) + sizeof(trace_time_delta) + sizeof(trace_buffer_start) + sizeof(uint16_t))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#595: FILE: include/linux/trace.h:512:
+#define TRACER_START                      TRACER_MAGIC_NUMBER + 0	/* Start tracing events using the current configuration */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#595: FILE: include/linux/trace.h:512:
+#define TRACER_START                      TRACER_MAGIC_NUMBER + 0	/* Start tracing events using the current configuration */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#596: FILE: include/linux/trace.h:513:
+#define TRACER_STOP                       TRACER_MAGIC_NUMBER + 1	/* Stop tracing */

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#597: FILE: include/linux/trace.h:514:
+#define TRACER_CONFIG_DEFAULT             TRACER_MAGIC_NUMBER + 2	/* Set the tracer to the default configuration */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#597: FILE: include/linux/trace.h:514:
+#define TRACER_CONFIG_DEFAULT             TRACER_MAGIC_NUMBER + 2	/* Set the tracer to the default configuration */

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#598: FILE: include/linux/trace.h:515:
+#define TRACER_CONFIG_MEMORY_BUFFERS      TRACER_MAGIC_NUMBER + 3	/* Set the memory buffers the daemon wants us to use */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#598: FILE: include/linux/trace.h:515:
+#define TRACER_CONFIG_MEMORY_BUFFERS      TRACER_MAGIC_NUMBER + 3	/* Set the memory buffers the daemon wants us to use */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#599: FILE: include/linux/trace.h:516:
+#define TRACER_CONFIG_EVENTS              TRACER_MAGIC_NUMBER + 4	/* Trace the given events */

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#600: FILE: include/linux/trace.h:517:
+#define TRACER_CONFIG_DETAILS             TRACER_MAGIC_NUMBER + 5	/* Record the details of the event, or not */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#600: FILE: include/linux/trace.h:517:
+#define TRACER_CONFIG_DETAILS             TRACER_MAGIC_NUMBER + 5	/* Record the details of the event, or not */

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#601: FILE: include/linux/trace.h:518:
+#define TRACER_CONFIG_CPUID               TRACER_MAGIC_NUMBER + 6	/* Record the CPUID associated with the event */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#601: FILE: include/linux/trace.h:518:
+#define TRACER_CONFIG_CPUID               TRACER_MAGIC_NUMBER + 6	/* Record the CPUID associated with the event */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#602: FILE: include/linux/trace.h:519:
+#define TRACER_CONFIG_PID                 TRACER_MAGIC_NUMBER + 7	/* Trace only one process */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#603: FILE: include/linux/trace.h:520:
+#define TRACER_CONFIG_PGRP                TRACER_MAGIC_NUMBER + 8	/* Trace only the given process group */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#603: FILE: include/linux/trace.h:520:
+#define TRACER_CONFIG_PGRP                TRACER_MAGIC_NUMBER + 8	/* Trace only the given process group */

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#604: FILE: include/linux/trace.h:521:
+#define TRACER_CONFIG_GID                 TRACER_MAGIC_NUMBER + 9	/* Trace the processes of a given group of users */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#604: FILE: include/linux/trace.h:521:
+#define TRACER_CONFIG_GID                 TRACER_MAGIC_NUMBER + 9	/* Trace the processes of a given group of users */

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#605: FILE: include/linux/trace.h:522:
+#define TRACER_CONFIG_UID                 TRACER_MAGIC_NUMBER + 10	/* Trace the processes of a given user */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#605: FILE: include/linux/trace.h:522:
+#define TRACER_CONFIG_UID                 TRACER_MAGIC_NUMBER + 10	/* Trace the processes of a given user */

WARNING:LONG_LINE_COMMENT: line length of 142 exceeds 100 columns
#606: FILE: include/linux/trace.h:523:
+#define TRACER_CONFIG_SYSCALL_EIP_DEPTH   TRACER_MAGIC_NUMBER + 11	/* Set the call depth at which the EIP should be fetched on syscall */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#606: FILE: include/linux/trace.h:523:
+#define TRACER_CONFIG_SYSCALL_EIP_DEPTH   TRACER_MAGIC_NUMBER + 11	/* Set the call depth at which the EIP should be fetched on syscall */

WARNING:LONG_LINE_COMMENT: line length of 142 exceeds 100 columns
#607: FILE: include/linux/trace.h:524:
+#define TRACER_CONFIG_SYSCALL_EIP_LOWER   TRACER_MAGIC_NUMBER + 12	/* Set the lowerbound address from which EIP is recorded on syscall */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#607: FILE: include/linux/trace.h:524:
+#define TRACER_CONFIG_SYSCALL_EIP_LOWER   TRACER_MAGIC_NUMBER + 12	/* Set the lowerbound address from which EIP is recorded on syscall */

WARNING:LONG_LINE_COMMENT: line length of 142 exceeds 100 columns
#608: FILE: include/linux/trace.h:525:
+#define TRACER_CONFIG_SYSCALL_EIP_UPPER   TRACER_MAGIC_NUMBER + 13	/* Set the upperbound address from which EIP is recorded on syscall */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#608: FILE: include/linux/trace.h:525:
+#define TRACER_CONFIG_SYSCALL_EIP_UPPER   TRACER_MAGIC_NUMBER + 13	/* Set the upperbound address from which EIP is recorded on syscall */

WARNING:TYPO_SPELLING: 'comitted' may be misspelled - perhaps 'committed'?
#609: FILE: include/linux/trace.h:526:
+#define TRACER_DATA_COMITTED              TRACER_MAGIC_NUMBER + 14	/* The daemon has comitted the last trace */
                                                                   	                  ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 116 exceeds 100 columns
#609: FILE: include/linux/trace.h:526:
+#define TRACER_DATA_COMITTED              TRACER_MAGIC_NUMBER + 14	/* The daemon has comitted the last trace */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#609: FILE: include/linux/trace.h:526:
+#define TRACER_DATA_COMITTED              TRACER_MAGIC_NUMBER + 14	/* The daemon has comitted the last trace */

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#610: FILE: include/linux/trace.h:527:
+#define TRACER_GET_EVENTS_LOST            TRACER_MAGIC_NUMBER + 15	/* Get the number of events lost */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#610: FILE: include/linux/trace.h:527:
+#define TRACER_GET_EVENTS_LOST            TRACER_MAGIC_NUMBER + 15	/* Get the number of events lost */

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#611: FILE: include/linux/trace.h:528:
+#define TRACER_CREATE_USER_EVENT          TRACER_MAGIC_NUMBER + 16	/* Create a user tracable event */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#611: FILE: include/linux/trace.h:528:
+#define TRACER_CREATE_USER_EVENT          TRACER_MAGIC_NUMBER + 16	/* Create a user tracable event */

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#612: FILE: include/linux/trace.h:529:
+#define TRACER_DESTROY_USER_EVENT         TRACER_MAGIC_NUMBER + 17	/* Destroy a user tracable event */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#612: FILE: include/linux/trace.h:529:
+#define TRACER_DESTROY_USER_EVENT         TRACER_MAGIC_NUMBER + 17	/* Destroy a user tracable event */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#613: FILE: include/linux/trace.h:530:
+#define TRACER_TRACE_USER_EVENT           TRACER_MAGIC_NUMBER + 18	/* Trace a user event */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#614: FILE: include/linux/trace.h:531:
+#define TRACER_SET_EVENT_MASK             TRACER_MAGIC_NUMBER + 19	/* Set the trace event mask */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#614: FILE: include/linux/trace.h:531:
+#define TRACER_SET_EVENT_MASK             TRACER_MAGIC_NUMBER + 19	/* Set the trace event mask */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#615: FILE: include/linux/trace.h:532:
+#define TRACER_GET_EVENT_MASK             TRACER_MAGIC_NUMBER + 20	/* Get the trace event mask */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#615: FILE: include/linux/trace.h:532:
+#define TRACER_GET_EVENT_MASK             TRACER_MAGIC_NUMBER + 20	/* Get the trace event mask */

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#616: FILE: include/linux/trace.h:533:
+#define TRACER_GET_BUFFER_CONTROL         TRACER_MAGIC_NUMBER + 21	/* Get the buffer control data for the lockless schem*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#616: FILE: include/linux/trace.h:533:
+#define TRACER_GET_BUFFER_CONTROL         TRACER_MAGIC_NUMBER + 21	/* Get the buffer control data for the lockless schem*/

WARNING:LONG_LINE_COMMENT: line length of 137 exceeds 100 columns
#617: FILE: include/linux/trace.h:534:
+#define TRACER_CONFIG_N_MEMORY_BUFFERS    TRACER_MAGIC_NUMBER + 22	/* Set the number of memory buffers the daemon wants us to use */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#617: FILE: include/linux/trace.h:534:
+#define TRACER_CONFIG_N_MEMORY_BUFFERS    TRACER_MAGIC_NUMBER + 22	/* Set the number of memory buffers the daemon wants us to use */

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#618: FILE: include/linux/trace.h:535:
+#define TRACER_CONFIG_USE_LOCKING         TRACER_MAGIC_NUMBER + 23      /* Set the locking scheme to use */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#618: FILE: include/linux/trace.h:535:
+#define TRACER_CONFIG_USE_LOCKING         TRACER_MAGIC_NUMBER + 23      /* Set the locking scheme to use */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#619: FILE: include/linux/trace.h:536:
+#define TRACER_CONFIG_TIMESTAMP           TRACER_MAGIC_NUMBER + 24      /* Set the timestamping method to use */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#619: FILE: include/linux/trace.h:536:
+#define TRACER_CONFIG_TIMESTAMP           TRACER_MAGIC_NUMBER + 24      /* Set the timestamping method to use */

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#620: FILE: include/linux/trace.h:537:
+#define TRACER_GET_ARCH_INFO              TRACER_MAGIC_NUMBER + 25      /* Get information about the CPU configuration */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#620: FILE: include/linux/trace.h:537:
+#define TRACER_GET_ARCH_INFO              TRACER_MAGIC_NUMBER + 25      /* Get information about the CPU configuration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#623: FILE: include/linux/trace.h:540:
+/* For the lockless scheme:
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: include/linux/trace.h:541:
+   A trace index is composed of two parts, a buffer number and a buffer $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: include/linux/trace.h:542:
+   offset.  The actual number of buffers allocated is a run-time decision, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: include/linux/trace.h:543:
+   although it must be a power of two for efficient computation.  We define $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: include/linux/trace.h:544:
+   a maximum number of bits for the buffer number, because the fill_count $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#628: FILE: include/linux/trace.h:545:
+   array in buffer_control must have a fixed size.  offset_bits must be at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: include/linux/trace.h:547:
+   lost size word (since a buffer must be able to hold an event of maximum $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: include/linux/trace.h:548:
+   size).  Making offset_bits larger reduces fragmentation.  Making it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#632: FILE: include/linux/trace.h:549:
+   smaller increases trace responsiveness. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#635: FILE: include/linux/trace.h:552:
+/* We need at least enough room for the max custom event, and we also need
+   room for the start and end event.  We also need it to be a power of 2. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#635: FILE: include/linux/trace.h:552:
+   room for the start and end event.  We also need it to be a power of 2. */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#636: FILE: include/linux/trace.h:553:
+#define TRACER_LOCKLESS_MIN_BUF_SIZE CUSTOM_EVENT_MAX_SIZE + 8192 /* 16K */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#638: FILE: include/linux/trace.h:555:
+/* Because we use atomic_t as the type for fill_counts, which has only 24
+   usable bits, we have 2**24 = 16M max for each buffer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: include/linux/trace.h:555:
+   usable bits, we have 2**24 = 16M max for each buffer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#641: FILE: include/linux/trace.h:558:
+/* Since we multiply n buffers by the buffer size, this provides a sanity
+   check, much less than the 256*16M possible. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#641: FILE: include/linux/trace.h:558:
+   check, much less than the 256*16M possible. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#668: FILE: include/linux/trace.h:585:
+struct lockless_buffer_control
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: include/linux/trace.h:596:
+^Iu32 last_event_index; /* For full-buffers state */ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#687: FILE: include/linux/trace.h:604:
+struct locking_buffer_control
+{

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#688: FILE: include/linux/trace.h:605:
+	char* write_buf; /* Buffer used for writting */
 	                                    ^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#688: FILE: include/linux/trace.h:605:
+	char* write_buf; /* Buffer used for writting */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#689: FILE: include/linux/trace.h:606:
+	char* read_buf; /* Buffer used for reading */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#690: FILE: include/linux/trace.h:607:
+	char* write_buf_end; /* End of write buffer */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#691: FILE: include/linux/trace.h:608:
+	char* read_buf_end; /* End of read buffer */

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#692: FILE: include/linux/trace.h:609:
+	char* current_write_pos; /* Current position for writting */
 	                                                 ^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#692: FILE: include/linux/trace.h:609:
+	char* current_write_pos; /* Current position for writting */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#693: FILE: include/linux/trace.h:610:
+	char* read_limit; /* Limit at which read should stop */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#694: FILE: include/linux/trace.h:611:
+	char* write_limit; /* Limit at which write should stop */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: include/linux/trace.h:615:
+/* Data structure containing per-buffer tracing information. */ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#700: FILE: include/linux/trace.h:617:
+struct buffer_control
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: include/linux/trace.h:625:
+^Iunion $

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#709: FILE: include/linux/trace.h:626:
+	union 
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: include/linux/trace.h:632:
+/* Data structure for sharing per-buffer information between driver and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#716: FILE: include/linux/trace.h:633:
+/* Data structure for sharing per-buffer information between driver and 
+   daemon (via ioctl) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#716: FILE: include/linux/trace.h:633:
+   daemon (via ioctl) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#718: FILE: include/linux/trace.h:635:
+struct shared_buffer_control
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: include/linux/trace.h:648:
+/* Data structure for sharing buffer-commit information between driver and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#732: FILE: include/linux/trace.h:649:
+/* Data structure for sharing buffer-commit information between driver and 
+   daemon (via ioctl) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#732: FILE: include/linux/trace.h:649:
+   daemon (via ioctl) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#734: FILE: include/linux/trace.h:651:
+struct buffers_committed
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: include/linux/trace.h:656:
+/* Data structure for sharing architecture-specific info between driver and $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#740: FILE: include/linux/trace.h:657:
+/* Data structure for sharing architecture-specific info between driver and 
+   daemon (via ioctl) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#740: FILE: include/linux/trace.h:657:
+   daemon (via ioctl) */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#742: FILE: include/linux/trace.h:659:
+struct ltt_arch_info
+{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#748: FILE: include/linux/trace.h:665:
+#define _index(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.index)
                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#750: FILE: include/linux/trace.h:667:
+#define _bufno_bits(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.bufno_bits)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#752: FILE: include/linux/trace.h:669:
+#define _n_buffers(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.n_buffers)
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#754: FILE: include/linux/trace.h:671:
+#define _offset_bits(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.offset_bits)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#756: FILE: include/linux/trace.h:673:
+#define _offset_mask(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.offset_mask)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#758: FILE: include/linux/trace.h:675:
+#define _index_mask(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.index_mask)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#760: FILE: include/linux/trace.h:677:
+#define _buffers_produced(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.buffers_produced)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#762: FILE: include/linux/trace.h:679:
+#define _buffers_consumed(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.buffers_consumed)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#764: FILE: include/linux/trace.h:681:
+#define _buffers_full(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.buffers_full)
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#766: FILE: include/linux/trace.h:683:
+#define _fill_count(sbc, cpu, i) (((sbc)+(cpu))->scheme.lockless.fill_count[(i)])
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#768: FILE: include/linux/trace.h:685:
+#define _trace_buffer(sbc, cpu) (((sbc)+(cpu))->trace_buffer)
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#770: FILE: include/linux/trace.h:687:
+#define _buffer_id(sbc, cpu) (((sbc)+(cpu))->buffer_id)
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#772: FILE: include/linux/trace.h:689:
+#define _events_lost(sbc, cpu) (((sbc)+(cpu))->events_lost)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#774: FILE: include/linux/trace.h:691:
+#define _buffer_start_time(sbc, cpu) (((sbc)+(cpu))->buffer_start_time)
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#776: FILE: include/linux/trace.h:693:
+#define _buffer_start_tsc(sbc, cpu) (((sbc)+(cpu))->buffer_start_tsc)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#778: FILE: include/linux/trace.h:695:
+#define _last_event_index(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.last_event_index)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#780: FILE: include/linux/trace.h:697:
+#define _last_event_timestamp(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.last_event_timestamp)
                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#782: FILE: include/linux/trace.h:699:
+#define _last_event_tsc(sbc, cpu) (((sbc)+(cpu))->scheme.lockless.last_event_tsc)
                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#784: FILE: include/linux/trace.h:701:
+#define _write_buf(sbc, cpu) (((sbc)+(cpu))->scheme.locking.write_buf)
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#786: FILE: include/linux/trace.h:703:
+#define _read_buf(sbc, cpu) (((sbc)+(cpu))->scheme.locking.read_buf)
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#788: FILE: include/linux/trace.h:705:
+#define _write_buf_end(sbc, cpu) (((sbc)+(cpu))->scheme.locking.write_buf_end)
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#790: FILE: include/linux/trace.h:707:
+#define _read_buf_end(sbc, cpu) (((sbc)+(cpu))->scheme.locking.read_buf_end)
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#792: FILE: include/linux/trace.h:709:
+#define _current_write_pos(sbc, cpu) (((sbc)+(cpu))->scheme.locking.current_write_pos)
                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#794: FILE: include/linux/trace.h:711:
+#define _read_limit(sbc, cpu) (((sbc)+(cpu))->scheme.locking.read_limit)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#796: FILE: include/linux/trace.h:713:
+#define _write_limit(sbc, cpu) (((sbc)+(cpu))->scheme.locking.write_limit)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#798: FILE: include/linux/trace.h:715:
+#define _signal_sent(sbc, cpu) (((sbc)+(cpu))->scheme.locking.signal_sent)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#800: FILE: include/linux/trace.h:717:
+#define _waiting_for_cpu(sbc, cpu) (((sbc)+(cpu))->waiting_for_cpu)
                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#815: FILE: include/linux/trace.h:732:
+^Iatomic_set(&waiting_for_cpu(cpu_id), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: include/linux/trace.h:745:
+^Iatomic_set(&waiting_for_cpu(cpu_id), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: include/linux/trace.h:760:
+static inline trace_time_delta calc_time_delta(struct timeval *now, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: include/linux/trace.h:774:
+ *^Ithe buffer start time and now, if TSC timestamping is being used. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: include/linux/trace.h:776:
+static inline void recalc_time_delta(struct timeval *now, $

ERROR:SPACING: space required before the open parenthesis '('
#863: FILE: include/linux/trace.h:780:
+	if(using_tsc == FALSE)

CHECK:BOOL_COMPARISON: Using comparison to FALSE is error prone
#863: FILE: include/linux/trace.h:780:
+	if(using_tsc == FALSE)

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: include/linux/trace.h:790:
+ *^Itime difference between the current time and the buffer start time $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#881: FILE: include/linux/trace.h:798:
+#if defined (__i386__) || defined (__x86_64__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#881: FILE: include/linux/trace.h:798:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#881: FILE: include/linux/trace.h:798:
+#if defined (__i386__) || defined (__x86_64__)

Architecture specific defines should be avoided wherever
possible.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'using_tsc == TRUE'
#882: FILE: include/linux/trace.h:799:
+	if((using_tsc == TRUE) && cpu_has_tsc)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#882: FILE: include/linux/trace.h:799:
+	if((using_tsc == TRUE) && cpu_has_tsc)

CHECK:BRACES: braces {} should be used on all arms of this statement
#882: FILE: include/linux/trace.h:799:
+	if((using_tsc == TRUE) && cpu_has_tsc)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BOOL_COMPARISON: Using comparison to TRUE is error prone
#882: FILE: include/linux/trace.h:799:
+	if((using_tsc == TRUE) && cpu_has_tsc)

CHECK:BRACES: Unbalanced braces around else statement
#884: FILE: include/linux/trace.h:801:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: include/linux/trace.h:805:
+#else^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: include/linux/trace.h:819:
+ *^Ipointed to by tsc to the tsc associated with that time, if the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#905: FILE: include/linux/trace.h:822:
+static inline void get_timestamp(struct timeval *now, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#910: FILE: include/linux/trace.h:827:
+#if defined (__i386__) || defined (__x86_64__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#910: FILE: include/linux/trace.h:827:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#910: FILE: include/linux/trace.h:827:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'using_tsc == TRUE'
#911: FILE: include/linux/trace.h:828:
+	if((using_tsc == TRUE) && cpu_has_tsc)

ERROR:SPACING: space required before the open parenthesis '('
#911: FILE: include/linux/trace.h:828:
+	if((using_tsc == TRUE) && cpu_has_tsc)

CHECK:BOOL_COMPARISON: Using comparison to TRUE is error prone
#911: FILE: include/linux/trace.h:828:
+	if((using_tsc == TRUE) && cpu_has_tsc)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#925: FILE: include/linux/trace.h:842:
+static inline void get_time_or_tsc(struct timeval *now, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: include/linux/trace.h:845:
+#if defined (__i386__) || defined (__x86_64__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#928: FILE: include/linux/trace.h:845:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#928: FILE: include/linux/trace.h:845:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'using_tsc == TRUE'
#929: FILE: include/linux/trace.h:846:
+	if((using_tsc == TRUE) && cpu_has_tsc)

ERROR:SPACING: space required before the open parenthesis '('
#929: FILE: include/linux/trace.h:846:
+	if((using_tsc == TRUE) && cpu_has_tsc)

CHECK:BOOL_COMPARISON: Using comparison to TRUE is error prone
#929: FILE: include/linux/trace.h:846:
+	if((using_tsc == TRUE) && cpu_has_tsc)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#931: FILE: include/linux/trace.h:848:
+	else
[...]
+	do_gettimeofday(now);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: include/linux/trace.h:855:
+ *^I@time_delta: previously calculated or retrieved time delta $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: include/linux/trace.h:862:
+#if defined (__i386__) || defined (__x86_64__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: include/linux/trace.h:862:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#945: FILE: include/linux/trace.h:862:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'using_tsc == TRUE'
#946: FILE: include/linux/trace.h:863:
+	if((using_tsc == TRUE) && cpu_has_tsc)

ERROR:SPACING: space required before the open parenthesis '('
#946: FILE: include/linux/trace.h:863:
+	if((using_tsc == TRUE) && cpu_has_tsc)

CHECK:BOOL_COMPARISON: Using comparison to TRUE is error prone
#946: FILE: include/linux/trace.h:863:
+	if((using_tsc == TRUE) && cpu_has_tsc)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#953: FILE: include/linux/trace.h:870:
+ *	have_tsc: - Does this platform have a useable TSC?
   	                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#955: FILE: include/linux/trace.h:872:
+ *	Returns TRUE if this platform has a useable TSC counter for
   	                                    ^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#960: FILE: include/linux/trace.h:877:
+#if defined (__i386__) || defined (__x86_64__)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#960: FILE: include/linux/trace.h:877:
+#if defined (__i386__) || defined (__x86_64__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#960: FILE: include/linux/trace.h:877:
+#if defined (__i386__) || defined (__x86_64__)

ERROR:SPACING: space required before the open parenthesis '('
#961: FILE: include/linux/trace.h:878:
+	if(cpu_has_tsc)

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#970: FILE: include/linux/trace.h:887:
+ *	Returns TRUE if this platform has a cmpxchg useable by 
   	                                            ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: include/linux/trace.h:887:
+ *^IReturns TRUE if this platform has a cmpxchg useable by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: include/linux/trace.h:898:
+/* If cmpxchg isn't defined for the architecture, we don't want to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: include/linux/trace.h:899:
+   generate a link error - the locking scheme will still be available. */  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#982: FILE: include/linux/trace.h:899:
+/* If cmpxchg isn't defined for the architecture, we don't want to 
+   generate a link error - the locking scheme will still be available. */  

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#982: FILE: include/linux/trace.h:899:
+   generate a link error - the locking scheme will still be available. */  

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: include/linux/trace.h:901:
+#define cmpxchg(p,o,n) 0
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#984: FILE: include/linux/trace.h:901:
+#define cmpxchg(p,o,n) 0
                    ^

WARNING:INLINE: plain inline is preferred over __inline__
#987: FILE: include/linux/trace.h:904:
+extern __inline__ int ltt_set_bit(int nr, void *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#1000: FILE: include/linux/trace.h:917:
+extern __inline__ int ltt_clear_bit(int nr, void *addr)

WARNING:INLINE: plain inline is preferred over __inline__
#1013: FILE: include/linux/trace.h:930:
+extern __inline__ int ltt_test_bit(int nr, void *addr)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 81 errors, 207 warnings, 48 checks, 1005 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
