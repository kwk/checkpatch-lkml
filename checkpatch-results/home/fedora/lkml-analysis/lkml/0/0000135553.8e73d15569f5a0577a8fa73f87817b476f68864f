WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#55: FILE: fs/relayfs/inode.c:256:
+static int relay_file_open(struct inode *inode, struct file *filp)
                                                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#71: FILE: fs/relayfs/inode.c:272:
+static int relay_file_mmap(struct file *filp, struct vm_area_struct *vma)
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#86: FILE: fs/relayfs/inode.c:285:
+static unsigned int relay_file_poll(struct file *filp, poll_table *wait)
                                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#103: FILE: fs/relayfs/inode.c:310:
+static int relay_file_release(struct inode *inode, struct file *filp)
                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#207: FILE: fs/relayfs/inode.c:468:
+static ssize_t relay_file_read(struct file *filp,
                                             ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: fs/relayfs/inode.c:480:
+	if(!relay_file_read_avail(buf, *ppos))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#247: FILE: fs/relayfs/inode.c:501:
+struct file_operations relay_file_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#262: FILE: fs/relayfs/inode.c:561:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#263: FILE: fs/relayfs/inode.c:562:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: fs/relayfs/inode.c:564:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#274: FILE: fs/relayfs/inode.c:572:
+EXPORT_SYMBOL_GPL(relay_file_operations);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#302: FILE: include/linux/relayfs_fs.h:283:
+extern struct file_operations relay_file_operations;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 3 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000135553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
