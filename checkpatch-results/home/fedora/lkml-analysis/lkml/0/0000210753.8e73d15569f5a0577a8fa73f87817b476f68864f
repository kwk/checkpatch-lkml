WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
The following patch is (yet) an(other) attempt to eliminate the need for using higher

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#33: 
order memory allocations on resume.  It accomplishes this by replacing the array
                                    ^

WARNING:TYPO_SPELLING: 'availble' may be misspelled - perhaps 'available'?
#42: 
availble at:
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#124: FILE: arch/x86_64/kernel/suspend_asm.S:1:
+/* Copyright 2004,2005 Pavel Machek <pavel@suse.cz>, Andi Kleen <ak@suse.de>, Rafael J. Wysocki <rjw@sisk.pl>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#124: FILE: arch/x86_64/kernel/suspend_asm.S:1:
+/* Copyright 2004,2005 Pavel Machek <pavel@suse.cz>, Andi Kleen <ak@suse.de>, Rafael J. Wysocki <rjw@sisk.pl>

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/x86_64/kernel/suspend_asm.S:4:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#190: FILE: kernel/power/swsusp.c:954:
+static void **eaten_memory = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#194: FILE: kernel/power/swsusp.c:956:
+static unsigned long __init get_usable_page(unsigned gfp_mask) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#194: FILE: kernel/power/swsusp.c:956:
+static unsigned long __init get_usable_page(unsigned gfp_mask) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#215: FILE: kernel/power/swsusp.c:972:
+static void __init free_eaten_memory(void) {

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: kernel/power/swsusp.c:1006:
+		if(!p->address)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: kernel/power/swsusp.c:1030:
+	pr_debug("swsusp: Relocating pagedir (%lu pages to check)\n",
+			swsusp_info.pagedir_pages);

CHECK:BRACES: braces {} should be used on all arms of this statement
#351: FILE: kernel/power/swsusp.c:1076:
+	if (error) {
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#352: FILE: kernel/power/swsusp.c:1077:
+		printk("\nswsusp: Out of memory\n\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#357: FILE: kernel/power/swsusp.c:1082:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#358: FILE: kernel/power/swsusp.c:1083:
+		printk("swsusp: Relocated %d pages\n", rel);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#402: FILE: kernel/power/swsusp.c:1246:
+	printk("swsusp: Reading image data (%lu pages):     ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: kernel/power/swsusp.c:1247:
+	printk("swsusp: Reading image data (%lu pages):     ",
+			swsusp_info.image_pages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#407: FILE: kernel/power/swsusp.c:1251:
+			printk("\b\b\b\b%3d%%", i / mod);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#421: FILE: kernel/power/swsusp.c:1260:
+	printk("\b\b\b\bdone\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#442: FILE: kernel/power/swsusp.c:1276:
+	unsigned nr_pages = swsusp_info.image_pages;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#443: FILE: kernel/power/swsusp.c:1277:
+	unsigned num, i = 0;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#456: FILE: kernel/power/swsusp.c:1285:
+	printk("swsusp: Reading pagedir (%lu pages)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: kernel/power/swsusp.c:1286:
+	printk("swsusp: Reading pagedir (%lu pages)\n",
+			swsusp_info.pagedir_pages);

WARNING:SPACING: space prohibited before semicolon
#473: FILE: kernel/power/swsusp.c:1302:
+	for (pbe = pblist, num = PBES_PER_PAGE ; pbe && num < nr_pages ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: kernel/power/swsusp.c:1303:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#474: FILE: kernel/power/swsusp.c:1303:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/power/swsusp.c:1303:
+        ^I^Ipbe = pbe->next, num += PBES_PER_PAGE) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#492: FILE: kernel/power/swsusp.c:1318:
+		if (error) {
[...]
 		else
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#520: FILE: kernel/power/swsusp.c:1341:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#536: FILE: kernel/power/swsusp.c:1353:
+	if(!(p = read_pagedir()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#536: FILE: kernel/power/swsusp.c:1353:
+	if(!(p = read_pagedir()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#539: FILE: kernel/power/swsusp.c:1356:
+	if(!(pagedir_nosave = swsusp_pagedir_relocate(p)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#539: FILE: kernel/power/swsusp.c:1356:
+	if(!(pagedir_nosave = swsusp_pagedir_relocate(p)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 16 warnings, 7 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
