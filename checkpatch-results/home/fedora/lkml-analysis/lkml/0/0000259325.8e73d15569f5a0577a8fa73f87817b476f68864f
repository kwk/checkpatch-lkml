WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#33: 
> drivers people, and also prepares way to add runtime power managment
                                                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
--- tmp/linux/drivers/base/power/power.h	2004-08-15 19:14:55.000000000 +0200

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: drivers/base/power/power.h:1:
+/* FIXME: This needs explanation... */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: drivers/base/power/power.h:68:
+extern int suspend_device(struct device *, enum system_state);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#58: FILE: drivers/base/power/power.h:68:
+extern int suspend_device(struct device *, enum system_state);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: drivers/base/power/power.h:75:
+extern int dpm_runtime_suspend(struct device *, enum system_state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#66: FILE: drivers/base/power/power.h:75:
+extern int dpm_runtime_suspend(struct device *, enum system_state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: drivers/base/power/power.h:90:
+static inline int dpm_runtime_suspend(struct device * dev, enum system_state state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#87: FILE: drivers/base/power/shutdown.c:33:
+	return dpm_runtime_suspend(dev, (enum system_state) dev->detach_state);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#106: FILE: drivers/base/power/suspend.c:39:
+int suspend_device(struct device * dev, enum system_state state)

WARNING:SPACING: Unnecessary space before function pointer arguments
#143: FILE: include/linux/pci.h:641:
+	int  (*suspend) (struct pci_dev *dev, suspend_state_t reason);	/* Device suspended */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#169: FILE: include/linux/pci.h:1043:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#196: FILE: include/linux/pm.h:206:
+ * structure or something to enable runtime power managment.
                                                   ^^^^^^^^^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#198: FILE: include/linux/pm.h:208:
+typedef enum system_state suspend_state_t;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#200: FILE: include/linux/pm.h:210:
+#define SUSPEND_EQ(a, b) (a == b)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#200: FILE: include/linux/pm.h:210:
+#define SUSPEND_EQ(a, b) (a == b)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/linux/pm.h:254:
+extern int device_suspend(enum system_state reason);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: include/linux/pm.h:255:
+extern int device_power_down(enum system_state reason);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259325.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 7 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259325.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
