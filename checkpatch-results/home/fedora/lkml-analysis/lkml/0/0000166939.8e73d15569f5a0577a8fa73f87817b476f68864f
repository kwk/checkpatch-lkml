WARNING:TYPO_SPELLING: 'propogation' may be misspelled - perhaps 'propagation'?
#27: 
adds support for mount/umount propogation for autofs initiated operations,
                              ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#61: FILE: fs/namespace.c:360:
+	int actual_refs=0;
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#62: FILE: fs/namespace.c:361:
+	int minimum_refs=0;
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: fs/namespace.c:432:
+	if (mnt->mnt_parent != mnt &&
+		IS_MNT_SHARED(mnt->mnt_parent)) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#133: FILE: fs/namespace.c:434:
+		struct vfspnode *parent_pnode
+			= mnt->mnt_parent->mnt_pnode;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#134: FILE: fs/namespace.c:435:
+		BUG_ON(!parent_pnode);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: fs/namespace.c:437:
+		pnode_umount(parent_pnode,
+			mnt->mnt_mountpoint,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: fs/namespace.c:441:
+			BUG_ON(!mnt->mnt_pnode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/pnode.c:37:
+  __cacheline_aligned_in_smp DEFINE_SPINLOCK(vfspnode_lock);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#301: FILE: fs/pnode.c:37:
+  __cacheline_aligned_in_smp DEFINE_SPINLOCK(vfspnode_lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'vfspnode_lock' should also have an identifier name
#301: FILE: fs/pnode.c:37:
+  __cacheline_aligned_in_smp DEFINE_SPINLOCK(vfspnode_lock);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#322: FILE: fs/pnode.c:292:
+			ret = do_refcount_check(child_mnt, refcnt+1);
 			                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: fs/pnode.c:293:
+  ^I^Ielse$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: fs/pnode.c:293:
+  ^I^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/pnode.c:293:
+  ^I^Ielse$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#345: FILE: include/linux/pnode.h:89:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#345: FILE: include/linux/pnode.h:89:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#345: FILE: include/linux/pnode.h:89:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#345: FILE: include/linux/pnode.h:89:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#345: FILE: include/linux/pnode.h:89:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: include/linux/pnode.h:90:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,
+		struct vfsmount *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166939.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 5 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000166939.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
