WARNING:BAD_SIGN_OFF: Use a single space after To:
#33: 
To:       "Thunder from the hill" <thunder@ngforever.de>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject:  [PATCH] adding slist.h: simple single-linked-list helper functions

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: include/linux/slist.h:1:
+#ifndef _LINUX_SLIST_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_new' - possible side-effects?
#77: FILE: include/linux/slist.h:23:
+#define slist_add_front(_new, _head)   \
+do {                                   \
+       _new->next = _head;             \
+       _head = _new->next;             \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_new' may be better as '(_new)' to avoid precedence issues
#77: FILE: include/linux/slist.h:23:
+#define slist_add_front(_new, _head)   \
+do {                                   \
+       _new->next = _head;             \
+       _head = _new->next;             \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_head' - possible side-effects?
#77: FILE: include/linux/slist.h:23:
+#define slist_add_front(_new, _head)   \
+do {                                   \
+       _new->next = _head;             \
+       _head = _new->next;             \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#78: FILE: include/linux/slist.h:24:
+do {                                   \
+       _new->next = _head;             \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: include/linux/slist.h:25:
+       _new->next = _head;             \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: include/linux/slist.h:26:
+       _head = _new->next;             \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#83: FILE: include/linux/slist.h:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_new' - possible side-effects?
#93: FILE: include/linux/slist.h:39:
+#define slist_add(_new, _head)         \
+do {                                   \
+       _new->next = _head->next;       \
+       _head->next = _new;             \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_new' may be better as '(_new)' to avoid precedence issues
#93: FILE: include/linux/slist.h:39:
+#define slist_add(_new, _head)         \
+do {                                   \
+       _new->next = _head->next;       \
+       _head->next = _new;             \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_head' - possible side-effects?
#93: FILE: include/linux/slist.h:39:
+#define slist_add(_new, _head)         \
+do {                                   \
+       _new->next = _head->next;       \
+       _head->next = _new;             \
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_head' may be better as '(_head)' to avoid precedence issues
#93: FILE: include/linux/slist.h:39:
+#define slist_add(_new, _head)         \
+do {                                   \
+       _new->next = _head->next;       \
+       _head->next = _new;             \
+} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#94: FILE: include/linux/slist.h:40:
+do {                                   \
+       _new->next = _head->next;       \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: include/linux/slist.h:41:
+       _new->next = _head->next;       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: include/linux/slist.h:42:
+       _head->next = _new;             \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: include/linux/slist.h:45:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#105: FILE: include/linux/slist.h:51:
+#define slist_for_each(pos, head) \
+       for (pos = head, prefetch(pos->next); pos; \
+               pos = pos->next, prefetch(pos->next))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/linux/slist.h:52:
+       for (pos = head, prefetch(pos->next); pos; \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: include/linux/slist.h:53:
+               pos = pos->next, prefetch(pos->next))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: include/linux/slist.h:53:
+               pos = pos->next, prefetch(pos->next))$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: include/linux/slist.h:55:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438278.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 11 warnings, 11 checks, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000438278.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
